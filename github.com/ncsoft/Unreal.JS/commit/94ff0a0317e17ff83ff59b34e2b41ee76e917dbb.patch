From 94ff0a0317e17ff83ff59b34e2b41ee76e917dbb Mon Sep 17 00:00:00 2001
From: Hyeoncheol Cho <crocuis@gmail.com>
Date: Sun, 10 Feb 2019 02:51:52 +0900
Subject: [PATCH] fix for 4.21 update

---
 Examples/Config/DefaultEngine.ini             |     5 +
 Examples/Content/Scripts/aliases.js           |  1502 +-
 .../Scripts/extension-exampleWindow.js        |     2 +
 .../Scripts/extension-spiralGenerator.js      |     1 +
 Examples/Content/Scripts/helloUMG.js          |     1 +
 .../Content/Scripts/typings/_part_0_ue.d.ts   | 11741 ++++++-------
 .../Content/Scripts/typings/_part_1_ue.d.ts   | 14514 ++++++++--------
 Examples/Content/Scripts/typings/ue.d.ts      |  8985 +++++++++-
 Examples/JavascriptPlayground.uproject        |     2 +-
 9 files changed, 21755 insertions(+), 14998 deletions(-)

diff --git a/Examples/Config/DefaultEngine.ini b/Examples/Config/DefaultEngine.ini
index b5ec187..d957362 100644
--- a/Examples/Config/DefaultEngine.ini
+++ b/Examples/Config/DefaultEngine.ini
@@ -53,4 +53,9 @@ AppliedTargetedHardwareClass=Desktop
 DefaultGraphicsPerformance=Maximum
 AppliedDefaultGraphicsPerformance=Maximum
 
+[/Script/IOSRuntimeSettings.IOSRuntimeSettings]
+bSupportsPortraitOrientation=False
+bSupportsUpsideDownOrientation=False
+bSupportsLandscapeLeftOrientation=True
+PreferredLandscapeOrientation=LandscapeLeft
 
diff --git a/Examples/Content/Scripts/aliases.js b/Examples/Content/Scripts/aliases.js
index 51f9115..725f45d 100644
--- a/Examples/Content/Scripts/aliases.js
+++ b/Examples/Content/Scripts/aliases.js
@@ -1,4 +1,5 @@
 try { UObject.prototype.ToText = UObject.prototype.Conv_ObjectToText; } catch (e) {};
+try { UObject.prototype.ToString = UObject.prototype.Conv_SoftObjectReferenceToString; } catch (e) {};
 try { UObject.prototype.Equal = UObject.prototype.EqualEqual_SoftObjectReference; } catch (e) {};
 try { UObject.prototype.ClearTimerbyFunctionName = UObject.prototype.K2_ClearTimer; } catch (e) {};
 try { UObject.prototype.GetTimerElapsedTimebyFunctionName = UObject.prototype.K2_GetTimerElapsedTime; } catch (e) {};
@@ -14,123 +15,32 @@ try { UObject.prototype.ToString = UObject.prototype.Conv_ObjectToString; } catc
 try { UObject.prototype.Equal = UObject.prototype.EqualEqual_ObjectObject; } catch (e) {};
 try { UObject.prototype.NotEqual = UObject.prototype.NotEqual_ObjectObject; } catch (e) {};
 try { UObject.prototype.GetClass = UObject.prototype.GetObjectClass; } catch (e) {};
+try { Class.prototype.ToString = Class.prototype.Conv_SoftClassReferenceToString; } catch (e) {};
 try { Class.prototype.Equal = Class.prototype.EqualEqual_SoftClassReference; } catch (e) {};
 try { Class.prototype.GetDisplayName = Class.prototype.GetClassDisplayName; } catch (e) {};
 try { Class.prototype.NotEqual = Class.prototype.NotEqual_SoftClassReference; } catch (e) {};
 try { Class.prototype.Equal = Class.prototype.EqualEqual_ClassClass; } catch (e) {};
 try { Class.prototype.NotEqual = Class.prototype.NotEqual_ClassClass; } catch (e) {};
 try { let fnprepatch_0 = AssetRegistryHelpers.prototype.CreateAssetData;AssetRegistryHelpers.prototype.CreateAssetData = function (InAsset, bAllowBlueprintClass = false) { return fnprepatch_0.call(this, InAsset, bAllowBlueprintClass) }; } catch (e) {};
-try { let fnprepatch_1 = AssetRegistry.prototype.HasAssets;AssetRegistry.prototype.HasAssets = function (PackagePath, bRecursive = false) { return fnprepatch_1.call(this, PackagePath, bRecursive) }; } catch (e) {};
-try { let fnprepatch_2 = AssetRegistry.prototype.GetAssetsByPath;AssetRegistry.prototype.GetAssetsByPath = function (PackagePath, OutAssetData, bRecursive = false, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_2.call(this, PackagePath, OutAssetData, bRecursive, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
-try { let fnprepatch_3 = AssetRegistry.prototype.GetAssetsByPackageName;AssetRegistry.prototype.GetAssetsByPackageName = function (PackageName, OutAssetData, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_3.call(this, PackageName, OutAssetData, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
-try { let fnprepatch_4 = AssetRegistry.prototype.GetAssetsByClass;AssetRegistry.prototype.GetAssetsByClass = function (ClassName, OutAssetData, bSearchSubClasses = false) { return fnprepatch_4.call(this, ClassName, OutAssetData, bSearchSubClasses) }; } catch (e) {};
-try { let fnprepatch_5 = AssetRegistry.prototype.GetAssetByObjectPath;AssetRegistry.prototype.GetAssetByObjectPath = function (ObjectPath, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_5.call(this, ObjectPath, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
-try { let fnprepatch_6 = AssetRegistry.prototype.GetAllAssets;AssetRegistry.prototype.GetAllAssets = function (OutAssetData, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_6.call(this, OutAssetData, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
-try { let fnprepatch_7 = HeadMountedDisplayFunctionLibrary.prototype.SetWorldToMetersScale;HeadMountedDisplayFunctionLibrary.prototype.SetWorldToMetersScale = function (WorldContext, NewScale = 100) { return fnprepatch_7.call(this, WorldContext, NewScale) }; } catch (e) {};
-try { let fnprepatch_8 = HeadMountedDisplayFunctionLibrary.prototype.SetSpectatorScreenModeTexturePlusEyeLayout;HeadMountedDisplayFunctionLibrary.prototype.SetSpectatorScreenModeTexturePlusEyeLayout = function (EyeRectMin, EyeRectMax, TextureRectMin, TextureRectMax, bDrawEyeFirst = true, bClearBlack = false) { return fnprepatch_8.call(this, EyeRectMin, EyeRectMax, TextureRectMin, TextureRectMax, bDrawEyeFirst, bClearBlack) }; } catch (e) {};
-try { let fnprepatch_9 = HeadMountedDisplayFunctionLibrary.prototype.ResetOrientationAndPosition;HeadMountedDisplayFunctionLibrary.prototype.ResetOrientationAndPosition = function (Yaw = 0, Options = "OrientationAndPosition") { return fnprepatch_9.call(this, Yaw, Options) }; } catch (e) {};
-try { let fnprepatch_10 = HeadMountedDisplayFunctionLibrary.prototype.GetTrackingSensorParameters;HeadMountedDisplayFunctionLibrary.prototype.GetTrackingSensorParameters = function (Origin, Rotation, LeftFOV, RightFOV, TopFOV, BottomFOV, Distance, NearPlane, FarPlane, IsActive, Index = 0) { return fnprepatch_10.call(this, Origin, Rotation, LeftFOV, RightFOV, TopFOV, BottomFOV, Distance, NearPlane, FarPlane, IsActive, Index) }; } catch (e) {};
-try { let fnprepatch_11 = ActorComponent.prototype.SetActive;ActorComponent.prototype.SetActive = function (bNewActive, bReset = false) { return fnprepatch_11.call(this, bNewActive, bReset) }; } catch (e) {};
-try { let fnprepatch_12 = ActorComponent.prototype.Activate;ActorComponent.prototype.Activate = function (bReset = false) { return fnprepatch_12.call(this, bReset) }; } catch (e) {};
-try { ActorComponent.prototype.Tick = ActorComponent.prototype.ReceiveTick; } catch (e) {};
-try { ActorComponent.prototype.EndPlay = ActorComponent.prototype.ReceiveEndPlay; } catch (e) {};
-try { ActorComponent.prototype.BeginPlay = ActorComponent.prototype.ReceiveBeginPlay; } catch (e) {};
-try { ActorComponent.prototype.DestroyComponent = ActorComponent.prototype.K2_DestroyComponent; } catch (e) {};
-try { ActorComponent.prototype.IsComponentBeingDestroyed = ActorComponent.prototype.IsBeingDestroyed; } catch (e) {};
-try { let fnprepatch_13 = SceneComponent.prototype.ToggleVisibility;SceneComponent.prototype.ToggleVisibility = function (bPropagateToChildren = false) { return fnprepatch_13.call(this, bPropagateToChildren) }; } catch (e) {};
-try { let fnprepatch_14 = SceneComponent.prototype.SnapTo;SceneComponent.prototype.SnapTo = function (InParent, InSocketName = "None") { return fnprepatch_14.call(this, InParent, InSocketName) }; } catch (e) {};
-try { let fnprepatch_15 = SceneComponent.prototype.SetVisibility;SceneComponent.prototype.SetVisibility = function (bNewVisibility, bPropagateToChildren = false) { return fnprepatch_15.call(this, bNewVisibility, bPropagateToChildren) }; } catch (e) {};
-try { let fnprepatch_16 = SceneComponent.prototype.SetHiddenInGame;SceneComponent.prototype.SetHiddenInGame = function (NewHidden, bPropagateToChildren = false) { return fnprepatch_16.call(this, NewHidden, bPropagateToChildren) }; } catch (e) {};
-try { let fnprepatch_17 = SceneComponent.prototype.SetAbsolute;SceneComponent.prototype.SetAbsolute = function (bNewAbsoluteLocation = false, bNewAbsoluteRotation = false, bNewAbsoluteScale = false) { return fnprepatch_17.call(this, bNewAbsoluteLocation, bNewAbsoluteRotation, bNewAbsoluteScale) }; } catch (e) {};
-try { let fnprepatch_18 = SceneComponent.prototype.K2_DetachFromComponent;SceneComponent.prototype.K2_DetachFromComponent = function (LocationRule = "KeepRelative", RotationRule = "KeepRelative", ScaleRule = "KeepRelative", bCallModify = true) { return fnprepatch_18.call(this, LocationRule, RotationRule, ScaleRule, bCallModify) }; } catch (e) {};
-try { let fnprepatch_19 = SceneComponent.prototype.K2_AttachTo;SceneComponent.prototype.K2_AttachTo = function (InParent, InSocketName = "None", AttachType = "KeepRelativeOffset", bWeldSimulatedBodies = true) { return fnprepatch_19.call(this, InParent, InSocketName, AttachType, bWeldSimulatedBodies) }; } catch (e) {};
-try { let fnprepatch_20 = SceneComponent.prototype.IsSimulatingPhysics;SceneComponent.prototype.IsSimulatingPhysics = function (BoneName = "None") { return fnprepatch_20.call(this, BoneName) }; } catch (e) {};
-try { let fnprepatch_21 = SceneComponent.prototype.GetSocketTransform;SceneComponent.prototype.GetSocketTransform = function (InSocketName, TransformSpace = "RTS_World") { return fnprepatch_21.call(this, InSocketName, TransformSpace) }; } catch (e) {};
-try { let fnprepatch_22 = SceneComponent.prototype.DetachFromParent;SceneComponent.prototype.DetachFromParent = function (bMaintainWorldPosition = false, bCallModify = true) { return fnprepatch_22.call(this, bMaintainWorldPosition, bCallModify) }; } catch (e) {};
-try { SceneComponent.prototype.SetWorldTransform = SceneComponent.prototype.K2_SetWorldTransform; } catch (e) {};
-try { SceneComponent.prototype.SetWorldRotation = SceneComponent.prototype.K2_SetWorldRotation; } catch (e) {};
-try { SceneComponent.prototype.SetWorldLocationAndRotation = SceneComponent.prototype.K2_SetWorldLocationAndRotation; } catch (e) {};
-try { SceneComponent.prototype.SetWorldLocation = SceneComponent.prototype.K2_SetWorldLocation; } catch (e) {};
-try { SceneComponent.prototype.SetRelativeTransform = SceneComponent.prototype.K2_SetRelativeTransform; } catch (e) {};
-try { SceneComponent.prototype.SetRelativeRotation = SceneComponent.prototype.K2_SetRelativeRotation; } catch (e) {};
-try { SceneComponent.prototype.SetRelativeLocationAndRotation = SceneComponent.prototype.K2_SetRelativeLocationAndRotation; } catch (e) {};
-try { SceneComponent.prototype.SetRelativeLocation = SceneComponent.prototype.K2_SetRelativeLocation; } catch (e) {};
-try { SceneComponent.prototype.GetWorldTransform = SceneComponent.prototype.K2_GetComponentToWorld; } catch (e) {};
-try { SceneComponent.prototype.GetWorldScale = SceneComponent.prototype.K2_GetComponentScale; } catch (e) {};
-try { SceneComponent.prototype.GetWorldRotation = SceneComponent.prototype.K2_GetComponentRotation; } catch (e) {};
-try { SceneComponent.prototype.GetWorldLocation = SceneComponent.prototype.K2_GetComponentLocation; } catch (e) {};
-try { SceneComponent.prototype.DetachFromComponent = SceneComponent.prototype.K2_DetachFromComponent; } catch (e) {};
-try { SceneComponent.prototype.AttachToComponent = SceneComponent.prototype.K2_AttachToComponent; } catch (e) {};
-try { SceneComponent.prototype.AttachTo = SceneComponent.prototype.K2_AttachTo; } catch (e) {};
-try { SceneComponent.prototype.AddWorldTransform = SceneComponent.prototype.K2_AddWorldTransform; } catch (e) {};
-try { SceneComponent.prototype.AddWorldRotation = SceneComponent.prototype.K2_AddWorldRotation; } catch (e) {};
-try { SceneComponent.prototype.AddWorldOffset = SceneComponent.prototype.K2_AddWorldOffset; } catch (e) {};
-try { SceneComponent.prototype.AddRelativeRotation = SceneComponent.prototype.K2_AddRelativeRotation; } catch (e) {};
-try { SceneComponent.prototype.AddRelativeLocation = SceneComponent.prototype.K2_AddRelativeLocation; } catch (e) {};
-try { SceneComponent.prototype.AddLocalTransform = SceneComponent.prototype.K2_AddLocalTransform; } catch (e) {};
-try { SceneComponent.prototype.AddLocalRotation = SceneComponent.prototype.K2_AddLocalRotation; } catch (e) {};
-try { SceneComponent.prototype.AddLocalOffset = SceneComponent.prototype.K2_AddLocalOffset; } catch (e) {};
-try { let fnprepatch_23 = PrimitiveComponent.prototype.WakeRigidBody;PrimitiveComponent.prototype.WakeRigidBody = function (BoneName = "None") { return fnprepatch_23.call(this, BoneName) }; } catch (e) {};
-try { let fnprepatch_24 = PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocity;PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocity = function (NewMaxAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_24.call(this, NewMaxAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
-try { let fnprepatch_25 = PrimitiveComponent.prototype.SetPhysicsLinearVelocity;PrimitiveComponent.prototype.SetPhysicsLinearVelocity = function (NewVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_25.call(this, NewVel, bAddToCurrent, BoneName) }; } catch (e) {};
-try { let fnprepatch_26 = PrimitiveComponent.prototype.SetPhysicsAngularVelocity;PrimitiveComponent.prototype.SetPhysicsAngularVelocity = function (NewAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_26.call(this, NewAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
-try { let fnprepatch_27 = PrimitiveComponent.prototype.SetMassScale;PrimitiveComponent.prototype.SetMassScale = function (BoneName = "None", InMassScale = 1) { return fnprepatch_27.call(this, BoneName, InMassScale) }; } catch (e) {};
-try { let fnprepatch_28 = PrimitiveComponent.prototype.SetMassOverrideInKg;PrimitiveComponent.prototype.SetMassOverrideInKg = function (BoneName = "None", MassInKg = 1, bOverrideMass = true) { return fnprepatch_28.call(this, BoneName, MassInKg, bOverrideMass) }; } catch (e) {};
-try { let fnprepatch_29 = PrimitiveComponent.prototype.SetCenterOfMass;PrimitiveComponent.prototype.SetCenterOfMass = function (CenterOfMassOffset, BoneName = "None") { return fnprepatch_29.call(this, CenterOfMassOffset, BoneName) }; } catch (e) {};
-try { let fnprepatch_30 = PrimitiveComponent.prototype.SetBoundsScale;PrimitiveComponent.prototype.SetBoundsScale = function (NewBoundsScale = 1) { return fnprepatch_30.call(this, NewBoundsScale) }; } catch (e) {};
-try { let fnprepatch_31 = PrimitiveComponent.prototype.SetAllPhysicsLinearVelocity;PrimitiveComponent.prototype.SetAllPhysicsLinearVelocity = function (NewVel, bAddToCurrent = false) { return fnprepatch_31.call(this, NewVel, bAddToCurrent) }; } catch (e) {};
-try { let fnprepatch_32 = PrimitiveComponent.prototype.SetAllPhysicsAngularVelocity;PrimitiveComponent.prototype.SetAllPhysicsAngularVelocity = function (NewAngVel, bAddToCurrent = false) { return fnprepatch_32.call(this, NewAngVel, bAddToCurrent) }; } catch (e) {};
-try { let fnprepatch_33 = PrimitiveComponent.prototype.SetAllMassScale;PrimitiveComponent.prototype.SetAllMassScale = function (InMassScale = 1) { return fnprepatch_33.call(this, InMassScale) }; } catch (e) {};
-try { let fnprepatch_34 = PrimitiveComponent.prototype.ScaleByMomentOfInertia;PrimitiveComponent.prototype.ScaleByMomentOfInertia = function (InputVector, BoneName = "None") { return fnprepatch_34.call(this, InputVector, BoneName) }; } catch (e) {};
-try { let fnprepatch_35 = PrimitiveComponent.prototype.PutRigidBodyToSleep;PrimitiveComponent.prototype.PutRigidBodyToSleep = function (BoneName = "None") { return fnprepatch_35.call(this, BoneName) }; } catch (e) {};
-try { let fnprepatch_36 = PrimitiveComponent.prototype.GetPhysicsLinearVelocityAtPoint;PrimitiveComponent.prototype.GetPhysicsLinearVelocityAtPoint = function (Point, BoneName = "None") { return fnprepatch_36.call(this, Point, BoneName) }; } catch (e) {};
-try { let fnprepatch_37 = PrimitiveComponent.prototype.GetPhysicsLinearVelocity;PrimitiveComponent.prototype.GetPhysicsLinearVelocity = function (BoneName = "None") { return fnprepatch_37.call(this, BoneName) }; } catch (e) {};
-try { let fnprepatch_38 = PrimitiveComponent.prototype.GetPhysicsAngularVelocity;PrimitiveComponent.prototype.GetPhysicsAngularVelocity = function (BoneName = "None") { return fnprepatch_38.call(this, BoneName) }; } catch (e) {};
-try { let fnprepatch_39 = PrimitiveComponent.prototype.GetMassScale;PrimitiveComponent.prototype.GetMassScale = function (BoneName = "None") { return fnprepatch_39.call(this, BoneName) }; } catch (e) {};
-try { let fnprepatch_40 = PrimitiveComponent.prototype.GetInertiaTensor;PrimitiveComponent.prototype.GetInertiaTensor = function (BoneName = "None") { return fnprepatch_40.call(this, BoneName) }; } catch (e) {};
-try { let fnprepatch_41 = PrimitiveComponent.prototype.GetClosestPointOnCollision;PrimitiveComponent.prototype.GetClosestPointOnCollision = function (Point, OutPointOnBody, BoneName = "None") { return fnprepatch_41.call(this, Point, OutPointOnBody, BoneName) }; } catch (e) {};
-try { let fnprepatch_42 = PrimitiveComponent.prototype.GetCenterOfMass;PrimitiveComponent.prototype.GetCenterOfMass = function (BoneName = "None") { return fnprepatch_42.call(this, BoneName) }; } catch (e) {};
-try { let fnprepatch_43 = PrimitiveComponent.prototype.AddTorque;PrimitiveComponent.prototype.AddTorque = function (Torque, BoneName = "None", bAccelChange = false) { return fnprepatch_43.call(this, Torque, BoneName, bAccelChange) }; } catch (e) {};
-try { let fnprepatch_44 = PrimitiveComponent.prototype.AddRadialImpulse;PrimitiveComponent.prototype.AddRadialImpulse = function (Origin, Radius, Strength, Falloff, bVelChange = false) { return fnprepatch_44.call(this, Origin, Radius, Strength, Falloff, bVelChange) }; } catch (e) {};
-try { let fnprepatch_45 = PrimitiveComponent.prototype.AddRadialForce;PrimitiveComponent.prototype.AddRadialForce = function (Origin, Radius, Strength, Falloff, bAccelChange = false) { return fnprepatch_45.call(this, Origin, Radius, Strength, Falloff, bAccelChange) }; } catch (e) {};
-try { let fnprepatch_46 = PrimitiveComponent.prototype.AddImpulseAtLocation;PrimitiveComponent.prototype.AddImpulseAtLocation = function (Impulse, Location, BoneName = "None") { return fnprepatch_46.call(this, Impulse, Location, BoneName) }; } catch (e) {};
-try { let fnprepatch_47 = PrimitiveComponent.prototype.AddImpulse;PrimitiveComponent.prototype.AddImpulse = function (Impulse, BoneName = "None", bVelChange = false) { return fnprepatch_47.call(this, Impulse, BoneName, bVelChange) }; } catch (e) {};
-try { let fnprepatch_48 = PrimitiveComponent.prototype.AddForceAtLocationLocal;PrimitiveComponent.prototype.AddForceAtLocationLocal = function (Force, Location, BoneName = "None") { return fnprepatch_48.call(this, Force, Location, BoneName) }; } catch (e) {};
-try { let fnprepatch_49 = PrimitiveComponent.prototype.AddForceAtLocation;PrimitiveComponent.prototype.AddForceAtLocation = function (Force, Location, BoneName = "None") { return fnprepatch_49.call(this, Force, Location, BoneName) }; } catch (e) {};
-try { let fnprepatch_50 = PrimitiveComponent.prototype.AddForce;PrimitiveComponent.prototype.AddForce = function (Force, BoneName = "None", bAccelChange = false) { return fnprepatch_50.call(this, Force, BoneName, bAccelChange) }; } catch (e) {};
-try { let fnprepatch_51 = PrimitiveComponent.prototype.AddAngularImpulse;PrimitiveComponent.prototype.AddAngularImpulse = function (Impulse, BoneName = "None", bVelChange = false) { return fnprepatch_51.call(this, Impulse, BoneName, bVelChange) }; } catch (e) {};
-try { PrimitiveComponent.prototype.SetPhysicalMaterialOverride = PrimitiveComponent.prototype.SetPhysMaterialOverride; } catch (e) {};
-try { PrimitiveComponent.prototype.SetMaxDrawDistance = PrimitiveComponent.prototype.SetCullDistance; } catch (e) {};
-try { PrimitiveComponent.prototype.LineTraceComponent = PrimitiveComponent.prototype.K2_LineTraceComponent; } catch (e) {};
-try { PrimitiveComponent.prototype.IsQueryCollisionEnabled = PrimitiveComponent.prototype.K2_IsQueryCollisionEnabled; } catch (e) {};
-try { PrimitiveComponent.prototype.IsPhysicsCollisionEnabled = PrimitiveComponent.prototype.K2_IsPhysicsCollisionEnabled; } catch (e) {};
-try { PrimitiveComponent.prototype.IsCollisionEnabled = PrimitiveComponent.prototype.K2_IsCollisionEnabled; } catch (e) {};
-try { PrimitiveComponent.prototype.CreateMIDForElementFromMaterial = PrimitiveComponent.prototype.CreateAndSetMaterialInstanceDynamicFromMaterial; } catch (e) {};
-try { PrimitiveComponent.prototype.CreateMIDForElement = PrimitiveComponent.prototype.CreateAndSetMaterialInstanceDynamic; } catch (e) {};
-try { PrimitiveComponent.prototype.GetMoveIgnoreComponents = PrimitiveComponent.prototype.CopyArrayOfMoveIgnoreComponents; } catch (e) {};
-try { PrimitiveComponent.prototype.GetMoveIgnoreActors = PrimitiveComponent.prototype.CopyArrayOfMoveIgnoreActors; } catch (e) {};
-try { let fnprepatch_52 = MaterialEditingLibrary.prototype.CreateMaterialExpressionInFunction;MaterialEditingLibrary.prototype.CreateMaterialExpressionInFunction = function (MaterialFunction, ExpressionClass, NodePosX = 0, NodePosY = 0) { return fnprepatch_52.call(this, MaterialFunction, ExpressionClass, NodePosX, NodePosY) }; } catch (e) {};
-try { let fnprepatch_53 = MaterialEditingLibrary.prototype.CreateMaterialExpression;MaterialEditingLibrary.prototype.CreateMaterialExpression = function (Material, ExpressionClass, NodePosX = 0, NodePosY = 0) { return fnprepatch_53.call(this, Material, ExpressionClass, NodePosX, NodePosY) }; } catch (e) {};
-try { let fnprepatch_54 = GameplayTask_ClaimResource.prototype.ClaimResources;GameplayTask_ClaimResource.prototype.ClaimResources = function (InTaskOwner, ResourceClasses, Priority = 192, TaskInstanceName = "None") { return fnprepatch_54.call(this, InTaskOwner, ResourceClasses, Priority, TaskInstanceName) }; } catch (e) {};
-try { let fnprepatch_55 = GameplayTask_ClaimResource.prototype.ClaimResource;GameplayTask_ClaimResource.prototype.ClaimResource = function (InTaskOwner, ResourceClass, Priority = 192, TaskInstanceName = "None") { return fnprepatch_55.call(this, InTaskOwner, ResourceClass, Priority, TaskInstanceName) }; } catch (e) {};
-try { let fnprepatch_56 = GameplayTask_SpawnActor.prototype.SpawnActor;GameplayTask_SpawnActor.prototype.SpawnActor = function (TaskOwner, SpawnLocation, SpawnRotation, Class, bSpawnOnlyOnAuthority = false) { return fnprepatch_56.call(this, TaskOwner, SpawnLocation, SpawnRotation, Class, bSpawnOnlyOnAuthority) }; } catch (e) {};
-try { let fnprepatch_57 = GameplayTask_WaitDelay.prototype.TaskWaitDelay;GameplayTask_WaitDelay.prototype.TaskWaitDelay = function (TaskOwner, Time, Priority = 192) { return fnprepatch_57.call(this, TaskOwner, Time, Priority) }; } catch (e) {};
-try { BlueprintGameplayTagLibrary.prototype.NotEqual = BlueprintGameplayTagLibrary.prototype.NotEqual_GameplayTagContainer; } catch (e) {};
-try { BlueprintGameplayTagLibrary.NotEqual = BlueprintGameplayTagLibrary.NotEqual_GameplayTagContainer; } catch (e) {};
-try { BlueprintGameplayTagLibrary.prototype.NotEqual = BlueprintGameplayTagLibrary.prototype.NotEqual_GameplayTag; } catch (e) {};
-try { BlueprintGameplayTagLibrary.NotEqual = BlueprintGameplayTagLibrary.NotEqual_GameplayTag; } catch (e) {};
-try { BlueprintGameplayTagLibrary.prototype.Equal = BlueprintGameplayTagLibrary.prototype.EqualEqual_GameplayTagContainer; } catch (e) {};
-try { BlueprintGameplayTagLibrary.Equal = BlueprintGameplayTagLibrary.EqualEqual_GameplayTagContainer; } catch (e) {};
-try { BlueprintGameplayTagLibrary.prototype.Equal = BlueprintGameplayTagLibrary.prototype.EqualEqual_GameplayTag; } catch (e) {};
-try { BlueprintGameplayTagLibrary.Equal = BlueprintGameplayTagLibrary.EqualEqual_GameplayTag; } catch (e) {};
-try { let fnprepatch_58 = Actor.prototype.WasRecentlyRendered;Actor.prototype.WasRecentlyRendered = function (Tolerance = 0.20000000298023224) { return fnprepatch_58.call(this, Tolerance) }; } catch (e) {};
-try { let fnprepatch_59 = Actor.prototype.MakeNoise;Actor.prototype.MakeNoise = function (Loudness = 1, NoiseInstigator, NoiseLocation, MaxRange = 0, Tag = "None") { return fnprepatch_59.call(this, Loudness, NoiseInstigator, NoiseLocation, MaxRange, Tag) }; } catch (e) {};
-try { let fnprepatch_60 = Actor.prototype.K2_DetachFromActor;Actor.prototype.K2_DetachFromActor = function (LocationRule = "KeepRelative", RotationRule = "KeepRelative", ScaleRule = "KeepRelative") { return fnprepatch_60.call(this, LocationRule, RotationRule, ScaleRule) }; } catch (e) {};
-try { let fnprepatch_61 = Actor.prototype.K2_AttachRootComponentToActor;Actor.prototype.K2_AttachRootComponentToActor = function (InParentActor, InSocketName = "None", AttachLocationType = "KeepRelativeOffset", bWeldSimulatedBodies = true) { return fnprepatch_61.call(this, InParentActor, InSocketName, AttachLocationType, bWeldSimulatedBodies) }; } catch (e) {};
-try { let fnprepatch_62 = Actor.prototype.K2_AttachRootComponentTo;Actor.prototype.K2_AttachRootComponentTo = function (InParent, InSocketName = "None", AttachLocationType = "KeepRelativeOffset", bWeldSimulatedBodies = true) { return fnprepatch_62.call(this, InParent, InSocketName, AttachLocationType, bWeldSimulatedBodies) }; } catch (e) {};
-try { let fnprepatch_63 = Actor.prototype.IsTemporarilyHiddenInEditor;Actor.prototype.IsTemporarilyHiddenInEditor = function (bIncludeParent = false) { return fnprepatch_63.call(this, bIncludeParent) }; } catch (e) {};
-try { let fnprepatch_64 = Actor.prototype.GetAllChildActors;Actor.prototype.GetAllChildActors = function (ChildActors, bIncludeDescendants = true) { return fnprepatch_64.call(this, ChildActors, bIncludeDescendants) }; } catch (e) {};
-try { let fnprepatch_65 = Actor.prototype.DetachRootComponentFromParent;Actor.prototype.DetachRootComponentFromParent = function (bMaintainWorldPosition = true) { return fnprepatch_65.call(this, bMaintainWorldPosition) }; } catch (e) {};
+try { let fnprepatch_1 = AssetRegistry.prototype.ScanPathsSynchronous;AssetRegistry.prototype.ScanPathsSynchronous = function (InPaths, bForceRescan = false) { return fnprepatch_1.call(this, InPaths, bForceRescan) }; } catch (e) {};
+try { let fnprepatch_2 = AssetRegistry.prototype.ScanFilesSynchronous;AssetRegistry.prototype.ScanFilesSynchronous = function (InFilePaths, bForceRescan = false) { return fnprepatch_2.call(this, InFilePaths, bForceRescan) }; } catch (e) {};
+try { let fnprepatch_3 = AssetRegistry.prototype.HasAssets;AssetRegistry.prototype.HasAssets = function (PackagePath, bRecursive = false) { return fnprepatch_3.call(this, PackagePath, bRecursive) }; } catch (e) {};
+try { let fnprepatch_4 = AssetRegistry.prototype.GetAssetsByPath;AssetRegistry.prototype.GetAssetsByPath = function (PackagePath, OutAssetData, bRecursive = false, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_4.call(this, PackagePath, OutAssetData, bRecursive, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
+try { let fnprepatch_5 = AssetRegistry.prototype.GetAssetsByPackageName;AssetRegistry.prototype.GetAssetsByPackageName = function (PackageName, OutAssetData, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_5.call(this, PackageName, OutAssetData, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
+try { let fnprepatch_6 = AssetRegistry.prototype.GetAssetsByClass;AssetRegistry.prototype.GetAssetsByClass = function (ClassName, OutAssetData, bSearchSubClasses = false) { return fnprepatch_6.call(this, ClassName, OutAssetData, bSearchSubClasses) }; } catch (e) {};
+try { let fnprepatch_7 = AssetRegistry.prototype.GetAssetByObjectPath;AssetRegistry.prototype.GetAssetByObjectPath = function (ObjectPath, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_7.call(this, ObjectPath, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
+try { let fnprepatch_8 = AssetRegistry.prototype.GetAllAssets;AssetRegistry.prototype.GetAllAssets = function (OutAssetData, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_8.call(this, OutAssetData, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
+try { let fnprepatch_9 = Actor.prototype.WasRecentlyRendered;Actor.prototype.WasRecentlyRendered = function (Tolerance = 0.20000000298023224) { return fnprepatch_9.call(this, Tolerance) }; } catch (e) {};
+try { let fnprepatch_10 = Actor.prototype.SetActorLabel;Actor.prototype.SetActorLabel = function (NewActorLabel, bMarkDirty = true) { return fnprepatch_10.call(this, NewActorLabel, bMarkDirty) }; } catch (e) {};
+try { let fnprepatch_11 = Actor.prototype.PrestreamTextures;Actor.prototype.PrestreamTextures = function (Seconds, bEnableStreaming, CinematicTextureGroups = 0) { return fnprepatch_11.call(this, Seconds, bEnableStreaming, CinematicTextureGroups) }; } catch (e) {};
+try { let fnprepatch_12 = Actor.prototype.MakeNoise;Actor.prototype.MakeNoise = function (Loudness = 1, NoiseInstigator = undefined, NoiseLocation, MaxRange = 0, Tag = "None") { return fnprepatch_12.call(this, Loudness, NoiseInstigator, NoiseLocation, MaxRange, Tag) }; } catch (e) {};
+try { let fnprepatch_13 = Actor.prototype.K2_DetachFromActor;Actor.prototype.K2_DetachFromActor = function (LocationRule = "KeepRelative", RotationRule = "KeepRelative", ScaleRule = "KeepRelative") { return fnprepatch_13.call(this, LocationRule, RotationRule, ScaleRule) }; } catch (e) {};
+try { let fnprepatch_14 = Actor.prototype.K2_AttachRootComponentToActor;Actor.prototype.K2_AttachRootComponentToActor = function (InParentActor, InSocketName = "None", AttachLocationType = "KeepRelativeOffset", bWeldSimulatedBodies = true) { return fnprepatch_14.call(this, InParentActor, InSocketName, AttachLocationType, bWeldSimulatedBodies) }; } catch (e) {};
+try { let fnprepatch_15 = Actor.prototype.K2_AttachRootComponentTo;Actor.prototype.K2_AttachRootComponentTo = function (InParent, InSocketName = "None", AttachLocationType = "KeepRelativeOffset", bWeldSimulatedBodies = true) { return fnprepatch_15.call(this, InParent, InSocketName, AttachLocationType, bWeldSimulatedBodies) }; } catch (e) {};
+try { let fnprepatch_16 = Actor.prototype.IsTemporarilyHiddenInEditor;Actor.prototype.IsTemporarilyHiddenInEditor = function (bIncludeParent = false) { return fnprepatch_16.call(this, bIncludeParent) }; } catch (e) {};
+try { let fnprepatch_17 = Actor.prototype.GetOverlappingActors;Actor.prototype.GetOverlappingActors = function (OverlappingActors, ClassFilter = null) { return fnprepatch_17.call(this, OverlappingActors, ClassFilter) }; } catch (e) {};
+try { let fnprepatch_18 = Actor.prototype.GetAllChildActors;Actor.prototype.GetAllChildActors = function (ChildActors, bIncludeDescendants = true) { return fnprepatch_18.call(this, ChildActors, bIncludeDescendants) }; } catch (e) {};
+try { let fnprepatch_19 = Actor.prototype.DetachRootComponentFromParent;Actor.prototype.DetachRootComponentFromParent = function (bMaintainWorldPosition = true) { return fnprepatch_19.call(this, bMaintainWorldPosition) }; } catch (e) {};
 try { Actor.prototype.ConstructionScript = Actor.prototype.UserConstructionScript; } catch (e) {};
 try { Actor.prototype.SnapActorTo = Actor.prototype.SnapRootComponentTo; } catch (e) {};
 try { Actor.prototype.Tick = Actor.prototype.ReceiveTick; } catch (e) {};
@@ -179,102 +89,305 @@ try { Actor.prototype.AddActorLocalRotation = Actor.prototype.K2_AddActorLocalRo
 try { Actor.prototype.AddActorLocalOffset = Actor.prototype.K2_AddActorLocalOffset; } catch (e) {};
 try { Actor.prototype.GetActorTransform = Actor.prototype.GetTransform; } catch (e) {};
 try { Actor.prototype.DetachActorFromActor = Actor.prototype.DetachRootComponentFromParent; } catch (e) {};
-try { let fnprepatch_66 = AIBlueprintHelperLibrary.prototype.SpawnAIFromClass;AIBlueprintHelperLibrary.prototype.SpawnAIFromClass = function (WorldContextObject, PawnClass, BehaviorTree, Location, Rotation, bNoCollisionFail = false) { return fnprepatch_66.call(this, WorldContextObject, PawnClass, BehaviorTree, Location, Rotation, bNoCollisionFail) }; } catch (e) {};
-try { let fnprepatch_67 = AIBlueprintHelperLibrary.prototype.SendAIMessage;AIBlueprintHelperLibrary.prototype.SendAIMessage = function (Target, Message, MessageSource, bSuccess = true) { return fnprepatch_67.call(this, Target, Message, MessageSource, bSuccess) }; } catch (e) {};
-try { let fnprepatch_68 = AIBlueprintHelperLibrary.prototype.CreateMoveToProxyObject;AIBlueprintHelperLibrary.prototype.CreateMoveToProxyObject = function (WorldContextObject, Pawn, Destination, TargetActor, AcceptanceRadius = 5, bStopOnOverlap = false) { return fnprepatch_68.call(this, WorldContextObject, Pawn, Destination, TargetActor, AcceptanceRadius, bStopOnOverlap) }; } catch (e) {};
-try { let fnprepatch_69 = Controller.prototype.LineOfSightTo;Controller.prototype.LineOfSightTo = function (Other, ViewPoint, bAlternateChecks = false) { return fnprepatch_69.call(this, Other, ViewPoint, bAlternateChecks) }; } catch (e) {};
+try { let fnprepatch_20 = Widget.prototype.HasMouseCaptureByUser;Widget.prototype.HasMouseCaptureByUser = function (UserIndex, PointerIndex = -1) { return fnprepatch_20.call(this, UserIndex, PointerIndex) }; } catch (e) {};
+try { Widget.prototype.HasAnyUserFocusedDescendants = Widget.prototype.HasFocusedDescendants; } catch (e) {};
+try { let fnprepatch_21 = UserWidget.prototype.SetPositionInViewport;UserWidget.prototype.SetPositionInViewport = function (Position, bRemoveDPIScale = true) { return fnprepatch_21.call(this, Position, bRemoveDPIScale) }; } catch (e) {};
+try { let fnprepatch_22 = UserWidget.prototype.SetPlaybackSpeed;UserWidget.prototype.SetPlaybackSpeed = function (InAnimation, PlaybackSpeed = 1) { return fnprepatch_22.call(this, InAnimation, PlaybackSpeed) }; } catch (e) {};
+try { let fnprepatch_23 = UserWidget.prototype.PlayAnimationTo;UserWidget.prototype.PlayAnimationTo = function (InAnimation, StartAtTime = 0, EndAtTime = 0, NumLoopsToPlay = 1, PlayMode = "Forward", PlaybackSpeed = 1) { return fnprepatch_23.call(this, InAnimation, StartAtTime, EndAtTime, NumLoopsToPlay, PlayMode, PlaybackSpeed) }; } catch (e) {};
+try { let fnprepatch_24 = UserWidget.prototype.PlayAnimation;UserWidget.prototype.PlayAnimation = function (InAnimation, StartAtTime = 0, NumLoopsToPlay = 1, PlayMode = "Forward", PlaybackSpeed = 1) { return fnprepatch_24.call(this, InAnimation, StartAtTime, NumLoopsToPlay, PlayMode, PlaybackSpeed) }; } catch (e) {};
+try { let fnprepatch_25 = UserWidget.prototype.AddToViewport;UserWidget.prototype.AddToViewport = function (ZOrder = 0) { return fnprepatch_25.call(this, ZOrder) }; } catch (e) {};
+try { let fnprepatch_26 = UserWidget.prototype.AddToPlayerScreen;UserWidget.prototype.AddToPlayerScreen = function (ZOrder = 0) { return fnprepatch_26.call(this, ZOrder) }; } catch (e) {};
+try { let fnprepatch_27 = ActorComponent.prototype.SetActive;ActorComponent.prototype.SetActive = function (bNewActive, bReset = false) { return fnprepatch_27.call(this, bNewActive, bReset) }; } catch (e) {};
+try { let fnprepatch_28 = ActorComponent.prototype.Activate;ActorComponent.prototype.Activate = function (bReset = false) { return fnprepatch_28.call(this, bReset) }; } catch (e) {};
+try { ActorComponent.prototype.Tick = ActorComponent.prototype.ReceiveTick; } catch (e) {};
+try { ActorComponent.prototype.EndPlay = ActorComponent.prototype.ReceiveEndPlay; } catch (e) {};
+try { ActorComponent.prototype.BeginPlay = ActorComponent.prototype.ReceiveBeginPlay; } catch (e) {};
+try { ActorComponent.prototype.DestroyComponent = ActorComponent.prototype.K2_DestroyComponent; } catch (e) {};
+try { ActorComponent.prototype.IsComponentBeingDestroyed = ActorComponent.prototype.IsBeingDestroyed; } catch (e) {};
+try { let fnprepatch_29 = SceneComponent.prototype.ToggleVisibility;SceneComponent.prototype.ToggleVisibility = function (bPropagateToChildren = false) { return fnprepatch_29.call(this, bPropagateToChildren) }; } catch (e) {};
+try { let fnprepatch_30 = SceneComponent.prototype.SnapTo;SceneComponent.prototype.SnapTo = function (InParent, InSocketName = "None") { return fnprepatch_30.call(this, InParent, InSocketName) }; } catch (e) {};
+try { let fnprepatch_31 = SceneComponent.prototype.SetVisibility;SceneComponent.prototype.SetVisibility = function (bNewVisibility, bPropagateToChildren = false) { return fnprepatch_31.call(this, bNewVisibility, bPropagateToChildren) }; } catch (e) {};
+try { let fnprepatch_32 = SceneComponent.prototype.SetHiddenInGame;SceneComponent.prototype.SetHiddenInGame = function (NewHidden, bPropagateToChildren = false) { return fnprepatch_32.call(this, NewHidden, bPropagateToChildren) }; } catch (e) {};
+try { let fnprepatch_33 = SceneComponent.prototype.SetAbsolute;SceneComponent.prototype.SetAbsolute = function (bNewAbsoluteLocation = false, bNewAbsoluteRotation = false, bNewAbsoluteScale = false) { return fnprepatch_33.call(this, bNewAbsoluteLocation, bNewAbsoluteRotation, bNewAbsoluteScale) }; } catch (e) {};
+try { let fnprepatch_34 = SceneComponent.prototype.K2_DetachFromComponent;SceneComponent.prototype.K2_DetachFromComponent = function (LocationRule = "KeepRelative", RotationRule = "KeepRelative", ScaleRule = "KeepRelative", bCallModify = true) { return fnprepatch_34.call(this, LocationRule, RotationRule, ScaleRule, bCallModify) }; } catch (e) {};
+try { let fnprepatch_35 = SceneComponent.prototype.K2_AttachTo;SceneComponent.prototype.K2_AttachTo = function (InParent, InSocketName = "None", AttachType = "KeepRelativeOffset", bWeldSimulatedBodies = true) { return fnprepatch_35.call(this, InParent, InSocketName, AttachType, bWeldSimulatedBodies) }; } catch (e) {};
+try { let fnprepatch_36 = SceneComponent.prototype.IsSimulatingPhysics;SceneComponent.prototype.IsSimulatingPhysics = function (BoneName = "None") { return fnprepatch_36.call(this, BoneName) }; } catch (e) {};
+try { let fnprepatch_37 = SceneComponent.prototype.GetSocketTransform;SceneComponent.prototype.GetSocketTransform = function (InSocketName, TransformSpace = "RTS_World") { return fnprepatch_37.call(this, InSocketName, TransformSpace) }; } catch (e) {};
+try { let fnprepatch_38 = SceneComponent.prototype.DetachFromParent;SceneComponent.prototype.DetachFromParent = function (bMaintainWorldPosition = false, bCallModify = true) { return fnprepatch_38.call(this, bMaintainWorldPosition, bCallModify) }; } catch (e) {};
+try { SceneComponent.prototype.SetWorldTransform = SceneComponent.prototype.K2_SetWorldTransform; } catch (e) {};
+try { SceneComponent.prototype.SetWorldRotation = SceneComponent.prototype.K2_SetWorldRotation; } catch (e) {};
+try { SceneComponent.prototype.SetWorldLocationAndRotation = SceneComponent.prototype.K2_SetWorldLocationAndRotation; } catch (e) {};
+try { SceneComponent.prototype.SetWorldLocation = SceneComponent.prototype.K2_SetWorldLocation; } catch (e) {};
+try { SceneComponent.prototype.SetRelativeTransform = SceneComponent.prototype.K2_SetRelativeTransform; } catch (e) {};
+try { SceneComponent.prototype.SetRelativeRotation = SceneComponent.prototype.K2_SetRelativeRotation; } catch (e) {};
+try { SceneComponent.prototype.SetRelativeLocationAndRotation = SceneComponent.prototype.K2_SetRelativeLocationAndRotation; } catch (e) {};
+try { SceneComponent.prototype.SetRelativeLocation = SceneComponent.prototype.K2_SetRelativeLocation; } catch (e) {};
+try { SceneComponent.prototype.GetWorldTransform = SceneComponent.prototype.K2_GetComponentToWorld; } catch (e) {};
+try { SceneComponent.prototype.GetWorldScale = SceneComponent.prototype.K2_GetComponentScale; } catch (e) {};
+try { SceneComponent.prototype.GetWorldRotation = SceneComponent.prototype.K2_GetComponentRotation; } catch (e) {};
+try { SceneComponent.prototype.GetWorldLocation = SceneComponent.prototype.K2_GetComponentLocation; } catch (e) {};
+try { SceneComponent.prototype.DetachFromComponent = SceneComponent.prototype.K2_DetachFromComponent; } catch (e) {};
+try { SceneComponent.prototype.AttachToComponent = SceneComponent.prototype.K2_AttachToComponent; } catch (e) {};
+try { SceneComponent.prototype.AttachTo = SceneComponent.prototype.K2_AttachTo; } catch (e) {};
+try { SceneComponent.prototype.AddWorldTransform = SceneComponent.prototype.K2_AddWorldTransform; } catch (e) {};
+try { SceneComponent.prototype.AddWorldRotation = SceneComponent.prototype.K2_AddWorldRotation; } catch (e) {};
+try { SceneComponent.prototype.AddWorldOffset = SceneComponent.prototype.K2_AddWorldOffset; } catch (e) {};
+try { SceneComponent.prototype.AddRelativeRotation = SceneComponent.prototype.K2_AddRelativeRotation; } catch (e) {};
+try { SceneComponent.prototype.AddRelativeLocation = SceneComponent.prototype.K2_AddRelativeLocation; } catch (e) {};
+try { SceneComponent.prototype.AddLocalTransform = SceneComponent.prototype.K2_AddLocalTransform; } catch (e) {};
+try { SceneComponent.prototype.AddLocalRotation = SceneComponent.prototype.K2_AddLocalRotation; } catch (e) {};
+try { SceneComponent.prototype.AddLocalOffset = SceneComponent.prototype.K2_AddLocalOffset; } catch (e) {};
+try { let fnprepatch_39 = PrimitiveComponent.prototype.WakeRigidBody;PrimitiveComponent.prototype.WakeRigidBody = function (BoneName = "None") { return fnprepatch_39.call(this, BoneName) }; } catch (e) {};
+try { let fnprepatch_40 = PrimitiveComponent.prototype.SetUseCCD;PrimitiveComponent.prototype.SetUseCCD = function (InUseCCD, BoneName = "None") { return fnprepatch_40.call(this, InUseCCD, BoneName) }; } catch (e) {};
+try { let fnprepatch_41 = PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocityInRadians;PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocityInRadians = function (NewMaxAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_41.call(this, NewMaxAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
+try { let fnprepatch_42 = PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocityInDegrees;PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocityInDegrees = function (NewMaxAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_42.call(this, NewMaxAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
+try { let fnprepatch_43 = PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocity;PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocity = function (NewMaxAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_43.call(this, NewMaxAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
+try { let fnprepatch_44 = PrimitiveComponent.prototype.SetPhysicsLinearVelocity;PrimitiveComponent.prototype.SetPhysicsLinearVelocity = function (NewVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_44.call(this, NewVel, bAddToCurrent, BoneName) }; } catch (e) {};
+try { let fnprepatch_45 = PrimitiveComponent.prototype.SetPhysicsAngularVelocityInRadians;PrimitiveComponent.prototype.SetPhysicsAngularVelocityInRadians = function (NewAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_45.call(this, NewAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
+try { let fnprepatch_46 = PrimitiveComponent.prototype.SetPhysicsAngularVelocityInDegrees;PrimitiveComponent.prototype.SetPhysicsAngularVelocityInDegrees = function (NewAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_46.call(this, NewAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
+try { let fnprepatch_47 = PrimitiveComponent.prototype.SetPhysicsAngularVelocity;PrimitiveComponent.prototype.SetPhysicsAngularVelocity = function (NewAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_47.call(this, NewAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
+try { let fnprepatch_48 = PrimitiveComponent.prototype.SetMassScale;PrimitiveComponent.prototype.SetMassScale = function (BoneName = "None", InMassScale = 1) { return fnprepatch_48.call(this, BoneName, InMassScale) }; } catch (e) {};
+try { let fnprepatch_49 = PrimitiveComponent.prototype.SetMassOverrideInKg;PrimitiveComponent.prototype.SetMassOverrideInKg = function (BoneName = "None", MassInKg = 1, bOverrideMass = true) { return fnprepatch_49.call(this, BoneName, MassInKg, bOverrideMass) }; } catch (e) {};
+try { let fnprepatch_50 = PrimitiveComponent.prototype.SetCenterOfMass;PrimitiveComponent.prototype.SetCenterOfMass = function (CenterOfMassOffset, BoneName = "None") { return fnprepatch_50.call(this, CenterOfMassOffset, BoneName) }; } catch (e) {};
+try { let fnprepatch_51 = PrimitiveComponent.prototype.SetBoundsScale;PrimitiveComponent.prototype.SetBoundsScale = function (NewBoundsScale = 1) { return fnprepatch_51.call(this, NewBoundsScale) }; } catch (e) {};
+try { let fnprepatch_52 = PrimitiveComponent.prototype.SetAllPhysicsLinearVelocity;PrimitiveComponent.prototype.SetAllPhysicsLinearVelocity = function (NewVel, bAddToCurrent = false) { return fnprepatch_52.call(this, NewVel, bAddToCurrent) }; } catch (e) {};
+try { let fnprepatch_53 = PrimitiveComponent.prototype.SetAllPhysicsAngularVelocityInRadians;PrimitiveComponent.prototype.SetAllPhysicsAngularVelocityInRadians = function (NewAngVel, bAddToCurrent = false) { return fnprepatch_53.call(this, NewAngVel, bAddToCurrent) }; } catch (e) {};
+try { let fnprepatch_54 = PrimitiveComponent.prototype.SetAllPhysicsAngularVelocityInDegrees;PrimitiveComponent.prototype.SetAllPhysicsAngularVelocityInDegrees = function (NewAngVel, bAddToCurrent = false) { return fnprepatch_54.call(this, NewAngVel, bAddToCurrent) }; } catch (e) {};
+try { let fnprepatch_55 = PrimitiveComponent.prototype.SetAllPhysicsAngularVelocity;PrimitiveComponent.prototype.SetAllPhysicsAngularVelocity = function (NewAngVel, bAddToCurrent = false) { return fnprepatch_55.call(this, NewAngVel, bAddToCurrent) }; } catch (e) {};
+try { let fnprepatch_56 = PrimitiveComponent.prototype.SetAllMassScale;PrimitiveComponent.prototype.SetAllMassScale = function (InMassScale = 1) { return fnprepatch_56.call(this, InMassScale) }; } catch (e) {};
+try { let fnprepatch_57 = PrimitiveComponent.prototype.ScaleByMomentOfInertia;PrimitiveComponent.prototype.ScaleByMomentOfInertia = function (InputVector, BoneName = "None") { return fnprepatch_57.call(this, InputVector, BoneName) }; } catch (e) {};
+try { let fnprepatch_58 = PrimitiveComponent.prototype.PutRigidBodyToSleep;PrimitiveComponent.prototype.PutRigidBodyToSleep = function (BoneName = "None") { return fnprepatch_58.call(this, BoneName) }; } catch (e) {};
+try { let fnprepatch_59 = PrimitiveComponent.prototype.GetPhysicsLinearVelocityAtPoint;PrimitiveComponent.prototype.GetPhysicsLinearVelocityAtPoint = function (Point, BoneName = "None") { return fnprepatch_59.call(this, Point, BoneName) }; } catch (e) {};
+try { let fnprepatch_60 = PrimitiveComponent.prototype.GetPhysicsLinearVelocity;PrimitiveComponent.prototype.GetPhysicsLinearVelocity = function (BoneName = "None") { return fnprepatch_60.call(this, BoneName) }; } catch (e) {};
+try { let fnprepatch_61 = PrimitiveComponent.prototype.GetPhysicsAngularVelocityInRadians;PrimitiveComponent.prototype.GetPhysicsAngularVelocityInRadians = function (BoneName = "None") { return fnprepatch_61.call(this, BoneName) }; } catch (e) {};
+try { let fnprepatch_62 = PrimitiveComponent.prototype.GetPhysicsAngularVelocityInDegrees;PrimitiveComponent.prototype.GetPhysicsAngularVelocityInDegrees = function (BoneName = "None") { return fnprepatch_62.call(this, BoneName) }; } catch (e) {};
+try { let fnprepatch_63 = PrimitiveComponent.prototype.GetPhysicsAngularVelocity;PrimitiveComponent.prototype.GetPhysicsAngularVelocity = function (BoneName = "None") { return fnprepatch_63.call(this, BoneName) }; } catch (e) {};
+try { let fnprepatch_64 = PrimitiveComponent.prototype.GetOverlappingActors;PrimitiveComponent.prototype.GetOverlappingActors = function (OverlappingActors, ClassFilter = null) { return fnprepatch_64.call(this, OverlappingActors, ClassFilter) }; } catch (e) {};
+try { let fnprepatch_65 = PrimitiveComponent.prototype.GetMassScale;PrimitiveComponent.prototype.GetMassScale = function (BoneName = "None") { return fnprepatch_65.call(this, BoneName) }; } catch (e) {};
+try { let fnprepatch_66 = PrimitiveComponent.prototype.GetInertiaTensor;PrimitiveComponent.prototype.GetInertiaTensor = function (BoneName = "None") { return fnprepatch_66.call(this, BoneName) }; } catch (e) {};
+try { let fnprepatch_67 = PrimitiveComponent.prototype.GetClosestPointOnCollision;PrimitiveComponent.prototype.GetClosestPointOnCollision = function (Point, OutPointOnBody, BoneName = "None") { return fnprepatch_67.call(this, Point, OutPointOnBody, BoneName) }; } catch (e) {};
+try { let fnprepatch_68 = PrimitiveComponent.prototype.GetCenterOfMass;PrimitiveComponent.prototype.GetCenterOfMass = function (BoneName = "None") { return fnprepatch_68.call(this, BoneName) }; } catch (e) {};
+try { let fnprepatch_69 = PrimitiveComponent.prototype.CreateDynamicMaterialInstance;PrimitiveComponent.prototype.CreateDynamicMaterialInstance = function (ElementIndex, SourceMaterial = undefined, OptionalName = "None") { return fnprepatch_69.call(this, ElementIndex, SourceMaterial, OptionalName) }; } catch (e) {};
+try { let fnprepatch_70 = PrimitiveComponent.prototype.AddTorqueInRadians;PrimitiveComponent.prototype.AddTorqueInRadians = function (Torque, BoneName = "None", bAccelChange = false) { return fnprepatch_70.call(this, Torque, BoneName, bAccelChange) }; } catch (e) {};
+try { let fnprepatch_71 = PrimitiveComponent.prototype.AddTorqueInDegrees;PrimitiveComponent.prototype.AddTorqueInDegrees = function (Torque, BoneName = "None", bAccelChange = false) { return fnprepatch_71.call(this, Torque, BoneName, bAccelChange) }; } catch (e) {};
+try { let fnprepatch_72 = PrimitiveComponent.prototype.AddTorque;PrimitiveComponent.prototype.AddTorque = function (Torque, BoneName = "None", bAccelChange = false) { return fnprepatch_72.call(this, Torque, BoneName, bAccelChange) }; } catch (e) {};
+try { let fnprepatch_73 = PrimitiveComponent.prototype.AddRadialImpulse;PrimitiveComponent.prototype.AddRadialImpulse = function (Origin, Radius, Strength, Falloff, bVelChange = false) { return fnprepatch_73.call(this, Origin, Radius, Strength, Falloff, bVelChange) }; } catch (e) {};
+try { let fnprepatch_74 = PrimitiveComponent.prototype.AddRadialForce;PrimitiveComponent.prototype.AddRadialForce = function (Origin, Radius, Strength, Falloff, bAccelChange = false) { return fnprepatch_74.call(this, Origin, Radius, Strength, Falloff, bAccelChange) }; } catch (e) {};
+try { let fnprepatch_75 = PrimitiveComponent.prototype.AddImpulseAtLocation;PrimitiveComponent.prototype.AddImpulseAtLocation = function (Impulse, Location, BoneName = "None") { return fnprepatch_75.call(this, Impulse, Location, BoneName) }; } catch (e) {};
+try { let fnprepatch_76 = PrimitiveComponent.prototype.AddImpulse;PrimitiveComponent.prototype.AddImpulse = function (Impulse, BoneName = "None", bVelChange = false) { return fnprepatch_76.call(this, Impulse, BoneName, bVelChange) }; } catch (e) {};
+try { let fnprepatch_77 = PrimitiveComponent.prototype.AddForceAtLocationLocal;PrimitiveComponent.prototype.AddForceAtLocationLocal = function (Force, Location, BoneName = "None") { return fnprepatch_77.call(this, Force, Location, BoneName) }; } catch (e) {};
+try { let fnprepatch_78 = PrimitiveComponent.prototype.AddForceAtLocation;PrimitiveComponent.prototype.AddForceAtLocation = function (Force, Location, BoneName = "None") { return fnprepatch_78.call(this, Force, Location, BoneName) }; } catch (e) {};
+try { let fnprepatch_79 = PrimitiveComponent.prototype.AddForce;PrimitiveComponent.prototype.AddForce = function (Force, BoneName = "None", bAccelChange = false) { return fnprepatch_79.call(this, Force, BoneName, bAccelChange) }; } catch (e) {};
+try { let fnprepatch_80 = PrimitiveComponent.prototype.AddAngularImpulseInRadians;PrimitiveComponent.prototype.AddAngularImpulseInRadians = function (Impulse, BoneName = "None", bVelChange = false) { return fnprepatch_80.call(this, Impulse, BoneName, bVelChange) }; } catch (e) {};
+try { let fnprepatch_81 = PrimitiveComponent.prototype.AddAngularImpulseInDegrees;PrimitiveComponent.prototype.AddAngularImpulseInDegrees = function (Impulse, BoneName = "None", bVelChange = false) { return fnprepatch_81.call(this, Impulse, BoneName, bVelChange) }; } catch (e) {};
+try { let fnprepatch_82 = PrimitiveComponent.prototype.AddAngularImpulse;PrimitiveComponent.prototype.AddAngularImpulse = function (Impulse, BoneName = "None", bVelChange = false) { return fnprepatch_82.call(this, Impulse, BoneName, bVelChange) }; } catch (e) {};
+try { PrimitiveComponent.prototype.SetPhysicalMaterialOverride = PrimitiveComponent.prototype.SetPhysMaterialOverride; } catch (e) {};
+try { PrimitiveComponent.prototype.SetMaxDrawDistance = PrimitiveComponent.prototype.SetCullDistance; } catch (e) {};
+try { PrimitiveComponent.prototype.SphereTraceComponent = PrimitiveComponent.prototype.K2_SphereTraceComponent; } catch (e) {};
+try { PrimitiveComponent.prototype.SphereOverlapComponent = PrimitiveComponent.prototype.K2_SphereOverlapComponent; } catch (e) {};
+try { PrimitiveComponent.prototype.LineTraceComponent = PrimitiveComponent.prototype.K2_LineTraceComponent; } catch (e) {};
+try { PrimitiveComponent.prototype.IsQueryCollisionEnabled = PrimitiveComponent.prototype.K2_IsQueryCollisionEnabled; } catch (e) {};
+try { PrimitiveComponent.prototype.IsPhysicsCollisionEnabled = PrimitiveComponent.prototype.K2_IsPhysicsCollisionEnabled; } catch (e) {};
+try { PrimitiveComponent.prototype.IsCollisionEnabled = PrimitiveComponent.prototype.K2_IsCollisionEnabled; } catch (e) {};
+try { PrimitiveComponent.prototype.BoxOverlapComponent = PrimitiveComponent.prototype.K2_BoxOverlapComponent; } catch (e) {};
+try { PrimitiveComponent.prototype.CreateMIDForElementFromMaterial = PrimitiveComponent.prototype.CreateAndSetMaterialInstanceDynamicFromMaterial; } catch (e) {};
+try { PrimitiveComponent.prototype.CreateMIDForElement = PrimitiveComponent.prototype.CreateAndSetMaterialInstanceDynamic; } catch (e) {};
+try { PrimitiveComponent.prototype.GetMoveIgnoreComponents = PrimitiveComponent.prototype.CopyArrayOfMoveIgnoreComponents; } catch (e) {};
+try { PrimitiveComponent.prototype.GetMoveIgnoreActors = PrimitiveComponent.prototype.CopyArrayOfMoveIgnoreActors; } catch (e) {};
+try { let fnprepatch_83 = MeshComponent.prototype.PrestreamTextures;MeshComponent.prototype.PrestreamTextures = function (Seconds, bPrioritizeCharacterTextures, CinematicTextureGroups = 0) { return fnprepatch_83.call(this, Seconds, bPrioritizeCharacterTextures, CinematicTextureGroups) }; } catch (e) {};
+try { let fnprepatch_84 = MaterialEditingLibrary.prototype.UpdateMaterialFunction;MaterialEditingLibrary.prototype.UpdateMaterialFunction = function (MaterialFunction, PreviewMaterial = undefined) { return fnprepatch_84.call(this, MaterialFunction, PreviewMaterial) }; } catch (e) {};
+try { let fnprepatch_85 = MaterialEditingLibrary.prototype.CreateMaterialExpressionInFunction;MaterialEditingLibrary.prototype.CreateMaterialExpressionInFunction = function (MaterialFunction, ExpressionClass, NodePosX = 0, NodePosY = 0) { return fnprepatch_85.call(this, MaterialFunction, ExpressionClass, NodePosX, NodePosY) }; } catch (e) {};
+try { let fnprepatch_86 = MaterialEditingLibrary.prototype.CreateMaterialExpression;MaterialEditingLibrary.prototype.CreateMaterialExpression = function (Material, ExpressionClass, NodePosX = 0, NodePosY = 0) { return fnprepatch_86.call(this, Material, ExpressionClass, NodePosX, NodePosY) }; } catch (e) {};
+try { let fnprepatch_87 = HeadMountedDisplayFunctionLibrary.prototype.SetWorldToMetersScale;HeadMountedDisplayFunctionLibrary.prototype.SetWorldToMetersScale = function (WorldContext, NewScale = 100) { return fnprepatch_87.call(this, WorldContext, NewScale) }; } catch (e) {};
+try { let fnprepatch_88 = HeadMountedDisplayFunctionLibrary.prototype.SetSpectatorScreenModeTexturePlusEyeLayout;HeadMountedDisplayFunctionLibrary.prototype.SetSpectatorScreenModeTexturePlusEyeLayout = function (EyeRectMin, EyeRectMax, TextureRectMin, TextureRectMax, bDrawEyeFirst = true, bClearBlack = false, bUseAlpha = false) { return fnprepatch_88.call(this, EyeRectMin, EyeRectMax, TextureRectMin, TextureRectMax, bDrawEyeFirst, bClearBlack, bUseAlpha) }; } catch (e) {};
+try { let fnprepatch_89 = HeadMountedDisplayFunctionLibrary.prototype.ResetOrientationAndPosition;HeadMountedDisplayFunctionLibrary.prototype.ResetOrientationAndPosition = function (Yaw = 0, Options = "OrientationAndPosition") { return fnprepatch_89.call(this, Yaw, Options) }; } catch (e) {};
+try { let fnprepatch_90 = HeadMountedDisplayFunctionLibrary.prototype.GetTrackingSensorParameters;HeadMountedDisplayFunctionLibrary.prototype.GetTrackingSensorParameters = function (Origin, Rotation, LeftFOV, RightFOV, TopFOV, BottomFOV, Distance, NearPlane, FarPlane, IsActive, Index = 0) { return fnprepatch_90.call(this, Origin, Rotation, LeftFOV, RightFOV, TopFOV, BottomFOV, Distance, NearPlane, FarPlane, IsActive, Index) }; } catch (e) {};
+try { let fnprepatch_91 = HeadMountedDisplayFunctionLibrary.prototype.EnumerateTrackedDevices;HeadMountedDisplayFunctionLibrary.prototype.EnumerateTrackedDevices = function (SystemId = "None", DeviceType = "HeadMountedDisplay") { return fnprepatch_91.call(this, SystemId, DeviceType) }; } catch (e) {};
+try { let fnprepatch_92 = GameplayTask_ClaimResource.prototype.ClaimResources;GameplayTask_ClaimResource.prototype.ClaimResources = function (InTaskOwner, ResourceClasses, Priority = 192, TaskInstanceName = "None") { return fnprepatch_92.call(this, InTaskOwner, ResourceClasses, Priority, TaskInstanceName) }; } catch (e) {};
+try { let fnprepatch_93 = GameplayTask_ClaimResource.prototype.ClaimResource;GameplayTask_ClaimResource.prototype.ClaimResource = function (InTaskOwner, ResourceClass, Priority = 192, TaskInstanceName = "None") { return fnprepatch_93.call(this, InTaskOwner, ResourceClass, Priority, TaskInstanceName) }; } catch (e) {};
+try { let fnprepatch_94 = GameplayTask_SpawnActor.prototype.SpawnActor;GameplayTask_SpawnActor.prototype.SpawnActor = function (TaskOwner, SpawnLocation, SpawnRotation, Class, bSpawnOnlyOnAuthority = false) { return fnprepatch_94.call(this, TaskOwner, SpawnLocation, SpawnRotation, Class, bSpawnOnlyOnAuthority) }; } catch (e) {};
+try { let fnprepatch_95 = GameplayTask_WaitDelay.prototype.TaskWaitDelay;GameplayTask_WaitDelay.prototype.TaskWaitDelay = function (TaskOwner, Time, Priority = 192) { return fnprepatch_95.call(this, TaskOwner, Time, Priority) }; } catch (e) {};
+try { BlueprintGameplayTagLibrary.prototype.NotEqual = BlueprintGameplayTagLibrary.prototype.NotEqual_GameplayTagContainer; } catch (e) {};
+try { BlueprintGameplayTagLibrary.NotEqual = BlueprintGameplayTagLibrary.NotEqual_GameplayTagContainer; } catch (e) {};
+try { BlueprintGameplayTagLibrary.prototype.NotEqual = BlueprintGameplayTagLibrary.prototype.NotEqual_GameplayTag; } catch (e) {};
+try { BlueprintGameplayTagLibrary.NotEqual = BlueprintGameplayTagLibrary.NotEqual_GameplayTag; } catch (e) {};
+try { BlueprintGameplayTagLibrary.prototype.Equal = BlueprintGameplayTagLibrary.prototype.EqualEqual_GameplayTagContainer; } catch (e) {};
+try { BlueprintGameplayTagLibrary.Equal = BlueprintGameplayTagLibrary.EqualEqual_GameplayTagContainer; } catch (e) {};
+try { BlueprintGameplayTagLibrary.prototype.Equal = BlueprintGameplayTagLibrary.prototype.EqualEqual_GameplayTag; } catch (e) {};
+try { BlueprintGameplayTagLibrary.Equal = BlueprintGameplayTagLibrary.EqualEqual_GameplayTag; } catch (e) {};
+try { let fnprepatch_96 = AIBlueprintHelperLibrary.prototype.SpawnAIFromClass;AIBlueprintHelperLibrary.prototype.SpawnAIFromClass = function (WorldContextObject, PawnClass, BehaviorTree, Location, Rotation, bNoCollisionFail = false) { return fnprepatch_96.call(this, WorldContextObject, PawnClass, BehaviorTree, Location, Rotation, bNoCollisionFail) }; } catch (e) {};
+try { let fnprepatch_97 = AIBlueprintHelperLibrary.prototype.SendAIMessage;AIBlueprintHelperLibrary.prototype.SendAIMessage = function (Target, Message, MessageSource, bSuccess = true) { return fnprepatch_97.call(this, Target, Message, MessageSource, bSuccess) }; } catch (e) {};
+try { let fnprepatch_98 = AIBlueprintHelperLibrary.prototype.CreateMoveToProxyObject;AIBlueprintHelperLibrary.prototype.CreateMoveToProxyObject = function (WorldContextObject, Pawn, Destination, TargetActor = undefined, AcceptanceRadius = 5, bStopOnOverlap = false) { return fnprepatch_98.call(this, WorldContextObject, Pawn, Destination, TargetActor, AcceptanceRadius, bStopOnOverlap) }; } catch (e) {};
+try { let fnprepatch_99 = Controller.prototype.LineOfSightTo;Controller.prototype.LineOfSightTo = function (Other, ViewPoint, bAlternateChecks = false) { return fnprepatch_99.call(this, Other, ViewPoint, bAlternateChecks) }; } catch (e) {};
 try { Controller.prototype.GetControlledPawn = Controller.prototype.K2_GetPawn; } catch (e) {};
-try { let fnprepatch_70 = AIController.prototype.MoveToLocation;AIController.prototype.MoveToLocation = function (Dest, AcceptanceRadius = -1, bStopOnOverlap = true, bUsePathfinding = true, bProjectDestinationToNavigation = false, bCanStrafe = true, FilterClass, bAllowPartialPath = true) { return fnprepatch_70.call(this, Dest, AcceptanceRadius, bStopOnOverlap, bUsePathfinding, bProjectDestinationToNavigation, bCanStrafe, FilterClass, bAllowPartialPath) }; } catch (e) {};
-try { let fnprepatch_71 = AIController.prototype.MoveToActor;AIController.prototype.MoveToActor = function (Goal, AcceptanceRadius = -1, bStopOnOverlap = true, bUsePathfinding = true, bCanStrafe = true, FilterClass, bAllowPartialPath = true) { return fnprepatch_71.call(this, Goal, AcceptanceRadius, bStopOnOverlap, bUsePathfinding, bCanStrafe, FilterClass, bAllowPartialPath) }; } catch (e) {};
+try { let fnprepatch_100 = AIController.prototype.MoveToLocation;AIController.prototype.MoveToLocation = function (Dest, AcceptanceRadius = -1, bStopOnOverlap = true, bUsePathfinding = true, bProjectDestinationToNavigation = false, bCanStrafe = true, FilterClass = null, bAllowPartialPath = true) { return fnprepatch_100.call(this, Dest, AcceptanceRadius, bStopOnOverlap, bUsePathfinding, bProjectDestinationToNavigation, bCanStrafe, FilterClass, bAllowPartialPath) }; } catch (e) {};
+try { let fnprepatch_101 = AIController.prototype.MoveToActor;AIController.prototype.MoveToActor = function (Goal, AcceptanceRadius = -1, bStopOnOverlap = true, bUsePathfinding = true, bCanStrafe = true, FilterClass = null, bAllowPartialPath = true) { return fnprepatch_101.call(this, Goal, AcceptanceRadius, bStopOnOverlap, bUsePathfinding, bCanStrafe, FilterClass, bAllowPartialPath) }; } catch (e) {};
 try { AIController.prototype.SetFocus = AIController.prototype.K2_SetFocus; } catch (e) {};
 try { AIController.prototype.SetFocalPoint = AIController.prototype.K2_SetFocalPoint; } catch (e) {};
 try { AIController.prototype.ClearFocus = AIController.prototype.K2_ClearFocus; } catch (e) {};
 try { AISense_Blueprint.prototype.OnNewPawn = AISense_Blueprint.prototype.K2_OnNewPawn; } catch (e) {};
-try { let fnprepatch_72 = AISense_Hearing.prototype.ReportNoiseEvent;AISense_Hearing.prototype.ReportNoiseEvent = function (WorldContextObject, NoiseLocation, Loudness = 1, Instigator, MaxRange = 0, Tag = "None") { return fnprepatch_72.call(this, WorldContextObject, NoiseLocation, Loudness, Instigator, MaxRange, Tag) }; } catch (e) {};
-try { let fnprepatch_73 = AITask_MoveTo.prototype.AIMoveTo;AITask_MoveTo.prototype.AIMoveTo = function (Controller, GoalLocation, GoalActor, AcceptanceRadius = -1, StopOnOverlap = "Default", AcceptPartialPath = "Default", bUsePathfinding = true, bLockAILogic = true, bUseContinuosGoalTracking = false) { return fnprepatch_73.call(this, Controller, GoalLocation, GoalActor, AcceptanceRadius, StopOnOverlap, AcceptPartialPath, bUsePathfinding, bLockAILogic, bUseContinuosGoalTracking) }; } catch (e) {};
+try { let fnprepatch_102 = AISense_Hearing.prototype.ReportNoiseEvent;AISense_Hearing.prototype.ReportNoiseEvent = function (WorldContextObject, NoiseLocation, Loudness = 1, Instigator = undefined, MaxRange = 0, Tag = "None") { return fnprepatch_102.call(this, WorldContextObject, NoiseLocation, Loudness, Instigator, MaxRange, Tag) }; } catch (e) {};
+try { let fnprepatch_103 = AITask_MoveTo.prototype.AIMoveTo;AITask_MoveTo.prototype.AIMoveTo = function (Controller, GoalLocation, GoalActor = undefined, AcceptanceRadius = -1, StopOnOverlap = "Default", AcceptPartialPath = "Default", bUsePathfinding = true, bLockAILogic = true, bUseContinuosGoalTracking = false) { return fnprepatch_103.call(this, Controller, GoalLocation, GoalActor, AcceptanceRadius, StopOnOverlap, AcceptPartialPath, bUsePathfinding, bLockAILogic, bUseContinuosGoalTracking) }; } catch (e) {};
 try { AITask_MoveTo.prototype.MoveToLocationorActor = AITask_MoveTo.prototype.AIMoveTo; } catch (e) {};
 try { AITask_MoveTo.MoveToLocationorActor = AITask_MoveTo.AIMoveTo; } catch (e) {};
-try { let fnprepatch_74 = BTTask_BlueprintBase.prototype.SetFinishOnMessageWithId;BTTask_BlueprintBase.prototype.SetFinishOnMessageWithId = function (MessageName, RequestID = -1) { return fnprepatch_74.call(this, MessageName, RequestID) }; } catch (e) {};
-try { let fnprepatch_75 = Pawn.prototype.SetCanAffectNavigationGeneration;Pawn.prototype.SetCanAffectNavigationGeneration = function (bNewValue, bForceUpdate = false) { return fnprepatch_75.call(this, bNewValue, bForceUpdate) }; } catch (e) {};
-try { let fnprepatch_76 = Pawn.prototype.PawnMakeNoise;Pawn.prototype.PawnMakeNoise = function (Loudness, NoiseLocation, bUseNoiseMakerLocation = true, NoiseMaker) { return fnprepatch_76.call(this, Loudness, NoiseLocation, bUseNoiseMakerLocation, NoiseMaker) }; } catch (e) {};
-try { let fnprepatch_77 = Pawn.prototype.AddMovementInput;Pawn.prototype.AddMovementInput = function (WorldDirection, ScaleValue = 1, bForce = false) { return fnprepatch_77.call(this, WorldDirection, ScaleValue, bForce) }; } catch (e) {};
+try { let fnprepatch_104 = BTTask_BlueprintBase.prototype.SetFinishOnMessageWithId;BTTask_BlueprintBase.prototype.SetFinishOnMessageWithId = function (MessageName, RequestID = -1) { return fnprepatch_104.call(this, MessageName, RequestID) }; } catch (e) {};
+try { let fnprepatch_105 = Pawn.prototype.SetCanAffectNavigationGeneration;Pawn.prototype.SetCanAffectNavigationGeneration = function (bNewValue, bForceUpdate = false) { return fnprepatch_105.call(this, bNewValue, bForceUpdate) }; } catch (e) {};
+try { let fnprepatch_106 = Pawn.prototype.PawnMakeNoise;Pawn.prototype.PawnMakeNoise = function (Loudness, NoiseLocation, bUseNoiseMakerLocation = true, NoiseMaker = undefined) { return fnprepatch_106.call(this, Loudness, NoiseLocation, bUseNoiseMakerLocation, NoiseMaker) }; } catch (e) {};
+try { let fnprepatch_107 = Pawn.prototype.AddMovementInput;Pawn.prototype.AddMovementInput = function (WorldDirection, ScaleValue = 1, bForce = false) { return fnprepatch_107.call(this, WorldDirection, ScaleValue, bForce) }; } catch (e) {};
 try { Pawn.prototype.Unpossessed = Pawn.prototype.ReceiveUnpossessed; } catch (e) {};
 try { Pawn.prototype.Possessed = Pawn.prototype.ReceivePossessed; } catch (e) {};
 try { Pawn.prototype.GetMovementInputVector = Pawn.prototype.K2_GetMovementInputVector; } catch (e) {};
-try { let fnprepatch_78 = Character.prototype.UnCrouch;Character.prototype.UnCrouch = function (bClientSimulation = false) { return fnprepatch_78.call(this, bClientSimulation) }; } catch (e) {};
-try { let fnprepatch_79 = Character.prototype.PlayAnimMontage;Character.prototype.PlayAnimMontage = function (AnimMontage, InPlayRate = 1, StartSectionName = "None") { return fnprepatch_79.call(this, AnimMontage, InPlayRate, StartSectionName) }; } catch (e) {};
-try { let fnprepatch_80 = Character.prototype.Crouch;Character.prototype.Crouch = function (bClientSimulation = false) { return fnprepatch_80.call(this, bClientSimulation) }; } catch (e) {};
+try { let fnprepatch_108 = Character.prototype.UnCrouch;Character.prototype.UnCrouch = function (bClientSimulation = false) { return fnprepatch_108.call(this, bClientSimulation) }; } catch (e) {};
+try { let fnprepatch_109 = Character.prototype.StopAnimMontage;Character.prototype.StopAnimMontage = function (AnimMontage = undefined) { return fnprepatch_109.call(this, AnimMontage) }; } catch (e) {};
+try { let fnprepatch_110 = Character.prototype.PlayAnimMontage;Character.prototype.PlayAnimMontage = function (AnimMontage, InPlayRate = 1, StartSectionName = "None") { return fnprepatch_110.call(this, AnimMontage, InPlayRate, StartSectionName) }; } catch (e) {};
+try { let fnprepatch_111 = Character.prototype.Crouch;Character.prototype.Crouch = function (bClientSimulation = false) { return fnprepatch_111.call(this, bClientSimulation) }; } catch (e) {};
 try { Character.prototype.UpdateCustomMovement = Character.prototype.K2_UpdateCustomMovement; } catch (e) {};
 try { Character.prototype.OnStartCrouch = Character.prototype.K2_OnStartCrouch; } catch (e) {};
 try { Character.prototype.OnMovementModeChanged = Character.prototype.K2_OnMovementModeChanged; } catch (e) {};
 try { Character.prototype.OnEndCrouch = Character.prototype.K2_OnEndCrouch; } catch (e) {};
 try { Character.prototype.GetBaseRotationOffset = Character.prototype.GetBaseRotationOffsetRotator; } catch (e) {};
 try { Character.prototype.CanJump = Character.prototype.CanJumpInternal; } catch (e) {};
-try { let fnprepatch_81 = NavLocalGridManager.prototype.RemoveLocalNavigationGrid;NavLocalGridManager.prototype.RemoveLocalNavigationGrid = function (WorldContextObject, GridId, bRebuildGrids = true) { return fnprepatch_81.call(this, WorldContextObject, GridId, bRebuildGrids) }; } catch (e) {};
-try { let fnprepatch_82 = NavLocalGridManager.prototype.AddLocalNavigationGridForPoints;NavLocalGridManager.prototype.AddLocalNavigationGridForPoints = function (WorldContextObject, Locations, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_82.call(this, WorldContextObject, Locations, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
-try { let fnprepatch_83 = NavLocalGridManager.prototype.AddLocalNavigationGridForPoint;NavLocalGridManager.prototype.AddLocalNavigationGridForPoint = function (WorldContextObject, Location, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_83.call(this, WorldContextObject, Location, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
-try { let fnprepatch_84 = NavLocalGridManager.prototype.AddLocalNavigationGridForCapsule;NavLocalGridManager.prototype.AddLocalNavigationGridForCapsule = function (WorldContextObject, Location, CapsuleRadius, CapsuleHalfHeight, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_84.call(this, WorldContextObject, Location, CapsuleRadius, CapsuleHalfHeight, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
-try { let fnprepatch_85 = NavLocalGridManager.prototype.AddLocalNavigationGridForBox;NavLocalGridManager.prototype.AddLocalNavigationGridForBox = function (WorldContextObject, Location, Extent, Rotation, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_85.call(this, WorldContextObject, Location, Extent, Rotation, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
-try { let fnprepatch_86 = PawnActionsComponent.prototype.K2_PerformAction;PawnActionsComponent.prototype.K2_PerformAction = function (Pawn, Action, Priority = "HardScript") { return fnprepatch_86.call(this, Pawn, Action, Priority) }; } catch (e) {};
+try { let fnprepatch_112 = NavLocalGridManager.prototype.RemoveLocalNavigationGrid;NavLocalGridManager.prototype.RemoveLocalNavigationGrid = function (WorldContextObject, GridId, bRebuildGrids = true) { return fnprepatch_112.call(this, WorldContextObject, GridId, bRebuildGrids) }; } catch (e) {};
+try { let fnprepatch_113 = NavLocalGridManager.prototype.AddLocalNavigationGridForPoints;NavLocalGridManager.prototype.AddLocalNavigationGridForPoints = function (WorldContextObject, Locations, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_113.call(this, WorldContextObject, Locations, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
+try { let fnprepatch_114 = NavLocalGridManager.prototype.AddLocalNavigationGridForPoint;NavLocalGridManager.prototype.AddLocalNavigationGridForPoint = function (WorldContextObject, Location, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_114.call(this, WorldContextObject, Location, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
+try { let fnprepatch_115 = NavLocalGridManager.prototype.AddLocalNavigationGridForCapsule;NavLocalGridManager.prototype.AddLocalNavigationGridForCapsule = function (WorldContextObject, Location, CapsuleRadius, CapsuleHalfHeight, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_115.call(this, WorldContextObject, Location, CapsuleRadius, CapsuleHalfHeight, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
+try { let fnprepatch_116 = NavLocalGridManager.prototype.AddLocalNavigationGridForBox;NavLocalGridManager.prototype.AddLocalNavigationGridForBox = function (WorldContextObject, Location, Extent, Rotation, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_116.call(this, WorldContextObject, Location, Extent, Rotation, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
+try { let fnprepatch_117 = PawnActionsComponent.prototype.K2_PushAction;PawnActionsComponent.prototype.K2_PushAction = function (NewAction, Priority, Instigator = undefined) { return fnprepatch_117.call(this, NewAction, Priority, Instigator) }; } catch (e) {};
+try { let fnprepatch_118 = PawnActionsComponent.prototype.K2_PerformAction;PawnActionsComponent.prototype.K2_PerformAction = function (Pawn, Action, Priority = "HardScript") { return fnprepatch_118.call(this, Pawn, Action, Priority) }; } catch (e) {};
 try { PawnActionsComponent.prototype.PushAction = PawnActionsComponent.prototype.K2_PushAction; } catch (e) {};
 try { PawnActionsComponent.prototype.PerformAction = PawnActionsComponent.prototype.K2_PerformAction; } catch (e) {};
 try { PawnActionsComponent.PerformAction = PawnActionsComponent.K2_PerformAction; } catch (e) {};
 try { PawnActionsComponent.prototype.ForceAbortAction = PawnActionsComponent.prototype.K2_ForceAbortAction; } catch (e) {};
 try { PawnActionsComponent.prototype.AbortAction = PawnActionsComponent.prototype.K2_AbortAction; } catch (e) {};
-try { let fnprepatch_87 = CameraComponent.prototype.AddOrUpdateBlendable;CameraComponent.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_87.call(this, InBlendableObject, InWeight) }; } catch (e) {};
-try { let fnprepatch_88 = AnimInstance.prototype.StopSlotAnimation;AnimInstance.prototype.StopSlotAnimation = function (InBlendOutTime = 0.25, SlotNodeName = "None") { return fnprepatch_88.call(this, InBlendOutTime, SlotNodeName) }; } catch (e) {};
-try { let fnprepatch_89 = AnimInstance.prototype.PlaySlotAnimationAsDynamicMontage;AnimInstance.prototype.PlaySlotAnimationAsDynamicMontage = function (Asset, SlotNodeName, BlendInTime = 0.25, BlendOutTime = 0.25, InPlayRate = 1, LoopCount = 1, BlendOutTriggerTime = -1, InTimeToStartMontageAt = 0) { return fnprepatch_89.call(this, Asset, SlotNodeName, BlendInTime, BlendOutTime, InPlayRate, LoopCount, BlendOutTriggerTime, InTimeToStartMontageAt) }; } catch (e) {};
-try { let fnprepatch_90 = AnimInstance.prototype.PlaySlotAnimation;AnimInstance.prototype.PlaySlotAnimation = function (Asset, SlotNodeName, BlendInTime = 0.25, BlendOutTime = 0.25, InPlayRate = 1, LoopCount = 1) { return fnprepatch_90.call(this, Asset, SlotNodeName, BlendInTime, BlendOutTime, InPlayRate, LoopCount) }; } catch (e) {};
-try { let fnprepatch_91 = AnimInstance.prototype.Montage_SetPlayRate;AnimInstance.prototype.Montage_SetPlayRate = function (Montage, NewPlayRate = 1) { return fnprepatch_91.call(this, Montage, NewPlayRate) }; } catch (e) {};
-try { let fnprepatch_92 = AnimInstance.prototype.Montage_Play;AnimInstance.prototype.Montage_Play = function (MontageToPlay, InPlayRate = 1, ReturnValueType = "MontageLength", InTimeToStartMontageAt = 0) { return fnprepatch_92.call(this, MontageToPlay, InPlayRate, ReturnValueType, InTimeToStartMontageAt) }; } catch (e) {};
-try { let fnprepatch_93 = AnimInstance.prototype.IsSyncGroupBetweenMarkers;AnimInstance.prototype.IsSyncGroupBetweenMarkers = function (InSyncGroupName, PreviousMarker, NextMarker, bRespectMarkerOrder = true) { return fnprepatch_93.call(this, InSyncGroupName, PreviousMarker, NextMarker, bRespectMarkerOrder) }; } catch (e) {};
-try { AnimInstance.prototype.GetTransitionTimeElapsed = AnimInstance.prototype.GetInstanceTransitionTimeElapsedFraction; } catch (e) {};
-try { AnimInstance.prototype.GetTransitionTimeElapsed = AnimInstance.prototype.GetInstanceTransitionTimeElapsed; } catch (e) {};
-try { AnimInstance.prototype.GetTransitionCrossfadeDuration = AnimInstance.prototype.GetInstanceTransitionCrossfadeDuration; } catch (e) {};
-try { AnimInstance.prototype.StateWeight = AnimInstance.prototype.GetInstanceStateWeight; } catch (e) {};
-try { AnimInstance.prototype.MachineWeight = AnimInstance.prototype.GetInstanceMachineWeight; } catch (e) {};
-try { AnimInstance.prototype.CurrentStateTime = AnimInstance.prototype.GetInstanceCurrentStateElapsedTime; } catch (e) {};
-try { AnimInstance.prototype.TimeRemaining = AnimInstance.prototype.GetInstanceAssetPlayerTimeFromEndFraction; } catch (e) {};
-try { AnimInstance.prototype.TimeRemaining = AnimInstance.prototype.GetInstanceAssetPlayerTimeFromEnd; } catch (e) {};
-try { AnimInstance.prototype.CurrentTime = AnimInstance.prototype.GetInstanceAssetPlayerTimeFraction; } catch (e) {};
-try { AnimInstance.prototype.CurrentTime = AnimInstance.prototype.GetInstanceAssetPlayerTime; } catch (e) {};
-try { AnimInstance.prototype.Length = AnimInstance.prototype.GetInstanceAssetPlayerLength; } catch (e) {};
-try { let fnprepatch_94 = AnimSingleNodeInstance.prototype.SetPositionWithPreviousTime;AnimSingleNodeInstance.prototype.SetPositionWithPreviousTime = function (InPosition, InPreviousTime, bFireNotifies = true) { return fnprepatch_94.call(this, InPosition, InPreviousTime, bFireNotifies) }; } catch (e) {};
-try { let fnprepatch_95 = AnimSingleNodeInstance.prototype.SetPosition;AnimSingleNodeInstance.prototype.SetPosition = function (InPosition, bFireNotifies = true) { return fnprepatch_95.call(this, InPosition, bFireNotifies) }; } catch (e) {};
-try { let fnprepatch_96 = AnimSingleNodeInstance.prototype.SetAnimationAsset;AnimSingleNodeInstance.prototype.SetAnimationAsset = function (NewAsset, bIsLooping = true, InPlayRate = 1) { return fnprepatch_96.call(this, NewAsset, bIsLooping, InPlayRate) }; } catch (e) {};
-try { let fnprepatch_97 = AnimSingleNodeInstance.prototype.PlayAnim;AnimSingleNodeInstance.prototype.PlayAnim = function (bIsLooping = false, InPlayRate = 1, InStartPosition = 0) { return fnprepatch_97.call(this, bIsLooping, InPlayRate, InStartPosition) }; } catch (e) {};
-try { Widget.prototype.HasAnyUserFocusedDescendants = Widget.prototype.HasFocusedDescendants; } catch (e) {};
-try { let fnprepatch_98 = UImage.prototype.SetBrushFromTextureDynamic;UImage.prototype.SetBrushFromTextureDynamic = function (Texture, bMatchSize = false) { return fnprepatch_98.call(this, Texture, bMatchSize) }; } catch (e) {};
-try { let fnprepatch_99 = UImage.prototype.SetBrushFromTexture;UImage.prototype.SetBrushFromTexture = function (Texture, bMatchSize = false) { return fnprepatch_99.call(this, Texture, bMatchSize) }; } catch (e) {};
-try { let fnprepatch_100 = ScrollBox.prototype.ScrollWidgetIntoView;ScrollBox.prototype.ScrollWidgetIntoView = function (WidgetToFind, AnimateScroll = true, ScrollDesintion = "IntoView") { return fnprepatch_100.call(this, WidgetToFind, AnimateScroll, ScrollDesintion) }; } catch (e) {};
+try { let fnprepatch_119 = NavigationPath.prototype.EnableDebugDrawing;NavigationPath.prototype.EnableDebugDrawing = function (bShouldDrawDebugData, PathColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_119.call(this, bShouldDrawDebugData, PathColor) }; } catch (e) {};
+try { World.prototype.VisLogBoxShape = World.prototype.LogBox; } catch (e) {};
+try { World.prototype.VisLogLocation = World.prototype.LogLocation; } catch (e) {};
+try { World.prototype.VisLogSegment = World.prototype.LogSegment; } catch (e) {};
+try { World.prototype.VisLogText = World.prototype.LogText; } catch (e) {};
+try { World.prototype.MultiBoxTraceByChannel = World.prototype.BoxTraceMulti; } catch (e) {};
+try { World.prototype.MultiBoxTraceByProfile = World.prototype.BoxTraceMultiByProfile; } catch (e) {};
+try { World.prototype.MultiBoxTraceForObjects = World.prototype.BoxTraceMultiForObjects; } catch (e) {};
+try { World.prototype.BoxTraceByChannel = World.prototype.BoxTraceSingle; } catch (e) {};
+try { World.prototype.BoxTraceByProfile = World.prototype.BoxTraceSingleByProfile; } catch (e) {};
+try { World.prototype.BoxTraceForObjects = World.prototype.BoxTraceSingleForObjects; } catch (e) {};
+try { World.prototype.MultiCapsuleTraceByChannel = World.prototype.CapsuleTraceMulti; } catch (e) {};
+try { World.prototype.MultiCapsuleTraceByProfile = World.prototype.CapsuleTraceMultiByProfile; } catch (e) {};
+try { World.prototype.MultiCapsuleTraceForObjects = World.prototype.CapsuleTraceMultiForObjects; } catch (e) {};
+try { World.prototype.CapsuleTraceByChannel = World.prototype.CapsuleTraceSingle; } catch (e) {};
+try { World.prototype.CapsuleTraceByProfile = World.prototype.CapsuleTraceSingleByProfile; } catch (e) {};
+try { World.prototype.CapsuleTraceForObjects = World.prototype.CapsuleTraceSingleForObjects; } catch (e) {};
+try { World.prototype.DrawDebugCone = World.prototype.DrawDebugConeInDegrees; } catch (e) {};
+try { World.prototype.ClearandInvalidateTimerbyHandle = World.prototype.K2_ClearAndInvalidateTimerHandle; } catch (e) {};
+try { World.prototype.ClearTimerbyHandle = World.prototype.K2_ClearTimerHandle; } catch (e) {};
+try { World.prototype.GetTimerElapsedTimebyHandle = World.prototype.K2_GetTimerElapsedTimeHandle; } catch (e) {};
+try { World.prototype.GetTimerRemainingTimebyHandle = World.prototype.K2_GetTimerRemainingTimeHandle; } catch (e) {};
+try { World.prototype.IsTimerActivebyHandle = World.prototype.K2_IsTimerActiveHandle; } catch (e) {};
+try { World.prototype.IsTimerPausedbyHandle = World.prototype.K2_IsTimerPausedHandle; } catch (e) {};
+try { World.prototype.PauseTimerbyHandle = World.prototype.K2_PauseTimerHandle; } catch (e) {};
+try { World.prototype.DoesTimerExistbyHandle = World.prototype.K2_TimerExistsHandle; } catch (e) {};
+try { World.prototype.UnpauseTimerbyHandle = World.prototype.K2_UnPauseTimerHandle; } catch (e) {};
+try { World.prototype.MultiLineTraceByChannel = World.prototype.LineTraceMulti; } catch (e) {};
+try { World.prototype.MultiLineTraceByProfile = World.prototype.LineTraceMultiByProfile; } catch (e) {};
+try { World.prototype.MultiLineTraceForObjects = World.prototype.LineTraceMultiForObjects; } catch (e) {};
+try { World.prototype.LineTraceByChannel = World.prototype.LineTraceSingle; } catch (e) {};
+try { World.prototype.LineTraceByProfile = World.prototype.LineTraceSingleByProfile; } catch (e) {};
+try { World.prototype.LineTraceForObjects = World.prototype.LineTraceSingleForObjects; } catch (e) {};
+try { World.prototype.MultiSphereTraceByChannel = World.prototype.SphereTraceMulti; } catch (e) {};
+try { World.prototype.MultiSphereTraceByProfile = World.prototype.SphereTraceMultiByProfile; } catch (e) {};
+try { World.prototype.MultiSphereTraceForObjects = World.prototype.SphereTraceMultiForObjects; } catch (e) {};
+try { World.prototype.SphereTraceByChannel = World.prototype.SphereTraceSingle; } catch (e) {};
+try { World.prototype.SphereTraceByProfile = World.prototype.SphereTraceSingleByProfile; } catch (e) {};
+try { World.prototype.SphereTraceForObjects = World.prototype.SphereTraceSingleForObjects; } catch (e) {};
+try { World.prototype.PredictProjectilePath = World.prototype.Blueprint_PredictProjectilePath_Advanced; } catch (e) {};
+try { World.prototype.PredictProjectilePathByObjectType = World.prototype.Blueprint_PredictProjectilePath_ByObjectType; } catch (e) {};
+try { World.prototype.PredictProjectilePathByTraceChannel = World.prototype.Blueprint_PredictProjectilePath_ByTraceChannel; } catch (e) {};
+try { World.prototype.SuggestProjectileVelocity = World.prototype.BlueprintSuggestProjectileVelocity; } catch (e) {};
+try { World.prototype.SuggestProjectileVelocityCustomArc = World.prototype.SuggestProjectileVelocity_CustomArc; } catch (e) {};
+try { World.prototype.CreateWidget = World.prototype.Create; } catch (e) {};
+try { World.prototype.ScreenToAbsolute = World.prototype.ScreenToWidgetAbsolute; } catch (e) {};
+try { World.prototype.ScreenToLocal = World.prototype.ScreenToWidgetLocal; } catch (e) {};
+try { World.prototype.FinishRecordingOutput = World.prototype.StopRecordingOutput; } catch (e) {};
+try { let fnprepatch_120 = NavigationSystemV1.prototype.RegisterNavigationInvoker;NavigationSystemV1.prototype.RegisterNavigationInvoker = function (Invoker, TileGenerationRadius = 3000, TileRemovalRadius = 5000) { return fnprepatch_120.call(this, Invoker, TileGenerationRadius, TileRemovalRadius) }; } catch (e) {};
+try { let fnprepatch_121 = NavigationSystemV1.prototype.ProjectPointToNavigation;NavigationSystemV1.prototype.ProjectPointToNavigation = function (WorldContextObject, Point, NavData = undefined, FilterClass = null, QueryExtent) { return fnprepatch_121.call(this, WorldContextObject, Point, NavData, FilterClass, QueryExtent) }; } catch (e) {};
+try { let fnprepatch_122 = NavigationSystemV1.prototype.NavigationRaycast;NavigationSystemV1.prototype.NavigationRaycast = function (WorldContextObject, RayStart, RayEnd, HitLocation, FilterClass = null, Querier = undefined) { return fnprepatch_122.call(this, WorldContextObject, RayStart, RayEnd, HitLocation, FilterClass, Querier) }; } catch (e) {};
+try { let fnprepatch_123 = NavigationSystemV1.prototype.K2_GetRandomReachablePointInRadius;NavigationSystemV1.prototype.K2_GetRandomReachablePointInRadius = function (WorldContextObject, Origin, RandomLocation, Radius, NavData = undefined, FilterClass = null) { return fnprepatch_123.call(this, WorldContextObject, Origin, RandomLocation, Radius, NavData, FilterClass) }; } catch (e) {};
+try { let fnprepatch_124 = NavigationSystemV1.prototype.K2_GetRandomPointInNavigableRadius;NavigationSystemV1.prototype.K2_GetRandomPointInNavigableRadius = function (WorldContextObject, Origin, RandomLocation, Radius, NavData = undefined, FilterClass = null) { return fnprepatch_124.call(this, WorldContextObject, Origin, RandomLocation, Radius, NavData, FilterClass) }; } catch (e) {};
+try { let fnprepatch_125 = NavigationSystemV1.prototype.GetRandomReachablePointInRadius;NavigationSystemV1.prototype.GetRandomReachablePointInRadius = function (WorldContextObject, Origin, Radius, NavData = undefined, FilterClass = null) { return fnprepatch_125.call(this, WorldContextObject, Origin, Radius, NavData, FilterClass) }; } catch (e) {};
+try { let fnprepatch_126 = NavigationSystemV1.prototype.GetRandomPointInNavigableRadius;NavigationSystemV1.prototype.GetRandomPointInNavigableRadius = function (WorldContextObject, Origin, Radius, NavData = undefined, FilterClass = null) { return fnprepatch_126.call(this, WorldContextObject, Origin, Radius, NavData, FilterClass) }; } catch (e) {};
+try { let fnprepatch_127 = NavigationSystemV1.prototype.GetPathLength;NavigationSystemV1.prototype.GetPathLength = function (WorldContextObject, PathStart, PathEnd, PathLength, NavData = undefined, FilterClass = null) { return fnprepatch_127.call(this, WorldContextObject, PathStart, PathEnd, PathLength, NavData, FilterClass) }; } catch (e) {};
+try { let fnprepatch_128 = NavigationSystemV1.prototype.GetPathCost;NavigationSystemV1.prototype.GetPathCost = function (WorldContextObject, PathStart, PathEnd, PathCost, NavData = undefined, FilterClass = null) { return fnprepatch_128.call(this, WorldContextObject, PathStart, PathEnd, PathCost, NavData, FilterClass) }; } catch (e) {};
+try { let fnprepatch_129 = NavigationSystemV1.prototype.FindPathToLocationSynchronously;NavigationSystemV1.prototype.FindPathToLocationSynchronously = function (WorldContextObject, PathStart, PathEnd, PathfindingContext = undefined, FilterClass = null) { return fnprepatch_129.call(this, WorldContextObject, PathStart, PathEnd, PathfindingContext, FilterClass) }; } catch (e) {};
+try { let fnprepatch_130 = NavigationSystemV1.prototype.FindPathToActorSynchronously;NavigationSystemV1.prototype.FindPathToActorSynchronously = function (WorldContextObject, PathStart, GoalActor, TetherDistance = 50, PathfindingContext = undefined, FilterClass = null) { return fnprepatch_130.call(this, WorldContextObject, PathStart, GoalActor, TetherDistance, PathfindingContext, FilterClass) }; } catch (e) {};
+try { NavigationSystemV1.prototype.SimpleMoveToLocation_DEPRECATED = NavigationSystemV1.prototype.SimpleMoveToLocation; } catch (e) {};
+try { NavigationSystemV1.SimpleMoveToLocation_DEPRECATED = NavigationSystemV1.SimpleMoveToLocation; } catch (e) {};
+try { NavigationSystemV1.prototype.SimpleMoveToActor_DEPRECATED = NavigationSystemV1.prototype.SimpleMoveToActor; } catch (e) {};
+try { NavigationSystemV1.SimpleMoveToActor_DEPRECATED = NavigationSystemV1.SimpleMoveToActor; } catch (e) {};
+try { NavigationSystemV1.prototype.ProjectPointToNavigation_DEPRECATED = NavigationSystemV1.prototype.ProjectPointToNavigation; } catch (e) {};
+try { NavigationSystemV1.ProjectPointToNavigation_DEPRECATED = NavigationSystemV1.ProjectPointToNavigation; } catch (e) {};
+try { NavigationSystemV1.prototype.ProjectPointToNavigation = NavigationSystemV1.prototype.K2_ProjectPointToNavigation; } catch (e) {};
+try { NavigationSystemV1.ProjectPointToNavigation = NavigationSystemV1.K2_ProjectPointToNavigation; } catch (e) {};
+try { NavigationSystemV1.prototype.GetRandomReachablePointInRadius = NavigationSystemV1.prototype.K2_GetRandomReachablePointInRadius; } catch (e) {};
+try { NavigationSystemV1.GetRandomReachablePointInRadius = NavigationSystemV1.K2_GetRandomReachablePointInRadius; } catch (e) {};
+try { NavigationSystemV1.prototype.GetRandomPointInNavigableRadius = NavigationSystemV1.prototype.K2_GetRandomPointInNavigableRadius; } catch (e) {};
+try { NavigationSystemV1.GetRandomPointInNavigableRadius = NavigationSystemV1.K2_GetRandomPointInNavigableRadius; } catch (e) {};
+try { NavigationSystemV1.prototype.GetRandomReachablePointInRadius_DEPRECATED = NavigationSystemV1.prototype.GetRandomReachablePointInRadius; } catch (e) {};
+try { NavigationSystemV1.GetRandomReachablePointInRadius_DEPRECATED = NavigationSystemV1.GetRandomReachablePointInRadius; } catch (e) {};
+try { NavigationSystemV1.prototype.GetRandomPointInNavigableRadius_DEPRECATED = NavigationSystemV1.prototype.GetRandomPointInNavigableRadius; } catch (e) {};
+try { NavigationSystemV1.GetRandomPointInNavigableRadius_DEPRECATED = NavigationSystemV1.GetRandomPointInNavigableRadius; } catch (e) {};
+try { let fnprepatch_131 = NavModifierVolume.prototype.SetAreaClass;NavModifierVolume.prototype.SetAreaClass = function (NewAreaClass = null) { return fnprepatch_131.call(this, NewAreaClass) }; } catch (e) {};
+try { let fnprepatch_132 = UserDefinedImageCaptureProtocol.prototype.WriteImageToDisk;UserDefinedImageCaptureProtocol.prototype.WriteImageToDisk = function (PixelData, StreamName, FrameMetrics, bCopyImageData = false) { return fnprepatch_132.call(this, PixelData, StreamName, FrameMetrics, bCopyImageData) }; } catch (e) {};
+try { let fnprepatch_133 = CameraComponent.prototype.AddOrUpdateBlendable;CameraComponent.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_133.call(this, InBlendableObject, InWeight) }; } catch (e) {};
+try { let fnprepatch_134 = AudioMixerBlueprintLibrary.prototype.StopRecordingOutput;AudioMixerBlueprintLibrary.prototype.StopRecordingOutput = function (WorldContextObject, ExportType, Name, Path, SubmixToRecord = undefined, ExistingSoundWaveToOverwrite = undefined) { return fnprepatch_134.call(this, WorldContextObject, ExportType, Name, Path, SubmixToRecord, ExistingSoundWaveToOverwrite) }; } catch (e) {};
+try { let fnprepatch_135 = AudioMixerBlueprintLibrary.prototype.StartRecordingOutput;AudioMixerBlueprintLibrary.prototype.StartRecordingOutput = function (WorldContextObject, ExpectedDuration, SubmixToRecord = undefined) { return fnprepatch_135.call(this, WorldContextObject, ExpectedDuration, SubmixToRecord) }; } catch (e) {};
+try { let fnprepatch_136 = AudioMixerBlueprintLibrary.prototype.ResumeRecordingOutput;AudioMixerBlueprintLibrary.prototype.ResumeRecordingOutput = function (WorldContextObject, SubmixToPause = undefined) { return fnprepatch_136.call(this, WorldContextObject, SubmixToPause) }; } catch (e) {};
+try { let fnprepatch_137 = AudioMixerBlueprintLibrary.prototype.PauseRecordingOutput;AudioMixerBlueprintLibrary.prototype.PauseRecordingOutput = function (WorldContextObject, SubmixToPause = undefined) { return fnprepatch_137.call(this, WorldContextObject, SubmixToPause) }; } catch (e) {};
+try { AudioMixerBlueprintLibrary.prototype.FinishRecordingOutput = AudioMixerBlueprintLibrary.prototype.StopRecordingOutput; } catch (e) {};
+try { AudioMixerBlueprintLibrary.FinishRecordingOutput = AudioMixerBlueprintLibrary.StopRecordingOutput; } catch (e) {};
+try { let fnprepatch_138 = SubmixEffectReverbPreset.prototype.SetSettingsWithReverbEffect;SubmixEffectReverbPreset.prototype.SetSettingsWithReverbEffect = function (InReverbEffect, WetLevel, DryLevel = 0) { return fnprepatch_138.call(this, InReverbEffect, WetLevel, DryLevel) }; } catch (e) {};
+try { let fnprepatch_139 = DynamicEntryBox.prototype.Reset;DynamicEntryBox.prototype.Reset = function (bDeleteWidgets = false) { return fnprepatch_139.call(this, bDeleteWidgets) }; } catch (e) {};
+try { DynamicEntryBox.prototype.CreateEntryofClass = DynamicEntryBox.prototype.BP_CreateEntryOfClass; } catch (e) {};
+try { DynamicEntryBox.prototype.CreateEntry = DynamicEntryBox.prototype.BP_CreateEntry; } catch (e) {};
+try { let fnprepatch_140 = UImage.prototype.SetBrushFromTextureDynamic;UImage.prototype.SetBrushFromTextureDynamic = function (Texture, bMatchSize = false) { return fnprepatch_140.call(this, Texture, bMatchSize) }; } catch (e) {};
+try { let fnprepatch_141 = UImage.prototype.SetBrushFromTexture;UImage.prototype.SetBrushFromTexture = function (Texture, bMatchSize = false) { return fnprepatch_141.call(this, Texture, bMatchSize) }; } catch (e) {};
+try { let fnprepatch_142 = UImage.prototype.SetBrushFromSoftTexture;UImage.prototype.SetBrushFromSoftTexture = function (SoftTexture, bMatchSize = false) { return fnprepatch_142.call(this, SoftTexture, bMatchSize) }; } catch (e) {};
+try { let fnprepatch_143 = UImage.prototype.SetBrushFromAtlasInterface;UImage.prototype.SetBrushFromAtlasInterface = function (AtlasRegion, bMatchSize = false) { return fnprepatch_143.call(this, AtlasRegion, bMatchSize) }; } catch (e) {};
+try { UserListEntry.prototype.OnItemSelectionChanged = UserListEntry.prototype.BP_OnItemSelectionChanged; } catch (e) {};
+try { UserListEntry.prototype.OnItemExpansionChanged = UserListEntry.prototype.BP_OnItemExpansionChanged; } catch (e) {};
+try { UserListEntry.prototype.OnEntryReleased = UserListEntry.prototype.BP_OnEntryReleased; } catch (e) {};
+try { ListView.prototype.SetSelectedItem = ListView.prototype.BP_SetSelectedItem; } catch (e) {};
+try { ListView.prototype.SetListItems = ListView.prototype.BP_SetListItems; } catch (e) {};
+try { ListView.prototype.SetItemSelection = ListView.prototype.BP_SetItemSelection; } catch (e) {};
+try { ListView.prototype.ScrollItemIntoView = ListView.prototype.BP_ScrollItemIntoView; } catch (e) {};
+try { ListView.prototype.NavigateToItem = ListView.prototype.BP_NavigateToItem; } catch (e) {};
+try { ListView.prototype.IsItemVisible = ListView.prototype.BP_IsItemVisible; } catch (e) {};
+try { ListView.prototype.GetSelectedItems = ListView.prototype.BP_GetSelectedItems; } catch (e) {};
+try { ListView.prototype.GetSelectedItem = ListView.prototype.BP_GetSelectedItem; } catch (e) {};
+try { ListView.prototype.GetNumItemsSelected = ListView.prototype.BP_GetNumItemsSelected; } catch (e) {};
+try { ListView.prototype.ClearSelection = ListView.prototype.BP_ClearSelection; } catch (e) {};
+try { ListView.prototype.CancelScrollIntoView = ListView.prototype.BP_CancelScrollIntoView; } catch (e) {};
+try { let fnprepatch_144 = ScrollBox.prototype.ScrollWidgetIntoView;ScrollBox.prototype.ScrollWidgetIntoView = function (WidgetToFind, AnimateScroll = true, ScrollDestination = "IntoView") { return fnprepatch_144.call(this, WidgetToFind, AnimateScroll, ScrollDestination) }; } catch (e) {};
 try { SlateBlueprintLibrary.prototype.ScreenToLocal = SlateBlueprintLibrary.prototype.ScreenToWidgetLocal; } catch (e) {};
 try { SlateBlueprintLibrary.ScreenToLocal = SlateBlueprintLibrary.ScreenToWidgetLocal; } catch (e) {};
 try { SlateBlueprintLibrary.prototype.ScreenToAbsolute = SlateBlueprintLibrary.prototype.ScreenToWidgetAbsolute; } catch (e) {};
 try { SlateBlueprintLibrary.ScreenToAbsolute = SlateBlueprintLibrary.ScreenToWidgetAbsolute; } catch (e) {};
 try { SlateBlueprintLibrary.prototype.Equal = SlateBlueprintLibrary.prototype.EqualEqual_SlateBrush; } catch (e) {};
 try { SlateBlueprintLibrary.Equal = SlateBlueprintLibrary.EqualEqual_SlateBrush; } catch (e) {};
-try { let fnprepatch_101 = UserWidget.prototype.SetPositionInViewport;UserWidget.prototype.SetPositionInViewport = function (Position, bRemoveDPIScale = true) { return fnprepatch_101.call(this, Position, bRemoveDPIScale) }; } catch (e) {};
-try { let fnprepatch_102 = UserWidget.prototype.SetPlaybackSpeed;UserWidget.prototype.SetPlaybackSpeed = function (InAnimation, PlaybackSpeed = 1) { return fnprepatch_102.call(this, InAnimation, PlaybackSpeed) }; } catch (e) {};
-try { let fnprepatch_103 = UserWidget.prototype.PlayAnimationTo;UserWidget.prototype.PlayAnimationTo = function (InAnimation, StartAtTime = 0, EndAtTime = 0, NumLoopsToPlay = 1, PlayMode = "Forward", PlaybackSpeed = 1) { return fnprepatch_103.call(this, InAnimation, StartAtTime, EndAtTime, NumLoopsToPlay, PlayMode, PlaybackSpeed) }; } catch (e) {};
-try { let fnprepatch_104 = UserWidget.prototype.PlayAnimation;UserWidget.prototype.PlayAnimation = function (InAnimation, StartAtTime = 0, NumLoopsToPlay = 1, PlayMode = "Forward", PlaybackSpeed = 1) { return fnprepatch_104.call(this, InAnimation, StartAtTime, NumLoopsToPlay, PlayMode, PlaybackSpeed) }; } catch (e) {};
-try { let fnprepatch_105 = UserWidget.prototype.AddToViewport;UserWidget.prototype.AddToViewport = function (ZOrder = 0) { return fnprepatch_105.call(this, ZOrder) }; } catch (e) {};
-try { let fnprepatch_106 = UserWidget.prototype.AddToPlayerScreen;UserWidget.prototype.AddToPlayerScreen = function (ZOrder = 0) { return fnprepatch_106.call(this, ZOrder) }; } catch (e) {};
-try { let fnprepatch_107 = WidgetBlueprintLibrary.prototype.SetUserFocus;WidgetBlueprintLibrary.prototype.SetUserFocus = function (Reply, FocusWidget, bInAllUsers = false) { return fnprepatch_107.call(this, Reply, FocusWidget, bInAllUsers) }; } catch (e) {};
-try { let fnprepatch_108 = WidgetBlueprintLibrary.prototype.SetInputMode_UIOnlyEx;WidgetBlueprintLibrary.prototype.SetInputMode_UIOnlyEx = function (Target, InWidgetToFocus, InMouseLockMode = "DoNotLock") { return fnprepatch_108.call(this, Target, InWidgetToFocus, InMouseLockMode) }; } catch (e) {};
-try { let fnprepatch_109 = WidgetBlueprintLibrary.prototype.SetInputMode_UIOnly;WidgetBlueprintLibrary.prototype.SetInputMode_UIOnly = function (Target, InWidgetToFocus, bLockMouseToViewport = false) { return fnprepatch_109.call(this, Target, InWidgetToFocus, bLockMouseToViewport) }; } catch (e) {};
-try { let fnprepatch_110 = WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUIEx;WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUIEx = function (Target, InWidgetToFocus, InMouseLockMode = "DoNotLock", bHideCursorDuringCapture = true) { return fnprepatch_110.call(this, Target, InWidgetToFocus, InMouseLockMode, bHideCursorDuringCapture) }; } catch (e) {};
-try { let fnprepatch_111 = WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUI;WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUI = function (Target, InWidgetToFocus, bLockMouseToViewport = false, bHideCursorDuringCapture = true) { return fnprepatch_111.call(this, Target, InWidgetToFocus, bLockMouseToViewport, bHideCursorDuringCapture) }; } catch (e) {};
-try { let fnprepatch_112 = WidgetBlueprintLibrary.prototype.ReleaseJoystickCapture;WidgetBlueprintLibrary.prototype.ReleaseJoystickCapture = function (Reply, bInAllJoysticks = false) { return fnprepatch_112.call(this, Reply, bInAllJoysticks) }; } catch (e) {};
-try { let fnprepatch_113 = WidgetBlueprintLibrary.prototype.MakeBrushFromTexture;WidgetBlueprintLibrary.prototype.MakeBrushFromTexture = function (Texture, Width = 0, Height = 0) { return fnprepatch_113.call(this, Texture, Width, Height) }; } catch (e) {};
-try { let fnprepatch_114 = WidgetBlueprintLibrary.prototype.MakeBrushFromMaterial;WidgetBlueprintLibrary.prototype.MakeBrushFromMaterial = function (Material, Width = 32, Height = 32) { return fnprepatch_114.call(this, Material, Width, Height) }; } catch (e) {};
-try { let fnprepatch_115 = WidgetBlueprintLibrary.prototype.GetAllWidgetsOfClass;WidgetBlueprintLibrary.prototype.GetAllWidgetsOfClass = function (WorldContextObject, FoundWidgets, WidgetClass, TopLevelOnly = true) { return fnprepatch_115.call(this, WorldContextObject, FoundWidgets, WidgetClass, TopLevelOnly) }; } catch (e) {};
-try { let fnprepatch_116 = WidgetBlueprintLibrary.prototype.DrawTextFormatted;WidgetBlueprintLibrary.prototype.DrawTextFormatted = function (Context, Text, Position, Font, FontSize = 16, FontTypeFace = "Regular", Tint = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_116.call(this, Context, Text, Position, Font, FontSize, FontTypeFace, Tint) }; } catch (e) {};
-try { let fnprepatch_117 = WidgetBlueprintLibrary.prototype.DrawText;WidgetBlueprintLibrary.prototype.DrawText = function (Context, InString, Position, Tint = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_117.call(this, Context, InString, Position, Tint) }; } catch (e) {};
-try { let fnprepatch_118 = WidgetBlueprintLibrary.prototype.DrawLines;WidgetBlueprintLibrary.prototype.DrawLines = function (Context, Points, Tint = {"R":1,"G":1,"B":1,"A":1}, bAntiAlias = true) { return fnprepatch_118.call(this, Context, Points, Tint, bAntiAlias) }; } catch (e) {};
-try { let fnprepatch_119 = WidgetBlueprintLibrary.prototype.DrawLine;WidgetBlueprintLibrary.prototype.DrawLine = function (Context, PositionA, PositionB, Tint = {"R":1,"G":1,"B":1,"A":1}, bAntiAlias = true) { return fnprepatch_119.call(this, Context, PositionA, PositionB, Tint, bAntiAlias) }; } catch (e) {};
-try { let fnprepatch_120 = WidgetBlueprintLibrary.prototype.DrawBox;WidgetBlueprintLibrary.prototype.DrawBox = function (Context, Position, Size, Brush, Tint = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_120.call(this, Context, Position, Size, Brush, Tint) }; } catch (e) {};
-try { let fnprepatch_121 = WidgetBlueprintLibrary.prototype.ClearUserFocus;WidgetBlueprintLibrary.prototype.ClearUserFocus = function (Reply, bInAllUsers = false) { return fnprepatch_121.call(this, Reply, bInAllUsers) }; } catch (e) {};
-try { let fnprepatch_122 = WidgetBlueprintLibrary.prototype.CaptureJoystick;WidgetBlueprintLibrary.prototype.CaptureJoystick = function (Reply, CapturingWidget, bInAllJoysticks = false) { return fnprepatch_122.call(this, Reply, CapturingWidget, bInAllJoysticks) }; } catch (e) {};
+try { let fnprepatch_145 = WidgetBlueprintLibrary.prototype.SetUserFocus;WidgetBlueprintLibrary.prototype.SetUserFocus = function (Reply, FocusWidget, bInAllUsers = false) { return fnprepatch_145.call(this, Reply, FocusWidget, bInAllUsers) }; } catch (e) {};
+try { let fnprepatch_146 = WidgetBlueprintLibrary.prototype.SetInputMode_UIOnlyEx;WidgetBlueprintLibrary.prototype.SetInputMode_UIOnlyEx = function (PlayerController, InWidgetToFocus = undefined, InMouseLockMode = "DoNotLock") { return fnprepatch_146.call(this, PlayerController, InWidgetToFocus, InMouseLockMode) }; } catch (e) {};
+try { let fnprepatch_147 = WidgetBlueprintLibrary.prototype.SetInputMode_UIOnly;WidgetBlueprintLibrary.prototype.SetInputMode_UIOnly = function (Target, InWidgetToFocus = undefined, bLockMouseToViewport = false) { return fnprepatch_147.call(this, Target, InWidgetToFocus, bLockMouseToViewport) }; } catch (e) {};
+try { let fnprepatch_148 = WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUIEx;WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUIEx = function (PlayerController, InWidgetToFocus = undefined, InMouseLockMode = "DoNotLock", bHideCursorDuringCapture = true) { return fnprepatch_148.call(this, PlayerController, InWidgetToFocus, InMouseLockMode, bHideCursorDuringCapture) }; } catch (e) {};
+try { let fnprepatch_149 = WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUI;WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUI = function (Target, InWidgetToFocus = undefined, bLockMouseToViewport = false, bHideCursorDuringCapture = true) { return fnprepatch_149.call(this, Target, InWidgetToFocus, bLockMouseToViewport, bHideCursorDuringCapture) }; } catch (e) {};
+try { let fnprepatch_150 = WidgetBlueprintLibrary.prototype.ReleaseJoystickCapture;WidgetBlueprintLibrary.prototype.ReleaseJoystickCapture = function (Reply, bInAllJoysticks = false) { return fnprepatch_150.call(this, Reply, bInAllJoysticks) }; } catch (e) {};
+try { let fnprepatch_151 = WidgetBlueprintLibrary.prototype.MakeBrushFromTexture;WidgetBlueprintLibrary.prototype.MakeBrushFromTexture = function (Texture, Width = 0, Height = 0) { return fnprepatch_151.call(this, Texture, Width, Height) }; } catch (e) {};
+try { let fnprepatch_152 = WidgetBlueprintLibrary.prototype.MakeBrushFromMaterial;WidgetBlueprintLibrary.prototype.MakeBrushFromMaterial = function (Material, Width = 32, Height = 32) { return fnprepatch_152.call(this, Material, Width, Height) }; } catch (e) {};
+try { let fnprepatch_153 = WidgetBlueprintLibrary.prototype.GetAllWidgetsOfClass;WidgetBlueprintLibrary.prototype.GetAllWidgetsOfClass = function (WorldContextObject, FoundWidgets, WidgetClass, TopLevelOnly = true) { return fnprepatch_153.call(this, WorldContextObject, FoundWidgets, WidgetClass, TopLevelOnly) }; } catch (e) {};
+try { let fnprepatch_154 = WidgetBlueprintLibrary.prototype.DrawTextFormatted;WidgetBlueprintLibrary.prototype.DrawTextFormatted = function (Context, Text, Position, Font, FontSize = 16, FontTypeFace = "Regular", Tint = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_154.call(this, Context, Text, Position, Font, FontSize, FontTypeFace, Tint) }; } catch (e) {};
+try { let fnprepatch_155 = WidgetBlueprintLibrary.prototype.DrawText;WidgetBlueprintLibrary.prototype.DrawText = function (Context, InString, Position, Tint = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_155.call(this, Context, InString, Position, Tint) }; } catch (e) {};
+try { let fnprepatch_156 = WidgetBlueprintLibrary.prototype.DrawLines;WidgetBlueprintLibrary.prototype.DrawLines = function (Context, Points, Tint = {"R":1,"G":1,"B":1,"A":1}, bAntiAlias = true) { return fnprepatch_156.call(this, Context, Points, Tint, bAntiAlias) }; } catch (e) {};
+try { let fnprepatch_157 = WidgetBlueprintLibrary.prototype.DrawLine;WidgetBlueprintLibrary.prototype.DrawLine = function (Context, PositionA, PositionB, Tint = {"R":1,"G":1,"B":1,"A":1}, bAntiAlias = true) { return fnprepatch_157.call(this, Context, PositionA, PositionB, Tint, bAntiAlias) }; } catch (e) {};
+try { let fnprepatch_158 = WidgetBlueprintLibrary.prototype.DrawBox;WidgetBlueprintLibrary.prototype.DrawBox = function (Context, Position, Size, Brush, Tint = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_158.call(this, Context, Position, Size, Brush, Tint) }; } catch (e) {};
+try { let fnprepatch_159 = WidgetBlueprintLibrary.prototype.ClearUserFocus;WidgetBlueprintLibrary.prototype.ClearUserFocus = function (Reply, bInAllUsers = false) { return fnprepatch_159.call(this, Reply, bInAllUsers) }; } catch (e) {};
+try { let fnprepatch_160 = WidgetBlueprintLibrary.prototype.CaptureJoystick;WidgetBlueprintLibrary.prototype.CaptureJoystick = function (Reply, CapturingWidget, bInAllJoysticks = false) { return fnprepatch_160.call(this, Reply, CapturingWidget, bInAllJoysticks) }; } catch (e) {};
 try { WidgetBlueprintLibrary.prototype.SetInputModeUIOnly = WidgetBlueprintLibrary.prototype.SetInputMode_UIOnlyEx; } catch (e) {};
 try { WidgetBlueprintLibrary.SetInputModeUIOnly = WidgetBlueprintLibrary.SetInputMode_UIOnlyEx; } catch (e) {};
 try { WidgetBlueprintLibrary.prototype.SetInputModeUIOnly = WidgetBlueprintLibrary.prototype.SetInputMode_UIOnly; } catch (e) {};
@@ -289,59 +402,150 @@ try { WidgetBlueprintLibrary.prototype.DrawString = WidgetBlueprintLibrary.proto
 try { WidgetBlueprintLibrary.DrawString = WidgetBlueprintLibrary.DrawText; } catch (e) {};
 try { WidgetBlueprintLibrary.prototype.CreateWidget = WidgetBlueprintLibrary.prototype.Create; } catch (e) {};
 try { WidgetBlueprintLibrary.CreateWidget = WidgetBlueprintLibrary.Create; } catch (e) {};
-try { let fnprepatch_123 = WidgetInteractionComponent.prototype.SendKeyChar;WidgetInteractionComponent.prototype.SendKeyChar = function (Characters, bRepeat = false) { return fnprepatch_123.call(this, Characters, bRepeat) }; } catch (e) {};
-try { let fnprepatch_124 = WidgetInteractionComponent.prototype.PressKey;WidgetInteractionComponent.prototype.PressKey = function (Key, bRepeat = false) { return fnprepatch_124.call(this, Key, bRepeat) }; } catch (e) {};
-try { KismetAnimationLibrary.prototype.TwoBoneIK = KismetAnimationLibrary.prototype.K2_TwoBoneIK; } catch (e) {};
-try { KismetAnimationLibrary.TwoBoneIK = KismetAnimationLibrary.K2_TwoBoneIK; } catch (e) {};
-try { KismetAnimationLibrary.prototype.LookAt = KismetAnimationLibrary.prototype.K2_LookAt; } catch (e) {};
-try { KismetAnimationLibrary.LookAt = KismetAnimationLibrary.K2_LookAt; } catch (e) {};
-try { let fnprepatch_125 = PlayMontageCallbackProxy.prototype.CreateProxyObjectForPlayMontage;PlayMontageCallbackProxy.prototype.CreateProxyObjectForPlayMontage = function (InSkeletalMeshComponent, MontageToPlay, PlayRate = 1, StartingPosition = 0, StartingSection = "None") { return fnprepatch_125.call(this, InSkeletalMeshComponent, MontageToPlay, PlayRate, StartingPosition, StartingSection) }; } catch (e) {};
-try { let fnprepatch_126 = MovieSceneSequencePlayer.prototype.PlayLooping;MovieSceneSequencePlayer.prototype.PlayLooping = function (NumLoops = -1) { return fnprepatch_126.call(this, NumLoops) }; } catch (e) {};
-try { let fnprepatch_127 = LevelSequenceActor.prototype.SetBinding;LevelSequenceActor.prototype.SetBinding = function (Binding, Actors, bAllowBindingsFromAsset = false) { return fnprepatch_127.call(this, Binding, Actors, bAllowBindingsFromAsset) }; } catch (e) {};
-try { let fnprepatch_128 = LevelSequenceActor.prototype.GetSequence;LevelSequenceActor.prototype.GetSequence = function (bLoad = false, bInitializePlayer = false) { return fnprepatch_128.call(this, bLoad, bInitializePlayer) }; } catch (e) {};
-try { let fnprepatch_129 = LevelSequenceActor.prototype.AddBinding;LevelSequenceActor.prototype.AddBinding = function (Binding, Actor, bAllowBindingsFromAsset = false) { return fnprepatch_129.call(this, Binding, Actor, bAllowBindingsFromAsset) }; } catch (e) {};
-try { ActorGroupingUtils.prototype.GetActorGroupingUtils = ActorGroupingUtils.prototype.Get; } catch (e) {};
-try { ActorGroupingUtils.GetActorGroupingUtils = ActorGroupingUtils.Get; } catch (e) {};
-try { let fnprepatch_130 = SkinnedMeshComponent.prototype.SetSkeletalMesh;SkinnedMeshComponent.prototype.SetSkeletalMesh = function (NewMesh, bReinitPose = true) { return fnprepatch_130.call(this, NewMesh, bReinitPose) }; } catch (e) {};
-try { let fnprepatch_131 = SkinnedMeshComponent.prototype.SetPhysicsAsset;SkinnedMeshComponent.prototype.SetPhysicsAsset = function (NewPhysicsAsset, bForceReInit = false) { return fnprepatch_131.call(this, NewPhysicsAsset, bForceReInit) }; } catch (e) {};
-try { let fnprepatch_132 = SkinnedMeshComponent.prototype.FindClosestBone_K2;SkinnedMeshComponent.prototype.FindClosestBone_K2 = function (TestLocation, BoneLocation, IgnoreScale = 0, bRequirePhysicsAsset = false) { return fnprepatch_132.call(this, TestLocation, BoneLocation, IgnoreScale, bRequirePhysicsAsset) }; } catch (e) {};
+try { let fnprepatch_161 = WidgetInteractionComponent.prototype.SendKeyChar;WidgetInteractionComponent.prototype.SendKeyChar = function (Characters, bRepeat = false) { return fnprepatch_161.call(this, Characters, bRepeat) }; } catch (e) {};
+try { let fnprepatch_162 = WidgetInteractionComponent.prototype.PressKey;WidgetInteractionComponent.prototype.PressKey = function (Key, bRepeat = false) { return fnprepatch_162.call(this, Key, bRepeat) }; } catch (e) {};
+try { let fnprepatch_163 = SourceControlHelpers.prototype.RevertUnchangedFiles;SourceControlHelpers.prototype.RevertUnchangedFiles = function (InFiles, bSilent = false) { return fnprepatch_163.call(this, InFiles, bSilent) }; } catch (e) {};
+try { let fnprepatch_164 = SourceControlHelpers.prototype.RevertUnchangedFile;SourceControlHelpers.prototype.RevertUnchangedFile = function (InFile, bSilent = false) { return fnprepatch_164.call(this, InFile, bSilent) }; } catch (e) {};
+try { let fnprepatch_165 = SourceControlHelpers.prototype.RevertFiles;SourceControlHelpers.prototype.RevertFiles = function (InFiles, bSilent = false) { return fnprepatch_165.call(this, InFiles, bSilent) }; } catch (e) {};
+try { let fnprepatch_166 = SourceControlHelpers.prototype.RevertFile;SourceControlHelpers.prototype.RevertFile = function (InFile, bSilent = false) { return fnprepatch_166.call(this, InFile, bSilent) }; } catch (e) {};
+try { let fnprepatch_167 = SourceControlHelpers.prototype.QueryFileState;SourceControlHelpers.prototype.QueryFileState = function (InFile, bSilent = false) { return fnprepatch_167.call(this, InFile, bSilent) }; } catch (e) {};
+try { let fnprepatch_168 = SourceControlHelpers.prototype.MarkFilesForAdd;SourceControlHelpers.prototype.MarkFilesForAdd = function (InFiles, bSilent = false) { return fnprepatch_168.call(this, InFiles, bSilent) }; } catch (e) {};
+try { let fnprepatch_169 = SourceControlHelpers.prototype.MarkFileForDelete;SourceControlHelpers.prototype.MarkFileForDelete = function (InFile, bSilent = false) { return fnprepatch_169.call(this, InFile, bSilent) }; } catch (e) {};
+try { let fnprepatch_170 = SourceControlHelpers.prototype.MarkFileForAdd;SourceControlHelpers.prototype.MarkFileForAdd = function (InFile, bSilent = false) { return fnprepatch_170.call(this, InFile, bSilent) }; } catch (e) {};
+try { let fnprepatch_171 = SourceControlHelpers.prototype.CopyFile;SourceControlHelpers.prototype.CopyFile = function (InSourceFile, InDestFile, bSilent = false) { return fnprepatch_171.call(this, InSourceFile, InDestFile, bSilent) }; } catch (e) {};
+try { let fnprepatch_172 = SourceControlHelpers.prototype.CheckOutOrAddFile;SourceControlHelpers.prototype.CheckOutOrAddFile = function (InFile, bSilent = false) { return fnprepatch_172.call(this, InFile, bSilent) }; } catch (e) {};
+try { let fnprepatch_173 = SourceControlHelpers.prototype.CheckOutFiles;SourceControlHelpers.prototype.CheckOutFiles = function (InFiles, bSilent = false) { return fnprepatch_173.call(this, InFiles, bSilent) }; } catch (e) {};
+try { let fnprepatch_174 = SourceControlHelpers.prototype.CheckOutFile;SourceControlHelpers.prototype.CheckOutFile = function (InFile, bSilent = false) { return fnprepatch_174.call(this, InFile, bSilent) }; } catch (e) {};
+try { let fnprepatch_175 = SourceControlHelpers.prototype.CheckInFiles;SourceControlHelpers.prototype.CheckInFiles = function (InFiles, InDescription, bSilent = false) { return fnprepatch_175.call(this, InFiles, InDescription, bSilent) }; } catch (e) {};
+try { let fnprepatch_176 = SourceControlHelpers.prototype.CheckInFile;SourceControlHelpers.prototype.CheckInFile = function (InFile, InDescription, bSilent = false) { return fnprepatch_176.call(this, InFile, InDescription, bSilent) }; } catch (e) {};
+try { let fnprepatch_177 = SkinnedMeshComponent.prototype.SetSkeletalMesh;SkinnedMeshComponent.prototype.SetSkeletalMesh = function (NewMesh, bReinitPose = true) { return fnprepatch_177.call(this, NewMesh, bReinitPose) }; } catch (e) {};
+try { let fnprepatch_178 = SkinnedMeshComponent.prototype.SetPhysicsAsset;SkinnedMeshComponent.prototype.SetPhysicsAsset = function (NewPhysicsAsset, bForceReInit = false) { return fnprepatch_178.call(this, NewPhysicsAsset, bForceReInit) }; } catch (e) {};
+try { let fnprepatch_179 = SkinnedMeshComponent.prototype.SetMasterPoseComponent;SkinnedMeshComponent.prototype.SetMasterPoseComponent = function (NewMasterBoneComponent, bForceUpdate = false) { return fnprepatch_179.call(this, NewMasterBoneComponent, bForceUpdate) }; } catch (e) {};
+try { let fnprepatch_180 = SkinnedMeshComponent.prototype.GetDeltaTransformFromRefPose;SkinnedMeshComponent.prototype.GetDeltaTransformFromRefPose = function (BoneName, BaseName = "None") { return fnprepatch_180.call(this, BoneName, BaseName) }; } catch (e) {};
+try { let fnprepatch_181 = SkinnedMeshComponent.prototype.FindClosestBone_K2;SkinnedMeshComponent.prototype.FindClosestBone_K2 = function (TestLocation, BoneLocation, IgnoreScale = 0, bRequirePhysicsAsset = false) { return fnprepatch_181.call(this, TestLocation, BoneLocation, IgnoreScale, bRequirePhysicsAsset) }; } catch (e) {};
 try { SkinnedMeshComponent.prototype.SetVertexColorOverride = SkinnedMeshComponent.prototype.SetVertexColorOverride_LinearColor; } catch (e) {};
 try { SkinnedMeshComponent.prototype.FindClosestBone = SkinnedMeshComponent.prototype.FindClosestBone_K2; } catch (e) {};
-try { let fnprepatch_133 = SkeletalMeshComponent.prototype.UnbindClothFromMasterPoseComponent;SkeletalMeshComponent.prototype.UnbindClothFromMasterPoseComponent = function (bRestoreSimulationSpace = true) { return fnprepatch_133.call(this, bRestoreSimulationSpace) }; } catch (e) {};
-try { let fnprepatch_134 = SkeletalMeshComponent.prototype.SetPosition;SkeletalMeshComponent.prototype.SetPosition = function (InPos, bFireNotifies = true) { return fnprepatch_134.call(this, InPos, bFireNotifies) }; } catch (e) {};
-try { let fnprepatch_135 = SkeletalMeshComponent.prototype.SetNotifyRigidBodyCollisionBelow;SkeletalMeshComponent.prototype.SetNotifyRigidBodyCollisionBelow = function (bNewNotifyRigidBodyCollision, BoneName = "None", bIncludeSelf = true) { return fnprepatch_135.call(this, bNewNotifyRigidBodyCollision, BoneName, bIncludeSelf) }; } catch (e) {};
-try { let fnprepatch_136 = SkeletalMeshComponent.prototype.SetMorphTarget;SkeletalMeshComponent.prototype.SetMorphTarget = function (MorphTargetName, Value, bRemoveZeroWeight = true) { return fnprepatch_136.call(this, MorphTargetName, Value, bRemoveZeroWeight) }; } catch (e) {};
-try { let fnprepatch_137 = SkeletalMeshComponent.prototype.SetEnableGravityOnAllBodiesBelow;SkeletalMeshComponent.prototype.SetEnableGravityOnAllBodiesBelow = function (bEnableGravity, BoneName, bIncludeSelf = true) { return fnprepatch_137.call(this, bEnableGravity, BoneName, bIncludeSelf) }; } catch (e) {};
-try { let fnprepatch_138 = SkeletalMeshComponent.prototype.SetConstraintProfileForAll;SkeletalMeshComponent.prototype.SetConstraintProfileForAll = function (ProfileName, bDefaultIfNotFound = false) { return fnprepatch_138.call(this, ProfileName, bDefaultIfNotFound) }; } catch (e) {};
-try { let fnprepatch_139 = SkeletalMeshComponent.prototype.SetConstraintProfile;SkeletalMeshComponent.prototype.SetConstraintProfile = function (JointName, ProfileName, bDefaultIfNotFound = false) { return fnprepatch_139.call(this, JointName, ProfileName, bDefaultIfNotFound) }; } catch (e) {};
-try { let fnprepatch_140 = SkeletalMeshComponent.prototype.SetBodyNotifyRigidBodyCollision;SkeletalMeshComponent.prototype.SetBodyNotifyRigidBodyCollision = function (bNewNotifyRigidBodyCollision, BoneName = "None") { return fnprepatch_140.call(this, bNewNotifyRigidBodyCollision, BoneName) }; } catch (e) {};
-try { let fnprepatch_141 = SkeletalMeshComponent.prototype.SetAllMotorsAngularVelocityDrive;SkeletalMeshComponent.prototype.SetAllMotorsAngularVelocityDrive = function (bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType = false) { return fnprepatch_141.call(this, bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType) }; } catch (e) {};
-try { let fnprepatch_142 = SkeletalMeshComponent.prototype.SetAllMotorsAngularPositionDrive;SkeletalMeshComponent.prototype.SetAllMotorsAngularPositionDrive = function (bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType = false) { return fnprepatch_142.call(this, bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType) }; } catch (e) {};
-try { let fnprepatch_143 = SkeletalMeshComponent.prototype.SetAllMotorsAngularDriveParams;SkeletalMeshComponent.prototype.SetAllMotorsAngularDriveParams = function (InSpring, InDamping, InForceLimit, bSkipCustomPhysicsType = false) { return fnprepatch_143.call(this, InSpring, InDamping, InForceLimit, bSkipCustomPhysicsType) }; } catch (e) {};
-try { let fnprepatch_144 = SkeletalMeshComponent.prototype.SetAllBodiesPhysicsBlendWeight;SkeletalMeshComponent.prototype.SetAllBodiesPhysicsBlendWeight = function (PhysicsBlendWeight, bSkipCustomPhysicsType = false) { return fnprepatch_144.call(this, PhysicsBlendWeight, bSkipCustomPhysicsType) }; } catch (e) {};
-try { let fnprepatch_145 = SkeletalMeshComponent.prototype.SetAllBodiesBelowSimulatePhysics;SkeletalMeshComponent.prototype.SetAllBodiesBelowSimulatePhysics = function (InBoneName, bNewSimulate, bIncludeSelf = true) { return fnprepatch_145.call(this, InBoneName, bNewSimulate, bIncludeSelf) }; } catch (e) {};
-try { let fnprepatch_146 = SkeletalMeshComponent.prototype.SetAllBodiesBelowPhysicsBlendWeight;SkeletalMeshComponent.prototype.SetAllBodiesBelowPhysicsBlendWeight = function (InBoneName, PhysicsBlendWeight, bSkipCustomPhysicsType = false, bIncludeSelf = true) { return fnprepatch_146.call(this, InBoneName, PhysicsBlendWeight, bSkipCustomPhysicsType, bIncludeSelf) }; } catch (e) {};
-try { let fnprepatch_147 = SkeletalMeshComponent.prototype.OverrideAnimationData;SkeletalMeshComponent.prototype.OverrideAnimationData = function (InAnimToPlay, bIsLooping = true, bIsPlaying = true, Position = 0, PlayRate = 1) { return fnprepatch_147.call(this, InAnimToPlay, bIsLooping, bIsPlaying, Position, PlayRate) }; } catch (e) {};
-try { let fnprepatch_148 = SkeletalMeshComponent.prototype.GetBoneMass;SkeletalMeshComponent.prototype.GetBoneMass = function (BoneName = "None", bScaleMass = true) { return fnprepatch_148.call(this, BoneName, bScaleMass) }; } catch (e) {};
-try { let fnprepatch_149 = SkeletalMeshComponent.prototype.AddImpulseToAllBodiesBelow;SkeletalMeshComponent.prototype.AddImpulseToAllBodiesBelow = function (Impulse, BoneName = "None", bVelChange = false, bIncludeSelf = true) { return fnprepatch_149.call(this, Impulse, BoneName, bVelChange, bIncludeSelf) }; } catch (e) {};
-try { let fnprepatch_150 = SkeletalMeshComponent.prototype.AddForceToAllBodiesBelow;SkeletalMeshComponent.prototype.AddForceToAllBodiesBelow = function (Force, BoneName = "None", bAccelChange = false, bIncludeSelf = true) { return fnprepatch_150.call(this, Force, BoneName, bAccelChange, bIncludeSelf) }; } catch (e) {};
-try { let fnprepatch_151 = SkeletalMeshComponent.prototype.AccumulateAllBodiesBelowPhysicsBlendWeight;SkeletalMeshComponent.prototype.AccumulateAllBodiesBelowPhysicsBlendWeight = function (InBoneName, AddPhysicsBlendWeight, bSkipCustomPhysicsType = false) { return fnprepatch_151.call(this, InBoneName, AddPhysicsBlendWeight, bSkipCustomPhysicsType) }; } catch (e) {};
+try { let fnprepatch_182 = SkeletalMeshComponent.prototype.UnbindClothFromMasterPoseComponent;SkeletalMeshComponent.prototype.UnbindClothFromMasterPoseComponent = function (bRestoreSimulationSpace = true) { return fnprepatch_182.call(this, bRestoreSimulationSpace) }; } catch (e) {};
+try { let fnprepatch_183 = SkeletalMeshComponent.prototype.SetPosition;SkeletalMeshComponent.prototype.SetPosition = function (InPos, bFireNotifies = true) { return fnprepatch_183.call(this, InPos, bFireNotifies) }; } catch (e) {};
+try { let fnprepatch_184 = SkeletalMeshComponent.prototype.SetNotifyRigidBodyCollisionBelow;SkeletalMeshComponent.prototype.SetNotifyRigidBodyCollisionBelow = function (bNewNotifyRigidBodyCollision, BoneName = "None", bIncludeSelf = true) { return fnprepatch_184.call(this, bNewNotifyRigidBodyCollision, BoneName, bIncludeSelf) }; } catch (e) {};
+try { let fnprepatch_185 = SkeletalMeshComponent.prototype.SetMorphTarget;SkeletalMeshComponent.prototype.SetMorphTarget = function (MorphTargetName, Value, bRemoveZeroWeight = true) { return fnprepatch_185.call(this, MorphTargetName, Value, bRemoveZeroWeight) }; } catch (e) {};
+try { let fnprepatch_186 = SkeletalMeshComponent.prototype.SetEnableGravityOnAllBodiesBelow;SkeletalMeshComponent.prototype.SetEnableGravityOnAllBodiesBelow = function (bEnableGravity, BoneName, bIncludeSelf = true) { return fnprepatch_186.call(this, bEnableGravity, BoneName, bIncludeSelf) }; } catch (e) {};
+try { let fnprepatch_187 = SkeletalMeshComponent.prototype.SetConstraintProfileForAll;SkeletalMeshComponent.prototype.SetConstraintProfileForAll = function (ProfileName, bDefaultIfNotFound = false) { return fnprepatch_187.call(this, ProfileName, bDefaultIfNotFound) }; } catch (e) {};
+try { let fnprepatch_188 = SkeletalMeshComponent.prototype.SetConstraintProfile;SkeletalMeshComponent.prototype.SetConstraintProfile = function (JointName, ProfileName, bDefaultIfNotFound = false) { return fnprepatch_188.call(this, JointName, ProfileName, bDefaultIfNotFound) }; } catch (e) {};
+try { let fnprepatch_189 = SkeletalMeshComponent.prototype.SetBodyNotifyRigidBodyCollision;SkeletalMeshComponent.prototype.SetBodyNotifyRigidBodyCollision = function (bNewNotifyRigidBodyCollision, BoneName = "None") { return fnprepatch_189.call(this, bNewNotifyRigidBodyCollision, BoneName) }; } catch (e) {};
+try { let fnprepatch_190 = SkeletalMeshComponent.prototype.SetAllMotorsAngularVelocityDrive;SkeletalMeshComponent.prototype.SetAllMotorsAngularVelocityDrive = function (bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType = false) { return fnprepatch_190.call(this, bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType) }; } catch (e) {};
+try { let fnprepatch_191 = SkeletalMeshComponent.prototype.SetAllMotorsAngularPositionDrive;SkeletalMeshComponent.prototype.SetAllMotorsAngularPositionDrive = function (bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType = false) { return fnprepatch_191.call(this, bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType) }; } catch (e) {};
+try { let fnprepatch_192 = SkeletalMeshComponent.prototype.SetAllMotorsAngularDriveParams;SkeletalMeshComponent.prototype.SetAllMotorsAngularDriveParams = function (InSpring, InDamping, InForceLimit, bSkipCustomPhysicsType = false) { return fnprepatch_192.call(this, InSpring, InDamping, InForceLimit, bSkipCustomPhysicsType) }; } catch (e) {};
+try { let fnprepatch_193 = SkeletalMeshComponent.prototype.SetAllBodiesPhysicsBlendWeight;SkeletalMeshComponent.prototype.SetAllBodiesPhysicsBlendWeight = function (PhysicsBlendWeight, bSkipCustomPhysicsType = false) { return fnprepatch_193.call(this, PhysicsBlendWeight, bSkipCustomPhysicsType) }; } catch (e) {};
+try { let fnprepatch_194 = SkeletalMeshComponent.prototype.SetAllBodiesBelowSimulatePhysics;SkeletalMeshComponent.prototype.SetAllBodiesBelowSimulatePhysics = function (InBoneName, bNewSimulate, bIncludeSelf = true) { return fnprepatch_194.call(this, InBoneName, bNewSimulate, bIncludeSelf) }; } catch (e) {};
+try { let fnprepatch_195 = SkeletalMeshComponent.prototype.SetAllBodiesBelowPhysicsBlendWeight;SkeletalMeshComponent.prototype.SetAllBodiesBelowPhysicsBlendWeight = function (InBoneName, PhysicsBlendWeight, bSkipCustomPhysicsType = false, bIncludeSelf = true) { return fnprepatch_195.call(this, InBoneName, PhysicsBlendWeight, bSkipCustomPhysicsType, bIncludeSelf) }; } catch (e) {};
+try { let fnprepatch_196 = SkeletalMeshComponent.prototype.ResetAnimInstanceDynamics;SkeletalMeshComponent.prototype.ResetAnimInstanceDynamics = function (InTeleportType = "ResetPhysics") { return fnprepatch_196.call(this, InTeleportType) }; } catch (e) {};
+try { let fnprepatch_197 = SkeletalMeshComponent.prototype.OverrideAnimationData;SkeletalMeshComponent.prototype.OverrideAnimationData = function (InAnimToPlay, bIsLooping = true, bIsPlaying = true, Position = 0, PlayRate = 1) { return fnprepatch_197.call(this, InAnimToPlay, bIsLooping, bIsPlaying, Position, PlayRate) }; } catch (e) {};
+try { let fnprepatch_198 = SkeletalMeshComponent.prototype.GetBoneMass;SkeletalMeshComponent.prototype.GetBoneMass = function (BoneName = "None", bScaleMass = true) { return fnprepatch_198.call(this, BoneName, bScaleMass) }; } catch (e) {};
+try { let fnprepatch_199 = SkeletalMeshComponent.prototype.AddImpulseToAllBodiesBelow;SkeletalMeshComponent.prototype.AddImpulseToAllBodiesBelow = function (Impulse, BoneName = "None", bVelChange = false, bIncludeSelf = true) { return fnprepatch_199.call(this, Impulse, BoneName, bVelChange, bIncludeSelf) }; } catch (e) {};
+try { let fnprepatch_200 = SkeletalMeshComponent.prototype.AddForceToAllBodiesBelow;SkeletalMeshComponent.prototype.AddForceToAllBodiesBelow = function (Force, BoneName = "None", bAccelChange = false, bIncludeSelf = true) { return fnprepatch_200.call(this, Force, BoneName, bAccelChange, bIncludeSelf) }; } catch (e) {};
+try { let fnprepatch_201 = SkeletalMeshComponent.prototype.AccumulateAllBodiesBelowPhysicsBlendWeight;SkeletalMeshComponent.prototype.AccumulateAllBodiesBelowPhysicsBlendWeight = function (InBoneName, AddPhysicsBlendWeight, bSkipCustomPhysicsType = false) { return fnprepatch_201.call(this, InBoneName, AddPhysicsBlendWeight, bSkipCustomPhysicsType) }; } catch (e) {};
+try { SkeletalMeshComponent.prototype.GetDirectionBetweenSockets = SkeletalMeshComponent.prototype.K2_DirectionBetweenSockets; } catch (e) {};
+try { SkeletalMeshComponent.prototype.GetDistanceBetweenTwoSockets = SkeletalMeshComponent.prototype.K2_DistanceBetweenTwoSocketsAndMapRange; } catch (e) {};
+try { SkeletalMeshComponent.prototype.SetAnimInstanceClass = SkeletalMeshComponent.prototype.K2_SetAnimInstanceClass; } catch (e) {};
 try { SkeletalMeshComponent.prototype.GetClosestPointOnPhysicsAsset = SkeletalMeshComponent.prototype.K2_GetClosestPointOnPhysicsAsset; } catch (e) {};
-try { let fnprepatch_152 = EditorLevelUtils.prototype.CreateNewStreamingLevel;EditorLevelUtils.prototype.CreateNewStreamingLevel = function (LevelStreamingClass, NewLevelPath, bMoveSelectedActorsIntoNewLevel = false) { return fnprepatch_152.call(this, LevelStreamingClass, NewLevelPath, bMoveSelectedActorsIntoNewLevel) }; } catch (e) {};
-try { let fnprepatch_153 = InstancedStaticMeshComponent.prototype.UpdateInstanceTransform;InstancedStaticMeshComponent.prototype.UpdateInstanceTransform = function (InstanceIndex, NewInstanceTransform, bWorldSpace = false, bMarkRenderStateDirty = false, bTeleport = false) { return fnprepatch_153.call(this, InstanceIndex, NewInstanceTransform, bWorldSpace, bMarkRenderStateDirty, bTeleport) }; } catch (e) {};
-try { let fnprepatch_154 = InstancedStaticMeshComponent.prototype.GetInstanceTransform;InstancedStaticMeshComponent.prototype.GetInstanceTransform = function (InstanceIndex, OutInstanceTransform, bWorldSpace = false) { return fnprepatch_154.call(this, InstanceIndex, OutInstanceTransform, bWorldSpace) }; } catch (e) {};
-try { let fnprepatch_155 = InstancedStaticMeshComponent.prototype.GetInstancesOverlappingSphere;InstancedStaticMeshComponent.prototype.GetInstancesOverlappingSphere = function (Center, Radius, bSphereInWorldSpace = true) { return fnprepatch_155.call(this, Center, Radius, bSphereInWorldSpace) }; } catch (e) {};
-try { let fnprepatch_156 = InstancedStaticMeshComponent.prototype.GetInstancesOverlappingBox;InstancedStaticMeshComponent.prototype.GetInstancesOverlappingBox = function (Box, bBoxInWorldSpace = true) { return fnprepatch_156.call(this, Box, bBoxInWorldSpace) }; } catch (e) {};
-try { let fnprepatch_157 = ProceduralFoliageSpawner.prototype.Simulate;ProceduralFoliageSpawner.prototype.Simulate = function (NumSteps = -1) { return fnprepatch_157.call(this, NumSteps) }; } catch (e) {};
-try { let fnprepatch_158 = LandscapeProxy.prototype.EditorApplySpline;LandscapeProxy.prototype.EditorApplySpline = function (InSplineComponent, StartWidth = 200, EndWidth = 200, StartSideFalloff = 200, EndSideFalloff = 200, StartRoll = 0, EndRoll = 0, NumSubdivisions = 20, bRaiseHeights = true, bLowerHeights = true, PaintLayer) { return fnprepatch_158.call(this, InSplineComponent, StartWidth, EndWidth, StartSideFalloff, EndSideFalloff, StartRoll, EndRoll, NumSubdivisions, bRaiseHeights, bLowerHeights, PaintLayer) }; } catch (e) {};
-try { let fnprepatch_159 = AmbientSound.prototype.Play;AmbientSound.prototype.Play = function (StartTime = 0) { return fnprepatch_159.call(this, StartTime) }; } catch (e) {};
-try { let fnprepatch_160 = AmbientSound.prototype.FadeIn;AmbientSound.prototype.FadeIn = function (FadeInDuration, FadeVolumeLevel = 1) { return fnprepatch_160.call(this, FadeInDuration, FadeVolumeLevel) }; } catch (e) {};
-try { let fnprepatch_161 = AudioComponent.prototype.Play;AudioComponent.prototype.Play = function (StartTime = 0) { return fnprepatch_161.call(this, StartTime) }; } catch (e) {};
-try { let fnprepatch_162 = AudioComponent.prototype.FadeIn;AudioComponent.prototype.FadeIn = function (FadeInDuration, FadeVolumeLevel = 1, StartTime = 0) { return fnprepatch_162.call(this, FadeInDuration, FadeVolumeLevel, StartTime) }; } catch (e) {};
+try { let fnprepatch_202 = AnimInstance.prototype.StopSlotAnimation;AnimInstance.prototype.StopSlotAnimation = function (InBlendOutTime = 0.25, SlotNodeName = "None") { return fnprepatch_202.call(this, InBlendOutTime, SlotNodeName) }; } catch (e) {};
+try { let fnprepatch_203 = AnimInstance.prototype.PlaySlotAnimationAsDynamicMontage;AnimInstance.prototype.PlaySlotAnimationAsDynamicMontage = function (Asset, SlotNodeName, BlendInTime = 0.25, BlendOutTime = 0.25, InPlayRate = 1, LoopCount = 1, BlendOutTriggerTime = -1, InTimeToStartMontageAt = 0) { return fnprepatch_203.call(this, Asset, SlotNodeName, BlendInTime, BlendOutTime, InPlayRate, LoopCount, BlendOutTriggerTime, InTimeToStartMontageAt) }; } catch (e) {};
+try { let fnprepatch_204 = AnimInstance.prototype.PlaySlotAnimation;AnimInstance.prototype.PlaySlotAnimation = function (Asset, SlotNodeName, BlendInTime = 0.25, BlendOutTime = 0.25, InPlayRate = 1, LoopCount = 1) { return fnprepatch_204.call(this, Asset, SlotNodeName, BlendInTime, BlendOutTime, InPlayRate, LoopCount) }; } catch (e) {};
+try { let fnprepatch_205 = AnimInstance.prototype.Montage_Stop;AnimInstance.prototype.Montage_Stop = function (InBlendOutTime, Montage = undefined) { return fnprepatch_205.call(this, InBlendOutTime, Montage) }; } catch (e) {};
+try { let fnprepatch_206 = AnimInstance.prototype.Montage_SetPlayRate;AnimInstance.prototype.Montage_SetPlayRate = function (Montage, NewPlayRate = 1) { return fnprepatch_206.call(this, Montage, NewPlayRate) }; } catch (e) {};
+try { let fnprepatch_207 = AnimInstance.prototype.Montage_SetNextSection;AnimInstance.prototype.Montage_SetNextSection = function (SectionNameToChange, NextSection, Montage = undefined) { return fnprepatch_207.call(this, SectionNameToChange, NextSection, Montage) }; } catch (e) {};
+try { let fnprepatch_208 = AnimInstance.prototype.Montage_Play;AnimInstance.prototype.Montage_Play = function (MontageToPlay, InPlayRate = 1, ReturnValueType = "MontageLength", InTimeToStartMontageAt = 0, bStopAllMontages = true) { return fnprepatch_208.call(this, MontageToPlay, InPlayRate, ReturnValueType, InTimeToStartMontageAt, bStopAllMontages) }; } catch (e) {};
+try { let fnprepatch_209 = AnimInstance.prototype.Montage_Pause;AnimInstance.prototype.Montage_Pause = function (Montage = undefined) { return fnprepatch_209.call(this, Montage) }; } catch (e) {};
+try { let fnprepatch_210 = AnimInstance.prototype.Montage_JumpToSectionsEnd;AnimInstance.prototype.Montage_JumpToSectionsEnd = function (SectionName, Montage = undefined) { return fnprepatch_210.call(this, SectionName, Montage) }; } catch (e) {};
+try { let fnprepatch_211 = AnimInstance.prototype.Montage_JumpToSection;AnimInstance.prototype.Montage_JumpToSection = function (SectionName, Montage = undefined) { return fnprepatch_211.call(this, SectionName, Montage) }; } catch (e) {};
+try { let fnprepatch_212 = AnimInstance.prototype.Montage_GetCurrentSection;AnimInstance.prototype.Montage_GetCurrentSection = function (Montage = undefined) { return fnprepatch_212.call(this, Montage) }; } catch (e) {};
+try { let fnprepatch_213 = AnimInstance.prototype.IsSyncGroupBetweenMarkers;AnimInstance.prototype.IsSyncGroupBetweenMarkers = function (InSyncGroupName, PreviousMarker, NextMarker, bRespectMarkerOrder = true) { return fnprepatch_213.call(this, InSyncGroupName, PreviousMarker, NextMarker, bRespectMarkerOrder) }; } catch (e) {};
+try { AnimInstance.prototype.GetTransitionTimeElapsed = AnimInstance.prototype.GetInstanceTransitionTimeElapsedFraction; } catch (e) {};
+try { AnimInstance.prototype.GetTransitionTimeElapsed = AnimInstance.prototype.GetInstanceTransitionTimeElapsed; } catch (e) {};
+try { AnimInstance.prototype.GetTransitionCrossfadeDuration = AnimInstance.prototype.GetInstanceTransitionCrossfadeDuration; } catch (e) {};
+try { AnimInstance.prototype.StateWeight = AnimInstance.prototype.GetInstanceStateWeight; } catch (e) {};
+try { AnimInstance.prototype.MachineWeight = AnimInstance.prototype.GetInstanceMachineWeight; } catch (e) {};
+try { AnimInstance.prototype.CurrentStateTime = AnimInstance.prototype.GetInstanceCurrentStateElapsedTime; } catch (e) {};
+try { AnimInstance.prototype.TimeRemaining = AnimInstance.prototype.GetInstanceAssetPlayerTimeFromEndFraction; } catch (e) {};
+try { AnimInstance.prototype.TimeRemaining = AnimInstance.prototype.GetInstanceAssetPlayerTimeFromEnd; } catch (e) {};
+try { AnimInstance.prototype.CurrentTime = AnimInstance.prototype.GetInstanceAssetPlayerTimeFraction; } catch (e) {};
+try { AnimInstance.prototype.CurrentTime = AnimInstance.prototype.GetInstanceAssetPlayerTime; } catch (e) {};
+try { AnimInstance.prototype.Length = AnimInstance.prototype.GetInstanceAssetPlayerLength; } catch (e) {};
+try { let fnprepatch_214 = AnimSingleNodeInstance.prototype.SetPositionWithPreviousTime;AnimSingleNodeInstance.prototype.SetPositionWithPreviousTime = function (InPosition, InPreviousTime, bFireNotifies = true) { return fnprepatch_214.call(this, InPosition, InPreviousTime, bFireNotifies) }; } catch (e) {};
+try { let fnprepatch_215 = AnimSingleNodeInstance.prototype.SetPosition;AnimSingleNodeInstance.prototype.SetPosition = function (InPosition, bFireNotifies = true) { return fnprepatch_215.call(this, InPosition, bFireNotifies) }; } catch (e) {};
+try { let fnprepatch_216 = AnimSingleNodeInstance.prototype.SetAnimationAsset;AnimSingleNodeInstance.prototype.SetAnimationAsset = function (NewAsset, bIsLooping = true, InPlayRate = 1) { return fnprepatch_216.call(this, NewAsset, bIsLooping, InPlayRate) }; } catch (e) {};
+try { let fnprepatch_217 = AnimSingleNodeInstance.prototype.PlayAnim;AnimSingleNodeInstance.prototype.PlayAnim = function (bIsLooping = false, InPlayRate = 1, InStartPosition = 0) { return fnprepatch_217.call(this, bIsLooping, InPlayRate, InStartPosition) }; } catch (e) {};
+try { KismetAnimationLibrary.prototype.TwoBoneIKFunction = KismetAnimationLibrary.prototype.K2_TwoBoneIK; } catch (e) {};
+try { KismetAnimationLibrary.TwoBoneIKFunction = KismetAnimationLibrary.K2_TwoBoneIK; } catch (e) {};
+try { KismetAnimationLibrary.prototype.MakePerlinNoiseVectorandRemap = KismetAnimationLibrary.prototype.K2_MakePerlinNoiseVectorAndRemap; } catch (e) {};
+try { KismetAnimationLibrary.MakePerlinNoiseVectorandRemap = KismetAnimationLibrary.K2_MakePerlinNoiseVectorAndRemap; } catch (e) {};
+try { KismetAnimationLibrary.prototype.MakePerlinNoiseandRemap = KismetAnimationLibrary.prototype.K2_MakePerlinNoiseAndRemap; } catch (e) {};
+try { KismetAnimationLibrary.MakePerlinNoiseandRemap = KismetAnimationLibrary.K2_MakePerlinNoiseAndRemap; } catch (e) {};
+try { KismetAnimationLibrary.prototype.LookAtFunction = KismetAnimationLibrary.prototype.K2_LookAt; } catch (e) {};
+try { KismetAnimationLibrary.LookAtFunction = KismetAnimationLibrary.K2_LookAt; } catch (e) {};
+try { KismetAnimationLibrary.prototype.GetDistanceBetweenTwoSockets = KismetAnimationLibrary.prototype.K2_DistanceBetweenTwoSocketsAndMapRange; } catch (e) {};
+try { KismetAnimationLibrary.GetDistanceBetweenTwoSockets = KismetAnimationLibrary.K2_DistanceBetweenTwoSocketsAndMapRange; } catch (e) {};
+try { KismetAnimationLibrary.prototype.GetDirectionBetweenSockets = KismetAnimationLibrary.prototype.K2_DirectionBetweenSockets; } catch (e) {};
+try { KismetAnimationLibrary.GetDirectionBetweenSockets = KismetAnimationLibrary.K2_DirectionBetweenSockets; } catch (e) {};
+try { let fnprepatch_218 = PlayMontageCallbackProxy.prototype.CreateProxyObjectForPlayMontage;PlayMontageCallbackProxy.prototype.CreateProxyObjectForPlayMontage = function (InSkeletalMeshComponent, MontageToPlay, PlayRate = 1, StartingPosition = 0, StartingSection = "None") { return fnprepatch_218.call(this, InSkeletalMeshComponent, MontageToPlay, PlayRate, StartingPosition, StartingSection) }; } catch (e) {};
+try { MovieSceneTransformOrigin.prototype.GetTransformOrigin = MovieSceneTransformOrigin.prototype.BP_GetTransformOrigin; } catch (e) {};
+try { let fnprepatch_219 = TimeManagementBlueprintLibrary.prototype.Conv_TimecodeToString;TimeManagementBlueprintLibrary.prototype.Conv_TimecodeToString = function (InTimecode, bForceSignDisplay = false) { return fnprepatch_219.call(this, InTimecode, bForceSignDisplay) }; } catch (e) {};
+try { TimeManagementBlueprintLibrary.prototype.TransformFrameTime = TimeManagementBlueprintLibrary.prototype.TransformTime; } catch (e) {};
+try { TimeManagementBlueprintLibrary.TransformFrameTime = TimeManagementBlueprintLibrary.TransformTime; } catch (e) {};
+try { TimeManagementBlueprintLibrary.prototype.SnapFrameTime = TimeManagementBlueprintLibrary.prototype.SnapFrameTimeToRate; } catch (e) {};
+try { TimeManagementBlueprintLibrary.SnapFrameTime = TimeManagementBlueprintLibrary.SnapFrameTimeToRate; } catch (e) {};
+try { TimeManagementBlueprintLibrary.prototype.IsMultipleOf = TimeManagementBlueprintLibrary.prototype.IsValid_MultipleOf; } catch (e) {};
+try { TimeManagementBlueprintLibrary.IsMultipleOf = TimeManagementBlueprintLibrary.IsValid_MultipleOf; } catch (e) {};
+try { TimeManagementBlueprintLibrary.prototype.IsValid = TimeManagementBlueprintLibrary.prototype.IsValid_Framerate; } catch (e) {};
+try { TimeManagementBlueprintLibrary.IsValid = TimeManagementBlueprintLibrary.IsValid_Framerate; } catch (e) {};
+try { TimeManagementBlueprintLibrary.prototype.TimecodetoString = TimeManagementBlueprintLibrary.prototype.Conv_TimecodeToString; } catch (e) {};
+try { TimeManagementBlueprintLibrary.TimecodetoString = TimeManagementBlueprintLibrary.Conv_TimecodeToString; } catch (e) {};
+try { TimeManagementBlueprintLibrary.prototype.QualifiedFrameTimetoSeconds = TimeManagementBlueprintLibrary.prototype.Conv_QualifiedFrameTimeToSeconds; } catch (e) {};
+try { TimeManagementBlueprintLibrary.QualifiedFrameTimetoSeconds = TimeManagementBlueprintLibrary.Conv_QualifiedFrameTimeToSeconds; } catch (e) {};
+try { TimeManagementBlueprintLibrary.prototype.FrameRatetoSeconds = TimeManagementBlueprintLibrary.prototype.Conv_FrameRateToSeconds; } catch (e) {};
+try { TimeManagementBlueprintLibrary.FrameRatetoSeconds = TimeManagementBlueprintLibrary.Conv_FrameRateToSeconds; } catch (e) {};
+try { TimeManagementBlueprintLibrary.prototype.FrameNumbertoInteger = TimeManagementBlueprintLibrary.prototype.Conv_FrameNumberToInteger; } catch (e) {};
+try { TimeManagementBlueprintLibrary.FrameNumbertoInteger = TimeManagementBlueprintLibrary.Conv_FrameNumberToInteger; } catch (e) {};
+try { let fnprepatch_220 = MovieSceneSequencePlayer.prototype.PlayLooping;MovieSceneSequencePlayer.prototype.PlayLooping = function (NumLoops = -1) { return fnprepatch_220.call(this, NumLoops) }; } catch (e) {};
+try { MovieSceneSequencePlayer.prototype.SetPlayRange = MovieSceneSequencePlayer.prototype.SetTimeRange; } catch (e) {};
+try { MovieSceneSequencePlayer.prototype.SetPlayRange = MovieSceneSequencePlayer.prototype.SetFrameRange; } catch (e) {};
+try { MovieSceneSequencePlayer.prototype.ScrubTo = MovieSceneSequencePlayer.prototype.ScrubToSeconds; } catch (e) {};
+try { MovieSceneSequencePlayer.prototype.ScrubTo = MovieSceneSequencePlayer.prototype.ScrubToFrame; } catch (e) {};
+try { MovieSceneSequencePlayer.prototype.PlayTo = MovieSceneSequencePlayer.prototype.PlayToSeconds; } catch (e) {};
+try { MovieSceneSequencePlayer.prototype.PlayTo = MovieSceneSequencePlayer.prototype.PlayToFrame; } catch (e) {};
+try { MovieSceneSequencePlayer.prototype.JumpTo = MovieSceneSequencePlayer.prototype.JumpToSeconds; } catch (e) {};
+try { MovieSceneSequencePlayer.prototype.JumpTo = MovieSceneSequencePlayer.prototype.JumpToFrame; } catch (e) {};
+try { let fnprepatch_221 = LevelSequenceActor.prototype.SetBinding;LevelSequenceActor.prototype.SetBinding = function (Binding, Actors, bAllowBindingsFromAsset = false) { return fnprepatch_221.call(this, Binding, Actors, bAllowBindingsFromAsset) }; } catch (e) {};
+try { let fnprepatch_222 = LevelSequenceActor.prototype.GetSequence;LevelSequenceActor.prototype.GetSequence = function (bLoad = false, bInitializePlayer = false) { return fnprepatch_222.call(this, bLoad, bInitializePlayer) }; } catch (e) {};
+try { let fnprepatch_223 = LevelSequenceActor.prototype.AddBinding;LevelSequenceActor.prototype.AddBinding = function (Binding, Actor, bAllowBindingsFromAsset = false) { return fnprepatch_223.call(this, Binding, Actor, bAllowBindingsFromAsset) }; } catch (e) {};
+try { ActorGroupingUtils.prototype.GetActorGroupingUtils = ActorGroupingUtils.prototype.Get; } catch (e) {};
+try { ActorGroupingUtils.GetActorGroupingUtils = ActorGroupingUtils.Get; } catch (e) {};
+try { let fnprepatch_224 = EditorLevelUtils.prototype.MoveSelectedActorsToLevel;EditorLevelUtils.prototype.MoveSelectedActorsToLevel = function (DestLevel, bWarnAboutReferences = true) { return fnprepatch_224.call(this, DestLevel, bWarnAboutReferences) }; } catch (e) {};
+try { let fnprepatch_225 = EditorLevelUtils.prototype.MoveActorsToLevel;EditorLevelUtils.prototype.MoveActorsToLevel = function (ActorsToMove, DestStreamingLevel, bWarnAboutReferences = true) { return fnprepatch_225.call(this, ActorsToMove, DestStreamingLevel, bWarnAboutReferences) }; } catch (e) {};
+try { let fnprepatch_226 = EditorLevelUtils.prototype.CreateNewStreamingLevel;EditorLevelUtils.prototype.CreateNewStreamingLevel = function (LevelStreamingClass, NewLevelPath, bMoveSelectedActorsIntoNewLevel = false) { return fnprepatch_226.call(this, LevelStreamingClass, NewLevelPath, bMoveSelectedActorsIntoNewLevel) }; } catch (e) {};
+try { AssetImportData.prototype.GetFirstFilename = AssetImportData.prototype.K2_GetFirstFilename; } catch (e) {};
+try { AssetImportData.prototype.ExtractFilenames = AssetImportData.prototype.K2_ExtractFilenames; } catch (e) {};
+try { let fnprepatch_227 = MaterialInterface.prototype.SetForceMipLevelsToBeResident;MaterialInterface.prototype.SetForceMipLevelsToBeResident = function (OverrideForceMiplevelsToBeResident, bForceMiplevelsToBeResidentValue, ForceDuration, CinematicTextureGroups = 0) { return fnprepatch_227.call(this, OverrideForceMiplevelsToBeResident, bForceMiplevelsToBeResidentValue, ForceDuration, CinematicTextureGroups) }; } catch (e) {};
+try { let fnprepatch_228 = InstancedStaticMeshComponent.prototype.UpdateInstanceTransform;InstancedStaticMeshComponent.prototype.UpdateInstanceTransform = function (InstanceIndex, NewInstanceTransform, bWorldSpace = false, bMarkRenderStateDirty = false, bTeleport = false) { return fnprepatch_228.call(this, InstanceIndex, NewInstanceTransform, bWorldSpace, bMarkRenderStateDirty, bTeleport) }; } catch (e) {};
+try { let fnprepatch_229 = InstancedStaticMeshComponent.prototype.GetInstanceTransform;InstancedStaticMeshComponent.prototype.GetInstanceTransform = function (InstanceIndex, OutInstanceTransform, bWorldSpace = false) { return fnprepatch_229.call(this, InstanceIndex, OutInstanceTransform, bWorldSpace) }; } catch (e) {};
+try { let fnprepatch_230 = InstancedStaticMeshComponent.prototype.GetInstancesOverlappingSphere;InstancedStaticMeshComponent.prototype.GetInstancesOverlappingSphere = function (Center, Radius, bSphereInWorldSpace = true) { return fnprepatch_230.call(this, Center, Radius, bSphereInWorldSpace) }; } catch (e) {};
+try { let fnprepatch_231 = InstancedStaticMeshComponent.prototype.GetInstancesOverlappingBox;InstancedStaticMeshComponent.prototype.GetInstancesOverlappingBox = function (Box, bBoxInWorldSpace = true) { return fnprepatch_231.call(this, Box, bBoxInWorldSpace) }; } catch (e) {};
+try { let fnprepatch_232 = ProceduralFoliageSpawner.prototype.Simulate;ProceduralFoliageSpawner.prototype.Simulate = function (NumSteps = -1) { return fnprepatch_232.call(this, NumSteps) }; } catch (e) {};
+try { let fnprepatch_233 = LandscapeProxy.prototype.LandscapeImportHeightmapFromRenderTarget;LandscapeProxy.prototype.LandscapeImportHeightmapFromRenderTarget = function (InRenderTarget, InImportHeightFromRGChannel = false) { return fnprepatch_233.call(this, InRenderTarget, InImportHeightFromRGChannel) }; } catch (e) {};
+try { let fnprepatch_234 = LandscapeProxy.prototype.LandscapeExportHeightmapToRenderTarget;LandscapeProxy.prototype.LandscapeExportHeightmapToRenderTarget = function (InRenderTarget, InExportHeightIntoRGChannel = false) { return fnprepatch_234.call(this, InRenderTarget, InExportHeightIntoRGChannel) }; } catch (e) {};
+try { let fnprepatch_235 = LandscapeProxy.prototype.EditorApplySpline;LandscapeProxy.prototype.EditorApplySpline = function (InSplineComponent, StartWidth = 200, EndWidth = 200, StartSideFalloff = 200, EndSideFalloff = 200, StartRoll = 0, EndRoll = 0, NumSubdivisions = 20, bRaiseHeights = true, bLowerHeights = true, PaintLayer = undefined) { return fnprepatch_235.call(this, InSplineComponent, StartWidth, EndWidth, StartSideFalloff, EndSideFalloff, StartRoll, EndRoll, NumSubdivisions, bRaiseHeights, bLowerHeights, PaintLayer) }; } catch (e) {};
+try { MaterialInstanceConstant.prototype.GetVectorParameterValue = MaterialInstanceConstant.prototype.K2_GetVectorParameterValue; } catch (e) {};
+try { MaterialInstanceConstant.prototype.GetTextureParameterValue = MaterialInstanceConstant.prototype.K2_GetTextureParameterValue; } catch (e) {};
+try { MaterialInstanceConstant.prototype.GetScalarParameterValue = MaterialInstanceConstant.prototype.K2_GetScalarParameterValue; } catch (e) {};
+try { let fnprepatch_236 = AmbientSound.prototype.Play;AmbientSound.prototype.Play = function (StartTime = 0) { return fnprepatch_236.call(this, StartTime) }; } catch (e) {};
+try { let fnprepatch_237 = AmbientSound.prototype.FadeIn;AmbientSound.prototype.FadeIn = function (FadeInDuration, FadeVolumeLevel = 1) { return fnprepatch_237.call(this, FadeInDuration, FadeVolumeLevel) }; } catch (e) {};
+try { let fnprepatch_238 = AudioComponent.prototype.Play;AudioComponent.prototype.Play = function (StartTime = 0) { return fnprepatch_238.call(this, StartTime) }; } catch (e) {};
+try { let fnprepatch_239 = AudioComponent.prototype.FadeIn;AudioComponent.prototype.FadeIn = function (FadeInDuration, FadeVolumeLevel = 1, StartTime = 0) { return fnprepatch_239.call(this, FadeInDuration, FadeVolumeLevel, StartTime) }; } catch (e) {};
 try { AudioComponent.prototype.SetIntegerParameter = AudioComponent.prototype.SetIntParameter; } catch (e) {};
 try { AudioComponent.prototype.SetBooleanParameter = AudioComponent.prototype.SetBoolParameter; } catch (e) {};
 try { AudioComponent.prototype.GetAttenuationSettingsToApply = AudioComponent.prototype.BP_GetAttenuationSettingsToApply; } catch (e) {};
-try { let fnprepatch_163 = AvoidanceManager.prototype.RegisterMovementComponent;AvoidanceManager.prototype.RegisterMovementComponent = function (MovementComp, AvoidanceWeight = 0.5) { return fnprepatch_163.call(this, MovementComp, AvoidanceWeight) }; } catch (e) {};
+try { let fnprepatch_240 = AvoidanceManager.prototype.RegisterMovementComponent;AvoidanceManager.prototype.RegisterMovementComponent = function (MovementComp, AvoidanceWeight = 0.5) { return fnprepatch_240.call(this, MovementComp, AvoidanceWeight) }; } catch (e) {};
 try { BlueprintMapLibrary.prototype.Values = BlueprintMapLibrary.prototype.Map_Values; } catch (e) {};
 try { BlueprintMapLibrary.Values = BlueprintMapLibrary.Map_Values; } catch (e) {};
 try { BlueprintMapLibrary.prototype.Remove = BlueprintMapLibrary.prototype.Map_Remove; } catch (e) {};
@@ -384,17 +588,17 @@ try { BlueprintSetLibrary.prototype.AddItems = BlueprintSetLibrary.prototype.Set
 try { BlueprintSetLibrary.AddItems = BlueprintSetLibrary.Set_AddItems; } catch (e) {};
 try { BlueprintSetLibrary.prototype.Add = BlueprintSetLibrary.prototype.Set_Add; } catch (e) {};
 try { BlueprintSetLibrary.Add = BlueprintSetLibrary.Set_Add; } catch (e) {};
-try { let fnprepatch_164 = BoxComponent.prototype.SetBoxExtent;BoxComponent.prototype.SetBoxExtent = function (InBoxExtent, bUpdateOverlaps = true) { return fnprepatch_164.call(this, InBoxExtent, bUpdateOverlaps) }; } catch (e) {};
-try { let fnprepatch_165 = CameraAnimInst.prototype.Stop;CameraAnimInst.prototype.Stop = function (bImmediate = false) { return fnprepatch_165.call(this, bImmediate) }; } catch (e) {};
-try { let fnprepatch_166 = CameraModifier.prototype.DisableModifier;CameraModifier.prototype.DisableModifier = function (bImmediate = false) { return fnprepatch_166.call(this, bImmediate) }; } catch (e) {};
-try { let fnprepatch_167 = Canvas.prototype.K2_TextSize;Canvas.prototype.K2_TextSize = function (RenderFont, RenderText, Scale = {"X":1,"Y":1}) { return fnprepatch_167.call(this, RenderFont, RenderText, Scale) }; } catch (e) {};
-try { let fnprepatch_168 = Canvas.prototype.K2_DrawTexture;Canvas.prototype.K2_DrawTexture = function (RenderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize = {"X":1,"Y":1}, RenderColor = {"R":1,"G":1,"B":1,"A":1}, BlendMode = "BLEND_Translucent", Rotation = 0, PivotPoint = {"X":0.5,"Y":0.5}) { return fnprepatch_168.call(this, RenderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize, RenderColor, BlendMode, Rotation, PivotPoint) }; } catch (e) {};
-try { let fnprepatch_169 = Canvas.prototype.K2_DrawText;Canvas.prototype.K2_DrawText = function (RenderFont, RenderText, ScreenPosition, RenderColor = {"R":1,"G":1,"B":1,"A":1}, Kerning = 0, ShadowColor = {"R":0,"G":0,"B":0,"A":1}, ShadowOffset = {"X":1,"Y":1}, bCentreX = false, bCentreY = false, bOutlined = false, OutlineColor = {"R":0,"G":0,"B":0,"A":1}) { return fnprepatch_169.call(this, RenderFont, RenderText, ScreenPosition, RenderColor, Kerning, ShadowColor, ShadowOffset, bCentreX, bCentreY, bOutlined, OutlineColor) }; } catch (e) {};
-try { let fnprepatch_170 = Canvas.prototype.K2_DrawPolygon;Canvas.prototype.K2_DrawPolygon = function (RenderTexture, ScreenPosition, Radius = {"X":1,"Y":1}, NumberOfSides = 3, RenderColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_170.call(this, RenderTexture, ScreenPosition, Radius, NumberOfSides, RenderColor) }; } catch (e) {};
-try { let fnprepatch_171 = Canvas.prototype.K2_DrawMaterial;Canvas.prototype.K2_DrawMaterial = function (RenderMaterial, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize = {"X":1,"Y":1}, Rotation = 0, PivotPoint = {"X":0.5,"Y":0.5}) { return fnprepatch_171.call(this, RenderMaterial, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize, Rotation, PivotPoint) }; } catch (e) {};
-try { let fnprepatch_172 = Canvas.prototype.K2_DrawLine;Canvas.prototype.K2_DrawLine = function (ScreenPositionA, ScreenPositionB, Thickness = 1, RenderColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_172.call(this, ScreenPositionA, ScreenPositionB, Thickness, RenderColor) }; } catch (e) {};
-try { let fnprepatch_173 = Canvas.prototype.K2_DrawBox;Canvas.prototype.K2_DrawBox = function (ScreenPosition, ScreenSize, Thickness = 1) { return fnprepatch_173.call(this, ScreenPosition, ScreenSize, Thickness) }; } catch (e) {};
-try { let fnprepatch_174 = Canvas.prototype.K2_DrawBorder;Canvas.prototype.K2_DrawBorder = function (BorderTexture, BackgroundTexture, LeftBorderTexture, RightBorderTexture, TopBorderTexture, BottomBorderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize = {"X":1,"Y":1}, RenderColor = {"R":1,"G":1,"B":1,"A":1}, BorderScale = {"X":0.10000000149011612,"Y":0.10000000149011612}, BackgroundScale = {"X":0.10000000149011612,"Y":0.10000000149011612}, Rotation = 0, PivotPoint = {"X":0.5,"Y":0.5}, CornerSize) { return fnprepatch_174.call(this, BorderTexture, BackgroundTexture, LeftBorderTexture, RightBorderTexture, TopBorderTexture, BottomBorderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize, RenderColor, BorderScale, BackgroundScale, Rotation, PivotPoint, CornerSize) }; } catch (e) {};
+try { let fnprepatch_241 = BoxComponent.prototype.SetBoxExtent;BoxComponent.prototype.SetBoxExtent = function (InBoxExtent, bUpdateOverlaps = true) { return fnprepatch_241.call(this, InBoxExtent, bUpdateOverlaps) }; } catch (e) {};
+try { let fnprepatch_242 = CameraAnimInst.prototype.Stop;CameraAnimInst.prototype.Stop = function (bImmediate = false) { return fnprepatch_242.call(this, bImmediate) }; } catch (e) {};
+try { let fnprepatch_243 = CameraModifier.prototype.DisableModifier;CameraModifier.prototype.DisableModifier = function (bImmediate = false) { return fnprepatch_243.call(this, bImmediate) }; } catch (e) {};
+try { let fnprepatch_244 = Canvas.prototype.K2_TextSize;Canvas.prototype.K2_TextSize = function (RenderFont, RenderText, Scale = {"X":1,"Y":1}) { return fnprepatch_244.call(this, RenderFont, RenderText, Scale) }; } catch (e) {};
+try { let fnprepatch_245 = Canvas.prototype.K2_DrawTexture;Canvas.prototype.K2_DrawTexture = function (RenderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize = {"X":1,"Y":1}, RenderColor = {"R":1,"G":1,"B":1,"A":1}, BlendMode = "BLEND_Translucent", Rotation = 0, PivotPoint = {"X":0.5,"Y":0.5}) { return fnprepatch_245.call(this, RenderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize, RenderColor, BlendMode, Rotation, PivotPoint) }; } catch (e) {};
+try { let fnprepatch_246 = Canvas.prototype.K2_DrawText;Canvas.prototype.K2_DrawText = function (RenderFont, RenderText, ScreenPosition, Scale = {"X":1,"Y":1}, RenderColor = {"R":1,"G":1,"B":1,"A":1}, Kerning = 0, ShadowColor = {"R":0,"G":0,"B":0,"A":1}, ShadowOffset = {"X":1,"Y":1}, bCentreX = false, bCentreY = false, bOutlined = false, OutlineColor = {"R":0,"G":0,"B":0,"A":1}) { return fnprepatch_246.call(this, RenderFont, RenderText, ScreenPosition, Scale, RenderColor, Kerning, ShadowColor, ShadowOffset, bCentreX, bCentreY, bOutlined, OutlineColor) }; } catch (e) {};
+try { let fnprepatch_247 = Canvas.prototype.K2_DrawPolygon;Canvas.prototype.K2_DrawPolygon = function (RenderTexture, ScreenPosition, Radius = {"X":1,"Y":1}, NumberOfSides = 3, RenderColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_247.call(this, RenderTexture, ScreenPosition, Radius, NumberOfSides, RenderColor) }; } catch (e) {};
+try { let fnprepatch_248 = Canvas.prototype.K2_DrawMaterial;Canvas.prototype.K2_DrawMaterial = function (RenderMaterial, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize = {"X":1,"Y":1}, Rotation = 0, PivotPoint = {"X":0.5,"Y":0.5}) { return fnprepatch_248.call(this, RenderMaterial, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize, Rotation, PivotPoint) }; } catch (e) {};
+try { let fnprepatch_249 = Canvas.prototype.K2_DrawLine;Canvas.prototype.K2_DrawLine = function (ScreenPositionA, ScreenPositionB, Thickness = 1, RenderColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_249.call(this, ScreenPositionA, ScreenPositionB, Thickness, RenderColor) }; } catch (e) {};
+try { let fnprepatch_250 = Canvas.prototype.K2_DrawBox;Canvas.prototype.K2_DrawBox = function (ScreenPosition, ScreenSize, Thickness = 1, RenderColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_250.call(this, ScreenPosition, ScreenSize, Thickness, RenderColor) }; } catch (e) {};
+try { let fnprepatch_251 = Canvas.prototype.K2_DrawBorder;Canvas.prototype.K2_DrawBorder = function (BorderTexture, BackgroundTexture, LeftBorderTexture, RightBorderTexture, TopBorderTexture, BottomBorderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize = {"X":1,"Y":1}, RenderColor = {"R":1,"G":1,"B":1,"A":1}, BorderScale = {"X":0.10000000149011612,"Y":0.10000000149011612}, BackgroundScale = {"X":0.10000000149011612,"Y":0.10000000149011612}, Rotation = 0, PivotPoint = {"X":0.5,"Y":0.5}, CornerSize) { return fnprepatch_251.call(this, BorderTexture, BackgroundTexture, LeftBorderTexture, RightBorderTexture, TopBorderTexture, BottomBorderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize, RenderColor, BorderScale, BackgroundScale, Rotation, PivotPoint, CornerSize) }; } catch (e) {};
 try { Canvas.prototype.ClippedTextSize = Canvas.prototype.K2_TextSize; } catch (e) {};
 try { Canvas.prototype.WrappedTextSize = Canvas.prototype.K2_StrLen; } catch (e) {};
 try { Canvas.prototype.Project = Canvas.prototype.K2_Project; } catch (e) {};
@@ -408,30 +612,31 @@ try { Canvas.prototype.DrawLine = Canvas.prototype.K2_DrawLine; } catch (e) {};
 try { Canvas.prototype.DrawBox = Canvas.prototype.K2_DrawBox; } catch (e) {};
 try { Canvas.prototype.DrawBorder = Canvas.prototype.K2_DrawBorder; } catch (e) {};
 try { Canvas.prototype.Deproject = Canvas.prototype.K2_Deproject; } catch (e) {};
-try { let fnprepatch_175 = CanvasRenderTarget2D.prototype.CreateCanvasRenderTarget2D;CanvasRenderTarget2D.prototype.CreateCanvasRenderTarget2D = function (WorldContextObject, CanvasRenderTarget2DClass, Width = 1024, Height = 1024) { return fnprepatch_175.call(this, WorldContextObject, CanvasRenderTarget2DClass, Width, Height) }; } catch (e) {};
-try { let fnprepatch_176 = CapsuleComponent.prototype.SetCapsuleSize;CapsuleComponent.prototype.SetCapsuleSize = function (InRadius, InHalfHeight, bUpdateOverlaps = true) { return fnprepatch_176.call(this, InRadius, InHalfHeight, bUpdateOverlaps) }; } catch (e) {};
-try { let fnprepatch_177 = CapsuleComponent.prototype.SetCapsuleRadius;CapsuleComponent.prototype.SetCapsuleRadius = function (Radius, bUpdateOverlaps = true) { return fnprepatch_177.call(this, Radius, bUpdateOverlaps) }; } catch (e) {};
-try { let fnprepatch_178 = CapsuleComponent.prototype.SetCapsuleHalfHeight;CapsuleComponent.prototype.SetCapsuleHalfHeight = function (HalfHeight, bUpdateOverlaps = true) { return fnprepatch_178.call(this, HalfHeight, bUpdateOverlaps) }; } catch (e) {};
-try { let fnprepatch_179 = MovementComponent.prototype.K2_MoveUpdatedComponent;MovementComponent.prototype.K2_MoveUpdatedComponent = function (Delta, NewRotation, OutHit, bSweep = true, bTeleport = false) { return fnprepatch_179.call(this, Delta, NewRotation, OutHit, bSweep, bTeleport) }; } catch (e) {};
+try { TextureRenderTarget2D.prototype.RenderTargetCreateStaticTextureEditorOnly = TextureRenderTarget2D.prototype.RenderTargetCreateStaticTexture2DEditorOnly; } catch (e) {};
+try { let fnprepatch_252 = CanvasRenderTarget2D.prototype.CreateCanvasRenderTarget2D;CanvasRenderTarget2D.prototype.CreateCanvasRenderTarget2D = function (WorldContextObject, CanvasRenderTarget2DClass, Width = 1024, Height = 1024) { return fnprepatch_252.call(this, WorldContextObject, CanvasRenderTarget2DClass, Width, Height) }; } catch (e) {};
+try { let fnprepatch_253 = CapsuleComponent.prototype.SetCapsuleSize;CapsuleComponent.prototype.SetCapsuleSize = function (InRadius, InHalfHeight, bUpdateOverlaps = true) { return fnprepatch_253.call(this, InRadius, InHalfHeight, bUpdateOverlaps) }; } catch (e) {};
+try { let fnprepatch_254 = CapsuleComponent.prototype.SetCapsuleRadius;CapsuleComponent.prototype.SetCapsuleRadius = function (Radius, bUpdateOverlaps = true) { return fnprepatch_254.call(this, Radius, bUpdateOverlaps) }; } catch (e) {};
+try { let fnprepatch_255 = CapsuleComponent.prototype.SetCapsuleHalfHeight;CapsuleComponent.prototype.SetCapsuleHalfHeight = function (HalfHeight, bUpdateOverlaps = true) { return fnprepatch_255.call(this, HalfHeight, bUpdateOverlaps) }; } catch (e) {};
+try { let fnprepatch_256 = MovementComponent.prototype.K2_MoveUpdatedComponent;MovementComponent.prototype.K2_MoveUpdatedComponent = function (Delta, NewRotation, OutHit, bSweep = true, bTeleport = false) { return fnprepatch_256.call(this, Delta, NewRotation, OutHit, bSweep, bTeleport) }; } catch (e) {};
 try { MovementComponent.prototype.MoveUpdatedComponent = MovementComponent.prototype.K2_MoveUpdatedComponent; } catch (e) {};
 try { MovementComponent.prototype.GetModifiedMaxSpeed = MovementComponent.prototype.K2_GetModifiedMaxSpeed; } catch (e) {};
 try { MovementComponent.prototype.GetMaxSpeedModifier = MovementComponent.prototype.K2_GetMaxSpeedModifier; } catch (e) {};
-try { let fnprepatch_180 = PawnMovementComponent.prototype.AddInputVector;PawnMovementComponent.prototype.AddInputVector = function (WorldVector, bForce = false) { return fnprepatch_180.call(this, WorldVector, bForce) }; } catch (e) {};
+try { let fnprepatch_257 = PawnMovementComponent.prototype.AddInputVector;PawnMovementComponent.prototype.AddInputVector = function (WorldVector, bForce = false) { return fnprepatch_257.call(this, WorldVector, bForce) }; } catch (e) {};
 try { PawnMovementComponent.prototype.GetInputVector = PawnMovementComponent.prototype.K2_GetInputVector; } catch (e) {};
-try { let fnprepatch_181 = CharacterMovementComponent.prototype.SetMovementMode;CharacterMovementComponent.prototype.SetMovementMode = function (NewMovementMode, NewCustomMode = 0) { return fnprepatch_181.call(this, NewMovementMode, NewCustomMode) }; } catch (e) {};
-try { let fnprepatch_182 = CharacterMovementComponent.prototype.AddImpulse;CharacterMovementComponent.prototype.AddImpulse = function (Impulse, bVelocityChange = false) { return fnprepatch_182.call(this, Impulse, bVelocityChange) }; } catch (e) {};
+try { let fnprepatch_258 = CharacterMovementComponent.prototype.SetMovementMode;CharacterMovementComponent.prototype.SetMovementMode = function (NewMovementMode, NewCustomMode = 0) { return fnprepatch_258.call(this, NewMovementMode, NewCustomMode) }; } catch (e) {};
+try { let fnprepatch_259 = CharacterMovementComponent.prototype.AddImpulse;CharacterMovementComponent.prototype.AddImpulse = function (Impulse, bVelocityChange = false) { return fnprepatch_259.call(this, Impulse, bVelocityChange) }; } catch (e) {};
 try { CharacterMovementComponent.prototype.GetWalkableFloorZ = CharacterMovementComponent.prototype.K2_GetWalkableFloorZ; } catch (e) {};
 try { CharacterMovementComponent.prototype.GetWalkableFloorAngle = CharacterMovementComponent.prototype.K2_GetWalkableFloorAngle; } catch (e) {};
 try { CharacterMovementComponent.prototype.GetModifiedMaxAcceleration = CharacterMovementComponent.prototype.K2_GetModifiedMaxAcceleration; } catch (e) {};
 try { CharacterMovementComponent.prototype.FindFloor = CharacterMovementComponent.prototype.K2_FindFloor; } catch (e) {};
 try { CharacterMovementComponent.prototype.ComputeFloorDistance = CharacterMovementComponent.prototype.K2_ComputeFloorDist; } catch (e) {};
-try { let fnprepatch_183 = PlayerController.prototype.StartFire;PlayerController.prototype.StartFire = function (FireModeNum = 0) { return fnprepatch_183.call(this, FireModeNum) }; } catch (e) {};
-try { let fnprepatch_184 = PlayerController.prototype.SetViewTargetWithBlend;PlayerController.prototype.SetViewTargetWithBlend = function (NewViewTarget, BlendTime = 0, BlendFunc = "VTBlend_Linear", BlendExp = 0, bLockOutgoing = false) { return fnprepatch_184.call(this, NewViewTarget, BlendTime, BlendFunc, BlendExp, bLockOutgoing) }; } catch (e) {};
-try { let fnprepatch_185 = PlayerController.prototype.ProjectWorldLocationToScreen;PlayerController.prototype.ProjectWorldLocationToScreen = function (WorldLocation, ScreenLocation, bPlayerViewportRelative = false) { return fnprepatch_185.call(this, WorldLocation, ScreenLocation, bPlayerViewportRelative) }; } catch (e) {};
-try { let fnprepatch_186 = PlayerController.prototype.PlayHapticEffect;PlayerController.prototype.PlayHapticEffect = function (HapticEffect, Hand, Scale = 1, bLoop = false) { return fnprepatch_186.call(this, HapticEffect, Hand, Scale, bLoop) }; } catch (e) {};
-try { let fnprepatch_187 = PlayerController.prototype.ClientStopCameraShake;PlayerController.prototype.ClientStopCameraShake = function (Shake, bImmediately = true) { return fnprepatch_187.call(this, Shake, bImmediately) }; } catch (e) {};
-try { let fnprepatch_188 = PlayerController.prototype.ClientPlayCameraShake;PlayerController.prototype.ClientPlayCameraShake = function (Shake, Scale = 1, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_188.call(this, Shake, Scale, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
-try { let fnprepatch_189 = PlayerController.prototype.ClientPlayCameraAnim;PlayerController.prototype.ClientPlayCameraAnim = function (AnimToPlay, Scale = 1, Rate = 1, BlendInTime = 0, BlendOutTime = 0, bLoop = false, bRandomStartTime = false, Space = "CameraLocal", CustomPlaySpace) { return fnprepatch_189.call(this, AnimToPlay, Scale, Rate, BlendInTime, BlendOutTime, bLoop, bRandomStartTime, Space, CustomPlaySpace) }; } catch (e) {};
+try { let fnprepatch_260 = PlayerController.prototype.StartFire;PlayerController.prototype.StartFire = function (FireModeNum = 0) { return fnprepatch_260.call(this, FireModeNum) }; } catch (e) {};
+try { let fnprepatch_261 = PlayerController.prototype.SetViewTargetWithBlend;PlayerController.prototype.SetViewTargetWithBlend = function (NewViewTarget, BlendTime = 0, BlendFunc = "VTBlend_Linear", BlendExp = 0, bLockOutgoing = false) { return fnprepatch_261.call(this, NewViewTarget, BlendTime, BlendFunc, BlendExp, bLockOutgoing) }; } catch (e) {};
+try { let fnprepatch_262 = PlayerController.prototype.ProjectWorldLocationToScreen;PlayerController.prototype.ProjectWorldLocationToScreen = function (WorldLocation, ScreenLocation, bPlayerViewportRelative = false) { return fnprepatch_262.call(this, WorldLocation, ScreenLocation, bPlayerViewportRelative) }; } catch (e) {};
+try { let fnprepatch_263 = PlayerController.prototype.PlayHapticEffect;PlayerController.prototype.PlayHapticEffect = function (HapticEffect, Hand, Scale = 1, bLoop = false) { return fnprepatch_263.call(this, HapticEffect, Hand, Scale, bLoop) }; } catch (e) {};
+try { let fnprepatch_264 = PlayerController.prototype.ClientStopCameraShake;PlayerController.prototype.ClientStopCameraShake = function (Shake, bImmediately = true) { return fnprepatch_264.call(this, Shake, bImmediately) }; } catch (e) {};
+try { let fnprepatch_265 = PlayerController.prototype.ClientPlayCameraShake;PlayerController.prototype.ClientPlayCameraShake = function (Shake, Scale = 1, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_265.call(this, Shake, Scale, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
+try { let fnprepatch_266 = PlayerController.prototype.ClientPlayCameraAnim;PlayerController.prototype.ClientPlayCameraAnim = function (AnimToPlay, Scale = 1, Rate = 1, BlendInTime = 0, BlendOutTime = 0, bLoop = false, bRandomStartTime = false, Space = "CameraLocal", CustomPlaySpace) { return fnprepatch_266.call(this, AnimToPlay, Scale, Rate, BlendInTime, BlendOutTime, bLoop, bRandomStartTime, Space, CustomPlaySpace) }; } catch (e) {};
 try { PlayerController.prototype.SetInputModeGameAndUI = PlayerController.prototype.SetInputMode_GameAndUI; } catch (e) {};
 try { PlayerController.prototype.SetInputModeGameAndUI = PlayerController.prototype.SetInputMode_GameAndUIEx; } catch (e) {};
 try { PlayerController.prototype.SetInputModeUIOnly = PlayerController.prototype.SetInputMode_UIOnly; } catch (e) {};
@@ -442,29 +647,30 @@ try { PlayerController.prototype.ConvertScreenLocationToWorldSpace = PlayerContr
 try { PlayerController.prototype.ConvertMouseLocationToWorldSpace = PlayerController.prototype.DeprojectMousePositionToWorld; } catch (e) {};
 try { CheatManager.prototype.InitCheatManager = CheatManager.prototype.ReceiveInitCheatManager; } catch (e) {};
 try { CheatManager.prototype.Shutdown = CheatManager.prototype.ReceiveEndPlay; } catch (e) {};
+try { Texture2D.prototype.GetSizeY = Texture2D.prototype.Blueprint_GetSizeY; } catch (e) {};
+try { Texture2D.prototype.GetSizeX = Texture2D.prototype.Blueprint_GetSizeX; } catch (e) {};
 try { DebugCameraController.prototype.OnDeactivate = DebugCameraController.prototype.ReceiveOnDeactivate; } catch (e) {};
 try { DebugCameraController.prototype.OnActorSelected = DebugCameraController.prototype.ReceiveOnActorSelected; } catch (e) {};
 try { DebugCameraController.prototype.OnActivate = DebugCameraController.prototype.ReceiveOnActivate; } catch (e) {};
-try { let fnprepatch_190 = HUD.prototype.ShowDebug;HUD.prototype.ShowDebug = function (DebugType = "None") { return fnprepatch_190.call(this, DebugType) }; } catch (e) {};
-try { let fnprepatch_191 = HUD.prototype.GetTextSize;HUD.prototype.GetTextSize = function (Text, OutWidth, OutHeight, Font, Scale = 1) { return fnprepatch_191.call(this, Text, OutWidth, OutHeight, Font, Scale) }; } catch (e) {};
-try { let fnprepatch_192 = HUD.prototype.GetActorsInSelectionRectangle;HUD.prototype.GetActorsInSelectionRectangle = function (ClassFilter, FirstPoint, SecondPoint, OutActors, bIncludeNonCollidingComponents = true, bActorMustBeFullyEnclosed = false) { return fnprepatch_192.call(this, ClassFilter, FirstPoint, SecondPoint, OutActors, bIncludeNonCollidingComponents, bActorMustBeFullyEnclosed) }; } catch (e) {};
-try { let fnprepatch_193 = HUD.prototype.DrawTextureSimple;HUD.prototype.DrawTextureSimple = function (Texture, ScreenX, ScreenY, Scale = 1, bScalePosition = false) { return fnprepatch_193.call(this, Texture, ScreenX, ScreenY, Scale, bScalePosition) }; } catch (e) {};
-try { let fnprepatch_194 = HUD.prototype.DrawTexture;HUD.prototype.DrawTexture = function (Texture, ScreenX, ScreenY, ScreenW, ScreenH, TextureU, TextureV, TextureUWidth, TextureVHeight, TintColor = {"R":1,"G":1,"B":1,"A":1}, BlendMode = "BLEND_Translucent", Scale = 1, bScalePosition = false, Rotation = 0, RotPivot) { return fnprepatch_194.call(this, Texture, ScreenX, ScreenY, ScreenW, ScreenH, TextureU, TextureV, TextureUWidth, TextureVHeight, TintColor, BlendMode, Scale, bScalePosition, Rotation, RotPivot) }; } catch (e) {};
-try { let fnprepatch_195 = HUD.prototype.DrawText;HUD.prototype.DrawText = function (Text, TextColor, ScreenX, ScreenY, Font, Scale = 1, bScalePosition = false) { return fnprepatch_195.call(this, Text, TextColor, ScreenX, ScreenY, Font, Scale, bScalePosition) }; } catch (e) {};
-try { let fnprepatch_196 = HUD.prototype.DrawMaterialTriangle;HUD.prototype.DrawMaterialTriangle = function (Material, V0_Pos, V1_Pos, V2_Pos, V0_UV, V1_UV, V2_UV, V0_Color = {"R":1,"G":1,"B":1,"A":1}, V1_Color = {"R":1,"G":1,"B":1,"A":1}, V2_Color = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_196.call(this, Material, V0_Pos, V1_Pos, V2_Pos, V0_UV, V1_UV, V2_UV, V0_Color, V1_Color, V2_Color) }; } catch (e) {};
-try { let fnprepatch_197 = HUD.prototype.DrawMaterialSimple;HUD.prototype.DrawMaterialSimple = function (Material, ScreenX, ScreenY, ScreenW, ScreenH, Scale = 1, bScalePosition = false) { return fnprepatch_197.call(this, Material, ScreenX, ScreenY, ScreenW, ScreenH, Scale, bScalePosition) }; } catch (e) {};
-try { let fnprepatch_198 = HUD.prototype.DrawMaterial;HUD.prototype.DrawMaterial = function (Material, ScreenX, ScreenY, ScreenW, ScreenH, MaterialU, MaterialV, MaterialUWidth, MaterialVHeight, Scale = 1, bScalePosition = false, Rotation = 0, RotPivot) { return fnprepatch_198.call(this, Material, ScreenX, ScreenY, ScreenW, ScreenH, MaterialU, MaterialV, MaterialUWidth, MaterialVHeight, Scale, bScalePosition, Rotation, RotPivot) }; } catch (e) {};
-try { let fnprepatch_199 = HUD.prototype.DrawLine;HUD.prototype.DrawLine = function (StartScreenX, StartScreenY, EndScreenX, EndScreenY, LineColor, LineThickness = 0) { return fnprepatch_199.call(this, StartScreenX, StartScreenY, EndScreenX, EndScreenY, LineColor, LineThickness) }; } catch (e) {};
-try { let fnprepatch_200 = HUD.prototype.AddHitBox;HUD.prototype.AddHitBox = function (Position, Size, InName, bConsumesInput, Priority = 0) { return fnprepatch_200.call(this, Position, Size, InName, bConsumesInput, Priority) }; } catch (e) {};
+try { let fnprepatch_267 = HUD.prototype.ShowDebug;HUD.prototype.ShowDebug = function (DebugType = "None") { return fnprepatch_267.call(this, DebugType) }; } catch (e) {};
+try { let fnprepatch_268 = HUD.prototype.GetTextSize;HUD.prototype.GetTextSize = function (Text, OutWidth, OutHeight, Font = undefined, Scale = 1) { return fnprepatch_268.call(this, Text, OutWidth, OutHeight, Font, Scale) }; } catch (e) {};
+try { let fnprepatch_269 = HUD.prototype.GetActorsInSelectionRectangle;HUD.prototype.GetActorsInSelectionRectangle = function (ClassFilter, FirstPoint, SecondPoint, OutActors, bIncludeNonCollidingComponents = true, bActorMustBeFullyEnclosed = false) { return fnprepatch_269.call(this, ClassFilter, FirstPoint, SecondPoint, OutActors, bIncludeNonCollidingComponents, bActorMustBeFullyEnclosed) }; } catch (e) {};
+try { let fnprepatch_270 = HUD.prototype.DrawTextureSimple;HUD.prototype.DrawTextureSimple = function (Texture, ScreenX, ScreenY, Scale = 1, bScalePosition = false) { return fnprepatch_270.call(this, Texture, ScreenX, ScreenY, Scale, bScalePosition) }; } catch (e) {};
+try { let fnprepatch_271 = HUD.prototype.DrawTexture;HUD.prototype.DrawTexture = function (Texture, ScreenX, ScreenY, ScreenW, ScreenH, TextureU, TextureV, TextureUWidth, TextureVHeight, TintColor = {"R":1,"G":1,"B":1,"A":1}, BlendMode = "BLEND_Translucent", Scale = 1, bScalePosition = false, Rotation = 0, RotPivot) { return fnprepatch_271.call(this, Texture, ScreenX, ScreenY, ScreenW, ScreenH, TextureU, TextureV, TextureUWidth, TextureVHeight, TintColor, BlendMode, Scale, bScalePosition, Rotation, RotPivot) }; } catch (e) {};
+try { let fnprepatch_272 = HUD.prototype.DrawText;HUD.prototype.DrawText = function (Text, TextColor, ScreenX, ScreenY, Font = undefined, Scale = 1, bScalePosition = false) { return fnprepatch_272.call(this, Text, TextColor, ScreenX, ScreenY, Font, Scale, bScalePosition) }; } catch (e) {};
+try { let fnprepatch_273 = HUD.prototype.DrawMaterialTriangle;HUD.prototype.DrawMaterialTriangle = function (Material, V0_Pos, V1_Pos, V2_Pos, V0_UV, V1_UV, V2_UV, V0_Color = {"R":1,"G":1,"B":1,"A":1}, V1_Color = {"R":1,"G":1,"B":1,"A":1}, V2_Color = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_273.call(this, Material, V0_Pos, V1_Pos, V2_Pos, V0_UV, V1_UV, V2_UV, V0_Color, V1_Color, V2_Color) }; } catch (e) {};
+try { let fnprepatch_274 = HUD.prototype.DrawMaterialSimple;HUD.prototype.DrawMaterialSimple = function (Material, ScreenX, ScreenY, ScreenW, ScreenH, Scale = 1, bScalePosition = false) { return fnprepatch_274.call(this, Material, ScreenX, ScreenY, ScreenW, ScreenH, Scale, bScalePosition) }; } catch (e) {};
+try { let fnprepatch_275 = HUD.prototype.DrawMaterial;HUD.prototype.DrawMaterial = function (Material, ScreenX, ScreenY, ScreenW, ScreenH, MaterialU, MaterialV, MaterialUWidth, MaterialVHeight, Scale = 1, bScalePosition = false, Rotation = 0, RotPivot) { return fnprepatch_275.call(this, Material, ScreenX, ScreenY, ScreenW, ScreenH, MaterialU, MaterialV, MaterialUWidth, MaterialVHeight, Scale, bScalePosition, Rotation, RotPivot) }; } catch (e) {};
+try { let fnprepatch_276 = HUD.prototype.DrawLine;HUD.prototype.DrawLine = function (StartScreenX, StartScreenY, EndScreenX, EndScreenY, LineColor, LineThickness = 0) { return fnprepatch_276.call(this, StartScreenX, StartScreenY, EndScreenX, EndScreenY, LineColor, LineThickness) }; } catch (e) {};
+try { let fnprepatch_277 = HUD.prototype.AddHitBox;HUD.prototype.AddHitBox = function (Position, Size, InName, bConsumesInput, Priority = 0) { return fnprepatch_277.call(this, Position, Size, InName, bConsumesInput, Priority) }; } catch (e) {};
 try { HUD.prototype.HitBoxReleased = HUD.prototype.ReceiveHitBoxRelease; } catch (e) {};
 try { HUD.prototype.HitBoxEndCursorOver = HUD.prototype.ReceiveHitBoxEndCursorOver; } catch (e) {};
 try { HUD.prototype.HitBoxClicked = HUD.prototype.ReceiveHitBoxClick; } catch (e) {};
 try { HUD.prototype.HitBoxBeginCursorOver = HUD.prototype.ReceiveHitBoxBeginCursorOver; } catch (e) {};
-try { let fnprepatch_201 = DecalComponent.prototype.SetFadeOut;DecalComponent.prototype.SetFadeOut = function (StartDelay, Duration, DestroyOwnerAfterFade = true) { return fnprepatch_201.call(this, StartDelay, Duration, DestroyOwnerAfterFade) }; } catch (e) {};
-try { let fnprepatch_202 = SkeletalMesh.prototype.IsSectionUsingCloth;SkeletalMesh.prototype.IsSectionUsingCloth = function (InSectionIndex, bCheckCorrespondingSections = true) { return fnprepatch_202.call(this, InSectionIndex, bCheckCorrespondingSections) }; } catch (e) {};
-try { let fnprepatch_203 = LightComponent.prototype.SetLightColor;LightComponent.prototype.SetLightColor = function (NewLightColor, bSRGB = true) { return fnprepatch_203.call(this, NewLightColor, bSRGB) }; } catch (e) {};
-try { let fnprepatch_204 = SphereComponent.prototype.SetSphereRadius;SphereComponent.prototype.SetSphereRadius = function (InSphereRadius, bUpdateOverlaps = true) { return fnprepatch_204.call(this, InSphereRadius, bUpdateOverlaps) }; } catch (e) {};
-try { let fnprepatch_205 = ForceFeedbackComponent.prototype.Play;ForceFeedbackComponent.prototype.Play = function (StartTime = 0) { return fnprepatch_205.call(this, StartTime) }; } catch (e) {};
+try { let fnprepatch_278 = DecalComponent.prototype.SetFadeOut;DecalComponent.prototype.SetFadeOut = function (StartDelay, Duration, DestroyOwnerAfterFade = true) { return fnprepatch_278.call(this, StartDelay, Duration, DestroyOwnerAfterFade) }; } catch (e) {};
+try { let fnprepatch_279 = LightComponent.prototype.SetLightColor;LightComponent.prototype.SetLightColor = function (NewLightColor, bSRGB = true) { return fnprepatch_279.call(this, NewLightColor, bSRGB) }; } catch (e) {};
+try { let fnprepatch_280 = SphereComponent.prototype.SetSphereRadius;SphereComponent.prototype.SetSphereRadius = function (InSphereRadius, bUpdateOverlaps = true) { return fnprepatch_280.call(this, InSphereRadius, bUpdateOverlaps) }; } catch (e) {};
+try { let fnprepatch_281 = ForceFeedbackComponent.prototype.Play;ForceFeedbackComponent.prototype.Play = function (StartTime = 0) { return fnprepatch_281.call(this, StartTime) }; } catch (e) {};
 try { ForceFeedbackComponent.prototype.GetAttenuationSettingsToApply = ForceFeedbackComponent.prototype.BP_GetAttenuationSettingsToApply; } catch (e) {};
 try { GameModeBase.prototype.OnPostLogin = GameModeBase.prototype.K2_PostLogin; } catch (e) {};
 try { GameModeBase.prototype.OnSwapPlayerControllers = GameModeBase.prototype.K2_OnSwapPlayerControllers; } catch (e) {};
@@ -473,39 +679,39 @@ try { GameModeBase.prototype.OnLogout = GameModeBase.prototype.K2_OnLogout; } ca
 try { GameModeBase.prototype.OnChangeName = GameModeBase.prototype.K2_OnChangeName; } catch (e) {};
 try { GameModeBase.prototype.FindPlayerStart = GameModeBase.prototype.K2_FindPlayerStart; } catch (e) {};
 try { GameMode.prototype.OnSetMatchState = GameMode.prototype.K2_OnSetMatchState; } catch (e) {};
-try { let fnprepatch_206 = GameplayStatics.prototype.SuggestProjectileVelocity_CustomArc;GameplayStatics.prototype.SuggestProjectileVelocity_CustomArc = function (WorldContextObject, OutLaunchVelocity, StartPos, EndPos, OverrideGravityZ = 0, ArcParam = 0.5) { return fnprepatch_206.call(this, WorldContextObject, OutLaunchVelocity, StartPos, EndPos, OverrideGravityZ, ArcParam) }; } catch (e) {};
-try { let fnprepatch_207 = GameplayStatics.prototype.SpawnSoundAttached;GameplayStatics.prototype.SpawnSoundAttached = function (Sound, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", bStopWhenAttachedToDestroyed = false, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings, ConcurrencySettings, bAutoDestroy = true) { return fnprepatch_207.call(this, Sound, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bStopWhenAttachedToDestroyed, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, ConcurrencySettings, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_208 = GameplayStatics.prototype.SpawnSoundAtLocation;GameplayStatics.prototype.SpawnSoundAtLocation = function (WorldContextObject, Sound, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings, ConcurrencySettings, bAutoDestroy = true) { return fnprepatch_208.call(this, WorldContextObject, Sound, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, ConcurrencySettings, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_209 = GameplayStatics.prototype.SpawnSound2D;GameplayStatics.prototype.SpawnSound2D = function (WorldContextObject, Sound, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, ConcurrencySettings, bPersistAcrossLevelTransition = false, bAutoDestroy = true) { return fnprepatch_209.call(this, WorldContextObject, Sound, VolumeMultiplier, PitchMultiplier, StartTime, ConcurrencySettings, bPersistAcrossLevelTransition, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_210 = GameplayStatics.prototype.SpawnForceFeedbackAttached;GameplayStatics.prototype.SpawnForceFeedbackAttached = function (ForceFeedbackEffect, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", bStopWhenAttachedToDestroyed = false, bLooping = false, IntensityMultiplier = 1, StartTime = 0, AttenuationSettings, bAutoDestroy = true) { return fnprepatch_210.call(this, ForceFeedbackEffect, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bStopWhenAttachedToDestroyed, bLooping, IntensityMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_211 = GameplayStatics.prototype.SpawnForceFeedbackAtLocation;GameplayStatics.prototype.SpawnForceFeedbackAtLocation = function (WorldContextObject, ForceFeedbackEffect, Location, Rotation, bLooping = false, IntensityMultiplier = 1, StartTime = 0, AttenuationSettings, bAutoDestroy = true) { return fnprepatch_211.call(this, WorldContextObject, ForceFeedbackEffect, Location, Rotation, bLooping, IntensityMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_212 = GameplayStatics.prototype.SpawnEmitterAttached;GameplayStatics.prototype.SpawnEmitterAttached = function (EmitterTemplate, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", bAutoDestroy = true) { return fnprepatch_212.call(this, EmitterTemplate, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_213 = GameplayStatics.prototype.SpawnEmitterAtLocation;GameplayStatics.prototype.SpawnEmitterAtLocation = function (WorldContextObject, EmitterTemplate, Location, Rotation, bAutoDestroy = true) { return fnprepatch_213.call(this, WorldContextObject, EmitterTemplate, Location, Rotation, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_214 = GameplayStatics.prototype.SpawnDialogueAttached;GameplayStatics.prototype.SpawnDialogueAttached = function (Dialogue, Context, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", bStopWhenAttachedToDestroyed = false, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings, bAutoDestroy = true) { return fnprepatch_214.call(this, Dialogue, Context, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bStopWhenAttachedToDestroyed, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_215 = GameplayStatics.prototype.SpawnDialogueAtLocation;GameplayStatics.prototype.SpawnDialogueAtLocation = function (WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings, bAutoDestroy = true) { return fnprepatch_215.call(this, WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_216 = GameplayStatics.prototype.SpawnDialogue2D;GameplayStatics.prototype.SpawnDialogue2D = function (WorldContextObject, Dialogue, Context, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, bAutoDestroy = true) { return fnprepatch_216.call(this, WorldContextObject, Dialogue, Context, VolumeMultiplier, PitchMultiplier, StartTime, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_217 = GameplayStatics.prototype.SpawnDecalAttached;GameplayStatics.prototype.SpawnDecalAttached = function (DecalMaterial, DecalSize, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", LifeSpan = 0) { return fnprepatch_217.call(this, DecalMaterial, DecalSize, AttachToComponent, AttachPointName, Location, Rotation, LocationType, LifeSpan) }; } catch (e) {};
-try { let fnprepatch_218 = GameplayStatics.prototype.SpawnDecalAtLocation;GameplayStatics.prototype.SpawnDecalAtLocation = function (WorldContextObject, DecalMaterial, DecalSize, Location, Rotation, LifeSpan = 0) { return fnprepatch_218.call(this, WorldContextObject, DecalMaterial, DecalSize, Location, Rotation, LifeSpan) }; } catch (e) {};
-try { let fnprepatch_219 = GameplayStatics.prototype.SetSoundMixClassOverride;GameplayStatics.prototype.SetSoundMixClassOverride = function (WorldContextObject, InSoundMixModifier, InSoundClass, Volume = 1, Pitch = 1, FadeInTime = 1, bApplyToChildren = true) { return fnprepatch_219.call(this, WorldContextObject, InSoundMixModifier, InSoundClass, Volume, Pitch, FadeInTime, bApplyToChildren) }; } catch (e) {};
-try { let fnprepatch_220 = GameplayStatics.prototype.SetGlobalListenerFocusParameters;GameplayStatics.prototype.SetGlobalListenerFocusParameters = function (WorldContextObject, FocusAzimuthScale = 1, NonFocusAzimuthScale = 1, FocusDistanceScale = 1, NonFocusDistanceScale = 1, FocusVolumeScale = 1, NonFocusVolumeScale = 1, FocusPriorityScale = 1, NonFocusPriorityScale = 1) { return fnprepatch_220.call(this, WorldContextObject, FocusAzimuthScale, NonFocusAzimuthScale, FocusDistanceScale, NonFocusDistanceScale, FocusVolumeScale, NonFocusVolumeScale, FocusPriorityScale, NonFocusPriorityScale) }; } catch (e) {};
-try { let fnprepatch_221 = GameplayStatics.prototype.ProjectWorldToScreen;GameplayStatics.prototype.ProjectWorldToScreen = function (Player, WorldPosition, ScreenPosition, bPlayerViewportRelative = false) { return fnprepatch_221.call(this, Player, WorldPosition, ScreenPosition, bPlayerViewportRelative) }; } catch (e) {};
-try { let fnprepatch_222 = GameplayStatics.prototype.PlayWorldCameraShake;GameplayStatics.prototype.PlayWorldCameraShake = function (WorldContextObject, Shake, Epicenter, InnerRadius, OuterRadius, Falloff = 1, bOrientShakeTowardsEpicenter = false) { return fnprepatch_222.call(this, WorldContextObject, Shake, Epicenter, InnerRadius, OuterRadius, Falloff, bOrientShakeTowardsEpicenter) }; } catch (e) {};
-try { let fnprepatch_223 = GameplayStatics.prototype.PlaySoundAtLocation;GameplayStatics.prototype.PlaySoundAtLocation = function (WorldContextObject, Sound, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings, ConcurrencySettings) { return fnprepatch_223.call(this, WorldContextObject, Sound, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, ConcurrencySettings) }; } catch (e) {};
-try { let fnprepatch_224 = GameplayStatics.prototype.PlaySound2D;GameplayStatics.prototype.PlaySound2D = function (WorldContextObject, Sound, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, ConcurrencySettings) { return fnprepatch_224.call(this, WorldContextObject, Sound, VolumeMultiplier, PitchMultiplier, StartTime, ConcurrencySettings) }; } catch (e) {};
-try { let fnprepatch_225 = GameplayStatics.prototype.PlayDialogueAtLocation;GameplayStatics.prototype.PlayDialogueAtLocation = function (WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings) { return fnprepatch_225.call(this, WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings) }; } catch (e) {};
-try { let fnprepatch_226 = GameplayStatics.prototype.PlayDialogue2D;GameplayStatics.prototype.PlayDialogue2D = function (WorldContextObject, Dialogue, Context, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0) { return fnprepatch_226.call(this, WorldContextObject, Dialogue, Context, VolumeMultiplier, PitchMultiplier, StartTime) }; } catch (e) {};
-try { let fnprepatch_227 = GameplayStatics.prototype.OpenLevel;GameplayStatics.prototype.OpenLevel = function (WorldContextObject, LevelName, bAbsolute = true, Options) { return fnprepatch_227.call(this, WorldContextObject, LevelName, bAbsolute, Options) }; } catch (e) {};
-try { let fnprepatch_228 = GameplayStatics.prototype.GetCurrentLevelName;GameplayStatics.prototype.GetCurrentLevelName = function (WorldContextObject, bRemovePrefixString = true) { return fnprepatch_228.call(this, WorldContextObject, bRemovePrefixString) }; } catch (e) {};
-try { let fnprepatch_229 = GameplayStatics.prototype.CreateSound2D;GameplayStatics.prototype.CreateSound2D = function (WorldContextObject, Sound, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, ConcurrencySettings, bPersistAcrossLevelTransition = false, bAutoDestroy = true) { return fnprepatch_229.call(this, WorldContextObject, Sound, VolumeMultiplier, PitchMultiplier, StartTime, ConcurrencySettings, bPersistAcrossLevelTransition, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_230 = GameplayStatics.prototype.CreatePlayer;GameplayStatics.prototype.CreatePlayer = function (WorldContextObject, ControllerId = -1, bSpawnPawn = true) { return fnprepatch_230.call(this, WorldContextObject, ControllerId, bSpawnPawn) }; } catch (e) {};
-try { let fnprepatch_231 = GameplayStatics.prototype.ClearSoundMixClassOverride;GameplayStatics.prototype.ClearSoundMixClassOverride = function (WorldContextObject, InSoundMixModifier, InSoundClass, FadeOutTime = 1) { return fnprepatch_231.call(this, WorldContextObject, InSoundMixModifier, InSoundClass, FadeOutTime) }; } catch (e) {};
-try { let fnprepatch_232 = GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByTraceChannel;GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByTraceChannel = function (WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency = 15, MaxSimTime = 2, OverrideGravityZ = 0) { return fnprepatch_232.call(this, WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency, MaxSimTime, OverrideGravityZ) }; } catch (e) {};
-try { let fnprepatch_233 = GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByObjectType;GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByObjectType = function (WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency = 15, MaxSimTime = 2, OverrideGravityZ = 0) { return fnprepatch_233.call(this, WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency, MaxSimTime, OverrideGravityZ) }; } catch (e) {};
-try { let fnprepatch_234 = GameplayStatics.prototype.BeginSpawningActorFromClass;GameplayStatics.prototype.BeginSpawningActorFromClass = function (WorldContextObject, ActorClass, SpawnTransform, bNoCollisionFail = false, Owner) { return fnprepatch_234.call(this, WorldContextObject, ActorClass, SpawnTransform, bNoCollisionFail, Owner) }; } catch (e) {};
-try { let fnprepatch_235 = GameplayStatics.prototype.BeginDeferredActorSpawnFromClass;GameplayStatics.prototype.BeginDeferredActorSpawnFromClass = function (WorldContextObject, ActorClass, SpawnTransform, CollisionHandlingOverride = "Undefined", Owner) { return fnprepatch_235.call(this, WorldContextObject, ActorClass, SpawnTransform, CollisionHandlingOverride, Owner) }; } catch (e) {};
-try { let fnprepatch_236 = GameplayStatics.prototype.ApplyRadialDamageWithFalloff;GameplayStatics.prototype.ApplyRadialDamageWithFalloff = function (WorldContextObject, BaseDamage, MinimumDamage, Origin, DamageInnerRadius, DamageOuterRadius, DamageFalloff, DamageTypeClass, IgnoreActors, DamageCauser, InstigatedByController, DamagePreventionChannel = "ECC_Visibility") { return fnprepatch_236.call(this, WorldContextObject, BaseDamage, MinimumDamage, Origin, DamageInnerRadius, DamageOuterRadius, DamageFalloff, DamageTypeClass, IgnoreActors, DamageCauser, InstigatedByController, DamagePreventionChannel) }; } catch (e) {};
-try { let fnprepatch_237 = GameplayStatics.prototype.ApplyRadialDamage;GameplayStatics.prototype.ApplyRadialDamage = function (WorldContextObject, BaseDamage, Origin, DamageRadius, DamageTypeClass, IgnoreActors, DamageCauser, InstigatedByController, bDoFullDamage = false, DamagePreventionChannel = "ECC_Visibility") { return fnprepatch_237.call(this, WorldContextObject, BaseDamage, Origin, DamageRadius, DamageTypeClass, IgnoreActors, DamageCauser, InstigatedByController, bDoFullDamage, DamagePreventionChannel) }; } catch (e) {};
-try { let fnprepatch_238 = GameplayStatics.prototype.ActivateReverbEffect;GameplayStatics.prototype.ActivateReverbEffect = function (WorldContextObject, ReverbEffect, TagName, Priority = 0, Volume = 0.5, FadeTime = 2) { return fnprepatch_238.call(this, WorldContextObject, ReverbEffect, TagName, Priority, Volume, FadeTime) }; } catch (e) {};
+try { let fnprepatch_282 = GameplayStatics.prototype.SuggestProjectileVelocity_CustomArc;GameplayStatics.prototype.SuggestProjectileVelocity_CustomArc = function (WorldContextObject, OutLaunchVelocity, StartPos, EndPos, OverrideGravityZ = 0, ArcParam = 0.5) { return fnprepatch_282.call(this, WorldContextObject, OutLaunchVelocity, StartPos, EndPos, OverrideGravityZ, ArcParam) }; } catch (e) {};
+try { let fnprepatch_283 = GameplayStatics.prototype.SpawnSoundAttached;GameplayStatics.prototype.SpawnSoundAttached = function (Sound, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", bStopWhenAttachedToDestroyed = false, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, ConcurrencySettings = undefined, bAutoDestroy = true) { return fnprepatch_283.call(this, Sound, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bStopWhenAttachedToDestroyed, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, ConcurrencySettings, bAutoDestroy) }; } catch (e) {};
+try { let fnprepatch_284 = GameplayStatics.prototype.SpawnSoundAtLocation;GameplayStatics.prototype.SpawnSoundAtLocation = function (WorldContextObject, Sound, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, ConcurrencySettings = undefined, bAutoDestroy = true) { return fnprepatch_284.call(this, WorldContextObject, Sound, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, ConcurrencySettings, bAutoDestroy) }; } catch (e) {};
+try { let fnprepatch_285 = GameplayStatics.prototype.SpawnSound2D;GameplayStatics.prototype.SpawnSound2D = function (WorldContextObject, Sound, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, ConcurrencySettings = undefined, bPersistAcrossLevelTransition = false, bAutoDestroy = true) { return fnprepatch_285.call(this, WorldContextObject, Sound, VolumeMultiplier, PitchMultiplier, StartTime, ConcurrencySettings, bPersistAcrossLevelTransition, bAutoDestroy) }; } catch (e) {};
+try { let fnprepatch_286 = GameplayStatics.prototype.SpawnForceFeedbackAttached;GameplayStatics.prototype.SpawnForceFeedbackAttached = function (ForceFeedbackEffect, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", bStopWhenAttachedToDestroyed = false, bLooping = false, IntensityMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, bAutoDestroy = true) { return fnprepatch_286.call(this, ForceFeedbackEffect, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bStopWhenAttachedToDestroyed, bLooping, IntensityMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
+try { let fnprepatch_287 = GameplayStatics.prototype.SpawnForceFeedbackAtLocation;GameplayStatics.prototype.SpawnForceFeedbackAtLocation = function (WorldContextObject, ForceFeedbackEffect, Location, Rotation, bLooping = false, IntensityMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, bAutoDestroy = true) { return fnprepatch_287.call(this, WorldContextObject, ForceFeedbackEffect, Location, Rotation, bLooping, IntensityMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
+try { let fnprepatch_288 = GameplayStatics.prototype.SpawnEmitterAttached;GameplayStatics.prototype.SpawnEmitterAttached = function (EmitterTemplate, AttachToComponent, AttachPointName = "None", Location, Rotation, Scale, LocationType = "KeepRelativeOffset", bAutoDestroy = true, PoolingMethod = "None") { return fnprepatch_288.call(this, EmitterTemplate, AttachToComponent, AttachPointName, Location, Rotation, Scale, LocationType, bAutoDestroy, PoolingMethod) }; } catch (e) {};
+try { let fnprepatch_289 = GameplayStatics.prototype.SpawnEmitterAtLocation;GameplayStatics.prototype.SpawnEmitterAtLocation = function (WorldContextObject, EmitterTemplate, Location, Rotation, Scale, bAutoDestroy = true, PoolingMethod = "None") { return fnprepatch_289.call(this, WorldContextObject, EmitterTemplate, Location, Rotation, Scale, bAutoDestroy, PoolingMethod) }; } catch (e) {};
+try { let fnprepatch_290 = GameplayStatics.prototype.SpawnDialogueAttached;GameplayStatics.prototype.SpawnDialogueAttached = function (Dialogue, Context, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", bStopWhenAttachedToDestroyed = false, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, bAutoDestroy = true) { return fnprepatch_290.call(this, Dialogue, Context, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bStopWhenAttachedToDestroyed, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
+try { let fnprepatch_291 = GameplayStatics.prototype.SpawnDialogueAtLocation;GameplayStatics.prototype.SpawnDialogueAtLocation = function (WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, bAutoDestroy = true) { return fnprepatch_291.call(this, WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
+try { let fnprepatch_292 = GameplayStatics.prototype.SpawnDialogue2D;GameplayStatics.prototype.SpawnDialogue2D = function (WorldContextObject, Dialogue, Context, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, bAutoDestroy = true) { return fnprepatch_292.call(this, WorldContextObject, Dialogue, Context, VolumeMultiplier, PitchMultiplier, StartTime, bAutoDestroy) }; } catch (e) {};
+try { let fnprepatch_293 = GameplayStatics.prototype.SpawnDecalAttached;GameplayStatics.prototype.SpawnDecalAttached = function (DecalMaterial, DecalSize, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", LifeSpan = 0) { return fnprepatch_293.call(this, DecalMaterial, DecalSize, AttachToComponent, AttachPointName, Location, Rotation, LocationType, LifeSpan) }; } catch (e) {};
+try { let fnprepatch_294 = GameplayStatics.prototype.SpawnDecalAtLocation;GameplayStatics.prototype.SpawnDecalAtLocation = function (WorldContextObject, DecalMaterial, DecalSize, Location, Rotation, LifeSpan = 0) { return fnprepatch_294.call(this, WorldContextObject, DecalMaterial, DecalSize, Location, Rotation, LifeSpan) }; } catch (e) {};
+try { let fnprepatch_295 = GameplayStatics.prototype.SetSoundMixClassOverride;GameplayStatics.prototype.SetSoundMixClassOverride = function (WorldContextObject, InSoundMixModifier, InSoundClass, Volume = 1, Pitch = 1, FadeInTime = 1, bApplyToChildren = true) { return fnprepatch_295.call(this, WorldContextObject, InSoundMixModifier, InSoundClass, Volume, Pitch, FadeInTime, bApplyToChildren) }; } catch (e) {};
+try { let fnprepatch_296 = GameplayStatics.prototype.SetGlobalListenerFocusParameters;GameplayStatics.prototype.SetGlobalListenerFocusParameters = function (WorldContextObject, FocusAzimuthScale = 1, NonFocusAzimuthScale = 1, FocusDistanceScale = 1, NonFocusDistanceScale = 1, FocusVolumeScale = 1, NonFocusVolumeScale = 1, FocusPriorityScale = 1, NonFocusPriorityScale = 1) { return fnprepatch_296.call(this, WorldContextObject, FocusAzimuthScale, NonFocusAzimuthScale, FocusDistanceScale, NonFocusDistanceScale, FocusVolumeScale, NonFocusVolumeScale, FocusPriorityScale, NonFocusPriorityScale) }; } catch (e) {};
+try { let fnprepatch_297 = GameplayStatics.prototype.ProjectWorldToScreen;GameplayStatics.prototype.ProjectWorldToScreen = function (Player, WorldPosition, ScreenPosition, bPlayerViewportRelative = false) { return fnprepatch_297.call(this, Player, WorldPosition, ScreenPosition, bPlayerViewportRelative) }; } catch (e) {};
+try { let fnprepatch_298 = GameplayStatics.prototype.PlayWorldCameraShake;GameplayStatics.prototype.PlayWorldCameraShake = function (WorldContextObject, Shake, Epicenter, InnerRadius, OuterRadius, Falloff = 1, bOrientShakeTowardsEpicenter = false) { return fnprepatch_298.call(this, WorldContextObject, Shake, Epicenter, InnerRadius, OuterRadius, Falloff, bOrientShakeTowardsEpicenter) }; } catch (e) {};
+try { let fnprepatch_299 = GameplayStatics.prototype.PlaySoundAtLocation;GameplayStatics.prototype.PlaySoundAtLocation = function (WorldContextObject, Sound, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, ConcurrencySettings = undefined, OwningActor = undefined) { return fnprepatch_299.call(this, WorldContextObject, Sound, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, ConcurrencySettings, OwningActor) }; } catch (e) {};
+try { let fnprepatch_300 = GameplayStatics.prototype.PlaySound2D;GameplayStatics.prototype.PlaySound2D = function (WorldContextObject, Sound, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, ConcurrencySettings = undefined, OwningActor = undefined) { return fnprepatch_300.call(this, WorldContextObject, Sound, VolumeMultiplier, PitchMultiplier, StartTime, ConcurrencySettings, OwningActor) }; } catch (e) {};
+try { let fnprepatch_301 = GameplayStatics.prototype.PlayDialogueAtLocation;GameplayStatics.prototype.PlayDialogueAtLocation = function (WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined) { return fnprepatch_301.call(this, WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings) }; } catch (e) {};
+try { let fnprepatch_302 = GameplayStatics.prototype.PlayDialogue2D;GameplayStatics.prototype.PlayDialogue2D = function (WorldContextObject, Dialogue, Context, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0) { return fnprepatch_302.call(this, WorldContextObject, Dialogue, Context, VolumeMultiplier, PitchMultiplier, StartTime) }; } catch (e) {};
+try { let fnprepatch_303 = GameplayStatics.prototype.OpenLevel;GameplayStatics.prototype.OpenLevel = function (WorldContextObject, LevelName, bAbsolute = true, Options) { return fnprepatch_303.call(this, WorldContextObject, LevelName, bAbsolute, Options) }; } catch (e) {};
+try { let fnprepatch_304 = GameplayStatics.prototype.GetCurrentLevelName;GameplayStatics.prototype.GetCurrentLevelName = function (WorldContextObject, bRemovePrefixString = true) { return fnprepatch_304.call(this, WorldContextObject, bRemovePrefixString) }; } catch (e) {};
+try { let fnprepatch_305 = GameplayStatics.prototype.CreateSound2D;GameplayStatics.prototype.CreateSound2D = function (WorldContextObject, Sound, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, ConcurrencySettings = undefined, bPersistAcrossLevelTransition = false, bAutoDestroy = true) { return fnprepatch_305.call(this, WorldContextObject, Sound, VolumeMultiplier, PitchMultiplier, StartTime, ConcurrencySettings, bPersistAcrossLevelTransition, bAutoDestroy) }; } catch (e) {};
+try { let fnprepatch_306 = GameplayStatics.prototype.CreatePlayer;GameplayStatics.prototype.CreatePlayer = function (WorldContextObject, ControllerId = -1, bSpawnPawn = true) { return fnprepatch_306.call(this, WorldContextObject, ControllerId, bSpawnPawn) }; } catch (e) {};
+try { let fnprepatch_307 = GameplayStatics.prototype.ClearSoundMixClassOverride;GameplayStatics.prototype.ClearSoundMixClassOverride = function (WorldContextObject, InSoundMixModifier, InSoundClass, FadeOutTime = 1) { return fnprepatch_307.call(this, WorldContextObject, InSoundMixModifier, InSoundClass, FadeOutTime) }; } catch (e) {};
+try { let fnprepatch_308 = GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByTraceChannel;GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByTraceChannel = function (WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency = 15, MaxSimTime = 2, OverrideGravityZ = 0) { return fnprepatch_308.call(this, WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency, MaxSimTime, OverrideGravityZ) }; } catch (e) {};
+try { let fnprepatch_309 = GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByObjectType;GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByObjectType = function (WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency = 15, MaxSimTime = 2, OverrideGravityZ = 0) { return fnprepatch_309.call(this, WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency, MaxSimTime, OverrideGravityZ) }; } catch (e) {};
+try { let fnprepatch_310 = GameplayStatics.prototype.BeginSpawningActorFromClass;GameplayStatics.prototype.BeginSpawningActorFromClass = function (WorldContextObject, ActorClass, SpawnTransform, bNoCollisionFail = false, Owner = undefined) { return fnprepatch_310.call(this, WorldContextObject, ActorClass, SpawnTransform, bNoCollisionFail, Owner) }; } catch (e) {};
+try { let fnprepatch_311 = GameplayStatics.prototype.BeginDeferredActorSpawnFromClass;GameplayStatics.prototype.BeginDeferredActorSpawnFromClass = function (WorldContextObject, ActorClass, SpawnTransform, CollisionHandlingOverride = "Undefined", Owner = undefined) { return fnprepatch_311.call(this, WorldContextObject, ActorClass, SpawnTransform, CollisionHandlingOverride, Owner) }; } catch (e) {};
+try { let fnprepatch_312 = GameplayStatics.prototype.ApplyRadialDamageWithFalloff;GameplayStatics.prototype.ApplyRadialDamageWithFalloff = function (WorldContextObject, BaseDamage, MinimumDamage, Origin, DamageInnerRadius, DamageOuterRadius, DamageFalloff, DamageTypeClass, IgnoreActors, DamageCauser = undefined, InstigatedByController = undefined, DamagePreventionChannel = "ECC_Visibility") { return fnprepatch_312.call(this, WorldContextObject, BaseDamage, MinimumDamage, Origin, DamageInnerRadius, DamageOuterRadius, DamageFalloff, DamageTypeClass, IgnoreActors, DamageCauser, InstigatedByController, DamagePreventionChannel) }; } catch (e) {};
+try { let fnprepatch_313 = GameplayStatics.prototype.ApplyRadialDamage;GameplayStatics.prototype.ApplyRadialDamage = function (WorldContextObject, BaseDamage, Origin, DamageRadius, DamageTypeClass, IgnoreActors, DamageCauser = undefined, InstigatedByController = undefined, bDoFullDamage = false, DamagePreventionChannel = "ECC_Visibility") { return fnprepatch_313.call(this, WorldContextObject, BaseDamage, Origin, DamageRadius, DamageTypeClass, IgnoreActors, DamageCauser, InstigatedByController, bDoFullDamage, DamagePreventionChannel) }; } catch (e) {};
+try { let fnprepatch_314 = GameplayStatics.prototype.ActivateReverbEffect;GameplayStatics.prototype.ActivateReverbEffect = function (WorldContextObject, ReverbEffect, TagName, Priority = 0, Volume = 0.5, FadeTime = 2) { return fnprepatch_314.call(this, WorldContextObject, ReverbEffect, TagName, Priority, Volume, FadeTime) }; } catch (e) {};
 try { GameplayStatics.prototype.SuggestProjectileVelocityCustomArc = GameplayStatics.prototype.SuggestProjectileVelocity_CustomArc; } catch (e) {};
 try { GameplayStatics.SuggestProjectileVelocityCustomArc = GameplayStatics.SuggestProjectileVelocity_CustomArc; } catch (e) {};
 try { GameplayStatics.prototype.GetClass = GameplayStatics.prototype.GetObjectClass; } catch (e) {};
@@ -518,22 +724,25 @@ try { GameplayStatics.prototype.PredictProjectilePathByObjectType = GameplayStat
 try { GameplayStatics.PredictProjectilePathByObjectType = GameplayStatics.Blueprint_PredictProjectilePath_ByObjectType; } catch (e) {};
 try { GameplayStatics.prototype.PredictProjectilePath = GameplayStatics.prototype.Blueprint_PredictProjectilePath_Advanced; } catch (e) {};
 try { GameplayStatics.PredictProjectilePath = GameplayStatics.Blueprint_PredictProjectilePath_Advanced; } catch (e) {};
-try { let fnprepatch_239 = GameUserSettings.prototype.RunHardwareBenchmark;GameUserSettings.prototype.RunHardwareBenchmark = function (WorkScale = 10, CPUMultiplier = 1, GPUMultiplier = 1) { return fnprepatch_239.call(this, WorkScale, CPUMultiplier, GPUMultiplier) }; } catch (e) {};
-try { let fnprepatch_240 = GameUserSettings.prototype.LoadSettings;GameUserSettings.prototype.LoadSettings = function (bForceReload = false) { return fnprepatch_240.call(this, bForceReload) }; } catch (e) {};
-try { let fnprepatch_241 = GameUserSettings.prototype.EnableHDRDisplayOutput;GameUserSettings.prototype.EnableHDRDisplayOutput = function (bEnable, DisplayNits = 1000) { return fnprepatch_241.call(this, bEnable, DisplayNits) }; } catch (e) {};
+try { let fnprepatch_315 = GameUserSettings.prototype.RunHardwareBenchmark;GameUserSettings.prototype.RunHardwareBenchmark = function (WorkScale = 10, CPUMultiplier = 1, GPUMultiplier = 1) { return fnprepatch_315.call(this, WorkScale, CPUMultiplier, GPUMultiplier) }; } catch (e) {};
+try { let fnprepatch_316 = GameUserSettings.prototype.LoadSettings;GameUserSettings.prototype.LoadSettings = function (bForceReload = false) { return fnprepatch_316.call(this, bForceReload) }; } catch (e) {};
+try { let fnprepatch_317 = GameUserSettings.prototype.EnableHDRDisplayOutput;GameUserSettings.prototype.EnableHDRDisplayOutput = function (bEnable, DisplayNits = 1000) { return fnprepatch_317.call(this, bEnable, DisplayNits) }; } catch (e) {};
 try { GameUserSettings.prototype.SetResolutionScaleValue = GameUserSettings.prototype.SetResolutionScaleValueEx; } catch (e) {};
 try { GameUserSettings.prototype.SetResolutionScaleValue_Deprecated = GameUserSettings.prototype.SetResolutionScaleValue; } catch (e) {};
 try { GameUserSettings.prototype.GetResolutionScaleInformation = GameUserSettings.prototype.GetResolutionScaleInformationEx; } catch (e) {};
 try { GameUserSettings.prototype.GetResolutionScaleInformation_Deprecated = GameUserSettings.prototype.GetResolutionScaleInformation; } catch (e) {};
-try { let fnprepatch_242 = ImportanceSamplingLibrary.prototype.RandomSobolCell3D;ImportanceSamplingLibrary.prototype.RandomSobolCell3D = function (Index, NumCells = 1, Cell, Seed) { return fnprepatch_242.call(this, Index, NumCells, Cell, Seed) }; } catch (e) {};
-try { let fnprepatch_243 = ImportanceSamplingLibrary.prototype.RandomSobolCell2D;ImportanceSamplingLibrary.prototype.RandomSobolCell2D = function (Index, NumCells = 1, Cell = {"X":0,"Y":0}, Seed = {"X":0,"Y":0}) { return fnprepatch_243.call(this, Index, NumCells, Cell, Seed) }; } catch (e) {};
-try { let fnprepatch_244 = ImportanceSamplingLibrary.prototype.NextSobolCell3D;ImportanceSamplingLibrary.prototype.NextSobolCell3D = function (Index, NumCells = 1, PreviousValue) { return fnprepatch_244.call(this, Index, NumCells, PreviousValue) }; } catch (e) {};
-try { let fnprepatch_245 = ImportanceSamplingLibrary.prototype.NextSobolCell2D;ImportanceSamplingLibrary.prototype.NextSobolCell2D = function (Index, NumCells = 1, PreviousValue = {"X":0,"Y":0}) { return fnprepatch_245.call(this, Index, NumCells, PreviousValue) }; } catch (e) {};
-try { let fnprepatch_246 = InputSettings.prototype.RemoveAxisMapping;InputSettings.prototype.RemoveAxisMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_246.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
-try { let fnprepatch_247 = InputSettings.prototype.RemoveActionMapping;InputSettings.prototype.RemoveActionMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_247.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
-try { let fnprepatch_248 = InputSettings.prototype.AddAxisMapping;InputSettings.prototype.AddAxisMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_248.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
-try { let fnprepatch_249 = InputSettings.prototype.AddActionMapping;InputSettings.prototype.AddActionMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_249.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
-try { let fnprepatch_250 = InterpToMovementComponent.prototype.RestartMovement;InterpToMovementComponent.prototype.RestartMovement = function (InitialDirection = 1) { return fnprepatch_250.call(this, InitialDirection) }; } catch (e) {};
+try { let fnprepatch_318 = HealthSnapshotBlueprintLibrary.prototype.LogPerformanceSnapshot;HealthSnapshotBlueprintLibrary.prototype.LogPerformanceSnapshot = function (SnapshotTitle, bResetStats = true) { return fnprepatch_318.call(this, SnapshotTitle, bResetStats) }; } catch (e) {};
+try { let fnprepatch_319 = ImportanceSamplingLibrary.prototype.RandomSobolCell3D;ImportanceSamplingLibrary.prototype.RandomSobolCell3D = function (Index, NumCells = 1, Cell, Seed) { return fnprepatch_319.call(this, Index, NumCells, Cell, Seed) }; } catch (e) {};
+try { let fnprepatch_320 = ImportanceSamplingLibrary.prototype.RandomSobolCell2D;ImportanceSamplingLibrary.prototype.RandomSobolCell2D = function (Index, NumCells = 1, Cell = {"X":0,"Y":0}, Seed = {"X":0,"Y":0}) { return fnprepatch_320.call(this, Index, NumCells, Cell, Seed) }; } catch (e) {};
+try { let fnprepatch_321 = ImportanceSamplingLibrary.prototype.NextSobolCell3D;ImportanceSamplingLibrary.prototype.NextSobolCell3D = function (Index, NumCells = 1, PreviousValue) { return fnprepatch_321.call(this, Index, NumCells, PreviousValue) }; } catch (e) {};
+try { let fnprepatch_322 = ImportanceSamplingLibrary.prototype.NextSobolCell2D;ImportanceSamplingLibrary.prototype.NextSobolCell2D = function (Index, NumCells = 1, PreviousValue = {"X":0,"Y":0}) { return fnprepatch_322.call(this, Index, NumCells, PreviousValue) }; } catch (e) {};
+try { let fnprepatch_323 = InputSettings.prototype.RemoveAxisMapping;InputSettings.prototype.RemoveAxisMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_323.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
+try { let fnprepatch_324 = InputSettings.prototype.RemoveActionMapping;InputSettings.prototype.RemoveActionMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_324.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
+try { let fnprepatch_325 = InputSettings.prototype.AddAxisMapping;InputSettings.prototype.AddAxisMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_325.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
+try { let fnprepatch_326 = InputSettings.prototype.AddActionMapping;InputSettings.prototype.AddActionMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_326.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
+try { let fnprepatch_327 = InterpToMovementComponent.prototype.RestartMovement;InterpToMovementComponent.prototype.RestartMovement = function (InitialDirection = 1) { return fnprepatch_327.call(this, InitialDirection) }; } catch (e) {};
+try { KismetArrayLibrary.prototype.SwapArrayElements = KismetArrayLibrary.prototype.Array_Swap; } catch (e) {};
+try { KismetArrayLibrary.SwapArrayElements = KismetArrayLibrary.Array_Swap; } catch (e) {};
 try { KismetArrayLibrary.prototype.Shuffle = KismetArrayLibrary.prototype.Array_Shuffle; } catch (e) {};
 try { KismetArrayLibrary.Shuffle = KismetArrayLibrary.Array_Shuffle; } catch (e) {};
 try { KismetArrayLibrary.prototype.SetArrayElem = KismetArrayLibrary.prototype.Array_Set; } catch (e) {};
@@ -600,6 +809,8 @@ try { KismetInputLibrary.prototype.GetCursorDelta = KismetInputLibrary.prototype
 try { KismetInputLibrary.GetCursorDelta = KismetInputLibrary.PointerEvent_GetCursorDelta; } catch (e) {};
 try { KismetInputLibrary.prototype.IsVectorAxis = KismetInputLibrary.prototype.Key_IsVectorAxis; } catch (e) {};
 try { KismetInputLibrary.IsVectorAxis = KismetInputLibrary.Key_IsVectorAxis; } catch (e) {};
+try { KismetInputLibrary.prototype.IsValid = KismetInputLibrary.prototype.Key_IsValid; } catch (e) {};
+try { KismetInputLibrary.IsValid = KismetInputLibrary.Key_IsValid; } catch (e) {};
 try { KismetInputLibrary.prototype.IsMouseButton = KismetInputLibrary.prototype.Key_IsMouseButton; } catch (e) {};
 try { KismetInputLibrary.IsMouseButton = KismetInputLibrary.Key_IsMouseButton; } catch (e) {};
 try { KismetInputLibrary.prototype.IsModifierKey = KismetInputLibrary.prototype.Key_IsModifierKey; } catch (e) {};
@@ -642,55 +853,61 @@ try { KismetInputLibrary.prototype.Equal = KismetInputLibrary.prototype.EqualEqu
 try { KismetInputLibrary.Equal = KismetInputLibrary.EqualEqual_KeyKey; } catch (e) {};
 try { KismetInputLibrary.prototype.Equal = KismetInputLibrary.prototype.EqualEqual_InputChordInputChord; } catch (e) {};
 try { KismetInputLibrary.Equal = KismetInputLibrary.EqualEqual_InputChordInputChord; } catch (e) {};
-try { let fnprepatch_251 = KismetInternationalizationLibrary.prototype.SetCurrentLocale;KismetInternationalizationLibrary.prototype.SetCurrentLocale = function (Culture, SaveToConfig = false) { return fnprepatch_251.call(this, Culture, SaveToConfig) }; } catch (e) {};
-try { let fnprepatch_252 = KismetInternationalizationLibrary.prototype.SetCurrentLanguageAndLocale;KismetInternationalizationLibrary.prototype.SetCurrentLanguageAndLocale = function (Culture, SaveToConfig = false) { return fnprepatch_252.call(this, Culture, SaveToConfig) }; } catch (e) {};
-try { let fnprepatch_253 = KismetInternationalizationLibrary.prototype.SetCurrentLanguage;KismetInternationalizationLibrary.prototype.SetCurrentLanguage = function (Culture, SaveToConfig = false) { return fnprepatch_253.call(this, Culture, SaveToConfig) }; } catch (e) {};
-try { let fnprepatch_254 = KismetInternationalizationLibrary.prototype.SetCurrentCulture;KismetInternationalizationLibrary.prototype.SetCurrentCulture = function (Culture, SaveToConfig = false) { return fnprepatch_254.call(this, Culture, SaveToConfig) }; } catch (e) {};
-try { let fnprepatch_255 = KismetInternationalizationLibrary.prototype.SetCurrentAssetGroupCulture;KismetInternationalizationLibrary.prototype.SetCurrentAssetGroupCulture = function (AssetGroup, Culture, SaveToConfig = false) { return fnprepatch_255.call(this, AssetGroup, Culture, SaveToConfig) }; } catch (e) {};
-try { let fnprepatch_256 = KismetInternationalizationLibrary.prototype.ClearCurrentAssetGroupCulture;KismetInternationalizationLibrary.prototype.ClearCurrentAssetGroupCulture = function (AssetGroup, SaveToConfig = false) { return fnprepatch_256.call(this, AssetGroup, SaveToConfig) }; } catch (e) {};
-try { let fnprepatch_257 = KismetMathLibrary.prototype.VectorSpringInterp;KismetMathLibrary.prototype.VectorSpringInterp = function (Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass = 1) { return fnprepatch_257.call(this, Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass) }; } catch (e) {};
-try { let fnprepatch_258 = KismetMathLibrary.prototype.VEase;KismetMathLibrary.prototype.VEase = function (A, B, Alpha, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_258.call(this, A, B, Alpha, EasingFunc, BlendExp, Steps) }; } catch (e) {};
-try { let fnprepatch_259 = KismetMathLibrary.prototype.TLerp;KismetMathLibrary.prototype.TLerp = function (A, B, Alpha, InterpMode = "QuatInterp") { return fnprepatch_259.call(this, A, B, Alpha, InterpMode) }; } catch (e) {};
-try { let fnprepatch_260 = KismetMathLibrary.prototype.TEase;KismetMathLibrary.prototype.TEase = function (A, B, Alpha, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_260.call(this, A, B, Alpha, EasingFunc, BlendExp, Steps) }; } catch (e) {};
-try { let fnprepatch_261 = KismetMathLibrary.prototype.Subtract_IntInt;KismetMathLibrary.prototype.Subtract_IntInt = function (A, B = 1) { return fnprepatch_261.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_262 = KismetMathLibrary.prototype.Subtract_FloatFloat;KismetMathLibrary.prototype.Subtract_FloatFloat = function (A, B = 1) { return fnprepatch_262.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_263 = KismetMathLibrary.prototype.Subtract_ByteByte;KismetMathLibrary.prototype.Subtract_ByteByte = function (A, B = 1) { return fnprepatch_263.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_264 = KismetMathLibrary.prototype.REase;KismetMathLibrary.prototype.REase = function (A, B, Alpha, bShortestPath, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_264.call(this, A, B, Alpha, bShortestPath, EasingFunc, BlendExp, Steps) }; } catch (e) {};
-try { let fnprepatch_265 = KismetMathLibrary.prototype.RandomRotator;KismetMathLibrary.prototype.RandomRotator = function (bRoll = false) { return fnprepatch_265.call(this, bRoll) }; } catch (e) {};
-try { let fnprepatch_266 = KismetMathLibrary.prototype.PointsAreCoplanar;KismetMathLibrary.prototype.PointsAreCoplanar = function (Points, Tolerance = 0.10000000149011612) { return fnprepatch_266.call(this, Points, Tolerance) }; } catch (e) {};
-try { let fnprepatch_267 = KismetMathLibrary.prototype.Percent_IntInt;KismetMathLibrary.prototype.Percent_IntInt = function (A, B = 1) { return fnprepatch_267.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_268 = KismetMathLibrary.prototype.Percent_FloatFloat;KismetMathLibrary.prototype.Percent_FloatFloat = function (A, B = 1) { return fnprepatch_268.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_269 = KismetMathLibrary.prototype.Percent_ByteByte;KismetMathLibrary.prototype.Percent_ByteByte = function (A, B = 1) { return fnprepatch_269.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_270 = KismetMathLibrary.prototype.NotEqual_VectorVector;KismetMathLibrary.prototype.NotEqual_VectorVector = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_270.call(this, A, B, ErrorTolerance) }; } catch (e) {};
-try { let fnprepatch_271 = KismetMathLibrary.prototype.NotEqual_Vector2DVector2D;KismetMathLibrary.prototype.NotEqual_Vector2DVector2D = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_271.call(this, A, B, ErrorTolerance) }; } catch (e) {};
-try { let fnprepatch_272 = KismetMathLibrary.prototype.NotEqual_RotatorRotator;KismetMathLibrary.prototype.NotEqual_RotatorRotator = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_272.call(this, A, B, ErrorTolerance) }; } catch (e) {};
-try { let fnprepatch_273 = KismetMathLibrary.prototype.NearlyEqual_TransformTransform;KismetMathLibrary.prototype.NearlyEqual_TransformTransform = function (A, B, LocationTolerance = 0.00009999999747378752, RotationTolerance = 0.00009999999747378752, Scale3DTolerance = 0.00009999999747378752) { return fnprepatch_273.call(this, A, B, LocationTolerance, RotationTolerance, Scale3DTolerance) }; } catch (e) {};
-try { let fnprepatch_274 = KismetMathLibrary.prototype.NearlyEqual_FloatFloat;KismetMathLibrary.prototype.NearlyEqual_FloatFloat = function (A, B, ErrorTolerance = 9.999999974752427e-7) { return fnprepatch_274.call(this, A, B, ErrorTolerance) }; } catch (e) {};
-try { let fnprepatch_275 = KismetMathLibrary.prototype.MinimumAreaRectangle;KismetMathLibrary.prototype.MinimumAreaRectangle = function (WorldContextObject, InVerts, SampleSurfaceNormal, OutRectCenter, OutRectRotation, OutSideLengthX, OutSideLengthY, bDebugDraw = false) { return fnprepatch_275.call(this, WorldContextObject, InVerts, SampleSurfaceNormal, OutRectCenter, OutRectRotation, OutSideLengthX, OutSideLengthY, bDebugDraw) }; } catch (e) {};
-try { let fnprepatch_276 = KismetMathLibrary.prototype.MakePulsatingValue;KismetMathLibrary.prototype.MakePulsatingValue = function (InCurrentTime, InPulsesPerSecond = 1, InPhase = 0) { return fnprepatch_276.call(this, InCurrentTime, InPulsesPerSecond, InPhase) }; } catch (e) {};
-try { let fnprepatch_277 = KismetMathLibrary.prototype.MakeDateTime;KismetMathLibrary.prototype.MakeDateTime = function (Year, Month, Day, Hour = 0, Minute = 0, Second = 0, Millisecond = 0) { return fnprepatch_277.call(this, Year, Month, Day, Hour, Minute, Second, Millisecond) }; } catch (e) {};
-try { let fnprepatch_278 = KismetMathLibrary.prototype.MakeColor;KismetMathLibrary.prototype.MakeColor = function (R, G, B, A = 1) { return fnprepatch_278.call(this, R, G, B, A) }; } catch (e) {};
-try { let fnprepatch_279 = KismetMathLibrary.prototype.Log;KismetMathLibrary.prototype.Log = function (A, Base = 1) { return fnprepatch_279.call(this, A, Base) }; } catch (e) {};
-try { let fnprepatch_280 = KismetMathLibrary.prototype.InRange_FloatFloat;KismetMathLibrary.prototype.InRange_FloatFloat = function (Value, Min, Max, InclusiveMin = true, InclusiveMax = true) { return fnprepatch_280.call(this, Value, Min, Max, InclusiveMin, InclusiveMax) }; } catch (e) {};
-try { let fnprepatch_281 = KismetMathLibrary.prototype.HSVToRGB;KismetMathLibrary.prototype.HSVToRGB = function (H, S, V, A = 1) { return fnprepatch_281.call(this, H, S, V, A) }; } catch (e) {};
-try { let fnprepatch_282 = KismetMathLibrary.prototype.FloatSpringInterp;KismetMathLibrary.prototype.FloatSpringInterp = function (Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass = 1) { return fnprepatch_282.call(this, Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass) }; } catch (e) {};
-try { let fnprepatch_283 = KismetMathLibrary.prototype.EqualEqual_VectorVector;KismetMathLibrary.prototype.EqualEqual_VectorVector = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_283.call(this, A, B, ErrorTolerance) }; } catch (e) {};
-try { let fnprepatch_284 = KismetMathLibrary.prototype.EqualEqual_Vector2DVector2D;KismetMathLibrary.prototype.EqualEqual_Vector2DVector2D = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_284.call(this, A, B, ErrorTolerance) }; } catch (e) {};
-try { let fnprepatch_285 = KismetMathLibrary.prototype.EqualEqual_RotatorRotator;KismetMathLibrary.prototype.EqualEqual_RotatorRotator = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_285.call(this, A, B, ErrorTolerance) }; } catch (e) {};
-try { let fnprepatch_286 = KismetMathLibrary.prototype.Ease;KismetMathLibrary.prototype.Ease = function (A, B, Alpha, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_286.call(this, A, B, Alpha, EasingFunc, BlendExp, Steps) }; } catch (e) {};
-try { let fnprepatch_287 = KismetMathLibrary.prototype.Divide_VectorInt;KismetMathLibrary.prototype.Divide_VectorInt = function (A, B = 1) { return fnprepatch_287.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_288 = KismetMathLibrary.prototype.Divide_VectorFloat;KismetMathLibrary.prototype.Divide_VectorFloat = function (A, B = 1) { return fnprepatch_288.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_289 = KismetMathLibrary.prototype.Divide_Vector2DFloat;KismetMathLibrary.prototype.Divide_Vector2DFloat = function (A, B = 1) { return fnprepatch_289.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_290 = KismetMathLibrary.prototype.Divide_IntInt;KismetMathLibrary.prototype.Divide_IntInt = function (A, B = 1) { return fnprepatch_290.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_291 = KismetMathLibrary.prototype.Divide_FloatFloat;KismetMathLibrary.prototype.Divide_FloatFloat = function (A, B = 1) { return fnprepatch_291.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_292 = KismetMathLibrary.prototype.Divide_ByteByte;KismetMathLibrary.prototype.Divide_ByteByte = function (A, B = 1) { return fnprepatch_292.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_293 = KismetMathLibrary.prototype.CreateVectorFromYawPitch;KismetMathLibrary.prototype.CreateVectorFromYawPitch = function (Yaw, Pitch, Length = 1) { return fnprepatch_293.call(this, Yaw, Pitch, Length) }; } catch (e) {};
-try { let fnprepatch_294 = KismetMathLibrary.prototype.Conv_Vector2DToVector;KismetMathLibrary.prototype.Conv_Vector2DToVector = function (InVector2D, Z = 0) { return fnprepatch_294.call(this, InVector2D, Z) }; } catch (e) {};
-try { let fnprepatch_295 = KismetMathLibrary.prototype.Add_IntInt;KismetMathLibrary.prototype.Add_IntInt = function (A, B = 1) { return fnprepatch_295.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_296 = KismetMathLibrary.prototype.Add_FloatFloat;KismetMathLibrary.prototype.Add_FloatFloat = function (A, B = 1) { return fnprepatch_296.call(this, A, B) }; } catch (e) {};
-try { let fnprepatch_297 = KismetMathLibrary.prototype.Add_ByteByte;KismetMathLibrary.prototype.Add_ByteByte = function (A, B = 1) { return fnprepatch_297.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_328 = KismetInternationalizationLibrary.prototype.SetCurrentLocale;KismetInternationalizationLibrary.prototype.SetCurrentLocale = function (Culture, SaveToConfig = false) { return fnprepatch_328.call(this, Culture, SaveToConfig) }; } catch (e) {};
+try { let fnprepatch_329 = KismetInternationalizationLibrary.prototype.SetCurrentLanguageAndLocale;KismetInternationalizationLibrary.prototype.SetCurrentLanguageAndLocale = function (Culture, SaveToConfig = false) { return fnprepatch_329.call(this, Culture, SaveToConfig) }; } catch (e) {};
+try { let fnprepatch_330 = KismetInternationalizationLibrary.prototype.SetCurrentLanguage;KismetInternationalizationLibrary.prototype.SetCurrentLanguage = function (Culture, SaveToConfig = false) { return fnprepatch_330.call(this, Culture, SaveToConfig) }; } catch (e) {};
+try { let fnprepatch_331 = KismetInternationalizationLibrary.prototype.SetCurrentCulture;KismetInternationalizationLibrary.prototype.SetCurrentCulture = function (Culture, SaveToConfig = false) { return fnprepatch_331.call(this, Culture, SaveToConfig) }; } catch (e) {};
+try { let fnprepatch_332 = KismetInternationalizationLibrary.prototype.SetCurrentAssetGroupCulture;KismetInternationalizationLibrary.prototype.SetCurrentAssetGroupCulture = function (AssetGroup, Culture, SaveToConfig = false) { return fnprepatch_332.call(this, AssetGroup, Culture, SaveToConfig) }; } catch (e) {};
+try { let fnprepatch_333 = KismetInternationalizationLibrary.prototype.ClearCurrentAssetGroupCulture;KismetInternationalizationLibrary.prototype.ClearCurrentAssetGroupCulture = function (AssetGroup, SaveToConfig = false) { return fnprepatch_333.call(this, AssetGroup, SaveToConfig) }; } catch (e) {};
+try { let fnprepatch_334 = KismetMaterialLibrary.prototype.CreateDynamicMaterialInstance;KismetMaterialLibrary.prototype.CreateDynamicMaterialInstance = function (WorldContextObject, Parent, OptionalName = "None") { return fnprepatch_334.call(this, WorldContextObject, Parent, OptionalName) }; } catch (e) {};
+try { let fnprepatch_335 = KismetMathLibrary.prototype.VectorSpringInterp;KismetMathLibrary.prototype.VectorSpringInterp = function (Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass = 1) { return fnprepatch_335.call(this, Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass) }; } catch (e) {};
+try { let fnprepatch_336 = KismetMathLibrary.prototype.VEase;KismetMathLibrary.prototype.VEase = function (A, B, Alpha, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_336.call(this, A, B, Alpha, EasingFunc, BlendExp, Steps) }; } catch (e) {};
+try { let fnprepatch_337 = KismetMathLibrary.prototype.TLerp;KismetMathLibrary.prototype.TLerp = function (A, B, Alpha, InterpMode = "QuatInterp") { return fnprepatch_337.call(this, A, B, Alpha, InterpMode) }; } catch (e) {};
+try { let fnprepatch_338 = KismetMathLibrary.prototype.TEase;KismetMathLibrary.prototype.TEase = function (A, B, Alpha, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_338.call(this, A, B, Alpha, EasingFunc, BlendExp, Steps) }; } catch (e) {};
+try { let fnprepatch_339 = KismetMathLibrary.prototype.Subtract_IntInt;KismetMathLibrary.prototype.Subtract_IntInt = function (A, B = 1) { return fnprepatch_339.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_340 = KismetMathLibrary.prototype.Subtract_FloatFloat;KismetMathLibrary.prototype.Subtract_FloatFloat = function (A, B = 1) { return fnprepatch_340.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_341 = KismetMathLibrary.prototype.Subtract_ByteByte;KismetMathLibrary.prototype.Subtract_ByteByte = function (A, B = 1) { return fnprepatch_341.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_342 = KismetMathLibrary.prototype.REase;KismetMathLibrary.prototype.REase = function (A, B, Alpha, bShortestPath, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_342.call(this, A, B, Alpha, bShortestPath, EasingFunc, BlendExp, Steps) }; } catch (e) {};
+try { let fnprepatch_343 = KismetMathLibrary.prototype.RandomRotator;KismetMathLibrary.prototype.RandomRotator = function (bRoll = false) { return fnprepatch_343.call(this, bRoll) }; } catch (e) {};
+try { let fnprepatch_344 = KismetMathLibrary.prototype.PointsAreCoplanar;KismetMathLibrary.prototype.PointsAreCoplanar = function (Points, Tolerance = 0.10000000149011612) { return fnprepatch_344.call(this, Points, Tolerance) }; } catch (e) {};
+try { let fnprepatch_345 = KismetMathLibrary.prototype.Percent_IntInt;KismetMathLibrary.prototype.Percent_IntInt = function (A, B = 1) { return fnprepatch_345.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_346 = KismetMathLibrary.prototype.Percent_FloatFloat;KismetMathLibrary.prototype.Percent_FloatFloat = function (A, B = 1) { return fnprepatch_346.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_347 = KismetMathLibrary.prototype.Percent_ByteByte;KismetMathLibrary.prototype.Percent_ByteByte = function (A, B = 1) { return fnprepatch_347.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_348 = KismetMathLibrary.prototype.NotEqual_VectorVector;KismetMathLibrary.prototype.NotEqual_VectorVector = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_348.call(this, A, B, ErrorTolerance) }; } catch (e) {};
+try { let fnprepatch_349 = KismetMathLibrary.prototype.NotEqual_Vector2DVector2D;KismetMathLibrary.prototype.NotEqual_Vector2DVector2D = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_349.call(this, A, B, ErrorTolerance) }; } catch (e) {};
+try { let fnprepatch_350 = KismetMathLibrary.prototype.NotEqual_RotatorRotator;KismetMathLibrary.prototype.NotEqual_RotatorRotator = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_350.call(this, A, B, ErrorTolerance) }; } catch (e) {};
+try { let fnprepatch_351 = KismetMathLibrary.prototype.NearlyEqual_TransformTransform;KismetMathLibrary.prototype.NearlyEqual_TransformTransform = function (A, B, LocationTolerance = 0.00009999999747378752, RotationTolerance = 0.00009999999747378752, Scale3DTolerance = 0.00009999999747378752) { return fnprepatch_351.call(this, A, B, LocationTolerance, RotationTolerance, Scale3DTolerance) }; } catch (e) {};
+try { let fnprepatch_352 = KismetMathLibrary.prototype.NearlyEqual_FloatFloat;KismetMathLibrary.prototype.NearlyEqual_FloatFloat = function (A, B, ErrorTolerance = 9.999999974752427e-7) { return fnprepatch_352.call(this, A, B, ErrorTolerance) }; } catch (e) {};
+try { let fnprepatch_353 = KismetMathLibrary.prototype.MinimumAreaRectangle;KismetMathLibrary.prototype.MinimumAreaRectangle = function (WorldContextObject, InVerts, SampleSurfaceNormal, OutRectCenter, OutRectRotation, OutSideLengthX, OutSideLengthY, bDebugDraw = false) { return fnprepatch_353.call(this, WorldContextObject, InVerts, SampleSurfaceNormal, OutRectCenter, OutRectRotation, OutSideLengthX, OutSideLengthY, bDebugDraw) }; } catch (e) {};
+try { let fnprepatch_354 = KismetMathLibrary.prototype.MakeQualifiedFrameTime;KismetMathLibrary.prototype.MakeQualifiedFrameTime = function (Frame, FrameRate, SubFrame = 0) { return fnprepatch_354.call(this, Frame, FrameRate, SubFrame) }; } catch (e) {};
+try { let fnprepatch_355 = KismetMathLibrary.prototype.MakePulsatingValue;KismetMathLibrary.prototype.MakePulsatingValue = function (InCurrentTime, InPulsesPerSecond = 1, InPhase = 0) { return fnprepatch_355.call(this, InCurrentTime, InPulsesPerSecond, InPhase) }; } catch (e) {};
+try { let fnprepatch_356 = KismetMathLibrary.prototype.MakeFrameRate;KismetMathLibrary.prototype.MakeFrameRate = function (Numerator, Denominator = 1) { return fnprepatch_356.call(this, Numerator, Denominator) }; } catch (e) {};
+try { let fnprepatch_357 = KismetMathLibrary.prototype.MakeDateTime;KismetMathLibrary.prototype.MakeDateTime = function (Year, Month, Day, Hour = 0, Minute = 0, Second = 0, Millisecond = 0) { return fnprepatch_357.call(this, Year, Month, Day, Hour, Minute, Second, Millisecond) }; } catch (e) {};
+try { let fnprepatch_358 = KismetMathLibrary.prototype.MakeColor;KismetMathLibrary.prototype.MakeColor = function (R, G, B, A = 1) { return fnprepatch_358.call(this, R, G, B, A) }; } catch (e) {};
+try { let fnprepatch_359 = KismetMathLibrary.prototype.Log;KismetMathLibrary.prototype.Log = function (A, Base = 1) { return fnprepatch_359.call(this, A, Base) }; } catch (e) {};
+try { let fnprepatch_360 = KismetMathLibrary.prototype.InRange_IntInt;KismetMathLibrary.prototype.InRange_IntInt = function (Value, Min, Max, InclusiveMin = true, InclusiveMax = true) { return fnprepatch_360.call(this, Value, Min, Max, InclusiveMin, InclusiveMax) }; } catch (e) {};
+try { let fnprepatch_361 = KismetMathLibrary.prototype.InRange_FloatFloat;KismetMathLibrary.prototype.InRange_FloatFloat = function (Value, Min, Max, InclusiveMin = true, InclusiveMax = true) { return fnprepatch_361.call(this, Value, Min, Max, InclusiveMin, InclusiveMax) }; } catch (e) {};
+try { let fnprepatch_362 = KismetMathLibrary.prototype.HSVToRGB;KismetMathLibrary.prototype.HSVToRGB = function (H, S, V, A = 1) { return fnprepatch_362.call(this, H, S, V, A) }; } catch (e) {};
+try { let fnprepatch_363 = KismetMathLibrary.prototype.FloatSpringInterp;KismetMathLibrary.prototype.FloatSpringInterp = function (Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass = 1) { return fnprepatch_363.call(this, Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass) }; } catch (e) {};
+try { let fnprepatch_364 = KismetMathLibrary.prototype.EqualEqual_VectorVector;KismetMathLibrary.prototype.EqualEqual_VectorVector = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_364.call(this, A, B, ErrorTolerance) }; } catch (e) {};
+try { let fnprepatch_365 = KismetMathLibrary.prototype.EqualEqual_Vector2DVector2D;KismetMathLibrary.prototype.EqualEqual_Vector2DVector2D = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_365.call(this, A, B, ErrorTolerance) }; } catch (e) {};
+try { let fnprepatch_366 = KismetMathLibrary.prototype.EqualEqual_RotatorRotator;KismetMathLibrary.prototype.EqualEqual_RotatorRotator = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_366.call(this, A, B, ErrorTolerance) }; } catch (e) {};
+try { let fnprepatch_367 = KismetMathLibrary.prototype.Ease;KismetMathLibrary.prototype.Ease = function (A, B, Alpha, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_367.call(this, A, B, Alpha, EasingFunc, BlendExp, Steps) }; } catch (e) {};
+try { let fnprepatch_368 = KismetMathLibrary.prototype.Divide_VectorInt;KismetMathLibrary.prototype.Divide_VectorInt = function (A, B = 1) { return fnprepatch_368.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_369 = KismetMathLibrary.prototype.Divide_VectorFloat;KismetMathLibrary.prototype.Divide_VectorFloat = function (A, B = 1) { return fnprepatch_369.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_370 = KismetMathLibrary.prototype.Divide_Vector2DFloat;KismetMathLibrary.prototype.Divide_Vector2DFloat = function (A, B = 1) { return fnprepatch_370.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_371 = KismetMathLibrary.prototype.Divide_IntInt;KismetMathLibrary.prototype.Divide_IntInt = function (A, B = 1) { return fnprepatch_371.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_372 = KismetMathLibrary.prototype.Divide_FloatFloat;KismetMathLibrary.prototype.Divide_FloatFloat = function (A, B = 1) { return fnprepatch_372.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_373 = KismetMathLibrary.prototype.Divide_ByteByte;KismetMathLibrary.prototype.Divide_ByteByte = function (A, B = 1) { return fnprepatch_373.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_374 = KismetMathLibrary.prototype.CreateVectorFromYawPitch;KismetMathLibrary.prototype.CreateVectorFromYawPitch = function (Yaw, Pitch, Length = 1) { return fnprepatch_374.call(this, Yaw, Pitch, Length) }; } catch (e) {};
+try { let fnprepatch_375 = KismetMathLibrary.prototype.Conv_Vector2DToVector;KismetMathLibrary.prototype.Conv_Vector2DToVector = function (InVector2D, Z = 0) { return fnprepatch_375.call(this, InVector2D, Z) }; } catch (e) {};
+try { let fnprepatch_376 = KismetMathLibrary.prototype.Add_IntInt;KismetMathLibrary.prototype.Add_IntInt = function (A, B = 1) { return fnprepatch_376.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_377 = KismetMathLibrary.prototype.Add_FloatFloat;KismetMathLibrary.prototype.Add_FloatFloat = function (A, B = 1) { return fnprepatch_377.call(this, A, B) }; } catch (e) {};
+try { let fnprepatch_378 = KismetMathLibrary.prototype.Add_ByteByte;KismetMathLibrary.prototype.Add_ByteByte = function (A, B = 1) { return fnprepatch_378.call(this, A, B) }; } catch (e) {};
 try { KismetMathLibrary.prototype.BitwiseXOR = KismetMathLibrary.prototype.Xor_IntInt; } catch (e) {};
 try { KismetMathLibrary.BitwiseXOR = KismetMathLibrary.Xor_IntInt; } catch (e) {};
+try { KismetMathLibrary.prototype.VectorLengthXY = KismetMathLibrary.prototype.VSizeXY; } catch (e) {};
+try { KismetMathLibrary.VectorLengthXY = KismetMathLibrary.VSizeXY; } catch (e) {};
 try { KismetMathLibrary.prototype.VectorLengthSquared = KismetMathLibrary.prototype.VSizeSquared; } catch (e) {};
 try { KismetMathLibrary.VectorLengthSquared = KismetMathLibrary.VSizeSquared; } catch (e) {};
 try { KismetMathLibrary.prototype.Vector2dLengthSquared = KismetMathLibrary.prototype.VSize2DSquared; } catch (e) {};
@@ -703,6 +920,8 @@ try { KismetMathLibrary.prototype.Lerp = KismetMathLibrary.prototype.VLerp; } ca
 try { KismetMathLibrary.Lerp = KismetMathLibrary.VLerp; } catch (e) {};
 try { KismetMathLibrary.prototype.Ease = KismetMathLibrary.prototype.VEase; } catch (e) {};
 try { KismetMathLibrary.Ease = KismetMathLibrary.VEase; } catch (e) {};
+try { KismetMathLibrary.prototype.Determinant = KismetMathLibrary.prototype.Transform_Determinant; } catch (e) {};
+try { KismetMathLibrary.Determinant = KismetMathLibrary.Transform_Determinant; } catch (e) {};
 try { KismetMathLibrary.prototype.Lerp = KismetMathLibrary.prototype.TLerp; } catch (e) {};
 try { KismetMathLibrary.Lerp = KismetMathLibrary.TLerp; } catch (e) {};
 try { KismetMathLibrary.prototype.ZeroValue = KismetMathLibrary.prototype.TimespanZeroValue; } catch (e) {};
@@ -781,6 +1000,8 @@ try { KismetMathLibrary.prototype.Lerp = KismetMathLibrary.prototype.LinearColor
 try { KismetMathLibrary.Lerp = KismetMathLibrary.LinearColorLerp; } catch (e) {};
 try { KismetMathLibrary.prototype.UnrotateVector = KismetMathLibrary.prototype.LessLess_VectorRotator; } catch (e) {};
 try { KismetMathLibrary.UnrotateVector = KismetMathLibrary.LessLess_VectorRotator; } catch (e) {};
+try { KismetMathLibrary.prototype.InRange = KismetMathLibrary.prototype.InRange_IntInt; } catch (e) {};
+try { KismetMathLibrary.InRange = KismetMathLibrary.InRange_IntInt; } catch (e) {};
 try { KismetMathLibrary.prototype.InRange = KismetMathLibrary.prototype.InRange_FloatFloat; } catch (e) {};
 try { KismetMathLibrary.InRange = KismetMathLibrary.InRange_FloatFloat; } catch (e) {};
 try { KismetMathLibrary.prototype.HSVtoRGB = KismetMathLibrary.prototype.HSVToRGB_Vector; } catch (e) {};
@@ -869,6 +1090,12 @@ try { KismetMathLibrary.prototype.ToVector = KismetMathLibrary.prototype.Conv_Ve
 try { KismetMathLibrary.ToVector = KismetMathLibrary.Conv_Vector2DToVector; } catch (e) {};
 try { KismetMathLibrary.prototype.GetRotationXVector = KismetMathLibrary.prototype.Conv_RotatorToVector; } catch (e) {};
 try { KismetMathLibrary.GetRotationXVector = KismetMathLibrary.Conv_RotatorToVector; } catch (e) {};
+try { KismetMathLibrary.prototype.ToTransform = KismetMathLibrary.prototype.Conv_RotatorToTransform; } catch (e) {};
+try { KismetMathLibrary.ToTransform = KismetMathLibrary.Conv_RotatorToTransform; } catch (e) {};
+try { KismetMathLibrary.prototype.ToTransform = KismetMathLibrary.prototype.Conv_MatrixToTransform; } catch (e) {};
+try { KismetMathLibrary.ToTransform = KismetMathLibrary.Conv_MatrixToTransform; } catch (e) {};
+try { KismetMathLibrary.prototype.ToRotator = KismetMathLibrary.prototype.Conv_MatrixToRotator; } catch (e) {};
+try { KismetMathLibrary.ToRotator = KismetMathLibrary.Conv_MatrixToRotator; } catch (e) {};
 try { KismetMathLibrary.prototype.ToVector = KismetMathLibrary.prototype.Conv_LinearColorToVector; } catch (e) {};
 try { KismetMathLibrary.ToVector = KismetMathLibrary.Conv_LinearColorToVector; } catch (e) {};
 try { KismetMathLibrary.prototype.ToColor = KismetMathLibrary.prototype.Conv_LinearColorToColor; } catch (e) {};
@@ -921,20 +1148,23 @@ try { KismetMathLibrary.prototype.Absolute = KismetMathLibrary.prototype.Abs_Int
 try { KismetMathLibrary.Absolute = KismetMathLibrary.Abs_Int; } catch (e) {};
 try { KismetMathLibrary.prototype.Absolute = KismetMathLibrary.prototype.Abs; } catch (e) {};
 try { KismetMathLibrary.Absolute = KismetMathLibrary.Abs; } catch (e) {};
-try { let fnprepatch_298 = KismetRenderingLibrary.prototype.CreateRenderTarget2D;KismetRenderingLibrary.prototype.CreateRenderTarget2D = function (WorldContextObject, Width = 256, Height = 256) { return fnprepatch_298.call(this, WorldContextObject, Width, Height) }; } catch (e) {};
-try { let fnprepatch_299 = KismetRenderingLibrary.prototype.ClearRenderTarget2D;KismetRenderingLibrary.prototype.ClearRenderTarget2D = function (WorldContextObject, TextureRenderTarget, ClearColor = {"R":0,"G":0,"B":0,"A":1}) { return fnprepatch_299.call(this, WorldContextObject, TextureRenderTarget, ClearColor) }; } catch (e) {};
-try { let fnprepatch_300 = KismetStringLibrary.prototype.StartsWith;KismetStringLibrary.prototype.StartsWith = function (SourceString, InPrefix, SearchCase = "IgnoreCase") { return fnprepatch_300.call(this, SourceString, InPrefix, SearchCase) }; } catch (e) {};
-try { let fnprepatch_301 = KismetStringLibrary.prototype.Split;KismetStringLibrary.prototype.Split = function (SourceString, InStr, LeftS, RightS, SearchCase = "IgnoreCase", SearchDir = "FromStart") { return fnprepatch_301.call(this, SourceString, InStr, LeftS, RightS, SearchCase, SearchDir) }; } catch (e) {};
-try { let fnprepatch_302 = KismetStringLibrary.prototype.ReplaceInline;KismetStringLibrary.prototype.ReplaceInline = function (SourceString, SearchText, ReplacementText, SearchCase = "IgnoreCase") { return fnprepatch_302.call(this, SourceString, SearchText, ReplacementText, SearchCase) }; } catch (e) {};
-try { let fnprepatch_303 = KismetStringLibrary.prototype.Replace;KismetStringLibrary.prototype.Replace = function (SourceString, From, To, SearchCase = "IgnoreCase") { return fnprepatch_303.call(this, SourceString, From, To, SearchCase) }; } catch (e) {};
-try { let fnprepatch_304 = KismetStringLibrary.prototype.ParseIntoArray;KismetStringLibrary.prototype.ParseIntoArray = function (SourceString, Delimiter = " ", CullEmptyStrings = true) { return fnprepatch_304.call(this, SourceString, Delimiter, CullEmptyStrings) }; } catch (e) {};
-try { let fnprepatch_305 = KismetStringLibrary.prototype.MatchesWildcard;KismetStringLibrary.prototype.MatchesWildcard = function (SourceString, Wildcard, SearchCase = "IgnoreCase") { return fnprepatch_305.call(this, SourceString, Wildcard, SearchCase) }; } catch (e) {};
-try { let fnprepatch_306 = KismetStringLibrary.prototype.JoinStringArray;KismetStringLibrary.prototype.JoinStringArray = function (SourceArray, Separator = " ") { return fnprepatch_306.call(this, SourceArray, Separator) }; } catch (e) {};
-try { let fnprepatch_307 = KismetStringLibrary.prototype.GetSubstring;KismetStringLibrary.prototype.GetSubstring = function (SourceString, StartIndex = 0, Length = 1) { return fnprepatch_307.call(this, SourceString, StartIndex, Length) }; } catch (e) {};
-try { let fnprepatch_308 = KismetStringLibrary.prototype.GetCharacterAsNumber;KismetStringLibrary.prototype.GetCharacterAsNumber = function (SourceString, Index = 0) { return fnprepatch_308.call(this, SourceString, Index) }; } catch (e) {};
-try { let fnprepatch_309 = KismetStringLibrary.prototype.FindSubstring;KismetStringLibrary.prototype.FindSubstring = function (SearchIn, Substring, bUseCase = false, bSearchFromEnd = false, StartPosition = -1) { return fnprepatch_309.call(this, SearchIn, Substring, bUseCase, bSearchFromEnd, StartPosition) }; } catch (e) {};
-try { let fnprepatch_310 = KismetStringLibrary.prototype.EndsWith;KismetStringLibrary.prototype.EndsWith = function (SourceString, InSuffix, SearchCase = "IgnoreCase") { return fnprepatch_310.call(this, SourceString, InSuffix, SearchCase) }; } catch (e) {};
-try { let fnprepatch_311 = KismetStringLibrary.prototype.Contains;KismetStringLibrary.prototype.Contains = function (SearchIn, Substring, bUseCase = false, bSearchFromEnd = false) { return fnprepatch_311.call(this, SearchIn, Substring, bUseCase, bSearchFromEnd) }; } catch (e) {};
+try { let fnprepatch_379 = KismetRenderingLibrary.prototype.RenderTargetCreateStaticTexture2DEditorOnly;KismetRenderingLibrary.prototype.RenderTargetCreateStaticTexture2DEditorOnly = function (RenderTarget, Name = "Texture", CompressionSettings = "TC_Default", MipSettings = "TMGS_FromTextureGroup") { return fnprepatch_379.call(this, RenderTarget, Name, CompressionSettings, MipSettings) }; } catch (e) {};
+try { let fnprepatch_380 = KismetRenderingLibrary.prototype.CreateRenderTarget2D;KismetRenderingLibrary.prototype.CreateRenderTarget2D = function (WorldContextObject, Width = 256, Height = 256, Format = "RTF_RGBA16f") { return fnprepatch_380.call(this, WorldContextObject, Width, Height, Format) }; } catch (e) {};
+try { let fnprepatch_381 = KismetRenderingLibrary.prototype.ClearRenderTarget2D;KismetRenderingLibrary.prototype.ClearRenderTarget2D = function (WorldContextObject, TextureRenderTarget, ClearColor = {"R":0,"G":0,"B":0,"A":1}) { return fnprepatch_381.call(this, WorldContextObject, TextureRenderTarget, ClearColor) }; } catch (e) {};
+try { KismetRenderingLibrary.prototype.RenderTargetCreateStaticTextureEditorOnly = KismetRenderingLibrary.prototype.RenderTargetCreateStaticTexture2DEditorOnly; } catch (e) {};
+try { KismetRenderingLibrary.RenderTargetCreateStaticTextureEditorOnly = KismetRenderingLibrary.RenderTargetCreateStaticTexture2DEditorOnly; } catch (e) {};
+try { let fnprepatch_382 = KismetStringLibrary.prototype.StartsWith;KismetStringLibrary.prototype.StartsWith = function (SourceString, InPrefix, SearchCase = "IgnoreCase") { return fnprepatch_382.call(this, SourceString, InPrefix, SearchCase) }; } catch (e) {};
+try { let fnprepatch_383 = KismetStringLibrary.prototype.Split;KismetStringLibrary.prototype.Split = function (SourceString, InStr, LeftS, RightS, SearchCase = "IgnoreCase", SearchDir = "FromStart") { return fnprepatch_383.call(this, SourceString, InStr, LeftS, RightS, SearchCase, SearchDir) }; } catch (e) {};
+try { let fnprepatch_384 = KismetStringLibrary.prototype.ReplaceInline;KismetStringLibrary.prototype.ReplaceInline = function (SourceString, SearchText, ReplacementText, SearchCase = "IgnoreCase") { return fnprepatch_384.call(this, SourceString, SearchText, ReplacementText, SearchCase) }; } catch (e) {};
+try { let fnprepatch_385 = KismetStringLibrary.prototype.Replace;KismetStringLibrary.prototype.Replace = function (SourceString, From, To, SearchCase = "IgnoreCase") { return fnprepatch_385.call(this, SourceString, From, To, SearchCase) }; } catch (e) {};
+try { let fnprepatch_386 = KismetStringLibrary.prototype.ParseIntoArray;KismetStringLibrary.prototype.ParseIntoArray = function (SourceString, Delimiter = " ", CullEmptyStrings = true) { return fnprepatch_386.call(this, SourceString, Delimiter, CullEmptyStrings) }; } catch (e) {};
+try { let fnprepatch_387 = KismetStringLibrary.prototype.MatchesWildcard;KismetStringLibrary.prototype.MatchesWildcard = function (SourceString, Wildcard, SearchCase = "IgnoreCase") { return fnprepatch_387.call(this, SourceString, Wildcard, SearchCase) }; } catch (e) {};
+try { let fnprepatch_388 = KismetStringLibrary.prototype.JoinStringArray;KismetStringLibrary.prototype.JoinStringArray = function (SourceArray, Separator = " ") { return fnprepatch_388.call(this, SourceArray, Separator) }; } catch (e) {};
+try { let fnprepatch_389 = KismetStringLibrary.prototype.GetSubstring;KismetStringLibrary.prototype.GetSubstring = function (SourceString, StartIndex = 0, Length = 1) { return fnprepatch_389.call(this, SourceString, StartIndex, Length) }; } catch (e) {};
+try { let fnprepatch_390 = KismetStringLibrary.prototype.GetCharacterAsNumber;KismetStringLibrary.prototype.GetCharacterAsNumber = function (SourceString, Index = 0) { return fnprepatch_390.call(this, SourceString, Index) }; } catch (e) {};
+try { let fnprepatch_391 = KismetStringLibrary.prototype.FindSubstring;KismetStringLibrary.prototype.FindSubstring = function (SearchIn, Substring, bUseCase = false, bSearchFromEnd = false, StartPosition = -1) { return fnprepatch_391.call(this, SearchIn, Substring, bUseCase, bSearchFromEnd, StartPosition) }; } catch (e) {};
+try { let fnprepatch_392 = KismetStringLibrary.prototype.EndsWith;KismetStringLibrary.prototype.EndsWith = function (SourceString, InSuffix, SearchCase = "IgnoreCase") { return fnprepatch_392.call(this, SourceString, InSuffix, SearchCase) }; } catch (e) {};
+try { let fnprepatch_393 = KismetStringLibrary.prototype.Contains;KismetStringLibrary.prototype.Contains = function (SearchIn, Substring, bUseCase = false, bSearchFromEnd = false) { return fnprepatch_393.call(this, SearchIn, Substring, bUseCase, bSearchFromEnd) }; } catch (e) {};
 try { KismetStringLibrary.prototype.NotEqual = KismetStringLibrary.prototype.NotEqual_StrStr; } catch (e) {};
 try { KismetStringLibrary.NotEqual = KismetStringLibrary.NotEqual_StrStr; } catch (e) {};
 try { KismetStringLibrary.prototype.Equal = KismetStringLibrary.prototype.EqualEqual_StrStr; } catch (e) {};
@@ -1007,49 +1237,50 @@ try { KismetStringTableLibrary.prototype.GetStringTableNamespace = KismetStringT
 try { KismetStringTableLibrary.GetStringTableNamespace = KismetStringTableLibrary.GetTableNamespace; } catch (e) {};
 try { KismetStringTableLibrary.prototype.GetStringTableEntrySourceString = KismetStringTableLibrary.prototype.GetTableEntrySourceString; } catch (e) {};
 try { KismetStringTableLibrary.GetStringTableEntrySourceString = KismetStringTableLibrary.GetTableEntrySourceString; } catch (e) {};
-try { let fnprepatch_312 = KismetSystemLibrary.prototype.SphereTraceSingleForObjects;KismetSystemLibrary.prototype.SphereTraceSingleForObjects = function (WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_312.call(this, WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_313 = KismetSystemLibrary.prototype.SphereTraceSingleByProfile;KismetSystemLibrary.prototype.SphereTraceSingleByProfile = function (WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_313.call(this, WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_314 = KismetSystemLibrary.prototype.SphereTraceSingle;KismetSystemLibrary.prototype.SphereTraceSingle = function (WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_314.call(this, WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_315 = KismetSystemLibrary.prototype.SphereTraceMultiForObjects;KismetSystemLibrary.prototype.SphereTraceMultiForObjects = function (WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_315.call(this, WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_316 = KismetSystemLibrary.prototype.SphereTraceMultiByProfile;KismetSystemLibrary.prototype.SphereTraceMultiByProfile = function (WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_316.call(this, WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_317 = KismetSystemLibrary.prototype.SphereTraceMulti;KismetSystemLibrary.prototype.SphereTraceMulti = function (WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_317.call(this, WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_318 = KismetSystemLibrary.prototype.PrintText;KismetSystemLibrary.prototype.PrintText = function (WorldContextObject, InText = "Hello", bPrintToScreen = true, bPrintToLog = true, TextColor = {"R":0,"G":0.6600000262260437,"B":1,"A":1}, Duration = 2) { return fnprepatch_318.call(this, WorldContextObject, InText, bPrintToScreen, bPrintToLog, TextColor, Duration) }; } catch (e) {};
-try { let fnprepatch_319 = KismetSystemLibrary.prototype.PrintString;KismetSystemLibrary.prototype.PrintString = function (WorldContextObject, InString = "Hello", bPrintToScreen = true, bPrintToLog = true, TextColor = {"R":0,"G":0.6600000262260437,"B":1,"A":1}, Duration = 2) { return fnprepatch_319.call(this, WorldContextObject, InString, bPrintToScreen, bPrintToLog, TextColor, Duration) }; } catch (e) {};
-try { let fnprepatch_320 = KismetSystemLibrary.prototype.LineTraceSingleForObjects;KismetSystemLibrary.prototype.LineTraceSingleForObjects = function (WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_320.call(this, WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_321 = KismetSystemLibrary.prototype.LineTraceSingleByProfile;KismetSystemLibrary.prototype.LineTraceSingleByProfile = function (WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_321.call(this, WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_322 = KismetSystemLibrary.prototype.LineTraceSingle;KismetSystemLibrary.prototype.LineTraceSingle = function (WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_322.call(this, WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_323 = KismetSystemLibrary.prototype.LineTraceMultiForObjects;KismetSystemLibrary.prototype.LineTraceMultiForObjects = function (WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_323.call(this, WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_324 = KismetSystemLibrary.prototype.LineTraceMultiByProfile;KismetSystemLibrary.prototype.LineTraceMultiByProfile = function (WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_324.call(this, WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_325 = KismetSystemLibrary.prototype.LineTraceMulti;KismetSystemLibrary.prototype.LineTraceMulti = function (WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_325.call(this, WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_326 = KismetSystemLibrary.prototype.DrawDebugString;KismetSystemLibrary.prototype.DrawDebugString = function (WorldContextObject, TextLocation, Text, TestBaseActor, TextColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_326.call(this, WorldContextObject, TextLocation, Text, TestBaseActor, TextColor, Duration) }; } catch (e) {};
-try { let fnprepatch_327 = KismetSystemLibrary.prototype.DrawDebugSphere;KismetSystemLibrary.prototype.DrawDebugSphere = function (WorldContextObject, Center, Radius = 100, Segments = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_327.call(this, WorldContextObject, Center, Radius, Segments, LineColor, Duration, Thickness) }; } catch (e) {};
-try { let fnprepatch_328 = KismetSystemLibrary.prototype.DrawDebugPoint;KismetSystemLibrary.prototype.DrawDebugPoint = function (WorldContextObject, Position, Size, PointColor, Duration = 0) { return fnprepatch_328.call(this, WorldContextObject, Position, Size, PointColor, Duration) }; } catch (e) {};
-try { let fnprepatch_329 = KismetSystemLibrary.prototype.DrawDebugPlane;KismetSystemLibrary.prototype.DrawDebugPlane = function (WorldContextObject, PlaneCoordinates, Location, Size, PlaneColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_329.call(this, WorldContextObject, PlaneCoordinates, Location, Size, PlaneColor, Duration) }; } catch (e) {};
-try { let fnprepatch_330 = KismetSystemLibrary.prototype.DrawDebugLine;KismetSystemLibrary.prototype.DrawDebugLine = function (WorldContextObject, LineStart, LineEnd, LineColor, Duration = 0, Thickness = 0) { return fnprepatch_330.call(this, WorldContextObject, LineStart, LineEnd, LineColor, Duration, Thickness) }; } catch (e) {};
-try { let fnprepatch_331 = KismetSystemLibrary.prototype.DrawDebugFrustum;KismetSystemLibrary.prototype.DrawDebugFrustum = function (WorldContextObject, FrustumTransform, FrustumColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_331.call(this, WorldContextObject, FrustumTransform, FrustumColor, Duration, Thickness) }; } catch (e) {};
-try { let fnprepatch_332 = KismetSystemLibrary.prototype.DrawDebugFloatHistoryTransform;KismetSystemLibrary.prototype.DrawDebugFloatHistoryTransform = function (WorldContextObject, FloatHistory, DrawTransform, DrawSize, DrawColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_332.call(this, WorldContextObject, FloatHistory, DrawTransform, DrawSize, DrawColor, Duration) }; } catch (e) {};
-try { let fnprepatch_333 = KismetSystemLibrary.prototype.DrawDebugFloatHistoryLocation;KismetSystemLibrary.prototype.DrawDebugFloatHistoryLocation = function (WorldContextObject, FloatHistory, DrawLocation, DrawSize, DrawColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_333.call(this, WorldContextObject, FloatHistory, DrawLocation, DrawSize, DrawColor, Duration) }; } catch (e) {};
-try { let fnprepatch_334 = KismetSystemLibrary.prototype.DrawDebugCylinder;KismetSystemLibrary.prototype.DrawDebugCylinder = function (WorldContextObject, Start, End, Radius = 100, Segments = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_334.call(this, WorldContextObject, Start, End, Radius, Segments, LineColor, Duration, Thickness) }; } catch (e) {};
-try { let fnprepatch_335 = KismetSystemLibrary.prototype.DrawDebugCoordinateSystem;KismetSystemLibrary.prototype.DrawDebugCoordinateSystem = function (WorldContextObject, AxisLoc, AxisRot, Scale = 1, Duration = 0, Thickness = 0) { return fnprepatch_335.call(this, WorldContextObject, AxisLoc, AxisRot, Scale, Duration, Thickness) }; } catch (e) {};
-try { let fnprepatch_336 = KismetSystemLibrary.prototype.DrawDebugConeInDegrees;KismetSystemLibrary.prototype.DrawDebugConeInDegrees = function (WorldContextObject, Origin, Direction, Length = 100, AngleWidth = 45, AngleHeight = 45, NumSides = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_336.call(this, WorldContextObject, Origin, Direction, Length, AngleWidth, AngleHeight, NumSides, LineColor, Duration, Thickness) }; } catch (e) {};
-try { let fnprepatch_337 = KismetSystemLibrary.prototype.DrawDebugCone;KismetSystemLibrary.prototype.DrawDebugCone = function (WorldContextObject, Origin, Direction, Length, AngleWidth, AngleHeight, NumSides, LineColor, Duration = 0, Thickness = 0) { return fnprepatch_337.call(this, WorldContextObject, Origin, Direction, Length, AngleWidth, AngleHeight, NumSides, LineColor, Duration, Thickness) }; } catch (e) {};
-try { let fnprepatch_338 = KismetSystemLibrary.prototype.DrawDebugCircle;KismetSystemLibrary.prototype.DrawDebugCircle = function (WorldContextObject, Center, Radius, NumSegments = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0, YAxis, ZAxis, bDrawAxis = false) { return fnprepatch_338.call(this, WorldContextObject, Center, Radius, NumSegments, LineColor, Duration, Thickness, YAxis, ZAxis, bDrawAxis) }; } catch (e) {};
-try { let fnprepatch_339 = KismetSystemLibrary.prototype.DrawDebugCapsule;KismetSystemLibrary.prototype.DrawDebugCapsule = function (WorldContextObject, Center, HalfHeight, Radius, Rotation, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_339.call(this, WorldContextObject, Center, HalfHeight, Radius, Rotation, LineColor, Duration, Thickness) }; } catch (e) {};
-try { let fnprepatch_340 = KismetSystemLibrary.prototype.DrawDebugCamera;KismetSystemLibrary.prototype.DrawDebugCamera = function (CameraActor, CameraColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_340.call(this, CameraActor, CameraColor, Duration) }; } catch (e) {};
-try { let fnprepatch_341 = KismetSystemLibrary.prototype.DrawDebugBox;KismetSystemLibrary.prototype.DrawDebugBox = function (WorldContextObject, Center, Extent, LineColor, Rotation, Duration = 0, Thickness = 0) { return fnprepatch_341.call(this, WorldContextObject, Center, Extent, LineColor, Rotation, Duration, Thickness) }; } catch (e) {};
-try { let fnprepatch_342 = KismetSystemLibrary.prototype.DrawDebugArrow;KismetSystemLibrary.prototype.DrawDebugArrow = function (WorldContextObject, LineStart, LineEnd, ArrowSize, LineColor, Duration = 0, Thickness = 0) { return fnprepatch_342.call(this, WorldContextObject, LineStart, LineEnd, ArrowSize, LineColor, Duration, Thickness) }; } catch (e) {};
-try { let fnprepatch_343 = KismetSystemLibrary.prototype.CapsuleTraceSingleForObjects;KismetSystemLibrary.prototype.CapsuleTraceSingleForObjects = function (WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_343.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_344 = KismetSystemLibrary.prototype.CapsuleTraceSingleByProfile;KismetSystemLibrary.prototype.CapsuleTraceSingleByProfile = function (WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_344.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_345 = KismetSystemLibrary.prototype.CapsuleTraceSingle;KismetSystemLibrary.prototype.CapsuleTraceSingle = function (WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_345.call(this, WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_346 = KismetSystemLibrary.prototype.CapsuleTraceMultiForObjects;KismetSystemLibrary.prototype.CapsuleTraceMultiForObjects = function (WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_346.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_347 = KismetSystemLibrary.prototype.CapsuleTraceMultiByProfile;KismetSystemLibrary.prototype.CapsuleTraceMultiByProfile = function (WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_347.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_348 = KismetSystemLibrary.prototype.CapsuleTraceMulti;KismetSystemLibrary.prototype.CapsuleTraceMulti = function (WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_348.call(this, WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_349 = KismetSystemLibrary.prototype.BoxTraceSingleForObjects;KismetSystemLibrary.prototype.BoxTraceSingleForObjects = function (WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_349.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_350 = KismetSystemLibrary.prototype.BoxTraceSingleByProfile;KismetSystemLibrary.prototype.BoxTraceSingleByProfile = function (WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_350.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_351 = KismetSystemLibrary.prototype.BoxTraceSingle;KismetSystemLibrary.prototype.BoxTraceSingle = function (WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_351.call(this, WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_352 = KismetSystemLibrary.prototype.BoxTraceMultiForObjects;KismetSystemLibrary.prototype.BoxTraceMultiForObjects = function (WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_352.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_353 = KismetSystemLibrary.prototype.BoxTraceMultiByProfile;KismetSystemLibrary.prototype.BoxTraceMultiByProfile = function (WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_353.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_354 = KismetSystemLibrary.prototype.BoxTraceMulti;KismetSystemLibrary.prototype.BoxTraceMulti = function (WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_354.call(this, WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_394 = KismetSystemLibrary.prototype.SphereTraceSingleForObjects;KismetSystemLibrary.prototype.SphereTraceSingleForObjects = function (WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_394.call(this, WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_395 = KismetSystemLibrary.prototype.SphereTraceSingleByProfile;KismetSystemLibrary.prototype.SphereTraceSingleByProfile = function (WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_395.call(this, WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_396 = KismetSystemLibrary.prototype.SphereTraceSingle;KismetSystemLibrary.prototype.SphereTraceSingle = function (WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_396.call(this, WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_397 = KismetSystemLibrary.prototype.SphereTraceMultiForObjects;KismetSystemLibrary.prototype.SphereTraceMultiForObjects = function (WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_397.call(this, WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_398 = KismetSystemLibrary.prototype.SphereTraceMultiByProfile;KismetSystemLibrary.prototype.SphereTraceMultiByProfile = function (WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_398.call(this, WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_399 = KismetSystemLibrary.prototype.SphereTraceMulti;KismetSystemLibrary.prototype.SphereTraceMulti = function (WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_399.call(this, WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_400 = KismetSystemLibrary.prototype.PrintText;KismetSystemLibrary.prototype.PrintText = function (WorldContextObject, InText = "Hello", bPrintToScreen = true, bPrintToLog = true, TextColor = {"R":0,"G":0.6600000262260437,"B":1,"A":1}, Duration = 2) { return fnprepatch_400.call(this, WorldContextObject, InText, bPrintToScreen, bPrintToLog, TextColor, Duration) }; } catch (e) {};
+try { let fnprepatch_401 = KismetSystemLibrary.prototype.PrintString;KismetSystemLibrary.prototype.PrintString = function (WorldContextObject, InString = "Hello", bPrintToScreen = true, bPrintToLog = true, TextColor = {"R":0,"G":0.6600000262260437,"B":1,"A":1}, Duration = 2) { return fnprepatch_401.call(this, WorldContextObject, InString, bPrintToScreen, bPrintToLog, TextColor, Duration) }; } catch (e) {};
+try { let fnprepatch_402 = KismetSystemLibrary.prototype.LineTraceSingleForObjects;KismetSystemLibrary.prototype.LineTraceSingleForObjects = function (WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_402.call(this, WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_403 = KismetSystemLibrary.prototype.LineTraceSingleByProfile;KismetSystemLibrary.prototype.LineTraceSingleByProfile = function (WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_403.call(this, WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_404 = KismetSystemLibrary.prototype.LineTraceSingle;KismetSystemLibrary.prototype.LineTraceSingle = function (WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_404.call(this, WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_405 = KismetSystemLibrary.prototype.LineTraceMultiForObjects;KismetSystemLibrary.prototype.LineTraceMultiForObjects = function (WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_405.call(this, WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_406 = KismetSystemLibrary.prototype.LineTraceMultiByProfile;KismetSystemLibrary.prototype.LineTraceMultiByProfile = function (WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_406.call(this, WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_407 = KismetSystemLibrary.prototype.LineTraceMulti;KismetSystemLibrary.prototype.LineTraceMulti = function (WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_407.call(this, WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_408 = KismetSystemLibrary.prototype.ExecuteConsoleCommand;KismetSystemLibrary.prototype.ExecuteConsoleCommand = function (WorldContextObject, Command, SpecificPlayer = undefined) { return fnprepatch_408.call(this, WorldContextObject, Command, SpecificPlayer) }; } catch (e) {};
+try { let fnprepatch_409 = KismetSystemLibrary.prototype.DrawDebugString;KismetSystemLibrary.prototype.DrawDebugString = function (WorldContextObject, TextLocation, Text, TestBaseActor = undefined, TextColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_409.call(this, WorldContextObject, TextLocation, Text, TestBaseActor, TextColor, Duration) }; } catch (e) {};
+try { let fnprepatch_410 = KismetSystemLibrary.prototype.DrawDebugSphere;KismetSystemLibrary.prototype.DrawDebugSphere = function (WorldContextObject, Center, Radius = 100, Segments = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_410.call(this, WorldContextObject, Center, Radius, Segments, LineColor, Duration, Thickness) }; } catch (e) {};
+try { let fnprepatch_411 = KismetSystemLibrary.prototype.DrawDebugPoint;KismetSystemLibrary.prototype.DrawDebugPoint = function (WorldContextObject, Position, Size, PointColor, Duration = 0) { return fnprepatch_411.call(this, WorldContextObject, Position, Size, PointColor, Duration) }; } catch (e) {};
+try { let fnprepatch_412 = KismetSystemLibrary.prototype.DrawDebugPlane;KismetSystemLibrary.prototype.DrawDebugPlane = function (WorldContextObject, PlaneCoordinates, Location, Size, PlaneColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_412.call(this, WorldContextObject, PlaneCoordinates, Location, Size, PlaneColor, Duration) }; } catch (e) {};
+try { let fnprepatch_413 = KismetSystemLibrary.prototype.DrawDebugLine;KismetSystemLibrary.prototype.DrawDebugLine = function (WorldContextObject, LineStart, LineEnd, LineColor, Duration = 0, Thickness = 0) { return fnprepatch_413.call(this, WorldContextObject, LineStart, LineEnd, LineColor, Duration, Thickness) }; } catch (e) {};
+try { let fnprepatch_414 = KismetSystemLibrary.prototype.DrawDebugFrustum;KismetSystemLibrary.prototype.DrawDebugFrustum = function (WorldContextObject, FrustumTransform, FrustumColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_414.call(this, WorldContextObject, FrustumTransform, FrustumColor, Duration, Thickness) }; } catch (e) {};
+try { let fnprepatch_415 = KismetSystemLibrary.prototype.DrawDebugFloatHistoryTransform;KismetSystemLibrary.prototype.DrawDebugFloatHistoryTransform = function (WorldContextObject, FloatHistory, DrawTransform, DrawSize, DrawColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_415.call(this, WorldContextObject, FloatHistory, DrawTransform, DrawSize, DrawColor, Duration) }; } catch (e) {};
+try { let fnprepatch_416 = KismetSystemLibrary.prototype.DrawDebugFloatHistoryLocation;KismetSystemLibrary.prototype.DrawDebugFloatHistoryLocation = function (WorldContextObject, FloatHistory, DrawLocation, DrawSize, DrawColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_416.call(this, WorldContextObject, FloatHistory, DrawLocation, DrawSize, DrawColor, Duration) }; } catch (e) {};
+try { let fnprepatch_417 = KismetSystemLibrary.prototype.DrawDebugCylinder;KismetSystemLibrary.prototype.DrawDebugCylinder = function (WorldContextObject, Start, End, Radius = 100, Segments = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_417.call(this, WorldContextObject, Start, End, Radius, Segments, LineColor, Duration, Thickness) }; } catch (e) {};
+try { let fnprepatch_418 = KismetSystemLibrary.prototype.DrawDebugCoordinateSystem;KismetSystemLibrary.prototype.DrawDebugCoordinateSystem = function (WorldContextObject, AxisLoc, AxisRot, Scale = 1, Duration = 0, Thickness = 0) { return fnprepatch_418.call(this, WorldContextObject, AxisLoc, AxisRot, Scale, Duration, Thickness) }; } catch (e) {};
+try { let fnprepatch_419 = KismetSystemLibrary.prototype.DrawDebugConeInDegrees;KismetSystemLibrary.prototype.DrawDebugConeInDegrees = function (WorldContextObject, Origin, Direction, Length = 100, AngleWidth = 45, AngleHeight = 45, NumSides = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_419.call(this, WorldContextObject, Origin, Direction, Length, AngleWidth, AngleHeight, NumSides, LineColor, Duration, Thickness) }; } catch (e) {};
+try { let fnprepatch_420 = KismetSystemLibrary.prototype.DrawDebugCone;KismetSystemLibrary.prototype.DrawDebugCone = function (WorldContextObject, Origin, Direction, Length, AngleWidth, AngleHeight, NumSides, LineColor, Duration = 0, Thickness = 0) { return fnprepatch_420.call(this, WorldContextObject, Origin, Direction, Length, AngleWidth, AngleHeight, NumSides, LineColor, Duration, Thickness) }; } catch (e) {};
+try { let fnprepatch_421 = KismetSystemLibrary.prototype.DrawDebugCircle;KismetSystemLibrary.prototype.DrawDebugCircle = function (WorldContextObject, Center, Radius, NumSegments = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0, YAxis, ZAxis, bDrawAxis = false) { return fnprepatch_421.call(this, WorldContextObject, Center, Radius, NumSegments, LineColor, Duration, Thickness, YAxis, ZAxis, bDrawAxis) }; } catch (e) {};
+try { let fnprepatch_422 = KismetSystemLibrary.prototype.DrawDebugCapsule;KismetSystemLibrary.prototype.DrawDebugCapsule = function (WorldContextObject, Center, HalfHeight, Radius, Rotation, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_422.call(this, WorldContextObject, Center, HalfHeight, Radius, Rotation, LineColor, Duration, Thickness) }; } catch (e) {};
+try { let fnprepatch_423 = KismetSystemLibrary.prototype.DrawDebugCamera;KismetSystemLibrary.prototype.DrawDebugCamera = function (CameraActor, CameraColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_423.call(this, CameraActor, CameraColor, Duration) }; } catch (e) {};
+try { let fnprepatch_424 = KismetSystemLibrary.prototype.DrawDebugBox;KismetSystemLibrary.prototype.DrawDebugBox = function (WorldContextObject, Center, Extent, LineColor, Rotation, Duration = 0, Thickness = 0) { return fnprepatch_424.call(this, WorldContextObject, Center, Extent, LineColor, Rotation, Duration, Thickness) }; } catch (e) {};
+try { let fnprepatch_425 = KismetSystemLibrary.prototype.DrawDebugArrow;KismetSystemLibrary.prototype.DrawDebugArrow = function (WorldContextObject, LineStart, LineEnd, ArrowSize, LineColor, Duration = 0, Thickness = 0) { return fnprepatch_425.call(this, WorldContextObject, LineStart, LineEnd, ArrowSize, LineColor, Duration, Thickness) }; } catch (e) {};
+try { let fnprepatch_426 = KismetSystemLibrary.prototype.CapsuleTraceSingleForObjects;KismetSystemLibrary.prototype.CapsuleTraceSingleForObjects = function (WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_426.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_427 = KismetSystemLibrary.prototype.CapsuleTraceSingleByProfile;KismetSystemLibrary.prototype.CapsuleTraceSingleByProfile = function (WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_427.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_428 = KismetSystemLibrary.prototype.CapsuleTraceSingle;KismetSystemLibrary.prototype.CapsuleTraceSingle = function (WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_428.call(this, WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_429 = KismetSystemLibrary.prototype.CapsuleTraceMultiForObjects;KismetSystemLibrary.prototype.CapsuleTraceMultiForObjects = function (WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_429.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_430 = KismetSystemLibrary.prototype.CapsuleTraceMultiByProfile;KismetSystemLibrary.prototype.CapsuleTraceMultiByProfile = function (WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_430.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_431 = KismetSystemLibrary.prototype.CapsuleTraceMulti;KismetSystemLibrary.prototype.CapsuleTraceMulti = function (WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_431.call(this, WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_432 = KismetSystemLibrary.prototype.BoxTraceSingleForObjects;KismetSystemLibrary.prototype.BoxTraceSingleForObjects = function (WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_432.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_433 = KismetSystemLibrary.prototype.BoxTraceSingleByProfile;KismetSystemLibrary.prototype.BoxTraceSingleByProfile = function (WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_433.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_434 = KismetSystemLibrary.prototype.BoxTraceSingle;KismetSystemLibrary.prototype.BoxTraceSingle = function (WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_434.call(this, WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_435 = KismetSystemLibrary.prototype.BoxTraceMultiForObjects;KismetSystemLibrary.prototype.BoxTraceMultiForObjects = function (WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_435.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_436 = KismetSystemLibrary.prototype.BoxTraceMultiByProfile;KismetSystemLibrary.prototype.BoxTraceMultiByProfile = function (WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_436.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_437 = KismetSystemLibrary.prototype.BoxTraceMulti;KismetSystemLibrary.prototype.BoxTraceMulti = function (WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_437.call(this, WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
 try { KismetSystemLibrary.prototype.SphereTraceForObjects = KismetSystemLibrary.prototype.SphereTraceSingleForObjects; } catch (e) {};
 try { KismetSystemLibrary.SphereTraceForObjects = KismetSystemLibrary.SphereTraceSingleForObjects; } catch (e) {};
 try { KismetSystemLibrary.prototype.SphereTraceByProfile = KismetSystemLibrary.prototype.SphereTraceSingleByProfile; } catch (e) {};
@@ -1134,6 +1365,14 @@ try { KismetSystemLibrary.prototype.Equal = KismetSystemLibrary.prototype.EqualE
 try { KismetSystemLibrary.Equal = KismetSystemLibrary.EqualEqual_PrimaryAssetId; } catch (e) {};
 try { KismetSystemLibrary.prototype.DrawDebugCone = KismetSystemLibrary.prototype.DrawDebugConeInDegrees; } catch (e) {};
 try { KismetSystemLibrary.DrawDebugCone = KismetSystemLibrary.DrawDebugConeInDegrees; } catch (e) {};
+try { KismetSystemLibrary.prototype.ToString = KismetSystemLibrary.prototype.Conv_SoftObjectReferenceToString; } catch (e) {};
+try { KismetSystemLibrary.ToString = KismetSystemLibrary.Conv_SoftObjectReferenceToString; } catch (e) {};
+try { KismetSystemLibrary.prototype.ToString = KismetSystemLibrary.prototype.Conv_SoftClassReferenceToString; } catch (e) {};
+try { KismetSystemLibrary.ToString = KismetSystemLibrary.Conv_SoftClassReferenceToString; } catch (e) {};
+try { KismetSystemLibrary.prototype.ToString = KismetSystemLibrary.prototype.Conv_PrimaryAssetTypeToString; } catch (e) {};
+try { KismetSystemLibrary.ToString = KismetSystemLibrary.Conv_PrimaryAssetTypeToString; } catch (e) {};
+try { KismetSystemLibrary.prototype.ToString = KismetSystemLibrary.prototype.Conv_PrimaryAssetIdToString; } catch (e) {};
+try { KismetSystemLibrary.ToString = KismetSystemLibrary.Conv_PrimaryAssetIdToString; } catch (e) {};
 try { KismetSystemLibrary.prototype.CapsuleTraceForObjects = KismetSystemLibrary.prototype.CapsuleTraceSingleForObjects; } catch (e) {};
 try { KismetSystemLibrary.CapsuleTraceForObjects = KismetSystemLibrary.CapsuleTraceSingleForObjects; } catch (e) {};
 try { KismetSystemLibrary.prototype.CapsuleTraceByProfile = KismetSystemLibrary.prototype.CapsuleTraceSingleByProfile; } catch (e) {};
@@ -1158,11 +1397,11 @@ try { KismetSystemLibrary.prototype.MultiBoxTraceByProfile = KismetSystemLibrary
 try { KismetSystemLibrary.MultiBoxTraceByProfile = KismetSystemLibrary.BoxTraceMultiByProfile; } catch (e) {};
 try { KismetSystemLibrary.prototype.MultiBoxTraceByChannel = KismetSystemLibrary.prototype.BoxTraceMulti; } catch (e) {};
 try { KismetSystemLibrary.MultiBoxTraceByChannel = KismetSystemLibrary.BoxTraceMulti; } catch (e) {};
-try { let fnprepatch_355 = KismetTextLibrary.prototype.Conv_IntToText;KismetTextLibrary.prototype.Conv_IntToText = function (Value, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324) { return fnprepatch_355.call(this, Value, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits) }; } catch (e) {};
-try { let fnprepatch_356 = KismetTextLibrary.prototype.Conv_FloatToText;KismetTextLibrary.prototype.Conv_FloatToText = function (Value, RoundingMode, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3) { return fnprepatch_356.call(this, Value, RoundingMode, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits) }; } catch (e) {};
-try { let fnprepatch_357 = KismetTextLibrary.prototype.AsPercent_Float;KismetTextLibrary.prototype.AsPercent_Float = function (Value, RoundingMode, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3) { return fnprepatch_357.call(this, Value, RoundingMode, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits) }; } catch (e) {};
-try { let fnprepatch_358 = KismetTextLibrary.prototype.AsCurrency_Integer;KismetTextLibrary.prototype.AsCurrency_Integer = function (Value, RoundingMode, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3, CurrencyCode) { return fnprepatch_358.call(this, Value, RoundingMode, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits, CurrencyCode) }; } catch (e) {};
-try { let fnprepatch_359 = KismetTextLibrary.prototype.AsCurrency_Float;KismetTextLibrary.prototype.AsCurrency_Float = function (Value, RoundingMode, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3, CurrencyCode) { return fnprepatch_359.call(this, Value, RoundingMode, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits, CurrencyCode) }; } catch (e) {};
+try { let fnprepatch_438 = KismetTextLibrary.prototype.Conv_IntToText;KismetTextLibrary.prototype.Conv_IntToText = function (Value, bAlwaysSign = false, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324) { return fnprepatch_438.call(this, Value, bAlwaysSign, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits) }; } catch (e) {};
+try { let fnprepatch_439 = KismetTextLibrary.prototype.Conv_FloatToText;KismetTextLibrary.prototype.Conv_FloatToText = function (Value, RoundingMode, bAlwaysSign = false, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3) { return fnprepatch_439.call(this, Value, RoundingMode, bAlwaysSign, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits) }; } catch (e) {};
+try { let fnprepatch_440 = KismetTextLibrary.prototype.AsPercent_Float;KismetTextLibrary.prototype.AsPercent_Float = function (Value, RoundingMode, bAlwaysSign = false, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3) { return fnprepatch_440.call(this, Value, RoundingMode, bAlwaysSign, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits) }; } catch (e) {};
+try { let fnprepatch_441 = KismetTextLibrary.prototype.AsCurrency_Integer;KismetTextLibrary.prototype.AsCurrency_Integer = function (Value, RoundingMode, bAlwaysSign = false, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3, CurrencyCode) { return fnprepatch_441.call(this, Value, RoundingMode, bAlwaysSign, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits, CurrencyCode) }; } catch (e) {};
+try { let fnprepatch_442 = KismetTextLibrary.prototype.AsCurrency_Float;KismetTextLibrary.prototype.AsCurrency_Float = function (Value, RoundingMode, bAlwaysSign = false, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3, CurrencyCode) { return fnprepatch_442.call(this, Value, RoundingMode, bAlwaysSign, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits, CurrencyCode) }; } catch (e) {};
 try { KismetTextLibrary.prototype.IsTextfromStringTable = KismetTextLibrary.prototype.TextIsFromStringTable; } catch (e) {};
 try { KismetTextLibrary.IsTextfromStringTable = KismetTextLibrary.TextIsFromStringTable; } catch (e) {};
 try { KismetTextLibrary.prototype.MakeTextfromStringTable = KismetTextLibrary.prototype.TextFromStringTable; } catch (e) {};
@@ -1221,179 +1460,153 @@ try { KismetTextLibrary.prototype.AsCurrency = KismetTextLibrary.prototype.AsCur
 try { KismetTextLibrary.AsCurrency = KismetTextLibrary.AsCurrency_Integer; } catch (e) {};
 try { KismetTextLibrary.prototype.AsCurrency = KismetTextLibrary.prototype.AsCurrency_Float; } catch (e) {};
 try { KismetTextLibrary.AsCurrency = KismetTextLibrary.AsCurrency_Float; } catch (e) {};
-try { let fnprepatch_360 = LevelScriptActor.prototype.SetCinematicMode;LevelScriptActor.prototype.SetCinematicMode = function (bCinematicMode, bHidePlayer = true, bAffectsHUD = true, bAffectsMovement = false, bAffectsTurning = false) { return fnprepatch_360.call(this, bCinematicMode, bHidePlayer, bAffectsHUD, bAffectsMovement, bAffectsTurning) }; } catch (e) {};
-try { Texture2D.prototype.GetSizeY = Texture2D.prototype.Blueprint_GetSizeY; } catch (e) {};
-try { Texture2D.prototype.GetSizeX = Texture2D.prototype.Blueprint_GetSizeX; } catch (e) {};
+try { let fnprepatch_443 = LevelScriptActor.prototype.SetCinematicMode;LevelScriptActor.prototype.SetCinematicMode = function (bCinematicMode, bHidePlayer = true, bAffectsHUD = true, bAffectsMovement = false, bAffectsTurning = false) { return fnprepatch_443.call(this, bCinematicMode, bHidePlayer, bAffectsHUD, bAffectsMovement, bAffectsTurning) }; } catch (e) {};
+try { LevelStreamingDynamic.prototype.LoadLevelInstance = LevelStreamingDynamic.prototype.LoadLevelInstanceBySoftObjectPtr; } catch (e) {};
+try { LevelStreamingDynamic.LoadLevelInstance = LevelStreamingDynamic.LoadLevelInstanceBySoftObjectPtr; } catch (e) {};
+try { let fnprepatch_444 = LocalLightComponent.prototype.GetUnitsConversionFactor;LocalLightComponent.prototype.GetUnitsConversionFactor = function (SrcUnits, TargetUnits, CosHalfConeAngle = -1) { return fnprepatch_444.call(this, SrcUnits, TargetUnits, CosHalfConeAngle) }; } catch (e) {};
+try { let fnprepatch_445 = MaterialInstanceDynamic.prototype.K2_CopyMaterialInstanceParameters;MaterialInstanceDynamic.prototype.K2_CopyMaterialInstanceParameters = function (Source, bQuickParametersOnly = false) { return fnprepatch_445.call(this, Source, bQuickParametersOnly) }; } catch (e) {};
 try { MaterialInstanceDynamic.prototype.InterpolateMaterialInstanceParameters = MaterialInstanceDynamic.prototype.K2_InterpolateMaterialInstanceParams; } catch (e) {};
 try { MaterialInstanceDynamic.prototype.GetVectorParameterValue = MaterialInstanceDynamic.prototype.K2_GetVectorParameterValue; } catch (e) {};
 try { MaterialInstanceDynamic.prototype.GetTextureParameterValue = MaterialInstanceDynamic.prototype.K2_GetTextureParameterValue; } catch (e) {};
 try { MaterialInstanceDynamic.prototype.GetScalarParameterValue = MaterialInstanceDynamic.prototype.K2_GetScalarParameterValue; } catch (e) {};
 try { MaterialInstanceDynamic.prototype.CopyMaterialInstanceParameters = MaterialInstanceDynamic.prototype.K2_CopyMaterialInstanceParameters; } catch (e) {};
-try { let fnprepatch_361 = MatineeActor.prototype.SetPosition;MatineeActor.prototype.SetPosition = function (NewPosition, bJump = false) { return fnprepatch_361.call(this, NewPosition, bJump) }; } catch (e) {};
-try { let fnprepatch_362 = MeshVertexPainterKismetLibrary.prototype.PaintVerticesSingleColor;MeshVertexPainterKismetLibrary.prototype.PaintVerticesSingleColor = function (StaticMeshComponent, FillColor, bConvertToSRGB = true) { return fnprepatch_362.call(this, StaticMeshComponent, FillColor, bConvertToSRGB) }; } catch (e) {};
-try { let fnprepatch_363 = MeshVertexPainterKismetLibrary.prototype.PaintVerticesLerpAlongAxis;MeshVertexPainterKismetLibrary.prototype.PaintVerticesLerpAlongAxis = function (StaticMeshComponent, StartColor, EndColor, Axis, bConvertToSRGB = true) { return fnprepatch_363.call(this, StaticMeshComponent, StartColor, EndColor, Axis, bConvertToSRGB) }; } catch (e) {};
-try { let fnprepatch_364 = NavigationPath.prototype.EnableDebugDrawing;NavigationPath.prototype.EnableDebugDrawing = function (bShouldDrawDebugData, PathColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_364.call(this, bShouldDrawDebugData, PathColor) }; } catch (e) {};
-try { World.prototype.LogBoxShape = World.prototype.LogBox; } catch (e) {};
-try { World.prototype.GetRandomPointInNavigableRadius_DEPRECATED = World.prototype.GetRandomPointInNavigableRadius; } catch (e) {};
-try { World.prototype.GetRandomReachablePointInRadius_DEPRECATED = World.prototype.GetRandomReachablePointInRadius; } catch (e) {};
-try { World.prototype.GetRandomPointInNavigableRadius = World.prototype.K2_GetRandomPointInNavigableRadius; } catch (e) {};
-try { World.prototype.GetRandomReachablePointInRadius = World.prototype.K2_GetRandomReachablePointInRadius; } catch (e) {};
-try { World.prototype.ProjectPointToNavigation = World.prototype.K2_ProjectPointToNavigation; } catch (e) {};
-try { World.prototype.ProjectPointToNavigation_DEPRECATED = World.prototype.ProjectPointToNavigation; } catch (e) {};
-try { World.prototype.MultiBoxTraceByChannel = World.prototype.BoxTraceMulti; } catch (e) {};
-try { World.prototype.MultiBoxTraceByProfile = World.prototype.BoxTraceMultiByProfile; } catch (e) {};
-try { World.prototype.MultiBoxTraceForObjects = World.prototype.BoxTraceMultiForObjects; } catch (e) {};
-try { World.prototype.BoxTraceByChannel = World.prototype.BoxTraceSingle; } catch (e) {};
-try { World.prototype.BoxTraceByProfile = World.prototype.BoxTraceSingleByProfile; } catch (e) {};
-try { World.prototype.BoxTraceForObjects = World.prototype.BoxTraceSingleForObjects; } catch (e) {};
-try { World.prototype.MultiCapsuleTraceByChannel = World.prototype.CapsuleTraceMulti; } catch (e) {};
-try { World.prototype.MultiCapsuleTraceByProfile = World.prototype.CapsuleTraceMultiByProfile; } catch (e) {};
-try { World.prototype.MultiCapsuleTraceForObjects = World.prototype.CapsuleTraceMultiForObjects; } catch (e) {};
-try { World.prototype.CapsuleTraceByChannel = World.prototype.CapsuleTraceSingle; } catch (e) {};
-try { World.prototype.CapsuleTraceByProfile = World.prototype.CapsuleTraceSingleByProfile; } catch (e) {};
-try { World.prototype.CapsuleTraceForObjects = World.prototype.CapsuleTraceSingleForObjects; } catch (e) {};
-try { World.prototype.DrawDebugCone = World.prototype.DrawDebugConeInDegrees; } catch (e) {};
-try { World.prototype.ClearandInvalidateTimerbyHandle = World.prototype.K2_ClearAndInvalidateTimerHandle; } catch (e) {};
-try { World.prototype.ClearTimerbyHandle = World.prototype.K2_ClearTimerHandle; } catch (e) {};
-try { World.prototype.GetTimerElapsedTimebyHandle = World.prototype.K2_GetTimerElapsedTimeHandle; } catch (e) {};
-try { World.prototype.GetTimerRemainingTimebyHandle = World.prototype.K2_GetTimerRemainingTimeHandle; } catch (e) {};
-try { World.prototype.IsTimerActivebyHandle = World.prototype.K2_IsTimerActiveHandle; } catch (e) {};
-try { World.prototype.IsTimerPausedbyHandle = World.prototype.K2_IsTimerPausedHandle; } catch (e) {};
-try { World.prototype.PauseTimerbyHandle = World.prototype.K2_PauseTimerHandle; } catch (e) {};
-try { World.prototype.DoesTimerExistbyHandle = World.prototype.K2_TimerExistsHandle; } catch (e) {};
-try { World.prototype.UnpauseTimerbyHandle = World.prototype.K2_UnPauseTimerHandle; } catch (e) {};
-try { World.prototype.MultiLineTraceByChannel = World.prototype.LineTraceMulti; } catch (e) {};
-try { World.prototype.MultiLineTraceByProfile = World.prototype.LineTraceMultiByProfile; } catch (e) {};
-try { World.prototype.MultiLineTraceForObjects = World.prototype.LineTraceMultiForObjects; } catch (e) {};
-try { World.prototype.LineTraceByChannel = World.prototype.LineTraceSingle; } catch (e) {};
-try { World.prototype.LineTraceByProfile = World.prototype.LineTraceSingleByProfile; } catch (e) {};
-try { World.prototype.LineTraceForObjects = World.prototype.LineTraceSingleForObjects; } catch (e) {};
-try { World.prototype.MultiSphereTraceByChannel = World.prototype.SphereTraceMulti; } catch (e) {};
-try { World.prototype.MultiSphereTraceByProfile = World.prototype.SphereTraceMultiByProfile; } catch (e) {};
-try { World.prototype.MultiSphereTraceForObjects = World.prototype.SphereTraceMultiForObjects; } catch (e) {};
-try { World.prototype.SphereTraceByChannel = World.prototype.SphereTraceSingle; } catch (e) {};
-try { World.prototype.SphereTraceByProfile = World.prototype.SphereTraceSingleByProfile; } catch (e) {};
-try { World.prototype.SphereTraceForObjects = World.prototype.SphereTraceSingleForObjects; } catch (e) {};
-try { World.prototype.PredictProjectilePath = World.prototype.Blueprint_PredictProjectilePath_Advanced; } catch (e) {};
-try { World.prototype.PredictProjectilePathByObjectType = World.prototype.Blueprint_PredictProjectilePath_ByObjectType; } catch (e) {};
-try { World.prototype.PredictProjectilePathByTraceChannel = World.prototype.Blueprint_PredictProjectilePath_ByTraceChannel; } catch (e) {};
-try { World.prototype.SuggestProjectileVelocity = World.prototype.BlueprintSuggestProjectileVelocity; } catch (e) {};
-try { World.prototype.SuggestProjectileVelocityCustomArc = World.prototype.SuggestProjectileVelocity_CustomArc; } catch (e) {};
-try { World.prototype.CreateWidget = World.prototype.Create; } catch (e) {};
-try { World.prototype.ScreenToAbsolute = World.prototype.ScreenToWidgetAbsolute; } catch (e) {};
-try { World.prototype.ScreenToLocal = World.prototype.ScreenToWidgetLocal; } catch (e) {};
-try { let fnprepatch_365 = NavigationSystem.prototype.RegisterNavigationInvoker;NavigationSystem.prototype.RegisterNavigationInvoker = function (Invoker, TileGenerationRadius = 3000, TileRemovalRadius = 5000) { return fnprepatch_365.call(this, Invoker, TileGenerationRadius, TileRemovalRadius) }; } catch (e) {};
-try { let fnprepatch_366 = NavigationSystem.prototype.FindPathToActorSynchronously;NavigationSystem.prototype.FindPathToActorSynchronously = function (WorldContextObject, PathStart, GoalActor, TetherDistance = 50, PathfindingContext, FilterClass) { return fnprepatch_366.call(this, WorldContextObject, PathStart, GoalActor, TetherDistance, PathfindingContext, FilterClass) }; } catch (e) {};
-try { NavigationSystem.prototype.ProjectPointToNavigation_DEPRECATED = NavigationSystem.prototype.ProjectPointToNavigation; } catch (e) {};
-try { NavigationSystem.ProjectPointToNavigation_DEPRECATED = NavigationSystem.ProjectPointToNavigation; } catch (e) {};
-try { NavigationSystem.prototype.ProjectPointToNavigation = NavigationSystem.prototype.K2_ProjectPointToNavigation; } catch (e) {};
-try { NavigationSystem.ProjectPointToNavigation = NavigationSystem.K2_ProjectPointToNavigation; } catch (e) {};
-try { NavigationSystem.prototype.GetRandomReachablePointInRadius = NavigationSystem.prototype.K2_GetRandomReachablePointInRadius; } catch (e) {};
-try { NavigationSystem.GetRandomReachablePointInRadius = NavigationSystem.K2_GetRandomReachablePointInRadius; } catch (e) {};
-try { NavigationSystem.prototype.GetRandomPointInNavigableRadius = NavigationSystem.prototype.K2_GetRandomPointInNavigableRadius; } catch (e) {};
-try { NavigationSystem.GetRandomPointInNavigableRadius = NavigationSystem.K2_GetRandomPointInNavigableRadius; } catch (e) {};
-try { NavigationSystem.prototype.GetRandomReachablePointInRadius_DEPRECATED = NavigationSystem.prototype.GetRandomReachablePointInRadius; } catch (e) {};
-try { NavigationSystem.GetRandomReachablePointInRadius_DEPRECATED = NavigationSystem.GetRandomReachablePointInRadius; } catch (e) {};
-try { NavigationSystem.prototype.GetRandomPointInNavigableRadius_DEPRECATED = NavigationSystem.prototype.GetRandomPointInNavigableRadius; } catch (e) {};
-try { NavigationSystem.GetRandomPointInNavigableRadius_DEPRECATED = NavigationSystem.GetRandomPointInNavigableRadius; } catch (e) {};
-try { let fnprepatch_367 = ParticleSystemComponent.prototype.SetAutoAttachParams;ParticleSystemComponent.prototype.SetAutoAttachParams = function (Parent, SocketName = "None", LocationType = "KeepRelativeOffset") { return fnprepatch_367.call(this, Parent, SocketName, LocationType) }; } catch (e) {};
-try { let fnprepatch_368 = PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationSettingsBelow;PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationSettingsBelow = function (BodyName, PhysicalAnimationData, bIncludeSelf = true) { return fnprepatch_368.call(this, BodyName, PhysicalAnimationData, bIncludeSelf) }; } catch (e) {};
-try { let fnprepatch_369 = PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationProfileBelow;PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationProfileBelow = function (BodyName, ProfileName, bIncludeSelf = true, bClearNotFound = false) { return fnprepatch_369.call(this, BodyName, ProfileName, bIncludeSelf, bClearNotFound) }; } catch (e) {};
-try { let fnprepatch_370 = PlayerCameraManager.prototype.StopCameraShake;PlayerCameraManager.prototype.StopCameraShake = function (ShakeInstance, bImmediately = true) { return fnprepatch_370.call(this, ShakeInstance, bImmediately) }; } catch (e) {};
-try { let fnprepatch_371 = PlayerCameraManager.prototype.StopCameraAnimInst;PlayerCameraManager.prototype.StopCameraAnimInst = function (AnimInst, bImmediate = false) { return fnprepatch_371.call(this, AnimInst, bImmediate) }; } catch (e) {};
-try { let fnprepatch_372 = PlayerCameraManager.prototype.StopAllInstancesOfCameraShake;PlayerCameraManager.prototype.StopAllInstancesOfCameraShake = function (Shake, bImmediately = true) { return fnprepatch_372.call(this, Shake, bImmediately) }; } catch (e) {};
-try { let fnprepatch_373 = PlayerCameraManager.prototype.StopAllInstancesOfCameraAnim;PlayerCameraManager.prototype.StopAllInstancesOfCameraAnim = function (Anim, bImmediate = false) { return fnprepatch_373.call(this, Anim, bImmediate) }; } catch (e) {};
-try { let fnprepatch_374 = PlayerCameraManager.prototype.StopAllCameraShakes;PlayerCameraManager.prototype.StopAllCameraShakes = function (bImmediately = true) { return fnprepatch_374.call(this, bImmediately) }; } catch (e) {};
-try { let fnprepatch_375 = PlayerCameraManager.prototype.StopAllCameraAnims;PlayerCameraManager.prototype.StopAllCameraAnims = function (bImmediate = false) { return fnprepatch_375.call(this, bImmediate) }; } catch (e) {};
-try { let fnprepatch_376 = PlayerCameraManager.prototype.StartCameraFade;PlayerCameraManager.prototype.StartCameraFade = function (FromAlpha, ToAlpha, Duration, Color, bShouldFadeAudio = false, bHoldWhenFinished = false) { return fnprepatch_376.call(this, FromAlpha, ToAlpha, Duration, Color, bShouldFadeAudio, bHoldWhenFinished) }; } catch (e) {};
-try { let fnprepatch_377 = PlayerCameraManager.prototype.PlayCameraShake;PlayerCameraManager.prototype.PlayCameraShake = function (ShakeClass, Scale = 1, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_377.call(this, ShakeClass, Scale, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
-try { let fnprepatch_378 = PlayerCameraManager.prototype.PlayCameraAnim;PlayerCameraManager.prototype.PlayCameraAnim = function (Anim, Rate = 1, Scale = 1, BlendInTime = 0, BlendOutTime = 0, bLoop = false, bRandomStartTime = false, Duration = 0, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_378.call(this, Anim, Rate, Scale, BlendInTime, BlendOutTime, bLoop, bRandomStartTime, Duration, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
+try { let fnprepatch_446 = MatineeActor.prototype.SetPosition;MatineeActor.prototype.SetPosition = function (NewPosition, bJump = false) { return fnprepatch_446.call(this, NewPosition, bJump) }; } catch (e) {};
+try { let fnprepatch_447 = MeshVertexPainterKismetLibrary.prototype.PaintVerticesSingleColor;MeshVertexPainterKismetLibrary.prototype.PaintVerticesSingleColor = function (StaticMeshComponent, FillColor, bConvertToSRGB = true) { return fnprepatch_447.call(this, StaticMeshComponent, FillColor, bConvertToSRGB) }; } catch (e) {};
+try { let fnprepatch_448 = MeshVertexPainterKismetLibrary.prototype.PaintVerticesLerpAlongAxis;MeshVertexPainterKismetLibrary.prototype.PaintVerticesLerpAlongAxis = function (StaticMeshComponent, StartColor, EndColor, Axis, bConvertToSRGB = true) { return fnprepatch_448.call(this, StaticMeshComponent, StartColor, EndColor, Axis, bConvertToSRGB) }; } catch (e) {};
+try { NavigationSystem.prototype.SimpleMoveToLocation_DEPRECATED = NavigationSystem.prototype.SimpleMoveToLocation; } catch (e) {};
+try { NavigationSystem.SimpleMoveToLocation_DEPRECATED = NavigationSystem.SimpleMoveToLocation; } catch (e) {};
+try { NavigationSystem.prototype.SimpleMoveToActor_DEPRECATED = NavigationSystem.prototype.SimpleMoveToActor; } catch (e) {};
+try { NavigationSystem.SimpleMoveToActor_DEPRECATED = NavigationSystem.SimpleMoveToActor; } catch (e) {};
+try { let fnprepatch_449 = ParticleSystemComponent.prototype.SetAutoAttachParams;ParticleSystemComponent.prototype.SetAutoAttachParams = function (Parent, SocketName = "None", LocationType = "KeepRelativeOffset") { return fnprepatch_449.call(this, Parent, SocketName, LocationType) }; } catch (e) {};
+try { let fnprepatch_450 = ParticleSystemComponent.prototype.CreateNamedDynamicMaterialInstance;ParticleSystemComponent.prototype.CreateNamedDynamicMaterialInstance = function (InName, SourceMaterial = undefined) { return fnprepatch_450.call(this, InName, SourceMaterial) }; } catch (e) {};
+try { let fnprepatch_451 = PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationSettingsBelow;PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationSettingsBelow = function (BodyName, PhysicalAnimationData, bIncludeSelf = true) { return fnprepatch_451.call(this, BodyName, PhysicalAnimationData, bIncludeSelf) }; } catch (e) {};
+try { let fnprepatch_452 = PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationProfileBelow;PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationProfileBelow = function (BodyName, ProfileName, bIncludeSelf = true, bClearNotFound = false) { return fnprepatch_452.call(this, BodyName, ProfileName, bIncludeSelf, bClearNotFound) }; } catch (e) {};
+try { let fnprepatch_453 = PlayerCameraManager.prototype.StopCameraShake;PlayerCameraManager.prototype.StopCameraShake = function (ShakeInstance, bImmediately = true) { return fnprepatch_453.call(this, ShakeInstance, bImmediately) }; } catch (e) {};
+try { let fnprepatch_454 = PlayerCameraManager.prototype.StopCameraAnimInst;PlayerCameraManager.prototype.StopCameraAnimInst = function (AnimInst, bImmediate = false) { return fnprepatch_454.call(this, AnimInst, bImmediate) }; } catch (e) {};
+try { let fnprepatch_455 = PlayerCameraManager.prototype.StopAllInstancesOfCameraShake;PlayerCameraManager.prototype.StopAllInstancesOfCameraShake = function (Shake, bImmediately = true) { return fnprepatch_455.call(this, Shake, bImmediately) }; } catch (e) {};
+try { let fnprepatch_456 = PlayerCameraManager.prototype.StopAllInstancesOfCameraAnim;PlayerCameraManager.prototype.StopAllInstancesOfCameraAnim = function (Anim, bImmediate = false) { return fnprepatch_456.call(this, Anim, bImmediate) }; } catch (e) {};
+try { let fnprepatch_457 = PlayerCameraManager.prototype.StopAllCameraShakes;PlayerCameraManager.prototype.StopAllCameraShakes = function (bImmediately = true) { return fnprepatch_457.call(this, bImmediately) }; } catch (e) {};
+try { let fnprepatch_458 = PlayerCameraManager.prototype.StopAllCameraAnims;PlayerCameraManager.prototype.StopAllCameraAnims = function (bImmediate = false) { return fnprepatch_458.call(this, bImmediate) }; } catch (e) {};
+try { let fnprepatch_459 = PlayerCameraManager.prototype.StartCameraFade;PlayerCameraManager.prototype.StartCameraFade = function (FromAlpha, ToAlpha, Duration, Color, bShouldFadeAudio = false, bHoldWhenFinished = false) { return fnprepatch_459.call(this, FromAlpha, ToAlpha, Duration, Color, bShouldFadeAudio, bHoldWhenFinished) }; } catch (e) {};
+try { let fnprepatch_460 = PlayerCameraManager.prototype.PlayCameraShake;PlayerCameraManager.prototype.PlayCameraShake = function (ShakeClass, Scale = 1, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_460.call(this, ShakeClass, Scale, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
+try { let fnprepatch_461 = PlayerCameraManager.prototype.PlayCameraAnim;PlayerCameraManager.prototype.PlayCameraAnim = function (Anim, Rate = 1, Scale = 1, BlendInTime = 0, BlendOutTime = 0, bLoop = false, bRandomStartTime = false, Duration = 0, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_461.call(this, Anim, Rate, Scale, BlendInTime, BlendOutTime, bLoop, bRandomStartTime, Duration, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
 try { PlayerState.prototype.OverrideWith = PlayerState.prototype.ReceiveOverrideWith; } catch (e) {};
 try { PlayerState.prototype.CopyProperties = PlayerState.prototype.ReceiveCopyProperties; } catch (e) {};
-try { let fnprepatch_379 = PostProcessComponent.prototype.AddOrUpdateBlendable;PostProcessComponent.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_379.call(this, InBlendableObject, InWeight) }; } catch (e) {};
-try { let fnprepatch_380 = PostProcessVolume.prototype.AddOrUpdateBlendable;PostProcessVolume.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_380.call(this, InBlendableObject, InWeight) }; } catch (e) {};
-try { let fnprepatch_381 = SceneCaptureComponent2D.prototype.AddOrUpdateBlendable;SceneCaptureComponent2D.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_381.call(this, InBlendableObject, InWeight) }; } catch (e) {};
-try { let fnprepatch_382 = SplineComponent.prototype.SetUpVectorAtSplinePoint;SplineComponent.prototype.SetUpVectorAtSplinePoint = function (PointIndex, InUpVector, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_382.call(this, PointIndex, InUpVector, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_383 = SplineComponent.prototype.SetTangentsAtSplinePoint;SplineComponent.prototype.SetTangentsAtSplinePoint = function (PointIndex, InArriveTangent, InLeaveTangent, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_383.call(this, PointIndex, InArriveTangent, InLeaveTangent, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_384 = SplineComponent.prototype.SetTangentAtSplinePoint;SplineComponent.prototype.SetTangentAtSplinePoint = function (PointIndex, InTangent, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_384.call(this, PointIndex, InTangent, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_385 = SplineComponent.prototype.SetSplinePointType;SplineComponent.prototype.SetSplinePointType = function (PointIndex, Type, bUpdateSpline = true) { return fnprepatch_385.call(this, PointIndex, Type, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_386 = SplineComponent.prototype.SetSplinePoints;SplineComponent.prototype.SetSplinePoints = function (Points, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_386.call(this, Points, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_387 = SplineComponent.prototype.SetLocationAtSplinePoint;SplineComponent.prototype.SetLocationAtSplinePoint = function (PointIndex, InLocation, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_387.call(this, PointIndex, InLocation, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_388 = SplineComponent.prototype.SetClosedLoopAtPosition;SplineComponent.prototype.SetClosedLoopAtPosition = function (bInClosedLoop, Key, bUpdateSpline = true) { return fnprepatch_388.call(this, bInClosedLoop, Key, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_389 = SplineComponent.prototype.SetClosedLoop;SplineComponent.prototype.SetClosedLoop = function (bInClosedLoop, bUpdateSpline = true) { return fnprepatch_389.call(this, bInClosedLoop, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_390 = SplineComponent.prototype.RemoveSplinePoint;SplineComponent.prototype.RemoveSplinePoint = function (Index, bUpdateSpline = true) { return fnprepatch_390.call(this, Index, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_391 = SplineComponent.prototype.GetWorldRotationAtTime;SplineComponent.prototype.GetWorldRotationAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_391.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
-try { let fnprepatch_392 = SplineComponent.prototype.GetWorldLocationAtTime;SplineComponent.prototype.GetWorldLocationAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_392.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
-try { let fnprepatch_393 = SplineComponent.prototype.GetWorldDirectionAtTime;SplineComponent.prototype.GetWorldDirectionAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_393.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
-try { let fnprepatch_394 = SplineComponent.prototype.GetUpVectorAtTime;SplineComponent.prototype.GetUpVectorAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_394.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
-try { let fnprepatch_395 = SplineComponent.prototype.GetTransformAtTime;SplineComponent.prototype.GetTransformAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false, bUseScale = false) { return fnprepatch_395.call(this, Time, CoordinateSpace, bUseConstantVelocity, bUseScale) }; } catch (e) {};
-try { let fnprepatch_396 = SplineComponent.prototype.GetTransformAtSplinePoint;SplineComponent.prototype.GetTransformAtSplinePoint = function (PointIndex, CoordinateSpace, bUseScale = false) { return fnprepatch_396.call(this, PointIndex, CoordinateSpace, bUseScale) }; } catch (e) {};
-try { let fnprepatch_397 = SplineComponent.prototype.GetTransformAtDistanceAlongSpline;SplineComponent.prototype.GetTransformAtDistanceAlongSpline = function (Distance, CoordinateSpace, bUseScale = false) { return fnprepatch_397.call(this, Distance, CoordinateSpace, bUseScale) }; } catch (e) {};
-try { let fnprepatch_398 = SplineComponent.prototype.GetTangentAtTime;SplineComponent.prototype.GetTangentAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_398.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
-try { let fnprepatch_399 = SplineComponent.prototype.GetScaleAtTime;SplineComponent.prototype.GetScaleAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_399.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
-try { let fnprepatch_400 = SplineComponent.prototype.GetRotationAtTime;SplineComponent.prototype.GetRotationAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_400.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
-try { let fnprepatch_401 = SplineComponent.prototype.GetRollAtTime;SplineComponent.prototype.GetRollAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_401.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
-try { let fnprepatch_402 = SplineComponent.prototype.GetRightVectorAtTime;SplineComponent.prototype.GetRightVectorAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_402.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
-try { let fnprepatch_403 = SplineComponent.prototype.GetLocationAtTime;SplineComponent.prototype.GetLocationAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_403.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
-try { let fnprepatch_404 = SplineComponent.prototype.GetDirectionAtTime;SplineComponent.prototype.GetDirectionAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_404.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
-try { let fnprepatch_405 = SplineComponent.prototype.FindTransformClosestToWorldLocation;SplineComponent.prototype.FindTransformClosestToWorldLocation = function (WorldLocation, CoordinateSpace, bUseScale = false) { return fnprepatch_405.call(this, WorldLocation, CoordinateSpace, bUseScale) }; } catch (e) {};
-try { let fnprepatch_406 = SplineComponent.prototype.ClearSplinePoints;SplineComponent.prototype.ClearSplinePoints = function (bUpdateSpline = true) { return fnprepatch_406.call(this, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_407 = SplineComponent.prototype.AddSplinePointAtIndex;SplineComponent.prototype.AddSplinePointAtIndex = function (Position, Index, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_407.call(this, Position, Index, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_408 = SplineComponent.prototype.AddSplinePoint;SplineComponent.prototype.AddSplinePoint = function (Position, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_408.call(this, Position, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_409 = SplineComponent.prototype.AddPoints;SplineComponent.prototype.AddPoints = function (Points, bUpdateSpline = true) { return fnprepatch_409.call(this, Points, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_410 = SplineComponent.prototype.AddPoint;SplineComponent.prototype.AddPoint = function (Point, bUpdateSpline = true) { return fnprepatch_410.call(this, Point, bUpdateSpline) }; } catch (e) {};
-try { let fnprepatch_411 = SplineMeshComponent.prototype.SetStartTangent;SplineMeshComponent.prototype.SetStartTangent = function (StartTangent, bUpdateMesh = true) { return fnprepatch_411.call(this, StartTangent, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_412 = SplineMeshComponent.prototype.SetStartScale;SplineMeshComponent.prototype.SetStartScale = function (StartScale = {"X":1,"Y":1}, bUpdateMesh = true) { return fnprepatch_412.call(this, StartScale, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_413 = SplineMeshComponent.prototype.SetStartRoll;SplineMeshComponent.prototype.SetStartRoll = function (StartRoll, bUpdateMesh = true) { return fnprepatch_413.call(this, StartRoll, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_414 = SplineMeshComponent.prototype.SetStartPosition;SplineMeshComponent.prototype.SetStartPosition = function (StartPos, bUpdateMesh = true) { return fnprepatch_414.call(this, StartPos, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_415 = SplineMeshComponent.prototype.SetStartOffset;SplineMeshComponent.prototype.SetStartOffset = function (StartOffset, bUpdateMesh = true) { return fnprepatch_415.call(this, StartOffset, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_416 = SplineMeshComponent.prototype.SetStartAndEnd;SplineMeshComponent.prototype.SetStartAndEnd = function (StartPos, StartTangent, EndPos, EndTangent, bUpdateMesh = true) { return fnprepatch_416.call(this, StartPos, StartTangent, EndPos, EndTangent, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_417 = SplineMeshComponent.prototype.SetSplineUpDir;SplineMeshComponent.prototype.SetSplineUpDir = function (InSplineUpDir, bUpdateMesh = true) { return fnprepatch_417.call(this, InSplineUpDir, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_418 = SplineMeshComponent.prototype.SetForwardAxis;SplineMeshComponent.prototype.SetForwardAxis = function (InForwardAxis, bUpdateMesh = true) { return fnprepatch_418.call(this, InForwardAxis, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_419 = SplineMeshComponent.prototype.SetEndTangent;SplineMeshComponent.prototype.SetEndTangent = function (EndTangent, bUpdateMesh = true) { return fnprepatch_419.call(this, EndTangent, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_420 = SplineMeshComponent.prototype.SetEndScale;SplineMeshComponent.prototype.SetEndScale = function (EndScale = {"X":1,"Y":1}, bUpdateMesh = true) { return fnprepatch_420.call(this, EndScale, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_421 = SplineMeshComponent.prototype.SetEndRoll;SplineMeshComponent.prototype.SetEndRoll = function (EndRoll, bUpdateMesh = true) { return fnprepatch_421.call(this, EndRoll, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_422 = SplineMeshComponent.prototype.SetEndPosition;SplineMeshComponent.prototype.SetEndPosition = function (EndPos, bUpdateMesh = true) { return fnprepatch_422.call(this, EndPos, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_423 = SplineMeshComponent.prototype.SetEndOffset;SplineMeshComponent.prototype.SetEndOffset = function (EndOffset, bUpdateMesh = true) { return fnprepatch_423.call(this, EndOffset, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_424 = SplineMeshComponent.prototype.SetBoundaryMin;SplineMeshComponent.prototype.SetBoundaryMin = function (InBoundaryMin, bUpdateMesh = true) { return fnprepatch_424.call(this, InBoundaryMin, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_425 = SplineMeshComponent.prototype.SetBoundaryMax;SplineMeshComponent.prototype.SetBoundaryMax = function (InBoundaryMax, bUpdateMesh = true) { return fnprepatch_425.call(this, InBoundaryMax, bUpdateMesh) }; } catch (e) {};
-try { let fnprepatch_426 = StereoLayerFunctionLibrary.prototype.SetSplashScreen;StereoLayerFunctionLibrary.prototype.SetSplashScreen = function (Texture, Scale = {"X":1,"Y":1}, Offset = {"X":0,"Y":0}, bShowLoadingMovie = false, bShowOnSet = false) { return fnprepatch_426.call(this, Texture, Scale, Offset, bShowLoadingMovie, bShowOnSet) }; } catch (e) {};
+try { let fnprepatch_462 = PostProcessComponent.prototype.AddOrUpdateBlendable;PostProcessComponent.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_462.call(this, InBlendableObject, InWeight) }; } catch (e) {};
+try { let fnprepatch_463 = PostProcessVolume.prototype.AddOrUpdateBlendable;PostProcessVolume.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_463.call(this, InBlendableObject, InWeight) }; } catch (e) {};
+try { let fnprepatch_464 = SceneCaptureComponent2D.prototype.AddOrUpdateBlendable;SceneCaptureComponent2D.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_464.call(this, InBlendableObject, InWeight) }; } catch (e) {};
+try { let fnprepatch_465 = SkeletalMesh.prototype.IsSectionUsingCloth;SkeletalMesh.prototype.IsSectionUsingCloth = function (InSectionIndex, bCheckCorrespondingSections = true) { return fnprepatch_465.call(this, InSectionIndex, bCheckCorrespondingSections) }; } catch (e) {};
+try { let fnprepatch_466 = SoundSubmix.prototype.StopRecordingOutput;SoundSubmix.prototype.StopRecordingOutput = function (WorldContextObject, ExportType, Name, Path, ExistingSoundWaveToOverwrite = undefined) { return fnprepatch_466.call(this, WorldContextObject, ExportType, Name, Path, ExistingSoundWaveToOverwrite) }; } catch (e) {};
+try { SoundSubmix.prototype.FinishRecordingSubmixOutput = SoundSubmix.prototype.StopRecordingOutput; } catch (e) {};
+try { SoundSubmix.prototype.StartRecordingSubmixOutput = SoundSubmix.prototype.StartRecordingOutput; } catch (e) {};
+try { let fnprepatch_467 = SplineComponent.prototype.SetUpVectorAtSplinePoint;SplineComponent.prototype.SetUpVectorAtSplinePoint = function (PointIndex, InUpVector, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_467.call(this, PointIndex, InUpVector, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_468 = SplineComponent.prototype.SetTangentsAtSplinePoint;SplineComponent.prototype.SetTangentsAtSplinePoint = function (PointIndex, InArriveTangent, InLeaveTangent, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_468.call(this, PointIndex, InArriveTangent, InLeaveTangent, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_469 = SplineComponent.prototype.SetTangentAtSplinePoint;SplineComponent.prototype.SetTangentAtSplinePoint = function (PointIndex, InTangent, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_469.call(this, PointIndex, InTangent, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_470 = SplineComponent.prototype.SetSplinePointType;SplineComponent.prototype.SetSplinePointType = function (PointIndex, Type, bUpdateSpline = true) { return fnprepatch_470.call(this, PointIndex, Type, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_471 = SplineComponent.prototype.SetSplinePoints;SplineComponent.prototype.SetSplinePoints = function (Points, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_471.call(this, Points, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_472 = SplineComponent.prototype.SetLocationAtSplinePoint;SplineComponent.prototype.SetLocationAtSplinePoint = function (PointIndex, InLocation, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_472.call(this, PointIndex, InLocation, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_473 = SplineComponent.prototype.SetClosedLoopAtPosition;SplineComponent.prototype.SetClosedLoopAtPosition = function (bInClosedLoop, Key, bUpdateSpline = true) { return fnprepatch_473.call(this, bInClosedLoop, Key, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_474 = SplineComponent.prototype.SetClosedLoop;SplineComponent.prototype.SetClosedLoop = function (bInClosedLoop, bUpdateSpline = true) { return fnprepatch_474.call(this, bInClosedLoop, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_475 = SplineComponent.prototype.RemoveSplinePoint;SplineComponent.prototype.RemoveSplinePoint = function (Index, bUpdateSpline = true) { return fnprepatch_475.call(this, Index, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_476 = SplineComponent.prototype.GetWorldRotationAtTime;SplineComponent.prototype.GetWorldRotationAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_476.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
+try { let fnprepatch_477 = SplineComponent.prototype.GetWorldLocationAtTime;SplineComponent.prototype.GetWorldLocationAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_477.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
+try { let fnprepatch_478 = SplineComponent.prototype.GetWorldDirectionAtTime;SplineComponent.prototype.GetWorldDirectionAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_478.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
+try { let fnprepatch_479 = SplineComponent.prototype.GetUpVectorAtTime;SplineComponent.prototype.GetUpVectorAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_479.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
+try { let fnprepatch_480 = SplineComponent.prototype.GetTransformAtTime;SplineComponent.prototype.GetTransformAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false, bUseScale = false) { return fnprepatch_480.call(this, Time, CoordinateSpace, bUseConstantVelocity, bUseScale) }; } catch (e) {};
+try { let fnprepatch_481 = SplineComponent.prototype.GetTransformAtSplinePoint;SplineComponent.prototype.GetTransformAtSplinePoint = function (PointIndex, CoordinateSpace, bUseScale = false) { return fnprepatch_481.call(this, PointIndex, CoordinateSpace, bUseScale) }; } catch (e) {};
+try { let fnprepatch_482 = SplineComponent.prototype.GetTransformAtDistanceAlongSpline;SplineComponent.prototype.GetTransformAtDistanceAlongSpline = function (Distance, CoordinateSpace, bUseScale = false) { return fnprepatch_482.call(this, Distance, CoordinateSpace, bUseScale) }; } catch (e) {};
+try { let fnprepatch_483 = SplineComponent.prototype.GetTangentAtTime;SplineComponent.prototype.GetTangentAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_483.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
+try { let fnprepatch_484 = SplineComponent.prototype.GetScaleAtTime;SplineComponent.prototype.GetScaleAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_484.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
+try { let fnprepatch_485 = SplineComponent.prototype.GetRotationAtTime;SplineComponent.prototype.GetRotationAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_485.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
+try { let fnprepatch_486 = SplineComponent.prototype.GetRollAtTime;SplineComponent.prototype.GetRollAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_486.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
+try { let fnprepatch_487 = SplineComponent.prototype.GetRightVectorAtTime;SplineComponent.prototype.GetRightVectorAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_487.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
+try { let fnprepatch_488 = SplineComponent.prototype.GetLocationAtTime;SplineComponent.prototype.GetLocationAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_488.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
+try { let fnprepatch_489 = SplineComponent.prototype.GetDirectionAtTime;SplineComponent.prototype.GetDirectionAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_489.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
+try { let fnprepatch_490 = SplineComponent.prototype.FindTransformClosestToWorldLocation;SplineComponent.prototype.FindTransformClosestToWorldLocation = function (WorldLocation, CoordinateSpace, bUseScale = false) { return fnprepatch_490.call(this, WorldLocation, CoordinateSpace, bUseScale) }; } catch (e) {};
+try { let fnprepatch_491 = SplineComponent.prototype.ClearSplinePoints;SplineComponent.prototype.ClearSplinePoints = function (bUpdateSpline = true) { return fnprepatch_491.call(this, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_492 = SplineComponent.prototype.AddSplinePointAtIndex;SplineComponent.prototype.AddSplinePointAtIndex = function (Position, Index, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_492.call(this, Position, Index, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_493 = SplineComponent.prototype.AddSplinePoint;SplineComponent.prototype.AddSplinePoint = function (Position, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_493.call(this, Position, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_494 = SplineComponent.prototype.AddPoints;SplineComponent.prototype.AddPoints = function (Points, bUpdateSpline = true) { return fnprepatch_494.call(this, Points, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_495 = SplineComponent.prototype.AddPoint;SplineComponent.prototype.AddPoint = function (Point, bUpdateSpline = true) { return fnprepatch_495.call(this, Point, bUpdateSpline) }; } catch (e) {};
+try { let fnprepatch_496 = SplineMeshComponent.prototype.SetStartTangent;SplineMeshComponent.prototype.SetStartTangent = function (StartTangent, bUpdateMesh = true) { return fnprepatch_496.call(this, StartTangent, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_497 = SplineMeshComponent.prototype.SetStartScale;SplineMeshComponent.prototype.SetStartScale = function (StartScale = {"X":1,"Y":1}, bUpdateMesh = true) { return fnprepatch_497.call(this, StartScale, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_498 = SplineMeshComponent.prototype.SetStartRoll;SplineMeshComponent.prototype.SetStartRoll = function (StartRoll, bUpdateMesh = true) { return fnprepatch_498.call(this, StartRoll, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_499 = SplineMeshComponent.prototype.SetStartPosition;SplineMeshComponent.prototype.SetStartPosition = function (StartPos, bUpdateMesh = true) { return fnprepatch_499.call(this, StartPos, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_500 = SplineMeshComponent.prototype.SetStartOffset;SplineMeshComponent.prototype.SetStartOffset = function (StartOffset, bUpdateMesh = true) { return fnprepatch_500.call(this, StartOffset, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_501 = SplineMeshComponent.prototype.SetStartAndEnd;SplineMeshComponent.prototype.SetStartAndEnd = function (StartPos, StartTangent, EndPos, EndTangent, bUpdateMesh = true) { return fnprepatch_501.call(this, StartPos, StartTangent, EndPos, EndTangent, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_502 = SplineMeshComponent.prototype.SetSplineUpDir;SplineMeshComponent.prototype.SetSplineUpDir = function (InSplineUpDir, bUpdateMesh = true) { return fnprepatch_502.call(this, InSplineUpDir, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_503 = SplineMeshComponent.prototype.SetForwardAxis;SplineMeshComponent.prototype.SetForwardAxis = function (InForwardAxis, bUpdateMesh = true) { return fnprepatch_503.call(this, InForwardAxis, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_504 = SplineMeshComponent.prototype.SetEndTangent;SplineMeshComponent.prototype.SetEndTangent = function (EndTangent, bUpdateMesh = true) { return fnprepatch_504.call(this, EndTangent, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_505 = SplineMeshComponent.prototype.SetEndScale;SplineMeshComponent.prototype.SetEndScale = function (EndScale = {"X":1,"Y":1}, bUpdateMesh = true) { return fnprepatch_505.call(this, EndScale, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_506 = SplineMeshComponent.prototype.SetEndRoll;SplineMeshComponent.prototype.SetEndRoll = function (EndRoll, bUpdateMesh = true) { return fnprepatch_506.call(this, EndRoll, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_507 = SplineMeshComponent.prototype.SetEndPosition;SplineMeshComponent.prototype.SetEndPosition = function (EndPos, bUpdateMesh = true) { return fnprepatch_507.call(this, EndPos, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_508 = SplineMeshComponent.prototype.SetEndOffset;SplineMeshComponent.prototype.SetEndOffset = function (EndOffset, bUpdateMesh = true) { return fnprepatch_508.call(this, EndOffset, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_509 = SplineMeshComponent.prototype.SetBoundaryMin;SplineMeshComponent.prototype.SetBoundaryMin = function (InBoundaryMin, bUpdateMesh = true) { return fnprepatch_509.call(this, InBoundaryMin, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_510 = SplineMeshComponent.prototype.SetBoundaryMax;SplineMeshComponent.prototype.SetBoundaryMax = function (InBoundaryMax, bUpdateMesh = true) { return fnprepatch_510.call(this, InBoundaryMax, bUpdateMesh) }; } catch (e) {};
+try { let fnprepatch_511 = StereoLayerFunctionLibrary.prototype.SetSplashScreen;StereoLayerFunctionLibrary.prototype.SetSplashScreen = function (Texture, Scale = {"X":1,"Y":1}, Offset = {"X":0,"Y":0}, bShowLoadingMovie = false, bShowOnSet = false) { return fnprepatch_511.call(this, Texture, Scale, Offset, bShowLoadingMovie, bShowOnSet) }; } catch (e) {};
 try { TextRenderComponent.prototype.SetText = TextRenderComponent.prototype.K2_SetText; } catch (e) {};
-try { let fnprepatch_427 = TimelineComponent.prototype.SetPlaybackPosition;TimelineComponent.prototype.SetPlaybackPosition = function (NewPosition, bFireEvents, bFireUpdate = true) { return fnprepatch_427.call(this, NewPosition, bFireEvents, bFireUpdate) }; } catch (e) {};
-try { let fnprepatch_428 = VisualLoggerKismetLibrary.prototype.LogText;VisualLoggerKismetLibrary.prototype.LogText = function (WorldContextObject, Text, LogCategory = "Blueprint Log") { return fnprepatch_428.call(this, WorldContextObject, Text, LogCategory) }; } catch (e) {};
-try { let fnprepatch_429 = VisualLoggerKismetLibrary.prototype.LogLocation;VisualLoggerKismetLibrary.prototype.LogLocation = function (WorldContextObject, Location, Text, ObjectColor = {"R":1,"G":1,"B":1,"A":1}, Radius = 10, LogCategory = "Blueprint Log") { return fnprepatch_429.call(this, WorldContextObject, Location, Text, ObjectColor, Radius, LogCategory) }; } catch (e) {};
-try { let fnprepatch_430 = VisualLoggerKismetLibrary.prototype.LogBox;VisualLoggerKismetLibrary.prototype.LogBox = function (WorldContextObject, BoxShape, Text, ObjectColor = {"R":1,"G":1,"B":1,"A":1}, LogCategory = "Blueprint Log") { return fnprepatch_430.call(this, WorldContextObject, BoxShape, Text, ObjectColor, LogCategory) }; } catch (e) {};
-try { VisualLoggerKismetLibrary.prototype.LogBoxShape = VisualLoggerKismetLibrary.prototype.LogBox; } catch (e) {};
-try { VisualLoggerKismetLibrary.LogBoxShape = VisualLoggerKismetLibrary.LogBox; } catch (e) {};
-try { let fnprepatch_431 = AnimationBlueprintLibrary.prototype.RemoveCurve;AnimationBlueprintLibrary.prototype.RemoveCurve = function (AnimationSequence, CurveName, bRemoveNameFromSkeleton = false) { return fnprepatch_431.call(this, AnimationSequence, CurveName, bRemoveNameFromSkeleton) }; } catch (e) {};
-try { let fnprepatch_432 = AnimationBlueprintLibrary.prototype.RemoveAllCurveData;AnimationBlueprintLibrary.prototype.RemoveAllCurveData = function (AnimationSequence, bRemoveNamesFromSkeleton = false) { return fnprepatch_432.call(this, AnimationSequence, bRemoveNamesFromSkeleton) }; } catch (e) {};
-try { let fnprepatch_433 = AnimationBlueprintLibrary.prototype.AddCurve;AnimationBlueprintLibrary.prototype.AddCurve = function (AnimationSequence, CurveName, CurveType = "RCT_Float", bMetaDataCurve = false) { return fnprepatch_433.call(this, AnimationSequence, CurveName, CurveType, bMetaDataCurve) }; } catch (e) {};
-try { let fnprepatch_434 = AnimationBlueprintLibrary.prototype.AddAnimationNotifyTrack;AnimationBlueprintLibrary.prototype.AddAnimationNotifyTrack = function (AnimationSequence, NotifyTrackName, TrackColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_434.call(this, AnimationSequence, NotifyTrackName, TrackColor) }; } catch (e) {};
-try { let fnprepatch_435 = AchievementWriteCallbackProxy.prototype.WriteAchievementProgress;AchievementWriteCallbackProxy.prototype.WriteAchievementProgress = function (WorldContextObject, PlayerController, AchievementName, Progress = 100, UserTag = 0) { return fnprepatch_435.call(this, WorldContextObject, PlayerController, AchievementName, Progress, UserTag) }; } catch (e) {};
+try { let fnprepatch_512 = TimelineComponent.prototype.SetPlaybackPosition;TimelineComponent.prototype.SetPlaybackPosition = function (NewPosition, bFireEvents, bFireUpdate = true) { return fnprepatch_512.call(this, NewPosition, bFireEvents, bFireUpdate) }; } catch (e) {};
+try { let fnprepatch_513 = VisualLoggerKismetLibrary.prototype.LogText;VisualLoggerKismetLibrary.prototype.LogText = function (WorldContextObject, Text, LogCategory = "VisLogBP", bAddToMessageLog = false) { return fnprepatch_513.call(this, WorldContextObject, Text, LogCategory, bAddToMessageLog) }; } catch (e) {};
+try { let fnprepatch_514 = VisualLoggerKismetLibrary.prototype.LogSegment;VisualLoggerKismetLibrary.prototype.LogSegment = function (WorldContextObject, SegmentStart, SegmentEnd, Text, ObjectColor = {"R":0,"G":0,"B":1,"A":1}, Thickness = 0, CategoryName = "VisLogBP", bAddToMessageLog = false) { return fnprepatch_514.call(this, WorldContextObject, SegmentStart, SegmentEnd, Text, ObjectColor, Thickness, CategoryName, bAddToMessageLog) }; } catch (e) {};
+try { let fnprepatch_515 = VisualLoggerKismetLibrary.prototype.LogLocation;VisualLoggerKismetLibrary.prototype.LogLocation = function (WorldContextObject, Location, Text, ObjectColor = {"R":0,"G":0,"B":1,"A":1}, Radius = 10, LogCategory = "VisLogBP", bAddToMessageLog = false) { return fnprepatch_515.call(this, WorldContextObject, Location, Text, ObjectColor, Radius, LogCategory, bAddToMessageLog) }; } catch (e) {};
+try { let fnprepatch_516 = VisualLoggerKismetLibrary.prototype.LogBox;VisualLoggerKismetLibrary.prototype.LogBox = function (WorldContextObject, BoxShape, Text, ObjectColor = {"R":0,"G":0,"B":1,"A":1}, LogCategory = "VisLogBP", bAddToMessageLog = false) { return fnprepatch_516.call(this, WorldContextObject, BoxShape, Text, ObjectColor, LogCategory, bAddToMessageLog) }; } catch (e) {};
+try { VisualLoggerKismetLibrary.prototype.VisLogText = VisualLoggerKismetLibrary.prototype.LogText; } catch (e) {};
+try { VisualLoggerKismetLibrary.VisLogText = VisualLoggerKismetLibrary.LogText; } catch (e) {};
+try { VisualLoggerKismetLibrary.prototype.VisLogSegment = VisualLoggerKismetLibrary.prototype.LogSegment; } catch (e) {};
+try { VisualLoggerKismetLibrary.VisLogSegment = VisualLoggerKismetLibrary.LogSegment; } catch (e) {};
+try { VisualLoggerKismetLibrary.prototype.VisLogLocation = VisualLoggerKismetLibrary.prototype.LogLocation; } catch (e) {};
+try { VisualLoggerKismetLibrary.VisLogLocation = VisualLoggerKismetLibrary.LogLocation; } catch (e) {};
+try { VisualLoggerKismetLibrary.prototype.VisLogBoxShape = VisualLoggerKismetLibrary.prototype.LogBox; } catch (e) {};
+try { VisualLoggerKismetLibrary.VisLogBoxShape = VisualLoggerKismetLibrary.LogBox; } catch (e) {};
+try { VisualLoggerKismetLibrary.prototype.EnableVisLogRecording = VisualLoggerKismetLibrary.prototype.EnableRecording; } catch (e) {};
+try { VisualLoggerKismetLibrary.EnableVisLogRecording = VisualLoggerKismetLibrary.EnableRecording; } catch (e) {};
+try { VOIPTalker.prototype.EndTalking = VOIPTalker.prototype.BPOnTalkingEnd; } catch (e) {};
+try { VOIPTalker.prototype.BeginTalking = VOIPTalker.prototype.BPOnTalkingBegin; } catch (e) {};
+try { let fnprepatch_517 = AnimationBlueprintLibrary.prototype.RemoveCurve;AnimationBlueprintLibrary.prototype.RemoveCurve = function (AnimationSequence, CurveName, bRemoveNameFromSkeleton = false) { return fnprepatch_517.call(this, AnimationSequence, CurveName, bRemoveNameFromSkeleton) }; } catch (e) {};
+try { let fnprepatch_518 = AnimationBlueprintLibrary.prototype.RemoveBoneAnimation;AnimationBlueprintLibrary.prototype.RemoveBoneAnimation = function (AnimationSequence, BoneName, bIncludeChildren = true, bFinalize = true) { return fnprepatch_518.call(this, AnimationSequence, BoneName, bIncludeChildren, bFinalize) }; } catch (e) {};
+try { let fnprepatch_519 = AnimationBlueprintLibrary.prototype.GetBonePosesForTime;AnimationBlueprintLibrary.prototype.GetBonePosesForTime = function (AnimationSequence, BoneNames, Time, bExtractRootMotion, Poses, PreviewMesh = undefined) { return fnprepatch_519.call(this, AnimationSequence, BoneNames, Time, bExtractRootMotion, Poses, PreviewMesh) }; } catch (e) {};
+try { let fnprepatch_520 = AnimationBlueprintLibrary.prototype.GetBonePosesForFrame;AnimationBlueprintLibrary.prototype.GetBonePosesForFrame = function (AnimationSequence, BoneNames, Frame, bExtractRootMotion, Poses, PreviewMesh = undefined) { return fnprepatch_520.call(this, AnimationSequence, BoneNames, Frame, bExtractRootMotion, Poses, PreviewMesh) }; } catch (e) {};
+try { let fnprepatch_521 = AnimationBlueprintLibrary.prototype.AddCurve;AnimationBlueprintLibrary.prototype.AddCurve = function (AnimationSequence, CurveName, CurveType = "RCT_Float", bMetaDataCurve = false) { return fnprepatch_521.call(this, AnimationSequence, CurveName, CurveType, bMetaDataCurve) }; } catch (e) {};
+try { let fnprepatch_522 = AnimationBlueprintLibrary.prototype.AddAnimationNotifyTrack;AnimationBlueprintLibrary.prototype.AddAnimationNotifyTrack = function (AnimationSequence, NotifyTrackName, TrackColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_522.call(this, AnimationSequence, NotifyTrackName, TrackColor) }; } catch (e) {};
+try { let fnprepatch_523 = MagicLeapHandTrackingFunctionLibrary.prototype.SetConfiguration;MagicLeapHandTrackingFunctionLibrary.prototype.SetConfiguration = function (StaticGesturesToActivate, KeypointsFilterLevel = "NoFilter", GestureFilterLevel = "NoFilter", HandSwitchingFilterLevel = "NoFilter", bTrackingEnabled = true) { return fnprepatch_523.call(this, StaticGesturesToActivate, KeypointsFilterLevel, GestureFilterLevel, HandSwitchingFilterLevel, bTrackingEnabled) }; } catch (e) {};
+try { let fnprepatch_524 = AchievementWriteCallbackProxy.prototype.WriteAchievementProgress;AchievementWriteCallbackProxy.prototype.WriteAchievementProgress = function (WorldContextObject, PlayerController, AchievementName, Progress = 100, UserTag = 0) { return fnprepatch_524.call(this, WorldContextObject, PlayerController, AchievementName, Progress, UserTag) }; } catch (e) {};
 try { InAppPurchaseQueryCallbackProxy.prototype.ReadInAppPurchaseInformation = InAppPurchaseQueryCallbackProxy.prototype.CreateProxyObjectForInAppPurchaseQuery; } catch (e) {};
 try { InAppPurchaseQueryCallbackProxy.ReadInAppPurchaseInformation = InAppPurchaseQueryCallbackProxy.CreateProxyObjectForInAppPurchaseQuery; } catch (e) {};
 try { LeaderboardQueryCallbackProxy.prototype.ReadLeaderboardInteger = LeaderboardQueryCallbackProxy.prototype.CreateProxyObjectForIntQuery; } catch (e) {};
 try { LeaderboardQueryCallbackProxy.ReadLeaderboardInteger = LeaderboardQueryCallbackProxy.CreateProxyObjectForIntQuery; } catch (e) {};
-try { let fnprepatch_436 = OculusFunctionLibrary.prototype.HideLoadingSplashScreen;OculusFunctionLibrary.prototype.HideLoadingSplashScreen = function (bClear = false) { return fnprepatch_436.call(this, bClear) }; } catch (e) {};
-try { let fnprepatch_437 = OculusFunctionLibrary.prototype.GetRawSensorData;OculusFunctionLibrary.prototype.GetRawSensorData = function (AngularAcceleration, LinearAcceleration, AngularVelocity, LinearVelocity, TimeInSeconds, DeviceType = "None") { return fnprepatch_437.call(this, AngularAcceleration, LinearAcceleration, AngularVelocity, LinearVelocity, TimeInSeconds, DeviceType) }; } catch (e) {};
-try { let fnprepatch_438 = OculusFunctionLibrary.prototype.GetPose;OculusFunctionLibrary.prototype.GetPose = function (DeviceRotation, DevicePosition, NeckPosition, bUseOrienationForPlayerCamera = false, bUsePositionForPlayerCamera = false, PositionScale) { return fnprepatch_438.call(this, DeviceRotation, DevicePosition, NeckPosition, bUseOrienationForPlayerCamera, bUsePositionForPlayerCamera, PositionScale) }; } catch (e) {};
-try { let fnprepatch_439 = OculusFunctionLibrary.prototype.AddLoadingSplashScreen;OculusFunctionLibrary.prototype.AddLoadingSplashScreen = function (Texture, TranslationInMeters, Rotation, SizeInMeters = {"X":1,"Y":1}, DeltaRotation, bClearBeforeAdd = false) { return fnprepatch_439.call(this, Texture, TranslationInMeters, Rotation, SizeInMeters, DeltaRotation, bClearBeforeAdd) }; } catch (e) {};
+try { let fnprepatch_525 = OculusFunctionLibrary.prototype.HideLoadingSplashScreen;OculusFunctionLibrary.prototype.HideLoadingSplashScreen = function (bClear = false) { return fnprepatch_525.call(this, bClear) }; } catch (e) {};
+try { let fnprepatch_526 = OculusFunctionLibrary.prototype.GetRawSensorData;OculusFunctionLibrary.prototype.GetRawSensorData = function (AngularAcceleration, LinearAcceleration, AngularVelocity, LinearVelocity, TimeInSeconds, DeviceType = "None") { return fnprepatch_526.call(this, AngularAcceleration, LinearAcceleration, AngularVelocity, LinearVelocity, TimeInSeconds, DeviceType) }; } catch (e) {};
+try { let fnprepatch_527 = OculusFunctionLibrary.prototype.GetPose;OculusFunctionLibrary.prototype.GetPose = function (DeviceRotation, DevicePosition, NeckPosition, bUseOrienationForPlayerCamera = false, bUsePositionForPlayerCamera = false, PositionScale) { return fnprepatch_527.call(this, DeviceRotation, DevicePosition, NeckPosition, bUseOrienationForPlayerCamera, bUsePositionForPlayerCamera, PositionScale) }; } catch (e) {};
+try { let fnprepatch_528 = OculusFunctionLibrary.prototype.AddLoadingSplashScreen;OculusFunctionLibrary.prototype.AddLoadingSplashScreen = function (Texture, TranslationInMeters, Rotation, SizeInMeters = {"X":1,"Y":1}, DeltaRotation, bClearBeforeAdd = false) { return fnprepatch_528.call(this, Texture, TranslationInMeters, Rotation, SizeInMeters, DeltaRotation, bClearBeforeAdd) }; } catch (e) {};
 try { ProceduralMeshComponent.prototype.UpdateMeshSection = ProceduralMeshComponent.prototype.UpdateMeshSection_LinearColor; } catch (e) {};
 try { ProceduralMeshComponent.prototype.UpdateMeshSectionFColor = ProceduralMeshComponent.prototype.UpdateMeshSection; } catch (e) {};
 try { ProceduralMeshComponent.prototype.CreateMeshSection = ProceduralMeshComponent.prototype.CreateMeshSection_LinearColor; } catch (e) {};
 try { ProceduralMeshComponent.prototype.CreateMeshSectionFColor = ProceduralMeshComponent.prototype.CreateMeshSection; } catch (e) {};
-try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetNiagaraVariableVec4; } catch (e) {};
-try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetNiagaraVariableVec3; } catch (e) {};
-try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetNiagaraVariableVec2; } catch (e) {};
-try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetNiagaraVariableFloat; } catch (e) {};
-try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetNiagaraVariableBool; } catch (e) {};
-try { let fnprepatch_440 = NiagaraFunctionLibrary.prototype.SpawnEffectAtLocation;NiagaraFunctionLibrary.prototype.SpawnEffectAtLocation = function (WorldContextObject, EffectTemplate, Location, Rotation, bAutoDestroy = true) { return fnprepatch_440.call(this, WorldContextObject, EffectTemplate, Location, Rotation, bAutoDestroy) }; } catch (e) {};
-try { let fnprepatch_441 = AssetTools.prototype.CreateAssetWithDialog;AssetTools.prototype.CreateAssetWithDialog = function (AssetName, PackagePath, AssetClass, Factory, CallingContext = "None") { return fnprepatch_441.call(this, AssetName, PackagePath, AssetClass, Factory, CallingContext) }; } catch (e) {};
-try { let fnprepatch_442 = AssetTools.prototype.CreateAsset;AssetTools.prototype.CreateAsset = function (AssetName, PackagePath, AssetClass, Factory, CallingContext = "None") { return fnprepatch_442.call(this, AssetName, PackagePath, AssetClass, Factory, CallingContext) }; } catch (e) {};
-try { let fnprepatch_443 = AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForRendering;AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForRendering = function (Tolerance = "Low", Delay = 0.20000000298023224) { return fnprepatch_443.call(this, Tolerance, Delay) }; } catch (e) {};
-try { let fnprepatch_444 = AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForGameplay;AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForGameplay = function (Tolerance = "Low", Delay = 0.20000000298023224) { return fnprepatch_444.call(this, Tolerance, Delay) }; } catch (e) {};
-try { let fnprepatch_445 = FunctionalTest.prototype.AssertEqual_Vector;FunctionalTest.prototype.AssertEqual_Vector = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject) { return fnprepatch_445.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
-try { let fnprepatch_446 = FunctionalTest.prototype.AssertEqual_Float;FunctionalTest.prototype.AssertEqual_Float = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject) { return fnprepatch_446.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
+try { let fnprepatch_529 = AssetTools.prototype.RenameAssetsWithDialog;AssetTools.prototype.RenameAssetsWithDialog = function (AssetsAndNames, bAutoCheckout = false) { return fnprepatch_529.call(this, AssetsAndNames, bAutoCheckout) }; } catch (e) {};
+try { let fnprepatch_530 = AssetTools.prototype.CreateAssetWithDialog;AssetTools.prototype.CreateAssetWithDialog = function (AssetName, PackagePath, AssetClass, Factory, CallingContext = "None") { return fnprepatch_530.call(this, AssetName, PackagePath, AssetClass, Factory, CallingContext) }; } catch (e) {};
+try { let fnprepatch_531 = AssetTools.prototype.CreateAsset;AssetTools.prototype.CreateAsset = function (AssetName, PackagePath, AssetClass, Factory, CallingContext = "None") { return fnprepatch_531.call(this, AssetName, PackagePath, AssetClass, Factory, CallingContext) }; } catch (e) {};
+try { let fnprepatch_532 = AutomationBlueprintFunctionLibrary.prototype.SetScalabilityQualityLevelRelativeToMax;AutomationBlueprintFunctionLibrary.prototype.SetScalabilityQualityLevelRelativeToMax = function (WorldContextObject, Value = 1) { return fnprepatch_532.call(this, WorldContextObject, Value) }; } catch (e) {};
+try { let fnprepatch_533 = AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForRendering;AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForRendering = function (Tolerance = "Low", Delay = 0.20000000298023224) { return fnprepatch_533.call(this, Tolerance, Delay) }; } catch (e) {};
+try { let fnprepatch_534 = AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForGameplay;AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForGameplay = function (Tolerance = "Low", Delay = 0.20000000298023224) { return fnprepatch_534.call(this, Tolerance, Delay) }; } catch (e) {};
+try { let fnprepatch_535 = FunctionalTest.prototype.AssertValue_Int;FunctionalTest.prototype.AssertValue_Int = function (Actual, ShouldBe, Expected, What, ContextObject = undefined) { return fnprepatch_535.call(this, Actual, ShouldBe, Expected, What, ContextObject) }; } catch (e) {};
+try { let fnprepatch_536 = FunctionalTest.prototype.AssertValue_Float;FunctionalTest.prototype.AssertValue_Float = function (Actual, ShouldBe, Expected, What, ContextObject = undefined) { return fnprepatch_536.call(this, Actual, ShouldBe, Expected, What, ContextObject) }; } catch (e) {};
+try { let fnprepatch_537 = FunctionalTest.prototype.AssertValue_DateTime;FunctionalTest.prototype.AssertValue_DateTime = function (Actual, ShouldBe, Expected, What, ContextObject = undefined) { return fnprepatch_537.call(this, Actual, ShouldBe, Expected, What, ContextObject) }; } catch (e) {};
+try { let fnprepatch_538 = FunctionalTest.prototype.AssertTrue;FunctionalTest.prototype.AssertTrue = function (Condition, Message, ContextObject = undefined) { return fnprepatch_538.call(this, Condition, Message, ContextObject) }; } catch (e) {};
+try { let fnprepatch_539 = FunctionalTest.prototype.AssertNotEqual_Vector;FunctionalTest.prototype.AssertNotEqual_Vector = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_539.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
+try { let fnprepatch_540 = FunctionalTest.prototype.AssertNotEqual_Transform;FunctionalTest.prototype.AssertNotEqual_Transform = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_540.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
+try { let fnprepatch_541 = FunctionalTest.prototype.AssertNotEqual_String;FunctionalTest.prototype.AssertNotEqual_String = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_541.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
+try { let fnprepatch_542 = FunctionalTest.prototype.AssertNotEqual_Rotator;FunctionalTest.prototype.AssertNotEqual_Rotator = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_542.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
+try { let fnprepatch_543 = FunctionalTest.prototype.AssertIsValid;FunctionalTest.prototype.AssertIsValid = function (Object, Message, ContextObject = undefined) { return fnprepatch_543.call(this, Object, Message, ContextObject) }; } catch (e) {};
+try { let fnprepatch_544 = FunctionalTest.prototype.AssertFalse;FunctionalTest.prototype.AssertFalse = function (Condition, Message, ContextObject = undefined) { return fnprepatch_544.call(this, Condition, Message, ContextObject) }; } catch (e) {};
+try { let fnprepatch_545 = FunctionalTest.prototype.AssertEqual_Vector;FunctionalTest.prototype.AssertEqual_Vector = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_545.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
+try { let fnprepatch_546 = FunctionalTest.prototype.AssertEqual_Transform;FunctionalTest.prototype.AssertEqual_Transform = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_546.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
+try { let fnprepatch_547 = FunctionalTest.prototype.AssertEqual_TraceQueryResults;FunctionalTest.prototype.AssertEqual_TraceQueryResults = function (Actual, Expected, What, ContextObject = undefined) { return fnprepatch_547.call(this, Actual, Expected, What, ContextObject) }; } catch (e) {};
+try { let fnprepatch_548 = FunctionalTest.prototype.AssertEqual_String;FunctionalTest.prototype.AssertEqual_String = function (Actual, Expected, What, ContextObject = undefined) { return fnprepatch_548.call(this, Actual, Expected, What, ContextObject) }; } catch (e) {};
+try { let fnprepatch_549 = FunctionalTest.prototype.AssertEqual_Rotator;FunctionalTest.prototype.AssertEqual_Rotator = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_549.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
+try { let fnprepatch_550 = FunctionalTest.prototype.AssertEqual_Name;FunctionalTest.prototype.AssertEqual_Name = function (Actual, Expected, What, ContextObject = undefined) { return fnprepatch_550.call(this, Actual, Expected, What, ContextObject) }; } catch (e) {};
+try { let fnprepatch_551 = FunctionalTest.prototype.AssertEqual_Int;FunctionalTest.prototype.AssertEqual_Int = function (Actual, Expected, What, ContextObject = undefined) { return fnprepatch_551.call(this, Actual, Expected, What, ContextObject) }; } catch (e) {};
+try { let fnprepatch_552 = FunctionalTest.prototype.AssertEqual_Float;FunctionalTest.prototype.AssertEqual_Float = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_552.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
+try { let fnprepatch_553 = FunctionalTest.prototype.AssertEqual_Bool;FunctionalTest.prototype.AssertEqual_Bool = function (Actual, Expected, What, ContextObject = undefined) { return fnprepatch_553.call(this, Actual, Expected, What, ContextObject) }; } catch (e) {};
 try { FunctionalTest.prototype.StartTest = FunctionalTest.prototype.ReceiveStartTest; } catch (e) {};
 try { FunctionalTest.prototype.PrepareTest = FunctionalTest.prototype.ReceivePrepareTest; } catch (e) {};
 try { FunctionalTest.prototype.AssertValue = FunctionalTest.prototype.AssertValue_Int; } catch (e) {};
@@ -1412,47 +1625,77 @@ try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqua
 try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Int; } catch (e) {};
 try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Float; } catch (e) {};
 try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Bool; } catch (e) {};
-try { let fnprepatch_447 = FunctionalTestingManager.prototype.RunAllFunctionalTests;FunctionalTestingManager.prototype.RunAllFunctionalTests = function (WorldContextObject, bNewLog = true, bRunLooped = false, bWaitForNavigationBuildFinish = true, FailedTestsReproString) { return fnprepatch_447.call(this, WorldContextObject, bNewLog, bRunLooped, bWaitForNavigationBuildFinish, FailedTestsReproString) }; } catch (e) {};
-try { let fnprepatch_448 = FunctionalTestUtilityLibrary.prototype.TraceChannelTestUtil;FunctionalTestUtilityLibrary.prototype.TraceChannelTestUtil = function (WorldContextObject, BatchOptions, Start, End, SphereCapsuleRadius, CapsuleHalfHeight, BoxHalfSize, Orientation, TraceChannel, ObjectTypes, ProfileName, bTraceComplex, ActorsToIgnore, bIgnoreSelf, DrawDebugType, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_448.call(this, WorldContextObject, BatchOptions, Start, End, SphereCapsuleRadius, CapsuleHalfHeight, BoxHalfSize, Orientation, TraceChannel, ObjectTypes, ProfileName, bTraceComplex, ActorsToIgnore, bIgnoreSelf, DrawDebugType, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
-try { let fnprepatch_449 = MediaPlayer.prototype.GetReverseRates;MediaPlayer.prototype.GetReverseRates = function (Unthinned = true) { return fnprepatch_449.call(this, Unthinned) }; } catch (e) {};
-try { let fnprepatch_450 = MediaPlayer.prototype.GetForwardRates;MediaPlayer.prototype.GetForwardRates = function (Unthinned = true) { return fnprepatch_450.call(this, Unthinned) }; } catch (e) {};
-try { let fnprepatch_451 = PaperFlipbook.prototype.GetSpriteAtTime;PaperFlipbook.prototype.GetSpriteAtTime = function (Time, bClampToEnds = false) { return fnprepatch_451.call(this, Time, bClampToEnds) }; } catch (e) {};
-try { let fnprepatch_452 = PaperFlipbook.prototype.GetKeyFrameIndexAtTime;PaperFlipbook.prototype.GetKeyFrameIndexAtTime = function (Time, bClampToEnds = false) { return fnprepatch_452.call(this, Time, bClampToEnds) }; } catch (e) {};
-try { let fnprepatch_453 = PaperGroupedSpriteComponent.prototype.UpdateInstanceTransform;PaperGroupedSpriteComponent.prototype.UpdateInstanceTransform = function (InstanceIndex, NewInstanceTransform, bWorldSpace = false, bMarkRenderStateDirty = true, bTeleport = false) { return fnprepatch_453.call(this, InstanceIndex, NewInstanceTransform, bWorldSpace, bMarkRenderStateDirty, bTeleport) }; } catch (e) {};
-try { let fnprepatch_454 = PaperGroupedSpriteComponent.prototype.UpdateInstanceColor;PaperGroupedSpriteComponent.prototype.UpdateInstanceColor = function (InstanceIndex, NewInstanceColor, bMarkRenderStateDirty = true) { return fnprepatch_454.call(this, InstanceIndex, NewInstanceColor, bMarkRenderStateDirty) }; } catch (e) {};
-try { let fnprepatch_455 = PaperGroupedSpriteComponent.prototype.GetInstanceTransform;PaperGroupedSpriteComponent.prototype.GetInstanceTransform = function (InstanceIndex, OutInstanceTransform, bWorldSpace = false) { return fnprepatch_455.call(this, InstanceIndex, OutInstanceTransform, bWorldSpace) }; } catch (e) {};
-try { let fnprepatch_456 = PaperGroupedSpriteComponent.prototype.AddInstance;PaperGroupedSpriteComponent.prototype.AddInstance = function (Transform, Sprite, bWorldSpace = false, Color = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_456.call(this, Transform, Sprite, bWorldSpace, Color) }; } catch (e) {};
-try { let fnprepatch_457 = PaperTileMapComponent.prototype.SetLayerColor;PaperTileMapComponent.prototype.SetLayerColor = function (NewColor, Layer = 0) { return fnprepatch_457.call(this, NewColor, Layer) }; } catch (e) {};
-try { let fnprepatch_458 = PaperTileMapComponent.prototype.SetLayerCollision;PaperTileMapComponent.prototype.SetLayerCollision = function (Layer = 0, bHasCollision = true, bOverrideThickness = true, CustomThickness = 50, bOverrideOffset = false, CustomOffset = 0, bRebuildCollision = true) { return fnprepatch_458.call(this, Layer, bHasCollision, bOverrideThickness, CustomThickness, bOverrideOffset, CustomOffset, bRebuildCollision) }; } catch (e) {};
-try { let fnprepatch_459 = PaperTileMapComponent.prototype.SetDefaultCollisionThickness;PaperTileMapComponent.prototype.SetDefaultCollisionThickness = function (Thickness, bRebuildCollision = true) { return fnprepatch_459.call(this, Thickness, bRebuildCollision) }; } catch (e) {};
-try { let fnprepatch_460 = PaperTileMapComponent.prototype.GetTilePolygon;PaperTileMapComponent.prototype.GetTilePolygon = function (TileX, TileY, Points, LayerIndex = 0, bWorldSpace = false) { return fnprepatch_460.call(this, TileX, TileY, Points, LayerIndex, bWorldSpace) }; } catch (e) {};
-try { let fnprepatch_461 = PaperTileMapComponent.prototype.GetTileCornerPosition;PaperTileMapComponent.prototype.GetTileCornerPosition = function (TileX, TileY, LayerIndex = 0, bWorldSpace = false) { return fnprepatch_461.call(this, TileX, TileY, LayerIndex, bWorldSpace) }; } catch (e) {};
-try { let fnprepatch_462 = PaperTileMapComponent.prototype.GetTileCenterPosition;PaperTileMapComponent.prototype.GetTileCenterPosition = function (TileX, TileY, LayerIndex = 0, bWorldSpace = false) { return fnprepatch_462.call(this, TileX, TileY, LayerIndex, bWorldSpace) }; } catch (e) {};
-try { let fnprepatch_463 = PaperTileMapComponent.prototype.GetLayerColor;PaperTileMapComponent.prototype.GetLayerColor = function (Layer = 0) { return fnprepatch_463.call(this, Layer) }; } catch (e) {};
-try { let fnprepatch_464 = PaperTileMapComponent.prototype.CreateNewTileMap;PaperTileMapComponent.prototype.CreateNewTileMap = function (MapWidth = 4, MapHeight = 4, TileWidth = 32, TileHeight = 32, PixelsPerUnrealUnit = 1, bCreateLayer = true) { return fnprepatch_464.call(this, MapWidth, MapHeight, TileWidth, TileHeight, PixelsPerUnrealUnit, bCreateLayer) }; } catch (e) {};
-try { let fnprepatch_465 = JavascriptComponent.prototype.ResolveAsset;JavascriptComponent.prototype.ResolveAsset = function (Name, bTryLoad = true) { return fnprepatch_465.call(this, Name, bTryLoad) }; } catch (e) {};
-try { let fnprepatch_466 = JavascriptContext.prototype.SetAsDebugContext;JavascriptContext.prototype.SetAsDebugContext = function (InPort = 5858) { return fnprepatch_466.call(this, InPort) }; } catch (e) {};
-try { let fnprepatch_467 = JavascriptContext.prototype.RunScript;JavascriptContext.prototype.RunScript = function (Script, bOutput = true) { return fnprepatch_467.call(this, Script, bOutput) }; } catch (e) {};
-try { let fnprepatch_468 = JavascriptContext.prototype.CreateInspector;JavascriptContext.prototype.CreateInspector = function (Port = 9229) { return fnprepatch_468.call(this, Port) }; } catch (e) {};
-try { let fnprepatch_469 = JavascriptLibrary.prototype.DeleteFile;JavascriptLibrary.prototype.DeleteFile = function (Filename, ReadOnly = false) { return fnprepatch_469.call(this, Filename, ReadOnly) }; } catch (e) {};
-try { let fnprepatch_470 = JavascriptLibrary.prototype.CreateSocket;JavascriptLibrary.prototype.CreateSocket = function (SocketType, Description, bForceUDP = false) { return fnprepatch_470.call(this, SocketType, Description, bForceUDP) }; } catch (e) {};
-try { let fnprepatch_471 = JavascriptProcess.prototype.Terminate;JavascriptProcess.prototype.Terminate = function (KillTree = false) { return fnprepatch_471.call(this, KillTree) }; } catch (e) {};
-try { let fnprepatch_472 = JavascriptUMGLibrary.prototype.AddWindow;JavascriptUMGLibrary.prototype.AddWindow = function (NewWindow, bShowImmediately = true) { return fnprepatch_472.call(this, NewWindow, bShowImmediately) }; } catch (e) {};
+try { let fnprepatch_554 = FunctionalTestingManager.prototype.RunAllFunctionalTests;FunctionalTestingManager.prototype.RunAllFunctionalTests = function (WorldContextObject, bNewLog = true, bRunLooped = false, FailedTestsReproString) { return fnprepatch_554.call(this, WorldContextObject, bNewLog, bRunLooped, FailedTestsReproString) }; } catch (e) {};
+try { let fnprepatch_555 = FunctionalTestUtilityLibrary.prototype.TraceChannelTestUtil;FunctionalTestUtilityLibrary.prototype.TraceChannelTestUtil = function (WorldContextObject, BatchOptions, Start, End, SphereCapsuleRadius, CapsuleHalfHeight, BoxHalfSize, Orientation, TraceChannel, ObjectTypes, ProfileName, bTraceComplex, ActorsToIgnore, bIgnoreSelf, DrawDebugType, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_555.call(this, WorldContextObject, BatchOptions, Start, End, SphereCapsuleRadius, CapsuleHalfHeight, BoxHalfSize, Orientation, TraceChannel, ObjectTypes, ProfileName, bTraceComplex, ActorsToIgnore, bIgnoreSelf, DrawDebugType, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
+try { let fnprepatch_556 = MediaBlueprintFunctionLibrary.prototype.EnumerateWebcamCaptureDevices;MediaBlueprintFunctionLibrary.prototype.EnumerateWebcamCaptureDevices = function (OutDevices, Filter = -1) { return fnprepatch_556.call(this, OutDevices, Filter) }; } catch (e) {};
+try { let fnprepatch_557 = MediaBlueprintFunctionLibrary.prototype.EnumerateVideoCaptureDevices;MediaBlueprintFunctionLibrary.prototype.EnumerateVideoCaptureDevices = function (OutDevices, Filter = -1) { return fnprepatch_557.call(this, OutDevices, Filter) }; } catch (e) {};
+try { let fnprepatch_558 = MediaBlueprintFunctionLibrary.prototype.EnumerateAudioCaptureDevices;MediaBlueprintFunctionLibrary.prototype.EnumerateAudioCaptureDevices = function (OutDevices, Filter = -1) { return fnprepatch_558.call(this, OutDevices, Filter) }; } catch (e) {};
+try { MediaSoundComponent.prototype.GetAttenuationSettingsToApply = MediaSoundComponent.prototype.BP_GetAttenuationSettingsToApply; } catch (e) {};
+try { let fnprepatch_559 = PaperFlipbook.prototype.GetSpriteAtTime;PaperFlipbook.prototype.GetSpriteAtTime = function (Time, bClampToEnds = false) { return fnprepatch_559.call(this, Time, bClampToEnds) }; } catch (e) {};
+try { let fnprepatch_560 = PaperFlipbook.prototype.GetKeyFrameIndexAtTime;PaperFlipbook.prototype.GetKeyFrameIndexAtTime = function (Time, bClampToEnds = false) { return fnprepatch_560.call(this, Time, bClampToEnds) }; } catch (e) {};
+try { let fnprepatch_561 = PaperGroupedSpriteComponent.prototype.UpdateInstanceTransform;PaperGroupedSpriteComponent.prototype.UpdateInstanceTransform = function (InstanceIndex, NewInstanceTransform, bWorldSpace = false, bMarkRenderStateDirty = true, bTeleport = false) { return fnprepatch_561.call(this, InstanceIndex, NewInstanceTransform, bWorldSpace, bMarkRenderStateDirty, bTeleport) }; } catch (e) {};
+try { let fnprepatch_562 = PaperGroupedSpriteComponent.prototype.UpdateInstanceColor;PaperGroupedSpriteComponent.prototype.UpdateInstanceColor = function (InstanceIndex, NewInstanceColor, bMarkRenderStateDirty = true) { return fnprepatch_562.call(this, InstanceIndex, NewInstanceColor, bMarkRenderStateDirty) }; } catch (e) {};
+try { let fnprepatch_563 = PaperGroupedSpriteComponent.prototype.GetInstanceTransform;PaperGroupedSpriteComponent.prototype.GetInstanceTransform = function (InstanceIndex, OutInstanceTransform, bWorldSpace = false) { return fnprepatch_563.call(this, InstanceIndex, OutInstanceTransform, bWorldSpace) }; } catch (e) {};
+try { let fnprepatch_564 = PaperGroupedSpriteComponent.prototype.AddInstance;PaperGroupedSpriteComponent.prototype.AddInstance = function (Transform, Sprite, bWorldSpace = false, Color = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_564.call(this, Transform, Sprite, bWorldSpace, Color) }; } catch (e) {};
+try { let fnprepatch_565 = PaperTileMapComponent.prototype.SetLayerColor;PaperTileMapComponent.prototype.SetLayerColor = function (NewColor, Layer = 0) { return fnprepatch_565.call(this, NewColor, Layer) }; } catch (e) {};
+try { let fnprepatch_566 = PaperTileMapComponent.prototype.SetLayerCollision;PaperTileMapComponent.prototype.SetLayerCollision = function (Layer = 0, bHasCollision = true, bOverrideThickness = true, CustomThickness = 50, bOverrideOffset = false, CustomOffset = 0, bRebuildCollision = true) { return fnprepatch_566.call(this, Layer, bHasCollision, bOverrideThickness, CustomThickness, bOverrideOffset, CustomOffset, bRebuildCollision) }; } catch (e) {};
+try { let fnprepatch_567 = PaperTileMapComponent.prototype.SetDefaultCollisionThickness;PaperTileMapComponent.prototype.SetDefaultCollisionThickness = function (Thickness, bRebuildCollision = true) { return fnprepatch_567.call(this, Thickness, bRebuildCollision) }; } catch (e) {};
+try { let fnprepatch_568 = PaperTileMapComponent.prototype.GetTilePolygon;PaperTileMapComponent.prototype.GetTilePolygon = function (TileX, TileY, Points, LayerIndex = 0, bWorldSpace = false) { return fnprepatch_568.call(this, TileX, TileY, Points, LayerIndex, bWorldSpace) }; } catch (e) {};
+try { let fnprepatch_569 = PaperTileMapComponent.prototype.GetTileCornerPosition;PaperTileMapComponent.prototype.GetTileCornerPosition = function (TileX, TileY, LayerIndex = 0, bWorldSpace = false) { return fnprepatch_569.call(this, TileX, TileY, LayerIndex, bWorldSpace) }; } catch (e) {};
+try { let fnprepatch_570 = PaperTileMapComponent.prototype.GetTileCenterPosition;PaperTileMapComponent.prototype.GetTileCenterPosition = function (TileX, TileY, LayerIndex = 0, bWorldSpace = false) { return fnprepatch_570.call(this, TileX, TileY, LayerIndex, bWorldSpace) }; } catch (e) {};
+try { let fnprepatch_571 = PaperTileMapComponent.prototype.GetLayerColor;PaperTileMapComponent.prototype.GetLayerColor = function (Layer = 0) { return fnprepatch_571.call(this, Layer) }; } catch (e) {};
+try { let fnprepatch_572 = PaperTileMapComponent.prototype.CreateNewTileMap;PaperTileMapComponent.prototype.CreateNewTileMap = function (MapWidth = 4, MapHeight = 4, TileWidth = 32, TileHeight = 32, PixelsPerUnrealUnit = 1, bCreateLayer = true) { return fnprepatch_572.call(this, MapWidth, MapHeight, TileWidth, TileHeight, PixelsPerUnrealUnit, bCreateLayer) }; } catch (e) {};
+try { let fnprepatch_573 = JavascriptComponent.prototype.ResolveAsset;JavascriptComponent.prototype.ResolveAsset = function (Name, bTryLoad = true) { return fnprepatch_573.call(this, Name, bTryLoad) }; } catch (e) {};
+try { let fnprepatch_574 = JavascriptContext.prototype.SetAsDebugContext;JavascriptContext.prototype.SetAsDebugContext = function (InPort = 5858) { return fnprepatch_574.call(this, InPort) }; } catch (e) {};
+try { let fnprepatch_575 = JavascriptContext.prototype.RunScript;JavascriptContext.prototype.RunScript = function (Script, bOutput = true) { return fnprepatch_575.call(this, Script, bOutput) }; } catch (e) {};
+try { let fnprepatch_576 = JavascriptContext.prototype.CreateInspector;JavascriptContext.prototype.CreateInspector = function (Port = 9229) { return fnprepatch_576.call(this, Port) }; } catch (e) {};
+try { let fnprepatch_577 = JavascriptLibrary.prototype.DeleteFile;JavascriptLibrary.prototype.DeleteFile = function (Filename, ReadOnly = false) { return fnprepatch_577.call(this, Filename, ReadOnly) }; } catch (e) {};
+try { let fnprepatch_578 = JavascriptLibrary.prototype.CreateSocket;JavascriptLibrary.prototype.CreateSocket = function (SocketType, Description, bForceUDP = false) { return fnprepatch_578.call(this, SocketType, Description, bForceUDP) }; } catch (e) {};
+try { let fnprepatch_579 = JavascriptProcess.prototype.Terminate;JavascriptProcess.prototype.Terminate = function (KillTree = false) { return fnprepatch_579.call(this, KillTree) }; } catch (e) {};
+try { let fnprepatch_580 = JavascriptUMGLibrary.prototype.AddWindow;JavascriptUMGLibrary.prototype.AddWindow = function (NewWindow, bShowImmediately = true) { return fnprepatch_580.call(this, NewWindow, bShowImmediately) }; } catch (e) {};
+try { let fnprepatch_581 = EditableMesh.prototype.EndModification;EditableMesh.prototype.EndModification = function (bFromUndo = false) { return fnprepatch_581.call(this, bFromUndo) }; } catch (e) {};
+try { let fnprepatch_582 = LevelVariantSetsActor.prototype.GetLevelVariantSets;LevelVariantSetsActor.prototype.GetLevelVariantSets = function (bLoad = false) { return fnprepatch_582.call(this, bLoad) }; } catch (e) {};
+try { let fnprepatch_583 = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToTIFF;AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToTIFF = function (SourceImage, bWantColor = true, bUseGpu = true, Scale = 1, Rotate = "None") { return fnprepatch_583.call(this, SourceImage, bWantColor, bUseGpu, Scale, Rotate) }; } catch (e) {};
+try { let fnprepatch_584 = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToPNG;AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToPNG = function (SourceImage, bWantColor = true, bUseGpu = true, Scale = 1, Rotate = "None") { return fnprepatch_584.call(this, SourceImage, bWantColor, bUseGpu, Scale, Rotate) }; } catch (e) {};
+try { let fnprepatch_585 = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToJPEG;AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToJPEG = function (SourceImage, Quality = 85, bWantColor = true, bUseGpu = true, Scale = 1, Rotate = "None") { return fnprepatch_585.call(this, SourceImage, Quality, bWantColor, bUseGpu, Scale, Rotate) }; } catch (e) {};
+try { let fnprepatch_586 = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToHEIF;AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToHEIF = function (SourceImage, Quality = 85, bWantColor = true, bUseGpu = true, Scale = 1, Rotate = "None") { return fnprepatch_586.call(this, SourceImage, Quality, bWantColor, bUseGpu, Scale, Rotate) }; } catch (e) {};
+try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.ConvertToTIFF = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToTIFF; } catch (e) {};
+try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.ConvertToTIFF = AppleImageUtilsBaseAsyncTaskBlueprintProxy.CreateProxyObjectForConvertToTIFF; } catch (e) {};
+try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.ConvertToPNG = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToPNG; } catch (e) {};
+try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.ConvertToPNG = AppleImageUtilsBaseAsyncTaskBlueprintProxy.CreateProxyObjectForConvertToPNG; } catch (e) {};
+try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.ConvertToJPEG = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToJPEG; } catch (e) {};
+try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.ConvertToJPEG = AppleImageUtilsBaseAsyncTaskBlueprintProxy.CreateProxyObjectForConvertToJPEG; } catch (e) {};
+try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.ConvertToHEIF = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToHEIF; } catch (e) {};
+try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.ConvertToHEIF = AppleImageUtilsBaseAsyncTaskBlueprintProxy.CreateProxyObjectForConvertToHEIF; } catch (e) {};
+try { AppleVisionDetectFacesAsyncTaskBlueprintProxy.prototype.DetectFaces = AppleVisionDetectFacesAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForDetectFaces; } catch (e) {};
+try { AppleVisionDetectFacesAsyncTaskBlueprintProxy.DetectFaces = AppleVisionDetectFacesAsyncTaskBlueprintProxy.CreateProxyObjectForDetectFaces; } catch (e) {};
+try { DropTimecodeToStringConversion.prototype.ToString = DropTimecodeToStringConversion.prototype.Conv_DropTimecodeToString; } catch (e) {};
+try { DropTimecodeToStringConversion.ToString = DropTimecodeToStringConversion.Conv_DropTimecodeToString; } catch (e) {};
+try { let fnprepatch_587 = NUTActor.prototype.UnitTravel;NUTActor.prototype.UnitTravel = function (Dest = " ") { return fnprepatch_587.call(this, Dest) }; } catch (e) {};
+try { let fnprepatch_588 = NUTActor.prototype.UnitSeamlessTravel;NUTActor.prototype.UnitSeamlessTravel = function (Dest = " ") { return fnprepatch_588.call(this, Dest) }; } catch (e) {};
 try { AndroidPermissionFunctionLibrary.prototype.CheckAndroidPermission = AndroidPermissionFunctionLibrary.prototype.CheckPermission; } catch (e) {};
 try { AndroidPermissionFunctionLibrary.CheckAndroidPermission = AndroidPermissionFunctionLibrary.CheckPermission; } catch (e) {};
 try { AndroidPermissionFunctionLibrary.prototype.RequestAndroidPermissions = AndroidPermissionFunctionLibrary.prototype.AcquirePermissions; } catch (e) {};
 try { AndroidPermissionFunctionLibrary.RequestAndroidPermissions = AndroidPermissionFunctionLibrary.AcquirePermissions; } catch (e) {};
-try { let fnprepatch_473 = CableComponent.prototype.SetAttachEndTo;CableComponent.prototype.SetAttachEndTo = function (Actor, ComponentProperty, SocketName = "None") { return fnprepatch_473.call(this, Actor, ComponentProperty, SocketName) }; } catch (e) {};
-try { let fnprepatch_474 = SteamVRControllerLibrary.prototype.SetTouchDPadMapping;SteamVRControllerLibrary.prototype.SetTouchDPadMapping = function (NewMapping = "FaceButtons") { return fnprepatch_474.call(this, NewMapping) }; } catch (e) {};
-try { let fnprepatch_475 = JavascriptGraphEditorWidget.prototype.JumpToNode;JavascriptGraphEditorWidget.prototype.JumpToNode = function (JumpToMe, bRequestRename = false, bSelectNode = true) { return fnprepatch_475.call(this, JumpToMe, bRequestRename, bSelectNode) }; } catch (e) {};
-try { let fnprepatch_476 = JavascriptEditorEngineLibrary.prototype.SelectNone;JavascriptEditorEngineLibrary.prototype.SelectNone = function (Engine, bNoteSelectionChange, bDeselectBSPSurfs, WarnAboutManyActors = true) { return fnprepatch_476.call(this, Engine, bNoteSelectionChange, bDeselectBSPSurfs, WarnAboutManyActors) }; } catch (e) {};
-try { let fnprepatch_477 = JavascriptEditorEngineLibrary.prototype.SelectGroup;JavascriptEditorEngineLibrary.prototype.SelectGroup = function (Engine, InGroupActor, bForceSelection = false, bInSelected = true, bNotify = true) { return fnprepatch_477.call(this, Engine, InGroupActor, bForceSelection, bInSelected, bNotify) }; } catch (e) {};
-try { let fnprepatch_478 = JavascriptEditorEngineLibrary.prototype.SelectComponent;JavascriptEditorEngineLibrary.prototype.SelectComponent = function (Engine, Component, bInSelected, bNotify, bSelectEvenIfHidden = false) { return fnprepatch_478.call(this, Engine, Component, bInSelected, bNotify, bSelectEvenIfHidden) }; } catch (e) {};
-try { let fnprepatch_479 = JavascriptEditorEngineLibrary.prototype.SelectActor;JavascriptEditorEngineLibrary.prototype.SelectActor = function (Engine, Actor, bInSelected, bNotify, bSelectEvenIfHidden = false, bForceRefresh = false) { return fnprepatch_479.call(this, Engine, Actor, bInSelected, bNotify, bSelectEvenIfHidden, bForceRefresh) }; } catch (e) {};
-try { let fnprepatch_480 = JavascriptEditorEngineLibrary.prototype.CanSelectActor;JavascriptEditorEngineLibrary.prototype.CanSelectActor = function (Engine, Actor, bInSelected, bSelectEvenIfHidden = false, bWarnIfLevelLocked = false) { return fnprepatch_480.call(this, Engine, Actor, bInSelected, bSelectEvenIfHidden, bWarnIfLevelLocked) }; } catch (e) {};
-try { let fnprepatch_481 = JavascriptEditorEngineLibrary.prototype.bspBrushCSG;JavascriptEditorEngineLibrary.prototype.bspBrushCSG = function (Engine, Actor, Model, PolyFlags, BrushType, CSGOper, bBuildBounds, bMergePolys, bReplaceNULLMaterialRefs, bShowProgressBar = true) { return fnprepatch_481.call(this, Engine, Actor, Model, PolyFlags, BrushType, CSGOper, bBuildBounds, bMergePolys, bReplaceNULLMaterialRefs, bShowProgressBar) }; } catch (e) {};
-try { let fnprepatch_482 = JavascriptEditorLibrary.prototype.SetAlphamapDataFromMemory;JavascriptEditorLibrary.prototype.SetAlphamapDataFromMemory = function (LandscapeInfo, LayerInfo, MinX, MinY, MaxX, MaxY, PaintingRestriction = "None") { return fnprepatch_482.call(this, LandscapeInfo, LayerInfo, MinX, MinY, MaxX, MaxY, PaintingRestriction) }; } catch (e) {};
-try { let fnprepatch_483 = JavascriptEditorLibrary.prototype.ModifyObject;JavascriptEditorLibrary.prototype.ModifyObject = function (Object, bAlwaysMarkDirty = false) { return fnprepatch_483.call(this, Object, bAlwaysMarkDirty) }; } catch (e) {};
+try { let fnprepatch_589 = CableComponent.prototype.SetAttachEndTo;CableComponent.prototype.SetAttachEndTo = function (Actor, ComponentProperty, SocketName = "None") { return fnprepatch_589.call(this, Actor, ComponentProperty, SocketName) }; } catch (e) {};
+try { let fnprepatch_590 = SteamVRControllerLibrary.prototype.SetTouchDPadMapping;SteamVRControllerLibrary.prototype.SetTouchDPadMapping = function (NewMapping = "FaceButtons") { return fnprepatch_590.call(this, NewMapping) }; } catch (e) {};
+try { let fnprepatch_591 = JavascriptGraphEditorLibrary.prototype.NodeCreator;JavascriptGraphEditorLibrary.prototype.NodeCreator = function (Graph, bSelectNewNode = true) { return fnprepatch_591.call(this, Graph, bSelectNewNode) }; } catch (e) {};
+try { let fnprepatch_592 = JavascriptGraphEditorWidget.prototype.JumpToNode;JavascriptGraphEditorWidget.prototype.JumpToNode = function (JumpToMe, bRequestRename = false, bSelectNode = true) { return fnprepatch_592.call(this, JumpToMe, bRequestRename, bSelectNode) }; } catch (e) {};
+try { let fnprepatch_593 = JavascriptGraphEdNode.prototype.GetNumOfPins;JavascriptGraphEdNode.prototype.GetNumOfPins = function (Direction = "EGPD_MAX") { return fnprepatch_593.call(this, Direction) }; } catch (e) {};
+try { let fnprepatch_594 = JavascriptEditorEngineLibrary.prototype.SelectNone;JavascriptEditorEngineLibrary.prototype.SelectNone = function (Engine, bNoteSelectionChange, bDeselectBSPSurfs, WarnAboutManyActors = true) { return fnprepatch_594.call(this, Engine, bNoteSelectionChange, bDeselectBSPSurfs, WarnAboutManyActors) }; } catch (e) {};
+try { let fnprepatch_595 = JavascriptEditorEngineLibrary.prototype.SelectGroup;JavascriptEditorEngineLibrary.prototype.SelectGroup = function (Engine, InGroupActor, bForceSelection = false, bInSelected = true, bNotify = true) { return fnprepatch_595.call(this, Engine, InGroupActor, bForceSelection, bInSelected, bNotify) }; } catch (e) {};
+try { let fnprepatch_596 = JavascriptEditorEngineLibrary.prototype.SelectComponent;JavascriptEditorEngineLibrary.prototype.SelectComponent = function (Engine, Component, bInSelected, bNotify, bSelectEvenIfHidden = false) { return fnprepatch_596.call(this, Engine, Component, bInSelected, bNotify, bSelectEvenIfHidden) }; } catch (e) {};
+try { let fnprepatch_597 = JavascriptEditorEngineLibrary.prototype.SelectActor;JavascriptEditorEngineLibrary.prototype.SelectActor = function (Engine, Actor, bInSelected, bNotify, bSelectEvenIfHidden = false, bForceRefresh = false) { return fnprepatch_597.call(this, Engine, Actor, bInSelected, bNotify, bSelectEvenIfHidden, bForceRefresh) }; } catch (e) {};
+try { let fnprepatch_598 = JavascriptEditorEngineLibrary.prototype.CanSelectActor;JavascriptEditorEngineLibrary.prototype.CanSelectActor = function (Engine, Actor, bInSelected, bSelectEvenIfHidden = false, bWarnIfLevelLocked = false) { return fnprepatch_598.call(this, Engine, Actor, bInSelected, bSelectEvenIfHidden, bWarnIfLevelLocked) }; } catch (e) {};
+try { let fnprepatch_599 = JavascriptEditorEngineLibrary.prototype.bspBrushCSG;JavascriptEditorEngineLibrary.prototype.bspBrushCSG = function (Engine, Actor, Model, PolyFlags, BrushType, CSGOper, bBuildBounds, bMergePolys, bReplaceNULLMaterialRefs, bShowProgressBar = true) { return fnprepatch_599.call(this, Engine, Actor, Model, PolyFlags, BrushType, CSGOper, bBuildBounds, bMergePolys, bReplaceNULLMaterialRefs, bShowProgressBar) }; } catch (e) {};
+try { let fnprepatch_600 = JavascriptEditorLibrary.prototype.SetAlphamapDataFromMemory;JavascriptEditorLibrary.prototype.SetAlphamapDataFromMemory = function (LandscapeInfo, LayerInfo, MinX, MinY, MaxX, MaxY, PaintingRestriction = "None") { return fnprepatch_600.call(this, LandscapeInfo, LayerInfo, MinX, MinY, MaxX, MaxY, PaintingRestriction) }; } catch (e) {};
+try { let fnprepatch_601 = JavascriptEditorLibrary.prototype.RemoveComponentFromBlueprint;JavascriptEditorLibrary.prototype.RemoveComponentFromBlueprint = function (Blueprint, RemoveComponent, bPromoteChildren = false) { return fnprepatch_601.call(this, Blueprint, RemoveComponent, bPromoteChildren) }; } catch (e) {};
+try { let fnprepatch_602 = JavascriptEditorLibrary.prototype.ModifyObject;JavascriptEditorLibrary.prototype.ModifyObject = function (Object, bAlwaysMarkDirty = false) { return fnprepatch_602.call(this, Object, bAlwaysMarkDirty) }; } catch (e) {};
+try { let fnprepatch_603 = JavascriptEditorLibrary.prototype.GetLayerInfoByName;JavascriptEditorLibrary.prototype.GetLayerInfoByName = function (LandscapeInfo, LayerName, Owner = undefined) { return fnprepatch_603.call(this, LandscapeInfo, LayerName, Owner) }; } catch (e) {};
+try { let fnprepatch_604 = JavascriptEditorLibrary.prototype.GetAssetsByType;JavascriptEditorLibrary.prototype.GetAssetsByType = function (Types, bRecursiveClasses = true) { return fnprepatch_604.call(this, Types, bRecursiveClasses) }; } catch (e) {};
+try { let fnprepatch_605 = JavascriptEditorLibrary.prototype.DeselectAll;JavascriptEditorLibrary.prototype.DeselectAll = function (Selection, InClass = null) { return fnprepatch_605.call(this, Selection, InClass) }; } catch (e) {};
+try { let fnprepatch_606 = JavascriptEditorLibrary.prototype.Build;JavascriptEditorLibrary.prototype.Build = function (Builder, InWorld, InBrush = undefined) { return fnprepatch_606.call(this, Builder, InWorld, InBrush) }; } catch (e) {};
+try { let fnprepatch_607 = JavascriptEditorLibrary.prototype.AddComponentsToBlueprint;JavascriptEditorLibrary.prototype.AddComponentsToBlueprint = function (Blueprint, Components, bHarvesting = false, OptionalNewRootComponent = undefined, bKeepMobility = false) { return fnprepatch_607.call(this, Blueprint, Components, bHarvesting, OptionalNewRootComponent, bKeepMobility) }; } catch (e) {};
 try { Guid.prototype.ToString = Guid.prototype.Conv_GuidToString; } catch (e) {};
 try { Guid.prototype.Equal = Guid.prototype.EqualEqual_GuidGuid; } catch (e) {};
 try { Guid.prototype.IsValid = Guid.prototype.IsValid_Guid; } catch (e) {};
@@ -1478,7 +1721,8 @@ try { Vector.prototype.Ease = Vector.prototype.VEase; } catch (e) {};
 try { Vector.prototype.Lerp = Vector.prototype.VLerp; } catch (e) {};
 try { Vector.prototype.VectorLength = Vector.prototype.VSize; } catch (e) {};
 try { Vector.prototype.VectorLengthSquared = Vector.prototype.VSizeSquared; } catch (e) {};
-try { Vector.prototype.TwoBoneIK = Vector.prototype.K2_TwoBoneIK; } catch (e) {};
+try { Vector.prototype.VectorLengthXY = Vector.prototype.VSizeXY; } catch (e) {};
+try { Vector.prototype.TwoBoneIKFunction = Vector.prototype.K2_TwoBoneIK; } catch (e) {};
 try { Vector2D.prototype.ToText = Vector2D.prototype.Conv_Vector2dToText; } catch (e) {};
 try { Vector2D.prototype.ToString = Vector2D.prototype.Conv_Vector2dToString; } catch (e) {};
 try { Vector2D.prototype.ToVector = Vector2D.prototype.Conv_Vector2DToVector; } catch (e) {};
@@ -1492,6 +1736,7 @@ try { Vector2D.prototype.Vector2dLengthSquared = Vector2D.prototype.VSize2DSquar
 try { Rotator.prototype.ToText = Rotator.prototype.Conv_RotatorToText; } catch (e) {};
 try { Rotator.prototype.ToString = Rotator.prototype.Conv_RotatorToString; } catch (e) {};
 try { Rotator.prototype.CombineRotators = Rotator.prototype.ComposeRotators; } catch (e) {};
+try { Rotator.prototype.ToTransform = Rotator.prototype.Conv_RotatorToTransform; } catch (e) {};
 try { Rotator.prototype.GetRotationXVector = Rotator.prototype.Conv_RotatorToVector; } catch (e) {};
 try { Rotator.prototype.Equal = Rotator.prototype.EqualEqual_RotatorRotator; } catch (e) {};
 try { Rotator.prototype.ScaleRotator = Rotator.prototype.Multiply_RotatorFloat; } catch (e) {};
@@ -1512,13 +1757,16 @@ try { LinearColor.prototype.HSVtoRGB = LinearColor.prototype.HSVToRGB_Vector; }
 try { LinearColor.prototype.Lerp = LinearColor.prototype.LinearColorLerp; } catch (e) {};
 try { LinearColor.prototype.LerpUsingHSV = LinearColor.prototype.LinearColorLerpUsingHSV; } catch (e) {};
 try { LinearColor.prototype.RGBtoHSV = LinearColor.prototype.RGBToHSV_Vector; } catch (e) {};
+try { Matrix.prototype.ToRotator = Matrix.prototype.Conv_MatrixToRotator; } catch (e) {};
+try { Matrix.prototype.ToTransform = Matrix.prototype.Conv_MatrixToTransform; } catch (e) {};
 try { Transform.prototype.ToText = Transform.prototype.Conv_TransformToText; } catch (e) {};
 try { Transform.prototype.ToString = Transform.prototype.Conv_TransformToString; } catch (e) {};
 try { Transform.prototype.EqualTransform = Transform.prototype.EqualEqual_TransformTransform; } catch (e) {};
 try { Transform.prototype.NearlyEqual = Transform.prototype.NearlyEqual_TransformTransform; } catch (e) {};
 try { Transform.prototype.Ease = Transform.prototype.TEase; } catch (e) {};
 try { Transform.prototype.Lerp = Transform.prototype.TLerp; } catch (e) {};
-try { Transform.prototype.LookAt = Transform.prototype.K2_LookAt; } catch (e) {};
+try { Transform.prototype.Determinant = Transform.prototype.Transform_Determinant; } catch (e) {};
+try { Transform.prototype.LookAtFunction = Transform.prototype.K2_LookAt; } catch (e) {};
 try { DateTime.prototype.AsDate = DateTime.prototype.AsDate_DateTime; } catch (e) {};
 try { DateTime.prototype.AsDateTime = DateTime.prototype.AsDateTime_DateTime; } catch (e) {};
 try { DateTime.prototype.AsTime = DateTime.prototype.AsTime_DateTime; } catch (e) {};
@@ -1527,11 +1775,21 @@ try { DateTime.prototype.AsDateTime = DateTime.prototype.AsTimeZoneDateTime_Date
 try { DateTime.prototype.AsTime = DateTime.prototype.AsTimeZoneTime_DateTime; } catch (e) {};
 try { DateTime.prototype.Equal = DateTime.prototype.EqualEqual_DateTimeDateTime; } catch (e) {};
 try { DateTime.prototype.NotEqual = DateTime.prototype.NotEqual_DateTimeDateTime; } catch (e) {};
+try { FrameNumber.prototype.FrameNumbertoInteger = FrameNumber.prototype.Conv_FrameNumberToInteger; } catch (e) {};
+try { FrameRate.prototype.FrameRatetoSeconds = FrameRate.prototype.Conv_FrameRateToSeconds; } catch (e) {};
+try { FrameRate.prototype.IsValid = FrameRate.prototype.IsValid_Framerate; } catch (e) {};
+try { FrameRate.prototype.IsMultipleOf = FrameRate.prototype.IsValid_MultipleOf; } catch (e) {};
+try { FrameTime.prototype.SnapFrameTime = FrameTime.prototype.SnapFrameTimeToRate; } catch (e) {};
+try { FrameTime.prototype.TransformFrameTime = FrameTime.prototype.TransformTime; } catch (e) {};
+try { QualifiedFrameTime.prototype.QualifiedFrameTimetoSeconds = QualifiedFrameTime.prototype.Conv_QualifiedFrameTimeToSeconds; } catch (e) {};
+try { Timecode.prototype.TimecodetoString = Timecode.prototype.Conv_TimecodeToString; } catch (e) {};
 try { Timespan.prototype.AsTimespan = Timespan.prototype.AsTimespan_Timespan; } catch (e) {};
 try { Timespan.prototype.Equal = Timespan.prototype.EqualEqual_TimespanTimespan; } catch (e) {};
 try { Timespan.prototype.NotEqual = Timespan.prototype.NotEqual_TimespanTimespan; } catch (e) {};
+try { PrimaryAssetType.prototype.ToString = PrimaryAssetType.prototype.Conv_PrimaryAssetTypeToString; } catch (e) {};
 try { PrimaryAssetType.prototype.Equal = PrimaryAssetType.prototype.EqualEqual_PrimaryAssetType; } catch (e) {};
 try { PrimaryAssetType.prototype.NotEqual = PrimaryAssetType.prototype.NotEqual_PrimaryAssetType; } catch (e) {};
+try { PrimaryAssetId.prototype.ToString = PrimaryAssetId.prototype.Conv_PrimaryAssetIdToString; } catch (e) {};
 try { PrimaryAssetId.prototype.Equal = PrimaryAssetId.prototype.EqualEqual_PrimaryAssetId; } catch (e) {};
 try { PrimaryAssetId.prototype.NotEqual = PrimaryAssetId.prototype.NotEqual_PrimaryAssetId; } catch (e) {};
 try { Key.prototype.Equal = Key.prototype.EqualEqual_KeyKey; } catch (e) {};
@@ -1541,6 +1799,7 @@ try { Key.prototype.IsGamepadKey = Key.prototype.Key_IsGamepadKey; } catch (e) {
 try { Key.prototype.IsKeyboardKey = Key.prototype.Key_IsKeyboardKey; } catch (e) {};
 try { Key.prototype.IsModifierKey = Key.prototype.Key_IsModifierKey; } catch (e) {};
 try { Key.prototype.IsMouseButton = Key.prototype.Key_IsMouseButton; } catch (e) {};
+try { Key.prototype.IsValid = Key.prototype.Key_IsValid; } catch (e) {};
 try { Key.prototype.IsVectorAxis = Key.prototype.Key_IsVectorAxis; } catch (e) {};
 try { TimerHandle.prototype.Invalidate = TimerHandle.prototype.K2_InvalidateTimerHandle; } catch (e) {};
 try { TimerHandle.prototype.IsValid = TimerHandle.prototype.K2_IsValidTimerHandle; } catch (e) {};
@@ -1569,10 +1828,11 @@ try { UPointerEvent.prototype.GetUserIndex = UPointerEvent.prototype.PointerEven
 try { UPointerEvent.prototype.GetWheelDelta = UPointerEvent.prototype.PointerEvent_GetWheelDelta; } catch (e) {};
 try { UPointerEvent.prototype.IsMouseButtonDown = UPointerEvent.prototype.PointerEvent_IsMouseButtonDown; } catch (e) {};
 try { UPointerEvent.prototype.IsTouchEvent = UPointerEvent.prototype.PointerEvent_IsTouchEvent; } catch (e) {};
+try { PaintContext.prototype.DrawString = PaintContext.prototype.DrawText; } catch (e) {};
+try { PaintContext.prototype.DrawText = PaintContext.prototype.DrawTextFormatted; } catch (e) {};
 try { InputChord.prototype.Equal = InputChord.prototype.EqualEqual_InputChordInputChord; } catch (e) {};
 try { GameplayTag.prototype.Equal = GameplayTag.prototype.EqualEqual_GameplayTag; } catch (e) {};
 try { GameplayTag.prototype.NotEqual = GameplayTag.prototype.NotEqual_GameplayTag; } catch (e) {};
 try { GameplayTagContainer.prototype.Equal = GameplayTagContainer.prototype.EqualEqual_GameplayTagContainer; } catch (e) {};
 try { GameplayTagContainer.prototype.NotEqual = GameplayTagContainer.prototype.NotEqual_GameplayTagContainer; } catch (e) {};
-try { PaintContext.prototype.DrawString = PaintContext.prototype.DrawText; } catch (e) {};
-try { PaintContext.prototype.DrawText = PaintContext.prototype.DrawTextFormatted; } catch (e) {};
+try { DropTimecode.prototype.ToString = DropTimecode.prototype.Conv_DropTimecodeToString; } catch (e) {};
diff --git a/Examples/Content/Scripts/extension-exampleWindow.js b/Examples/Content/Scripts/extension-exampleWindow.js
index 0678da5..0ed625d 100644
--- a/Examples/Content/Scripts/extension-exampleWindow.js
+++ b/Examples/Content/Scripts/extension-exampleWindow.js
@@ -281,6 +281,7 @@ function main() {
                 ),
                 $link:elem => {
                     elem.JavascriptContext = Context
+                    elem.EntryWidgetClass = JavascriptUserObjectListEntry
                     elem.alive = true
                     elem.proxy = {
                         OnSelectionChanged: item => contexts.setCurrent(item)
@@ -395,6 +396,7 @@ function main() {
                         ],
                         $link:elem => {
                             elem.JavascriptContext = Context
+                            elem.EntryWidgetClass = JavascriptUserObjectListEntry
                             elem.alive = true
                             elem.proxy = {
                                 OnDoubleClick : item => item.actions.install(),
diff --git a/Examples/Content/Scripts/extension-spiralGenerator.js b/Examples/Content/Scripts/extension-spiralGenerator.js
index 83592b8..364aac5 100644
--- a/Examples/Content/Scripts/extension-spiralGenerator.js
+++ b/Examples/Content/Scripts/extension-spiralGenerator.js
@@ -278,6 +278,7 @@ function main() {
                 },
                 $link:elem => {
                     elem.JavascriptContext = Context
+                    elem.EntryWidgetClass = JavascriptUserObjectListEntry
                     elem.proxy = {
                         OnSelectionChanged: item => {
                             data = item
diff --git a/Examples/Content/Scripts/helloUMG.js b/Examples/Content/Scripts/helloUMG.js
index 1f6fbd2..123a25f 100644
--- a/Examples/Content/Scripts/helloUMG.js
+++ b/Examples/Content/Scripts/helloUMG.js
@@ -217,6 +217,7 @@ function main() {
                                             },
                                             $link:elem => {
                                                 elem.JavascriptContext = Context
+                                                elem.EntryWidgetClass = JavascriptUserObjectListEntry
                                                 elem.proxy = {}
                                                 elem.proxy.OnSelectionChanged = (row) => {
                                                     console.log('selection')
diff --git a/Examples/Content/Scripts/typings/_part_0_ue.d.ts b/Examples/Content/Scripts/typings/_part_0_ue.d.ts
index 5621c5a..81092a1 100644
--- a/Examples/Content/Scripts/typings/_part_0_ue.d.ts
+++ b/Examples/Content/Scripts/typings/_part_0_ue.d.ts
@@ -91,8 +91,8 @@ declare class Layer extends UObject {
 	static C(Other: UObject | any): Layer;
 }
 
-declare type ETickingGroup = 'TG_PrePhysics' | 'TG_StartPhysics' | 'TG_DuringPhysics' | 'TG_EndPhysics' | 'TG_PostPhysics' | 'TG_PostUpdateWork' | 'TG_LastDemotable' | 'TG_NewlySpawned';
-declare var ETickingGroup : { TG_PrePhysics:'TG_PrePhysics',TG_StartPhysics:'TG_StartPhysics',TG_DuringPhysics:'TG_DuringPhysics',TG_EndPhysics:'TG_EndPhysics',TG_PostPhysics:'TG_PostPhysics',TG_PostUpdateWork:'TG_PostUpdateWork',TG_LastDemotable:'TG_LastDemotable',TG_NewlySpawned:'TG_NewlySpawned', };
+declare type ETickingGroup = 'TG_PrePhysics' | 'TG_StartPhysics' | 'TG_DuringPhysics' | 'TG_EndPhysics' | 'TG_PostPhysics' | 'TG_PostUpdateWork' | 'TG_LastDemotable' | 'TG_NewlySpawned' | 'TG_MAX';
+declare var ETickingGroup : { TG_PrePhysics:'TG_PrePhysics',TG_StartPhysics:'TG_StartPhysics',TG_DuringPhysics:'TG_DuringPhysics',TG_EndPhysics:'TG_EndPhysics',TG_PostPhysics:'TG_PostPhysics',TG_PostUpdateWork:'TG_PostUpdateWork',TG_LastDemotable:'TG_LastDemotable',TG_NewlySpawned:'TG_NewlySpawned',TG_MAX:'TG_MAX', };
 declare class TickFunction { 
 	TickGroup: ETickingGroup;
 	EndTickGroup: ETickingGroup;
@@ -110,8 +110,8 @@ declare class ActorTickFunction extends TickFunction {
 	static C(Other: UObject | any): ActorTickFunction;
 }
 
-declare type ENetRole = 'ROLE_None' | 'ROLE_SimulatedProxy' | 'ROLE_AutonomousProxy' | 'ROLE_Authority';
-declare var ENetRole : { ROLE_None:'ROLE_None',ROLE_SimulatedProxy:'ROLE_SimulatedProxy',ROLE_AutonomousProxy:'ROLE_AutonomousProxy',ROLE_Authority:'ROLE_Authority', };
+declare type ENetRole = 'ROLE_None' | 'ROLE_SimulatedProxy' | 'ROLE_AutonomousProxy' | 'ROLE_Authority' | 'ROLE_MAX';
+declare var ENetRole : { ROLE_None:'ROLE_None',ROLE_SimulatedProxy:'ROLE_SimulatedProxy',ROLE_AutonomousProxy:'ROLE_AutonomousProxy',ROLE_Authority:'ROLE_Authority',ROLE_MAX:'ROLE_MAX', };
 declare class Box2D { 
 	Min: Vector2D;
 	Max: Vector2D;
@@ -147,7 +147,7 @@ declare class Vector2D {
 	Vector2DInterpTo_Constant(Target: Vector2D,DeltaTime: number,InterpSpeed: number): Vector2D;
 	VSize2D(): number;
 	VSize2DSquared(): number;
-	SetSpectatorScreenModeTexturePlusEyeLayout(EyeRectMax: Vector2D,TextureRectMin: Vector2D,TextureRectMax: Vector2D,bDrawEyeFirst: boolean,bClearBlack: boolean): void;
+	SetSpectatorScreenModeTexturePlusEyeLayout(EyeRectMax: Vector2D,TextureRectMin: Vector2D,TextureRectMax: Vector2D,bDrawEyeFirst: boolean,bClearBlack: boolean,bUseAlpha: boolean): void;
 	static Conv_Vector2dToText(InVec: Vector2D): string;
 	static Conv_Vector2dToString(InVec: Vector2D): string;
 	static Add_Vector2DFloat(A: Vector2D,B: number): Vector2D;
@@ -170,11 +170,11 @@ declare class Vector2D {
 	static Vector2DInterpTo_Constant(Current: Vector2D,Target: Vector2D,DeltaTime: number,InterpSpeed: number): Vector2D;
 	static VSize2D(A: Vector2D): number;
 	static VSize2DSquared(A: Vector2D): number;
-	static SetSpectatorScreenModeTexturePlusEyeLayout(EyeRectMin: Vector2D,EyeRectMax: Vector2D,TextureRectMin: Vector2D,TextureRectMax: Vector2D,bDrawEyeFirst: boolean,bClearBlack: boolean): void;
+	static SetSpectatorScreenModeTexturePlusEyeLayout(EyeRectMin: Vector2D,EyeRectMax: Vector2D,TextureRectMin: Vector2D,TextureRectMax: Vector2D,bDrawEyeFirst: boolean,bClearBlack: boolean,bUseAlpha: boolean): void;
 	static GenerateDynamicImageResource(InDynamicBrushName: string): Vector2D;
 	static MakeVector2D(X: number,Y: number): Vector2D;
-	static NextSobolCell2D(Index: number,NumCells: number,PreviousValue: Vector2D): Vector2D;
-	static RandomSobolCell2D(Index: number,NumCells: number,Cell: Vector2D,Seed: Vector2D): Vector2D;
+	static NextSobolCell2D(index: number,NumCells: number,PreviousValue: Vector2D): Vector2D;
+	static RandomSobolCell2D(index: number,NumCells: number,Cell: Vector2D,Seed: Vector2D): Vector2D;
 	static GetMousePositionOnPlatform(): Vector2D;
 }
 
@@ -185,63 +185,91 @@ declare class ProcMeshTangent {
 	static C(Other: UObject | any): ProcMeshTangent;
 }
 
-declare type ETrackedDeviceType = 'None' | 'HMD' | 'LTouch' | 'RTouch' | 'Touch' | 'DeviceObjectZero' | 'All';
-declare var ETrackedDeviceType : { None:'None',HMD:'HMD',LTouch:'LTouch',RTouch:'RTouch',Touch:'Touch',DeviceObjectZero:'DeviceObjectZero',All:'All', };
-declare class Color { 
-	B: number;
-	G: number;
-	R: number;
-	A: number;
-	clone() : Color;
-	static C(Other: UObject | any): Color;
-	Conv_ColorToLinearColor(): LinearColor;
-	static Conv_ColorToLinearColor(InColor: Color): LinearColor;
+declare type EBoundaryType = 'Boundary_Outer' | 'Boundary_PlayArea' | 'Boundary_MAX';
+declare var EBoundaryType : { Boundary_Outer:'Boundary_Outer',Boundary_PlayArea:'Boundary_PlayArea',Boundary_MAX:'Boundary_MAX', };
+declare type ETrackedDeviceType = 'None' | 'HMD' | 'LTouch' | 'RTouch' | 'Touch' | 'DeviceObjectZero' | 'All' | 'ETrackedDeviceType_MAX';
+declare var ETrackedDeviceType : { None:'None',HMD:'HMD',LTouch:'LTouch',RTouch:'RTouch',Touch:'Touch',DeviceObjectZero:'DeviceObjectZero',All:'All',ETrackedDeviceType_MAX:'ETrackedDeviceType_MAX', };
+declare class GuardianTestResult { 
+	IsTriggering: boolean;
+	DeviceType: ETrackedDeviceType;
+	ClosestDistance: number;
+	ClosestPoint: Vector;
+	ClosestPointNormal: Vector;
+	clone() : GuardianTestResult;
+	static C(Other: UObject | any): GuardianTestResult;
+	static GetNodeGuardianIntersection(DeviceType: ETrackedDeviceType,BoundaryType: EBoundaryType): GuardianTestResult;
 }
 
-declare class LinearColor { 
-	R: number;
-	G: number;
-	B: number;
-	A: number;
-	clone() : LinearColor;
-	static C(Other: UObject | any): LinearColor;
-	Conv_ColorToText(): string;
-	Conv_ColorToString(): string;
-	BreakColor(R?: number,G?: number,B?: number,A?: number): {R: number, G: number, B: number, A: number};
-	CInterpTo(Target: LinearColor,DeltaTime: number,InterpSpeed: number): LinearColor;
-	Conv_LinearColorToColor(): Color;
-	Conv_LinearColorToVector(): Vector;
-	HSVToRGB_Vector(RGB?: LinearColor): {RGB: LinearColor};
-	LinearColorLerp(B: LinearColor,Alpha: number): LinearColor;
-	LinearColorLerpUsingHSV(B: LinearColor,Alpha: number): LinearColor;
-	Multiply_LinearColorFloat(B: number): LinearColor;
-	Multiply_LinearColorLinearColor(B: LinearColor): LinearColor;
-	RGBToHSV(H?: number,S?: number,V?: number,A?: number): {H: number, S: number, V: number, A: number};
-	RGBToHSV_Vector(HSV?: LinearColor): {HSV: LinearColor};
-	SelectColor(B: LinearColor,bPickA: boolean): LinearColor;
-	static Conv_ColorToText(InColor: LinearColor): string;
-	static Conv_ColorToString(InColor: LinearColor): string;
-	static BreakColor(InColor: LinearColor,R?: number,G?: number,B?: number,A?: number): {R: number, G: number, B: number, A: number};
-	static CInterpTo(Current: LinearColor,Target: LinearColor,DeltaTime: number,InterpSpeed: number): LinearColor;
-	static Conv_LinearColorToColor(InLinearColor: LinearColor): Color;
-	static Conv_LinearColorToVector(InLinearColor: LinearColor): Vector;
-	static HSVToRGB_Vector(HSV: LinearColor,RGB?: LinearColor): {RGB: LinearColor};
-	static LinearColorLerp(A: LinearColor,B: LinearColor,Alpha: number): LinearColor;
-	static LinearColorLerpUsingHSV(A: LinearColor,B: LinearColor,Alpha: number): LinearColor;
-	static Multiply_LinearColorFloat(A: LinearColor,B: number): LinearColor;
-	static Multiply_LinearColorLinearColor(A: LinearColor,B: LinearColor): LinearColor;
-	static RGBToHSV(InColor: LinearColor,H?: number,S?: number,V?: number,A?: number): {H: number, S: number, V: number, A: number};
-	static RGBToHSV_Vector(RGB: LinearColor,HSV?: LinearColor): {HSV: LinearColor};
-	static SelectColor(A: LinearColor,B: LinearColor,bPickA: boolean): LinearColor;
-	static Conv_FloatToLinearColor(InFloat: number): LinearColor;
-	static HSVToRGB(H: number,S: number,V: number,A: number): LinearColor;
-	static MakeColor(R: number,G: number,B: number,A: number): LinearColor;
+declare type EOrientPositionSelector = 'Orientation' | 'Position' | 'OrientationAndPosition' | 'EOrientPositionSelector_MAX';
+declare var EOrientPositionSelector : { Orientation:'Orientation',Position:'Position',OrientationAndPosition:'OrientationAndPosition',EOrientPositionSelector_MAX:'EOrientPositionSelector_MAX', };
+declare class Quat { 
+	X: number;
+	Y: number;
+	Z: number;
+	W: number;
+	clone() : Quat;
+	static C(Other: UObject | any): Quat;
+	SetBaseOrientation(): void;
+	static SetBaseOrientation(InBaseOrientation: Quat): void;
+}
+
+declare type EEasingFunc = 'Linear' | 'Step' | 'SinusoidalIn' | 'SinusoidalOut' | 'SinusoidalInOut' | 'EaseIn' | 'EaseOut' | 'EaseInOut' | 'ExpoIn' | 'ExpoOut' | 'ExpoInOut' | 'CircularIn' | 'CircularOut' | 'CircularInOut' | 'EEasingFunc_MAX';
+declare var EEasingFunc : { Linear:'Linear',Step:'Step',SinusoidalIn:'SinusoidalIn',SinusoidalOut:'SinusoidalOut',SinusoidalInOut:'SinusoidalInOut',EaseIn:'EaseIn',EaseOut:'EaseOut',EaseInOut:'EaseInOut',ExpoIn:'ExpoIn',ExpoOut:'ExpoOut',ExpoInOut:'ExpoInOut',CircularIn:'CircularIn',CircularOut:'CircularOut',CircularInOut:'CircularInOut',EEasingFunc_MAX:'EEasingFunc_MAX', };
+declare type ELerpInterpolationMode = 'QuatInterp' | 'EulerInterp' | 'DualQuatInterp' | 'ELerpInterpolationMode_MAX';
+declare var ELerpInterpolationMode : { QuatInterp:'QuatInterp',EulerInterp:'EulerInterp',DualQuatInterp:'DualQuatInterp',ELerpInterpolationMode_MAX:'ELerpInterpolationMode_MAX', };
+declare class Transform { 
+	Rotation: Quat;
+	Translation: Vector;
+	Scale3D: Vector;
+	clone() : Transform;
+	static C(Other: UObject | any): Transform;
+	Conv_TransformToText(): string;
+	Conv_TransformToString(): string;
+	BreakTransform(Location?: Vector,Rotation?: Rotator,Scale?: Vector): {Location: Vector, Rotation: Rotator, Scale: Vector};
+	ComposeTransforms(B: Transform): Transform;
+	ConvertTransformToRelative(ParentTransform: Transform): Transform;
+	EqualEqual_TransformTransform(B: Transform): boolean;
+	InverseTransformDirection(Direction: Vector): Vector;
+	InverseTransformLocation(Location: Vector): Vector;
+	InverseTransformRotation(Rotation: Rotator): Rotator;
+	InvertTransform(): Transform;
+	NearlyEqual_TransformTransform(B: Transform,LocationTolerance: number,RotationTolerance: number,Scale3DTolerance: number): boolean;
+	SelectTransform(B: Transform,bPickA: boolean): Transform;
+	TEase(B: Transform,Alpha: number,EasingFunc: EEasingFunc,BlendExp: number,Steps: number): Transform;
+	TInterpTo(Target: Transform,DeltaTime: number,InterpSpeed: number): Transform;
+	TLerp(B: Transform,Alpha: number,InterpMode: ELerpInterpolationMode): Transform;
+	Transform_Determinant(): number;
+	TransformDirection(Direction: Vector): Vector;
+	TransformLocation(Location: Vector): Vector;
+	TransformRotation(Rotation: Rotator): Rotator;
+	K2_LookAt(TargetPosition: Vector,LookAtVector: Vector,bUseUpVector: boolean,UpVector: Vector,ClampConeInDegree: number): Transform;
+	CalibrateExternalTrackingToHMD(): void;
+	UpdateExternalTrackingHMDPosition(): void;
+	static Conv_TransformToText(InTrans: Transform): string;
+	static Conv_TransformToString(InTrans: Transform): string;
+	static BreakTransform(InTransform: Transform,Location?: Vector,Rotation?: Rotator,Scale?: Vector): {Location: Vector, Rotation: Rotator, Scale: Vector};
+	static ComposeTransforms(A: Transform,B: Transform): Transform;
+	static ConvertTransformToRelative(Transform: Transform,ParentTransform: Transform): Transform;
+	static EqualEqual_TransformTransform(A: Transform,B: Transform): boolean;
+	static InverseTransformDirection(T: Transform,Direction: Vector): Vector;
+	static InverseTransformLocation(T: Transform,Location: Vector): Vector;
+	static InverseTransformRotation(T: Transform,Rotation: Rotator): Rotator;
+	static InvertTransform(T: Transform): Transform;
+	static NearlyEqual_TransformTransform(A: Transform,B: Transform,LocationTolerance: number,RotationTolerance: number,Scale3DTolerance: number): boolean;
+	static SelectTransform(A: Transform,B: Transform,bPickA: boolean): Transform;
+	static TEase(A: Transform,B: Transform,Alpha: number,EasingFunc: EEasingFunc,BlendExp: number,Steps: number): Transform;
+	static TInterpTo(Current: Transform,Target: Transform,DeltaTime: number,InterpSpeed: number): Transform;
+	static TLerp(A: Transform,B: Transform,Alpha: number,InterpMode: ELerpInterpolationMode): Transform;
+	static Transform_Determinant(Transform: Transform): number;
+	static TransformDirection(T: Transform,Direction: Vector): Vector;
+	static TransformLocation(T: Transform,Location: Vector): Vector;
+	static TransformRotation(T: Transform,Rotation: Rotator): Rotator;
+	static K2_LookAt(CurrentTransform: Transform,TargetPosition: Vector,LookAtVector: Vector,bUseUpVector: boolean,UpVector: Vector,ClampConeInDegree: number): Transform;
+	static CalibrateExternalTrackingToHMD(ExternalTrackingTransform: Transform): void;
+	static UpdateExternalTrackingHMDPosition(ExternalTrackingTransform: Transform): void;
+	static GetPlayAreaTransform(): Transform;
 }
 
-declare type EOrientPositionSelector = 'Orientation' | 'Position' | 'OrientationAndPosition';
-declare var EOrientPositionSelector : { Orientation:'Orientation',Position:'Position',OrientationAndPosition:'OrientationAndPosition', };
-declare type EEasingFunc = 'Linear' | 'Step' | 'SinusoidalIn' | 'SinusoidalOut' | 'SinusoidalInOut' | 'EaseIn' | 'EaseOut' | 'EaseInOut' | 'ExpoIn' | 'ExpoOut' | 'ExpoInOut' | 'CircularIn' | 'CircularOut' | 'CircularInOut';
-declare var EEasingFunc : { Linear:'Linear',Step:'Step',SinusoidalIn:'SinusoidalIn',SinusoidalOut:'SinusoidalOut',SinusoidalInOut:'SinusoidalInOut',EaseIn:'EaseIn',EaseOut:'EaseOut',EaseInOut:'EaseInOut',ExpoIn:'ExpoIn',ExpoOut:'ExpoOut',ExpoInOut:'ExpoInOut',CircularIn:'CircularIn',CircularOut:'CircularOut',CircularInOut:'CircularInOut', };
 declare class RandomStream { 
 	InitialSeed: number;
 	Seed: number;
@@ -275,11 +303,13 @@ declare class Rotator {
 	GetPose(DevicePosition?: Vector,NeckPosition?: Vector,bUseOrienationForPlayerCamera?: boolean,bUsePositionForPlayerCamera?: boolean,PositionScale?: Vector): {DeviceRotation: Rotator, DevicePosition: Vector, NeckPosition: Vector};
 	SetBaseRotationAndBaseOffsetInMeters(BaseOffsetInMeters: Vector,Options: EOrientPositionSelector): void;
 	SetBaseRotationAndPositionOffset(PosOffset: Vector,Options: EOrientPositionSelector): void;
+	SetBaseRotation(): void;
 	Conv_RotatorToText(): string;
 	Conv_RotatorToString(): string;
 	BreakRotator(Roll?: number,Pitch?: number,Yaw?: number): {Roll: number, Pitch: number, Yaw: number};
 	BreakRotIntoAxes(X?: Vector,Y?: Vector,Z?: Vector): {X: Vector, Y: Vector, Z: Vector};
 	ComposeRotators(B: Rotator): Rotator;
+	Conv_RotatorToTransform(): Transform;
 	Conv_RotatorToVector(): Vector;
 	EqualEqual_RotatorRotator(B: Rotator,ErrorTolerance: number): boolean;
 	GetAxes(X?: Vector,Y?: Vector,Z?: Vector): {X: Vector, Y: Vector, Z: Vector};
@@ -303,11 +333,13 @@ declare class Rotator {
 	static GetPose(DeviceRotation?: Rotator,DevicePosition?: Vector,NeckPosition?: Vector,bUseOrienationForPlayerCamera?: boolean,bUsePositionForPlayerCamera?: boolean,PositionScale?: Vector): {DeviceRotation: Rotator, DevicePosition: Vector, NeckPosition: Vector};
 	static SetBaseRotationAndBaseOffsetInMeters(Rotation: Rotator,BaseOffsetInMeters: Vector,Options: EOrientPositionSelector): void;
 	static SetBaseRotationAndPositionOffset(BaseRot: Rotator,PosOffset: Vector,Options: EOrientPositionSelector): void;
+	static SetBaseRotation(InBaseRotation: Rotator): void;
 	static Conv_RotatorToText(InRot: Rotator): string;
 	static Conv_RotatorToString(InRot: Rotator): string;
 	static BreakRotator(InRot: Rotator,Roll?: number,Pitch?: number,Yaw?: number): {Roll: number, Pitch: number, Yaw: number};
 	static BreakRotIntoAxes(InRot: Rotator,X?: Vector,Y?: Vector,Z?: Vector): {X: Vector, Y: Vector, Z: Vector};
 	static ComposeRotators(A: Rotator,B: Rotator): Rotator;
+	static Conv_RotatorToTransform(InRotator: Rotator): Transform;
 	static Conv_RotatorToVector(InRot: Rotator): Vector;
 	static EqualEqual_RotatorRotator(A: Rotator,B: Rotator,ErrorTolerance: number): boolean;
 	static GetAxes(A: Rotator,X?: Vector,Y?: Vector,Z?: Vector): {X: Vector, Y: Vector, Z: Vector};
@@ -331,57 +363,79 @@ declare class Rotator {
 	static RandomRotatorFromStream(bRoll: boolean,Stream: RandomStream): Rotator;
 }
 
-declare class Quat { 
-	X: number;
-	Y: number;
-	Z: number;
-	W: number;
-	clone() : Quat;
-	static C(Other: UObject | any): Quat;
+declare class Guid { 
+	A: number;
+	B: number;
+	C: number;
+	D: number;
+	clone() : Guid;
+	static C(Other: UObject | any): Guid;
+	GetARPinPositionAndOrientation(Position?: Vector,Orientation?: Rotator,PinFoundInEnvironment?: boolean): {Position: Vector, Orientation: Rotator, PinFoundInEnvironment: boolean, $: boolean};
+	Conv_GuidToString(): string;
+	EqualEqual_GuidGuid(B: Guid): boolean;
+	Invalidate_Guid(): {InGuid: Guid};
+	IsValid_Guid(): boolean;
+	NotEqual_GuidGuid(B: Guid): boolean;
+	static GetARPinPositionAndOrientation(PinID: Guid,Position?: Vector,Orientation?: Rotator,PinFoundInEnvironment?: boolean): {Position: Vector, Orientation: Rotator, PinFoundInEnvironment: boolean, $: boolean};
+	static Conv_GuidToString(InGuid: Guid): string;
+	static EqualEqual_GuidGuid(A: Guid,B: Guid): boolean;
+	static Invalidate_Guid(InGuid?: Guid): {InGuid: Guid};
+	static IsValid_Guid(InGuid: Guid): boolean;
+	static NotEqual_GuidGuid(A: Guid,B: Guid): boolean;
+	static NewGuid(): Guid;
 }
 
-declare type ELerpInterpolationMode = 'QuatInterp' | 'EulerInterp' | 'DualQuatInterp';
-declare var ELerpInterpolationMode : { QuatInterp:'QuatInterp',EulerInterp:'EulerInterp',DualQuatInterp:'DualQuatInterp', };
-declare class Transform { 
-	Rotation: Quat;
-	Translation: Vector;
-	Scale3D: Vector;
-	clone() : Transform;
-	static C(Other: UObject | any): Transform;
-	Conv_TransformToText(): string;
-	Conv_TransformToString(): string;
-	BreakTransform(Location?: Vector,Rotation?: Rotator,Scale?: Vector): {Location: Vector, Rotation: Rotator, Scale: Vector};
-	ComposeTransforms(B: Transform): Transform;
-	ConvertTransformToRelative(ParentTransform: Transform): Transform;
-	EqualEqual_TransformTransform(B: Transform): boolean;
-	InverseTransformDirection(Direction: Vector): Vector;
-	InverseTransformLocation(Location: Vector): Vector;
-	InvertTransform(): Transform;
-	NearlyEqual_TransformTransform(B: Transform,LocationTolerance: number,RotationTolerance: number,Scale3DTolerance: number): boolean;
-	SelectTransform(B: Transform,bPickA: boolean): Transform;
-	TEase(B: Transform,Alpha: number,EasingFunc: EEasingFunc,BlendExp: number,Steps: number): Transform;
-	TInterpTo(Target: Transform,DeltaTime: number,InterpSpeed: number): Transform;
-	TLerp(B: Transform,Alpha: number,InterpMode: ELerpInterpolationMode): Transform;
-	TransformDirection(Direction: Vector): Vector;
-	TransformLocation(Location: Vector): Vector;
-	K2_LookAt(TargetPosition: Vector,LookAtVector: Vector,bUseUpVector: boolean,UpVector: Vector,ClampConeInDegree: number): Transform;
-	static Conv_TransformToText(InTrans: Transform): string;
-	static Conv_TransformToString(InTrans: Transform): string;
-	static BreakTransform(InTransform: Transform,Location?: Vector,Rotation?: Rotator,Scale?: Vector): {Location: Vector, Rotation: Rotator, Scale: Vector};
-	static ComposeTransforms(A: Transform,B: Transform): Transform;
-	static ConvertTransformToRelative(Transform: Transform,ParentTransform: Transform): Transform;
-	static EqualEqual_TransformTransform(A: Transform,B: Transform): boolean;
-	static InverseTransformDirection(T: Transform,Direction: Vector): Vector;
-	static InverseTransformLocation(T: Transform,Location: Vector): Vector;
-	static InvertTransform(T: Transform): Transform;
-	static NearlyEqual_TransformTransform(A: Transform,B: Transform,LocationTolerance: number,RotationTolerance: number,Scale3DTolerance: number): boolean;
-	static SelectTransform(A: Transform,B: Transform,bPickA: boolean): Transform;
-	static TEase(A: Transform,B: Transform,Alpha: number,EasingFunc: EEasingFunc,BlendExp: number,Steps: number): Transform;
-	static TInterpTo(Current: Transform,Target: Transform,DeltaTime: number,InterpSpeed: number): Transform;
-	static TLerp(A: Transform,B: Transform,Alpha: number,InterpMode: ELerpInterpolationMode): Transform;
-	static TransformDirection(T: Transform,Direction: Vector): Vector;
-	static TransformLocation(T: Transform,Location: Vector): Vector;
-	static K2_LookAt(CurrentTransform: Transform,TargetPosition: Vector,LookAtVector: Vector,bUseUpVector: boolean,UpVector: Vector,ClampConeInDegree: number): Transform;
+declare type EPassableWorldError = 'None' | 'LowMapQuality' | 'UnableToLocalize' | 'Unavailable' | 'PrivilegeDenied' | 'InvalidParam' | 'UnspecifiedFailure' | 'PrivilegeRequestPending' | 'EPassableWorldError_MAX';
+declare var EPassableWorldError : { None:'None',LowMapQuality:'LowMapQuality',UnableToLocalize:'UnableToLocalize',Unavailable:'Unavailable',PrivilegeDenied:'PrivilegeDenied',InvalidParam:'InvalidParam',UnspecifiedFailure:'UnspecifiedFailure',PrivilegeRequestPending:'PrivilegeRequestPending',EPassableWorldError_MAX:'EPassableWorldError_MAX', };
+declare class Color { 
+	B: number;
+	G: number;
+	R: number;
+	A: number;
+	clone() : Color;
+	static C(Other: UObject | any): Color;
+	Conv_ColorToLinearColor(): LinearColor;
+	static Conv_ColorToLinearColor(InColor: Color): LinearColor;
+}
+
+declare class LinearColor { 
+	R: number;
+	G: number;
+	B: number;
+	A: number;
+	clone() : LinearColor;
+	static C(Other: UObject | any): LinearColor;
+	Conv_ColorToText(): string;
+	Conv_ColorToString(): string;
+	BreakColor(R?: number,G?: number,B?: number,A?: number): {R: number, G: number, B: number, A: number};
+	CInterpTo(Target: LinearColor,DeltaTime: number,InterpSpeed: number): LinearColor;
+	Conv_LinearColorToColor(): Color;
+	Conv_LinearColorToVector(): Vector;
+	HSVToRGB_Vector(RGB?: LinearColor): {RGB: LinearColor};
+	LinearColorLerp(B: LinearColor,Alpha: number): LinearColor;
+	LinearColorLerpUsingHSV(B: LinearColor,Alpha: number): LinearColor;
+	Multiply_LinearColorFloat(B: number): LinearColor;
+	Multiply_LinearColorLinearColor(B: LinearColor): LinearColor;
+	RGBToHSV(H?: number,S?: number,V?: number,A?: number): {H: number, S: number, V: number, A: number};
+	RGBToHSV_Vector(HSV?: LinearColor): {HSV: LinearColor};
+	SelectColor(B: LinearColor,bPickA: boolean): LinearColor;
+	static Conv_ColorToText(InColor: LinearColor): string;
+	static Conv_ColorToString(InColor: LinearColor): string;
+	static BreakColor(InColor: LinearColor,R?: number,G?: number,B?: number,A?: number): {R: number, G: number, B: number, A: number};
+	static CInterpTo(Current: LinearColor,Target: LinearColor,DeltaTime: number,InterpSpeed: number): LinearColor;
+	static Conv_LinearColorToColor(InLinearColor: LinearColor): Color;
+	static Conv_LinearColorToVector(InLinearColor: LinearColor): Vector;
+	static HSVToRGB_Vector(HSV: LinearColor,RGB?: LinearColor): {RGB: LinearColor};
+	static LinearColorLerp(A: LinearColor,B: LinearColor,Alpha: number): LinearColor;
+	static LinearColorLerpUsingHSV(A: LinearColor,B: LinearColor,Alpha: number): LinearColor;
+	static Multiply_LinearColorFloat(A: LinearColor,B: number): LinearColor;
+	static Multiply_LinearColorLinearColor(A: LinearColor,B: LinearColor): LinearColor;
+	static RGBToHSV(InColor: LinearColor,H?: number,S?: number,V?: number,A?: number): {H: number, S: number, V: number, A: number};
+	static RGBToHSV_Vector(RGB: LinearColor,HSV?: LinearColor): {HSV: LinearColor};
+	static SelectColor(A: LinearColor,B: LinearColor,bPickA: boolean): LinearColor;
+	static Conv_FloatToLinearColor(InFloat: number): LinearColor;
+	static HSVToRGB(H: number,S: number,V: number,A: number): LinearColor;
+	static MakeColor(R: number,G: number,B: number,A: number): LinearColor;
 }
 
 declare class IntVector { 
@@ -394,7 +448,7 @@ declare class IntVector {
 	Conv_IntVectorToVector(): Vector;
 	static Conv_IntVectorToString(InIntVec: IntVector): string;
 	static Conv_IntVectorToVector(InIntVector: IntVector): Vector;
-	static Conv_IntToIntVector(InInt: number): IntVector;
+	static Conv_IntToIntVector(inInt: number): IntVector;
 }
 
 declare class Plane extends Vector { 
@@ -426,8 +480,11 @@ declare class Vector {
 	static C(Other: UObject | any): Vector;
 	SegmentIntersection2D(SegmentEndA: Vector,SegmentStartB: Vector,SegmentEndB: Vector,IntersectionPoint?: Vector): {IntersectionPoint: Vector, $: boolean};
 	GenerateBoxMesh(Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
-	GetRawSensorData(LinearAcceleration?: Vector,AngularVelocity?: Vector,LinearVelocity?: Vector,TimeInSeconds?: number,DeviceType?: DeviceType): {AngularAcceleration: Vector, LinearAcceleration: Vector, AngularVelocity: Vector, LinearVelocity: Vector, TimeInSeconds: number};
+	GetPointGuardianIntersection(BoundaryType: EBoundaryType): GuardianTestResult;
+	GetRawSensorData(LinearAcceleration?: Vector,AngularVelocity?: Vector,LinearVelocity?: Vector,TimeInSeconds?: number,DeviceType?: ETrackedDeviceType): {AngularAcceleration: Vector, LinearAcceleration: Vector, AngularVelocity: Vector, LinearVelocity: Vector, TimeInSeconds: number};
 	SetPositionScale3D(): void;
+	SetBasePosition(): void;
+	GetClosestARPin(PinID?: Guid): {PinID: Guid, $: EPassableWorldError};
 	Conv_VectorToText(): string;
 	Conv_VectorToString(): string;
 	Add_VectorFloat(B: number): Vector;
@@ -450,12 +507,14 @@ declare class Vector {
 	FindLookAtRotation(Target: Vector): Rotator;
 	FindNearestPointsOnLineSegments(Segment1End: Vector,Segment2Start: Vector,Segment2End: Vector,Segment1Point?: Vector,Segment2Point?: Vector): {Segment1Point: Vector, Segment2Point: Vector};
 	FTruncVector(): IntVector;
+	GetAzimuthAndElevation(ReferenceFrame: Transform,Azimuth?: number,Elevation?: number): {Azimuth: number, Elevation: number};
 	GetDirectionUnitVector(To: Vector): Vector;
 	GetMaxElement(): number;
 	GetMinElement(): number;
 	GetPointDistanceToLine(LineOrigin: Vector,LineDirection: Vector): number;
 	GetPointDistanceToSegment(SegmentStart: Vector,SegmentEnd: Vector): number;
 	GetReflectionVector(SurfaceNormal: Vector): Vector;
+	GetSlopeDegreeAngles(FloorNormal: Vector,UpVector: Vector,OutSlopePitchDegreeAngle?: number,OutSlopeRollDegreeAngle?: number): {OutSlopePitchDegreeAngle: number, OutSlopeRollDegreeAngle: number};
 	GetYawPitchFromVector(Yaw?: number,Pitch?: number): {Yaw: number, Pitch: number};
 	GreaterGreater_VectorRotator(B: Rotator): Vector;
 	IsPointInBox(BoxOrigin: Vector,BoxExtent: Vector): boolean;
@@ -487,8 +546,14 @@ declare class Vector {
 	ProjectVectorOnToPlane(PlaneNormal: Vector): Vector;
 	ProjectVectorOnToVector(Target: Vector): Vector;
 	RandomPointInBoundingBox(BoxExtent: Vector): Vector;
-	RandomUnitVectorInCone(ConeHalfAngle: number): Vector;
-	RandomUnitVectorInConeWithYawAndPitch(MaxYawInDegrees: number,MaxPitchInDegrees: number): Vector;
+	RandomUnitVectorInConeInDegrees(ConeHalfAngleInDegrees: number): Vector;
+	RandomUnitVectorInConeInDegreesFromStream(ConeHalfAngleInDegrees: number,Stream: RandomStream): Vector;
+	RandomUnitVectorInConeInRadians(ConeHalfAngleInRadians: number): Vector;
+	RandomUnitVectorInConeInRadiansFromStream(ConeHalfAngleInRadians: number,Stream: RandomStream): Vector;
+	RandomUnitVectorInEllipticalConeInDegrees(MaxYawInDegrees: number,MaxPitchInDegrees: number): Vector;
+	RandomUnitVectorInEllipticalConeInDegreesFromStream(MaxYawInDegrees: number,MaxPitchInDegrees: number,Stream: RandomStream): Vector;
+	RandomUnitVectorInEllipticalConeInRadians(MaxYawInRadians: number,MaxPitchInRadians: number): Vector;
+	RandomUnitVectorInEllipticalConeInRadiansFromStream(MaxYawInRadians: number,MaxPitchInRadians: number,Stream: RandomStream): Vector;
 	RotateAngleAxis(AngleDeg: number,Axis: Vector): Vector;
 	RotatorFromAxisAndAngle(Angle: number): Rotator;
 	SelectVector(B: Vector,bPickA: boolean): Vector;
@@ -502,15 +567,19 @@ declare class Vector {
 	VLerp(B: Vector,Alpha: number): Vector;
 	VSize(): number;
 	VSizeSquared(): number;
+	VSizeXY(): number;
 	K2_TwoBoneIK(JointPos: Vector,EndPos: Vector,JointTarget: Vector,Effector: Vector,OutJointPos?: Vector,OutEndPos?: Vector,bAllowStretching?: boolean,StartStretchRatio?: number,MaxStretchScale?: number): {OutJointPos: Vector, OutEndPos: Vector};
 	IsValidAIDirection(): boolean;
 	IsValidAILocation(): boolean;
 	GetPositionalTrackingCameraParameters(CameraRotation?: Rotator,HFOV?: number,VFOV?: number,CameraDistance?: number,NearPlane?: number,FarPlane?: number): {CameraOrigin: Vector, CameraRotation: Rotator, HFOV: number, VFOV: number, CameraDistance: number, NearPlane: number, FarPlane: number};
-	GetTrackingSensorParameters(Rotation?: Rotator,LeftFOV?: number,RightFOV?: number,TopFOV?: number,BottomFOV?: number,Distance?: number,NearPlane?: number,FarPlane?: number,IsActive?: boolean,Index?: number): {Origin: Vector, Rotation: Rotator, LeftFOV: number, RightFOV: number, TopFOV: number, BottomFOV: number, Distance: number, NearPlane: number, FarPlane: number, IsActive: boolean};
+	GetTrackingSensorParameters(Rotation?: Rotator,LeftFOV?: number,RightFOV?: number,TopFOV?: number,BottomFOV?: number,Distance?: number,NearPlane?: number,FarPlane?: number,IsActive?: boolean,index?: number): {Origin: Vector, Rotation: Rotator, LeftFOV: number, RightFOV: number, TopFOV: number, BottomFOV: number, Distance: number, NearPlane: number, FarPlane: number, IsActive: boolean};
 	static SegmentIntersection2D(SegmentStartA: Vector,SegmentEndA: Vector,SegmentStartB: Vector,SegmentEndB: Vector,IntersectionPoint?: Vector): {IntersectionPoint: Vector, $: boolean};
 	static GenerateBoxMesh(BoxRadius: Vector,Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
-	static GetRawSensorData(AngularAcceleration?: Vector,LinearAcceleration?: Vector,AngularVelocity?: Vector,LinearVelocity?: Vector,TimeInSeconds?: number,DeviceType?: DeviceType): {AngularAcceleration: Vector, LinearAcceleration: Vector, AngularVelocity: Vector, LinearVelocity: Vector, TimeInSeconds: number};
+	static GetPointGuardianIntersection(Point: Vector,BoundaryType: EBoundaryType): GuardianTestResult;
+	static GetRawSensorData(AngularAcceleration?: Vector,LinearAcceleration?: Vector,AngularVelocity?: Vector,LinearVelocity?: Vector,TimeInSeconds?: number,DeviceType?: ETrackedDeviceType): {AngularAcceleration: Vector, LinearAcceleration: Vector, AngularVelocity: Vector, LinearVelocity: Vector, TimeInSeconds: number};
 	static SetPositionScale3D(PosScale3D: Vector): void;
+	static SetBasePosition(InBasePosition: Vector): void;
+	static GetClosestARPin(SearchPoint: Vector,PinID?: Guid): {PinID: Guid, $: EPassableWorldError};
 	static Conv_VectorToText(InVec: Vector): string;
 	static Conv_VectorToString(InVec: Vector): string;
 	static Add_VectorFloat(A: Vector,B: number): Vector;
@@ -533,12 +602,14 @@ declare class Vector {
 	static FindLookAtRotation(Start: Vector,Target: Vector): Rotator;
 	static FindNearestPointsOnLineSegments(Segment1Start: Vector,Segment1End: Vector,Segment2Start: Vector,Segment2End: Vector,Segment1Point?: Vector,Segment2Point?: Vector): {Segment1Point: Vector, Segment2Point: Vector};
 	static FTruncVector(InVector: Vector): IntVector;
+	static GetAzimuthAndElevation(InDirection: Vector,ReferenceFrame: Transform,Azimuth?: number,Elevation?: number): {Azimuth: number, Elevation: number};
 	static GetDirectionUnitVector(From: Vector,To: Vector): Vector;
 	static GetMaxElement(A: Vector): number;
 	static GetMinElement(A: Vector): number;
 	static GetPointDistanceToLine(Point: Vector,LineOrigin: Vector,LineDirection: Vector): number;
 	static GetPointDistanceToSegment(Point: Vector,SegmentStart: Vector,SegmentEnd: Vector): number;
 	static GetReflectionVector(Direction: Vector,SurfaceNormal: Vector): Vector;
+	static GetSlopeDegreeAngles(MyRightYAxis: Vector,FloorNormal: Vector,UpVector: Vector,OutSlopePitchDegreeAngle?: number,OutSlopeRollDegreeAngle?: number): {OutSlopePitchDegreeAngle: number, OutSlopeRollDegreeAngle: number};
 	static GetYawPitchFromVector(InVec: Vector,Yaw?: number,Pitch?: number): {Yaw: number, Pitch: number};
 	static GreaterGreater_VectorRotator(A: Vector,B: Rotator): Vector;
 	static IsPointInBox(Point: Vector,BoxOrigin: Vector,BoxExtent: Vector): boolean;
@@ -570,8 +641,14 @@ declare class Vector {
 	static ProjectVectorOnToPlane(V: Vector,PlaneNormal: Vector): Vector;
 	static ProjectVectorOnToVector(V: Vector,Target: Vector): Vector;
 	static RandomPointInBoundingBox(Origin: Vector,BoxExtent: Vector): Vector;
-	static RandomUnitVectorInCone(ConeDir: Vector,ConeHalfAngle: number): Vector;
-	static RandomUnitVectorInConeWithYawAndPitch(ConeDir: Vector,MaxYawInDegrees: number,MaxPitchInDegrees: number): Vector;
+	static RandomUnitVectorInConeInDegrees(ConeDir: Vector,ConeHalfAngleInDegrees: number): Vector;
+	static RandomUnitVectorInConeInDegreesFromStream(ConeDir: Vector,ConeHalfAngleInDegrees: number,Stream: RandomStream): Vector;
+	static RandomUnitVectorInConeInRadians(ConeDir: Vector,ConeHalfAngleInRadians: number): Vector;
+	static RandomUnitVectorInConeInRadiansFromStream(ConeDir: Vector,ConeHalfAngleInRadians: number,Stream: RandomStream): Vector;
+	static RandomUnitVectorInEllipticalConeInDegrees(ConeDir: Vector,MaxYawInDegrees: number,MaxPitchInDegrees: number): Vector;
+	static RandomUnitVectorInEllipticalConeInDegreesFromStream(ConeDir: Vector,MaxYawInDegrees: number,MaxPitchInDegrees: number,Stream: RandomStream): Vector;
+	static RandomUnitVectorInEllipticalConeInRadians(ConeDir: Vector,MaxYawInRadians: number,MaxPitchInRadians: number): Vector;
+	static RandomUnitVectorInEllipticalConeInRadiansFromStream(ConeDir: Vector,MaxYawInRadians: number,MaxPitchInRadians: number,Stream: RandomStream): Vector;
 	static RotateAngleAxis(InVect: Vector,AngleDeg: number,Axis: Vector): Vector;
 	static RotatorFromAxisAndAngle(Axis: Vector,Angle: number): Rotator;
 	static SelectVector(A: Vector,B: Vector,bPickA: boolean): Vector;
@@ -585,25 +662,28 @@ declare class Vector {
 	static VLerp(A: Vector,B: Vector,Alpha: number): Vector;
 	static VSize(A: Vector): number;
 	static VSizeSquared(A: Vector): number;
+	static VSizeXY(A: Vector): number;
 	static K2_TwoBoneIK(RootPos: Vector,JointPos: Vector,EndPos: Vector,JointTarget: Vector,Effector: Vector,OutJointPos?: Vector,OutEndPos?: Vector,bAllowStretching?: boolean,StartStretchRatio?: number,MaxStretchScale?: number): {OutJointPos: Vector, OutEndPos: Vector};
 	static IsValidAIDirection(DirectionVector: Vector): boolean;
 	static IsValidAILocation(Location: Vector): boolean;
 	static GetPositionalTrackingCameraParameters(CameraOrigin?: Vector,CameraRotation?: Rotator,HFOV?: number,VFOV?: number,CameraDistance?: number,NearPlane?: number,FarPlane?: number): {CameraOrigin: Vector, CameraRotation: Rotator, HFOV: number, VFOV: number, CameraDistance: number, NearPlane: number, FarPlane: number};
-	static GetTrackingSensorParameters(Origin?: Vector,Rotation?: Rotator,LeftFOV?: number,RightFOV?: number,TopFOV?: number,BottomFOV?: number,Distance?: number,NearPlane?: number,FarPlane?: number,IsActive?: boolean,Index?: number): {Origin: Vector, Rotation: Rotator, LeftFOV: number, RightFOV: number, TopFOV: number, BottomFOV: number, Distance: number, NearPlane: number, FarPlane: number, IsActive: boolean};
+	static GetTrackingSensorParameters(Origin?: Vector,Rotation?: Rotator,LeftFOV?: number,RightFOV?: number,TopFOV?: number,BottomFOV?: number,Distance?: number,NearPlane?: number,FarPlane?: number,IsActive?: boolean,index?: number): {Origin: Vector, Rotation: Rotator, LeftFOV: number, RightFOV: number, TopFOV: number, BottomFOV: number, Distance: number, NearPlane: number, FarPlane: number, IsActive: boolean};
+	static GetGuardianDimensions(BoundaryType: EBoundaryType): Vector;
 	static Conv_FloatToVector(InFloat: number): Vector;
 	static CreateVectorFromYawPitch(Yaw: number,Pitch: number,Length: number): Vector;
 	static GetVectorArrayAverage(Vectors: Vector[]): Vector;
 	static MakeVector(X: number,Y: number,Z: number): Vector;
 	static RandomUnitVector(): Vector;
-	static NextSobolCell3D(Index: number,NumCells: number,PreviousValue: Vector): Vector;
-	static RandomSobolCell3D(Index: number,NumCells: number,Cell: Vector,Seed: Vector): Vector;
+	static NextSobolCell3D(index: number,NumCells: number,PreviousValue: Vector): Vector;
+	static RandomSobolCell3D(index: number,NumCells: number,Cell: Vector,Seed: Vector): Vector;
 	static GetActorArrayAverageLocation(Actors: Actor[]): Vector;
+	static K2_MakePerlinNoiseVectorAndRemap(X: number,Y: number,Z: number,RangeOutMinX: number,RangeOutMaxX: number,RangeOutMinY: number,RangeOutMaxY: number,RangeOutMinZ: number,RangeOutMaxZ: number): Vector;
 }
 
-declare type EVectorQuantization = 'RoundWholeNumber' | 'RoundOneDecimal' | 'RoundTwoDecimals';
-declare var EVectorQuantization : { RoundWholeNumber:'RoundWholeNumber',RoundOneDecimal:'RoundOneDecimal',RoundTwoDecimals:'RoundTwoDecimals', };
-declare type ERotatorQuantization = 'ByteComponents' | 'ShortComponents';
-declare var ERotatorQuantization : { ByteComponents:'ByteComponents',ShortComponents:'ShortComponents', };
+declare type EVectorQuantization = 'RoundWholeNumber' | 'RoundOneDecimal' | 'RoundTwoDecimals' | 'EVectorQuantization_MAX';
+declare var EVectorQuantization : { RoundWholeNumber:'RoundWholeNumber',RoundOneDecimal:'RoundOneDecimal',RoundTwoDecimals:'RoundTwoDecimals',EVectorQuantization_MAX:'EVectorQuantization_MAX', };
+declare type ERotatorQuantization = 'ByteComponents' | 'ShortComponents' | 'ERotatorQuantization_MAX';
+declare var ERotatorQuantization : { ByteComponents:'ByteComponents',ShortComponents:'ShortComponents',ERotatorQuantization_MAX:'ERotatorQuantization_MAX', };
 declare class RepMovement { 
 	LinearVelocity: Vector;
 	AngularVelocity: Vector;
@@ -611,9 +691,9 @@ declare class RepMovement {
 	Rotation: Rotator;
 	bSimulatedPhysicSleep: boolean;
 	bRepPhysics: boolean;
-	LocationQuantizationLevel: LocationQuantizationLevel;
-	VelocityQuantizationLevel: VelocityQuantizationLevel;
-	RotationQuantizationLevel: RotationQuantizationLevel;
+	LocationQuantizationLevel: EVectorQuantization;
+	VelocityQuantizationLevel: EVectorQuantization;
+	RotationQuantizationLevel: ERotatorQuantization;
 	clone() : RepMovement;
 	static C(Other: UObject | any): RepMovement;
 }
@@ -636,28 +716,8 @@ declare class AssetUserData extends UObject {
 	static C(Other: UObject | any): AssetUserData;
 }
 
-declare type EComponentCreationMethod = 'Native' | 'SimpleConstructionScript' | 'UserConstructionScript' | 'Instance';
-declare var EComponentCreationMethod : { Native:'Native',SimpleConstructionScript:'SimpleConstructionScript',UserConstructionScript:'UserConstructionScript',Instance:'Instance', };
-declare class Guid { 
-	A: number;
-	B: number;
-	C: number;
-	D: number;
-	clone() : Guid;
-	static C(Other: UObject | any): Guid;
-	Conv_GuidToString(): string;
-	EqualEqual_GuidGuid(B: Guid): boolean;
-	Invalidate_Guid(): {InGuid: Guid};
-	IsValid_Guid(): boolean;
-	NotEqual_GuidGuid(B: Guid): boolean;
-	static Conv_GuidToString(InGuid: Guid): string;
-	static EqualEqual_GuidGuid(A: Guid,B: Guid): boolean;
-	static Invalidate_Guid(InGuid?: Guid): {InGuid: Guid};
-	static IsValid_Guid(InGuid: Guid): boolean;
-	static NotEqual_GuidGuid(A: Guid,B: Guid): boolean;
-	static NewGuid(): Guid;
-}
-
+declare type EComponentCreationMethod = 'Native' | 'SimpleConstructionScript' | 'UserConstructionScript' | 'Instance' | 'EComponentCreationMethod_MAX';
+declare var EComponentCreationMethod : { Native:'Native',SimpleConstructionScript:'SimpleConstructionScript',UserConstructionScript:'UserConstructionScript',Instance:'Instance',EComponentCreationMethod_MAX:'EComponentCreationMethod_MAX', };
 declare class SimpleMemberReference { 
 	MemberParent: UObject;
 	MemberName: string;
@@ -666,8 +726,8 @@ declare class SimpleMemberReference {
 	static C(Other: UObject | any): SimpleMemberReference;
 }
 
-declare type EEndPlayReason = 'Destroyed' | 'LevelTransition' | 'EndPlayInEditor' | 'RemovedFromWorld' | 'Quit';
-declare var EEndPlayReason : { Destroyed:'Destroyed',LevelTransition:'LevelTransition',EndPlayInEditor:'EndPlayInEditor',RemovedFromWorld:'RemovedFromWorld',Quit:'Quit', };
+declare type EEndPlayReason = 'Destroyed' | 'LevelTransition' | 'EndPlayInEditor' | 'RemovedFromWorld' | 'Quit' | 'EEndPlayReason_MAX';
+declare var EEndPlayReason : { Destroyed:'Destroyed',LevelTransition:'LevelTransition',EndPlayInEditor:'EndPlayInEditor',RemovedFromWorld:'RemovedFromWorld',Quit:'Quit',EEndPlayReason_MAX:'EEndPlayReason_MAX', };
 declare class ActorComponent extends UObject { 
 	PrimaryComponentTick: ActorComponentTickFunction;
 	ComponentTags: string[];
@@ -681,7 +741,8 @@ declare class ActorComponent extends UObject {
 	bEditableWhenInherited: boolean;
 	bCanEverAffectNavigation: boolean;
 	bIsEditorOnly: boolean;
-	CreationMethod: CreationMethod;
+	bIsVisualizationComponent: boolean;
+	CreationMethod: EComponentCreationMethod;
 	UCSModifiedProperties: SimpleMemberReference[];
 	OnComponentActivated: UnrealEngineMulticastDelegate<(Component: ActorComponent, bReset: boolean) => void>;
 	OnComponentDeactivated: UnrealEngineMulticastDelegate<(Component: ActorComponent) => void>;
@@ -727,12 +788,12 @@ declare class ActorComponent extends UObject {
 	static UnregisterComponent(ActorComponent: ActorComponent): void;
 }
 
-declare type EComponentMobility = 'Static' | 'Stationary' | 'Movable';
-declare var EComponentMobility : { Static:'Static',Stationary:'Stationary',Movable:'Movable', };
-declare type EDetailMode = 'DM_Low' | 'DM_Medium' | 'DM_High';
-declare var EDetailMode : { DM_Low:'DM_Low',DM_Medium:'DM_Medium',DM_High:'DM_High', };
-declare type EBrushType = 'Brush_Default' | 'Brush_Add' | 'Brush_Subtract';
-declare var EBrushType : { Brush_Default:'Brush_Default',Brush_Add:'Brush_Add',Brush_Subtract:'Brush_Subtract', };
+declare type EComponentMobility = 'Static' | 'Stationary' | 'Movable' | 'EComponentMobility_MAX';
+declare var EComponentMobility : { Static:'Static',Stationary:'Stationary',Movable:'Movable',EComponentMobility_MAX:'EComponentMobility_MAX', };
+declare type EDetailMode = 'DM_Low' | 'DM_Medium' | 'DM_High' | 'DM_MAX';
+declare var EDetailMode : { DM_Low:'DM_Low',DM_Medium:'DM_Medium',DM_High:'DM_High',DM_MAX:'DM_MAX', };
+declare type EBrushType = 'Brush_Default' | 'Brush_Add' | 'Brush_Subtract' | 'Brush_MAX';
+declare var EBrushType : { Brush_Default:'Brush_Default',Brush_Add:'Brush_Add',Brush_Subtract:'Brush_Subtract',Brush_MAX:'Brush_MAX', };
 declare class Model extends UObject { 
 	static Load(ResourceName: string): Model;
 	static Find(Outer: UObject, ResourceName: string): Model;
@@ -741,10 +802,16 @@ declare class Model extends UObject {
 	static C(Other: UObject | any): Model;
 }
 
-declare type ESceneDepthPriorityGroup = 'SDPG_World' | 'SDPG_Foreground';
-declare var ESceneDepthPriorityGroup : { SDPG_World:'SDPG_World',SDPG_Foreground:'SDPG_Foreground', };
-declare type EIndirectLightingCacheQuality = 'ILCQ_Off' | 'ILCQ_Point' | 'ILCQ_Volume';
-declare var EIndirectLightingCacheQuality : { ILCQ_Off:'ILCQ_Off',ILCQ_Point:'ILCQ_Point',ILCQ_Volume:'ILCQ_Volume', };
+declare type ESceneDepthPriorityGroup = 'SDPG_World' | 'SDPG_Foreground' | 'SDPG_MAX';
+declare var ESceneDepthPriorityGroup : { SDPG_World:'SDPG_World',SDPG_Foreground:'SDPG_Foreground',SDPG_MAX:'SDPG_MAX', };
+declare type EIndirectLightingCacheQuality = 'ILCQ_Off' | 'ILCQ_Point' | 'ILCQ_Volume' | 'ILCQ_MAX';
+declare var EIndirectLightingCacheQuality : { ILCQ_Off:'ILCQ_Off',ILCQ_Point:'ILCQ_Point',ILCQ_Volume:'ILCQ_Volume',ILCQ_MAX:'ILCQ_MAX', };
+declare type ELightmapType = 'Default' | 'ForceSurface' | 'ForceVolumetric' | 'ELightmapType_MAX';
+declare var ELightmapType : { Default:'Default',ForceSurface:'ForceSurface',ForceVolumetric:'ForceVolumetric',ELightmapType_MAX:'ELightmapType_MAX', };
+declare type EHasCustomNavigableGeometry = 'No' | 'Yes' | 'EvenIfNotCollidable' | 'DontExport' | 'EHasCustomNavigableGeometry_MAX';
+declare var EHasCustomNavigableGeometry : { No:'No',Yes:'Yes',EvenIfNotCollidable:'EvenIfNotCollidable',DontExport:'DontExport',EHasCustomNavigableGeometry_MAX:'EHasCustomNavigableGeometry_MAX', };
+declare type ECanBeCharacterBase = 'ECB_No' | 'ECB_Yes' | 'ECB_Owner' | 'ECB_MAX';
+declare var ECanBeCharacterBase : { ECB_No:'ECB_No',ECB_Yes:'ECB_Yes',ECB_Owner:'ECB_Owner',ECB_MAX:'ECB_MAX', };
 declare class LightingChannels { 
 	bChannel0: boolean;
 	bChannel1: boolean;
@@ -753,10 +820,18 @@ declare class LightingChannels {
 	static C(Other: UObject | any): LightingChannels;
 }
 
-declare type ERendererStencilMask = 'ERSM_Default' | 'ERSM_255' | 'ERSM_1' | 'ERSM_2' | 'ERSM_4' | 'ERSM_8' | 'ERSM_16' | 'ERSM_32' | 'ERSM_64' | 'ERSM_128';
-declare var ERendererStencilMask : { ERSM_Default:'ERSM_Default',ERSM_255:'ERSM_255',ERSM_1:'ERSM_1',ERSM_2:'ERSM_2',ERSM_4:'ERSM_4',ERSM_8:'ERSM_8',ERSM_16:'ERSM_16',ERSM_32:'ERSM_32',ERSM_64:'ERSM_64',ERSM_128:'ERSM_128', };
-declare type ECollisionResponse = 'ECR_Ignore' | 'ECR_Overlap' | 'ECR_Block';
-declare var ECollisionResponse : { ECR_Ignore:'ECR_Ignore',ECR_Overlap:'ECR_Overlap',ECR_Block:'ECR_Block', };
+declare type ERendererStencilMask = 'ERSM_Default' | 'ERSM_255' | 'ERSM_1' | 'ERSM_2' | 'ERSM_4' | 'ERSM_8' | 'ERSM_16' | 'ERSM_32' | 'ERSM_64' | 'ERSM_128' | 'ERSM_MAX';
+declare var ERendererStencilMask : { ERSM_Default:'ERSM_Default',ERSM_255:'ERSM_255',ERSM_1:'ERSM_1',ERSM_2:'ERSM_2',ERSM_4:'ERSM_4',ERSM_8:'ERSM_8',ERSM_16:'ERSM_16',ERSM_32:'ERSM_32',ERSM_64:'ERSM_64',ERSM_128:'ERSM_128',ERSM_MAX:'ERSM_MAX', };
+declare type ECollisionChannel = 'ECC_WorldStatic' | 'ECC_WorldDynamic' | 'ECC_Pawn' | 'ECC_Visibility' | 'ECC_Camera' | 'ECC_PhysicsBody' | 'ECC_Vehicle' | 'ECC_Destructible' | 'ECC_EngineTraceChannel1' | 'ECC_EngineTraceChannel2' | 'ECC_EngineTraceChannel3' | 'ECC_EngineTraceChannel4' | 'ECC_EngineTraceChannel5' | 'ECC_EngineTraceChannel6' | 'ECC_GameTraceChannel1' | 'ECC_GameTraceChannel2' | 'ECC_GameTraceChannel3' | 'ECC_GameTraceChannel4' | 'ECC_GameTraceChannel5' | 'ECC_GameTraceChannel6' | 'ECC_GameTraceChannel7' | 'ECC_GameTraceChannel8' | 'ECC_GameTraceChannel9' | 'ECC_GameTraceChannel10' | 'ECC_GameTraceChannel11' | 'ECC_GameTraceChannel12' | 'ECC_GameTraceChannel13' | 'ECC_GameTraceChannel14' | 'ECC_GameTraceChannel15' | 'ECC_GameTraceChannel16' | 'ECC_GameTraceChannel17' | 'ECC_GameTraceChannel18' | 'ECC_OverlapAll_Deprecated' | 'ECC_MAX';
+declare var ECollisionChannel : { ECC_WorldStatic:'ECC_WorldStatic',ECC_WorldDynamic:'ECC_WorldDynamic',ECC_Pawn:'ECC_Pawn',ECC_Visibility:'ECC_Visibility',ECC_Camera:'ECC_Camera',ECC_PhysicsBody:'ECC_PhysicsBody',ECC_Vehicle:'ECC_Vehicle',ECC_Destructible:'ECC_Destructible',ECC_EngineTraceChannel1:'ECC_EngineTraceChannel1',ECC_EngineTraceChannel2:'ECC_EngineTraceChannel2',ECC_EngineTraceChannel3:'ECC_EngineTraceChannel3',ECC_EngineTraceChannel4:'ECC_EngineTraceChannel4',ECC_EngineTraceChannel5:'ECC_EngineTraceChannel5',ECC_EngineTraceChannel6:'ECC_EngineTraceChannel6',ECC_GameTraceChannel1:'ECC_GameTraceChannel1',ECC_GameTraceChannel2:'ECC_GameTraceChannel2',ECC_GameTraceChannel3:'ECC_GameTraceChannel3',ECC_GameTraceChannel4:'ECC_GameTraceChannel4',ECC_GameTraceChannel5:'ECC_GameTraceChannel5',ECC_GameTraceChannel6:'ECC_GameTraceChannel6',ECC_GameTraceChannel7:'ECC_GameTraceChannel7',ECC_GameTraceChannel8:'ECC_GameTraceChannel8',ECC_GameTraceChannel9:'ECC_GameTraceChannel9',ECC_GameTraceChannel10:'ECC_GameTraceChannel10',ECC_GameTraceChannel11:'ECC_GameTraceChannel11',ECC_GameTraceChannel12:'ECC_GameTraceChannel12',ECC_GameTraceChannel13:'ECC_GameTraceChannel13',ECC_GameTraceChannel14:'ECC_GameTraceChannel14',ECC_GameTraceChannel15:'ECC_GameTraceChannel15',ECC_GameTraceChannel16:'ECC_GameTraceChannel16',ECC_GameTraceChannel17:'ECC_GameTraceChannel17',ECC_GameTraceChannel18:'ECC_GameTraceChannel18',ECC_OverlapAll_Deprecated:'ECC_OverlapAll_Deprecated',ECC_MAX:'ECC_MAX', };
+declare type ECollisionEnabled = 'NoCollision' | 'QueryOnly' | 'PhysicsOnly' | 'QueryAndPhysics' | 'ECollisionEnabled_MAX';
+declare var ECollisionEnabled : { NoCollision:'NoCollision',QueryOnly:'QueryOnly',PhysicsOnly:'PhysicsOnly',QueryAndPhysics:'QueryAndPhysics',ECollisionEnabled_MAX:'ECollisionEnabled_MAX', };
+declare type ESleepFamily = 'Normal' | 'Sensitive' | 'Custom' | 'ESleepFamily_MAX';
+declare var ESleepFamily : { Normal:'Normal',Sensitive:'Sensitive',Custom:'Custom',ESleepFamily_MAX:'ESleepFamily_MAX', };
+declare type EDOFMode = 'Default' | 'SixDOF' | 'YZPlane' | 'XZPlane' | 'XYPlane' | 'CustomPlane' | 'None' | 'EDOFMode_MAX';
+declare var EDOFMode : { Default:'Default',SixDOF:'SixDOF',YZPlane:'YZPlane',XZPlane:'XZPlane',XYPlane:'XYPlane',CustomPlane:'CustomPlane',None:'None',EDOFMode_MAX:'EDOFMode_MAX', };
+declare type ECollisionResponse = 'ECR_Ignore' | 'ECR_Overlap' | 'ECR_Block' | 'ECR_MAX';
+declare var ECollisionResponse : { ECR_Ignore:'ECR_Ignore',ECR_Overlap:'ECR_Overlap',ECR_Block:'ECR_Block',ECR_MAX:'ECR_MAX', };
 declare class CollisionResponseContainer { 
 	WorldStatic: ECollisionResponse;
 	WorldDynamic: ECollisionResponse;
@@ -808,8 +883,8 @@ declare class CollisionResponse {
 	static C(Other: UObject | any): CollisionResponse;
 }
 
-declare type EWalkableSlopeBehavior = 'WalkableSlope_Default' | 'WalkableSlope_Increase' | 'WalkableSlope_Decrease' | 'WalkableSlope_Unwalkable';
-declare var EWalkableSlopeBehavior : { WalkableSlope_Default:'WalkableSlope_Default',WalkableSlope_Increase:'WalkableSlope_Increase',WalkableSlope_Decrease:'WalkableSlope_Decrease',WalkableSlope_Unwalkable:'WalkableSlope_Unwalkable', };
+declare type EWalkableSlopeBehavior = 'WalkableSlope_Default' | 'WalkableSlope_Increase' | 'WalkableSlope_Decrease' | 'WalkableSlope_Unwalkable' | 'WalkableSlope_Max';
+declare var EWalkableSlopeBehavior : { WalkableSlope_Default:'WalkableSlope_Default',WalkableSlope_Increase:'WalkableSlope_Increase',WalkableSlope_Decrease:'WalkableSlope_Decrease',WalkableSlope_Unwalkable:'WalkableSlope_Unwalkable',WalkableSlope_Max:'WalkableSlope_Max', };
 declare class WalkableSlopeOverride { 
 	WalkableSlopeBehavior: EWalkableSlopeBehavior;
 	WalkableSlopeAngle: number;
@@ -817,8 +892,8 @@ declare class WalkableSlopeOverride {
 	static C(Other: UObject | any): WalkableSlopeOverride;
 }
 
-declare type EFrictionCombineMode = 'Average' | 'Min' | 'Multiply' | 'Max';
-declare var EFrictionCombineMode : { Average:'Average',Min:'Min',Multiply:'Multiply',Max:'Max', };
+declare type EFrictionCombineMode = 'Average' | 'Min' | 'Multiply' | 'Max' | 'EFrictionCombineMode_MAX';
+declare var EFrictionCombineMode : { Average:'Average',Min:'Min',Multiply:'Multiply',Max:'Max',EFrictionCombineMode_MAX:'EFrictionCombineMode_MAX', };
 declare class PhysicalMaterialPropertyBase extends UObject { 
 	static Load(ResourceName: string): PhysicalMaterialPropertyBase;
 	static Find(Outer: UObject, ResourceName: string): PhysicalMaterialPropertyBase;
@@ -827,8 +902,8 @@ declare class PhysicalMaterialPropertyBase extends UObject {
 	static C(Other: UObject | any): PhysicalMaterialPropertyBase;
 }
 
-declare type EPhysicalSurface = 'SurfaceType_Default' | 'SurfaceType1' | 'SurfaceType2' | 'SurfaceType3' | 'SurfaceType4' | 'SurfaceType5' | 'SurfaceType6' | 'SurfaceType7' | 'SurfaceType8' | 'SurfaceType9' | 'SurfaceType10' | 'SurfaceType11' | 'SurfaceType12' | 'SurfaceType13' | 'SurfaceType14' | 'SurfaceType15' | 'SurfaceType16' | 'SurfaceType17' | 'SurfaceType18' | 'SurfaceType19' | 'SurfaceType20' | 'SurfaceType21' | 'SurfaceType22' | 'SurfaceType23' | 'SurfaceType24' | 'SurfaceType25' | 'SurfaceType26' | 'SurfaceType27' | 'SurfaceType28' | 'SurfaceType29' | 'SurfaceType30' | 'SurfaceType31' | 'SurfaceType32' | 'SurfaceType33' | 'SurfaceType34' | 'SurfaceType35' | 'SurfaceType36' | 'SurfaceType37' | 'SurfaceType38' | 'SurfaceType39' | 'SurfaceType40' | 'SurfaceType41' | 'SurfaceType42' | 'SurfaceType43' | 'SurfaceType44' | 'SurfaceType45' | 'SurfaceType46' | 'SurfaceType47' | 'SurfaceType48' | 'SurfaceType49' | 'SurfaceType50' | 'SurfaceType51' | 'SurfaceType52' | 'SurfaceType53' | 'SurfaceType54' | 'SurfaceType55' | 'SurfaceType56' | 'SurfaceType57' | 'SurfaceType58' | 'SurfaceType59' | 'SurfaceType60' | 'SurfaceType61' | 'SurfaceType62' | 'SurfaceType_Max';
-declare var EPhysicalSurface : { SurfaceType_Default:'SurfaceType_Default',SurfaceType1:'SurfaceType1',SurfaceType2:'SurfaceType2',SurfaceType3:'SurfaceType3',SurfaceType4:'SurfaceType4',SurfaceType5:'SurfaceType5',SurfaceType6:'SurfaceType6',SurfaceType7:'SurfaceType7',SurfaceType8:'SurfaceType8',SurfaceType9:'SurfaceType9',SurfaceType10:'SurfaceType10',SurfaceType11:'SurfaceType11',SurfaceType12:'SurfaceType12',SurfaceType13:'SurfaceType13',SurfaceType14:'SurfaceType14',SurfaceType15:'SurfaceType15',SurfaceType16:'SurfaceType16',SurfaceType17:'SurfaceType17',SurfaceType18:'SurfaceType18',SurfaceType19:'SurfaceType19',SurfaceType20:'SurfaceType20',SurfaceType21:'SurfaceType21',SurfaceType22:'SurfaceType22',SurfaceType23:'SurfaceType23',SurfaceType24:'SurfaceType24',SurfaceType25:'SurfaceType25',SurfaceType26:'SurfaceType26',SurfaceType27:'SurfaceType27',SurfaceType28:'SurfaceType28',SurfaceType29:'SurfaceType29',SurfaceType30:'SurfaceType30',SurfaceType31:'SurfaceType31',SurfaceType32:'SurfaceType32',SurfaceType33:'SurfaceType33',SurfaceType34:'SurfaceType34',SurfaceType35:'SurfaceType35',SurfaceType36:'SurfaceType36',SurfaceType37:'SurfaceType37',SurfaceType38:'SurfaceType38',SurfaceType39:'SurfaceType39',SurfaceType40:'SurfaceType40',SurfaceType41:'SurfaceType41',SurfaceType42:'SurfaceType42',SurfaceType43:'SurfaceType43',SurfaceType44:'SurfaceType44',SurfaceType45:'SurfaceType45',SurfaceType46:'SurfaceType46',SurfaceType47:'SurfaceType47',SurfaceType48:'SurfaceType48',SurfaceType49:'SurfaceType49',SurfaceType50:'SurfaceType50',SurfaceType51:'SurfaceType51',SurfaceType52:'SurfaceType52',SurfaceType53:'SurfaceType53',SurfaceType54:'SurfaceType54',SurfaceType55:'SurfaceType55',SurfaceType56:'SurfaceType56',SurfaceType57:'SurfaceType57',SurfaceType58:'SurfaceType58',SurfaceType59:'SurfaceType59',SurfaceType60:'SurfaceType60',SurfaceType61:'SurfaceType61',SurfaceType62:'SurfaceType62',SurfaceType_Max:'SurfaceType_Max', };
+declare type EPhysicalSurface = 'SurfaceType_Default' | 'SurfaceType1' | 'SurfaceType2' | 'SurfaceType3' | 'SurfaceType4' | 'SurfaceType5' | 'SurfaceType6' | 'SurfaceType7' | 'SurfaceType8' | 'SurfaceType9' | 'SurfaceType10' | 'SurfaceType11' | 'SurfaceType12' | 'SurfaceType13' | 'SurfaceType14' | 'SurfaceType15' | 'SurfaceType16' | 'SurfaceType17' | 'SurfaceType18' | 'SurfaceType19' | 'SurfaceType20' | 'SurfaceType21' | 'SurfaceType22' | 'SurfaceType23' | 'SurfaceType24' | 'SurfaceType25' | 'SurfaceType26' | 'SurfaceType27' | 'SurfaceType28' | 'SurfaceType29' | 'SurfaceType30' | 'SurfaceType31' | 'SurfaceType32' | 'SurfaceType33' | 'SurfaceType34' | 'SurfaceType35' | 'SurfaceType36' | 'SurfaceType37' | 'SurfaceType38' | 'SurfaceType39' | 'SurfaceType40' | 'SurfaceType41' | 'SurfaceType42' | 'SurfaceType43' | 'SurfaceType44' | 'SurfaceType45' | 'SurfaceType46' | 'SurfaceType47' | 'SurfaceType48' | 'SurfaceType49' | 'SurfaceType50' | 'SurfaceType51' | 'SurfaceType52' | 'SurfaceType53' | 'SurfaceType54' | 'SurfaceType55' | 'SurfaceType56' | 'SurfaceType57' | 'SurfaceType58' | 'SurfaceType59' | 'SurfaceType60' | 'SurfaceType61' | 'SurfaceType62' | 'SurfaceType_Max' | 'EPhysicalSurface_MAX';
+declare var EPhysicalSurface : { SurfaceType_Default:'SurfaceType_Default',SurfaceType1:'SurfaceType1',SurfaceType2:'SurfaceType2',SurfaceType3:'SurfaceType3',SurfaceType4:'SurfaceType4',SurfaceType5:'SurfaceType5',SurfaceType6:'SurfaceType6',SurfaceType7:'SurfaceType7',SurfaceType8:'SurfaceType8',SurfaceType9:'SurfaceType9',SurfaceType10:'SurfaceType10',SurfaceType11:'SurfaceType11',SurfaceType12:'SurfaceType12',SurfaceType13:'SurfaceType13',SurfaceType14:'SurfaceType14',SurfaceType15:'SurfaceType15',SurfaceType16:'SurfaceType16',SurfaceType17:'SurfaceType17',SurfaceType18:'SurfaceType18',SurfaceType19:'SurfaceType19',SurfaceType20:'SurfaceType20',SurfaceType21:'SurfaceType21',SurfaceType22:'SurfaceType22',SurfaceType23:'SurfaceType23',SurfaceType24:'SurfaceType24',SurfaceType25:'SurfaceType25',SurfaceType26:'SurfaceType26',SurfaceType27:'SurfaceType27',SurfaceType28:'SurfaceType28',SurfaceType29:'SurfaceType29',SurfaceType30:'SurfaceType30',SurfaceType31:'SurfaceType31',SurfaceType32:'SurfaceType32',SurfaceType33:'SurfaceType33',SurfaceType34:'SurfaceType34',SurfaceType35:'SurfaceType35',SurfaceType36:'SurfaceType36',SurfaceType37:'SurfaceType37',SurfaceType38:'SurfaceType38',SurfaceType39:'SurfaceType39',SurfaceType40:'SurfaceType40',SurfaceType41:'SurfaceType41',SurfaceType42:'SurfaceType42',SurfaceType43:'SurfaceType43',SurfaceType44:'SurfaceType44',SurfaceType45:'SurfaceType45',SurfaceType46:'SurfaceType46',SurfaceType47:'SurfaceType47',SurfaceType48:'SurfaceType48',SurfaceType49:'SurfaceType49',SurfaceType50:'SurfaceType50',SurfaceType51:'SurfaceType51',SurfaceType52:'SurfaceType52',SurfaceType53:'SurfaceType53',SurfaceType54:'SurfaceType54',SurfaceType55:'SurfaceType55',SurfaceType56:'SurfaceType56',SurfaceType57:'SurfaceType57',SurfaceType58:'SurfaceType58',SurfaceType59:'SurfaceType59',SurfaceType60:'SurfaceType60',SurfaceType61:'SurfaceType61',SurfaceType62:'SurfaceType62',SurfaceType_Max:'SurfaceType_Max',EPhysicalSurface_MAX:'EPhysicalSurface_MAX', };
 declare class DataAsset extends UObject { 
 	NativeClass: UnrealEngineClass;
 	static Load(ResourceName: string): DataAsset;
@@ -875,18 +950,11 @@ declare class PhysicalMaterial extends UObject {
 	static C(Other: UObject | any): PhysicalMaterial;
 }
 
-declare type ESleepFamily = 'Normal' | 'Sensitive' | 'Custom';
-declare var ESleepFamily : { Normal:'Normal',Sensitive:'Sensitive',Custom:'Custom', };
-declare type EDOFMode = 'Default' | 'SixDOF' | 'YZPlane' | 'XZPlane' | 'XYPlane' | 'CustomPlane' | 'None';
-declare var EDOFMode : { Default:'Default',SixDOF:'SixDOF',YZPlane:'YZPlane',XZPlane:'XZPlane',XYPlane:'XYPlane',CustomPlane:'CustomPlane',None:'None', };
-declare type ECollisionEnabled = 'NoCollision' | 'QueryOnly' | 'PhysicsOnly' | 'QueryAndPhysics';
-declare var ECollisionEnabled : { NoCollision:'NoCollision',QueryOnly:'QueryOnly',PhysicsOnly:'PhysicsOnly',QueryAndPhysics:'QueryAndPhysics', };
-declare type ECollisionChannel = 'ECC_WorldStatic' | 'ECC_WorldDynamic' | 'ECC_Pawn' | 'ECC_Visibility' | 'ECC_Camera' | 'ECC_PhysicsBody' | 'ECC_Vehicle' | 'ECC_Destructible' | 'ECC_EngineTraceChannel1' | 'ECC_EngineTraceChannel2' | 'ECC_EngineTraceChannel3' | 'ECC_EngineTraceChannel4' | 'ECC_EngineTraceChannel5' | 'ECC_EngineTraceChannel6' | 'ECC_GameTraceChannel1' | 'ECC_GameTraceChannel2' | 'ECC_GameTraceChannel3' | 'ECC_GameTraceChannel4' | 'ECC_GameTraceChannel5' | 'ECC_GameTraceChannel6' | 'ECC_GameTraceChannel7' | 'ECC_GameTraceChannel8' | 'ECC_GameTraceChannel9' | 'ECC_GameTraceChannel10' | 'ECC_GameTraceChannel11' | 'ECC_GameTraceChannel12' | 'ECC_GameTraceChannel13' | 'ECC_GameTraceChannel14' | 'ECC_GameTraceChannel15' | 'ECC_GameTraceChannel16' | 'ECC_GameTraceChannel17' | 'ECC_GameTraceChannel18' | 'ECC_OverlapAll_Deprecated';
-declare var ECollisionChannel : { ECC_WorldStatic:'ECC_WorldStatic',ECC_WorldDynamic:'ECC_WorldDynamic',ECC_Pawn:'ECC_Pawn',ECC_Visibility:'ECC_Visibility',ECC_Camera:'ECC_Camera',ECC_PhysicsBody:'ECC_PhysicsBody',ECC_Vehicle:'ECC_Vehicle',ECC_Destructible:'ECC_Destructible',ECC_EngineTraceChannel1:'ECC_EngineTraceChannel1',ECC_EngineTraceChannel2:'ECC_EngineTraceChannel2',ECC_EngineTraceChannel3:'ECC_EngineTraceChannel3',ECC_EngineTraceChannel4:'ECC_EngineTraceChannel4',ECC_EngineTraceChannel5:'ECC_EngineTraceChannel5',ECC_EngineTraceChannel6:'ECC_EngineTraceChannel6',ECC_GameTraceChannel1:'ECC_GameTraceChannel1',ECC_GameTraceChannel2:'ECC_GameTraceChannel2',ECC_GameTraceChannel3:'ECC_GameTraceChannel3',ECC_GameTraceChannel4:'ECC_GameTraceChannel4',ECC_GameTraceChannel5:'ECC_GameTraceChannel5',ECC_GameTraceChannel6:'ECC_GameTraceChannel6',ECC_GameTraceChannel7:'ECC_GameTraceChannel7',ECC_GameTraceChannel8:'ECC_GameTraceChannel8',ECC_GameTraceChannel9:'ECC_GameTraceChannel9',ECC_GameTraceChannel10:'ECC_GameTraceChannel10',ECC_GameTraceChannel11:'ECC_GameTraceChannel11',ECC_GameTraceChannel12:'ECC_GameTraceChannel12',ECC_GameTraceChannel13:'ECC_GameTraceChannel13',ECC_GameTraceChannel14:'ECC_GameTraceChannel14',ECC_GameTraceChannel15:'ECC_GameTraceChannel15',ECC_GameTraceChannel16:'ECC_GameTraceChannel16',ECC_GameTraceChannel17:'ECC_GameTraceChannel17',ECC_GameTraceChannel18:'ECC_GameTraceChannel18',ECC_OverlapAll_Deprecated:'ECC_OverlapAll_Deprecated', };
 declare class BodyInstance { 
-	ResponseToChannels: CollisionResponseContainer;
-	CollisionProfileName: string;
-	CollisionResponses: CollisionResponse;
+	ObjectType: ECollisionChannel;
+	CollisionEnabled: ECollisionEnabled;
+	SleepFamily: ESleepFamily;
+	DOFMode: EDOFMode;
 	bUseCCD: boolean;
 	bNotifyRigidBodyCollision: boolean;
 	bSimulatePhysics: boolean;
@@ -908,6 +976,10 @@ declare class BodyInstance {
 	bUseAsyncScene: boolean;
 	bOverrideMaxDepenetrationVelocity: boolean;
 	bOverrideWalkableSlopeOnInstance: boolean;
+	bInterpolateWhenSubStepping: boolean;
+	ResponseToChannels: CollisionResponseContainer;
+	CollisionProfileName: string;
+	CollisionResponses: CollisionResponse;
 	MaxDepenetrationVelocity: number;
 	MassInKgOverride: number;
 	LinearDamping: number;
@@ -915,6 +987,7 @@ declare class BodyInstance {
 	CustomDOFPlaneNormal: Vector;
 	COMNudge: Vector;
 	MassScale: number;
+	InertiaTensorScale: Vector;
 	WalkableSlopeOverride: WalkableSlopeOverride;
 	PhysMaterialOverride: PhysicalMaterial;
 	MaxAngularVelocity: number;
@@ -922,21 +995,11 @@ declare class BodyInstance {
 	StabilizationThresholdMultiplier: number;
 	PhysicsBlendWeight: number;
 	PositionSolverIterationCount: number;
-	RigidActorSyncId: any;
-	RigidActorAsyncId: any;
 	VelocitySolverIterationCount: number;
-	SleepFamily: SleepFamily;
-	DOFMode: EDOFMode;
-	CollisionEnabled: ECollisionEnabled;
-	ObjectType: ECollisionChannel;
 	clone() : BodyInstance;
 	static C(Other: UObject | any): BodyInstance;
 }
 
-declare type EHasCustomNavigableGeometry = 'No' | 'Yes' | 'EvenIfNotCollidable' | 'DontExport';
-declare var EHasCustomNavigableGeometry : { No:'No',Yes:'Yes',EvenIfNotCollidable:'EvenIfNotCollidable',DontExport:'DontExport', };
-declare type ECanBeCharacterBase = 'ECB_No' | 'ECB_Yes' | 'ECB_Owner';
-declare var ECanBeCharacterBase : { ECB_No:'ECB_No',ECB_Yes:'ECB_Yes',ECB_Owner:'ECB_Owner', };
 declare class Vector_NetQuantize extends Vector { 
 	clone() : Vector_NetQuantize;
 	static C(Other: UObject | any): Vector_NetQuantize;
@@ -950,6 +1013,7 @@ declare class Vector_NetQuantizeNormal extends Vector {
 declare class HitResult { 
 	bBlockingHit: boolean;
 	bStartPenetrating: boolean;
+	FaceIndex: number;
 	Time: number;
 	Distance: number;
 	Location: Vector_NetQuantize;
@@ -964,16 +1028,16 @@ declare class HitResult {
 	Actor: any;
 	Component: any;
 	BoneName: string;
-	FaceIndex: number;
+	MyBoneName: string;
 	clone() : HitResult;
 	static C(Other: UObject | any): HitResult;
-	BreakHitResult(bBlockingHit?: boolean,bInitialOverlap?: boolean,Time?: number,Location?: Vector,ImpactPoint?: Vector,Normal?: Vector,ImpactNormal?: Vector,PhysMat?: PhysicalMaterial,HitActor?: Actor,HitComponent?: PrimitiveComponent,HitBoneName?: string,HitItem?: number,FaceIndex?: number,TraceStart?: Vector,TraceEnd?: Vector): {bBlockingHit: boolean, bInitialOverlap: boolean, Time: number, Location: Vector, ImpactPoint: Vector, Normal: Vector, ImpactNormal: Vector, PhysMat: PhysicalMaterial, HitActor: Actor, HitComponent: PrimitiveComponent, HitBoneName: string, HitItem: number, FaceIndex: number, TraceStart: Vector, TraceEnd: Vector};
+	BreakHitResult(bBlockingHit?: boolean,bInitialOverlap?: boolean,Time?: number,Distance?: number,Location?: Vector,ImpactPoint?: Vector,Normal?: Vector,ImpactNormal?: Vector,PhysMat?: PhysicalMaterial,HitActor?: Actor,HitComponent?: PrimitiveComponent,HitBoneName?: string,HitItem?: number,FaceIndex?: number,TraceStart?: Vector,TraceEnd?: Vector): {bBlockingHit: boolean, bInitialOverlap: boolean, Time: number, Distance: number, Location: Vector, ImpactPoint: Vector, Normal: Vector, ImpactNormal: Vector, PhysMat: PhysicalMaterial, HitActor: Actor, HitComponent: PrimitiveComponent, HitBoneName: string, HitItem: number, FaceIndex: number, TraceStart: Vector, TraceEnd: Vector};
 	FindCollisionUV(UVChannel: number,UV?: Vector2D): {UV: Vector2D, $: boolean};
 	GetSurfaceType(): EPhysicalSurface;
-	static BreakHitResult(Hit: HitResult,bBlockingHit?: boolean,bInitialOverlap?: boolean,Time?: number,Location?: Vector,ImpactPoint?: Vector,Normal?: Vector,ImpactNormal?: Vector,PhysMat?: PhysicalMaterial,HitActor?: Actor,HitComponent?: PrimitiveComponent,HitBoneName?: string,HitItem?: number,FaceIndex?: number,TraceStart?: Vector,TraceEnd?: Vector): {bBlockingHit: boolean, bInitialOverlap: boolean, Time: number, Location: Vector, ImpactPoint: Vector, Normal: Vector, ImpactNormal: Vector, PhysMat: PhysicalMaterial, HitActor: Actor, HitComponent: PrimitiveComponent, HitBoneName: string, HitItem: number, FaceIndex: number, TraceStart: Vector, TraceEnd: Vector};
+	static BreakHitResult(Hit: HitResult,bBlockingHit?: boolean,bInitialOverlap?: boolean,Time?: number,Distance?: number,Location?: Vector,ImpactPoint?: Vector,Normal?: Vector,ImpactNormal?: Vector,PhysMat?: PhysicalMaterial,HitActor?: Actor,HitComponent?: PrimitiveComponent,HitBoneName?: string,HitItem?: number,FaceIndex?: number,TraceStart?: Vector,TraceEnd?: Vector): {bBlockingHit: boolean, bInitialOverlap: boolean, Time: number, Distance: number, Location: Vector, ImpactPoint: Vector, Normal: Vector, ImpactNormal: Vector, PhysMat: PhysicalMaterial, HitActor: Actor, HitComponent: PrimitiveComponent, HitBoneName: string, HitItem: number, FaceIndex: number, TraceStart: Vector, TraceEnd: Vector};
 	static FindCollisionUV(Hit: HitResult,UVChannel: number,UV?: Vector2D): {UV: Vector2D, $: boolean};
 	static GetSurfaceType(Hit: HitResult): EPhysicalSurface;
-	static MakeHitResult(bBlockingHit: boolean,bInitialOverlap: boolean,Time: number,Location: Vector,ImpactPoint: Vector,Normal: Vector,ImpactNormal: Vector,PhysMat: PhysicalMaterial,HitActor: Actor,HitComponent: PrimitiveComponent,HitBoneName: string,HitItem: number,FaceIndex: number,TraceStart: Vector,TraceEnd: Vector): HitResult;
+	static MakeHitResult(bBlockingHit: boolean,bInitialOverlap: boolean,Time: number,Distance: number,Location: Vector,ImpactPoint: Vector,Normal: Vector,ImpactNormal: Vector,PhysMat: PhysicalMaterial,HitActor: Actor,HitComponent: PrimitiveComponent,HitBoneName: string,HitItem: number,FaceIndex: number,TraceStart: Vector,TraceEnd: Vector): HitResult;
 }
 
 declare class Key { 
@@ -987,6 +1051,7 @@ declare class Key {
 	Key_IsKeyboardKey(): boolean;
 	Key_IsModifierKey(): boolean;
 	Key_IsMouseButton(): boolean;
+	Key_IsValid(): boolean;
 	Key_IsVectorAxis(): boolean;
 	static EqualEqual_KeyKey(A: Key,B: Key): boolean;
 	static Key_GetDisplayName(Key: Key): string;
@@ -995,11 +1060,12 @@ declare class Key {
 	static Key_IsKeyboardKey(Key: Key): boolean;
 	static Key_IsModifierKey(Key: Key): boolean;
 	static Key_IsMouseButton(Key: Key): boolean;
+	static Key_IsValid(Key: Key): boolean;
 	static Key_IsVectorAxis(Key: Key): boolean;
 }
 
-declare type ETouchIndex = 'Touch1' | 'Touch2' | 'Touch3' | 'Touch4' | 'Touch5' | 'Touch6' | 'Touch7' | 'Touch8' | 'Touch9' | 'Touch10' | 'CursorPointerIndex' | 'MAX_TOUCHES';
-declare var ETouchIndex : { Touch1:'Touch1',Touch2:'Touch2',Touch3:'Touch3',Touch4:'Touch4',Touch5:'Touch5',Touch6:'Touch6',Touch7:'Touch7',Touch8:'Touch8',Touch9:'Touch9',Touch10:'Touch10',CursorPointerIndex:'CursorPointerIndex',MAX_TOUCHES:'MAX_TOUCHES', };
+declare type ETouchIndex = 'Touch1' | 'Touch2' | 'Touch3' | 'Touch4' | 'Touch5' | 'Touch6' | 'Touch7' | 'Touch8' | 'Touch9' | 'Touch10' | 'CursorPointerIndex' | 'MAX_TOUCHES' | 'ETouchIndex_MAX';
+declare var ETouchIndex : { Touch1:'Touch1',Touch2:'Touch2',Touch3:'Touch3',Touch4:'Touch4',Touch5:'Touch5',Touch6:'Touch6',Touch7:'Touch7',Touch8:'Touch8',Touch9:'Touch9',Touch10:'Touch10',CursorPointerIndex:'CursorPointerIndex',MAX_TOUCHES:'MAX_TOUCHES',ETouchIndex_MAX:'ETouchIndex_MAX', };
 declare class PrimitiveComponentPostPhysicsTickFunction extends TickFunction { 
 	clone() : PrimitiveComponentPostPhysicsTickFunction;
 	static C(Other: UObject | any): PrimitiveComponentPostPhysicsTickFunction;
@@ -1009,6 +1075,14 @@ declare class SubsurfaceProfileStruct {
 	ScatterRadius: number;
 	SubsurfaceColor: LinearColor;
 	FalloffColor: LinearColor;
+	BoundaryColorBleed: LinearColor;
+	ExtinctionScale: number;
+	NormalScale: number;
+	ScatteringDistribution: number;
+	IOR: number;
+	Roughness0: number;
+	Roughness1: number;
+	LobeMix: number;
 	clone() : SubsurfaceProfileStruct;
 	static C(Other: UObject | any): SubsurfaceProfileStruct;
 }
@@ -1035,18 +1109,21 @@ declare class LightmassMaterialInterfaceSettings {
 	static C(Other: UObject | any): LightmassMaterialInterfaceSettings;
 }
 
-declare class StringAssetReference { 
-	AssetLongPathname: string;
-	clone() : StringAssetReference;
-	static C(Other: UObject | any): StringAssetReference;
-	static MakeStringAssetReference(AssetLongPathname: string): StringAssetReference;
+declare class SoftObjectPath { 
+	AssetPathName: string;
+	SubPathString: string;
+	clone() : SoftObjectPath;
+	static C(Other: UObject | any): SoftObjectPath;
+	BreakSoftObjectPath(PathString?: string): {PathString: string};
+	static BreakSoftObjectPath(InSoftObjectPath: SoftObjectPath,PathString?: string): {PathString: string};
+	static MakeSoftObjectPath(PathString: string): SoftObjectPath;
 }
 
 declare class MaterialTextureInfo { 
 	SamplingScale: number;
 	UVChannelIndex: number;
 	TextureName: string;
-	TextureReference: StringAssetReference;
+	TextureReference: SoftObjectPath;
 	TextureIndex: number;
 	clone() : MaterialTextureInfo;
 	static C(Other: UObject | any): MaterialTextureInfo;
@@ -1060,29 +1137,45 @@ declare class ThumbnailInfo extends UObject {
 	static C(Other: UObject | any): ThumbnailInfo;
 }
 
-declare type EEdGraphPinDirection = 'EGPD_Input' | 'EGPD_Output';
-declare var EEdGraphPinDirection : { EGPD_Input:'EGPD_Input',EGPD_Output:'EGPD_Output', };
-declare class EdGraphTerminalType { 
-	TerminalCategory: string;
-	TerminalSubCategory: string;
-	TerminalSubCategoryObject: any;
-	bTerminalIsConst: boolean;
-	bTerminalIsWeakPointer: boolean;
-	clone() : EdGraphTerminalType;
-	static C(Other: UObject | any): EdGraphTerminalType;
+declare class AssetImportInfo { 
+	clone() : AssetImportInfo;
+	static C(Other: UObject | any): AssetImportInfo;
 }
 
-declare type EPinContainerType = 'None' | 'Array' | 'Set' | 'Map';
-declare var EPinContainerType : { None:'None',Array:'Array',Set:'Set',Map:'Map', };
-declare class EdGraphPinType { 
+declare class AssetImportData extends UObject { 
+	SourceFilePath: string;
+	SourceFileTimestamp: string;
+	SourceData: AssetImportInfo;
+	static Load(ResourceName: string): AssetImportData;
+	static Find(Outer: UObject, ResourceName: string): AssetImportData;
+	static GetDefaultObject(): AssetImportData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetImportData;
+	K2_GetFirstFilename(): string;
+	K2_ExtractFilenames(): string[];
+	static C(Other: UObject | any): AssetImportData;
+}
+
+declare type EEdGraphPinDirection = 'EGPD_Input' | 'EGPD_Output' | 'EGPD_MAX';
+declare var EEdGraphPinDirection : { EGPD_Input:'EGPD_Input',EGPD_Output:'EGPD_Output',EGPD_MAX:'EGPD_MAX', };
+declare class EdGraphTerminalType { 
+	TerminalCategory: string;
+	TerminalSubCategory: string;
+	TerminalSubCategoryObject: any;
+	bTerminalIsConst: boolean;
+	bTerminalIsWeakPointer: boolean;
+	clone() : EdGraphTerminalType;
+	static C(Other: UObject | any): EdGraphTerminalType;
+}
+
+declare type EPinContainerType = 'None' | 'Array' | 'Set' | 'Map' | 'EPinContainerType_MAX';
+declare var EPinContainerType : { None:'None',Array:'Array',Set:'Set',Map:'Map',EPinContainerType_MAX:'EPinContainerType_MAX', };
+declare class EdGraphPinType { 
 	PinCategory: string;
 	PinSubCategory: string;
 	PinSubCategoryObject: any;
 	PinSubCategoryMemberReference: SimpleMemberReference;
 	PinValueType: EdGraphTerminalType;
-	ContainerType: ContainerType;
-	bIsMap: boolean;
-	bIsSet: boolean;
+	ContainerType: EPinContainerType;
 	bIsArray: boolean;
 	bIsReference: boolean;
 	bIsConst: boolean;
@@ -1120,10 +1213,12 @@ declare class EdGraphPin_Deprecated extends UObject {
 	static C(Other: UObject | any): EdGraphPin_Deprecated;
 }
 
-declare type ENodeAdvancedPins = 'NoPins' | 'Shown' | 'Hidden';
-declare var ENodeAdvancedPins : { NoPins:'NoPins',Shown:'Shown',Hidden:'Hidden', };
-declare type ENodeEnabledState = 'Enabled' | 'Disabled' | 'DevelopmentOnly';
-declare var ENodeEnabledState : { Enabled:'Enabled',Disabled:'Disabled',DevelopmentOnly:'DevelopmentOnly', };
+declare type ENodeAdvancedPins = 'NoPins' | 'Shown' | 'Hidden' | 'ENodeAdvancedPins_MAX';
+declare var ENodeAdvancedPins : { NoPins:'NoPins',Shown:'Shown',Hidden:'Hidden',ENodeAdvancedPins_MAX:'ENodeAdvancedPins_MAX', };
+declare type ENodeEnabledState = 'Enabled' | 'Disabled' | 'DevelopmentOnly' | 'ENodeEnabledState_MAX';
+declare var ENodeEnabledState : { Enabled:'Enabled',Disabled:'Disabled',DevelopmentOnly:'DevelopmentOnly',ENodeEnabledState_MAX:'ENodeEnabledState_MAX', };
+declare type EJavascriptPinContainerType = 'None' | 'Array' | 'Set' | 'Map' | 'EJavascriptPinContainerType_MAX';
+declare var EJavascriptPinContainerType : { None:'None',Array:'Array',Set:'Set',Map:'Map',EJavascriptPinContainerType_MAX:'EJavascriptPinContainerType_MAX', };
 declare class JavascriptEdGraphPin { 
 	clone() : JavascriptEdGraphPin;
 	static C(Other: UObject | any): JavascriptEdGraphPin;
@@ -1132,20 +1227,26 @@ declare class JavascriptEdGraphPin {
 	GetDirection(): EEdGraphPinDirection;
 	GetLinkedTo(): JavascriptEdGraphPin[];
 	GetOwningNode(): EdGraphNode;
+	GetPinContainerType(): EJavascriptPinContainerType;
+	GetPinGUID(): Guid;
 	GetPinName(): string;
 	GetPinType(): EdGraphPinType;
 	IsValid(): boolean;
 	MakeLinkTo(B: JavascriptEdGraphPin): void;
+	SetPinInfo(InPinName: string,InPinToolTip: string): void;
 	SetPinType(PinType: EdGraphPinType): void;
 	static BreakAllPinLinks(A: JavascriptEdGraphPin): void;
 	static BreakLinkTo(A: JavascriptEdGraphPin,B: JavascriptEdGraphPin): void;
 	static GetDirection(A: JavascriptEdGraphPin): EEdGraphPinDirection;
 	static GetLinkedTo(A: JavascriptEdGraphPin): JavascriptEdGraphPin[];
 	static GetOwningNode(A: JavascriptEdGraphPin): EdGraphNode;
+	static GetPinContainerType(A: JavascriptEdGraphPin): EJavascriptPinContainerType;
+	static GetPinGUID(A: JavascriptEdGraphPin): Guid;
 	static GetPinName(A: JavascriptEdGraphPin): string;
 	static GetPinType(A: JavascriptEdGraphPin): EdGraphPinType;
 	static IsValid(A: JavascriptEdGraphPin): boolean;
 	static MakeLinkTo(A: JavascriptEdGraphPin,B: JavascriptEdGraphPin): void;
+	static SetPinInfo(A: JavascriptEdGraphPin,InPinName: string,InPinToolTip: string): void;
 	static SetPinType(Pin: JavascriptEdGraphPin,PinType: EdGraphPinType): void;
 	static GetDefaultObject(): JavascriptEdGraphPin;
 }
@@ -1157,7 +1258,8 @@ declare class EdGraphNode extends UObject {
 	NodeWidth: number;
 	NodeHeight: number;
 	AdvancedPinDisplay: ENodeAdvancedPins;
-	EnabledState: EnabledState;
+	EnabledState: ENodeEnabledState;
+	bDisplayAsDisabled: boolean;
 	bUserSetEnabledState: boolean;
 	bIsNodeEnabled: boolean;
 	bCanResizeNode: boolean;
@@ -1182,19 +1284,39 @@ declare class EdGraphNode extends UObject {
 	DestroyNode(): void;
 	FindPin(PinName: string,Direction: EEdGraphPinDirection): JavascriptEdGraphPin;
 	GetPins(): JavascriptEdGraphPin[];
+	ResizeNode(NewSize: Vector2D): void;
 	static AutowireNewNode(UNode: EdGraphNode,FromPin: JavascriptEdGraphPin): void;
 	static CanDuplicateNode(UNode: EdGraphNode): boolean;
 	static CanUserDeleteNode(UNode: EdGraphNode): boolean;
 	static DestroyNode(UNode: EdGraphNode): void;
 	static FindPin(UNode: EdGraphNode,PinName: string,Direction: EEdGraphPinDirection): JavascriptEdGraphPin;
 	static GetPins(UNode: EdGraphNode): JavascriptEdGraphPin[];
+	static ResizeNode(UNode: EdGraphNode,NewSize: Vector2D): void;
+}
+
+declare type EMaterialFunctionUsage = 'Default' | 'MaterialLayer' | 'MaterialLayerBlend' | 'EMaterialFunctionUsage_MAX';
+declare var EMaterialFunctionUsage : { Default:'Default',MaterialLayer:'MaterialLayer',MaterialLayerBlend:'MaterialLayerBlend',EMaterialFunctionUsage_MAX:'EMaterialFunctionUsage_MAX', };
+declare class MaterialFunctionInterface extends UObject { 
+	StateId: Guid;
+	MaterialFunctionUsage: EMaterialFunctionUsage;
+	CombinedInputTypes: any;
+	CombinedOutputTypes: any;
+	ThumbnailInfo: ThumbnailInfo;
+	static Load(ResourceName: string): MaterialFunctionInterface;
+	static Find(Outer: UObject, ResourceName: string): MaterialFunctionInterface;
+	static GetDefaultObject(): MaterialFunctionInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionInterface;
+	static C(Other: UObject | any): MaterialFunctionInterface;
+	UpdateMaterialFunction(PreviewMaterial: Material): void;
+	static UpdateMaterialFunction(MaterialFunction: MaterialFunctionInterface,PreviewMaterial: Material): void;
 }
 
 declare class MaterialExpressionComment extends MaterialExpression { 
 	SizeX: number;
 	SizeY: number;
-	Text: string;
+	text: string;
 	CommentColor: LinearColor;
+	FontSize: number;
 	static Load(ResourceName: string): MaterialExpressionComment;
 	static Find(Outer: UObject, ResourceName: string): MaterialExpressionComment;
 	static GetDefaultObject(): MaterialExpressionComment;
@@ -1202,20 +1324,17 @@ declare class MaterialExpressionComment extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionComment;
 }
 
-declare class MaterialFunction extends UObject { 
-	StateId: Guid;
+declare class MaterialFunction extends MaterialFunctionInterface { 
 	ParentFunction: MaterialFunction;
 	Description: string;
 	bExposeToLibrary: boolean;
+	bPrefixParameterNames: boolean;
 	LibraryCategories: string[];
 	LibraryCategoriesText: string[];
 	FunctionExpressions: MaterialExpression[];
 	FunctionEditorComments: MaterialExpressionComment[];
 	PreviewMaterial: Material;
 	bReentrantFlag: boolean;
-	CombinedInputTypes: any;
-	CombinedOutputTypes: any;
-	ThumbnailInfo: ThumbnailInfo;
 	static Load(ResourceName: string): MaterialFunction;
 	static Find(Outer: UObject, ResourceName: string): MaterialFunction;
 	static GetDefaultObject(): MaterialFunction;
@@ -1225,17 +1344,15 @@ declare class MaterialFunction extends UObject {
 	DeleteAllMaterialExpressionsInFunction(): void;
 	DeleteMaterialExpressionInFunction(Expression: MaterialExpression): void;
 	GetNumMaterialExpressionsInFunction(): number;
-	UpdateMaterialFunction(PreviewMaterial: Material): void;
 	static CreateMaterialExpressionInFunction(MaterialFunction: MaterialFunction,ExpressionClass: UnrealEngineClass,NodePosX: number,NodePosY: number): MaterialExpression;
 	static DeleteAllMaterialExpressionsInFunction(MaterialFunction: MaterialFunction): void;
 	static DeleteMaterialExpressionInFunction(MaterialFunction: MaterialFunction,Expression: MaterialExpression): void;
 	static GetNumMaterialExpressionsInFunction(MaterialFunction: MaterialFunction): number;
-	static UpdateMaterialFunction(MaterialFunction: MaterialFunction,PreviewMaterial: Material): void;
 }
 
 declare class ExpressionOutput { 
 	OutputName: string;
-	Mask: number;
+	mask: number;
 	MaskR: number;
 	MaskG: number;
 	MaskB: number;
@@ -1244,8 +1361,8 @@ declare class ExpressionOutput {
 	static C(Other: UObject | any): ExpressionOutput;
 }
 
-declare type EMaterialProperty = 'MP_EmissiveColor' | 'MP_Opacity' | 'MP_OpacityMask' | 'MP_DiffuseColor' | 'MP_SpecularColor' | 'MP_BaseColor' | 'MP_Metallic' | 'MP_Specular' | 'MP_Roughness' | 'MP_Normal' | 'MP_WorldPositionOffset' | 'MP_WorldDisplacement' | 'MP_TessellationMultiplier' | 'MP_SubsurfaceColor' | 'MP_CustomData0' | 'MP_CustomData1' | 'MP_AmbientOcclusion' | 'MP_Refraction' | 'MP_CustomizedUVs0' | 'MP_CustomizedUVs1' | 'MP_CustomizedUVs2' | 'MP_CustomizedUVs3' | 'MP_CustomizedUVs4' | 'MP_CustomizedUVs5' | 'MP_CustomizedUVs6' | 'MP_CustomizedUVs7' | 'MP_PixelDepthOffset' | 'MP_MaterialAttributes' | 'MP_CustomOutput';
-declare var EMaterialProperty : { MP_EmissiveColor:'MP_EmissiveColor',MP_Opacity:'MP_Opacity',MP_OpacityMask:'MP_OpacityMask',MP_DiffuseColor:'MP_DiffuseColor',MP_SpecularColor:'MP_SpecularColor',MP_BaseColor:'MP_BaseColor',MP_Metallic:'MP_Metallic',MP_Specular:'MP_Specular',MP_Roughness:'MP_Roughness',MP_Normal:'MP_Normal',MP_WorldPositionOffset:'MP_WorldPositionOffset',MP_WorldDisplacement:'MP_WorldDisplacement',MP_TessellationMultiplier:'MP_TessellationMultiplier',MP_SubsurfaceColor:'MP_SubsurfaceColor',MP_CustomData0:'MP_CustomData0',MP_CustomData1:'MP_CustomData1',MP_AmbientOcclusion:'MP_AmbientOcclusion',MP_Refraction:'MP_Refraction',MP_CustomizedUVs0:'MP_CustomizedUVs0',MP_CustomizedUVs1:'MP_CustomizedUVs1',MP_CustomizedUVs2:'MP_CustomizedUVs2',MP_CustomizedUVs3:'MP_CustomizedUVs3',MP_CustomizedUVs4:'MP_CustomizedUVs4',MP_CustomizedUVs5:'MP_CustomizedUVs5',MP_CustomizedUVs6:'MP_CustomizedUVs6',MP_CustomizedUVs7:'MP_CustomizedUVs7',MP_PixelDepthOffset:'MP_PixelDepthOffset',MP_MaterialAttributes:'MP_MaterialAttributes',MP_CustomOutput:'MP_CustomOutput', };
+declare type EMaterialProperty = 'MP_EmissiveColor' | 'MP_Opacity' | 'MP_OpacityMask' | 'MP_DiffuseColor' | 'MP_SpecularColor' | 'MP_BaseColor' | 'MP_Metallic' | 'MP_Specular' | 'MP_Roughness' | 'MP_Normal' | 'MP_WorldPositionOffset' | 'MP_WorldDisplacement' | 'MP_TessellationMultiplier' | 'MP_SubsurfaceColor' | 'MP_CustomData0' | 'MP_CustomData1' | 'MP_AmbientOcclusion' | 'MP_Refraction' | 'MP_CustomizedUVs0' | 'MP_CustomizedUVs1' | 'MP_CustomizedUVs2' | 'MP_CustomizedUVs3' | 'MP_CustomizedUVs4' | 'MP_CustomizedUVs5' | 'MP_CustomizedUVs6' | 'MP_CustomizedUVs7' | 'MP_PixelDepthOffset' | 'MP_MaterialAttributes' | 'MP_CustomOutput' | 'MP_MAX';
+declare var EMaterialProperty : { MP_EmissiveColor:'MP_EmissiveColor',MP_Opacity:'MP_Opacity',MP_OpacityMask:'MP_OpacityMask',MP_DiffuseColor:'MP_DiffuseColor',MP_SpecularColor:'MP_SpecularColor',MP_BaseColor:'MP_BaseColor',MP_Metallic:'MP_Metallic',MP_Specular:'MP_Specular',MP_Roughness:'MP_Roughness',MP_Normal:'MP_Normal',MP_WorldPositionOffset:'MP_WorldPositionOffset',MP_WorldDisplacement:'MP_WorldDisplacement',MP_TessellationMultiplier:'MP_TessellationMultiplier',MP_SubsurfaceColor:'MP_SubsurfaceColor',MP_CustomData0:'MP_CustomData0',MP_CustomData1:'MP_CustomData1',MP_AmbientOcclusion:'MP_AmbientOcclusion',MP_Refraction:'MP_Refraction',MP_CustomizedUVs0:'MP_CustomizedUVs0',MP_CustomizedUVs1:'MP_CustomizedUVs1',MP_CustomizedUVs2:'MP_CustomizedUVs2',MP_CustomizedUVs3:'MP_CustomizedUVs3',MP_CustomizedUVs4:'MP_CustomizedUVs4',MP_CustomizedUVs5:'MP_CustomizedUVs5',MP_CustomizedUVs6:'MP_CustomizedUVs6',MP_CustomizedUVs7:'MP_CustomizedUVs7',MP_PixelDepthOffset:'MP_PixelDepthOffset',MP_MaterialAttributes:'MP_MaterialAttributes',MP_CustomOutput:'MP_CustomOutput',MP_MAX:'MP_MAX', };
 declare class MaterialExpression extends UObject { 
 	MaterialExpressionEditorX: number;
 	MaterialExpressionEditorY: number;
@@ -1254,7 +1371,6 @@ declare class MaterialExpression extends UObject {
 	Material: Material;
 	UFunction: MaterialFunction;
 	Desc: string;
-	BorderColor: Color;
 	bRealtimePreview: boolean;
 	bNeedToUpdatePreview: boolean;
 	bIsParameterExpression: boolean;
@@ -1283,7 +1399,7 @@ declare class MaterialInput {
 	Expression: MaterialExpression;
 	OutputIndex: number;
 	InputName: string;
-	Mask: number;
+	mask: number;
 	MaskR: number;
 	MaskG: number;
 	MaskB: number;
@@ -1314,16 +1430,16 @@ declare class VectorMaterialInput extends MaterialInput {
 	static C(Other: UObject | any): VectorMaterialInput;
 }
 
-declare type EMaterialDomain = 'MD_Surface' | 'MD_DeferredDecal' | 'MD_LightFunction' | 'MD_Volume' | 'MD_PostProcess' | 'MD_UI';
-declare var EMaterialDomain : { MD_Surface:'MD_Surface',MD_DeferredDecal:'MD_DeferredDecal',MD_LightFunction:'MD_LightFunction',MD_Volume:'MD_Volume',MD_PostProcess:'MD_PostProcess',MD_UI:'MD_UI', };
-declare type EBlendMode = 'BLEND_Opaque' | 'BLEND_Masked' | 'BLEND_Translucent' | 'BLEND_Additive' | 'BLEND_Modulate' | 'BLEND_AlphaComposite';
-declare var EBlendMode : { BLEND_Opaque:'BLEND_Opaque',BLEND_Masked:'BLEND_Masked',BLEND_Translucent:'BLEND_Translucent',BLEND_Additive:'BLEND_Additive',BLEND_Modulate:'BLEND_Modulate',BLEND_AlphaComposite:'BLEND_AlphaComposite', };
-declare type EDecalBlendMode = 'DBM_Translucent' | 'DBM_Stain' | 'DBM_Normal' | 'DBM_Emissive' | 'DBM_DBuffer_ColorNormalRoughness' | 'DBM_DBuffer_Color' | 'DBM_DBuffer_ColorNormal' | 'DBM_DBuffer_ColorRoughness' | 'DBM_DBuffer_Normal' | 'DBM_DBuffer_NormalRoughness' | 'DBM_DBuffer_Roughness' | 'DBM_Volumetric_DistanceFunction';
-declare var EDecalBlendMode : { DBM_Translucent:'DBM_Translucent',DBM_Stain:'DBM_Stain',DBM_Normal:'DBM_Normal',DBM_Emissive:'DBM_Emissive',DBM_DBuffer_ColorNormalRoughness:'DBM_DBuffer_ColorNormalRoughness',DBM_DBuffer_Color:'DBM_DBuffer_Color',DBM_DBuffer_ColorNormal:'DBM_DBuffer_ColorNormal',DBM_DBuffer_ColorRoughness:'DBM_DBuffer_ColorRoughness',DBM_DBuffer_Normal:'DBM_DBuffer_Normal',DBM_DBuffer_NormalRoughness:'DBM_DBuffer_NormalRoughness',DBM_DBuffer_Roughness:'DBM_DBuffer_Roughness',DBM_Volumetric_DistanceFunction:'DBM_Volumetric_DistanceFunction', };
-declare type EMaterialDecalResponse = 'MDR_None' | 'MDR_ColorNormalRoughness' | 'MDR_Color' | 'MDR_ColorNormal' | 'MDR_ColorRoughness' | 'MDR_Normal' | 'MDR_NormalRoughness' | 'MDR_Roughness';
-declare var EMaterialDecalResponse : { MDR_None:'MDR_None',MDR_ColorNormalRoughness:'MDR_ColorNormalRoughness',MDR_Color:'MDR_Color',MDR_ColorNormal:'MDR_ColorNormal',MDR_ColorRoughness:'MDR_ColorRoughness',MDR_Normal:'MDR_Normal',MDR_NormalRoughness:'MDR_NormalRoughness',MDR_Roughness:'MDR_Roughness', };
-declare type EMaterialShadingModel = 'MSM_Unlit' | 'MSM_DefaultLit' | 'MSM_Subsurface' | 'MSM_PreintegratedSkin' | 'MSM_ClearCoat' | 'MSM_SubsurfaceProfile' | 'MSM_TwoSidedFoliage' | 'MSM_Hair' | 'MSM_Cloth' | 'MSM_Eye';
-declare var EMaterialShadingModel : { MSM_Unlit:'MSM_Unlit',MSM_DefaultLit:'MSM_DefaultLit',MSM_Subsurface:'MSM_Subsurface',MSM_PreintegratedSkin:'MSM_PreintegratedSkin',MSM_ClearCoat:'MSM_ClearCoat',MSM_SubsurfaceProfile:'MSM_SubsurfaceProfile',MSM_TwoSidedFoliage:'MSM_TwoSidedFoliage',MSM_Hair:'MSM_Hair',MSM_Cloth:'MSM_Cloth',MSM_Eye:'MSM_Eye', };
+declare type EMaterialDomain = 'MD_Surface' | 'MD_DeferredDecal' | 'MD_LightFunction' | 'MD_Volume' | 'MD_PostProcess' | 'MD_UI' | 'MD_MAX';
+declare var EMaterialDomain : { MD_Surface:'MD_Surface',MD_DeferredDecal:'MD_DeferredDecal',MD_LightFunction:'MD_LightFunction',MD_Volume:'MD_Volume',MD_PostProcess:'MD_PostProcess',MD_UI:'MD_UI',MD_MAX:'MD_MAX', };
+declare type EBlendMode = 'BLEND_Opaque' | 'BLEND_Masked' | 'BLEND_Translucent' | 'BLEND_Additive' | 'BLEND_Modulate' | 'BLEND_AlphaComposite' | 'BLEND_MAX';
+declare var EBlendMode : { BLEND_Opaque:'BLEND_Opaque',BLEND_Masked:'BLEND_Masked',BLEND_Translucent:'BLEND_Translucent',BLEND_Additive:'BLEND_Additive',BLEND_Modulate:'BLEND_Modulate',BLEND_AlphaComposite:'BLEND_AlphaComposite',BLEND_MAX:'BLEND_MAX', };
+declare type EDecalBlendMode = 'DBM_Translucent' | 'DBM_Stain' | 'DBM_Normal' | 'DBM_Emissive' | 'DBM_DBuffer_ColorNormalRoughness' | 'DBM_DBuffer_Color' | 'DBM_DBuffer_ColorNormal' | 'DBM_DBuffer_ColorRoughness' | 'DBM_DBuffer_Normal' | 'DBM_DBuffer_NormalRoughness' | 'DBM_DBuffer_Roughness' | 'DBM_DBuffer_Emissive' | 'DBM_DBuffer_AlphaComposite' | 'DBM_DBuffer_EmissiveAlphaComposite' | 'DBM_Volumetric_DistanceFunction' | 'DBM_AlphaComposite' | 'DBM_AmbientOcclusion' | 'DBM_MAX';
+declare var EDecalBlendMode : { DBM_Translucent:'DBM_Translucent',DBM_Stain:'DBM_Stain',DBM_Normal:'DBM_Normal',DBM_Emissive:'DBM_Emissive',DBM_DBuffer_ColorNormalRoughness:'DBM_DBuffer_ColorNormalRoughness',DBM_DBuffer_Color:'DBM_DBuffer_Color',DBM_DBuffer_ColorNormal:'DBM_DBuffer_ColorNormal',DBM_DBuffer_ColorRoughness:'DBM_DBuffer_ColorRoughness',DBM_DBuffer_Normal:'DBM_DBuffer_Normal',DBM_DBuffer_NormalRoughness:'DBM_DBuffer_NormalRoughness',DBM_DBuffer_Roughness:'DBM_DBuffer_Roughness',DBM_DBuffer_Emissive:'DBM_DBuffer_Emissive',DBM_DBuffer_AlphaComposite:'DBM_DBuffer_AlphaComposite',DBM_DBuffer_EmissiveAlphaComposite:'DBM_DBuffer_EmissiveAlphaComposite',DBM_Volumetric_DistanceFunction:'DBM_Volumetric_DistanceFunction',DBM_AlphaComposite:'DBM_AlphaComposite',DBM_AmbientOcclusion:'DBM_AmbientOcclusion',DBM_MAX:'DBM_MAX', };
+declare type EMaterialDecalResponse = 'MDR_None' | 'MDR_ColorNormalRoughness' | 'MDR_Color' | 'MDR_ColorNormal' | 'MDR_ColorRoughness' | 'MDR_Normal' | 'MDR_NormalRoughness' | 'MDR_Roughness' | 'MDR_MAX';
+declare var EMaterialDecalResponse : { MDR_None:'MDR_None',MDR_ColorNormalRoughness:'MDR_ColorNormalRoughness',MDR_Color:'MDR_Color',MDR_ColorNormal:'MDR_ColorNormal',MDR_ColorRoughness:'MDR_ColorRoughness',MDR_Normal:'MDR_Normal',MDR_NormalRoughness:'MDR_NormalRoughness',MDR_Roughness:'MDR_Roughness',MDR_MAX:'MDR_MAX', };
+declare type EMaterialShadingModel = 'MSM_Unlit' | 'MSM_DefaultLit' | 'MSM_Subsurface' | 'MSM_PreintegratedSkin' | 'MSM_ClearCoat' | 'MSM_SubsurfaceProfile' | 'MSM_TwoSidedFoliage' | 'MSM_Hair' | 'MSM_Cloth' | 'MSM_Eye' | 'MSM_MAX';
+declare var EMaterialShadingModel : { MSM_Unlit:'MSM_Unlit',MSM_DefaultLit:'MSM_DefaultLit',MSM_Subsurface:'MSM_Subsurface',MSM_PreintegratedSkin:'MSM_PreintegratedSkin',MSM_ClearCoat:'MSM_ClearCoat',MSM_SubsurfaceProfile:'MSM_SubsurfaceProfile',MSM_TwoSidedFoliage:'MSM_TwoSidedFoliage',MSM_Hair:'MSM_Hair',MSM_Cloth:'MSM_Cloth',MSM_Eye:'MSM_Eye',MSM_MAX:'MSM_MAX', };
 declare class Vector2MaterialInput extends MaterialInput { 
 	UseConstant: boolean;
 	ConstantX: number;
@@ -1336,7 +1452,7 @@ declare class ExpressionInput {
 	Expression: MaterialExpression;
 	OutputIndex: number;
 	InputName: string;
-	Mask: number;
+	mask: number;
 	MaskR: number;
 	MaskG: number;
 	MaskB: number;
@@ -1352,10 +1468,10 @@ declare class MaterialAttributesInput extends ExpressionInput {
 	static C(Other: UObject | any): MaterialAttributesInput;
 }
 
-declare type ETranslucencyLightingMode = 'TLM_VolumetricNonDirectional' | 'TLM_VolumetricDirectional' | 'TLM_VolumetricPerVertexNonDirectional' | 'TLM_VolumetricPerVertexDirectional' | 'TLM_Surface' | 'TLM_SurfacePerPixelLighting';
-declare var ETranslucencyLightingMode : { TLM_VolumetricNonDirectional:'TLM_VolumetricNonDirectional',TLM_VolumetricDirectional:'TLM_VolumetricDirectional',TLM_VolumetricPerVertexNonDirectional:'TLM_VolumetricPerVertexNonDirectional',TLM_VolumetricPerVertexDirectional:'TLM_VolumetricPerVertexDirectional',TLM_Surface:'TLM_Surface',TLM_SurfacePerPixelLighting:'TLM_SurfacePerPixelLighting', };
-declare type EMaterialTessellationMode = 'MTM_NoTessellation' | 'MTM_FlatTessellation' | 'MTM_PNTriangles';
-declare var EMaterialTessellationMode : { MTM_NoTessellation:'MTM_NoTessellation',MTM_FlatTessellation:'MTM_FlatTessellation',MTM_PNTriangles:'MTM_PNTriangles', };
+declare type ETranslucencyLightingMode = 'TLM_VolumetricNonDirectional' | 'TLM_VolumetricDirectional' | 'TLM_VolumetricPerVertexNonDirectional' | 'TLM_VolumetricPerVertexDirectional' | 'TLM_Surface' | 'TLM_SurfacePerPixelLighting' | 'TLM_MAX';
+declare var ETranslucencyLightingMode : { TLM_VolumetricNonDirectional:'TLM_VolumetricNonDirectional',TLM_VolumetricDirectional:'TLM_VolumetricDirectional',TLM_VolumetricPerVertexNonDirectional:'TLM_VolumetricPerVertexNonDirectional',TLM_VolumetricPerVertexDirectional:'TLM_VolumetricPerVertexDirectional',TLM_Surface:'TLM_Surface',TLM_SurfacePerPixelLighting:'TLM_SurfacePerPixelLighting',TLM_MAX:'TLM_MAX', };
+declare type EMaterialTessellationMode = 'MTM_NoTessellation' | 'MTM_FlatTessellation' | 'MTM_PNTriangles' | 'MTM_MAX';
+declare var EMaterialTessellationMode : { MTM_NoTessellation:'MTM_NoTessellation',MTM_FlatTessellation:'MTM_FlatTessellation',MTM_PNTriangles:'MTM_PNTriangles',MTM_MAX:'MTM_MAX', };
 declare class ParameterGroupData { 
 	GroupName: string;
 	GroupSortPriority: number;
@@ -1365,14 +1481,14 @@ declare class ParameterGroupData {
 
 declare class MaterialFunctionInfo { 
 	StateId: Guid;
-	UFunction: MaterialFunction;
+	UFunction: MaterialFunctionInterface;
 	clone() : MaterialFunctionInfo;
 	static C(Other: UObject | any): MaterialFunctionInfo;
 }
 
 declare class CollectionParameterBase { 
 	ParameterName: string;
-	Id: Guid;
+	ID: Guid;
 	clone() : CollectionParameterBase;
 	static C(Other: UObject | any): CollectionParameterBase;
 }
@@ -1407,14 +1523,14 @@ declare class MaterialParameterCollectionInfo {
 	static C(Other: UObject | any): MaterialParameterCollectionInfo;
 }
 
-declare type EBlendableLocation = 'BL_AfterTonemapping' | 'BL_BeforeTonemapping' | 'BL_BeforeTranslucency' | 'BL_ReplacingTonemapper';
-declare var EBlendableLocation : { BL_AfterTonemapping:'BL_AfterTonemapping',BL_BeforeTonemapping:'BL_BeforeTonemapping',BL_BeforeTranslucency:'BL_BeforeTranslucency',BL_ReplacingTonemapper:'BL_ReplacingTonemapper', };
-declare type ERefractionMode = 'RM_IndexOfRefraction' | 'RM_PixelNormalOffset';
-declare var ERefractionMode : { RM_IndexOfRefraction:'RM_IndexOfRefraction',RM_PixelNormalOffset:'RM_PixelNormalOffset', };
-declare type ETextureSourceFormat = 'TSF_Invalid' | 'TSF_G8' | 'TSF_BGRA8' | 'TSF_BGRE8' | 'TSF_RGBA16' | 'TSF_RGBA16F' | 'TSF_RGBA8' | 'TSF_RGBE8';
-declare var ETextureSourceFormat : { TSF_Invalid:'TSF_Invalid',TSF_G8:'TSF_G8',TSF_BGRA8:'TSF_BGRA8',TSF_BGRE8:'TSF_BGRE8',TSF_RGBA16:'TSF_RGBA16',TSF_RGBA16F:'TSF_RGBA16F',TSF_RGBA8:'TSF_RGBA8',TSF_RGBE8:'TSF_RGBE8', };
+declare type EBlendableLocation = 'BL_AfterTonemapping' | 'BL_BeforeTonemapping' | 'BL_BeforeTranslucency' | 'BL_ReplacingTonemapper' | 'BL_SSRInput' | 'BL_MAX';
+declare var EBlendableLocation : { BL_AfterTonemapping:'BL_AfterTonemapping',BL_BeforeTonemapping:'BL_BeforeTonemapping',BL_BeforeTranslucency:'BL_BeforeTranslucency',BL_ReplacingTonemapper:'BL_ReplacingTonemapper',BL_SSRInput:'BL_SSRInput',BL_MAX:'BL_MAX', };
+declare type ERefractionMode = 'RM_IndexOfRefraction' | 'RM_PixelNormalOffset' | 'RM_MAX';
+declare var ERefractionMode : { RM_IndexOfRefraction:'RM_IndexOfRefraction',RM_PixelNormalOffset:'RM_PixelNormalOffset',RM_MAX:'RM_MAX', };
+declare type ETextureSourceFormat = 'TSF_Invalid' | 'TSF_G8' | 'TSF_BGRA8' | 'TSF_BGRE8' | 'TSF_RGBA16' | 'TSF_RGBA16F' | 'TSF_RGBA8' | 'TSF_RGBE8' | 'TSF_MAX';
+declare var ETextureSourceFormat : { TSF_Invalid:'TSF_Invalid',TSF_G8:'TSF_G8',TSF_BGRA8:'TSF_BGRA8',TSF_BGRE8:'TSF_BGRE8',TSF_RGBA16:'TSF_RGBA16',TSF_RGBA16F:'TSF_RGBA16F',TSF_RGBA8:'TSF_RGBA8',TSF_RGBE8:'TSF_RGBE8',TSF_MAX:'TSF_MAX', };
 declare class TextureSource { 
-	Id: Guid;
+	ID: Guid;
 	SizeX: number;
 	SizeY: number;
 	NumSlices: number;
@@ -1426,22 +1542,8 @@ declare class TextureSource {
 	static C(Other: UObject | any): TextureSource;
 }
 
-declare class AssetImportInfo { 
-	clone() : AssetImportInfo;
-	static C(Other: UObject | any): AssetImportInfo;
-}
-
-declare class AssetImportData extends UObject { 
-	SourceFilePath: string;
-	SourceFileTimestamp: string;
-	SourceData: AssetImportInfo;
-	static Load(ResourceName: string): AssetImportData;
-	static Find(Outer: UObject, ResourceName: string): AssetImportData;
-	static GetDefaultObject(): AssetImportData;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetImportData;
-	static C(Other: UObject | any): AssetImportData;
-}
-
+declare type ETextureCompressionQuality = 'TCQ_Default' | 'TCQ_Lowest' | 'TCQ_Low' | 'TCQ_Medium' | 'TCQ_High' | 'TCQ_Highest' | 'TCQ_MAX';
+declare var ETextureCompressionQuality : { TCQ_Default:'TCQ_Default',TCQ_Lowest:'TCQ_Lowest',TCQ_Low:'TCQ_Low',TCQ_Medium:'TCQ_Medium',TCQ_High:'TCQ_High',TCQ_Highest:'TCQ_Highest',TCQ_MAX:'TCQ_MAX', };
 declare class Vector4 { 
 	X: number;
 	Y: number;
@@ -1451,18 +1553,30 @@ declare class Vector4 {
 	static C(Other: UObject | any): Vector4;
 }
 
-declare type ETexturePowerOfTwoSetting = 'None' | 'PadToPowerOfTwo' | 'PadToSquarePowerOfTwo';
-declare var ETexturePowerOfTwoSetting : { None:'None',PadToPowerOfTwo:'PadToPowerOfTwo',PadToSquarePowerOfTwo:'PadToSquarePowerOfTwo', };
-declare type TextureMipGenSettings = 'TMGS_FromTextureGroup' | 'TMGS_SimpleAverage' | 'TMGS_Sharpen0' | 'TMGS_Sharpen1' | 'TMGS_Sharpen2' | 'TMGS_Sharpen3' | 'TMGS_Sharpen4' | 'TMGS_Sharpen5' | 'TMGS_Sharpen6' | 'TMGS_Sharpen7' | 'TMGS_Sharpen8' | 'TMGS_Sharpen9' | 'TMGS_Sharpen10' | 'TMGS_NoMipmaps' | 'TMGS_LeaveExistingMips' | 'TMGS_Blur1' | 'TMGS_Blur2' | 'TMGS_Blur3' | 'TMGS_Blur4' | 'TMGS_Blur5';
-declare var TextureMipGenSettings : { TMGS_FromTextureGroup:'TMGS_FromTextureGroup',TMGS_SimpleAverage:'TMGS_SimpleAverage',TMGS_Sharpen0:'TMGS_Sharpen0',TMGS_Sharpen1:'TMGS_Sharpen1',TMGS_Sharpen2:'TMGS_Sharpen2',TMGS_Sharpen3:'TMGS_Sharpen3',TMGS_Sharpen4:'TMGS_Sharpen4',TMGS_Sharpen5:'TMGS_Sharpen5',TMGS_Sharpen6:'TMGS_Sharpen6',TMGS_Sharpen7:'TMGS_Sharpen7',TMGS_Sharpen8:'TMGS_Sharpen8',TMGS_Sharpen9:'TMGS_Sharpen9',TMGS_Sharpen10:'TMGS_Sharpen10',TMGS_NoMipmaps:'TMGS_NoMipmaps',TMGS_LeaveExistingMips:'TMGS_LeaveExistingMips',TMGS_Blur1:'TMGS_Blur1',TMGS_Blur2:'TMGS_Blur2',TMGS_Blur3:'TMGS_Blur3',TMGS_Blur4:'TMGS_Blur4',TMGS_Blur5:'TMGS_Blur5', };
-declare type ECompositeTextureMode = 'CTM_Disabled' | 'CTM_NormalRoughnessToRed' | 'CTM_NormalRoughnessToGreen' | 'CTM_NormalRoughnessToBlue' | 'CTM_NormalRoughnessToAlpha';
-declare var ECompositeTextureMode : { CTM_Disabled:'CTM_Disabled',CTM_NormalRoughnessToRed:'CTM_NormalRoughnessToRed',CTM_NormalRoughnessToGreen:'CTM_NormalRoughnessToGreen',CTM_NormalRoughnessToBlue:'CTM_NormalRoughnessToBlue',CTM_NormalRoughnessToAlpha:'CTM_NormalRoughnessToAlpha', };
-declare type TextureCompressionSettings = 'TC_Default' | 'TC_Normalmap' | 'TC_Masks' | 'TC_Grayscale' | 'TC_Displacementmap' | 'TC_VectorDisplacementmap' | 'TC_HDR' | 'TC_EditorIcon' | 'TC_Alpha' | 'TC_DistanceFieldFont' | 'TC_HDR_Compressed' | 'TC_BC7';
-declare var TextureCompressionSettings : { TC_Default:'TC_Default',TC_Normalmap:'TC_Normalmap',TC_Masks:'TC_Masks',TC_Grayscale:'TC_Grayscale',TC_Displacementmap:'TC_Displacementmap',TC_VectorDisplacementmap:'TC_VectorDisplacementmap',TC_HDR:'TC_HDR',TC_EditorIcon:'TC_EditorIcon',TC_Alpha:'TC_Alpha',TC_DistanceFieldFont:'TC_DistanceFieldFont',TC_HDR_Compressed:'TC_HDR_Compressed',TC_BC7:'TC_BC7', };
-declare type TextureFilter = 'TF_Nearest' | 'TF_Bilinear' | 'TF_Trilinear' | 'TF_Default';
-declare var TextureFilter : { TF_Nearest:'TF_Nearest',TF_Bilinear:'TF_Bilinear',TF_Trilinear:'TF_Trilinear',TF_Default:'TF_Default', };
-declare type TextureGroup = 'TEXTUREGROUP_World' | 'TEXTUREGROUP_WorldNormalMap' | 'TEXTUREGROUP_WorldSpecular' | 'TEXTUREGROUP_Character' | 'TEXTUREGROUP_CharacterNormalMap' | 'TEXTUREGROUP_CharacterSpecular' | 'TEXTUREGROUP_Weapon' | 'TEXTUREGROUP_WeaponNormalMap' | 'TEXTUREGROUP_WeaponSpecular' | 'TEXTUREGROUP_Vehicle' | 'TEXTUREGROUP_VehicleNormalMap' | 'TEXTUREGROUP_VehicleSpecular' | 'TEXTUREGROUP_Cinematic' | 'TEXTUREGROUP_Effects' | 'TEXTUREGROUP_EffectsNotFiltered' | 'TEXTUREGROUP_Skybox' | 'TEXTUREGROUP_UI' | 'TEXTUREGROUP_Lightmap' | 'TEXTUREGROUP_RenderTarget' | 'TEXTUREGROUP_MobileFlattened' | 'TEXTUREGROUP_ProcBuilding_Face' | 'TEXTUREGROUP_ProcBuilding_LightMap' | 'TEXTUREGROUP_Shadowmap' | 'TEXTUREGROUP_ColorLookupTable' | 'TEXTUREGROUP_Terrain_Heightmap' | 'TEXTUREGROUP_Terrain_Weightmap' | 'TEXTUREGROUP_Bokeh' | 'TEXTUREGROUP_IESLightProfile' | 'TEXTUREGROUP_Pixels2D' | 'TEXTUREGROUP_HierarchicalLOD';
-declare var TextureGroup : { TEXTUREGROUP_World:'TEXTUREGROUP_World',TEXTUREGROUP_WorldNormalMap:'TEXTUREGROUP_WorldNormalMap',TEXTUREGROUP_WorldSpecular:'TEXTUREGROUP_WorldSpecular',TEXTUREGROUP_Character:'TEXTUREGROUP_Character',TEXTUREGROUP_CharacterNormalMap:'TEXTUREGROUP_CharacterNormalMap',TEXTUREGROUP_CharacterSpecular:'TEXTUREGROUP_CharacterSpecular',TEXTUREGROUP_Weapon:'TEXTUREGROUP_Weapon',TEXTUREGROUP_WeaponNormalMap:'TEXTUREGROUP_WeaponNormalMap',TEXTUREGROUP_WeaponSpecular:'TEXTUREGROUP_WeaponSpecular',TEXTUREGROUP_Vehicle:'TEXTUREGROUP_Vehicle',TEXTUREGROUP_VehicleNormalMap:'TEXTUREGROUP_VehicleNormalMap',TEXTUREGROUP_VehicleSpecular:'TEXTUREGROUP_VehicleSpecular',TEXTUREGROUP_Cinematic:'TEXTUREGROUP_Cinematic',TEXTUREGROUP_Effects:'TEXTUREGROUP_Effects',TEXTUREGROUP_EffectsNotFiltered:'TEXTUREGROUP_EffectsNotFiltered',TEXTUREGROUP_Skybox:'TEXTUREGROUP_Skybox',TEXTUREGROUP_UI:'TEXTUREGROUP_UI',TEXTUREGROUP_Lightmap:'TEXTUREGROUP_Lightmap',TEXTUREGROUP_RenderTarget:'TEXTUREGROUP_RenderTarget',TEXTUREGROUP_MobileFlattened:'TEXTUREGROUP_MobileFlattened',TEXTUREGROUP_ProcBuilding_Face:'TEXTUREGROUP_ProcBuilding_Face',TEXTUREGROUP_ProcBuilding_LightMap:'TEXTUREGROUP_ProcBuilding_LightMap',TEXTUREGROUP_Shadowmap:'TEXTUREGROUP_Shadowmap',TEXTUREGROUP_ColorLookupTable:'TEXTUREGROUP_ColorLookupTable',TEXTUREGROUP_Terrain_Heightmap:'TEXTUREGROUP_Terrain_Heightmap',TEXTUREGROUP_Terrain_Weightmap:'TEXTUREGROUP_Terrain_Weightmap',TEXTUREGROUP_Bokeh:'TEXTUREGROUP_Bokeh',TEXTUREGROUP_IESLightProfile:'TEXTUREGROUP_IESLightProfile',TEXTUREGROUP_Pixels2D:'TEXTUREGROUP_Pixels2D',TEXTUREGROUP_HierarchicalLOD:'TEXTUREGROUP_HierarchicalLOD', };
+declare type ETexturePowerOfTwoSetting = 'None' | 'PadToPowerOfTwo' | 'PadToSquarePowerOfTwo' | 'ETexturePowerOfTwoSetting_MAX';
+declare var ETexturePowerOfTwoSetting : { None:'None',PadToPowerOfTwo:'PadToPowerOfTwo',PadToSquarePowerOfTwo:'PadToSquarePowerOfTwo',ETexturePowerOfTwoSetting_MAX:'ETexturePowerOfTwoSetting_MAX', };
+declare type TextureMipGenSettings = 'TMGS_FromTextureGroup' | 'TMGS_SimpleAverage' | 'TMGS_Sharpen0' | 'TMGS_Sharpen1' | 'TMGS_Sharpen2' | 'TMGS_Sharpen3' | 'TMGS_Sharpen4' | 'TMGS_Sharpen5' | 'TMGS_Sharpen6' | 'TMGS_Sharpen7' | 'TMGS_Sharpen8' | 'TMGS_Sharpen9' | 'TMGS_Sharpen10' | 'TMGS_NoMipmaps' | 'TMGS_LeaveExistingMips' | 'TMGS_Blur1' | 'TMGS_Blur2' | 'TMGS_Blur3' | 'TMGS_Blur4' | 'TMGS_Blur5' | 'TMGS_MAX';
+declare var TextureMipGenSettings : { TMGS_FromTextureGroup:'TMGS_FromTextureGroup',TMGS_SimpleAverage:'TMGS_SimpleAverage',TMGS_Sharpen0:'TMGS_Sharpen0',TMGS_Sharpen1:'TMGS_Sharpen1',TMGS_Sharpen2:'TMGS_Sharpen2',TMGS_Sharpen3:'TMGS_Sharpen3',TMGS_Sharpen4:'TMGS_Sharpen4',TMGS_Sharpen5:'TMGS_Sharpen5',TMGS_Sharpen6:'TMGS_Sharpen6',TMGS_Sharpen7:'TMGS_Sharpen7',TMGS_Sharpen8:'TMGS_Sharpen8',TMGS_Sharpen9:'TMGS_Sharpen9',TMGS_Sharpen10:'TMGS_Sharpen10',TMGS_NoMipmaps:'TMGS_NoMipmaps',TMGS_LeaveExistingMips:'TMGS_LeaveExistingMips',TMGS_Blur1:'TMGS_Blur1',TMGS_Blur2:'TMGS_Blur2',TMGS_Blur3:'TMGS_Blur3',TMGS_Blur4:'TMGS_Blur4',TMGS_Blur5:'TMGS_Blur5',TMGS_MAX:'TMGS_MAX', };
+declare type ECompositeTextureMode = 'CTM_Disabled' | 'CTM_NormalRoughnessToRed' | 'CTM_NormalRoughnessToGreen' | 'CTM_NormalRoughnessToBlue' | 'CTM_NormalRoughnessToAlpha' | 'CTM_MAX';
+declare var ECompositeTextureMode : { CTM_Disabled:'CTM_Disabled',CTM_NormalRoughnessToRed:'CTM_NormalRoughnessToRed',CTM_NormalRoughnessToGreen:'CTM_NormalRoughnessToGreen',CTM_NormalRoughnessToBlue:'CTM_NormalRoughnessToBlue',CTM_NormalRoughnessToAlpha:'CTM_NormalRoughnessToAlpha',CTM_MAX:'CTM_MAX', };
+declare type TextureCompressionSettings = 'TC_Default' | 'TC_Normalmap' | 'TC_Masks' | 'TC_Grayscale' | 'TC_Displacementmap' | 'TC_VectorDisplacementmap' | 'TC_HDR' | 'TC_EditorIcon' | 'TC_Alpha' | 'TC_DistanceFieldFont' | 'TC_HDR_Compressed' | 'TC_BC7' | 'TC_MAX';
+declare var TextureCompressionSettings : { TC_Default:'TC_Default',TC_Normalmap:'TC_Normalmap',TC_Masks:'TC_Masks',TC_Grayscale:'TC_Grayscale',TC_Displacementmap:'TC_Displacementmap',TC_VectorDisplacementmap:'TC_VectorDisplacementmap',TC_HDR:'TC_HDR',TC_EditorIcon:'TC_EditorIcon',TC_Alpha:'TC_Alpha',TC_DistanceFieldFont:'TC_DistanceFieldFont',TC_HDR_Compressed:'TC_HDR_Compressed',TC_BC7:'TC_BC7',TC_MAX:'TC_MAX', };
+declare type TextureFilter = 'TF_Nearest' | 'TF_Bilinear' | 'TF_Trilinear' | 'TF_Default' | 'TF_MAX';
+declare var TextureFilter : { TF_Nearest:'TF_Nearest',TF_Bilinear:'TF_Bilinear',TF_Trilinear:'TF_Trilinear',TF_Default:'TF_Default',TF_MAX:'TF_MAX', };
+declare type TextureGroup = 'TEXTUREGROUP_World' | 'TEXTUREGROUP_WorldNormalMap' | 'TEXTUREGROUP_WorldSpecular' | 'TEXTUREGROUP_Character' | 'TEXTUREGROUP_CharacterNormalMap' | 'TEXTUREGROUP_CharacterSpecular' | 'TEXTUREGROUP_Weapon' | 'TEXTUREGROUP_WeaponNormalMap' | 'TEXTUREGROUP_WeaponSpecular' | 'TEXTUREGROUP_Vehicle' | 'TEXTUREGROUP_VehicleNormalMap' | 'TEXTUREGROUP_VehicleSpecular' | 'TEXTUREGROUP_Cinematic' | 'TEXTUREGROUP_Effects' | 'TEXTUREGROUP_EffectsNotFiltered' | 'TEXTUREGROUP_Skybox' | 'TEXTUREGROUP_UI' | 'TEXTUREGROUP_Lightmap' | 'TEXTUREGROUP_RenderTarget' | 'TEXTUREGROUP_MobileFlattened' | 'TEXTUREGROUP_ProcBuilding_Face' | 'TEXTUREGROUP_ProcBuilding_LightMap' | 'TEXTUREGROUP_Shadowmap' | 'TEXTUREGROUP_ColorLookupTable' | 'TEXTUREGROUP_Terrain_Heightmap' | 'TEXTUREGROUP_Terrain_Weightmap' | 'TEXTUREGROUP_Bokeh' | 'TEXTUREGROUP_IESLightProfile' | 'TEXTUREGROUP_Pixels2D' | 'TEXTUREGROUP_HierarchicalLOD' | 'TEXTUREGROUP_Impostor' | 'TEXTUREGROUP_ImpostorNormalDepth' | 'TEXTUREGROUP_Project01' | 'TEXTUREGROUP_Project02' | 'TEXTUREGROUP_Project03' | 'TEXTUREGROUP_Project04' | 'TEXTUREGROUP_Project05' | 'TEXTUREGROUP_Project06' | 'TEXTUREGROUP_Project07' | 'TEXTUREGROUP_Project08' | 'TEXTUREGROUP_Project09' | 'TEXTUREGROUP_Project10' | 'TEXTUREGROUP_MAX';
+declare var TextureGroup : { TEXTUREGROUP_World:'TEXTUREGROUP_World',TEXTUREGROUP_WorldNormalMap:'TEXTUREGROUP_WorldNormalMap',TEXTUREGROUP_WorldSpecular:'TEXTUREGROUP_WorldSpecular',TEXTUREGROUP_Character:'TEXTUREGROUP_Character',TEXTUREGROUP_CharacterNormalMap:'TEXTUREGROUP_CharacterNormalMap',TEXTUREGROUP_CharacterSpecular:'TEXTUREGROUP_CharacterSpecular',TEXTUREGROUP_Weapon:'TEXTUREGROUP_Weapon',TEXTUREGROUP_WeaponNormalMap:'TEXTUREGROUP_WeaponNormalMap',TEXTUREGROUP_WeaponSpecular:'TEXTUREGROUP_WeaponSpecular',TEXTUREGROUP_Vehicle:'TEXTUREGROUP_Vehicle',TEXTUREGROUP_VehicleNormalMap:'TEXTUREGROUP_VehicleNormalMap',TEXTUREGROUP_VehicleSpecular:'TEXTUREGROUP_VehicleSpecular',TEXTUREGROUP_Cinematic:'TEXTUREGROUP_Cinematic',TEXTUREGROUP_Effects:'TEXTUREGROUP_Effects',TEXTUREGROUP_EffectsNotFiltered:'TEXTUREGROUP_EffectsNotFiltered',TEXTUREGROUP_Skybox:'TEXTUREGROUP_Skybox',TEXTUREGROUP_UI:'TEXTUREGROUP_UI',TEXTUREGROUP_Lightmap:'TEXTUREGROUP_Lightmap',TEXTUREGROUP_RenderTarget:'TEXTUREGROUP_RenderTarget',TEXTUREGROUP_MobileFlattened:'TEXTUREGROUP_MobileFlattened',TEXTUREGROUP_ProcBuilding_Face:'TEXTUREGROUP_ProcBuilding_Face',TEXTUREGROUP_ProcBuilding_LightMap:'TEXTUREGROUP_ProcBuilding_LightMap',TEXTUREGROUP_Shadowmap:'TEXTUREGROUP_Shadowmap',TEXTUREGROUP_ColorLookupTable:'TEXTUREGROUP_ColorLookupTable',TEXTUREGROUP_Terrain_Heightmap:'TEXTUREGROUP_Terrain_Heightmap',TEXTUREGROUP_Terrain_Weightmap:'TEXTUREGROUP_Terrain_Weightmap',TEXTUREGROUP_Bokeh:'TEXTUREGROUP_Bokeh',TEXTUREGROUP_IESLightProfile:'TEXTUREGROUP_IESLightProfile',TEXTUREGROUP_Pixels2D:'TEXTUREGROUP_Pixels2D',TEXTUREGROUP_HierarchicalLOD:'TEXTUREGROUP_HierarchicalLOD',TEXTUREGROUP_Impostor:'TEXTUREGROUP_Impostor',TEXTUREGROUP_ImpostorNormalDepth:'TEXTUREGROUP_ImpostorNormalDepth',TEXTUREGROUP_Project01:'TEXTUREGROUP_Project01',TEXTUREGROUP_Project02:'TEXTUREGROUP_Project02',TEXTUREGROUP_Project03:'TEXTUREGROUP_Project03',TEXTUREGROUP_Project04:'TEXTUREGROUP_Project04',TEXTUREGROUP_Project05:'TEXTUREGROUP_Project05',TEXTUREGROUP_Project06:'TEXTUREGROUP_Project06',TEXTUREGROUP_Project07:'TEXTUREGROUP_Project07',TEXTUREGROUP_Project08:'TEXTUREGROUP_Project08',TEXTUREGROUP_Project09:'TEXTUREGROUP_Project09',TEXTUREGROUP_Project10:'TEXTUREGROUP_Project10',TEXTUREGROUP_MAX:'TEXTUREGROUP_MAX', };
+declare type EDesiredImageFormat = 'PNG' | 'JPG' | 'BMP' | 'EXR' | 'EDesiredImageFormat_MAX';
+declare var EDesiredImageFormat : { PNG:'PNG',JPG:'JPG',BMP:'BMP',EXR:'EXR',EDesiredImageFormat_MAX:'EDesiredImageFormat_MAX', };
+declare class ImageWriteOptions { 
+	Format: EDesiredImageFormat;
+	OnComplete: UnrealEngineDelegate<(bSuccess: boolean) => void>;
+	CompressionQuality: number;
+	bOverwriteFile: boolean;
+	bAsync: boolean;
+	clone() : ImageWriteOptions;
+	static C(Other: UObject | any): ImageWriteOptions;
+}
+
 declare class Texture extends UObject { 
 	Source: TextureSource;
 	LightingGuid: Guid;
@@ -1480,6 +1594,7 @@ declare class Texture extends UObject {
 	CompressionNone: boolean;
 	DeferCompression: boolean;
 	MaxTextureSize: number;
+	CompressionQuality: ETextureCompressionQuality;
 	bDitherMipMapAlpha: boolean;
 	AlphaCoverageThresholds: Vector4;
 	bPreserveBorder: boolean;
@@ -1496,30 +1611,32 @@ declare class Texture extends UObject {
 	CompositePower: number;
 	LODBias: number;
 	NumCinematicMipLevels: number;
+	CompressionSettings: TextureCompressionSettings;
+	Filter: TextureFilter;
+	LODGroup: TextureGroup;
 	SRGB: boolean;
 	bUseLegacyGamma: boolean;
 	NeverStream: boolean;
 	bNoTiling: boolean;
 	bUseCinematicMipLevels: boolean;
-	AssetUserData: AssetUserData[];
-	CachedCombinedLODBias: number;
 	bAsyncResourceReleaseHasBeenStarted: boolean;
-	CompressionSettings: TextureCompressionSettings;
-	Filter: TextureFilter;
-	LODGroup: TextureGroup;
+	CachedCombinedLODBias: number;
+	AssetUserData: AssetUserData[];
 	static Load(ResourceName: string): Texture;
 	static Find(Outer: UObject, ResourceName: string): Texture;
 	static GetDefaultObject(): Texture;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Texture;
 	static C(Other: UObject | any): Texture;
 	SetSplashScreen(Scale: Vector2D,Offset: Vector2D,bShowLoadingMovie: boolean,bShowOnSet: boolean): void;
+	ExportToDisk(Filename: string,Options: ImageWriteOptions): void;
 	SetSpectatorScreenTexture(): void;
 	static SetSplashScreen(Texture: Texture,Scale: Vector2D,Offset: Vector2D,bShowLoadingMovie: boolean,bShowOnSet: boolean): void;
+	static ExportToDisk(Texture: Texture,Filename: string,Options: ImageWriteOptions): void;
 	static SetSpectatorScreenTexture(InTexture: Texture): void;
 }
 
-declare type EMaterialUsage = 'MATUSAGE_SkeletalMesh' | 'MATUSAGE_ParticleSprites' | 'MATUSAGE_BeamTrails' | 'MATUSAGE_MeshParticles' | 'MATUSAGE_StaticLighting' | 'MATUSAGE_MorphTargets' | 'MATUSAGE_SplineMesh' | 'MATUSAGE_InstancedStaticMeshes' | 'MATUSAGE_Clothing' | 'MATUSAGE_NiagaraSprites' | 'MATUSAGE_NiagaraRibbons' | 'MATUSAGE_NiagaraMeshParticles';
-declare var EMaterialUsage : { MATUSAGE_SkeletalMesh:'MATUSAGE_SkeletalMesh',MATUSAGE_ParticleSprites:'MATUSAGE_ParticleSprites',MATUSAGE_BeamTrails:'MATUSAGE_BeamTrails',MATUSAGE_MeshParticles:'MATUSAGE_MeshParticles',MATUSAGE_StaticLighting:'MATUSAGE_StaticLighting',MATUSAGE_MorphTargets:'MATUSAGE_MorphTargets',MATUSAGE_SplineMesh:'MATUSAGE_SplineMesh',MATUSAGE_InstancedStaticMeshes:'MATUSAGE_InstancedStaticMeshes',MATUSAGE_Clothing:'MATUSAGE_Clothing',MATUSAGE_NiagaraSprites:'MATUSAGE_NiagaraSprites',MATUSAGE_NiagaraRibbons:'MATUSAGE_NiagaraRibbons',MATUSAGE_NiagaraMeshParticles:'MATUSAGE_NiagaraMeshParticles', };
+declare type EMaterialUsage = 'MATUSAGE_SkeletalMesh' | 'MATUSAGE_ParticleSprites' | 'MATUSAGE_BeamTrails' | 'MATUSAGE_MeshParticles' | 'MATUSAGE_StaticLighting' | 'MATUSAGE_MorphTargets' | 'MATUSAGE_SplineMesh' | 'MATUSAGE_InstancedStaticMeshes' | 'MATUSAGE_Clothing' | 'MATUSAGE_NiagaraSprites' | 'MATUSAGE_NiagaraRibbons' | 'MATUSAGE_NiagaraMeshParticles' | 'MATUSAGE_GeometryCache' | 'MATUSAGE_MAX';
+declare var EMaterialUsage : { MATUSAGE_SkeletalMesh:'MATUSAGE_SkeletalMesh',MATUSAGE_ParticleSprites:'MATUSAGE_ParticleSprites',MATUSAGE_BeamTrails:'MATUSAGE_BeamTrails',MATUSAGE_MeshParticles:'MATUSAGE_MeshParticles',MATUSAGE_StaticLighting:'MATUSAGE_StaticLighting',MATUSAGE_MorphTargets:'MATUSAGE_MorphTargets',MATUSAGE_SplineMesh:'MATUSAGE_SplineMesh',MATUSAGE_InstancedStaticMeshes:'MATUSAGE_InstancedStaticMeshes',MATUSAGE_Clothing:'MATUSAGE_Clothing',MATUSAGE_NiagaraSprites:'MATUSAGE_NiagaraSprites',MATUSAGE_NiagaraRibbons:'MATUSAGE_NiagaraRibbons',MATUSAGE_NiagaraMeshParticles:'MATUSAGE_NiagaraMeshParticles',MATUSAGE_GeometryCache:'MATUSAGE_GeometryCache',MATUSAGE_MAX:'MATUSAGE_MAX', };
 declare class Material extends MaterialInterface { 
 	PhysMaterial: PhysicalMaterial;
 	DiffuseColor: ColorMaterialInput;
@@ -1538,11 +1655,12 @@ declare class Material extends MaterialInterface {
 	MaterialDecalResponse: EMaterialDecalResponse;
 	ShadingModel: EMaterialShadingModel;
 	OpacityMaskClipValue: number;
+	bCastDynamicShadowAsMasked: boolean;
 	WorldPositionOffset: VectorMaterialInput;
 	WorldDisplacement: VectorMaterialInput;
 	TessellationMultiplier: ScalarMaterialInput;
 	SubsurfaceColor: ColorMaterialInput;
-	ClearCoat: ScalarMaterialInput;
+	Clearcoat: ScalarMaterialInput;
 	ClearCoatRoughness: ScalarMaterialInput;
 	AmbientOcclusion: ScalarMaterialInput;
 	Refraction: ScalarMaterialInput;
@@ -1553,6 +1671,7 @@ declare class Material extends MaterialInterface {
 	bEnableMobileSeparateTranslucency: boolean;
 	bEnableResponsiveAA: boolean;
 	bScreenSpaceReflections: boolean;
+	bContactShadows: boolean;
 	TwoSided: boolean;
 	DitheredLODTransition: boolean;
 	DitherOpacityMask: boolean;
@@ -1569,6 +1688,7 @@ declare class Material extends MaterialInterface {
 	TranslucentMultipleScatteringExtinction: LinearColor;
 	TranslucentShadowStartOffset: number;
 	bDisableDepthTest: boolean;
+	bWriteOnlyAlpha: boolean;
 	bGenerateSphericalParticleNormals: boolean;
 	bTangentSpaceNormal: boolean;
 	bUseEmissiveForDynamicAreaLighting: boolean;
@@ -1582,6 +1702,7 @@ declare class Material extends MaterialInterface {
 	bUsedWithNiagaraSprites: boolean;
 	bUsedWithNiagaraRibbons: boolean;
 	bUsedWithNiagaraMeshParticles: boolean;
+	bUsedWithGeometryCache: boolean;
 	bUsedWithStaticLighting: boolean;
 	bUsedWithMorphTargets: boolean;
 	bUsedWithSplineMeshes: boolean;
@@ -1614,6 +1735,7 @@ declare class Material extends MaterialInterface {
 	bCanMaskedBeAssumedOpaque: boolean;
 	bIsMasked: boolean;
 	bIsPreviewMaterial: boolean;
+	bIsFunctionPreviewMaterial: boolean;
 	bUseMaterialAttributes: boolean;
 	bUseTranslucencyVertexFog: boolean;
 	bComputeFogPerPixel: boolean;
@@ -1626,6 +1748,7 @@ declare class Material extends MaterialInterface {
 	RefractionMode: ERefractionMode;
 	RefractionDepthBias: number;
 	StateId: Guid;
+	CachedQualityLevelsUsed: boolean[];
 	ExpressionTextureReferences: Texture[];
 	ReferencedTextureGuids: Guid[];
 	static Load(ResourceName: string): Material;
@@ -1647,21 +1770,82 @@ declare class Material extends MaterialInterface {
 	static SetMaterialUsage(Material: Material,Usage: EMaterialUsage,bNeedsRecompile?: boolean): {bNeedsRecompile: boolean, $: boolean};
 }
 
-declare type EAttachLocation = 'KeepRelativeOffset' | 'KeepWorldPosition' | 'SnapToTarget' | 'SnapToTargetIncludingScale';
-declare var EAttachLocation : { KeepRelativeOffset:'KeepRelativeOffset',KeepWorldPosition:'KeepWorldPosition',SnapToTarget:'SnapToTarget',SnapToTargetIncludingScale:'SnapToTargetIncludingScale', };
-declare type EFontCacheType = 'Offline' | 'Runtime';
-declare var EFontCacheType : { Offline:'Offline',Runtime:'Runtime', };
-declare class FontCharacter { 
-	StartU: number;
-	StartV: number;
-	USize: number;
-	VSize: number;
-	TextureIndex: number;
-	VerticalOffset: number;
-	clone() : FontCharacter;
-	static C(Other: UObject | any): FontCharacter;
+declare type EAttachLocation = 'KeepRelativeOffset' | 'KeepWorldPosition' | 'SnapToTarget' | 'SnapToTargetIncludingScale' | 'EAttachLocation_MAX';
+declare var EAttachLocation : { KeepRelativeOffset:'KeepRelativeOffset',KeepWorldPosition:'KeepWorldPosition',SnapToTarget:'SnapToTarget',SnapToTargetIncludingScale:'SnapToTargetIncludingScale',EAttachLocation_MAX:'EAttachLocation_MAX', };
+declare class CurveBase extends UObject { 
+	AssetImportData: AssetImportData;
+	ImportPath: string;
+	static Load(ResourceName: string): CurveBase;
+	static Find(Outer: UObject, ResourceName: string): CurveBase;
+	static GetDefaultObject(): CurveBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveBase;
+	GetValueRange(MinValue?: number,MaxValue?: number): {MinValue: number, MaxValue: number};
+	GetTimeRange(MinTime?: number,MaxTime?: number): {MinTime: number, MaxTime: number};
+	static C(Other: UObject | any): CurveBase;
+}
+
+declare class KeyHandleMap { 
+	clone() : KeyHandleMap;
+	static C(Other: UObject | any): KeyHandleMap;
+}
+
+declare class IndexedCurve { 
+	KeyHandlesToIndices: KeyHandleMap;
+	clone() : IndexedCurve;
+	static C(Other: UObject | any): IndexedCurve;
+}
+
+declare type ERichCurveExtrapolation = 'RCCE_Cycle' | 'RCCE_CycleWithOffset' | 'RCCE_Oscillate' | 'RCCE_Linear' | 'RCCE_Constant' | 'RCCE_None' | 'RCCE_MAX';
+declare var ERichCurveExtrapolation : { RCCE_Cycle:'RCCE_Cycle',RCCE_CycleWithOffset:'RCCE_CycleWithOffset',RCCE_Oscillate:'RCCE_Oscillate',RCCE_Linear:'RCCE_Linear',RCCE_Constant:'RCCE_Constant',RCCE_None:'RCCE_None',RCCE_MAX:'RCCE_MAX', };
+declare type ERichCurveInterpMode = 'RCIM_Linear' | 'RCIM_Constant' | 'RCIM_Cubic' | 'RCIM_None' | 'RCIM_MAX';
+declare var ERichCurveInterpMode : { RCIM_Linear:'RCIM_Linear',RCIM_Constant:'RCIM_Constant',RCIM_Cubic:'RCIM_Cubic',RCIM_None:'RCIM_None',RCIM_MAX:'RCIM_MAX', };
+declare type ERichCurveTangentMode = 'RCTM_Auto' | 'RCTM_User' | 'RCTM_Break' | 'RCTM_None' | 'RCTM_MAX';
+declare var ERichCurveTangentMode : { RCTM_Auto:'RCTM_Auto',RCTM_User:'RCTM_User',RCTM_Break:'RCTM_Break',RCTM_None:'RCTM_None',RCTM_MAX:'RCTM_MAX', };
+declare type ERichCurveTangentWeightMode = 'RCTWM_WeightedNone' | 'RCTWM_WeightedArrive' | 'RCTWM_WeightedLeave' | 'RCTWM_WeightedBoth' | 'RCTWM_MAX';
+declare var ERichCurveTangentWeightMode : { RCTWM_WeightedNone:'RCTWM_WeightedNone',RCTWM_WeightedArrive:'RCTWM_WeightedArrive',RCTWM_WeightedLeave:'RCTWM_WeightedLeave',RCTWM_WeightedBoth:'RCTWM_WeightedBoth',RCTWM_MAX:'RCTWM_MAX', };
+declare class RichCurveKey { 
+	InterpMode: ERichCurveInterpMode;
+	TangentMode: ERichCurveTangentMode;
+	TangentWeightMode: ERichCurveTangentWeightMode;
+	Time: number;
+	Value: number;
+	ArriveTangent: number;
+	ArriveTangentWeight: number;
+	LeaveTangent: number;
+	LeaveTangentWeight: number;
+	clone() : RichCurveKey;
+	static C(Other: UObject | any): RichCurveKey;
+}
+
+declare class RichCurve extends IndexedCurve { 
+	PreInfinityExtrap: ERichCurveExtrapolation;
+	PostInfinityExtrap: ERichCurveExtrapolation;
+	DefaultValue: number;
+	Keys: RichCurveKey[];
+	clone() : RichCurve;
+	static C(Other: UObject | any): RichCurve;
+}
+
+declare class CurveLinearColor extends CurveBase { 
+	FloatCurves: RichCurve;
+	AdjustHue: number;
+	AdjustSaturation: number;
+	AdjustBrightness: number;
+	AdjustBrightnessCurve: number;
+	AdjustVibrance: number;
+	AdjustMinAlpha: number;
+	AdjustMaxAlpha: number;
+	static Load(ResourceName: string): CurveLinearColor;
+	static Find(Outer: UObject, ResourceName: string): CurveLinearColor;
+	static GetDefaultObject(): CurveLinearColor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveLinearColor;
+	GetLinearColorValue(InTime: number): LinearColor;
+	GetClampedLinearColorValue(InTime: number): LinearColor;
+	static C(Other: UObject | any): CurveLinearColor;
 }
 
+declare type TextureAddress = 'TA_Wrap' | 'TA_Clamp' | 'TA_Mirror' | 'TA_MAX';
+declare var TextureAddress : { TA_Wrap:'TA_Wrap',TA_Clamp:'TA_Clamp',TA_Mirror:'TA_Mirror',TA_MAX:'TA_MAX', };
 declare class IntPoint { 
 	X: number;
 	Y: number;
@@ -1669,10 +1853,8 @@ declare class IntPoint {
 	static C(Other: UObject | any): IntPoint;
 }
 
-declare type TextureAddress = 'TA_Wrap' | 'TA_Clamp' | 'TA_Mirror';
-declare var TextureAddress : { TA_Wrap:'TA_Wrap',TA_Clamp:'TA_Clamp',TA_Mirror:'TA_Mirror', };
-declare type EImportanceWeight = 'Luminance' | 'Red' | 'Green' | 'Blue' | 'Alpha';
-declare var EImportanceWeight : { Luminance:'Luminance',Red:'Red',Green:'Green',Blue:'Blue',Alpha:'Alpha', };
+declare type EImportanceWeight = 'Luminance' | 'Red' | 'Green' | 'Blue' | 'Alpha' | 'EImportanceWeight_MAX';
+declare var EImportanceWeight : { Luminance:'Luminance',Red:'Red',Green:'Green',Blue:'Blue',Alpha:'Alpha',EImportanceWeight_MAX:'EImportanceWeight_MAX', };
 declare class ImportanceTexture { 
 	Size: IntPoint;
 	NumMips: number;
@@ -1689,8 +1871,6 @@ declare class ImportanceTexture {
 	static ImportanceSample(Texture: ImportanceTexture,Rand: Vector2D,Samples: number,Intensity: number,SamplePosition?: Vector2D,SampleColor?: LinearColor,SampleIntensity?: number,SampleSize?: number): {SamplePosition: Vector2D, SampleColor: LinearColor, SampleIntensity: number, SampleSize: number};
 }
 
-declare type ESlateBrushDrawType = 'NoDrawType' | 'Box' | 'Border' | 'Image';
-declare var ESlateBrushDrawType : { NoDrawType:'NoDrawType',Box:'Box',Border:'Border',Image:'Image', };
 declare class Margin { 
 	Left: number;
 	Top: number;
@@ -1700,8 +1880,8 @@ declare class Margin {
 	static C(Other: UObject | any): Margin;
 }
 
-declare type ESlateColorStylingMode = 'UseColor_Specified' | 'UseColor_Specified_Link' | 'UseColor_Foreground' | 'UseColor_Foreground_Subdued';
-declare var ESlateColorStylingMode : { UseColor_Specified:'UseColor_Specified',UseColor_Specified_Link:'UseColor_Specified_Link',UseColor_Foreground:'UseColor_Foreground',UseColor_Foreground_Subdued:'UseColor_Foreground_Subdued', };
+declare type ESlateColorStylingMode = 'UseColor_Specified' | 'UseColor_Specified_Link' | 'UseColor_Foreground' | 'UseColor_Foreground_Subdued' | 'UseColor_MAX';
+declare var ESlateColorStylingMode : { UseColor_Specified:'UseColor_Specified',UseColor_Specified_Link:'UseColor_Specified_Link',UseColor_Foreground:'UseColor_Foreground',UseColor_Foreground_Subdued:'UseColor_Foreground_Subdued',UseColor_MAX:'UseColor_MAX', };
 declare class SlateColor { 
 	SpecifiedColor: LinearColor;
 	ColorUseRule: ESlateColorStylingMode;
@@ -1711,38 +1891,40 @@ declare class SlateColor {
 	static SlateColor_UseSubduedForeground(): SlateColor;
 }
 
-declare type ESlateBrushTileType = 'NoTile' | 'Horizontal' | 'Vertical' | 'Both';
-declare var ESlateBrushTileType : { NoTile:'NoTile',Horizontal:'Horizontal',Vertical:'Vertical',Both:'Both', };
-declare type ESlateBrushMirrorType = 'NoMirror' | 'Horizontal' | 'Vertical' | 'Both';
-declare var ESlateBrushMirrorType : { NoMirror:'NoMirror',Horizontal:'Horizontal',Vertical:'Vertical',Both:'Both', };
-declare type ESlateBrushImageType = 'NoImage' | 'FullColor' | 'Linear';
-declare var ESlateBrushImageType : { NoImage:'NoImage',FullColor:'FullColor',Linear:'Linear', };
+declare type ESlateBrushDrawType = 'NoDrawType' | 'Box' | 'Border' | 'Image' | 'ESlateBrushDrawType_MAX';
+declare var ESlateBrushDrawType : { NoDrawType:'NoDrawType',Box:'Box',Border:'Border',Image:'Image',ESlateBrushDrawType_MAX:'ESlateBrushDrawType_MAX', };
+declare type ESlateBrushTileType = 'NoTile' | 'Horizontal' | 'Vertical' | 'Both' | 'ESlateBrushTileType_MAX';
+declare var ESlateBrushTileType : { NoTile:'NoTile',Horizontal:'Horizontal',Vertical:'Vertical',Both:'Both',ESlateBrushTileType_MAX:'ESlateBrushTileType_MAX', };
+declare type ESlateBrushMirrorType = 'NoMirror' | 'Horizontal' | 'Vertical' | 'Both' | 'ESlateBrushMirrorType_MAX';
+declare var ESlateBrushMirrorType : { NoMirror:'NoMirror',Horizontal:'Horizontal',Vertical:'Vertical',Both:'Both',ESlateBrushMirrorType_MAX:'ESlateBrushMirrorType_MAX', };
+declare type ESlateBrushImageType = 'NoImage' | 'FullColor' | 'Linear' | 'ESlateBrushImageType_MAX';
+declare var ESlateBrushImageType : { NoImage:'NoImage',FullColor:'FullColor',Linear:'Linear',ESlateBrushImageType_MAX:'ESlateBrushImageType_MAX', };
 declare class SlateBrush { 
 	ImageSize: Vector2D;
-	DrawAs: ESlateBrushDrawType;
 	Margin: Margin;
 	Tint: LinearColor;
 	TintColor: SlateColor;
+	ResourceObject: UObject;
+	ResourceName: string;
+	UVRegion: Box2D;
+	DrawAs: ESlateBrushDrawType;
 	Tiling: ESlateBrushTileType;
 	Mirroring: ESlateBrushMirrorType;
 	ImageType: ESlateBrushImageType;
-	ResourceObject: UObject;
-	ResourceName: string;
 	bIsDynamicallyLoaded: boolean;
 	bHasUObject: boolean;
-	UVRegion: Box2D;
 	clone() : SlateBrush;
 	static C(Other: UObject | any): SlateBrush;
-	GetBrushResource(): {Brush: SlateBrush, $: UObject};
-	GetBrushResourceAsMaterial(): {Brush: SlateBrush, $: MaterialInterface};
-	GetBrushResourceAsTexture2D(): {Brush: SlateBrush, $: Texture2D};
+	GetBrushResource(): UObject;
+	GetBrushResourceAsMaterial(): MaterialInterface;
+	GetBrushResourceAsTexture2D(): Texture2D;
 	GetDynamicMaterial(): {Brush: SlateBrush, $: MaterialInstanceDynamic};
 	SetBrushResourceToMaterial(Material?: MaterialInterface): {Brush: SlateBrush};
 	SetBrushResourceToTexture(Texture?: Texture2D): {Brush: SlateBrush};
 	EqualEqual_SlateBrush(B: SlateBrush): boolean;
-	static GetBrushResource(Brush?: SlateBrush): {Brush: SlateBrush, $: UObject};
-	static GetBrushResourceAsMaterial(Brush?: SlateBrush): {Brush: SlateBrush, $: MaterialInterface};
-	static GetBrushResourceAsTexture2D(Brush?: SlateBrush): {Brush: SlateBrush, $: Texture2D};
+	static GetBrushResource(Brush: SlateBrush): UObject;
+	static GetBrushResourceAsMaterial(Brush: SlateBrush): MaterialInterface;
+	static GetBrushResourceAsTexture2D(Brush: SlateBrush): Texture2D;
 	static GetDynamicMaterial(Brush?: SlateBrush): {Brush: SlateBrush, $: MaterialInstanceDynamic};
 	static SetBrushResourceToMaterial(Brush?: SlateBrush,Material?: MaterialInterface): {Brush: SlateBrush};
 	static SetBrushResourceToTexture(Brush?: SlateBrush,Texture?: Texture2D): {Brush: SlateBrush};
@@ -1751,23 +1933,20 @@ declare class SlateBrush {
 }
 
 declare class Texture2D extends Texture { 
-	RequestedMips: number;
-	ResidentMips: number;
 	StreamingIndex: number;
 	LevelIndex: number;
 	FirstResourceMemMip: number;
-	ImportedSize: IntPoint;
-	ForceMipLevelsToBeResidentTimestamp: any;
 	bTemporarilyDisableStreaming: boolean;
 	bIsStreamable: boolean;
 	bHasStreamingUpdatePending: boolean;
-	bHasCancelationPending: boolean;
 	bForceMiplevelsToBeResident: boolean;
 	bIgnoreStreamingMipBias: boolean;
 	bGlobalForceMipLevelsToBeResident: boolean;
 	bHasBeenPaintedInEditor: boolean;
 	AddressX: TextureAddress;
 	AddressY: TextureAddress;
+	ImportedSize: IntPoint;
+	ForceMipLevelsToBeResidentTimestamp: any;
 	static Load(ResourceName: string): Texture2D;
 	static Find(Outer: UObject, ResourceName: string): Texture2D;
 	static GetDefaultObject(): Texture2D;
@@ -1785,8 +1964,80 @@ declare class Texture2D extends Texture {
 	static MakeBrushFromTexture(Texture: Texture2D,Width: number,Height: number): SlateBrush;
 }
 
-declare type EFontImportCharacterSet = 'FontICS_Default' | 'FontICS_Ansi' | 'FontICS_Symbol';
-declare var EFontImportCharacterSet : { FontICS_Default:'FontICS_Default',FontICS_Ansi:'FontICS_Ansi',FontICS_Symbol:'FontICS_Symbol', };
+declare class CurveLinearColorAtlas extends Texture2D { 
+	bIsDirty: boolean;
+	TextureSize: any;
+	GradientPixelSize: any;
+	GradientCurves: CurveLinearColor[];
+	static Load(ResourceName: string): CurveLinearColorAtlas;
+	static Find(Outer: UObject, ResourceName: string): CurveLinearColorAtlas;
+	static GetDefaultObject(): CurveLinearColorAtlas;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveLinearColorAtlas;
+	GetCurvePosition(InCurve: CurveLinearColor,Position?: number): {Position: number, $: boolean};
+	static C(Other: UObject | any): CurveLinearColorAtlas;
+}
+
+declare class ScalarParameterAtlasInstanceData { 
+	bIsUsedAsAtlasPosition: boolean;
+	Curve: CurveLinearColor;
+	Atlas: CurveLinearColorAtlas;
+	clone() : ScalarParameterAtlasInstanceData;
+	static C(Other: UObject | any): ScalarParameterAtlasInstanceData;
+}
+
+declare type EMaterialParameterAssociation = 'LayerParameter' | 'BlendParameter' | 'GlobalParameter' | 'EMaterialParameterAssociation_MAX';
+declare var EMaterialParameterAssociation : { LayerParameter:'LayerParameter',BlendParameter:'BlendParameter',GlobalParameter:'GlobalParameter',EMaterialParameterAssociation_MAX:'EMaterialParameterAssociation_MAX', };
+declare class MaterialParameterInfo { 
+	Name: string;
+	Association: EMaterialParameterAssociation;
+	index: number;
+	clone() : MaterialParameterInfo;
+	static C(Other: UObject | any): MaterialParameterInfo;
+}
+
+declare class ScalarParameterValue { 
+	ParameterName: string;
+	AtlasData: ScalarParameterAtlasInstanceData;
+	ParameterInfo: MaterialParameterInfo;
+	ParameterValue: number;
+	ExpressionGUID: Guid;
+	clone() : ScalarParameterValue;
+	static C(Other: UObject | any): ScalarParameterValue;
+}
+
+declare class VectorParameterValue { 
+	ParameterName: string;
+	ParameterInfo: MaterialParameterInfo;
+	ParameterValue: LinearColor;
+	ExpressionGUID: Guid;
+	clone() : VectorParameterValue;
+	static C(Other: UObject | any): VectorParameterValue;
+}
+
+declare class TextureParameterValue { 
+	ParameterName: string;
+	ParameterInfo: MaterialParameterInfo;
+	ParameterValue: Texture;
+	ExpressionGUID: Guid;
+	clone() : TextureParameterValue;
+	static C(Other: UObject | any): TextureParameterValue;
+}
+
+declare type EFontCacheType = 'Offline' | 'Runtime' | 'EFontCacheType_MAX';
+declare var EFontCacheType : { Offline:'Offline',Runtime:'Runtime',EFontCacheType_MAX:'EFontCacheType_MAX', };
+declare class FontCharacter { 
+	StartU: number;
+	StartV: number;
+	USize: number;
+	VSize: number;
+	TextureIndex: number;
+	VerticalOffset: number;
+	clone() : FontCharacter;
+	static C(Other: UObject | any): FontCharacter;
+}
+
+declare type EFontImportCharacterSet = 'FontICS_Default' | 'FontICS_Ansi' | 'FontICS_Symbol' | 'FontICS_MAX';
+declare var EFontImportCharacterSet : { FontICS_Default:'FontICS_Default',FontICS_Ansi:'FontICS_Ansi',FontICS_Symbol:'FontICS_Symbol',FontICS_MAX:'FontICS_MAX', };
 declare class FontImportOptionsData { 
 	FontName: string;
 	Height: number;
@@ -1821,10 +2072,10 @@ declare class FontImportOptionsData {
 	static C(Other: UObject | any): FontImportOptionsData;
 }
 
-declare type EFontHinting = 'Default' | 'Auto' | 'AutoLight' | 'Monochrome' | 'None';
-declare var EFontHinting : { Default:'Default',Auto:'Auto',AutoLight:'AutoLight',Monochrome:'Monochrome',None:'None', };
-declare type EFontLoadingPolicy = 'LazyLoad' | 'Stream' | 'Inline';
-declare var EFontLoadingPolicy : { LazyLoad:'LazyLoad',Stream:'Stream',Inline:'Inline', };
+declare type EFontHinting = 'Default' | 'Auto' | 'AutoLight' | 'Monochrome' | 'None' | 'EFontHinting_MAX';
+declare var EFontHinting : { Default:'Default',Auto:'Auto',AutoLight:'AutoLight',Monochrome:'Monochrome',None:'None',EFontHinting_MAX:'EFontHinting_MAX', };
+declare type EFontLoadingPolicy = 'LazyLoad' | 'Stream' | 'Inline' | 'EFontLoadingPolicy_MAX';
+declare var EFontLoadingPolicy : { LazyLoad:'LazyLoad',Stream:'Stream',Inline:'Inline',EFontLoadingPolicy_MAX:'EFontLoadingPolicy_MAX', };
 declare class FontBulkData extends UObject { 
 	static Load(ResourceName: string): FontBulkData;
 	static Find(Outer: UObject, ResourceName: string): FontBulkData;
@@ -1835,8 +2086,9 @@ declare class FontBulkData extends UObject {
 
 declare class FontData { 
 	FontFilename: string;
-	Hinting: Hinting;
-	LoadingPolicy: LoadingPolicy;
+	Hinting: EFontHinting;
+	LoadingPolicy: EFontLoadingPolicy;
+	SubFaceIndex: number;
 	FontFaceAsset: UObject;
 	BulkDataPtr: FontBulkData;
 	FontData: number[];
@@ -1857,8 +2109,15 @@ declare class Typeface {
 	static C(Other: UObject | any): Typeface;
 }
 
-declare type ERangeBoundTypes = 'Exclusive' | 'Inclusive' | 'Open';
-declare var ERangeBoundTypes : { Exclusive:'Exclusive',Inclusive:'Inclusive',Open:'Open', };
+declare class CompositeFallbackFont { 
+	Typeface: Typeface;
+	ScalingFactor: number;
+	clone() : CompositeFallbackFont;
+	static C(Other: UObject | any): CompositeFallbackFont;
+}
+
+declare type ERangeBoundTypes = 'Exclusive' | 'Inclusive' | 'Open' | 'ERangeBoundTypes_MAX';
+declare var ERangeBoundTypes : { Exclusive:'Exclusive',Inclusive:'Inclusive',Open:'Open',ERangeBoundTypes_MAX:'ERangeBoundTypes_MAX', };
 declare class Int32RangeBound { 
 	Type: ERangeBoundTypes;
 	Value: number;
@@ -1873,10 +2132,9 @@ declare class Int32Range {
 	static C(Other: UObject | any): Int32Range;
 }
 
-declare class CompositeSubFont { 
-	Typeface: Typeface;
+declare class CompositeSubFont extends CompositeFallbackFont { 
 	CharacterRanges: Int32Range[];
-	ScalingFactor: number;
+	Cultures: string;
 	EditorName: string;
 	clone() : CompositeSubFont;
 	static C(Other: UObject | any): CompositeSubFont;
@@ -1884,13 +2142,14 @@ declare class CompositeSubFont {
 
 declare class CompositeFont { 
 	DefaultTypeface: Typeface;
+	FallbackTypeface: CompositeFallbackFont;
 	SubTypefaces: CompositeSubFont[];
 	clone() : CompositeFont;
 	static C(Other: UObject | any): CompositeFont;
 }
 
 declare class Font extends UObject { 
-	FontCacheType: FontCacheType;
+	FontCacheType: EFontCacheType;
 	Characters: FontCharacter[];
 	Textures: Texture2D[];
 	IsRemapped: number;
@@ -1915,6 +2174,7 @@ declare class Font extends UObject {
 
 declare class FontParameterValue { 
 	ParameterName: string;
+	ParameterInfo: MaterialParameterInfo;
 	FontValue: Font;
 	FontPage: number;
 	ExpressionGUID: Guid;
@@ -1922,57 +2182,98 @@ declare class FontParameterValue {
 	static C(Other: UObject | any): FontParameterValue;
 }
 
-declare class ScalarParameterValue { 
-	ParameterName: string;
-	ParameterValue: number;
-	ExpressionGUID: Guid;
-	clone() : ScalarParameterValue;
-	static C(Other: UObject | any): ScalarParameterValue;
-}
-
-declare class TextureParameterValue { 
-	ParameterName: string;
-	ParameterValue: Texture;
-	ExpressionGUID: Guid;
-	clone() : TextureParameterValue;
-	static C(Other: UObject | any): TextureParameterValue;
-}
-
-declare class VectorParameterValue { 
-	ParameterName: string;
-	ParameterValue: LinearColor;
-	ExpressionGUID: Guid;
-	clone() : VectorParameterValue;
-	static C(Other: UObject | any): VectorParameterValue;
-}
-
 declare class MaterialInstanceBasePropertyOverrides { 
 	bOverride_OpacityMaskClipValue: boolean;
 	bOverride_BlendMode: boolean;
 	bOverride_ShadingModel: boolean;
 	bOverride_DitheredLODTransition: boolean;
+	bOverride_CastDynamicShadowAsMasked: boolean;
 	bOverride_TwoSided: boolean;
 	OpacityMaskClipValue: number;
 	BlendMode: EBlendMode;
 	ShadingModel: EMaterialShadingModel;
 	TwoSided: boolean;
 	DitheredLODTransition: boolean;
+	bCastDynamicShadowAsMasked: boolean;
 	clone() : MaterialInstanceBasePropertyOverrides;
 	static C(Other: UObject | any): MaterialInstanceBasePropertyOverrides;
 }
 
+declare class StaticSwitchParameter { 
+	ParameterInfo: MaterialParameterInfo;
+	Value: boolean;
+	bOverride: boolean;
+	ExpressionGUID: Guid;
+	clone() : StaticSwitchParameter;
+	static C(Other: UObject | any): StaticSwitchParameter;
+}
+
+declare class StaticComponentMaskParameter { 
+	ParameterInfo: MaterialParameterInfo;
+	R: boolean;
+	G: boolean;
+	B: boolean;
+	A: boolean;
+	bOverride: boolean;
+	ExpressionGUID: Guid;
+	clone() : StaticComponentMaskParameter;
+	static C(Other: UObject | any): StaticComponentMaskParameter;
+}
+
+declare class StaticTerrainLayerWeightParameter { 
+	ParameterInfo: MaterialParameterInfo;
+	bOverride: boolean;
+	ExpressionGUID: Guid;
+	WeightmapIndex: number;
+	bWeightBasedBlend: boolean;
+	clone() : StaticTerrainLayerWeightParameter;
+	static C(Other: UObject | any): StaticTerrainLayerWeightParameter;
+}
+
+declare class MaterialLayersFunctions { 
+	Layers: MaterialFunctionInterface[];
+	Blends: MaterialFunctionInterface[];
+	LayerNames: string[];
+	RestrictToLayerRelatives: boolean[];
+	RestrictToBlendRelatives: boolean[];
+	LayerStates: boolean[];
+	KeyString: string;
+	clone() : MaterialLayersFunctions;
+	static C(Other: UObject | any): MaterialLayersFunctions;
+}
+
+declare class StaticMaterialLayersParameter { 
+	ParameterInfo: MaterialParameterInfo;
+	Value: MaterialLayersFunctions;
+	bOverride: boolean;
+	ExpressionGUID: Guid;
+	clone() : StaticMaterialLayersParameter;
+	static C(Other: UObject | any): StaticMaterialLayersParameter;
+}
+
+declare class StaticParameterSet { 
+	StaticSwitchParameters: StaticSwitchParameter[];
+	StaticComponentMaskParameters: StaticComponentMaskParameter[];
+	TerrainLayerWeightParameters: StaticTerrainLayerWeightParameter[];
+	MaterialLayersParameters: StaticMaterialLayersParameter[];
+	clone() : StaticParameterSet;
+	static C(Other: UObject | any): StaticParameterSet;
+}
+
 declare class MaterialInstance extends MaterialInterface { 
 	PhysMaterial: PhysicalMaterial;
 	Parent: MaterialInterface;
 	bHasStaticPermutationResource: boolean;
 	bOverrideSubsurfaceProfile: boolean;
-	FontParameterValues: FontParameterValue[];
 	ScalarParameterValues: ScalarParameterValue[];
-	TextureParameterValues: TextureParameterValue[];
 	VectorParameterValues: VectorParameterValue[];
+	TextureParameterValues: TextureParameterValue[];
+	FontParameterValues: FontParameterValue[];
 	bOverrideBaseProperties: boolean;
 	BasePropertyOverrides: MaterialInstanceBasePropertyOverrides;
+	PermutationTextureReferences: Texture[];
 	ReferencedTextureGuids: Guid[];
+	StaticParameters: StaticParameterSet;
 	static Load(ResourceName: string): MaterialInstance;
 	static Find(Outer: UObject, ResourceName: string): MaterialInstance;
 	static GetDefaultObject(): MaterialInstance;
@@ -1992,7 +2293,7 @@ declare class MaterialInstanceDynamic extends MaterialInstance {
 	K2_GetVectorParameterValue(ParameterName: string): LinearColor;
 	K2_GetTextureParameterValue(ParameterName: string): Texture;
 	K2_GetScalarParameterValue(ParameterName: string): number;
-	K2_CopyMaterialInstanceParameters(Source: MaterialInterface): void;
+	K2_CopyMaterialInstanceParameters(Source: MaterialInterface,bQuickParametersOnly: boolean): void;
 	CopyParameterOverrides(MaterialInstance: MaterialInstance): void;
 	CopyInterpParameters(Source: MaterialInstance): void;
 	static C(Other: UObject | any): MaterialInstanceDynamic;
@@ -2004,6 +2305,8 @@ declare class DecalComponent extends SceneComponent {
 	FadeScreenSize: number;
 	FadeStartDelay: number;
 	FadeDuration: number;
+	FadeInDuration: number;
+	FadeInStartDelay: number;
 	bDestroyOwnerAfterFade: boolean;
 	DecalSize: Vector;
 	static Load(ResourceName: string): DecalComponent;
@@ -2013,8 +2316,11 @@ declare class DecalComponent extends SceneComponent {
 	SetSortOrder(Value: number): void;
 	SetFadeScreenSize(NewFadeScreenSize: number): void;
 	SetFadeOut(StartDelay: number,Duration: number,DestroyOwnerAfterFade: boolean): void;
+	SetFadeIn(StartDelay: number,Duaration: number): void;
 	SetDecalMaterial(NewDecalMaterial: MaterialInterface): void;
 	GetFadeStartDelay(): number;
+	GetFadeInStartDelay(): number;
+	GetFadeInDuration(): number;
 	GetFadeDuration(): number;
 	GetDecalMaterial(): MaterialInterface;
 	CreateDynamicMaterialInstance(): MaterialInstanceDynamic;
@@ -2025,14 +2331,19 @@ declare class MaterialInterface extends UObject {
 	SubsurfaceProfile: SubsurfaceProfile;
 	LightmassSettings: LightmassMaterialInterfaceSettings;
 	bTextureStreamingDataSorted: boolean;
+	TextureStreamingDataVersion: number;
 	TextureStreamingData: MaterialTextureInfo[];
-	PreviewMesh: StringAssetReference;
+	AssetUserData: AssetUserData[];
+	PreviewMesh: SoftObjectPath;
 	ThumbnailInfo: ThumbnailInfo;
+	LayerParameterExpansion: any;
+	AssetImportData: AssetImportData;
 	LightingGuid: Guid;
 	static Load(ResourceName: string): MaterialInterface;
 	static Find(Outer: UObject, ResourceName: string): MaterialInterface;
 	static GetDefaultObject(): MaterialInterface;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialInterface;
+	SetForceMipLevelsToBeResident(OverrideForceMiplevelsToBeResident: boolean,bForceMiplevelsToBeResidentValue: boolean,ForceDuration: number,CinematicTextureGroups: number): void;
 	GetPhysicalMaterial(): PhysicalMaterial;
 	GetBaseMaterial(): Material;
 	static C(Other: UObject | any): MaterialInterface;
@@ -2042,30 +2353,131 @@ declare class MaterialInterface extends UObject {
 	static MakeBrushFromMaterial(Material: MaterialInterface,Width: number,Height: number): SlateBrush;
 }
 
-declare type EAutoReceiveInput = 'Disabled' | 'Player0' | 'Player1' | 'Player2' | 'Player3' | 'Player4' | 'Player5' | 'Player6' | 'Player7';
-declare var EAutoReceiveInput : { Disabled:'Disabled',Player0:'Player0',Player1:'Player1',Player2:'Player2',Player3:'Player3',Player4:'Player4',Player5:'Player5',Player6:'Player6',Player7:'Player7', };
-declare type EAutoPossessAI = 'Disabled' | 'PlacedInWorld' | 'Spawned' | 'PlacedInWorldOrSpawned';
-declare var EAutoPossessAI : { Disabled:'Disabled',PlacedInWorld:'PlacedInWorld',Spawned:'Spawned',PlacedInWorldOrSpawned:'PlacedInWorldOrSpawned', };
-declare class MeshComponent extends PrimitiveComponent { 
-	OverrideMaterials: MaterialInterface[];
-	static Load(ResourceName: string): MeshComponent;
-	static Find(Outer: UObject, ResourceName: string): MeshComponent;
-	static GetDefaultObject(): MeshComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshComponent;
-	SetVectorParameterValueOnMaterials(ParameterName: string,ParameterValue: Vector): void;
-	SetScalarParameterValueOnMaterials(ParameterName: string,ParameterValue: number): void;
-	IsMaterialSlotNameValid(MaterialSlotName: string): boolean;
-	GetMaterialSlotNames(): string[];
-	GetMaterials(): MaterialInterface[];
-	GetMaterialIndex(MaterialSlotName: string): number;
-	static C(Other: UObject | any): MeshComponent;
+declare type EAutoReceiveInput = 'Disabled' | 'Player0' | 'Player1' | 'Player2' | 'Player3' | 'Player4' | 'Player5' | 'Player6' | 'Player7' | 'EAutoReceiveInput_MAX';
+declare var EAutoReceiveInput : { Disabled:'Disabled',Player0:'Player0',Player1:'Player1',Player2:'Player2',Player3:'Player3',Player4:'Player4',Player5:'Player5',Player6:'Player6',Player7:'Player7',EAutoReceiveInput_MAX:'EAutoReceiveInput_MAX', };
+declare type EAutoPossessAI = 'Disabled' | 'PlacedInWorld' | 'Spawned' | 'PlacedInWorldOrSpawned' | 'EAutoPossessAI_MAX';
+declare var EAutoPossessAI : { Disabled:'Disabled',PlacedInWorld:'PlacedInWorld',Spawned:'Spawned',PlacedInWorldOrSpawned:'PlacedInWorldOrSpawned',EAutoPossessAI_MAX:'EAutoPossessAI_MAX', };
+declare class SpriteCategoryInfo { 
+	Category: string;
+	DisplayName: string;
+	Description: string;
+	clone() : SpriteCategoryInfo;
+	static C(Other: UObject | any): SpriteCategoryInfo;
 }
 
-declare type EBoneTranslationRetargetingMode = 'Animation' | 'Skeleton' | 'AnimationScaled' | 'AnimationRelative';
-declare var EBoneTranslationRetargetingMode : { Animation:'Animation',Skeleton:'Skeleton',AnimationScaled:'AnimationScaled',AnimationRelative:'AnimationRelative', };
-declare class BoneNode { 
-	Name: string;
-	ParentIndex: number;
+declare class BillboardComponent extends PrimitiveComponent { 
+	Sprite: Texture2D;
+	bIsScreenSizeScaled: boolean;
+	ScreenSize: number;
+	U: number;
+	UL: number;
+	V: number;
+	VL: number;
+	SpriteCategoryName: string;
+	SpriteInfo: SpriteCategoryInfo;
+	bUseInEditorScaling: boolean;
+	static Load(ResourceName: string): BillboardComponent;
+	static Find(Outer: UObject, ResourceName: string): BillboardComponent;
+	static GetDefaultObject(): BillboardComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BillboardComponent;
+	SetUV(NewU: number,NewUL: number,NewV: number,NewVL: number): void;
+	SetSpriteAndUV(NewSprite: Texture2D,NewU: number,NewUL: number,NewV: number,NewVL: number): void;
+	SetSprite(NewSprite: Texture2D): void;
+	static C(Other: UObject | any): BillboardComponent;
+}
+
+declare class Info extends Actor { 
+	SpriteComponent: BillboardComponent;
+	static GetDefaultObject(): Info;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Info;
+	static C(Other: UObject | any): Info;
+}
+
+declare class LocalMessage extends UObject { 
+	static Load(ResourceName: string): LocalMessage;
+	static Find(Outer: UObject, ResourceName: string): LocalMessage;
+	static GetDefaultObject(): LocalMessage;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalMessage;
+	static C(Other: UObject | any): LocalMessage;
+}
+
+declare class UniqueNetIdWrapper { 
+	clone() : UniqueNetIdWrapper;
+	static C(Other: UObject | any): UniqueNetIdWrapper;
+}
+
+declare class UniqueNetIdRepl extends UniqueNetIdWrapper { 
+	ReplicationBytes: number[];
+	clone() : UniqueNetIdRepl;
+	static C(Other: UObject | any): UniqueNetIdRepl;
+}
+
+declare class PlayerState extends Info { 
+	Score: number;
+	PlayerName: string;
+	PlayerId: number;
+	Ping: number;
+	bShouldUpdateReplicatedPing: boolean;
+	bIsSpectator: boolean;
+	bOnlySpectator: boolean;
+	bIsABot: boolean;
+	bIsInactive: boolean;
+	bFromPreviousLevel: boolean;
+	StartTime: number;
+	EngineMessageClass: UnrealEngineClass;
+	SavedNetworkAddress: string;
+	UniqueId: UniqueNetIdRepl;
+	PawnPrivate: Pawn;
+	PlayerNamePrivate: string;
+	static GetDefaultObject(): PlayerState;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlayerState;
+	ReceiveOverrideWith(OldPlayerState: PlayerState): void;
+	ReceiveCopyProperties(NewPlayerState: PlayerState): void;
+	OnRep_UniqueId(): void;
+	OnRep_Score(): void;
+	OnRep_PlayerName(): void;
+	OnRep_PlayerId(): void;
+	OnRep_bIsInactive(): void;
+	GetPlayerName(): string;
+	static C(Other: UObject | any): PlayerState;
+}
+
+declare class DamageType extends UObject { 
+	bCausedByWorld: boolean;
+	bScaleMomentumByMass: boolean;
+	bRadialDamageVelChange: boolean;
+	DamageImpulse: number;
+	DestructibleImpulse: number;
+	DestructibleDamageSpreadScale: number;
+	DamageFalloff: number;
+	static Load(ResourceName: string): DamageType;
+	static Find(Outer: UObject, ResourceName: string): DamageType;
+	static GetDefaultObject(): DamageType;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DamageType;
+	static C(Other: UObject | any): DamageType;
+}
+
+declare class MeshComponent extends PrimitiveComponent { 
+	OverrideMaterials: MaterialInterface[];
+	static Load(ResourceName: string): MeshComponent;
+	static Find(Outer: UObject, ResourceName: string): MeshComponent;
+	static GetDefaultObject(): MeshComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshComponent;
+	SetVectorParameterValueOnMaterials(ParameterName: string,ParameterValue: Vector): void;
+	SetScalarParameterValueOnMaterials(ParameterName: string,ParameterValue: number): void;
+	PrestreamTextures(Seconds: number,bPrioritizeCharacterTextures: boolean,CinematicTextureGroups: number): void;
+	IsMaterialSlotNameValid(MaterialSlotName: string): boolean;
+	GetMaterialSlotNames(): string[];
+	GetMaterials(): MaterialInterface[];
+	GetMaterialIndex(MaterialSlotName: string): number;
+	static C(Other: UObject | any): MeshComponent;
+}
+
+declare type EBoneTranslationRetargetingMode = 'Animation' | 'Skeleton' | 'AnimationScaled' | 'AnimationRelative' | 'OrientAndScale' | 'EBoneTranslationRetargetingMode_MAX';
+declare var EBoneTranslationRetargetingMode : { Animation:'Animation',Skeleton:'Skeleton',AnimationScaled:'AnimationScaled',AnimationRelative:'AnimationRelative',OrientAndScale:'OrientAndScale',EBoneTranslationRetargetingMode_MAX:'EBoneTranslationRetargetingMode_MAX', };
+declare class BoneNode { 
+	Name: string;
+	ParentIndex: number;
 	TranslationRetargetingMode: EBoneTranslationRetargetingMode;
 	clone() : BoneNode;
 	static C(Other: UObject | any): BoneNode;
@@ -2130,8 +2542,8 @@ declare class AnimSlotGroup {
 	static C(Other: UObject | any): AnimSlotGroup;
 }
 
-declare type EConstraintTransform = 'Absolute' | 'Relative';
-declare var EConstraintTransform : { Absolute:'Absolute',Relative:'Relative', };
+declare type EConstraintTransform = 'Absolute' | 'Relative' | 'EConstraintTransform_MAX';
+declare var EConstraintTransform : { Absolute:'Absolute',Relative:'Relative',EConstraintTransform_MAX:'EConstraintTransform_MAX', };
 declare class RigTransformConstraint { 
 	TranformType: EConstraintTransform;
 	ParentSpace: string;
@@ -2188,7 +2600,7 @@ declare class RigConfiguration {
 }
 
 declare class PreviewAttachedObjectPair { 
-	AttachedObject: any;
+	AttachedObject: UObject;
 	UObject: UObject;
 	AttachedTo: string;
 	clone() : PreviewAttachedObjectPair;
@@ -2210,8 +2622,8 @@ declare class Skeleton extends UObject {
 	SmartNames: SmartNameContainer;
 	BlendProfiles: BlendProfile[];
 	SlotGroups: AnimSlotGroup[];
-	PreviewSkeletalMesh: any;
-	AdditionalPreviewSkeletalMeshes: any;
+	PreviewSkeletalMesh: SkeletalMesh;
+	AdditionalPreviewSkeletalMeshes: DataAsset;
 	RigConfig: RigConfiguration;
 	AnimationNotifies: string[];
 	PreviewAttachedAssetContainer: PreviewAssetAttachContainer;
@@ -2241,17 +2653,17 @@ declare class MeshUVChannelInfo {
 
 declare class SkeletalMaterial { 
 	MaterialInterface: MaterialInterface;
+	MaterialSlotName: string;
 	bEnableShadowCasting: boolean;
 	bRecomputeTangent: boolean;
-	MaterialSlotName: string;
 	ImportedMaterialSlotName: string;
 	UVChannelData: MeshUVChannelInfo;
 	clone() : SkeletalMaterial;
 	static C(Other: UObject | any): SkeletalMaterial;
 }
 
-declare type EAxis = 'None' | 'X' | 'Y' | 'Z';
-declare var EAxis : { None:'None',X:'X',Y:'Y',Z:'Z', };
+declare type EAxis = 'None' | 'X' | 'Y' | 'Z' | 'EAxis_MAX';
+declare var EAxis : { None:'None',X:'X',Y:'Y',Z:'Z',EAxis_MAX:'EAxis_MAX', };
 declare class BoneMirrorInfo { 
 	SourceIndex: number;
 	BoneFlipAxis: EAxis;
@@ -2259,22 +2671,17 @@ declare class BoneMirrorInfo {
 	static C(Other: UObject | any): BoneMirrorInfo;
 }
 
-declare type ETriangleSortOption = 'TRISORT_None' | 'TRISORT_CenterRadialDistance' | 'TRISORT_Random' | 'TRISORT_MergeContiguous' | 'TRISORT_Custom' | 'TRISORT_CustomLeftRight';
-declare var ETriangleSortOption : { TRISORT_None:'TRISORT_None',TRISORT_CenterRadialDistance:'TRISORT_CenterRadialDistance',TRISORT_Random:'TRISORT_Random',TRISORT_MergeContiguous:'TRISORT_MergeContiguous',TRISORT_Custom:'TRISORT_Custom',TRISORT_CustomLeftRight:'TRISORT_CustomLeftRight', };
-declare type ETriangleSortAxis = 'TSA_X_Axis' | 'TSA_Y_Axis' | 'TSA_Z_Axis';
-declare var ETriangleSortAxis : { TSA_X_Axis:'TSA_X_Axis',TSA_Y_Axis:'TSA_Y_Axis',TSA_Z_Axis:'TSA_Z_Axis', };
-declare class TriangleSortSettings { 
-	TriangleSorting: ETriangleSortOption;
-	CustomLeftRightAxis: ETriangleSortAxis;
-	CustomLeftRightBoneName: string;
-	clone() : TriangleSortSettings;
-	static C(Other: UObject | any): TriangleSortSettings;
+declare class PerPlatformFloat { 
+	Default: number;
+	PerPlatform: any;
+	clone() : PerPlatformFloat;
+	static C(Other: UObject | any): PerPlatformFloat;
 }
 
-declare type SkeletalMeshOptimizationType = 'SMOT_NumOfTriangles' | 'SMOT_MaxDeviation';
-declare var SkeletalMeshOptimizationType : { SMOT_NumOfTriangles:'SMOT_NumOfTriangles',SMOT_MaxDeviation:'SMOT_MaxDeviation', };
-declare type SkeletalMeshOptimizationImportance = 'SMOI_Off' | 'SMOI_Lowest' | 'SMOI_Low' | 'SMOI_Normal' | 'SMOI_High' | 'SMOI_Highest';
-declare var SkeletalMeshOptimizationImportance : { SMOI_Off:'SMOI_Off',SMOI_Lowest:'SMOI_Lowest',SMOI_Low:'SMOI_Low',SMOI_Normal:'SMOI_Normal',SMOI_High:'SMOI_High',SMOI_Highest:'SMOI_Highest', };
+declare type SkeletalMeshOptimizationType = 'SMOT_NumOfTriangles' | 'SMOT_MaxDeviation' | 'SMOT_TriangleOrDeviation' | 'SMOT_MAX';
+declare var SkeletalMeshOptimizationType : { SMOT_NumOfTriangles:'SMOT_NumOfTriangles',SMOT_MaxDeviation:'SMOT_MaxDeviation',SMOT_TriangleOrDeviation:'SMOT_TriangleOrDeviation',SMOT_MAX:'SMOT_MAX', };
+declare type SkeletalMeshOptimizationImportance = 'SMOI_Off' | 'SMOI_Lowest' | 'SMOI_Low' | 'SMOI_Normal' | 'SMOI_High' | 'SMOI_Highest' | 'SMOI_MAX';
+declare var SkeletalMeshOptimizationImportance : { SMOI_Off:'SMOI_Off',SMOI_Lowest:'SMOI_Lowest',SMOI_Low:'SMOI_Low',SMOI_Normal:'SMOI_Normal',SMOI_High:'SMOI_High',SMOI_Highest:'SMOI_Highest',SMOI_MAX:'SMOI_MAX', };
 declare class AnimMetaData extends UObject { 
 	static Load(ResourceName: string): AnimMetaData;
 	static Find(Outer: UObject, ResourceName: string): AnimMetaData;
@@ -2301,14 +2708,15 @@ declare class AssetMappingTable extends UObject {
 
 declare class SmartName { 
 	DisplayName: string;
-	Guid: Guid;
 	clone() : SmartName;
 	static C(Other: UObject | any): SmartName;
 }
 
 declare class PoseData { 
+	SourceLocalSpacePose: Transform[];
+	SourceCurveData: number[];
 	LocalSpacePose: Transform[];
-	LocalSpacePoseMask: boolean[];
+	TrackToBufferIndex: any;
 	CurveData: number[];
 	clone() : PoseData;
 	static C(Other: UObject | any): PoseData;
@@ -2324,9 +2732,9 @@ declare class AnimCurveBase {
 
 declare class PoseDataContainer { 
 	PoseNames: SmartName[];
-	Poses: PoseData[];
 	Tracks: string[];
 	TrackMap: any;
+	Poses: PoseData[];
 	Curves: AnimCurveBase[];
 	clone() : PoseDataContainer;
 	static C(Other: UObject | any): PoseDataContainer;
@@ -2354,7 +2762,7 @@ declare class AnimationAsset extends UObject {
 	AssetUserData: AssetUserData[];
 	ThumbnailInfo: ThumbnailInfo;
 	PreviewPoseAsset: PoseAsset;
-	PreviewSkeletalMesh: any;
+	PreviewSkeletalMesh: SkeletalMesh;
 	static Load(ResourceName: string): AnimationAsset;
 	static Find(Outer: UObject, ResourceName: string): AnimationAsset;
 	static GetDefaultObject(): AnimationAsset;
@@ -2370,62 +2778,8 @@ declare class AnimCompositeBase extends AnimSequenceBase {
 	static C(Other: UObject | any): AnimCompositeBase;
 }
 
-declare type EAlphaBlendOption = 'Linear' | 'Cubic' | 'HermiteCubic' | 'Sinusoidal' | 'QuadraticInOut' | 'CubicInOut' | 'QuarticInOut' | 'QuinticInOut' | 'CircularIn' | 'CircularOut' | 'CircularInOut' | 'ExpIn' | 'ExpOut' | 'ExpInOut' | 'Custom';
-declare var EAlphaBlendOption : { Linear:'Linear',Cubic:'Cubic',HermiteCubic:'HermiteCubic',Sinusoidal:'Sinusoidal',QuadraticInOut:'QuadraticInOut',CubicInOut:'CubicInOut',QuarticInOut:'QuarticInOut',QuinticInOut:'QuinticInOut',CircularIn:'CircularIn',CircularOut:'CircularOut',CircularInOut:'CircularInOut',ExpIn:'ExpIn',ExpOut:'ExpOut',ExpInOut:'ExpInOut',Custom:'Custom', };
-declare class CurveBase extends UObject { 
-	AssetImportData: AssetImportData;
-	ImportPath: string;
-	static Load(ResourceName: string): CurveBase;
-	static Find(Outer: UObject, ResourceName: string): CurveBase;
-	static GetDefaultObject(): CurveBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveBase;
-	GetValueRange(MinValue?: number,MaxValue?: number): {MinValue: number, MaxValue: number};
-	GetTimeRange(MinTime?: number,MaxTime?: number): {MinTime: number, MaxTime: number};
-	static C(Other: UObject | any): CurveBase;
-}
-
-declare class KeyHandleMap { 
-	clone() : KeyHandleMap;
-	static C(Other: UObject | any): KeyHandleMap;
-}
-
-declare class IndexedCurve { 
-	KeyHandlesToIndices: KeyHandleMap;
-	clone() : IndexedCurve;
-	static C(Other: UObject | any): IndexedCurve;
-}
-
-declare type ERichCurveExtrapolation = 'RCCE_Cycle' | 'RCCE_CycleWithOffset' | 'RCCE_Oscillate' | 'RCCE_Linear' | 'RCCE_Constant' | 'RCCE_None';
-declare var ERichCurveExtrapolation : { RCCE_Cycle:'RCCE_Cycle',RCCE_CycleWithOffset:'RCCE_CycleWithOffset',RCCE_Oscillate:'RCCE_Oscillate',RCCE_Linear:'RCCE_Linear',RCCE_Constant:'RCCE_Constant',RCCE_None:'RCCE_None', };
-declare type ERichCurveInterpMode = 'RCIM_Linear' | 'RCIM_Constant' | 'RCIM_Cubic' | 'RCIM_None';
-declare var ERichCurveInterpMode : { RCIM_Linear:'RCIM_Linear',RCIM_Constant:'RCIM_Constant',RCIM_Cubic:'RCIM_Cubic',RCIM_None:'RCIM_None', };
-declare type ERichCurveTangentMode = 'RCTM_Auto' | 'RCTM_User' | 'RCTM_Break' | 'RCTM_None';
-declare var ERichCurveTangentMode : { RCTM_Auto:'RCTM_Auto',RCTM_User:'RCTM_User',RCTM_Break:'RCTM_Break',RCTM_None:'RCTM_None', };
-declare type ERichCurveTangentWeightMode = 'RCTWM_WeightedNone' | 'RCTWM_WeightedArrive' | 'RCTWM_WeightedLeave' | 'RCTWM_WeightedBoth';
-declare var ERichCurveTangentWeightMode : { RCTWM_WeightedNone:'RCTWM_WeightedNone',RCTWM_WeightedArrive:'RCTWM_WeightedArrive',RCTWM_WeightedLeave:'RCTWM_WeightedLeave',RCTWM_WeightedBoth:'RCTWM_WeightedBoth', };
-declare class RichCurveKey { 
-	InterpMode: ERichCurveInterpMode;
-	TangentMode: ERichCurveTangentMode;
-	TangentWeightMode: ERichCurveTangentWeightMode;
-	Time: number;
-	Value: number;
-	ArriveTangent: number;
-	ArriveTangentWeight: number;
-	LeaveTangent: number;
-	LeaveTangentWeight: number;
-	clone() : RichCurveKey;
-	static C(Other: UObject | any): RichCurveKey;
-}
-
-declare class RichCurve extends IndexedCurve { 
-	PreInfinityExtrap: ERichCurveExtrapolation;
-	PostInfinityExtrap: ERichCurveExtrapolation;
-	DefaultValue: number;
-	Keys: RichCurveKey[];
-	clone() : RichCurve;
-	static C(Other: UObject | any): RichCurve;
-}
-
+declare type EAlphaBlendOption = 'Linear' | 'Cubic' | 'HermiteCubic' | 'Sinusoidal' | 'QuadraticInOut' | 'CubicInOut' | 'QuarticInOut' | 'QuinticInOut' | 'CircularIn' | 'CircularOut' | 'CircularInOut' | 'ExpIn' | 'ExpOut' | 'ExpInOut' | 'Custom' | 'EAlphaBlendOption_MAX';
+declare var EAlphaBlendOption : { Linear:'Linear',Cubic:'Cubic',HermiteCubic:'HermiteCubic',Sinusoidal:'Sinusoidal',QuadraticInOut:'QuadraticInOut',CubicInOut:'CubicInOut',QuarticInOut:'QuarticInOut',QuinticInOut:'QuinticInOut',CircularIn:'CircularIn',CircularOut:'CircularOut',CircularInOut:'CircularInOut',ExpIn:'ExpIn',ExpOut:'ExpOut',ExpInOut:'ExpInOut',Custom:'Custom',EAlphaBlendOption_MAX:'EAlphaBlendOption_MAX', };
 declare class CurveFloat extends CurveBase { 
 	FloatCurve: RichCurve;
 	bIsEventCurve: boolean;
@@ -2438,7 +2792,7 @@ declare class CurveFloat extends CurveBase {
 }
 
 declare class AlphaBlend { 
-	BlendOption: BlendOption;
+	BlendOption: EAlphaBlendOption;
 	CustomCurve: CurveFloat;
 	BlendTime: number;
 	clone() : AlphaBlend;
@@ -2500,10 +2854,10 @@ declare class BranchingPoint extends AnimLinkableElement {
 	static C(Other: UObject | any): BranchingPoint;
 }
 
-declare type ERootMotionRootLock = 'RefPose' | 'AnimFirstFrame' | 'Zero';
-declare var ERootMotionRootLock : { RefPose:'RefPose',AnimFirstFrame:'AnimFirstFrame',Zero:'Zero', };
-declare type EAnimNotifyEventType = 'Begin' | 'End';
-declare var EAnimNotifyEventType : { Begin:'Begin',End:'End', };
+declare type ERootMotionRootLock = 'RefPose' | 'AnimFirstFrame' | 'Zero' | 'ERootMotionRootLock_MAX';
+declare var ERootMotionRootLock : { RefPose:'RefPose',AnimFirstFrame:'AnimFirstFrame',Zero:'Zero',ERootMotionRootLock_MAX:'ERootMotionRootLock_MAX', };
+declare type EAnimNotifyEventType = 'Begin' | 'End' | 'EAnimNotifyEventType_MAX';
+declare var EAnimNotifyEventType : { Begin:'Begin',End:'End',EAnimNotifyEventType_MAX:'EAnimNotifyEventType_MAX', };
 declare class BranchingPointMarker { 
 	NotifyIndex: number;
 	TriggerTime: number;
@@ -2512,6 +2866,22 @@ declare class BranchingPointMarker {
 	static C(Other: UObject | any): BranchingPointMarker;
 }
 
+declare class TimeStretchCurveMarker { 
+	Time: number;
+	Alpha: number;
+	clone() : TimeStretchCurveMarker;
+	static C(Other: UObject | any): TimeStretchCurveMarker;
+}
+
+declare class TimeStretchCurve { 
+	SamplingRate: number;
+	CurveValueMinPrecision: number;
+	Markers: TimeStretchCurveMarker[];
+	Sum_dT_i_by_C_i: number;
+	clone() : TimeStretchCurve;
+	static C(Other: UObject | any): TimeStretchCurve;
+}
+
 declare class AnimMontage extends AnimCompositeBase { 
 	BlendIn: AlphaBlend;
 	BlendInTime: number;
@@ -2526,19 +2896,23 @@ declare class AnimMontage extends AnimCompositeBase {
 	BranchingPoints: BranchingPoint[];
 	bEnableRootMotionTranslation: boolean;
 	bEnableRootMotionRotation: boolean;
+	bEnableAutoBlendOut: boolean;
 	RootMotionRootLock: ERootMotionRootLock;
 	PreviewBasePose: AnimSequence;
 	BranchingPointMarkers: BranchingPointMarker[];
 	BranchingPointStateNotifyIndices: number[];
+	TimeStretchCurve: TimeStretchCurve;
+	TimeStretchCurveName: string;
 	static Load(ResourceName: string): AnimMontage;
 	static Find(Outer: UObject, ResourceName: string): AnimMontage;
 	static GetDefaultObject(): AnimMontage;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimMontage;
+	GetDefaultBlendOutTime(): number;
 	static C(Other: UObject | any): AnimMontage;
 }
 
-declare type EAnimLinkMethod = 'Absolute' | 'Relative' | 'Proportional';
-declare var EAnimLinkMethod : { Absolute:'Absolute',Relative:'Relative',Proportional:'Proportional', };
+declare type EAnimLinkMethod = 'Absolute' | 'Relative' | 'Proportional' | 'EAnimLinkMethod_MAX';
+declare var EAnimLinkMethod : { Absolute:'Absolute',Relative:'Relative',Proportional:'Proportional',EAnimLinkMethod_MAX:'EAnimLinkMethod_MAX', };
 declare class AnimLinkableElement { 
 	LinkedMontage: AnimMontage;
 	SlotIndex: number;
@@ -2577,10 +2951,10 @@ declare class AnimNotifyState extends UObject {
 	static C(Other: UObject | any): AnimNotifyState;
 }
 
-declare type EMontageNotifyTickType = 'Queued' | 'BranchingPoint';
-declare var EMontageNotifyTickType : { Queued:'Queued',BranchingPoint:'BranchingPoint', };
-declare type ENotifyFilterType = 'NoFiltering' | 'LOD';
-declare var ENotifyFilterType : { NoFiltering:'NoFiltering',LOD:'LOD', };
+declare type EMontageNotifyTickType = 'Queued' | 'BranchingPoint' | 'EMontageNotifyTickType_MAX';
+declare var EMontageNotifyTickType : { Queued:'Queued',BranchingPoint:'BranchingPoint',EMontageNotifyTickType_MAX:'EMontageNotifyTickType_MAX', };
+declare type ENotifyFilterType = 'NoFiltering' | 'LOD' | 'ENotifyFilterType_MAX';
+declare var ENotifyFilterType : { NoFiltering:'NoFiltering',LOD:'LOD',ENotifyFilterType_MAX:'ENotifyFilterType_MAX', };
 declare class AnimNotifyEvent extends AnimLinkableElement { 
 	DisplayTime: number;
 	TriggerTimeOffset: number;
@@ -2597,10 +2971,13 @@ declare class AnimNotifyEvent extends AnimLinkableElement {
 	NotifyFilterType: ENotifyFilterType;
 	NotifyFilterLOD: number;
 	bTriggerOnDedicatedServer: boolean;
+	bTriggerOnFollower: boolean;
 	NotifyColor: Color;
 	TrackIndex: number;
 	clone() : AnimNotifyEvent;
 	static C(Other: UObject | any): AnimNotifyEvent;
+	GetAnimNotifyEventTriggerTime(): number;
+	static GetAnimNotifyEventTriggerTime(NotifyEvent: AnimNotifyEvent): number;
 }
 
 declare class FloatCurve extends AnimCurveBase { 
@@ -2650,6 +3027,12 @@ declare class AnimSequenceBase extends AnimationAsset {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimSequenceBase;
 	GetPlayLength(): number;
 	static C(Other: UObject | any): AnimSequenceBase;
+	ReplaceAnimNotifyClass(NotifyName: string,NewNotifyName: string,NewNotifyClass: UObject): number;
+	ReplaceAnimNotifies(OldNotifyClass: UnrealEngineClass,NewNotifyClass: UnrealEngineClass,OnNotifyReplaced: UnrealEngineDelegate<(OldNotify: AnimNotify, NewNotify: AnimNotify) => void>): void;
+	ReplaceAnimNotifyStates(OldNotifyClass: UnrealEngineClass,NewNotifyClass: UnrealEngineClass,OnNotifyStateReplaced: UnrealEngineDelegate<(OldNotifyState: AnimNotifyState, NewNotifyState: AnimNotifyState) => void>): void;
+	static ReplaceAnimNotifyClass(Sequence: AnimSequenceBase,NotifyName: string,NewNotifyName: string,NewNotifyClass: UObject): number;
+	static ReplaceAnimNotifies(AnimationSequence: AnimSequenceBase,OldNotifyClass: UnrealEngineClass,NewNotifyClass: UnrealEngineClass,OnNotifyReplaced: UnrealEngineDelegate<(OldNotify: AnimNotify, NewNotify: AnimNotify) => void>): void;
+	static ReplaceAnimNotifyStates(AnimationSequence: AnimSequenceBase,OldNotifyClass: UnrealEngineClass,NewNotifyClass: UnrealEngineClass,OnNotifyStateReplaced: UnrealEngineDelegate<(OldNotifyState: AnimNotifyState, NewNotifyState: AnimNotifyState) => void>): void;
 }
 
 declare class TrackToSkeletonMap { 
@@ -2658,11 +3041,14 @@ declare class TrackToSkeletonMap {
 	static C(Other: UObject | any): TrackToSkeletonMap;
 }
 
-declare type AnimationCompressionFormat = 'ACF_None' | 'ACF_Float96NoW' | 'ACF_Fixed48NoW' | 'ACF_IntervalFixed32NoW' | 'ACF_Fixed32NoW' | 'ACF_Float32NoW' | 'ACF_Identity';
-declare var AnimationCompressionFormat : { ACF_None:'ACF_None',ACF_Float96NoW:'ACF_Float96NoW',ACF_Fixed48NoW:'ACF_Fixed48NoW',ACF_IntervalFixed32NoW:'ACF_IntervalFixed32NoW',ACF_Fixed32NoW:'ACF_Fixed32NoW',ACF_Float32NoW:'ACF_Float32NoW',ACF_Identity:'ACF_Identity', };
+declare type AnimationCompressionFormat = 'ACF_None' | 'ACF_Float96NoW' | 'ACF_Fixed48NoW' | 'ACF_IntervalFixed32NoW' | 'ACF_Fixed32NoW' | 'ACF_Float32NoW' | 'ACF_Identity' | 'ACF_MAX';
+declare var AnimationCompressionFormat : { ACF_None:'ACF_None',ACF_Float96NoW:'ACF_Float96NoW',ACF_Fixed48NoW:'ACF_Fixed48NoW',ACF_IntervalFixed32NoW:'ACF_IntervalFixed32NoW',ACF_Fixed32NoW:'ACF_Fixed32NoW',ACF_Float32NoW:'ACF_Float32NoW',ACF_Identity:'ACF_Identity',ACF_MAX:'ACF_MAX', };
 declare class AnimCompress extends UObject { 
 	Description: string;
 	bNeedsSkeleton: boolean;
+	bEnableSegmenting: boolean;
+	IdealNumFramesPerSegment: any;
+	MaxNumFramesPerSegment: any;
 	TranslationCompressionFormat: AnimationCompressionFormat;
 	RotationCompressionFormat: AnimationCompressionFormat;
 	ScaleCompressionFormat: AnimationCompressionFormat;
@@ -2674,16 +3060,18 @@ declare class AnimCompress extends UObject {
 	static C(Other: UObject | any): AnimCompress;
 }
 
-declare type EAdditiveAnimationType = 'AAT_None' | 'AAT_LocalSpaceBase' | 'AAT_RotationOffsetMeshSpace';
-declare var EAdditiveAnimationType : { AAT_None:'AAT_None',AAT_LocalSpaceBase:'AAT_LocalSpaceBase',AAT_RotationOffsetMeshSpace:'AAT_RotationOffsetMeshSpace', };
-declare type EAdditiveBasePoseType = 'ABPT_None' | 'ABPT_RefPose' | 'ABPT_AnimScaled' | 'ABPT_AnimFrame';
-declare var EAdditiveBasePoseType : { ABPT_None:'ABPT_None',ABPT_RefPose:'ABPT_RefPose',ABPT_AnimScaled:'ABPT_AnimScaled',ABPT_AnimFrame:'ABPT_AnimFrame', };
-declare type EAnimInterpolationType = 'Linear' | 'Step';
-declare var EAnimInterpolationType : { Linear:'Linear',Step:'Step', };
-declare type ERawCurveTrackTypes = 'RCT_Float' | 'RCT_Vector' | 'RCT_Transform';
-declare var ERawCurveTrackTypes : { RCT_Float:'RCT_Float',RCT_Vector:'RCT_Vector',RCT_Transform:'RCT_Transform', };
+declare type EAdditiveAnimationType = 'AAT_None' | 'AAT_LocalSpaceBase' | 'AAT_RotationOffsetMeshSpace' | 'AAT_MAX';
+declare var EAdditiveAnimationType : { AAT_None:'AAT_None',AAT_LocalSpaceBase:'AAT_LocalSpaceBase',AAT_RotationOffsetMeshSpace:'AAT_RotationOffsetMeshSpace',AAT_MAX:'AAT_MAX', };
+declare type EAdditiveBasePoseType = 'ABPT_None' | 'ABPT_RefPose' | 'ABPT_AnimScaled' | 'ABPT_AnimFrame' | 'ABPT_MAX';
+declare var EAdditiveBasePoseType : { ABPT_None:'ABPT_None',ABPT_RefPose:'ABPT_RefPose',ABPT_AnimScaled:'ABPT_AnimScaled',ABPT_AnimFrame:'ABPT_AnimFrame',ABPT_MAX:'ABPT_MAX', };
+declare type EAnimInterpolationType = 'Linear' | 'Step' | 'EAnimInterpolationType_MAX';
+declare var EAnimInterpolationType : { Linear:'Linear',Step:'Step',EAnimInterpolationType_MAX:'EAnimInterpolationType_MAX', };
+declare type ERawCurveTrackTypes = 'RCT_Float' | 'RCT_Vector' | 'RCT_Transform' | 'RCT_MAX';
+declare var ERawCurveTrackTypes : { RCT_Float:'RCT_Float',RCT_Vector:'RCT_Vector',RCT_Transform:'RCT_Transform',RCT_MAX:'RCT_MAX', };
 declare class AnimSequence extends AnimSequenceBase { 
 	NumFrames: number;
+	ImportFileFramerate: number;
+	ImportResampleFramerate: number;
 	TrackToSkeletonMapTable: TrackToSkeletonMap[];
 	RawDataGuid: Guid;
 	AnimationTrackNames: string[];
@@ -2694,10 +3082,11 @@ declare class AnimSequence extends AnimSequenceBase {
 	RefFrameIndex: number;
 	EncodingPkgVersion: number;
 	RetargetSource: string;
-	Interpolation: Interpolation;
+	Interpolation: EAnimInterpolationType;
 	bEnableRootMotion: boolean;
 	RootMotionRootLock: ERootMotionRootLock;
 	bForceRootLock: boolean;
+	bUseNormalizedRootMotionScale: boolean;
 	bRootMotionSettingsCopiedFromMontage: boolean;
 	CompressCommandletVersion: number;
 	bDoNotOverrideCompression: boolean;
@@ -2716,7 +3105,7 @@ declare class AnimSequence extends AnimSequenceBase {
 	AddAnimationNotifyEventObject(StartTime: number,Notify: AnimNotify,NotifyTrackName: string): void;
 	AddAnimationNotifyTrack(NotifyTrackName: string,TrackColor: LinearColor): void;
 	AddAnimationSyncMarker(MarkerName: string,Time: number,NotifyTrackName: string): void;
-	AddCurve(CurveName: string,CurveType: CurveType,bMetaDataCurve: boolean): void;
+	AddCurve(CurveName: string,CurveType: ERawCurveTrackTypes,bMetaDataCurve: boolean): void;
 	AddFloatCurveKey(CurveName: string,Time: number,Value: number): void;
 	AddFloatCurveKeys(CurveName: string,Times: number[],Values: number[]): void;
 	AddMetaData(MetaDataClass: UnrealEngineClass,MetaDataInstance: AnimMetaData): void;
@@ -2728,11 +3117,12 @@ declare class AnimSequence extends AnimSequenceBase {
 	AddVirtualBone(SourceBoneName: string,TargetBoneName: string,VirtualBoneName?: string): {VirtualBoneName: string};
 	ContainsMetaDataOfClass(MetaDataClass: UnrealEngineClass): boolean;
 	DoesBoneNameExist(BoneName: string,bExists?: boolean): {bExists: boolean};
-	DoesCurveExist(CurveName: string,CurveType: CurveType): boolean;
+	DoesCurveExist(CurveName: string,CurveType: ERawCurveTrackTypes): boolean;
+	FinalizeBoneAnimation(): void;
 	FindBonePathToRoot(BoneName: string,BonePath?: string[]): {BonePath: string[]};
 	GetAdditiveAnimationType(AdditiveAnimationType?: EAdditiveAnimationType): {AdditiveAnimationType: EAdditiveAnimationType};
 	GetAdditiveBasePoseType(AdditiveBasePoseType?: EAdditiveBasePoseType): {AdditiveBasePoseType: EAdditiveBasePoseType};
-	GetAnimationInterpolationType(InterpolationType?: InterpolationType): {InterpolationType: InterpolationType};
+	GetAnimationInterpolationType(InterpolationType?: EAnimInterpolationType): {InterpolationType: EAnimInterpolationType};
 	GetAnimationNotifyEventNames(EventNames?: string[]): {EventNames: string[]};
 	GetAnimationNotifyEvents(NotifyEvents?: AnimNotifyEvent[]): {NotifyEvents: AnimNotifyEvent[]};
 	GetAnimationNotifyEventsForTrack(NotifyTrackName: string,Events?: AnimNotifyEvent[]): {Events: AnimNotifyEvent[]};
@@ -2742,8 +3132,8 @@ declare class AnimSequence extends AnimSequenceBase {
 	GetAnimationTrackNames(TrackNames?: string[]): {TrackNames: string[]};
 	GetBonePoseForFrame(BoneName: string,Frame: number,bExtractRootMotion: boolean,Pose?: Transform): {Pose: Transform};
 	GetBonePoseForTime(BoneName: string,Time: number,bExtractRootMotion: boolean,Pose?: Transform): {Pose: Transform};
-	GetBonePosesForFrame(BoneNames: string[],Frame: number,bExtractRootMotion: boolean,Poses?: Transform[]): {Poses: Transform[]};
-	GetBonePosesForTime(BoneNames: string[],Time: number,bExtractRootMotion: boolean,Poses?: Transform[]): {Poses: Transform[]};
+	GetBonePosesForFrame(BoneNames: string[],Frame: number,bExtractRootMotion: boolean,Poses?: Transform[],PreviewMesh?: SkeletalMesh): {Poses: Transform[]};
+	GetBonePosesForTime(BoneNames: string[],Time: number,bExtractRootMotion: boolean,Poses?: Transform[],PreviewMesh?: SkeletalMesh): {Poses: Transform[]};
 	GetCompressionScheme(CompressionScheme?: AnimCompress): {CompressionScheme: AnimCompress};
 	GetFloatKeys(CurveName: string,Times?: number[],Values?: number[]): {Times: number[], Values: number[]};
 	GetFrameAtTime(Time: number,Frame?: number): {Frame: number};
@@ -2769,7 +3159,8 @@ declare class AnimSequence extends AnimSequenceBase {
 	IsValidTime(Time: number,IsValid?: boolean): {IsValid: boolean};
 	RemoveAllAnimationNotifyTracks(): void;
 	RemoveAllAnimationSyncMarkers(): void;
-	RemoveAllCurveData(bRemoveNamesFromSkeleton: boolean): void;
+	RemoveAllBoneAnimation(): void;
+	RemoveAllCurveData(): void;
 	RemoveAllMetaData(): void;
 	RemoveAllVirtualBones(): void;
 	RemoveAnimationNotifyEventsByName(NotifyName: string): number;
@@ -2777,6 +3168,7 @@ declare class AnimSequence extends AnimSequenceBase {
 	RemoveAnimationNotifyTrack(NotifyTrackName: string): void;
 	RemoveAnimationSyncMarkersByName(MarkerName: string): number;
 	RemoveAnimationSyncMarkersByTrack(NotifyTrackName: string): number;
+	RemoveBoneAnimation(BoneName: string,bIncludeChildren: boolean,bFinalize: boolean): void;
 	RemoveCurve(CurveName: string,bRemoveNameFromSkeleton: boolean): void;
 	RemoveMetaData(MetaDataObject: AnimMetaData): void;
 	RemoveMetaDataOfClass(MetaDataClass: UnrealEngineClass): void;
@@ -2784,7 +3176,7 @@ declare class AnimSequence extends AnimSequenceBase {
 	RemoveVirtualBones(VirtualBoneNames: string[]): void;
 	SetAdditiveAnimationType(AdditiveAnimationType: EAdditiveAnimationType): void;
 	SetAdditiveBasePoseType(AdditiveBasePoseType: EAdditiveBasePoseType): void;
-	SetAnimationInterpolationType(InterpolationType: InterpolationType): void;
+	SetAnimationInterpolationType(InterpolationType: EAnimInterpolationType): void;
 	SetCompressionScheme(CompressionScheme: AnimCompress): void;
 	SetIsRootMotionLockForced(bForced: boolean): void;
 	SetRateScale(RateScale: number): void;
@@ -2794,7 +3186,7 @@ declare class AnimSequence extends AnimSequenceBase {
 	static AddAnimationNotifyEventObject(AnimationSequence: AnimSequence,StartTime: number,Notify: AnimNotify,NotifyTrackName: string): void;
 	static AddAnimationNotifyTrack(AnimationSequence: AnimSequence,NotifyTrackName: string,TrackColor: LinearColor): void;
 	static AddAnimationSyncMarker(AnimationSequence: AnimSequence,MarkerName: string,Time: number,NotifyTrackName: string): void;
-	static AddCurve(AnimationSequence: AnimSequence,CurveName: string,CurveType: CurveType,bMetaDataCurve: boolean): void;
+	static AddCurve(AnimationSequence: AnimSequence,CurveName: string,CurveType: ERawCurveTrackTypes,bMetaDataCurve: boolean): void;
 	static AddFloatCurveKey(AnimationSequence: AnimSequence,CurveName: string,Time: number,Value: number): void;
 	static AddFloatCurveKeys(AnimationSequence: AnimSequence,CurveName: string,Times: number[],Values: number[]): void;
 	static AddMetaData(AnimationSequence: AnimSequence,MetaDataClass: UnrealEngineClass,MetaDataInstance: AnimMetaData): void;
@@ -2806,11 +3198,12 @@ declare class AnimSequence extends AnimSequenceBase {
 	static AddVirtualBone(AnimationSequence: AnimSequence,SourceBoneName: string,TargetBoneName: string,VirtualBoneName?: string): {VirtualBoneName: string};
 	static ContainsMetaDataOfClass(AnimationSequence: AnimSequence,MetaDataClass: UnrealEngineClass): boolean;
 	static DoesBoneNameExist(AnimationSequence: AnimSequence,BoneName: string,bExists?: boolean): {bExists: boolean};
-	static DoesCurveExist(AnimationSequence: AnimSequence,CurveName: string,CurveType: CurveType): boolean;
+	static DoesCurveExist(AnimationSequence: AnimSequence,CurveName: string,CurveType: ERawCurveTrackTypes): boolean;
+	static FinalizeBoneAnimation(AnimationSequence: AnimSequence): void;
 	static FindBonePathToRoot(AnimationSequence: AnimSequence,BoneName: string,BonePath?: string[]): {BonePath: string[]};
 	static GetAdditiveAnimationType(AnimationSequence: AnimSequence,AdditiveAnimationType?: EAdditiveAnimationType): {AdditiveAnimationType: EAdditiveAnimationType};
 	static GetAdditiveBasePoseType(AnimationSequence: AnimSequence,AdditiveBasePoseType?: EAdditiveBasePoseType): {AdditiveBasePoseType: EAdditiveBasePoseType};
-	static GetAnimationInterpolationType(AnimationSequence: AnimSequence,InterpolationType?: InterpolationType): {InterpolationType: InterpolationType};
+	static GetAnimationInterpolationType(AnimationSequence: AnimSequence,InterpolationType?: EAnimInterpolationType): {InterpolationType: EAnimInterpolationType};
 	static GetAnimationNotifyEventNames(AnimationSequence: AnimSequence,EventNames?: string[]): {EventNames: string[]};
 	static GetAnimationNotifyEvents(AnimationSequence: AnimSequence,NotifyEvents?: AnimNotifyEvent[]): {NotifyEvents: AnimNotifyEvent[]};
 	static GetAnimationNotifyEventsForTrack(AnimationSequence: AnimSequence,NotifyTrackName: string,Events?: AnimNotifyEvent[]): {Events: AnimNotifyEvent[]};
@@ -2820,8 +3213,8 @@ declare class AnimSequence extends AnimSequenceBase {
 	static GetAnimationTrackNames(AnimationSequence: AnimSequence,TrackNames?: string[]): {TrackNames: string[]};
 	static GetBonePoseForFrame(AnimationSequence: AnimSequence,BoneName: string,Frame: number,bExtractRootMotion: boolean,Pose?: Transform): {Pose: Transform};
 	static GetBonePoseForTime(AnimationSequence: AnimSequence,BoneName: string,Time: number,bExtractRootMotion: boolean,Pose?: Transform): {Pose: Transform};
-	static GetBonePosesForFrame(AnimationSequence: AnimSequence,BoneNames: string[],Frame: number,bExtractRootMotion: boolean,Poses?: Transform[]): {Poses: Transform[]};
-	static GetBonePosesForTime(AnimationSequence: AnimSequence,BoneNames: string[],Time: number,bExtractRootMotion: boolean,Poses?: Transform[]): {Poses: Transform[]};
+	static GetBonePosesForFrame(AnimationSequence: AnimSequence,BoneNames: string[],Frame: number,bExtractRootMotion: boolean,Poses?: Transform[],PreviewMesh?: SkeletalMesh): {Poses: Transform[]};
+	static GetBonePosesForTime(AnimationSequence: AnimSequence,BoneNames: string[],Time: number,bExtractRootMotion: boolean,Poses?: Transform[],PreviewMesh?: SkeletalMesh): {Poses: Transform[]};
 	static GetCompressionScheme(AnimationSequence: AnimSequence,CompressionScheme?: AnimCompress): {CompressionScheme: AnimCompress};
 	static GetFloatKeys(AnimationSequence: AnimSequence,CurveName: string,Times?: number[],Values?: number[]): {Times: number[], Values: number[]};
 	static GetFrameAtTime(AnimationSequence: AnimSequence,Time: number,Frame?: number): {Frame: number};
@@ -2847,7 +3240,8 @@ declare class AnimSequence extends AnimSequenceBase {
 	static IsValidTime(AnimationSequence: AnimSequence,Time: number,IsValid?: boolean): {IsValid: boolean};
 	static RemoveAllAnimationNotifyTracks(AnimationSequence: AnimSequence): void;
 	static RemoveAllAnimationSyncMarkers(AnimationSequence: AnimSequence): void;
-	static RemoveAllCurveData(AnimationSequence: AnimSequence,bRemoveNamesFromSkeleton: boolean): void;
+	static RemoveAllBoneAnimation(AnimationSequence: AnimSequence): void;
+	static RemoveAllCurveData(AnimationSequence: AnimSequence): void;
 	static RemoveAllMetaData(AnimationSequence: AnimSequence): void;
 	static RemoveAllVirtualBones(AnimationSequence: AnimSequence): void;
 	static RemoveAnimationNotifyEventsByName(AnimationSequence: AnimSequence,NotifyName: string): number;
@@ -2855,6 +3249,7 @@ declare class AnimSequence extends AnimSequenceBase {
 	static RemoveAnimationNotifyTrack(AnimationSequence: AnimSequence,NotifyTrackName: string): void;
 	static RemoveAnimationSyncMarkersByName(AnimationSequence: AnimSequence,MarkerName: string): number;
 	static RemoveAnimationSyncMarkersByTrack(AnimationSequence: AnimSequence,NotifyTrackName: string): number;
+	static RemoveBoneAnimation(AnimationSequence: AnimSequence,BoneName: string,bIncludeChildren: boolean,bFinalize: boolean): void;
 	static RemoveCurve(AnimationSequence: AnimSequence,CurveName: string,bRemoveNameFromSkeleton: boolean): void;
 	static RemoveMetaData(AnimationSequence: AnimSequence,MetaDataObject: AnimMetaData): void;
 	static RemoveMetaDataOfClass(AnimationSequence: AnimSequence,MetaDataClass: UnrealEngineClass): void;
@@ -2862,7 +3257,7 @@ declare class AnimSequence extends AnimSequenceBase {
 	static RemoveVirtualBones(AnimationSequence: AnimSequence,VirtualBoneNames: string[]): void;
 	static SetAdditiveAnimationType(AnimationSequence: AnimSequence,AdditiveAnimationType: EAdditiveAnimationType): void;
 	static SetAdditiveBasePoseType(AnimationSequence: AnimSequence,AdditiveBasePoseType: EAdditiveBasePoseType): void;
-	static SetAnimationInterpolationType(AnimationSequence: AnimSequence,InterpolationType: InterpolationType): void;
+	static SetAnimationInterpolationType(AnimationSequence: AnimSequence,InterpolationType: EAnimInterpolationType): void;
 	static SetCompressionScheme(AnimationSequence: AnimSequence,CompressionScheme: AnimCompress): void;
 	static SetIsRootMotionLockForced(AnimationSequence: AnimSequence,bForced: boolean): void;
 	static SetRateScale(AnimationSequence: AnimSequence,RateScale: number): void;
@@ -2871,43 +3266,84 @@ declare class AnimSequence extends AnimSequenceBase {
 }
 
 declare class SkeletalMeshOptimizationSettings { 
-	ReductionMethod: SkeletalMeshOptimizationType;
 	NumOfTrianglesPercentage: number;
 	MaxDeviationPercentage: number;
-	WeldingThreshold: number;
-	bRecalcNormals: boolean;
-	NormalsThreshold: number;
+	ReductionMethod: SkeletalMeshOptimizationType;
 	SilhouetteImportance: SkeletalMeshOptimizationImportance;
 	TextureImportance: SkeletalMeshOptimizationImportance;
 	ShadingImportance: SkeletalMeshOptimizationImportance;
 	SkinningImportance: SkeletalMeshOptimizationImportance;
-	BoneReductionRatio: number;
+	bRemapMorphTargets: boolean;
+	bRecalcNormals: boolean;
+	WeldingThreshold: number;
+	NormalsThreshold: number;
 	MaxBonesPerVertex: number;
-	BonesToRemove: BoneReference[];
 	BaseLOD: number;
+	BonesToRemove: BoneReference[];
 	BakePose: AnimSequence;
 	clone() : SkeletalMeshOptimizationSettings;
 	static C(Other: UObject | any): SkeletalMeshOptimizationSettings;
 }
 
 declare class SkeletalMeshLODInfo { 
-	ScreenSize: number;
+	ScreenSize: PerPlatformFloat;
 	LODHysteresis: number;
 	LODMaterialMap: number[];
 	bEnableShadowCasting: boolean[];
-	TriangleSortSettings: TriangleSortSettings[];
-	bHasBeenSimplified: boolean;
-	ReductionSettings: SkeletalMeshOptimizationSettings;
 	RemovedBones: string[];
+	ReductionSettings: SkeletalMeshOptimizationSettings;
 	BonesToRemove: BoneReference[];
 	BakePose: AnimSequence;
 	SourceImportFilename: string;
+	bHasBeenSimplified: boolean;
 	bHasPerLODVertexColors: boolean;
+	bAllowCPUAccess: boolean;
+	bSupportUniformlyDistributedSampling: boolean;
+	bImportWithBaseMesh: boolean;
 	clone() : SkeletalMeshLODInfo;
 	static C(Other: UObject | any): SkeletalMeshLODInfo;
 }
 
+declare class PerPlatformInt { 
+	Default: number;
+	PerPlatform: any;
+	clone() : PerPlatformInt;
+	static C(Other: UObject | any): PerPlatformInt;
+}
+
+declare type EBoneFilterActionOption = 'Remove' | 'Keep' | 'Invalid' | 'EBoneFilterActionOption_MAX';
+declare var EBoneFilterActionOption : { Remove:'Remove',Keep:'Keep',Invalid:'Invalid',EBoneFilterActionOption_MAX:'EBoneFilterActionOption_MAX', };
+declare class BoneFilter { 
+	bExcludeSelf: boolean;
+	BoneName: string;
+	clone() : BoneFilter;
+	static C(Other: UObject | any): BoneFilter;
+}
+
+declare class SkeletalMeshLODGroupSettings { 
+	ScreenSize: PerPlatformFloat;
+	LODHysteresis: number;
+	BoneFilterActionOption: EBoneFilterActionOption;
+	BoneList: BoneFilter[];
+	ReductionSettings: SkeletalMeshOptimizationSettings;
+	clone() : SkeletalMeshLODGroupSettings;
+	static C(Other: UObject | any): SkeletalMeshLODGroupSettings;
+}
+
+declare class SkeletalMeshLODSettings extends DataAsset { 
+	MinLOD: PerPlatformInt;
+	LODGroups: SkeletalMeshLODGroupSettings[];
+	static Load(ResourceName: string): SkeletalMeshLODSettings;
+	static Find(Outer: UObject, ResourceName: string): SkeletalMeshLODSettings;
+	static GetDefaultObject(): SkeletalMeshLODSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshLODSettings;
+	static C(Other: UObject | any): SkeletalMeshLODSettings;
+}
+
 declare class KShapeElem { 
+	RestOffset: number;
+	Name: string;
+	bContributeToMass: boolean;
 	clone() : KShapeElem;
 	static C(Other: UObject | any): KShapeElem;
 }
@@ -2919,6 +3355,12 @@ declare class Matrix {
 	WPlane: Plane;
 	clone() : Matrix;
 	static C(Other: UObject | any): Matrix;
+	Conv_MatrixToRotator(): Rotator;
+	Conv_MatrixToTransform(): Transform;
+	Matrix_GetOrigin(): Vector;
+	static Conv_MatrixToRotator(InMatrix: Matrix): Rotator;
+	static Conv_MatrixToTransform(InMatrix: Matrix): Transform;
+	static Matrix_GetOrigin(InMatrix: Matrix): Vector;
 }
 
 declare class KSphereElem extends KShapeElem { 
@@ -2960,21 +3402,32 @@ declare class KConvexElem extends KShapeElem {
 	static C(Other: UObject | any): KConvexElem;
 }
 
+declare class KTaperedCapsuleElem extends KShapeElem { 
+	Center: Vector;
+	Rotation: Rotator;
+	Radius0: number;
+	Radius1: number;
+	Length: number;
+	clone() : KTaperedCapsuleElem;
+	static C(Other: UObject | any): KTaperedCapsuleElem;
+}
+
 declare class KAggregateGeom { 
 	SphereElems: KSphereElem[];
 	BoxElems: KBoxElem[];
 	SphylElems: KSphylElem[];
 	ConvexElems: KConvexElem[];
+	TaperedCapsuleElems: KTaperedCapsuleElem[];
 	clone() : KAggregateGeom;
 	static C(Other: UObject | any): KAggregateGeom;
 }
 
-declare type EPhysicsType = 'PhysType_Default' | 'PhysType_Kinematic' | 'PhysType_Simulated';
-declare var EPhysicsType : { PhysType_Default:'PhysType_Default',PhysType_Kinematic:'PhysType_Kinematic',PhysType_Simulated:'PhysType_Simulated', };
-declare type EBodyCollisionResponse = 'BodyCollision_Enabled' | 'BodyCollision_Disabled';
-declare var EBodyCollisionResponse : { BodyCollision_Enabled:'BodyCollision_Enabled',BodyCollision_Disabled:'BodyCollision_Disabled', };
-declare type ECollisionTraceFlag = 'CTF_UseDefault' | 'CTF_UseSimpleAndComplex' | 'CTF_UseSimpleAsComplex' | 'CTF_UseComplexAsSimple';
-declare var ECollisionTraceFlag : { CTF_UseDefault:'CTF_UseDefault',CTF_UseSimpleAndComplex:'CTF_UseSimpleAndComplex',CTF_UseSimpleAsComplex:'CTF_UseSimpleAsComplex',CTF_UseComplexAsSimple:'CTF_UseComplexAsSimple', };
+declare type EPhysicsType = 'PhysType_Default' | 'PhysType_Kinematic' | 'PhysType_Simulated' | 'PhysType_MAX';
+declare var EPhysicsType : { PhysType_Default:'PhysType_Default',PhysType_Kinematic:'PhysType_Kinematic',PhysType_Simulated:'PhysType_Simulated',PhysType_MAX:'PhysType_MAX', };
+declare type EBodyCollisionResponse = 'BodyCollision_Enabled' | 'BodyCollision_Disabled' | 'BodyCollision_MAX';
+declare var EBodyCollisionResponse : { BodyCollision_Enabled:'BodyCollision_Enabled',BodyCollision_Disabled:'BodyCollision_Disabled',BodyCollision_MAX:'BodyCollision_MAX', };
+declare type ECollisionTraceFlag = 'CTF_UseDefault' | 'CTF_UseSimpleAndComplex' | 'CTF_UseSimpleAsComplex' | 'CTF_UseComplexAsSimple' | 'CTF_MAX';
+declare var ECollisionTraceFlag : { CTF_UseDefault:'CTF_UseDefault',CTF_UseSimpleAndComplex:'CTF_UseSimpleAndComplex',CTF_UseSimpleAsComplex:'CTF_UseSimpleAsComplex',CTF_UseComplexAsSimple:'CTF_UseComplexAsSimple',CTF_MAX:'CTF_MAX', };
 declare class BodySetup extends UObject { 
 	AggGeom: KAggregateGeom;
 	BoneName: string;
@@ -2986,12 +3439,12 @@ declare class BodySetup extends UObject {
 	bGenerateNonMirroredCollision: boolean;
 	bSharedCookedData: boolean;
 	bGenerateMirroredCollision: boolean;
-	PhysMaterial: PhysicalMaterial;
 	CollisionReponse: EBodyCollisionResponse;
 	CollisionTraceFlag: ECollisionTraceFlag;
-	DefaultInstance: BodyInstance;
+	PhysMaterial: PhysicalMaterial;
 	WalkableSlopeOverride: WalkableSlopeOverride;
 	BuildScale: number;
+	DefaultInstance: BodyInstance;
 	BuildScale3D: Vector;
 	static Load(ResourceName: string): BodySetup;
 	static Find(Outer: UObject, ResourceName: string): BodySetup;
@@ -3022,6 +3475,7 @@ declare class PhysicalAnimationProfile {
 
 declare class SkeletalBodySetup extends BodySetup { 
 	CurrentPhysicalAnimationProfile: PhysicalAnimationProfile;
+	bSkipScaleFromAnimation: boolean;
 	PhysicalAnimationData: PhysicalAnimationProfile[];
 	static Load(ResourceName: string): SkeletalBodySetup;
 	static Find(Outer: UObject, ResourceName: string): SkeletalBodySetup;
@@ -3040,8 +3494,8 @@ declare class ConstraintBaseParams {
 	static C(Other: UObject | any): ConstraintBaseParams;
 }
 
-declare type ELinearConstraintMotion = 'LCM_Free' | 'LCM_Limited' | 'LCM_Locked';
-declare var ELinearConstraintMotion : { LCM_Free:'LCM_Free',LCM_Limited:'LCM_Limited',LCM_Locked:'LCM_Locked', };
+declare type ELinearConstraintMotion = 'LCM_Free' | 'LCM_Limited' | 'LCM_Locked' | 'LCM_MAX';
+declare var ELinearConstraintMotion : { LCM_Free:'LCM_Free',LCM_Limited:'LCM_Limited',LCM_Locked:'LCM_Locked',LCM_MAX:'LCM_MAX', };
 declare class LinearConstraint extends ConstraintBaseParams { 
 	Limit: number;
 	XMotion: ELinearConstraintMotion;
@@ -3051,8 +3505,8 @@ declare class LinearConstraint extends ConstraintBaseParams {
 	static C(Other: UObject | any): LinearConstraint;
 }
 
-declare type EAngularConstraintMotion = 'ACM_Free' | 'ACM_Limited' | 'ACM_Locked';
-declare var EAngularConstraintMotion : { ACM_Free:'ACM_Free',ACM_Limited:'ACM_Limited',ACM_Locked:'ACM_Locked', };
+declare type EAngularConstraintMotion = 'ACM_Free' | 'ACM_Limited' | 'ACM_Locked' | 'ACM_MAX';
+declare var EAngularConstraintMotion : { ACM_Free:'ACM_Free',ACM_Limited:'ACM_Limited',ACM_Locked:'ACM_Locked',ACM_MAX:'ACM_MAX', };
 declare class ConeConstraint extends ConstraintBaseParams { 
 	Swing1LimitDegrees: number;
 	Swing2LimitDegrees: number;
@@ -3090,8 +3544,8 @@ declare class LinearDriveConstraint {
 	static C(Other: UObject | any): LinearDriveConstraint;
 }
 
-declare type EAngularDriveMode = 'SLERP' | 'TwistAndSwing';
-declare var EAngularDriveMode : { SLERP:'SLERP',TwistAndSwing:'TwistAndSwing', };
+declare type EAngularDriveMode = 'SLERP' | 'TwistAndSwing' | 'EAngularDriveMode_MAX';
+declare var EAngularDriveMode : { SLERP:'SLERP',TwistAndSwing:'TwistAndSwing',EAngularDriveMode_MAX:'EAngularDriveMode_MAX', };
 declare class AngularDriveConstraint { 
 	TwistDrive: ConstraintDrive;
 	SwingDrive: ConstraintDrive;
@@ -3114,6 +3568,7 @@ declare class ConstraintProfileProperties {
 	LinearDrive: LinearDriveConstraint;
 	AngularDrive: AngularDriveConstraint;
 	bDisableCollision: boolean;
+	bParentDominates: boolean;
 	bEnableProjection: boolean;
 	bAngularBreakable: boolean;
 	bLinearBreakable: boolean;
@@ -3249,7 +3704,7 @@ declare class PhysicsConstraintTemplate extends UObject {
 
 declare class PhysicsAsset extends UObject { 
 	DefaultSkelMesh: SkeletalMesh;
-	PreviewSkeletalMesh: any;
+	PreviewSkeletalMesh: SkeletalMesh;
 	PhysicalAnimationProfiles: string[];
 	ConstraintProfiles: string[];
 	CurrentPhysicalAnimationProfileName: string;
@@ -3258,6 +3713,8 @@ declare class PhysicsAsset extends UObject {
 	SkeletalBodySetups: SkeletalBodySetup[];
 	ConstraintSetup: PhysicsConstraintTemplate[];
 	bUseAsyncScene: boolean;
+	bNotForDedicatedServer: boolean;
+	ThumbnailInfo: ThumbnailInfo;
 	BodySetup: BodySetup[];
 	static Load(ResourceName: string): PhysicsAsset;
 	static Find(Outer: UObject, ResourceName: string): PhysicsAsset;
@@ -3267,8 +3724,11 @@ declare class PhysicsAsset extends UObject {
 }
 
 declare class NodeMappingContainer extends UObject { 
-	NodeMapping: any;
-	SourceAsset: any;
+	SourceItems: any;
+	TargetItems: any;
+	SourceToTarget: any;
+	SourceAsset: UObject;
+	TargetAsset: UObject;
 	static Load(ResourceName: string): NodeMappingContainer;
 	static Find(Outer: UObject, ResourceName: string): NodeMappingContainer;
 	static GetDefaultObject(): NodeMappingContainer;
@@ -3319,11 +3779,27 @@ declare class ClothingAssetData_Legacy {
 	static C(Other: UObject | any): ClothingAssetData_Legacy;
 }
 
-declare type ERootMotionMode = 'NoRootMotionExtraction' | 'IgnoreRootMotion' | 'RootMotionFromEverything' | 'RootMotionFromMontagesOnly';
-declare var ERootMotionMode : { NoRootMotionExtraction:'NoRootMotionExtraction',IgnoreRootMotion:'IgnoreRootMotion',RootMotionFromEverything:'RootMotionFromEverything',RootMotionFromMontagesOnly:'RootMotionFromMontagesOnly', };
-declare class StringClassReference extends StringAssetReference { 
-	clone() : StringClassReference;
-	static C(Other: UObject | any): StringClassReference;
+declare type ERootMotionMode = 'NoRootMotionExtraction' | 'IgnoreRootMotion' | 'RootMotionFromEverything' | 'RootMotionFromMontagesOnly' | 'ERootMotionMode_MAX';
+declare var ERootMotionMode : { NoRootMotionExtraction:'NoRootMotionExtraction',IgnoreRootMotion:'IgnoreRootMotion',RootMotionFromEverything:'RootMotionFromEverything',RootMotionFromMontagesOnly:'RootMotionFromMontagesOnly',ERootMotionMode_MAX:'ERootMotionMode_MAX', };
+declare class SoftClassPath extends SoftObjectPath { 
+	clone() : SoftClassPath;
+	static C(Other: UObject | any): SoftClassPath;
+	BreakSoftClassPath(PathString?: string): {PathString: string};
+	static BreakSoftClassPath(InSoftClassPath: SoftClassPath,PathString?: string): {PathString: string};
+	static MakeSoftClassPath(PathString: string): SoftClassPath;
+}
+
+declare class AnimNotifyEventReference { 
+	NotifySource: UObject;
+	clone() : AnimNotifyEventReference;
+	static C(Other: UObject | any): AnimNotifyEventReference;
+}
+
+declare class AnimNotifyQueue { 
+	AnimNotifies: AnimNotifyEventReference[];
+	UnfilteredMontageAnimNotifies: any;
+	clone() : AnimNotifyQueue;
+	static C(Other: UObject | any): AnimNotifyQueue;
 }
 
 declare class PoseSnapshot { 
@@ -3336,8 +3812,10 @@ declare class PoseSnapshot {
 	static C(Other: UObject | any): PoseSnapshot;
 }
 
-declare type EMontagePlayReturnType = 'MontageLength' | 'Duration';
-declare var EMontagePlayReturnType : { MontageLength:'MontageLength',Duration:'Duration', };
+declare type ETeleportType = 'None' | 'TeleportPhysics' | 'ResetPhysics' | 'ETeleportType_MAX';
+declare var ETeleportType : { None:'None',TeleportPhysics:'TeleportPhysics',ResetPhysics:'ResetPhysics',ETeleportType_MAX:'ETeleportType_MAX', };
+declare type EMontagePlayReturnType = 'MontageLength' | 'Duration' | 'EMontagePlayReturnType_MAX';
+declare var EMontagePlayReturnType : { MontageLength:'MontageLength',Duration:'Duration',EMontagePlayReturnType_MAX:'EMontagePlayReturnType_MAX', };
 declare class MarkerSyncAnimPosition { 
 	PreviousMarkerName: string;
 	NextMarkerName: string;
@@ -3346,20 +3824,24 @@ declare class MarkerSyncAnimPosition {
 	static C(Other: UObject | any): MarkerSyncAnimPosition;
 }
 
+declare type EAnimCurveType = 'AttributeCurve' | 'MaterialCurve' | 'MorphTargetCurve' | 'MaxAnimCurveType' | 'EAnimCurveType_MAX';
+declare var EAnimCurveType : { AttributeCurve:'AttributeCurve',MaterialCurve:'MaterialCurve',MorphTargetCurve:'MorphTargetCurve',MaxAnimCurveType:'MaxAnimCurveType',EAnimCurveType_MAX:'EAnimCurveType_MAX', };
 declare class AnimInstance extends UObject { 
-	DeltaTime: number;
 	CurrentSkeleton: Skeleton;
 	RootMotionMode: ERootMotionMode;
+	DeltaTime: number;
 	bRunUpdatesInWorkerThreads: boolean;
 	bCanUseParallelUpdateAnimation: boolean;
-	bUseMultiThreadedAnimationUpdate: boolean;
 	bWarnAboutBlueprintUsage: boolean;
+	bUseMultiThreadedAnimationUpdate: boolean;
+	bUsingCopyPoseFromMesh: boolean;
+	bQueueMontageEvents: boolean;
 	OnMontageBlendingOut: UnrealEngineMulticastDelegate<(Montage: AnimMontage, bInterrupted: boolean) => void>;
 	OnMontageStarted: UnrealEngineMulticastDelegate<(Montage: AnimMontage) => void>;
 	OnMontageEnded: UnrealEngineMulticastDelegate<(Montage: AnimMontage, bInterrupted: boolean) => void>;
 	OnAllMontageInstancesEnded: UnrealEngineMulticastDelegate<() => void>;
-	bQueueMontageEvents: boolean;
-	PostCompileValidationClassName: StringClassReference;
+	PostCompileValidationClassName: SoftClassPath;
+	NotifyQueue: AnimNotifyQueue;
 	ActiveAnimNotifyState: AnimNotifyEvent[];
 	static Load(ResourceName: string): AnimInstance;
 	static Find(Outer: UObject, ResourceName: string): AnimInstance;
@@ -3372,6 +3854,7 @@ declare class AnimInstance extends UObject {
 	SetRootMotionMode(Value: ERootMotionMode): void;
 	SetMorphTarget(MorphTargetName: string,Value: number): void;
 	SavePoseSnapshot(SnapshotName: string): void;
+	ResetDynamics(InTeleportType: ETeleportType): void;
 	PlaySlotAnimationAsDynamicMontage(Asset: AnimSequenceBase,SlotNodeName: string,BlendInTime: number,BlendOutTime: number,InPlayRate: number,LoopCount: number,BlendOutTriggerTime: number,InTimeToStartMontageAt: number): AnimMontage;
 	PlaySlotAnimation(Asset: AnimSequenceBase,SlotNodeName: string,BlendInTime: number,BlendOutTime: number,InPlayRate: number,LoopCount: number): number;
 	Montage_Stop(InBlendOutTime: number,Montage: AnimMontage): void;
@@ -3379,7 +3862,7 @@ declare class AnimInstance extends UObject {
 	Montage_SetPlayRate(Montage: AnimMontage,NewPlayRate: number): void;
 	Montage_SetNextSection(SectionNameToChange: string,NextSection: string,Montage: AnimMontage): void;
 	Montage_Resume(Montage: AnimMontage): void;
-	Montage_Play(MontageToPlay: AnimMontage,InPlayRate: number,ReturnValueType: ReturnValueType,InTimeToStartMontageAt: number): number;
+	Montage_Play(MontageToPlay: AnimMontage,InPlayRate: number,ReturnValueType: EMontagePlayReturnType,InTimeToStartMontageAt: number,bStopAllMontages: boolean): number;
 	Montage_Pause(Montage: AnimMontage): void;
 	Montage_JumpToSectionsEnd(SectionName: string,Montage: AnimMontage): void;
 	Montage_JumpToSection(SectionName: string,Montage: AnimMontage): void;
@@ -3418,6 +3901,8 @@ declare class AnimInstance extends UObject {
 	GetCurveValue(CurveName: string): number;
 	GetCurrentStateName(MachineIndex: number): string;
 	GetCurrentActiveMontage(): AnimMontage;
+	GetAllCurveNames(OutNames?: string[]): {OutNames: string[]};
+	GetActiveCurveNames(CurveType: EAnimCurveType,OutNames?: string[]): {OutNames: string[]};
 	ClearMorphTargets(): void;
 	CalculateDirection(Velocity: Vector,BaseRotation: Rotator): number;
 	BlueprintUpdateAnimation(DeltaTimeX: number): void;
@@ -3441,6 +3926,54 @@ declare class ClothingAssetBase extends UObject {
 	static C(Other: UObject | any): ClothingAssetBase;
 }
 
+declare class SkeletalMeshSamplingRegionMaterialFilter { 
+	MaterialName: string;
+	clone() : SkeletalMeshSamplingRegionMaterialFilter;
+	static C(Other: UObject | any): SkeletalMeshSamplingRegionMaterialFilter;
+}
+
+declare class SkeletalMeshSamplingRegionBoneFilter { 
+	BoneName: string;
+	bIncludeOrExclude: boolean;
+	bApplyToChildren: boolean;
+	clone() : SkeletalMeshSamplingRegionBoneFilter;
+	static C(Other: UObject | any): SkeletalMeshSamplingRegionBoneFilter;
+}
+
+declare class SkeletalMeshSamplingRegion { 
+	Name: string;
+	LODIndex: number;
+	bSupportUniformlyDistributedSampling: boolean;
+	MaterialFilters: SkeletalMeshSamplingRegionMaterialFilter[];
+	BoneFilters: SkeletalMeshSamplingRegionBoneFilter[];
+	clone() : SkeletalMeshSamplingRegion;
+	static C(Other: UObject | any): SkeletalMeshSamplingRegion;
+}
+
+declare class SkeletalMeshSamplingLODBuiltData { 
+	clone() : SkeletalMeshSamplingLODBuiltData;
+	static C(Other: UObject | any): SkeletalMeshSamplingLODBuiltData;
+}
+
+declare class SkeletalMeshSamplingRegionBuiltData { 
+	clone() : SkeletalMeshSamplingRegionBuiltData;
+	static C(Other: UObject | any): SkeletalMeshSamplingRegionBuiltData;
+}
+
+declare class SkeletalMeshSamplingBuiltData { 
+	WholeMeshBuiltData: SkeletalMeshSamplingLODBuiltData[];
+	RegionBuiltData: SkeletalMeshSamplingRegionBuiltData[];
+	clone() : SkeletalMeshSamplingBuiltData;
+	static C(Other: UObject | any): SkeletalMeshSamplingBuiltData;
+}
+
+declare class SkeletalMeshSamplingInfo { 
+	Regions: SkeletalMeshSamplingRegion[];
+	BuiltData: SkeletalMeshSamplingBuiltData;
+	clone() : SkeletalMeshSamplingInfo;
+	static C(Other: UObject | any): SkeletalMeshSamplingInfo;
+}
+
 declare class BlueprintCore extends UObject { 
 	SkeletonGeneratedClass: UnrealEngineClass;
 	GeneratedClass: UnrealEngineClass;
@@ -3454,10 +3987,10 @@ declare class BlueprintCore extends UObject {
 	static C(Other: UObject | any): BlueprintCore;
 }
 
-declare type EBlueprintNativizationFlag = 'Disabled' | 'Dependency' | 'ExplicitlyEnabled';
-declare var EBlueprintNativizationFlag : { Disabled:'Disabled',Dependency:'Dependency',ExplicitlyEnabled:'ExplicitlyEnabled', };
-declare type EBlueprintCompileMode = 'Default' | 'Development' | 'FinalRelease';
-declare var EBlueprintCompileMode : { Default:'Default',Development:'Development',FinalRelease:'FinalRelease', };
+declare type EBlueprintNativizationFlag = 'Disabled' | 'Dependency' | 'ExplicitlyEnabled' | 'EBlueprintNativizationFlag_MAX';
+declare var EBlueprintNativizationFlag : { Disabled:'Disabled',Dependency:'Dependency',ExplicitlyEnabled:'ExplicitlyEnabled',EBlueprintNativizationFlag_MAX:'EBlueprintNativizationFlag_MAX', };
+declare type EBlueprintCompileMode = 'Default' | 'Development' | 'FinalRelease' | 'EBlueprintCompileMode_MAX';
+declare var EBlueprintCompileMode : { Default:'Default',Development:'Development',FinalRelease:'FinalRelease',EBlueprintCompileMode_MAX:'EBlueprintCompileMode_MAX', };
 declare class Struct extends Field { 
 	static Load(ResourceName: string): Struct;
 	static Find(Outer: UObject, ResourceName: string): Struct;
@@ -3492,7 +4025,6 @@ declare class SCS_Node extends UObject {
 	ComponentClass: UnrealEngineClass;
 	ComponentTemplate: ActorComponent;
 	CookedComponentInstancingData: BlueprintCookedComponentInstancingData;
-	VariableName: string;
 	CategoryName: string;
 	AttachToName: string;
 	ParentComponentOrVariableName: string;
@@ -3554,8 +4086,8 @@ declare class EdGraph extends UObject {
 	static C(Other: UObject | any): EdGraph;
 }
 
-declare type ETimelineLengthMode = 'TL_TimelineLength' | 'TL_LastKeyFrame';
-declare var ETimelineLengthMode : { TL_TimelineLength:'TL_TimelineLength',TL_LastKeyFrame:'TL_LastKeyFrame', };
+declare type ETimelineLengthMode = 'TL_TimelineLength' | 'TL_LastKeyFrame' | 'TL_MAX';
+declare var ETimelineLengthMode : { TL_TimelineLength:'TL_TimelineLength',TL_LastKeyFrame:'TL_LastKeyFrame',TL_MAX:'TL_MAX', };
 declare class TTTrackBase { 
 	TrackName: string;
 	bIsExternalCurve: boolean;
@@ -3591,16 +4123,6 @@ declare class TTVectorTrack extends TTTrackBase {
 	static C(Other: UObject | any): TTVectorTrack;
 }
 
-declare class CurveLinearColor extends CurveBase { 
-	FloatCurves: RichCurve;
-	static Load(ResourceName: string): CurveLinearColor;
-	static Find(Outer: UObject, ResourceName: string): CurveLinearColor;
-	static GetDefaultObject(): CurveLinearColor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveLinearColor;
-	GetLinearColorValue(InTime: number): LinearColor;
-	static C(Other: UObject | any): CurveLinearColor;
-}
-
 declare class TTLinearColorTrack extends TTTrackBase { 
 	CurveLinearColor: CurveLinearColor;
 	clone() : TTLinearColorTrack;
@@ -3655,12 +4177,12 @@ declare class InheritableComponentHandler extends UObject {
 	static C(Other: UObject | any): InheritableComponentHandler;
 }
 
-declare type EBlueprintType = 'BPTYPE_Normal' | 'BPTYPE_Const' | 'BPTYPE_MacroLibrary' | 'BPTYPE_Interface' | 'BPTYPE_LevelScript' | 'BPTYPE_FunctionLibrary';
-declare var EBlueprintType : { BPTYPE_Normal:'BPTYPE_Normal',BPTYPE_Const:'BPTYPE_Const',BPTYPE_MacroLibrary:'BPTYPE_MacroLibrary',BPTYPE_Interface:'BPTYPE_Interface',BPTYPE_LevelScript:'BPTYPE_LevelScript',BPTYPE_FunctionLibrary:'BPTYPE_FunctionLibrary', };
-declare type EBlueprintStatus = 'BS_Unknown' | 'BS_Dirty' | 'BS_Error' | 'BS_UpToDate' | 'BS_BeingCreated' | 'BS_UpToDateWithWarnings';
-declare var EBlueprintStatus : { BS_Unknown:'BS_Unknown',BS_Dirty:'BS_Dirty',BS_Error:'BS_Error',BS_UpToDate:'BS_UpToDate',BS_BeingCreated:'BS_BeingCreated',BS_UpToDateWithWarnings:'BS_UpToDateWithWarnings', };
-declare type ELifetimeCondition = 'COND_None' | 'COND_InitialOnly' | 'COND_OwnerOnly' | 'COND_SkipOwner' | 'COND_SimulatedOnly' | 'COND_AutonomousOnly' | 'COND_SimulatedOrPhysics' | 'COND_InitialOrOwner' | 'COND_Custom' | 'COND_ReplayOrOwner' | 'COND_ReplayOnly' | 'COND_SimulatedOnlyNoReplay' | 'COND_SimulatedOrPhysicsNoReplay' | 'COND_SkipReplay';
-declare var ELifetimeCondition : { COND_None:'COND_None',COND_InitialOnly:'COND_InitialOnly',COND_OwnerOnly:'COND_OwnerOnly',COND_SkipOwner:'COND_SkipOwner',COND_SimulatedOnly:'COND_SimulatedOnly',COND_AutonomousOnly:'COND_AutonomousOnly',COND_SimulatedOrPhysics:'COND_SimulatedOrPhysics',COND_InitialOrOwner:'COND_InitialOrOwner',COND_Custom:'COND_Custom',COND_ReplayOrOwner:'COND_ReplayOrOwner',COND_ReplayOnly:'COND_ReplayOnly',COND_SimulatedOnlyNoReplay:'COND_SimulatedOnlyNoReplay',COND_SimulatedOrPhysicsNoReplay:'COND_SimulatedOrPhysicsNoReplay',COND_SkipReplay:'COND_SkipReplay', };
+declare type EBlueprintType = 'BPTYPE_Normal' | 'BPTYPE_Const' | 'BPTYPE_MacroLibrary' | 'BPTYPE_Interface' | 'BPTYPE_LevelScript' | 'BPTYPE_FunctionLibrary' | 'BPTYPE_MAX';
+declare var EBlueprintType : { BPTYPE_Normal:'BPTYPE_Normal',BPTYPE_Const:'BPTYPE_Const',BPTYPE_MacroLibrary:'BPTYPE_MacroLibrary',BPTYPE_Interface:'BPTYPE_Interface',BPTYPE_LevelScript:'BPTYPE_LevelScript',BPTYPE_FunctionLibrary:'BPTYPE_FunctionLibrary',BPTYPE_MAX:'BPTYPE_MAX', };
+declare type EBlueprintStatus = 'BS_Unknown' | 'BS_Dirty' | 'BS_Error' | 'BS_UpToDate' | 'BS_BeingCreated' | 'BS_UpToDateWithWarnings' | 'BS_MAX';
+declare var EBlueprintStatus : { BS_Unknown:'BS_Unknown',BS_Dirty:'BS_Dirty',BS_Error:'BS_Error',BS_UpToDate:'BS_UpToDate',BS_BeingCreated:'BS_BeingCreated',BS_UpToDateWithWarnings:'BS_UpToDateWithWarnings',BS_MAX:'BS_MAX', };
+declare type ELifetimeCondition = 'COND_None' | 'COND_InitialOnly' | 'COND_OwnerOnly' | 'COND_SkipOwner' | 'COND_SimulatedOnly' | 'COND_AutonomousOnly' | 'COND_SimulatedOrPhysics' | 'COND_InitialOrOwner' | 'COND_Custom' | 'COND_ReplayOrOwner' | 'COND_ReplayOnly' | 'COND_SimulatedOnlyNoReplay' | 'COND_SimulatedOrPhysicsNoReplay' | 'COND_SkipReplay' | 'COND_Max';
+declare var ELifetimeCondition : { COND_None:'COND_None',COND_InitialOnly:'COND_InitialOnly',COND_OwnerOnly:'COND_OwnerOnly',COND_SkipOwner:'COND_SkipOwner',COND_SimulatedOnly:'COND_SimulatedOnly',COND_AutonomousOnly:'COND_AutonomousOnly',COND_SimulatedOrPhysics:'COND_SimulatedOrPhysics',COND_InitialOrOwner:'COND_InitialOrOwner',COND_Custom:'COND_Custom',COND_ReplayOrOwner:'COND_ReplayOrOwner',COND_ReplayOnly:'COND_ReplayOnly',COND_SimulatedOnlyNoReplay:'COND_SimulatedOnlyNoReplay',COND_SimulatedOrPhysicsNoReplay:'COND_SimulatedOrPhysicsNoReplay',COND_SkipReplay:'COND_SkipReplay',COND_Max:'COND_Max', };
 declare class BPVariableDescription { 
 	VarName: string;
 	VarGuid: Guid;
@@ -3692,13 +4214,22 @@ declare class BPInterfaceDescription {
 }
 
 declare class EditedDocumentInfo { 
-	EditedObject: UObject;
+	EditedObjectPath: SoftObjectPath;
 	SavedViewOffset: Vector2D;
 	SavedZoomAmount: number;
+	EditedObject: UObject;
 	clone() : EditedDocumentInfo;
 	static C(Other: UObject | any): EditedDocumentInfo;
 }
 
+declare class BPEditorBookmarkNode { 
+	NodeGuid: Guid;
+	ParentGuid: Guid;
+	DisplayName: string;
+	clone() : BPEditorBookmarkNode;
+	static C(Other: UObject | any): BPEditorBookmarkNode;
+}
+
 declare class Breakpoint extends UObject { 
 	bEnabled: boolean;
 	UNode: EdGraphNode;
@@ -3714,7 +4245,7 @@ declare class Breakpoint extends UObject {
 
 declare class EdGraphPinReference { 
 	OwningNode: any;
-	PinId: Guid;
+	PinID: Guid;
 	clone() : EdGraphPinReference;
 	static C(Other: UObject | any): EdGraphPinReference;
 }
@@ -3739,16 +4270,17 @@ declare class Blueprint extends BlueprintCore {
 	bForceFullEditor: boolean;
 	bQueuedForCompilation: boolean;
 	bRunConstructionScriptOnDrag: boolean;
+	bRunConstructionScriptInSequencer: boolean;
 	bGenerateConstClass: boolean;
 	bGenerateAbstractClass: boolean;
 	BlueprintDescription: string;
 	BlueprintCategory: string;
 	HideCategories: string[];
-	NativizationFlag: NativizationFlag;
+	NativizationFlag: EBlueprintNativizationFlag;
 	bDisplayCompilePIEWarning: boolean;
 	SearchGuid: Guid;
 	bDeprecate: boolean;
-	CompileMode: CompileMode;
+	CompileMode: EBlueprintCompileMode;
 	SimpleConstructionScript: SimpleConstructionScript;
 	UbergraphPages: EdGraph[];
 	FunctionGraphs: EdGraph[];
@@ -3768,6 +4300,8 @@ declare class Blueprint extends BlueprintCore {
 	ImplementedInterfaces: BPInterfaceDescription[];
 	BlueprintSystemVersion: number;
 	LastEditedDocuments: EditedDocumentInfo[];
+	Bookmarks: any;
+	BookmarkNodes: BPEditorBookmarkNode[];
 	Breakpoints: Breakpoint[];
 	WatchedPins: EdGraphPinReference[];
 	DeprecatedPinWatches: EdGraphPin_Deprecated[];
@@ -3784,8 +4318,16 @@ declare class Blueprint extends BlueprintCore {
 	static GetDefaultObject(): Blueprint;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Blueprint;
 	static C(Other: UObject | any): Blueprint;
+	AddComponentsToBlueprint(Components: ActorComponent[],bHarvesting: boolean,OptionalNewRootComponent: ActorComponent,bKeepMobility: boolean): void;
+	CompileBlueprint(): void;
+	GetParentClassOfBlueprint(): UnrealEngineClass;
+	RemoveComponentFromBlueprint(RemoveComponent: ActorComponent,bPromoteChildren: boolean): void;
 	GetBlueprintGeneratedClass(): UnrealEngineClass;
 	CreateSaveGameObjectFromBlueprint(): SaveGame;
+	static AddComponentsToBlueprint(Blueprint: Blueprint,Components: ActorComponent[],bHarvesting: boolean,OptionalNewRootComponent: ActorComponent,bKeepMobility: boolean): void;
+	static CompileBlueprint(Blueprint: Blueprint): void;
+	static GetParentClassOfBlueprint(Blueprint: Blueprint): UnrealEngineClass;
+	static RemoveComponentFromBlueprint(Blueprint: Blueprint,RemoveComponent: ActorComponent,bPromoteChildren: boolean): void;
 	static GetBlueprintGeneratedClass(Blueprint: Blueprint): UnrealEngineClass;
 	static CreateSaveGameObjectFromBlueprint(SaveGameBlueprint: Blueprint): SaveGame;
 }
@@ -3798,13 +4340,17 @@ declare class SkeletalMesh extends UObject {
 	NegativeBoundsExtension: Vector;
 	Materials: SkeletalMaterial[];
 	SkelMirrorTable: BoneMirrorInfo[];
+	LODInfo: SkeletalMeshLODInfo[];
+	MinLOD: PerPlatformInt;
+	LODSettings: SkeletalMeshLODSettings;
 	SkelMirrorAxis: EAxis;
 	SkelMirrorFlipAxis: EAxis;
-	LODInfo: SkeletalMeshLODInfo[];
 	bUseFullPrecisionUVs: boolean;
+	bUseHighPrecisionTangentBasis: boolean;
 	bHasBeenSimplified: boolean;
 	bHasVertexColors: boolean;
 	bEnablePerPolyCollision: boolean;
+	VertexColorGuid: Guid;
 	BodySetup: BodySetup;
 	PhysicsAsset: PhysicsAsset;
 	ShadowPhysicsAsset: PhysicsAsset;
@@ -3818,26 +4364,24 @@ declare class SkeletalMesh extends UObject {
 	DefaultEditorCameraRotation: Rotator;
 	DefaultEditorCameraLookAt: Vector;
 	DefaultEditorCameraOrthoZoom: number;
-	OptimizationSettings: SkeletalMeshOptimizationSettings[];
 	PreviewAttachedAssetContainer: PreviewAssetAttachContainer;
 	MorphTargets: MorphTarget[];
-	SelectedEditorSection: number;
-	SelectedEditorMaterial: number;
-	SelectedClothingSection: number;
 	FloorOffset: number;
 	RetargetBasePose: Transform[];
 	ClothingAssets: ClothingAssetData_Legacy[];
 	PostProcessAnimBlueprint: UnrealEngineClass;
 	MeshClothingAssets: ClothingAssetBase[];
+	SamplingInfo: SkeletalMeshSamplingInfo;
 	AssetUserData: AssetUserData[];
 	Sockets: SkeletalMeshSocket[];
 	static Load(ResourceName: string): SkeletalMesh;
 	static Find(Outer: UObject, ResourceName: string): SkeletalMesh;
 	static GetDefaultObject(): SkeletalMesh;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMesh;
+	SetLODSettings(InLODSettings: SkeletalMeshLODSettings): void;
 	NumSockets(): number;
 	IsSectionUsingCloth(InSectionIndex: number,bCheckCorrespondingSections: boolean): boolean;
-	GetSocketByIndex(Index: number): SkeletalMeshSocket;
+	GetSocketByIndex(index: number): SkeletalMeshSocket;
 	GetNodeMappingContainer(SourceAsset: Blueprint): NodeMappingContainer;
 	GetImportedBounds(): BoxSphereBounds;
 	GetBounds(): BoxSphereBounds;
@@ -3852,8 +4396,8 @@ declare class SkelMeshComponentLODInfo {
 	static C(Other: UObject | any): SkelMeshComponentLODInfo;
 }
 
-declare type EMeshComponentUpdateFlag = 'AlwaysTickPoseAndRefreshBones' | 'AlwaysTickPose' | 'OnlyTickPoseWhenRendered';
-declare var EMeshComponentUpdateFlag : { AlwaysTickPoseAndRefreshBones:'AlwaysTickPoseAndRefreshBones',AlwaysTickPose:'AlwaysTickPose',OnlyTickPoseWhenRendered:'OnlyTickPoseWhenRendered', };
+declare type EVisibilityBasedAnimTickOption = 'AlwaysTickPoseAndRefreshBones' | 'AlwaysTickPose' | 'OnlyTickMontagesWhenNotRendered' | 'OnlyTickPoseWhenRendered' | 'EVisibilityBasedAnimTickOption_MAX';
+declare var EVisibilityBasedAnimTickOption : { AlwaysTickPoseAndRefreshBones:'AlwaysTickPoseAndRefreshBones',AlwaysTickPose:'AlwaysTickPose',OnlyTickMontagesWhenNotRendered:'OnlyTickMontagesWhenNotRendered',OnlyTickPoseWhenRendered:'OnlyTickPoseWhenRendered',EVisibilityBasedAnimTickOption_MAX:'EVisibilityBasedAnimTickOption_MAX', };
 declare class SkelMeshSkinWeightInfo { 
 	Bones: number;
 	Weights: number;
@@ -3864,21 +4408,20 @@ declare class SkelMeshSkinWeightInfo {
 	static MakeSkinWeightInfo(Bone0: number,Weight0: number,Bone1: number,Weight1: number,Bone2: number,Weight2: number,Bone3: number,Weight3: number): SkelMeshSkinWeightInfo;
 }
 
-declare type EPhysBodyOp = 'PBO_None' | 'PBO_Term';
-declare var EPhysBodyOp : { PBO_None:'PBO_None',PBO_Term:'PBO_Term', };
+declare type EPhysBodyOp = 'PBO_None' | 'PBO_Term' | 'PBO_MAX';
+declare var EPhysBodyOp : { PBO_None:'PBO_None',PBO_Term:'PBO_Term',PBO_MAX:'PBO_MAX', };
 declare class SkinnedMeshComponent extends MeshComponent { 
 	SkeletalMesh: SkeletalMesh;
 	MasterPoseComponent: any;
-	bUseBoundsFromMasterPoseComponent: boolean;
-	ChunkIndexPreview: number;
-	SectionIndexPreview: number;
-	MaterialIndexPreview: number;
+	WireframeColor: Color;
 	PhysicsAssetOverride: PhysicsAsset;
 	ForcedLodModel: number;
 	MinLodModel: number;
-	LODInfo: SkelMeshComponentLODInfo[];
 	StreamingDistanceMultiplier: number;
-	WireframeColor: Color;
+	LODInfo: SkelMeshComponentLODInfo[];
+	VisibilityBasedAnimTickOption: EVisibilityBasedAnimTickOption;
+	bOverrideMinLOD: boolean;
+	bUseBoundsFromMasterPoseComponent: boolean;
 	bForceWireframe: boolean;
 	bDisplayBones: boolean;
 	bDisableMorphTarget: boolean;
@@ -3886,20 +4429,19 @@ declare class SkinnedMeshComponent extends MeshComponent {
 	bPerBoneMotionBlur: boolean;
 	bComponentUseFixedSkelBounds: boolean;
 	bConsiderAllBodiesForBounds: boolean;
-	MeshComponentUpdateFlag: EMeshComponentUpdateFlag;
-	bForceMeshObjectUpdate: boolean;
+	bSyncAttachParentLOD: boolean;
 	bCanHighlightSelectedSections: boolean;
 	bRecentlyRendered: boolean;
-	ProgressiveDrawingFraction: number;
-	CustomSortAlternateIndexMode: number;
 	bCastCapsuleDirectShadow: boolean;
 	bCastCapsuleIndirectShadow: boolean;
-	CapsuleIndirectShadowMinVisibility: number;
 	bCPUSkinning: boolean;
-	CachedLocalBounds: BoxSphereBounds;
-	bCachedLocalBoundsUpToDate: boolean;
 	bEnableUpdateRateOptimizations: boolean;
 	bDisplayDebugUpdateRateOptimizations: boolean;
+	bRenderStatic: boolean;
+	bCachedLocalBoundsUpToDate: boolean;
+	bForceMeshObjectUpdate: boolean;
+	CapsuleIndirectShadowMinVisibility: number;
+	CachedLocalBounds: BoxSphereBounds;
 	static Load(ResourceName: string): SkinnedMeshComponent;
 	static Find(Outer: UObject, ResourceName: string): SkinnedMeshComponent;
 	static GetDefaultObject(): SkinnedMeshComponent;
@@ -3907,21 +4449,28 @@ declare class SkinnedMeshComponent extends MeshComponent {
 	UnHideBoneByName(BoneName: string): void;
 	TransformToBoneSpace(BoneName: string,InPosition: Vector,InRotation: Rotator,OutPosition?: Vector,OutRotation?: Rotator): {OutPosition: Vector, OutRotation: Rotator};
 	TransformFromBoneSpace(BoneName: string,InPosition: Vector,InRotation: Rotator,OutPosition?: Vector,OutRotation?: Rotator): {OutPosition: Vector, OutRotation: Rotator};
+	ShowMaterialSection(MaterialID: number,bShow: boolean,LODIndex: number): void;
+	ShowAllMaterialSections(LODIndex: number): void;
 	SetVertexColorOverride_LinearColor(LODIndex: number,VertexColors: LinearColor[]): void;
 	SetSkinWeightOverride(LODIndex: number,SkinWeights: SkelMeshSkinWeightInfo[]): void;
 	SetSkeletalMesh(NewMesh: SkeletalMesh,bReinitPose: boolean): void;
+	SetRenderStatic(bNewValue: boolean): void;
 	SetPhysicsAsset(NewPhysicsAsset: PhysicsAsset,bForceReInit: boolean): void;
 	SetMinLOD(InNewMinLOD: number): void;
-	SetMasterPoseComponent(NewMasterBoneComponent: SkinnedMeshComponent): void;
+	SetMasterPoseComponent(NewMasterBoneComponent: SkinnedMeshComponent,bForceUpdate: boolean): void;
 	SetForcedLOD(InNewForcedLOD: number): void;
 	SetCastCapsuleIndirectShadow(bNewValue: boolean): void;
 	SetCastCapsuleDirectShadow(bNewValue: boolean): void;
 	SetCapsuleIndirectShadowMinVisibility(NewValue: number): void;
+	IsMaterialSectionShown(MaterialID: number,LODIndex: number): boolean;
 	IsBoneHiddenByName(BoneName: string): boolean;
 	HideBoneByName(BoneName: string,PhysBodyOption: EPhysBodyOp): void;
 	GetSocketBoneName(InSocketName: string): string;
+	GetRefPosePosition(BoneIndex: number): Vector;
 	GetParentBone(BoneName: string): string;
+	GetNumLODs(): number;
 	GetNumBones(): number;
+	GetDeltaTransformFromRefPose(BoneName: string,BaseName: string): Transform;
 	GetBoneName(BoneIndex: number): string;
 	GetBoneIndex(BoneName: string): number;
 	FindClosestBone_K2(TestLocation: Vector,BoneLocation?: Vector,IgnoreScale?: number,bRequirePhysicsAsset?: boolean): {BoneLocation: Vector, $: string};
@@ -3931,8 +4480,6 @@ declare class SkinnedMeshComponent extends MeshComponent {
 	static C(Other: UObject | any): SkinnedMeshComponent;
 }
 
-declare type EAnimationMode = 'AnimationBlueprint' | 'AnimationSingleNode' | 'AnimationCustomMode';
-declare var EAnimationMode : { AnimationBlueprint:'AnimationBlueprint',AnimationSingleNode:'AnimationSingleNode',AnimationCustomMode:'AnimationCustomMode', };
 declare class AnimGroupInfo { 
 	Name: string;
 	Color: LinearColor;
@@ -3964,7 +4511,7 @@ declare class AnimBlueprint extends Blueprint {
 	bWarnAboutBlueprintUsage: boolean;
 	ParentAssetOverrides: AnimParentNodeAssetOverride[];
 	PoseWatches: PoseWatch[];
-	PreviewSkeletalMesh: any;
+	PreviewSkeletalMesh: SkeletalMesh;
 	static Load(ResourceName: string): AnimBlueprint;
 	static Find(Outer: UObject, ResourceName: string): AnimBlueprint;
 	static GetDefaultObject(): AnimBlueprint;
@@ -3982,12 +4529,14 @@ declare class SingleAnimationPlayData {
 	static C(Other: UObject | any): SingleAnimationPlayData;
 }
 
-declare type EDynamicActorScene = 'Default' | 'UseSyncScene' | 'UseAsyncScene';
-declare var EDynamicActorScene : { Default:'Default',UseSyncScene:'UseSyncScene',UseAsyncScene:'UseAsyncScene', };
-declare type EKinematicBonesUpdateToPhysics = 'SkipSimulatingBones' | 'SkipAllBones';
-declare var EKinematicBonesUpdateToPhysics : { SkipSimulatingBones:'SkipSimulatingBones',SkipAllBones:'SkipAllBones', };
-declare type EPhysicsTransformUpdateMode = 'SimulationUpatesComponentTransform' | 'ComponentTransformIsKinematic';
-declare var EPhysicsTransformUpdateMode : { SimulationUpatesComponentTransform:'SimulationUpatesComponentTransform',ComponentTransformIsKinematic:'ComponentTransformIsKinematic', };
+declare type EDynamicActorScene = 'Default' | 'UseSyncScene' | 'UseAsyncScene' | 'EDynamicActorScene_MAX';
+declare var EDynamicActorScene : { Default:'Default',UseSyncScene:'UseSyncScene',UseAsyncScene:'UseAsyncScene',EDynamicActorScene_MAX:'EDynamicActorScene_MAX', };
+declare type EKinematicBonesUpdateToPhysics = 'SkipSimulatingBones' | 'SkipAllBones' | 'EKinematicBonesUpdateToPhysics_MAX';
+declare var EKinematicBonesUpdateToPhysics : { SkipSimulatingBones:'SkipSimulatingBones',SkipAllBones:'SkipAllBones',EKinematicBonesUpdateToPhysics_MAX:'EKinematicBonesUpdateToPhysics_MAX', };
+declare type EPhysicsTransformUpdateMode = 'SimulationUpatesComponentTransform' | 'ComponentTransformIsKinematic' | 'EPhysicsTransformUpdateMode_MAX';
+declare var EPhysicsTransformUpdateMode : { SimulationUpatesComponentTransform:'SimulationUpatesComponentTransform',ComponentTransformIsKinematic:'ComponentTransformIsKinematic',EPhysicsTransformUpdateMode_MAX:'EPhysicsTransformUpdateMode_MAX', };
+declare type EAnimationMode = 'AnimationBlueprint' | 'AnimationSingleNode' | 'AnimationCustomMode' | 'EAnimationMode_MAX';
+declare var EAnimationMode : { AnimationBlueprint:'AnimationBlueprint',AnimationSingleNode:'AnimationSingleNode',AnimationCustomMode:'AnimationCustomMode',EAnimationMode_MAX:'EAnimationMode_MAX', };
 declare class ClothingSimulationFactory extends UObject { 
 	static Load(ResourceName: string): ClothingSimulationFactory;
 	static Find(Outer: UObject, ResourceName: string): ClothingSimulationFactory;
@@ -3996,8 +4545,19 @@ declare class ClothingSimulationFactory extends UObject {
 	static C(Other: UObject | any): ClothingSimulationFactory;
 }
 
+declare class ClothingSimulationInteractor extends UObject { 
+	static Load(ResourceName: string): ClothingSimulationInteractor;
+	static Find(Outer: UObject, ResourceName: string): ClothingSimulationInteractor;
+	static GetDefaultObject(): ClothingSimulationInteractor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClothingSimulationInteractor;
+	PhysicsAssetUpdated(): void;
+	ClothConfigUpdated(): void;
+	static C(Other: UObject | any): ClothingSimulationInteractor;
+}
+
+declare type ERelativeTransformSpace = 'RTS_World' | 'RTS_Actor' | 'RTS_Component' | 'RTS_ParentBoneSpace' | 'RTS_MAX';
+declare var ERelativeTransformSpace : { RTS_World:'RTS_World',RTS_Actor:'RTS_Actor',RTS_Component:'RTS_Component',RTS_ParentBoneSpace:'RTS_ParentBoneSpace',RTS_MAX:'RTS_MAX', };
 declare class SkeletalMeshComponent extends SkinnedMeshComponent { 
-	AnimationMode: EAnimationMode;
 	AnimationBlueprint: AnimBlueprint;
 	AnimBlueprintGeneratedClass: UnrealEngineClass;
 	AnimClass: UnrealEngineClass;
@@ -4005,47 +4565,64 @@ declare class SkeletalMeshComponent extends SkinnedMeshComponent {
 	SubInstances: AnimInstance[];
 	PostProcessAnimInstance: AnimInstance;
 	AnimationData: SingleAnimationPlayData;
+	RootBoneTranslation: Vector;
+	LineCheckBoundsScale: Vector;
 	CachedBoneSpaceTransforms: Transform[];
 	CachedComponentSpaceTransforms: Transform[];
 	GlobalAnimRateScale: number;
-	UseAsyncScene: UseAsyncScene;
-	bHasValidBodies: boolean;
+	UseAsyncScene: EDynamicActorScene;
 	KinematicBonesUpdateType: EKinematicBonesUpdateToPhysics;
 	PhysicsTransformUpdateMode: EPhysicsTransformUpdateMode;
+	AnimationMode: EAnimationMode;
+	bDisablePostProcessBlueprint: boolean;
+	bUpdateOverlapsOnAnimationFinalize: boolean;
+	bHasValidBodies: boolean;
 	bBlendPhysics: boolean;
 	bEnablePhysicsOnDedicatedServer: boolean;
 	bUpdateJointsFromAnimation: boolean;
 	bDisableClothSimulation: boolean;
+	bAllowAnimCurveEvaluation: boolean;
 	bDisableAnimCurves: boolean;
 	bCollideWithEnvironment: boolean;
 	bCollideWithAttachedChildren: boolean;
 	bLocalSpaceSimulation: boolean;
-	bClothMorphTarget: boolean;
 	bResetAfterTeleport: boolean;
-	ClothBlendWeight: number;
-	RootBoneTranslation: Vector;
-	bDeferMovementFromSceneQueries: boolean;
 	bNoSkeletonUpdate: boolean;
 	bPauseAnims: boolean;
 	bUseRefPoseOnInitAnim: boolean;
 	bEnablePerPolyCollision: boolean;
-	BodySetup: BodySetup;
+	bForceRefpose: boolean;
 	bOnlyAllowAutonomousTickPose: boolean;
 	bIsAutonomousTickPose: boolean;
-	bForceRefpose: boolean;
 	bOldForceRefPose: boolean;
 	bShowPrePhysBones: boolean;
 	bRequiredBonesUpToDate: boolean;
 	bAnimTreeInitialised: boolean;
 	bIncludeComponentLocationIntoBounds: boolean;
 	bEnableLineCheckWithBounds: boolean;
+	bUseBendingElements: boolean;
+	bUseTetrahedralConstraints: boolean;
+	bUseThinShellVolumeConstraints: boolean;
+	bUseSelfCollisions: boolean;
+	bUseContinuousCollisionDetection: boolean;
 	bUpdateAnimationInEditor: boolean;
+	bNeedsQueuedAnimEventsDispatched: boolean;
 	CachedAnimCurveUidVersion: any;
-	LineCheckBoundsScale: Vector;
+	ClothBlendWeight: number;
+	EdgeStiffness: number;
+	BendingStiffness: number;
+	AreaStiffness: number;
+	VolumeStiffness: number;
+	StrainLimitingStiffness: number;
+	ShapeTargetStiffness: number;
+	DisallowedAnimCurves: string[];
+	BodySetup: BodySetup;
 	OnConstraintBroken: UnrealEngineMulticastDelegate<(ConstraintIndex: number) => void>;
 	ClothingSimulationFactory: UnrealEngineClass;
 	TeleportDistanceThreshold: number;
 	TeleportRotationThreshold: number;
+	LastPoseTickFrame: any;
+	ClothingInteractor: ClothingSimulationInteractor;
 	OnAnimInitialized: UnrealEngineMulticastDelegate<() => void>;
 	SequenceToPlay: AnimSequence;
 	AnimToPlay: AnimationAsset;
@@ -4053,14 +4630,13 @@ declare class SkeletalMeshComponent extends SkinnedMeshComponent {
 	bDefaultPlaying: boolean;
 	DefaultPosition: number;
 	DefaultPlayRate: number;
-	LastPoseTickFrame: any;
-	LastPoseTickTime: number;
-	bNeedsQueuedAnimEventsDispatched: boolean;
 	static Load(ResourceName: string): SkeletalMeshComponent;
 	static Find(Outer: UObject, ResourceName: string): SkeletalMeshComponent;
 	static GetDefaultObject(): SkeletalMeshComponent;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshComponent;
 	UnbindClothFromMasterPoseComponent(bRestoreSimulationSpace: boolean): void;
+	ToggleDisablePostProcessBlueprint(): void;
+	TermBodiesBelow(ParentBoneName: string): void;
 	SuspendClothingSimulation(): void;
 	Stop(): void;
 	SnapshotPose(Snapshot?: PoseSnapshot): {Snapshot: PoseSnapshot};
@@ -4075,15 +4651,17 @@ declare class SkeletalMeshComponent extends SkinnedMeshComponent {
 	SetEnablePhysicsBlending(bNewBlendPhysics: boolean): void;
 	SetEnableGravityOnAllBodiesBelow(bEnableGravity: boolean,BoneName: string,bIncludeSelf: boolean): void;
 	SetEnableBodyGravity(bEnableGravity: boolean,BoneName: string): void;
+	SetDisablePostProcessBlueprint(bInDisablePostProcess: boolean): void;
 	SetDisableAnimCurves(bInDisableAnimCurves: boolean): void;
 	SetConstraintProfileForAll(ProfileName: string,bDefaultIfNotFound: boolean): void;
 	SetConstraintProfile(JointName: string,ProfileName: string,bDefaultIfNotFound: boolean): void;
 	SetClothMaxDistanceScale(Scale: number): void;
 	SetBodyNotifyRigidBodyCollision(bNewNotifyRigidBodyCollision: boolean,BoneName: string): void;
-	SetAnimInstanceClass(NewClass: UnrealEngineClass): void;
 	SetAnimationMode(InAnimationMode: EAnimationMode): void;
 	SetAnimation(NewAnimToPlay: AnimationAsset): void;
 	SetAngularLimits(InBoneName: string,Swing1LimitAngle: number,TwistLimitAngle: number,Swing2LimitAngle: number): void;
+	SetAllowedAnimCurvesEvaluation(List: string[],bAllow: boolean): void;
+	SetAllowAnimCurveEvaluation(bInAllow: boolean): void;
 	SetAllMotorsAngularVelocityDrive(bEnableSwingDrive: boolean,bEnableTwistDrive: boolean,bSkipCustomPhysicsType: boolean): void;
 	SetAllMotorsAngularPositionDrive(bEnableSwingDrive: boolean,bEnableTwistDrive: boolean,bSkipCustomPhysicsType: boolean): void;
 	SetAllMotorsAngularDriveParams(InSpring: number,InDamping: number,InForceLimit: number,bSkipCustomPhysicsType: boolean): void;
@@ -4093,80 +4671,69 @@ declare class SkeletalMeshComponent extends SkinnedMeshComponent {
 	SetAllBodiesBelowPhysicsBlendWeight(InBoneName: string,PhysicsBlendWeight: number,bSkipCustomPhysicsType: boolean,bIncludeSelf: boolean): void;
 	ResumeClothingSimulation(): void;
 	ResetClothTeleportMode(): void;
+	ResetAnimInstanceDynamics(InTeleportType: ETeleportType): void;
+	ResetAllowedAnimCurveEvaluation(): void;
 	ResetAllBodiesSimulatePhysics(): void;
 	PlayAnimation(NewAnimToPlay: AnimationAsset,bLooping: boolean): void;
 	Play(bLooping: boolean): void;
 	OverrideAnimationData(InAnimToPlay: AnimationAsset,bIsLooping: boolean,bIsPlaying: boolean,Position: number,PlayRate: number): void;
+	K2_SetAnimInstanceClass(NewClass: UnrealEngineClass): void;
 	K2_GetClosestPointOnPhysicsAsset(WorldPosition: Vector,ClosestWorldPosition?: Vector,Normal?: Vector,BoneName?: string,Distance?: number): {ClosestWorldPosition: Vector, Normal: Vector, BoneName: string, Distance: number, $: boolean};
 	IsPlaying(): boolean;
 	IsClothingSimulationSuspended(): boolean;
 	IsBodyGravityEnabled(BoneName: string): boolean;
+	HasValidAnimationInstance(): boolean;
 	GetTeleportRotationThreshold(): number;
 	GetTeleportDistanceThreshold(): number;
+	GetSubInstanceByName(InName: string): AnimInstance;
 	GetSkeletalCenterOfMass(): Vector;
 	GetPostProcessInstance(): AnimInstance;
 	GetPosition(): number;
 	GetPlayRate(): number;
 	GetMorphTarget(MorphTargetName: string): number;
+	GetDisablePostProcessBlueprint(): boolean;
 	GetDisableAnimCurves(): boolean;
 	GetCurrentJointAngles(InBoneName: string,Swing1Angle?: number,TwistAngle?: number,Swing2Angle?: number): {Swing1Angle: number, TwistAngle: number, Swing2Angle: number};
 	GetClothMaxDistanceScale(): number;
+	GetClothingSimulationInteractor(): ClothingSimulationInteractor;
 	GetBoneMass(BoneName: string,bScaleMass: boolean): number;
 	GetAnimInstance(): AnimInstance;
 	GetAnimationMode(): EAnimationMode;
+	GetAllowedAnimCurveEvaluate(): boolean;
 	ForceClothNextUpdateTeleportAndReset(): void;
 	ForceClothNextUpdateTeleport(): void;
 	FindConstraintBoneName(ConstraintIndex: number): string;
 	ClearMorphTargets(): void;
 	BreakConstraint(Impulse: Vector,HitLocation: Vector,InBoneName: string): void;
 	BindClothToMasterPoseComponent(): void;
+	AllowAnimCurveEvaluation(NameOfCurve: string,bAllow: boolean): void;
 	AddImpulseToAllBodiesBelow(Impulse: Vector,BoneName: string,bVelChange: boolean,bIncludeSelf: boolean): void;
 	AddForceToAllBodiesBelow(Force: Vector,BoneName: string,bAccelChange: boolean,bIncludeSelf: boolean): void;
 	AccumulateAllBodiesBelowPhysicsBlendWeight(InBoneName: string,AddPhysicsBlendWeight: number,bSkipCustomPhysicsType: boolean): void;
 	static C(Other: UObject | any): SkeletalMeshComponent;
+	K2_DirectionBetweenSockets(SocketOrBoneNameFrom: string,SocketOrBoneNameTo: string): Vector;
+	K2_DistanceBetweenTwoSocketsAndMapRange(SocketOrBoneNameA: string,SocketSpaceA: ERelativeTransformSpace,SocketOrBoneNameB: string,SocketSpaceB: ERelativeTransformSpace,bRemapRange: boolean,InRangeMin: number,InRangeMax: number,OutRangeMin: number,OutRangeMax: number): number;
+	static K2_DirectionBetweenSockets(Component: SkeletalMeshComponent,SocketOrBoneNameFrom: string,SocketOrBoneNameTo: string): Vector;
+	static K2_DistanceBetweenTwoSocketsAndMapRange(Component: SkeletalMeshComponent,SocketOrBoneNameA: string,SocketSpaceA: ERelativeTransformSpace,SocketOrBoneNameB: string,SocketSpaceB: ERelativeTransformSpace,bRemapRange: boolean,InRangeMin: number,InRangeMax: number,OutRangeMin: number,OutRangeMax: number): number;
 }
 
-declare class SpriteCategoryInfo { 
-	Category: string;
-	DisplayName: string;
-	Description: string;
-	clone() : SpriteCategoryInfo;
-	static C(Other: UObject | any): SpriteCategoryInfo;
-}
-
-declare class ArrowComponent extends PrimitiveComponent { 
-	ArrowColor: Color;
-	ArrowSize: number;
-	bIsScreenSizeScaled: boolean;
-	ScreenSize: number;
-	bTreatAsASprite: boolean;
-	SpriteCategoryName: string;
-	SpriteInfo: SpriteCategoryInfo;
-	bLightAttachment: boolean;
-	bUseInEditorScaling: boolean;
-	static Load(ResourceName: string): ArrowComponent;
-	static Find(Outer: UObject, ResourceName: string): ArrowComponent;
-	static GetDefaultObject(): ArrowComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ArrowComponent;
-	SetArrowColor(NewColor: LinearColor): void;
-	static C(Other: UObject | any): ArrowComponent;
-}
-
-declare type EPlaneConstraintAxisSetting = 'Custom' | 'X' | 'Y' | 'Z' | 'UseGlobalPhysicsSetting';
-declare var EPlaneConstraintAxisSetting : { Custom:'Custom',X:'X',Y:'Y',Z:'Z',UseGlobalPhysicsSetting:'UseGlobalPhysicsSetting', };
+declare type EPlaneConstraintAxisSetting = 'Custom' | 'X' | 'Y' | 'Z' | 'UseGlobalPhysicsSetting' | 'EPlaneConstraintAxisSetting_MAX';
+declare var EPlaneConstraintAxisSetting : { Custom:'Custom',X:'X',Y:'Y',Z:'Z',UseGlobalPhysicsSetting:'UseGlobalPhysicsSetting',EPlaneConstraintAxisSetting_MAX:'EPlaneConstraintAxisSetting_MAX', };
 declare class MovementComponent extends ActorComponent { 
 	UpdatedComponent: SceneComponent;
 	UpdatedPrimitive: PrimitiveComponent;
 	Velocity: Vector;
-	bConstrainToPlane: boolean;
-	bSnapToPlaneAtStart: boolean;
-	PlaneConstraintAxisSetting: PlaneConstraintAxisSetting;
 	PlaneConstraintNormal: Vector;
 	PlaneConstraintOrigin: Vector;
 	bUpdateOnlyIfRendered: boolean;
 	bAutoUpdateTickRegistration: boolean;
 	bTickBeforeOwner: boolean;
 	bAutoRegisterUpdatedComponent: boolean;
+	bConstrainToPlane: boolean;
+	bSnapToPlaneAtStart: boolean;
+	bAutoRegisterPhysicsVolumeUpdates: boolean;
+	bComponentShouldUpdatePhysicsVolume: boolean;
+	PlaneConstraintAxisSetting: EPlaneConstraintAxisSetting;
 	static Load(ResourceName: string): MovementComponent;
 	static Find(Outer: UObject, ResourceName: string): MovementComponent;
 	static GetDefaultObject(): MovementComponent;
@@ -4178,7 +4745,7 @@ declare class MovementComponent extends ActorComponent {
 	SetPlaneConstraintNormal(PlaneNormal: Vector): void;
 	SetPlaneConstraintFromVectors(Forward: Vector,Up: Vector): void;
 	SetPlaneConstraintEnabled(bEnabled: boolean): void;
-	SetPlaneConstraintAxisSetting(NewAxisSetting: NewAxisSetting): void;
+	SetPlaneConstraintAxisSetting(NewAxisSetting: EPlaneConstraintAxisSetting): void;
 	PhysicsVolumeChanged(NewVolume: PhysicsVolume): void;
 	K2_MoveUpdatedComponent(Delta: Vector,NewRotation: Rotator,OutHit?: HitResult,bSweep?: boolean,bTeleport?: boolean): {OutHit: HitResult, $: boolean};
 	K2_GetModifiedMaxSpeed(): number;
@@ -4186,7 +4753,7 @@ declare class MovementComponent extends ActorComponent {
 	IsExceedingMaxSpeed(MaxSpeed: number): boolean;
 	GetPlaneConstraintOrigin(): Vector;
 	GetPlaneConstraintNormal(): Vector;
-	GetPlaneConstraintAxisSetting(): ReturnValue;
+	GetPlaneConstraintAxisSetting(): EPlaneConstraintAxisSetting;
 	GetPhysicsVolume(): PhysicsVolume;
 	GetMaxSpeed(): number;
 	GetGravityZ(): number;
@@ -4206,49 +4773,12 @@ declare class MovementProperties {
 	static C(Other: UObject | any): MovementProperties;
 }
 
-declare class NavDataConfig extends NavAgentProperties { 
-	Name: string;
-	Color: Color;
-	DefaultQueryExtent: Vector;
-	NavigationDataClass: UnrealEngineClass;
-	NavigationDataClassName: StringClassReference;
-	clone() : NavDataConfig;
-	static C(Other: UObject | any): NavDataConfig;
-}
-
-declare type ERuntimeGenerationType = 'Static' | 'DynamicModifiersOnly' | 'Dynamic' | 'LegacyGeneration';
-declare var ERuntimeGenerationType : { Static:'Static',DynamicModifiersOnly:'DynamicModifiersOnly',Dynamic:'Dynamic',LegacyGeneration:'LegacyGeneration', };
-declare class SupportedAreaData { 
-	AreaClassName: string;
-	AreaID: number;
-	AreaClass: UnrealEngineClass;
-	clone() : SupportedAreaData;
-	static C(Other: UObject | any): SupportedAreaData;
-}
-
-declare class NavigationData extends Actor { 
-	RenderingComp: PrimitiveComponent;
-	NavDataConfig: NavDataConfig;
-	bEnableDrawing: boolean;
-	bForceRebuildOnLoad: boolean;
-	bCanBeMainNavData: boolean;
-	bCanSpawnOnRebuild: boolean;
-	bRebuildAtRuntime: boolean;
-	RuntimeGeneration: RuntimeGeneration;
-	ObservedPathsTickInterval: number;
-	DataVersion: any;
-	SupportedAreas: SupportedAreaData[];
-	static GetDefaultObject(): NavigationData;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationData;
-	static C(Other: UObject | any): NavigationData;
-}
-
 declare class NavAgentProperties extends MovementProperties { 
 	AgentRadius: number;
 	AgentHeight: number;
 	AgentStepHeight: number;
 	NavWalkingSearchHeightScale: number;
-	PreferredNavData: UnrealEngineClass;
+	PreferredNavData: SoftClassPath;
 	clone() : NavAgentProperties;
 	static C(Other: UObject | any): NavAgentProperties;
 }
@@ -4260,6 +4790,7 @@ declare class NavMovementComponent extends MovementComponent {
 	bUseAccelerationForPaths: boolean;
 	bUseFixedBrakingDistanceForPaths: boolean;
 	MovementState: MovementProperties;
+	PathFollowingComp: UObject;
 	static Load(ResourceName: string): NavMovementComponent;
 	static Find(Outer: UObject, ResourceName: string): NavMovementComponent;
 	static GetDefaultObject(): NavMovementComponent;
@@ -4290,10 +4821,10 @@ declare class PawnMovementComponent extends NavMovementComponent {
 	static C(Other: UObject | any): PawnMovementComponent;
 }
 
-declare type EMovementMode = 'MOVE_None' | 'MOVE_Walking' | 'MOVE_NavWalking' | 'MOVE_Falling' | 'MOVE_Swimming' | 'MOVE_Flying' | 'MOVE_Custom';
-declare var EMovementMode : { MOVE_None:'MOVE_None',MOVE_Walking:'MOVE_Walking',MOVE_NavWalking:'MOVE_NavWalking',MOVE_Falling:'MOVE_Falling',MOVE_Swimming:'MOVE_Swimming',MOVE_Flying:'MOVE_Flying',MOVE_Custom:'MOVE_Custom', };
-declare type ENetworkSmoothingMode = 'Disabled' | 'Linear' | 'Exponential' | 'Replay';
-declare var ENetworkSmoothingMode : { Disabled:'Disabled',Linear:'Linear',Exponential:'Exponential',Replay:'Replay', };
+declare type EMovementMode = 'MOVE_None' | 'MOVE_Walking' | 'MOVE_NavWalking' | 'MOVE_Falling' | 'MOVE_Swimming' | 'MOVE_Flying' | 'MOVE_Custom' | 'MOVE_MAX';
+declare var EMovementMode : { MOVE_None:'MOVE_None',MOVE_Walking:'MOVE_Walking',MOVE_NavWalking:'MOVE_NavWalking',MOVE_Falling:'MOVE_Falling',MOVE_Swimming:'MOVE_Swimming',MOVE_Flying:'MOVE_Flying',MOVE_Custom:'MOVE_Custom',MOVE_MAX:'MOVE_MAX', };
+declare type ENetworkSmoothingMode = 'Disabled' | 'Linear' | 'Exponential' | 'Replay' | 'ENetworkSmoothingMode_MAX';
+declare var ENetworkSmoothingMode : { Disabled:'Disabled',Linear:'Linear',Exponential:'Exponential',Replay:'Replay',ENetworkSmoothingMode_MAX:'ENetworkSmoothingMode_MAX', };
 declare class FindFloorResult { 
 	bBlockingHit: boolean;
 	bWalkableFloor: boolean;
@@ -4347,23 +4878,23 @@ declare class CharacterMovementComponentPostPhysicsTickFunction extends TickFunc
 	static C(Other: UObject | any): CharacterMovementComponentPostPhysicsTickFunction;
 }
 
-declare class Vector_NetQuantize10 extends Vector { 
-	clone() : Vector_NetQuantize10;
-	static C(Other: UObject | any): Vector_NetQuantize10;
-}
-
 declare class RootMotionSourceSettings { 
 	Flags: number;
 	clone() : RootMotionSourceSettings;
 	static C(Other: UObject | any): RootMotionSourceSettings;
 }
 
+declare class Vector_NetQuantize10 extends Vector { 
+	clone() : Vector_NetQuantize10;
+	static C(Other: UObject | any): Vector_NetQuantize10;
+}
+
 declare class RootMotionSourceGroup { 
 	bHasAdditiveSources: boolean;
 	bHasOverrideSources: boolean;
-	LastPreAdditiveVelocity: Vector_NetQuantize10;
 	bIsAdditiveVelocityApplied: boolean;
 	LastAccumulatedSettings: RootMotionSourceSettings;
+	LastPreAdditiveVelocity: Vector_NetQuantize10;
 	clone() : RootMotionSourceGroup;
 	static C(Other: UObject | any): RootMotionSourceGroup;
 }
@@ -4378,7 +4909,6 @@ declare class RootMotionMovementParams {
 
 declare class CharacterMovementComponent extends PawnMovementComponent { 
 	CharacterOwner: Character;
-	bApplyGravityWhileJumping: boolean;
 	GravityScale: number;
 	MaxStepHeight: number;
 	JumpZVelocity: number;
@@ -4387,6 +4917,7 @@ declare class CharacterMovementComponent extends PawnMovementComponent {
 	WalkableFloorZ: number;
 	MovementMode: EMovementMode;
 	CustomMovementMode: number;
+	NetworkSmoothingMode: ENetworkSmoothingMode;
 	GroundFriction: number;
 	MaxWalkSpeed: number;
 	MaxWalkSpeedCrouched: number;
@@ -4397,7 +4928,6 @@ declare class CharacterMovementComponent extends PawnMovementComponent {
 	MinAnalogWalkSpeed: number;
 	BrakingFrictionFactor: number;
 	BrakingFriction: number;
-	bUseSeparateBrakingFriction: boolean;
 	BrakingDecelerationWalking: number;
 	BrakingDecelerationFalling: number;
 	BrakingDecelerationSwimming: number;
@@ -4411,6 +4941,8 @@ declare class CharacterMovementComponent extends PawnMovementComponent {
 	PerchRadiusThreshold: number;
 	PerchAdditionalHeight: number;
 	RotationRate: Rotator;
+	bUseSeparateBrakingFriction: boolean;
+	bApplyGravityWhileJumping: boolean;
 	bUseControllerDesiredRotation: boolean;
 	bOrientRotationToMovement: boolean;
 	bSweepWhileNavWalking: boolean;
@@ -4422,16 +4954,18 @@ declare class CharacterMovementComponent extends PawnMovementComponent {
 	bShrinkProxyCapsule: boolean;
 	bCanWalkOffLedges: boolean;
 	bCanWalkOffLedgesWhenCrouching: boolean;
+	bNetworkSkipProxyPredictionOnNetUpdate: boolean;
+	bNetworkAlwaysReplicateTransformUpdateTimestamp: boolean;
 	bDeferUpdateMoveComponent: boolean;
-	DeferredUpdatedMoveComponent: SceneComponent;
-	MaxOutOfWaterStepHeight: number;
-	OutofWaterZ: number;
-	Mass: number;
 	bEnablePhysicsInteraction: boolean;
 	bTouchForceScaledToMass: boolean;
 	bPushForceScaledToMass: boolean;
 	bPushForceUsingZOffset: boolean;
 	bScalePushForceToVelocity: boolean;
+	DeferredUpdatedMoveComponent: SceneComponent;
+	MaxOutOfWaterStepHeight: number;
+	OutofWaterZ: number;
+	Mass: number;
 	StandingDownwardForceScale: number;
 	InitialPushForceFactor: number;
 	PushForceFactor: number;
@@ -4444,10 +4978,12 @@ declare class CharacterMovementComponent extends PawnMovementComponent {
 	CrouchedSpeedMultiplier: number;
 	UpperImpactNormalScale: number;
 	Acceleration: Vector;
-	LastUpdateLocation: Vector;
 	LastUpdateRotation: Quat;
+	LastUpdateLocation: Vector;
 	LastUpdateVelocity: Vector;
 	ServerLastTransformUpdateTimeStamp: number;
+	ServerLastClientGoodMoveAckTime: number;
+	ServerLastClientAdjustmentTime: number;
 	PendingImpulseToApply: Vector;
 	PendingForceToApply: Vector;
 	AnalogInputModifier: number;
@@ -4465,7 +5001,10 @@ declare class CharacterMovementComponent extends PawnMovementComponent {
 	NetProxyShrinkHalfHeight: number;
 	NetworkMaxSmoothUpdateDistance: number;
 	NetworkNoSmoothUpdateDistance: number;
-	NetworkSmoothingMode: NetworkSmoothingMode;
+	NetworkMinTimeBetweenClientAckGoodMoves: number;
+	NetworkMinTimeBetweenClientAdjustments: number;
+	NetworkMinTimeBetweenClientAdjustmentsLargeCorrection: number;
+	NetworkLargeClientCorrectionDistance: number;
 	LedgeCheckThreshold: number;
 	JumpOutOfWaterPitch: number;
 	CurrentFloor: FindFloorResult;
@@ -4493,6 +5032,8 @@ declare class CharacterMovementComponent extends PawnMovementComponent {
 	bWantsToLeaveNavWalking: boolean;
 	bUseRVOAvoidance: boolean;
 	bRequestedMoveUseAcceleration: boolean;
+	bWasSimulatingRootMotion: boolean;
+	bAllowPhysicsRotationDuringAnimRootMotion: boolean;
 	bHasRequestedVelocity: boolean;
 	bRequestedMoveWithMaxSpeed: boolean;
 	bWasAvoidanceUpdated: boolean;
@@ -4517,8 +5058,6 @@ declare class CharacterMovementComponent extends PawnMovementComponent {
 	CurrentRootMotion: RootMotionSourceGroup;
 	RootMotionParams: RootMotionMovementParams;
 	AnimRootMotionVelocity: Vector;
-	bWasSimulatingRootMotion: boolean;
-	bAllowPhysicsRotationDuringAnimRootMotion: boolean;
 	static Load(ResourceName: string): CharacterMovementComponent;
 	static Find(Outer: UObject, ResourceName: string): CharacterMovementComponent;
 	static GetDefaultObject(): CharacterMovementComponent;
@@ -4533,10 +5072,6 @@ declare class CharacterMovementComponent extends PawnMovementComponent {
 	SetAvoidanceGroupMask(GroupMask: NavAvoidanceMask): void;
 	SetAvoidanceGroup(GroupFlags: number): void;
 	SetAvoidanceEnabled(bEnable: boolean): void;
-	ServerMoveOld(OldTimeStamp: number,OldAccel: Vector_NetQuantize10,OldMoveFlags: number): void;
-	ServerMoveDualHybridRootMotion(TimeStamp0: number,InAccel0: Vector_NetQuantize10,PendingFlags: number,View0: any,TimeStamp: number,InAccel: Vector_NetQuantize10,ClientLoc: Vector_NetQuantize100,NewFlags: number,ClientRoll: number,View: any,ClientMovementBase: PrimitiveComponent,ClientBaseBoneName: string,ClientMovementMode: number): void;
-	ServerMoveDual(TimeStamp0: number,InAccel0: Vector_NetQuantize10,PendingFlags: number,View0: any,TimeStamp: number,InAccel: Vector_NetQuantize10,ClientLoc: Vector_NetQuantize100,NewFlags: number,ClientRoll: number,View: any,ClientMovementBase: PrimitiveComponent,ClientBaseBoneName: string,ClientMovementMode: number): void;
-	ServerMove(TimeStamp: number,InAccel: Vector_NetQuantize10,ClientLoc: Vector_NetQuantize100,CompressedMoveFlags: number,ClientRoll: number,View: any,ClientMovementBase: PrimitiveComponent,ClientBaseBoneName: string,ClientMovementMode: number): void;
 	K2_GetWalkableFloorZ(): number;
 	K2_GetWalkableFloorAngle(): number;
 	K2_GetModifiedMaxAcceleration(): number;
@@ -4552,16 +5087,14 @@ declare class CharacterMovementComponent extends PawnMovementComponent {
 	GetMaxJumpHeight(): number;
 	GetMaxBrakingDeceleration(): number;
 	GetMaxAcceleration(): number;
+	GetLastUpdateVelocity(): Vector;
+	GetLastUpdateRotation(): Rotator;
+	GetLastUpdateLocation(): Vector;
 	GetImpartedMovementBaseVelocity(): Vector;
 	GetCurrentAcceleration(): Vector;
 	GetCharacterOwner(): Character;
 	GetAnalogInputModifier(): number;
 	DisableMovement(): void;
-	ClientVeryShortAdjustPosition(TimeStamp: number,NewLoc: Vector,NewBase: PrimitiveComponent,NewBaseBoneName: string,bHasBase: boolean,bBaseRelativePosition: boolean,ServerMovementMode: number): void;
-	ClientAdjustRootMotionSourcePosition(TimeStamp: number,ServerRootMotion: RootMotionSourceGroup,bHasAnimRootMotion: boolean,ServerMontageTrackPosition: number,ServerLoc: Vector,ServerRotation: Vector_NetQuantizeNormal,ServerVelZ: number,ServerBase: PrimitiveComponent,ServerBoneName: string,bHasBase: boolean,bBaseRelativePosition: boolean,ServerMovementMode: number): void;
-	ClientAdjustRootMotionPosition(TimeStamp: number,ServerMontageTrackPosition: number,ServerLoc: Vector,ServerRotation: Vector_NetQuantizeNormal,ServerVelZ: number,ServerBase: PrimitiveComponent,ServerBoneName: string,bHasBase: boolean,bBaseRelativePosition: boolean,ServerMovementMode: number): void;
-	ClientAdjustPosition(TimeStamp: number,NewLoc: Vector,NewVel: Vector,NewBase: PrimitiveComponent,NewBaseBoneName: string,bHasBase: boolean,bBaseRelativePosition: boolean,ServerMovementMode: number): void;
-	ClientAckGoodMove(TimeStamp: number): void;
 	ClearAccumulatedForces(): void;
 	CapsuleTouched(OverlappedComp: PrimitiveComponent,Other: Actor,OtherComp: PrimitiveComponent,OtherBodyIndex: number,bFromSweep: boolean,SweepResult: HitResult): void;
 	CalcVelocity(DeltaTime: number,Friction: number,bFluid: boolean,BrakingDeceleration: number): void;
@@ -4570,58 +5103,17 @@ declare class CharacterMovementComponent extends PawnMovementComponent {
 	static C(Other: UObject | any): CharacterMovementComponent;
 }
 
-declare class NavAgentSelector { 
-	bSupportsAgent0: boolean;
-	bSupportsAgent1: boolean;
-	bSupportsAgent2: boolean;
-	bSupportsAgent3: boolean;
-	bSupportsAgent4: boolean;
-	bSupportsAgent5: boolean;
-	bSupportsAgent6: boolean;
-	bSupportsAgent7: boolean;
-	bSupportsAgent8: boolean;
-	bSupportsAgent9: boolean;
-	bSupportsAgent10: boolean;
-	bSupportsAgent11: boolean;
-	bSupportsAgent12: boolean;
-	bSupportsAgent13: boolean;
-	bSupportsAgent14: boolean;
-	bSupportsAgent15: boolean;
-	clone() : NavAgentSelector;
-	static C(Other: UObject | any): NavAgentSelector;
-}
-
-declare class NavArea extends UObject { 
-	DefaultCost: number;
-	FixedAreaEnteringCost: number;
-	DrawColor: Color;
-	SupportedAgents: NavAgentSelector;
-	bSupportsAgent0: boolean;
-	bSupportsAgent1: boolean;
-	bSupportsAgent2: boolean;
-	bSupportsAgent3: boolean;
-	bSupportsAgent4: boolean;
-	bSupportsAgent5: boolean;
-	bSupportsAgent6: boolean;
-	bSupportsAgent7: boolean;
-	bSupportsAgent8: boolean;
-	bSupportsAgent9: boolean;
-	bSupportsAgent10: boolean;
-	bSupportsAgent11: boolean;
-	bSupportsAgent12: boolean;
-	bSupportsAgent13: boolean;
-	bSupportsAgent14: boolean;
-	bSupportsAgent15: boolean;
-	static Load(ResourceName: string): NavArea;
-	static Find(Outer: UObject, ResourceName: string): NavArea;
-	static GetDefaultObject(): NavArea;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavArea;
-	static C(Other: UObject | any): NavArea;
+declare class NavAreaBase extends UObject { 
+	static Load(ResourceName: string): NavAreaBase;
+	static Find(Outer: UObject, ResourceName: string): NavAreaBase;
+	static GetDefaultObject(): NavAreaBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavAreaBase;
+	static C(Other: UObject | any): NavAreaBase;
 }
 
 declare class ShapeComponent extends PrimitiveComponent { 
-	ShapeColor: Color;
 	ShapeBodySetup: BodySetup;
+	ShapeColor: Color;
 	bDrawOnlyIfSelected: boolean;
 	bShouldCollideWhenPlacing: boolean;
 	bDynamicObstacle: boolean;
@@ -4658,6 +5150,24 @@ declare class CapsuleComponent extends ShapeComponent {
 	static C(Other: UObject | any): CapsuleComponent;
 }
 
+declare class ArrowComponent extends PrimitiveComponent { 
+	ArrowColor: Color;
+	ArrowSize: number;
+	bIsScreenSizeScaled: boolean;
+	ScreenSize: number;
+	bTreatAsASprite: boolean;
+	SpriteCategoryName: string;
+	SpriteInfo: SpriteCategoryInfo;
+	bLightAttachment: boolean;
+	bUseInEditorScaling: boolean;
+	static Load(ResourceName: string): ArrowComponent;
+	static Find(Outer: UObject, ResourceName: string): ArrowComponent;
+	static GetDefaultObject(): ArrowComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ArrowComponent;
+	SetArrowColor(NewColor: LinearColor): void;
+	static C(Other: UObject | any): ArrowComponent;
+}
+
 declare class BasedMovementInfo { 
 	MovementBase: PrimitiveComponent;
 	BoneName: string;
@@ -4696,19 +5206,21 @@ declare class SimulatedRootMotionReplicatedMove {
 
 declare class Character extends Pawn { 
 	Mesh: SkeletalMeshComponent;
-	ArrowComponent: ArrowComponent;
 	CharacterMovement: CharacterMovementComponent;
 	CapsuleComponent: CapsuleComponent;
+	ArrowComponent: ArrowComponent;
 	BasedMovement: BasedMovementInfo;
 	ReplicatedBasedMovement: BasedMovementInfo;
 	AnimRootMotionTranslationScale: number;
 	BaseTranslationOffset: Vector;
 	BaseRotationOffset: Quat;
 	ReplicatedServerLastTransformUpdateTimeStamp: number;
+	ReplayLastTransformUpdateTimeStamp: number;
 	ReplicatedMovementMode: number;
 	bInBaseReplication: boolean;
 	CrouchedEyeHeight: number;
 	bIsCrouched: boolean;
+	bProxyIsJumpForceApplied: boolean;
 	bPressedJump: boolean;
 	bClientUpdating: boolean;
 	bClientWasFalling: boolean;
@@ -4717,11 +5229,13 @@ declare class Character extends Pawn {
 	bSimGravityDisabled: boolean;
 	bClientCheckEncroachmentOnNetUpdate: boolean;
 	bServerMoveIgnoreRootMotion: boolean;
+	bWasJumping: boolean;
 	JumpKeyHoldTime: number;
+	JumpForceTimeRemaining: number;
+	ProxyJumpForceStartedTime: number;
 	JumpMaxHoldTime: number;
 	JumpMaxCount: number;
 	JumpCurrentCount: number;
-	bWasJumping: boolean;
 	OnReachedJumpApex: UnrealEngineMulticastDelegate<() => void>;
 	MovementModeChangedDelegate: UnrealEngineMulticastDelegate<(Character: Character, PrevMovementMode: EMovementMode, PreviousCustomMode: number) => void>;
 	OnCharacterMovementUpdated: UnrealEngineMulticastDelegate<(DeltaSeconds: number, OldLocation: Vector, OldVelocity: Vector) => void>;
@@ -4734,12 +5248,18 @@ declare class Character extends Pawn {
 	UnCrouch(bClientSimulation: boolean): void;
 	StopJumping(): void;
 	StopAnimMontage(AnimMontage: AnimMontage): void;
-	SetReplicateMovement(bInReplicateMovement: boolean): void;
-	RootMotionDebugClientPrintOnScreen(InString: string): void;
+	ServerMoveOld(OldTimeStamp: number,OldAccel: Vector_NetQuantize10,OldMoveFlags: number): void;
+	ServerMoveNoBase(Timestamp: number,InAccel: Vector_NetQuantize10,ClientLoc: Vector_NetQuantize100,CompressedMoveFlags: number,ClientRoll: number,View: any,ClientMovementMode: number): void;
+	ServerMoveDualNoBase(TimeStamp0: number,InAccel0: Vector_NetQuantize10,PendingFlags: number,View0: any,Timestamp: number,InAccel: Vector_NetQuantize10,ClientLoc: Vector_NetQuantize100,NewFlags: number,ClientRoll: number,View: any,ClientMovementMode: number): void;
+	ServerMoveDualHybridRootMotion(TimeStamp0: number,InAccel0: Vector_NetQuantize10,PendingFlags: number,View0: any,Timestamp: number,InAccel: Vector_NetQuantize10,ClientLoc: Vector_NetQuantize100,NewFlags: number,ClientRoll: number,View: any,ClientMovementBase: PrimitiveComponent,ClientBaseBoneName: string,ClientMovementMode: number): void;
+	ServerMoveDual(TimeStamp0: number,InAccel0: Vector_NetQuantize10,PendingFlags: number,View0: any,Timestamp: number,InAccel: Vector_NetQuantize10,ClientLoc: Vector_NetQuantize100,NewFlags: number,ClientRoll: number,View: any,ClientMovementBase: PrimitiveComponent,ClientBaseBoneName: string,ClientMovementMode: number): void;
+	ServerMove(Timestamp: number,InAccel: Vector_NetQuantize10,ClientLoc: Vector_NetQuantize100,CompressedMoveFlags: number,ClientRoll: number,View: any,ClientMovementBase: PrimitiveComponent,ClientBaseBoneName: string,ClientMovementMode: number): void;
+	RootMotionDebugClientPrintOnScreen(inString: string): void;
 	PlayAnimMontage(AnimMontage: AnimMontage,InPlayRate: number,StartSectionName: string): number;
 	OnWalkingOffLedge(PreviousFloorImpactNormal: Vector,PreviousFloorContactNormal: Vector,PreviousLocation: Vector,TimeDelta: number): void;
 	OnRep_RootMotion(): void;
 	OnRep_ReplicatedBasedMovement(): void;
+	OnRep_ReplayLastTransformUpdateTimeStamp(): void;
 	OnRep_IsCrouched(): void;
 	OnLaunched(LaunchVelocity: Vector,bXYOverride: boolean,bZOverride: boolean): void;
 	OnLanded(Hit: HitResult): void;
@@ -4758,128 +5278,47 @@ declare class Character extends Pawn {
 	GetBaseRotationOffsetRotator(): Rotator;
 	GetAnimRootMotionTranslationScale(): number;
 	Crouch(bClientSimulation: boolean): void;
+	ClientVeryShortAdjustPosition(Timestamp: number,NewLoc: Vector,NewBase: PrimitiveComponent,NewBaseBoneName: string,bHasBase: boolean,bBaseRelativePosition: boolean,ServerMovementMode: number): void;
 	ClientCheatWalk(): void;
 	ClientCheatGhost(): void;
 	ClientCheatFly(): void;
+	ClientAdjustRootMotionSourcePosition(Timestamp: number,ServerRootMotion: RootMotionSourceGroup,bHasAnimRootMotion: boolean,ServerMontageTrackPosition: number,ServerLoc: Vector,ServerRotation: Vector_NetQuantizeNormal,ServerVelZ: number,ServerBase: PrimitiveComponent,ServerBoneName: string,bHasBase: boolean,bBaseRelativePosition: boolean,ServerMovementMode: number): void;
+	ClientAdjustRootMotionPosition(Timestamp: number,ServerMontageTrackPosition: number,ServerLoc: Vector,ServerRotation: Vector_NetQuantizeNormal,ServerVelZ: number,ServerBase: PrimitiveComponent,ServerBoneName: string,bHasBase: boolean,bBaseRelativePosition: boolean,ServerMovementMode: number): void;
+	ClientAdjustPosition(Timestamp: number,NewLoc: Vector,NewVel: Vector,NewBase: PrimitiveComponent,NewBaseBoneName: string,bHasBase: boolean,bBaseRelativePosition: boolean,ServerMovementMode: number): void;
+	ClientAckGoodMove(Timestamp: number): void;
 	CanJumpInternal(): boolean;
 	CanJump(): boolean;
 	CacheInitialMeshOffset(MeshRelativeLocation: Vector,MeshRelativeRotation: Rotator): void;
 	static C(Other: UObject | any): Character;
 }
 
-declare class BillboardComponent extends PrimitiveComponent { 
-	Sprite: Texture2D;
-	bIsScreenSizeScaled: boolean;
-	ScreenSize: number;
-	U: number;
-	UL: number;
-	V: number;
-	VL: number;
-	SpriteCategoryName: string;
-	SpriteInfo: SpriteCategoryInfo;
-	bUseInEditorScaling: boolean;
-	static Load(ResourceName: string): BillboardComponent;
-	static Find(Outer: UObject, ResourceName: string): BillboardComponent;
-	static GetDefaultObject(): BillboardComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BillboardComponent;
-	SetUV(NewU: number,NewUL: number,NewV: number,NewVL: number): void;
-	SetSpriteAndUV(NewSprite: Texture2D,NewU: number,NewUL: number,NewV: number,NewVL: number): void;
-	SetSprite(NewSprite: Texture2D): void;
-	static C(Other: UObject | any): BillboardComponent;
-}
-
-declare class Info extends Actor { 
-	SpriteComponent: BillboardComponent;
-	static GetDefaultObject(): Info;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Info;
-	static C(Other: UObject | any): Info;
+declare class Player extends UObject { 
+	PlayerController: PlayerController;
+	CurrentNetSpeed: number;
+	ConfiguredInternetSpeed: number;
+	ConfiguredLanSpeed: number;
+	static Load(ResourceName: string): Player;
+	static Find(Outer: UObject, ResourceName: string): Player;
+	static GetDefaultObject(): Player;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Player;
+	static C(Other: UObject | any): Player;
 }
 
-declare class LocalMessage extends UObject { 
-	static Load(ResourceName: string): LocalMessage;
-	static Find(Outer: UObject, ResourceName: string): LocalMessage;
-	static GetDefaultObject(): LocalMessage;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalMessage;
-	static C(Other: UObject | any): LocalMessage;
+declare class InterpTrackInst extends UObject { 
+	static Load(ResourceName: string): InterpTrackInst;
+	static Find(Outer: UObject, ResourceName: string): InterpTrackInst;
+	static GetDefaultObject(): InterpTrackInst;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterpTrackInst;
+	static C(Other: UObject | any): InterpTrackInst;
 }
 
-declare class UniqueNetIdWrapper { 
-	clone() : UniqueNetIdWrapper;
-	static C(Other: UObject | any): UniqueNetIdWrapper;
-}
-
-declare class UniqueNetIdRepl extends UniqueNetIdWrapper { 
-	clone() : UniqueNetIdRepl;
-	static C(Other: UObject | any): UniqueNetIdRepl;
-}
-
-declare class PlayerState extends Info { 
-	Score: number;
-	Ping: number;
-	PlayerName: string;
-	PlayerId: number;
-	bIsSpectator: boolean;
-	bOnlySpectator: boolean;
-	bIsABot: boolean;
-	bIsInactive: boolean;
-	bFromPreviousLevel: boolean;
-	StartTime: number;
-	EngineMessageClass: UnrealEngineClass;
-	SavedNetworkAddress: string;
-	UniqueId: UniqueNetIdRepl;
-	static GetDefaultObject(): PlayerState;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlayerState;
-	ReceiveOverrideWith(OldPlayerState: PlayerState): void;
-	ReceiveCopyProperties(NewPlayerState: PlayerState): void;
-	OnRep_UniqueId(): void;
-	OnRep_Score(): void;
-	OnRep_PlayerName(): void;
-	OnRep_bIsInactive(): void;
-	static C(Other: UObject | any): PlayerState;
-}
-
-declare class DamageType extends UObject { 
-	bCausedByWorld: boolean;
-	bScaleMomentumByMass: boolean;
-	bRadialDamageVelChange: boolean;
-	DamageImpulse: number;
-	DestructibleImpulse: number;
-	DestructibleDamageSpreadScale: number;
-	DamageFalloff: number;
-	static Load(ResourceName: string): DamageType;
-	static Find(Outer: UObject, ResourceName: string): DamageType;
-	static GetDefaultObject(): DamageType;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DamageType;
-	static C(Other: UObject | any): DamageType;
-}
-
-declare class Player extends UObject { 
-	PlayerController: PlayerController;
-	CurrentNetSpeed: number;
-	ConfiguredInternetSpeed: number;
-	ConfiguredLanSpeed: number;
-	static Load(ResourceName: string): Player;
-	static Find(Outer: UObject, ResourceName: string): Player;
-	static GetDefaultObject(): Player;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Player;
-	static C(Other: UObject | any): Player;
-}
-
-declare class InterpTrackInst extends UObject { 
-	static Load(ResourceName: string): InterpTrackInst;
-	static Find(Outer: UObject, ResourceName: string): InterpTrackInst;
-	static GetDefaultObject(): InterpTrackInst;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterpTrackInst;
-	static C(Other: UObject | any): InterpTrackInst;
-}
-
-declare class InterpTrackInstDirector extends InterpTrackInst { 
-	OldViewTarget: Actor;
-	static Load(ResourceName: string): InterpTrackInstDirector;
-	static Find(Outer: UObject, ResourceName: string): InterpTrackInstDirector;
-	static GetDefaultObject(): InterpTrackInstDirector;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterpTrackInstDirector;
-	static C(Other: UObject | any): InterpTrackInstDirector;
+declare class InterpTrackInstDirector extends InterpTrackInst { 
+	OldViewTarget: Actor;
+	static Load(ResourceName: string): InterpTrackInstDirector;
+	static Find(Outer: UObject, ResourceName: string): InterpTrackInstDirector;
+	static GetDefaultObject(): InterpTrackInstDirector;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterpTrackInstDirector;
+	static C(Other: UObject | any): InterpTrackInstDirector;
 }
 
 declare class ReporterBase extends UObject { 
@@ -4936,12 +5375,12 @@ declare class Canvas extends UObject {
 	K2_Project(WorldLocation: Vector): Vector;
 	K2_DrawTriangle(RenderTexture: Texture,Triangles: CanvasUVTri[]): void;
 	K2_DrawTexture(RenderTexture: Texture,ScreenPosition: Vector2D,ScreenSize: Vector2D,CoordinatePosition: Vector2D,CoordinateSize: Vector2D,RenderColor: LinearColor,BlendMode: EBlendMode,Rotation: number,PivotPoint: Vector2D): void;
-	K2_DrawText(RenderFont: Font,RenderText: string,ScreenPosition: Vector2D,RenderColor: LinearColor,Kerning: number,ShadowColor: LinearColor,ShadowOffset: Vector2D,bCentreX: boolean,bCentreY: boolean,bOutlined: boolean,OutlineColor: LinearColor): void;
+	K2_DrawText(RenderFont: Font,RenderText: string,ScreenPosition: Vector2D,Scale: Vector2D,RenderColor: LinearColor,Kerning: number,ShadowColor: LinearColor,ShadowOffset: Vector2D,bCentreX: boolean,bCentreY: boolean,bOutlined: boolean,OutlineColor: LinearColor): void;
 	K2_DrawPolygon(RenderTexture: Texture,ScreenPosition: Vector2D,Radius: Vector2D,NumberOfSides: number,RenderColor: LinearColor): void;
 	K2_DrawMaterialTriangle(RenderMaterial: MaterialInterface,Triangles: CanvasUVTri[]): void;
 	K2_DrawMaterial(RenderMaterial: MaterialInterface,ScreenPosition: Vector2D,ScreenSize: Vector2D,CoordinatePosition: Vector2D,CoordinateSize: Vector2D,Rotation: number,PivotPoint: Vector2D): void;
 	K2_DrawLine(ScreenPositionA: Vector2D,ScreenPositionB: Vector2D,Thickness: number,RenderColor: LinearColor): void;
-	K2_DrawBox(ScreenPosition: Vector2D,ScreenSize: Vector2D,Thickness: number): void;
+	K2_DrawBox(ScreenPosition: Vector2D,ScreenSize: Vector2D,Thickness: number,RenderColor: LinearColor): void;
 	K2_DrawBorder(BorderTexture: Texture,BackgroundTexture: Texture,LeftBorderTexture: Texture,RightBorderTexture: Texture,TopBorderTexture: Texture,BottomBorderTexture: Texture,ScreenPosition: Vector2D,ScreenSize: Vector2D,CoordinatePosition: Vector2D,CoordinateSize: Vector2D,RenderColor: LinearColor,BorderScale: Vector2D,BackgroundScale: Vector2D,Rotation: number,PivotPoint: Vector2D,CornerSize: Vector2D): void;
 	K2_Deproject(ScreenPosition: Vector2D,WorldOrigin?: Vector,WorldDirection?: Vector): {WorldOrigin: Vector, WorldDirection: Vector};
 	static C(Other: UObject | any): Canvas;
@@ -4970,6 +5409,7 @@ declare class HUD extends Actor {
 	bLostFocusPaused: boolean;
 	bShowHUD: boolean;
 	bShowDebugInfo: boolean;
+	CurrentTargetIndex: number;
 	bShowHitBoxDebugInfo: boolean;
 	bShowOverlays: boolean;
 	bEnableDebugTextShadow: boolean;
@@ -4995,13 +5435,15 @@ declare class HUD extends Actor {
 	ReceiveHitBoxBeginCursorOver(BoxName: string): void;
 	ReceiveDrawHUD(SizeX: number,SizeY: number): void;
 	Project(Location: Vector): Vector;
-	GetTextSize(Text: string,OutWidth?: number,OutHeight?: number,Font?: Font,Scale?: number): {OutWidth: number, OutHeight: number};
+	PreviousDebugTarget(): void;
+	NextDebugTarget(): void;
+	GetTextSize(text: string,OutWidth?: number,OutHeight?: number,Font?: Font,Scale?: number): {OutWidth: number, OutHeight: number};
 	GetOwningPlayerController(): PlayerController;
 	GetOwningPawn(): Pawn;
 	GetActorsInSelectionRectangle(ClassFilter: UnrealEngineClass,FirstPoint: Vector2D,SecondPoint: Vector2D,OutActors?: Actor[],bIncludeNonCollidingComponents?: boolean,bActorMustBeFullyEnclosed?: boolean): {OutActors: Actor[]};
 	DrawTextureSimple(Texture: Texture,ScreenX: number,ScreenY: number,Scale: number,bScalePosition: boolean): void;
 	DrawTexture(Texture: Texture,ScreenX: number,ScreenY: number,ScreenW: number,ScreenH: number,TextureU: number,TextureV: number,TextureUWidth: number,TextureVHeight: number,TintColor: LinearColor,BlendMode: EBlendMode,Scale: number,bScalePosition: boolean,Rotation: number,RotPivot: Vector2D): void;
-	DrawText(Text: string,TextColor: LinearColor,ScreenX: number,ScreenY: number,Font: Font,Scale: number,bScalePosition: boolean): void;
+	DrawText(text: string,TextColor: LinearColor,ScreenX: number,ScreenY: number,Font: Font,Scale: number,bScalePosition: boolean): void;
 	DrawRect(RectColor: LinearColor,ScreenX: number,ScreenY: number,ScreenW: number,ScreenH: number): void;
 	DrawMaterialTriangle(Material: MaterialInterface,V0_Pos: Vector2D,V1_Pos: Vector2D,V2_Pos: Vector2D,V0_UV: Vector2D,V1_UV: Vector2D,V2_UV: Vector2D,V0_Color: LinearColor,V1_Color: LinearColor,V2_Color: LinearColor): void;
 	DrawMaterialSimple(Material: MaterialInterface,ScreenX: number,ScreenY: number,ScreenW: number,ScreenH: number,Scale: number,bScalePosition: boolean): void;
@@ -5013,10 +5455,14 @@ declare class HUD extends Actor {
 	static C(Other: UObject | any): HUD;
 }
 
-declare type ECameraProjectionMode = 'Perspective' | 'Orthographic';
-declare var ECameraProjectionMode : { Perspective:'Perspective',Orthographic:'Orthographic', };
-declare type EBloomMethod = 'BM_SOG' | 'BM_FFT';
-declare var EBloomMethod : { BM_SOG:'BM_SOG',BM_FFT:'BM_FFT', };
+declare type ECameraProjectionMode = 'Perspective' | 'Orthographic' | 'ECameraProjectionMode_MAX';
+declare var ECameraProjectionMode : { Perspective:'Perspective',Orthographic:'Orthographic',ECameraProjectionMode_MAX:'ECameraProjectionMode_MAX', };
+declare type EBloomMethod = 'BM_SOG' | 'BM_FFT' | 'BM_MAX';
+declare var EBloomMethod : { BM_SOG:'BM_SOG',BM_FFT:'BM_FFT',BM_MAX:'BM_MAX', };
+declare type EAutoExposureMethod = 'AEM_Histogram' | 'AEM_Basic' | 'AEM_Manual' | 'AEM_MAX';
+declare var EAutoExposureMethod : { AEM_Histogram:'AEM_Histogram',AEM_Basic:'AEM_Basic',AEM_Manual:'AEM_Manual',AEM_MAX:'AEM_MAX', };
+declare type EDepthOfFieldMethod = 'DOFM_BokehDOF' | 'DOFM_Gaussian' | 'DOFM_CircleDOF' | 'DOFM_MAX';
+declare var EDepthOfFieldMethod : { DOFM_BokehDOF:'DOFM_BokehDOF',DOFM_Gaussian:'DOFM_Gaussian',DOFM_CircleDOF:'DOFM_CircleDOF',DOFM_MAX:'DOFM_MAX', };
 declare class TextureCube extends Texture { 
 	static Load(ResourceName: string): TextureCube;
 	static Find(Outer: UObject, ResourceName: string): TextureCube;
@@ -5025,10 +5471,6 @@ declare class TextureCube extends Texture {
 	static C(Other: UObject | any): TextureCube;
 }
 
-declare type EAutoExposureMethod = 'AEM_Histogram' | 'AEM_Basic';
-declare var EAutoExposureMethod : { AEM_Histogram:'AEM_Histogram',AEM_Basic:'AEM_Basic', };
-declare type EDepthOfFieldMethod = 'DOFM_BokehDOF' | 'DOFM_Gaussian' | 'DOFM_CircleDOF';
-declare var EDepthOfFieldMethod : { DOFM_BokehDOF:'DOFM_BokehDOF',DOFM_Gaussian:'DOFM_Gaussian',DOFM_CircleDOF:'DOFM_CircleDOF', };
 declare class WeightedBlendable { 
 	Weight: number;
 	UObject: UObject;
@@ -5067,6 +5509,8 @@ declare class PostProcessSettings {
 	bOverride_ColorOffsetHighlights: boolean;
 	bOverride_ColorCorrectionShadowsMax: boolean;
 	bOverride_ColorCorrectionHighlightsMin: boolean;
+	bOverride_BlueCorrection: boolean;
+	bOverride_ExpandGamut: boolean;
 	bOverride_FilmWhitePoint: boolean;
 	bOverride_FilmSaturation: boolean;
 	bOverride_FilmChannelMixerRed: boolean;
@@ -5086,6 +5530,7 @@ declare class PostProcessSettings {
 	bOverride_FilmWhiteClip: boolean;
 	bOverride_SceneColorTint: boolean;
 	bOverride_SceneFringeIntensity: boolean;
+	bOverride_ChromaticAberrationStartOffset: boolean;
 	bOverride_AmbientCubemapTint: boolean;
 	bOverride_AmbientCubemapIntensity: boolean;
 	bOverride_BloomMethod: boolean;
@@ -5115,11 +5560,14 @@ declare class PostProcessSettings {
 	bOverride_BloomDirtMaskIntensity: boolean;
 	bOverride_BloomDirtMaskTint: boolean;
 	bOverride_BloomDirtMask: boolean;
+	bOverride_CameraShutterSpeed: boolean;
+	bOverride_CameraISO: boolean;
 	bOverride_AutoExposureMethod: boolean;
 	bOverride_AutoExposureLowPercent: boolean;
 	bOverride_AutoExposureHighPercent: boolean;
 	bOverride_AutoExposureMinBrightness: boolean;
 	bOverride_AutoExposureMaxBrightness: boolean;
+	bOverride_AutoExposureCalibrationConstant: boolean;
 	bOverride_AutoExposureSpeedUp: boolean;
 	bOverride_AutoExposureSpeedDown: boolean;
 	bOverride_AutoExposureBias: boolean;
@@ -5168,6 +5616,8 @@ declare class PostProcessSettings {
 	bOverride_ColorGradingLUT: boolean;
 	bOverride_DepthOfFieldFocalDistance: boolean;
 	bOverride_DepthOfFieldFstop: boolean;
+	bOverride_DepthOfFieldMinFstop: boolean;
+	bOverride_DepthOfFieldBladeCount: boolean;
 	bOverride_DepthOfFieldSensorWidth: boolean;
 	bOverride_DepthOfFieldDepthBlurRadius: boolean;
 	bOverride_DepthOfFieldDepthBlurAmount: boolean;
@@ -5194,6 +5644,10 @@ declare class PostProcessSettings {
 	bOverride_ScreenSpaceReflectionQuality: boolean;
 	bOverride_ScreenSpaceReflectionMaxRoughness: boolean;
 	bOverride_ScreenSpaceReflectionRoughnessScale: boolean;
+	bMobileHQGaussian: boolean;
+	BloomMethod: EBloomMethod;
+	AutoExposureMethod: EAutoExposureMethod;
+	DepthOfFieldMethod: EDepthOfFieldMethod;
 	WhiteTemp: number;
 	WhiteTint: number;
 	ColorSaturation: Vector4;
@@ -5206,7 +5660,6 @@ declare class PostProcessSettings {
 	ColorGammaShadows: Vector4;
 	ColorGainShadows: Vector4;
 	ColorOffsetShadows: Vector4;
-	ColorCorrectionShadowsMax: number;
 	ColorSaturationMidtones: Vector4;
 	ColorContrastMidtones: Vector4;
 	ColorGammaMidtones: Vector4;
@@ -5218,6 +5671,9 @@ declare class PostProcessSettings {
 	ColorGainHighlights: Vector4;
 	ColorOffsetHighlights: Vector4;
 	ColorCorrectionHighlightsMin: number;
+	ColorCorrectionShadowsMax: number;
+	BlueCorrection: number;
+	ExpandGamut: number;
 	FilmSlope: number;
 	FilmToe: number;
 	FilmShoulder: number;
@@ -5237,7 +5693,7 @@ declare class PostProcessSettings {
 	FilmDynamicRange: number;
 	SceneColorTint: LinearColor;
 	SceneFringeIntensity: number;
-	BloomMethod: EBloomMethod;
+	ChromaticAberrationStartOffset: number;
 	BloomIntensity: number;
 	BloomThreshold: number;
 	BloomSizeScale: number;
@@ -5253,8 +5709,8 @@ declare class PostProcessSettings {
 	Bloom4Tint: LinearColor;
 	Bloom5Tint: LinearColor;
 	Bloom6Tint: LinearColor;
-	BloomConvolutionTexture: Texture2D;
 	BloomConvolutionSize: number;
+	BloomConvolutionTexture: Texture2D;
 	BloomConvolutionCenterUV: Vector2D;
 	BloomConvolutionPreFilter: Vector;
 	BloomConvolutionPreFilterMin: number;
@@ -5267,16 +5723,21 @@ declare class PostProcessSettings {
 	AmbientCubemapTint: LinearColor;
 	AmbientCubemapIntensity: number;
 	AmbientCubemap: TextureCube;
-	AutoExposureMethod: EAutoExposureMethod;
+	CameraShutterSpeed: number;
+	CameraISO: number;
+	DepthOfFieldFstop: number;
+	DepthOfFieldMinFstop: number;
+	DepthOfFieldBladeCount: number;
+	AutoExposureBias: number;
 	AutoExposureLowPercent: number;
 	AutoExposureHighPercent: number;
 	AutoExposureMinBrightness: number;
 	AutoExposureMaxBrightness: number;
 	AutoExposureSpeedUp: number;
 	AutoExposureSpeedDown: number;
-	AutoExposureBias: number;
 	HistogramLogMin: number;
 	HistogramLogMax: number;
+	AutoExposureCalibrationConstant: number;
 	LensFlareIntensity: number;
 	LensFlareTint: LinearColor;
 	LensFlareBokehSize: number;
@@ -5303,9 +5764,6 @@ declare class PostProcessSettings {
 	IndirectLightingIntensity: number;
 	ColorGradingIntensity: number;
 	ColorGradingLUT: Texture;
-	DepthOfFieldMethod: EDepthOfFieldMethod;
-	bMobileHQGaussian: boolean;
-	DepthOfFieldFstop: number;
 	DepthOfFieldSensorWidth: number;
 	DepthOfFieldFocalDistance: number;
 	DepthOfFieldDepthBlurAmount: number;
@@ -5317,8 +5775,8 @@ declare class PostProcessSettings {
 	DepthOfFieldMaxBokehSize: number;
 	DepthOfFieldNearBlurSize: number;
 	DepthOfFieldFarBlurSize: number;
-	DepthOfFieldBokehShape: Texture;
 	DepthOfFieldOcclusion: number;
+	DepthOfFieldBokehShape: Texture;
 	DepthOfFieldColorThreshold: number;
 	DepthOfFieldSizeThreshold: number;
 	DepthOfFieldSkyFocusDistance: number;
@@ -5355,6 +5813,7 @@ declare class MinimalViewInfo {
 	Location: Vector;
 	Rotation: Rotator;
 	FOV: number;
+	DesiredFOV: number;
 	OrthoWidth: number;
 	OrthoNearClipPlane: number;
 	OrthoFarClipPlane: number;
@@ -5370,7 +5829,7 @@ declare class MinimalViewInfo {
 }
 
 declare class CameraCacheEntry { 
-	TimeStamp: number;
+	Timestamp: number;
 	POV: MinimalViewInfo;
 	clone() : CameraCacheEntry;
 	static C(Other: UObject | any): CameraCacheEntry;
@@ -5405,10 +5864,12 @@ declare class CameraModifier extends UObject {
 	static C(Other: UObject | any): CameraModifier;
 }
 
-declare type EParticleSystemUpdateMode = 'EPSUM_RealTime' | 'EPSUM_FixedTime';
-declare var EParticleSystemUpdateMode : { EPSUM_RealTime:'EPSUM_RealTime',EPSUM_FixedTime:'EPSUM_FixedTime', };
-declare type EEmitterRenderMode = 'ERM_Normal' | 'ERM_Point' | 'ERM_Cross' | 'ERM_LightsOnly' | 'ERM_None';
-declare var EEmitterRenderMode : { ERM_Normal:'ERM_Normal',ERM_Point:'ERM_Point',ERM_Cross:'ERM_Cross',ERM_LightsOnly:'ERM_LightsOnly',ERM_None:'ERM_None', };
+declare type EParticleSystemUpdateMode = 'EPSUM_RealTime' | 'EPSUM_FixedTime' | 'EPSUM_MAX';
+declare var EParticleSystemUpdateMode : { EPSUM_RealTime:'EPSUM_RealTime',EPSUM_FixedTime:'EPSUM_FixedTime',EPSUM_MAX:'EPSUM_MAX', };
+declare type EEmitterRenderMode = 'ERM_Normal' | 'ERM_Point' | 'ERM_Cross' | 'ERM_LightsOnly' | 'ERM_None' | 'ERM_MAX';
+declare var EEmitterRenderMode : { ERM_Normal:'ERM_Normal',ERM_Point:'ERM_Point',ERM_Cross:'ERM_Cross',ERM_LightsOnly:'ERM_LightsOnly',ERM_None:'ERM_None',ERM_MAX:'ERM_MAX', };
+declare type EParticleSignificanceLevel = 'Low' | 'Medium' | 'High' | 'Critical' | 'Num' | 'EParticleSignificanceLevel_MAX';
+declare var EParticleSignificanceLevel : { Low:'Low',Medium:'Medium',High:'High',Critical:'Critical',Num:'Num',EParticleSignificanceLevel_MAX:'EParticleSignificanceLevel_MAX', };
 declare class ParticleModule extends UObject { 
 	bSpawnModule: boolean;
 	bUpdateModule: boolean;
@@ -5431,10 +5892,10 @@ declare class ParticleModule extends UObject {
 	static C(Other: UObject | any): ParticleModule;
 }
 
-declare type EParticleScreenAlignment = 'PSA_FacingCameraPosition' | 'PSA_Square' | 'PSA_Rectangle' | 'PSA_Velocity' | 'PSA_AwayFromCenter' | 'PSA_TypeSpecific' | 'PSA_FacingCameraDistanceBlend';
-declare var EParticleScreenAlignment : { PSA_FacingCameraPosition:'PSA_FacingCameraPosition',PSA_Square:'PSA_Square',PSA_Rectangle:'PSA_Rectangle',PSA_Velocity:'PSA_Velocity',PSA_AwayFromCenter:'PSA_AwayFromCenter',PSA_TypeSpecific:'PSA_TypeSpecific',PSA_FacingCameraDistanceBlend:'PSA_FacingCameraDistanceBlend', };
-declare type EParticleSortMode = 'PSORTMODE_None' | 'PSORTMODE_ViewProjDepth' | 'PSORTMODE_DistanceToView' | 'PSORTMODE_Age_OldestFirst' | 'PSORTMODE_Age_NewestFirst';
-declare var EParticleSortMode : { PSORTMODE_None:'PSORTMODE_None',PSORTMODE_ViewProjDepth:'PSORTMODE_ViewProjDepth',PSORTMODE_DistanceToView:'PSORTMODE_DistanceToView',PSORTMODE_Age_OldestFirst:'PSORTMODE_Age_OldestFirst',PSORTMODE_Age_NewestFirst:'PSORTMODE_Age_NewestFirst', };
+declare type EParticleScreenAlignment = 'PSA_FacingCameraPosition' | 'PSA_Square' | 'PSA_Rectangle' | 'PSA_Velocity' | 'PSA_AwayFromCenter' | 'PSA_TypeSpecific' | 'PSA_FacingCameraDistanceBlend' | 'PSA_MAX';
+declare var EParticleScreenAlignment : { PSA_FacingCameraPosition:'PSA_FacingCameraPosition',PSA_Square:'PSA_Square',PSA_Rectangle:'PSA_Rectangle',PSA_Velocity:'PSA_Velocity',PSA_AwayFromCenter:'PSA_AwayFromCenter',PSA_TypeSpecific:'PSA_TypeSpecific',PSA_FacingCameraDistanceBlend:'PSA_FacingCameraDistanceBlend',PSA_MAX:'PSA_MAX', };
+declare type EParticleSortMode = 'PSORTMODE_None' | 'PSORTMODE_ViewProjDepth' | 'PSORTMODE_DistanceToView' | 'PSORTMODE_Age_OldestFirst' | 'PSORTMODE_Age_NewestFirst' | 'PSORTMODE_MAX';
+declare var EParticleSortMode : { PSORTMODE_None:'PSORTMODE_None',PSORTMODE_ViewProjDepth:'PSORTMODE_ViewProjDepth',PSORTMODE_DistanceToView:'PSORTMODE_DistanceToView',PSORTMODE_Age_OldestFirst:'PSORTMODE_Age_OldestFirst',PSORTMODE_Age_NewestFirst:'PSORTMODE_Age_NewestFirst',PSORTMODE_MAX:'PSORTMODE_MAX', };
 declare class DistributionLookupTable { 
 	Op: number;
 	EntryCount: number;
@@ -5480,8 +5941,8 @@ declare class RawDistributionFloat extends RawDistribution {
 	static C(Other: UObject | any): RawDistributionFloat;
 }
 
-declare type EParticleBurstMethod = 'EPBM_Instant' | 'EPBM_Interpolated';
-declare var EParticleBurstMethod : { EPBM_Instant:'EPBM_Instant',EPBM_Interpolated:'EPBM_Interpolated', };
+declare type EParticleBurstMethod = 'EPBM_Instant' | 'EPBM_Interpolated' | 'EPBM_MAX';
+declare var EParticleBurstMethod : { EPBM_Instant:'EPBM_Instant',EPBM_Interpolated:'EPBM_Interpolated',EPBM_MAX:'EPBM_MAX', };
 declare class ParticleBurst { 
 	Count: number;
 	CountLow: number;
@@ -5490,16 +5951,16 @@ declare class ParticleBurst {
 	static C(Other: UObject | any): ParticleBurst;
 }
 
-declare type EParticleSubUVInterpMethod = 'PSUVIM_None' | 'PSUVIM_Linear' | 'PSUVIM_Linear_Blend' | 'PSUVIM_Random' | 'PSUVIM_Random_Blend';
-declare var EParticleSubUVInterpMethod : { PSUVIM_None:'PSUVIM_None',PSUVIM_Linear:'PSUVIM_Linear',PSUVIM_Linear_Blend:'PSUVIM_Linear_Blend',PSUVIM_Random:'PSUVIM_Random',PSUVIM_Random_Blend:'PSUVIM_Random_Blend', };
-declare type EParticleUVFlipMode = 'None' | 'FlipUV' | 'FlipUOnly' | 'FlipVOnly' | 'RandomFlipUV' | 'RandomFlipUOnly' | 'RandomFlipVOnly' | 'RandomFlipUVIndependent';
-declare var EParticleUVFlipMode : { None:'None',FlipUV:'FlipUV',FlipUOnly:'FlipUOnly',FlipVOnly:'FlipVOnly',RandomFlipUV:'RandomFlipUV',RandomFlipUOnly:'RandomFlipUOnly',RandomFlipVOnly:'RandomFlipVOnly',RandomFlipUVIndependent:'RandomFlipUVIndependent', };
-declare type ESubUVBoundingVertexCount = 'BVC_FourVertices' | 'BVC_EightVertices';
-declare var ESubUVBoundingVertexCount : { BVC_FourVertices:'BVC_FourVertices',BVC_EightVertices:'BVC_EightVertices', };
-declare type EOpacitySourceMode = 'OSM_Alpha' | 'OSM_ColorBrightness' | 'OSM_RedChannel' | 'OSM_GreenChannel' | 'OSM_BlueChannel';
-declare var EOpacitySourceMode : { OSM_Alpha:'OSM_Alpha',OSM_ColorBrightness:'OSM_ColorBrightness',OSM_RedChannel:'OSM_RedChannel',OSM_GreenChannel:'OSM_GreenChannel',OSM_BlueChannel:'OSM_BlueChannel', };
-declare type EEmitterNormalsMode = 'ENM_CameraFacing' | 'ENM_Spherical' | 'ENM_Cylindrical';
-declare var EEmitterNormalsMode : { ENM_CameraFacing:'ENM_CameraFacing',ENM_Spherical:'ENM_Spherical',ENM_Cylindrical:'ENM_Cylindrical', };
+declare type EParticleSubUVInterpMethod = 'PSUVIM_None' | 'PSUVIM_Linear' | 'PSUVIM_Linear_Blend' | 'PSUVIM_Random' | 'PSUVIM_Random_Blend' | 'PSUVIM_MAX';
+declare var EParticleSubUVInterpMethod : { PSUVIM_None:'PSUVIM_None',PSUVIM_Linear:'PSUVIM_Linear',PSUVIM_Linear_Blend:'PSUVIM_Linear_Blend',PSUVIM_Random:'PSUVIM_Random',PSUVIM_Random_Blend:'PSUVIM_Random_Blend',PSUVIM_MAX:'PSUVIM_MAX', };
+declare type EParticleUVFlipMode = 'None' | 'FlipUV' | 'FlipUOnly' | 'FlipVOnly' | 'RandomFlipUV' | 'RandomFlipUOnly' | 'RandomFlipVOnly' | 'RandomFlipUVIndependent' | 'EParticleUVFlipMode_MAX';
+declare var EParticleUVFlipMode : { None:'None',FlipUV:'FlipUV',FlipUOnly:'FlipUOnly',FlipVOnly:'FlipVOnly',RandomFlipUV:'RandomFlipUV',RandomFlipUOnly:'RandomFlipUOnly',RandomFlipVOnly:'RandomFlipVOnly',RandomFlipUVIndependent:'RandomFlipUVIndependent',EParticleUVFlipMode_MAX:'EParticleUVFlipMode_MAX', };
+declare type ESubUVBoundingVertexCount = 'BVC_FourVertices' | 'BVC_EightVertices' | 'BVC_MAX';
+declare var ESubUVBoundingVertexCount : { BVC_FourVertices:'BVC_FourVertices',BVC_EightVertices:'BVC_EightVertices',BVC_MAX:'BVC_MAX', };
+declare type EOpacitySourceMode = 'OSM_Alpha' | 'OSM_ColorBrightness' | 'OSM_RedChannel' | 'OSM_GreenChannel' | 'OSM_BlueChannel' | 'OSM_MAX';
+declare var EOpacitySourceMode : { OSM_Alpha:'OSM_Alpha',OSM_ColorBrightness:'OSM_ColorBrightness',OSM_RedChannel:'OSM_RedChannel',OSM_GreenChannel:'OSM_GreenChannel',OSM_BlueChannel:'OSM_BlueChannel',OSM_MAX:'OSM_MAX', };
+declare type EEmitterNormalsMode = 'ENM_CameraFacing' | 'ENM_Spherical' | 'ENM_Cylindrical' | 'ENM_MAX';
+declare var EEmitterNormalsMode : { ENM_CameraFacing:'ENM_CameraFacing',ENM_Spherical:'ENM_Spherical',ENM_Cylindrical:'ENM_Cylindrical',ENM_MAX:'ENM_MAX', };
 declare class ParticleModuleRequired extends ParticleModule { 
 	Material: MaterialInterface;
 	EmitterOrigin: Vector;
@@ -5536,7 +5997,7 @@ declare class ParticleModuleRequired extends ParticleModule {
 	MacroUVRadius: number;
 	bUseMaxDrawCount: boolean;
 	MaxDrawCount: number;
-	UVFlippingMode: UVFlippingMode;
+	UVFlippingMode: EParticleUVFlipMode;
 	CutoutTexture: Texture2D;
 	BoundingMode: ESubUVBoundingVertexCount;
 	OpacitySourceMode: EOpacitySourceMode;
@@ -5593,8 +6054,8 @@ declare class ParticleModuleEventBase extends ParticleModule {
 	static C(Other: UObject | any): ParticleModuleEventBase;
 }
 
-declare type EParticleEventType = 'EPET_Any' | 'EPET_Spawn' | 'EPET_Death' | 'EPET_Collision' | 'EPET_Burst' | 'EPET_Blueprint';
-declare var EParticleEventType : { EPET_Any:'EPET_Any',EPET_Spawn:'EPET_Spawn',EPET_Death:'EPET_Death',EPET_Collision:'EPET_Collision',EPET_Burst:'EPET_Burst',EPET_Blueprint:'EPET_Blueprint', };
+declare type EParticleEventType = 'EPET_Any' | 'EPET_Spawn' | 'EPET_Death' | 'EPET_Collision' | 'EPET_Burst' | 'EPET_Blueprint' | 'EPET_MAX';
+declare var EParticleEventType : { EPET_Any:'EPET_Any',EPET_Spawn:'EPET_Spawn',EPET_Death:'EPET_Death',EPET_Collision:'EPET_Collision',EPET_Burst:'EPET_Burst',EPET_Blueprint:'EPET_Blueprint',EPET_MAX:'EPET_MAX', };
 declare class ParticleModuleEventSendToGame extends UObject { 
 	static Load(ResourceName: string): ParticleModuleEventSendToGame;
 	static Find(Outer: UObject, ResourceName: string): ParticleModuleEventSendToGame;
@@ -5635,8 +6096,8 @@ declare class ParticleModuleOrbitBase extends ParticleModule {
 	static C(Other: UObject | any): ParticleModuleOrbitBase;
 }
 
-declare type EOrbitChainMode = 'EOChainMode_Add' | 'EOChainMode_Scale' | 'EOChainMode_Link';
-declare var EOrbitChainMode : { EOChainMode_Add:'EOChainMode_Add',EOChainMode_Scale:'EOChainMode_Scale',EOChainMode_Link:'EOChainMode_Link', };
+declare type EOrbitChainMode = 'EOChainMode_Add' | 'EOChainMode_Scale' | 'EOChainMode_Link' | 'EOChainMode_MAX';
+declare var EOrbitChainMode : { EOChainMode_Add:'EOChainMode_Add',EOChainMode_Scale:'EOChainMode_Scale',EOChainMode_Link:'EOChainMode_Link',EOChainMode_MAX:'EOChainMode_MAX', };
 declare class DistributionVector extends Distribution { 
 	bCanBeBaked: boolean;
 	bIsDirty: boolean;
@@ -5713,26 +6174,26 @@ declare class ParticleLODLevel extends UObject {
 	static C(Other: UObject | any): ParticleLODLevel;
 }
 
-declare type EParticleSignificanceLevel = 'Low' | 'Medium' | 'High' | 'Critical' | 'Num';
-declare var EParticleSignificanceLevel : { Low:'Low',Medium:'Medium',High:'High',Critical:'Critical',Num:'Num', };
 declare class ParticleEmitter extends UObject { 
 	EmitterName: string;
 	SubUVDataOffset: number;
 	EmitterRenderMode: EEmitterRenderMode;
-	EmitterEditorColor: Color;
-	LODLevels: ParticleLODLevel[];
+	SignificanceLevel: EParticleSignificanceLevel;
+	bUseLegacySpawningBehavior: boolean;
 	ConvertedModules: boolean;
-	PeakActiveParticles: number;
-	InitialAllocationCount: number;
-	MediumDetailSpawnRateScale: number;
-	QualityLevelSpawnRateScale: number;
-	DetailMode: EDetailMode;
-	bCollapsed: boolean;
 	bIsSoloing: boolean;
 	bCookedOut: boolean;
 	bDisabledLODsKeepEmitterAlive: boolean;
 	bDisableWhenInsignficant: boolean;
-	SignificanceLevel: SignificanceLevel;
+	bCollapsed: boolean;
+	DetailMode: EDetailMode;
+	EmitterEditorColor: Color;
+	LODLevels: ParticleLODLevel[];
+	PeakActiveParticles: number;
+	InitialAllocationCount: number;
+	QualityLevelSpawnRateScale: number;
+	DetailModeBitmask: any;
+	DetailModeDisplay: string;
 	static Load(ResourceName: string): ParticleEmitter;
 	static Find(Outer: UObject, ResourceName: string): ParticleEmitter;
 	static GetDefaultObject(): ParticleEmitter;
@@ -5775,17 +6236,17 @@ declare class InterpCurveEdSetup extends UObject {
 	static C(Other: UObject | any): InterpCurveEdSetup;
 }
 
-declare type ParticleSystemLODMethod = 'PARTICLESYSTEMLODMETHOD_Automatic' | 'PARTICLESYSTEMLODMETHOD_DirectSet' | 'PARTICLESYSTEMLODMETHOD_ActivateAutomatic';
-declare var ParticleSystemLODMethod : { PARTICLESYSTEMLODMETHOD_Automatic:'PARTICLESYSTEMLODMETHOD_Automatic',PARTICLESYSTEMLODMETHOD_DirectSet:'PARTICLESYSTEMLODMETHOD_DirectSet',PARTICLESYSTEMLODMETHOD_ActivateAutomatic:'PARTICLESYSTEMLODMETHOD_ActivateAutomatic', };
+declare type ParticleSystemLODMethod = 'PARTICLESYSTEMLODMETHOD_Automatic' | 'PARTICLESYSTEMLODMETHOD_DirectSet' | 'PARTICLESYSTEMLODMETHOD_ActivateAutomatic' | 'PARTICLESYSTEMLODMETHOD_MAX';
+declare var ParticleSystemLODMethod : { PARTICLESYSTEMLODMETHOD_Automatic:'PARTICLESYSTEMLODMETHOD_Automatic',PARTICLESYSTEMLODMETHOD_DirectSet:'PARTICLESYSTEMLODMETHOD_DirectSet',PARTICLESYSTEMLODMETHOD_ActivateAutomatic:'PARTICLESYSTEMLODMETHOD_ActivateAutomatic',PARTICLESYSTEMLODMETHOD_MAX:'PARTICLESYSTEMLODMETHOD_MAX', };
 declare class ParticleSystemLOD { 
 	clone() : ParticleSystemLOD;
 	static C(Other: UObject | any): ParticleSystemLOD;
 }
 
-declare type EParticleSystemInsignificanceReaction = 'Auto' | 'Complete' | 'DisableTick' | 'DisableTickAndKill' | 'Num';
-declare var EParticleSystemInsignificanceReaction : { Auto:'Auto',Complete:'Complete',DisableTick:'DisableTick',DisableTickAndKill:'DisableTickAndKill',Num:'Num', };
-declare type EParticleSystemOcclusionBoundsMethod = 'EPSOBM_None' | 'EPSOBM_ParticleBounds' | 'EPSOBM_CustomBounds';
-declare var EParticleSystemOcclusionBoundsMethod : { EPSOBM_None:'EPSOBM_None',EPSOBM_ParticleBounds:'EPSOBM_ParticleBounds',EPSOBM_CustomBounds:'EPSOBM_CustomBounds', };
+declare type EParticleSystemInsignificanceReaction = 'Auto' | 'Complete' | 'DisableTick' | 'DisableTickAndKill' | 'Num' | 'EParticleSystemInsignificanceReaction_MAX';
+declare var EParticleSystemInsignificanceReaction : { Auto:'Auto',Complete:'Complete',DisableTick:'DisableTick',DisableTickAndKill:'DisableTickAndKill',Num:'Num',EParticleSystemInsignificanceReaction_MAX:'EParticleSystemInsignificanceReaction_MAX', };
+declare type EParticleSystemOcclusionBoundsMethod = 'EPSOBM_None' | 'EPSOBM_ParticleBounds' | 'EPSOBM_CustomBounds' | 'EPSOBM_MAX';
+declare var EParticleSystemOcclusionBoundsMethod : { EPSOBM_None:'EPSOBM_None',EPSOBM_ParticleBounds:'EPSOBM_ParticleBounds',EPSOBM_CustomBounds:'EPSOBM_CustomBounds',EPSOBM_MAX:'EPSOBM_MAX', };
 declare class LODSoloTrack { 
 	SoloEnableSetting: number[];
 	clone() : LODSoloTrack;
@@ -5799,6 +6260,8 @@ declare class NamedEmitterMaterial {
 	static C(Other: UObject | any): NamedEmitterMaterial;
 }
 
+declare type EPSCPoolMethod = 'None' | 'AutoRelease' | 'ManualRelease' | 'ManualRelease_OnComplete' | 'EPSCPoolMethod_MAX';
+declare var EPSCPoolMethod : { None:'None',AutoRelease:'AutoRelease',ManualRelease:'ManualRelease',ManualRelease_OnComplete:'ManualRelease_OnComplete',EPSCPoolMethod_MAX:'EPSCPoolMethod_MAX', };
 declare class ParticleSystem extends UObject { 
 	SystemUpdateMode: EParticleSystemUpdateMode;
 	UpdateTime_FPS: number;
@@ -5837,9 +6300,10 @@ declare class ParticleSystem extends UObject {
 	bUseDelayRange: boolean;
 	bAutoDeactivate: boolean;
 	MinTimeBetweenTicks: any;
-	InsignificantReaction: InsignificantReaction;
+	InsignificantReaction: EParticleSystemInsignificanceReaction;
 	InsignificanceDelay: number;
-	MaxSignificanceLevel: MaxSignificanceLevel;
+	MaxSignificanceLevel: EParticleSignificanceLevel;
+	MaxPoolSize: any;
 	MacroUVPosition: Vector;
 	MacroUVRadius: number;
 	OcclusionBoundsMethod: EParticleSystemOcclusionBoundsMethod;
@@ -5852,12 +6316,12 @@ declare class ParticleSystem extends UObject {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleSystem;
 	ContainsEmitterType(TypeData: UnrealEngineClass): boolean;
 	static C(Other: UObject | any): ParticleSystem;
-	SpawnEmitterAttached(AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,LocationType: EAttachLocation,bAutoDestroy: boolean): ParticleSystemComponent;
-	static SpawnEmitterAttached(EmitterTemplate: ParticleSystem,AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,LocationType: EAttachLocation,bAutoDestroy: boolean): ParticleSystemComponent;
+	SpawnEmitterAttached(AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,Scale: Vector,LocationType: EAttachLocation,bAutoDestroy: boolean,PoolingMethod: EPSCPoolMethod): ParticleSystemComponent;
+	static SpawnEmitterAttached(EmitterTemplate: ParticleSystem,AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,Scale: Vector,LocationType: EAttachLocation,bAutoDestroy: boolean,PoolingMethod: EPSCPoolMethod): ParticleSystemComponent;
 }
 
-declare type EParticleSysParamType = 'PSPT_None' | 'PSPT_Scalar' | 'PSPT_ScalarRand' | 'PSPT_Vector' | 'PSPT_VectorRand' | 'PSPT_Color' | 'PSPT_Actor' | 'PSPT_Material';
-declare var EParticleSysParamType : { PSPT_None:'PSPT_None',PSPT_Scalar:'PSPT_Scalar',PSPT_ScalarRand:'PSPT_ScalarRand',PSPT_Vector:'PSPT_Vector',PSPT_VectorRand:'PSPT_VectorRand',PSPT_Color:'PSPT_Color',PSPT_Actor:'PSPT_Actor',PSPT_Material:'PSPT_Material', };
+declare type EParticleSysParamType = 'PSPT_None' | 'PSPT_Scalar' | 'PSPT_ScalarRand' | 'PSPT_Vector' | 'PSPT_VectorRand' | 'PSPT_Color' | 'PSPT_Actor' | 'PSPT_Material' | 'PSPT_MAX';
+declare var EParticleSysParamType : { PSPT_None:'PSPT_None',PSPT_Scalar:'PSPT_Scalar',PSPT_ScalarRand:'PSPT_ScalarRand',PSPT_Vector:'PSPT_Vector',PSPT_VectorRand:'PSPT_VectorRand',PSPT_Color:'PSPT_Color',PSPT_Actor:'PSPT_Actor',PSPT_Material:'PSPT_Material',PSPT_MAX:'PSPT_MAX', };
 declare class ParticleSysParam { 
 	Name: string;
 	ParamType: EParticleSysParamType;
@@ -5881,10 +6345,10 @@ declare class ParticleSystemReplay extends UObject {
 	static C(Other: UObject | any): ParticleSystemReplay;
 }
 
-declare type EAttachmentRule = 'KeepRelative' | 'KeepWorld' | 'SnapToTarget';
-declare var EAttachmentRule : { KeepRelative:'KeepRelative',KeepWorld:'KeepWorld',SnapToTarget:'SnapToTarget', };
-declare type ETrailWidthMode = 'ETrailWidthMode_FromCentre' | 'ETrailWidthMode_FromFirst' | 'ETrailWidthMode_FromSecond';
-declare var ETrailWidthMode : { ETrailWidthMode_FromCentre:'ETrailWidthMode_FromCentre',ETrailWidthMode_FromFirst:'ETrailWidthMode_FromFirst',ETrailWidthMode_FromSecond:'ETrailWidthMode_FromSecond', };
+declare type EAttachmentRule = 'KeepRelative' | 'KeepWorld' | 'SnapToTarget' | 'EAttachmentRule_MAX';
+declare var EAttachmentRule : { KeepRelative:'KeepRelative',KeepWorld:'KeepWorld',SnapToTarget:'SnapToTarget',EAttachmentRule_MAX:'EAttachmentRule_MAX', };
+declare type ETrailWidthMode = 'ETrailWidthMode_FromCentre' | 'ETrailWidthMode_FromFirst' | 'ETrailWidthMode_FromSecond' | 'ETrailWidthMode_MAX';
+declare var ETrailWidthMode : { ETrailWidthMode_FromCentre:'ETrailWidthMode_FromCentre',ETrailWidthMode_FromFirst:'ETrailWidthMode_FromFirst',ETrailWidthMode_FromSecond:'ETrailWidthMode_FromSecond',ETrailWidthMode_MAX:'ETrailWidthMode_MAX', };
 declare class ParticleSystemComponent extends PrimitiveComponent { 
 	Template: ParticleSystem;
 	EmitterMaterials: MaterialInterface[];
@@ -5893,7 +6357,11 @@ declare class ParticleSystemComponent extends PrimitiveComponent {
 	bUpdateOnDedicatedServer: boolean;
 	bAllowRecycling: boolean;
 	bAutoManageAttachment: boolean;
-	RequiredSignificance: RequiredSignificance;
+	bWarmingUp: boolean;
+	bOverrideLODMethod: boolean;
+	bSkipUpdateDynamicDataDuringTick: boolean;
+	LODMethod: ParticleSystemLODMethod;
+	RequiredSignificance: EParticleSignificanceLevel;
 	InstanceParameters: ParticleSysParam[];
 	OnParticleSpawn: UnrealEngineMulticastDelegate<(EventName: string, EmitterTime: number, Location: Vector, Velocity: Vector) => void>;
 	OnParticleBurst: UnrealEngineMulticastDelegate<(EventName: string, EmitterTime: number, ParticleCount: number) => void>;
@@ -5903,23 +6371,19 @@ declare class ParticleSystemComponent extends PrimitiveComponent {
 	PartSysVelocity: Vector;
 	WarmupTime: number;
 	WarmupTickRate: number;
-	bWarmingUp: boolean;
 	SecondsBeforeInactive: number;
 	MaxTimeBeforeForceUpdateTransform: number;
 	EditorLODLevel: number;
 	EditorDetailMode: number;
-	bOverrideLODMethod: boolean;
-	LODMethod: ParticleSystemLODMethod;
-	bSkipUpdateDynamicDataDuringTick: boolean;
 	ReplayClips: ParticleSystemReplay[];
 	CustomTimeDilation: number;
-	OnSystemFinished: UnrealEngineMulticastDelegate<(PSystem: ParticleSystemComponent) => void>;
 	AutoAttachParent: any;
 	AutoAttachSocketName: string;
 	AutoAttachLocationType: EAttachLocation;
-	AutoAttachLocationRule: AutoAttachLocationRule;
-	AutoAttachRotationRule: AutoAttachRotationRule;
-	AutoAttachScaleRule: AutoAttachScaleRule;
+	AutoAttachLocationRule: EAttachmentRule;
+	AutoAttachRotationRule: EAttachmentRule;
+	AutoAttachScaleRule: EAttachmentRule;
+	OnSystemFinished: UnrealEngineMulticastDelegate<(PSystem: ParticleSystemComponent) => void>;
 	static Load(ResourceName: string): ParticleSystemComponent;
 	static Find(Outer: UObject, ResourceName: string): ParticleSystemComponent;
 	static GetDefaultObject(): ParticleSystemComponent;
@@ -5939,8 +6403,9 @@ declare class ParticleSystemComponent extends PrimitiveComponent {
 	SetBeamSourcePoint(EmitterIndex: number,NewSourcePoint: Vector,SourceIndex: number): void;
 	SetBeamEndPoint(EmitterIndex: number,NewEndPoint: Vector): void;
 	SetAutoAttachParams(Parent: SceneComponent,SocketName: string,LocationType: EAttachLocation): void;
-	SetAutoAttachmentParameters(Parent: SceneComponent,SocketName: string,LocationRule: LocationRule,RotationRule: RotationRule,ScaleRule: ScaleRule): void;
+	SetAutoAttachmentParameters(Parent: SceneComponent,SocketName: string,LocationRule: EAttachmentRule,RotationRule: EAttachmentRule,ScaleRule: EAttachmentRule): void;
 	SetActorParameter(ParameterName: string,Param: Actor): void;
+	ReleaseToPool(): void;
 	GetNumActiveParticles(): number;
 	GetNamedMaterial(InName: string): MaterialInterface;
 	GetBeamTargetTangent(EmitterIndex: number,TargetIndex: number,OutTangentPoint?: Vector): {OutTangentPoint: Vector, $: boolean};
@@ -6000,12 +6465,15 @@ declare class EmitterCameraLensEffectBase extends Emitter {
 	static C(Other: UObject | any): EmitterCameraLensEffectBase;
 }
 
-declare type EInitialOscillatorOffset = 'EOO_OffsetRandom' | 'EOO_OffsetZero';
-declare var EInitialOscillatorOffset : { EOO_OffsetRandom:'EOO_OffsetRandom',EOO_OffsetZero:'EOO_OffsetZero', };
+declare type EInitialOscillatorOffset = 'EOO_OffsetRandom' | 'EOO_OffsetZero' | 'EOO_MAX';
+declare var EInitialOscillatorOffset : { EOO_OffsetRandom:'EOO_OffsetRandom',EOO_OffsetZero:'EOO_OffsetZero',EOO_MAX:'EOO_MAX', };
+declare type EOscillatorWaveform = 'SineWave' | 'PerlinNoise' | 'EOscillatorWaveform_MAX';
+declare var EOscillatorWaveform : { SineWave:'SineWave',PerlinNoise:'PerlinNoise',EOscillatorWaveform_MAX:'EOscillatorWaveform_MAX', };
 declare class FOscillator { 
 	Amplitude: number;
 	Frequency: number;
 	InitialOffset: EInitialOscillatorOffset;
+	Waveform: EOscillatorWaveform;
 	clone() : FOscillator;
 	static C(Other: UObject | any): FOscillator;
 }
@@ -6043,8 +6511,8 @@ declare class SupportedSubTrackInfo {
 	static C(Other: UObject | any): SupportedSubTrackInfo;
 }
 
-declare type ETrackActiveCondition = 'ETAC_Always' | 'ETAC_GoreEnabled' | 'ETAC_GoreDisabled';
-declare var ETrackActiveCondition : { ETAC_Always:'ETAC_Always',ETAC_GoreEnabled:'ETAC_GoreEnabled',ETAC_GoreDisabled:'ETAC_GoreDisabled', };
+declare type ETrackActiveCondition = 'ETAC_Always' | 'ETAC_GoreEnabled' | 'ETAC_GoreDisabled' | 'ETAC_MAX';
+declare var ETrackActiveCondition : { ETAC_Always:'ETAC_Always',ETAC_GoreEnabled:'ETAC_GoreEnabled',ETAC_GoreDisabled:'ETAC_GoreDisabled',ETAC_MAX:'ETAC_MAX', };
 declare class InterpTrack extends UObject { 
 	SubTracks: InterpTrack[];
 	SubTrackGroups: SubTrackGroup[];
@@ -6113,8 +6581,8 @@ declare class InterpGroupInst extends UObject {
 	static C(Other: UObject | any): InterpGroupInst;
 }
 
-declare type EInterpCurveMode = 'CIM_Linear' | 'CIM_CurveAuto' | 'CIM_Constant' | 'CIM_CurveUser' | 'CIM_CurveBreak' | 'CIM_CurveAutoClamped';
-declare var EInterpCurveMode : { CIM_Linear:'CIM_Linear',CIM_CurveAuto:'CIM_CurveAuto',CIM_Constant:'CIM_Constant',CIM_CurveUser:'CIM_CurveUser',CIM_CurveBreak:'CIM_CurveBreak',CIM_CurveAutoClamped:'CIM_CurveAutoClamped', };
+declare type EInterpCurveMode = 'CIM_Linear' | 'CIM_CurveAuto' | 'CIM_Constant' | 'CIM_CurveUser' | 'CIM_CurveBreak' | 'CIM_CurveAutoClamped' | 'CIM_MAX';
+declare var EInterpCurveMode : { CIM_Linear:'CIM_Linear',CIM_CurveAuto:'CIM_CurveAuto',CIM_Constant:'CIM_Constant',CIM_CurveUser:'CIM_CurveUser',CIM_CurveBreak:'CIM_CurveBreak',CIM_CurveAutoClamped:'CIM_CurveAutoClamped',CIM_MAX:'CIM_MAX', };
 declare class InterpCurvePointVector { 
 	InVal: number;
 	OutVal: Vector;
@@ -6146,8 +6614,8 @@ declare class InterpLookupTrack {
 	static C(Other: UObject | any): InterpLookupTrack;
 }
 
-declare type EInterpTrackMoveRotMode = 'IMR_Keyframed' | 'IMR_LookAtGroup' | 'IMR_Ignore';
-declare var EInterpTrackMoveRotMode : { IMR_Keyframed:'IMR_Keyframed',IMR_LookAtGroup:'IMR_LookAtGroup',IMR_Ignore:'IMR_Ignore', };
+declare type EInterpTrackMoveRotMode = 'IMR_Keyframed' | 'IMR_LookAtGroup' | 'IMR_Ignore' | 'IMR_MAX';
+declare var EInterpTrackMoveRotMode : { IMR_Keyframed:'IMR_Keyframed',IMR_LookAtGroup:'IMR_LookAtGroup',IMR_Ignore:'IMR_Ignore',IMR_MAX:'IMR_MAX', };
 declare class InterpTrackMove extends InterpTrack { 
 	PosTrack: InterpCurveVector;
 	EulerTrack: InterpCurveVector;
@@ -6179,8 +6647,8 @@ declare class InterpTrackInstMove extends InterpTrackInst {
 	static C(Other: UObject | any): InterpTrackInstMove;
 }
 
-declare type ECameraAnimPlaySpace = 'CameraLocal' | 'World' | 'UserDefined';
-declare var ECameraAnimPlaySpace : { CameraLocal:'CameraLocal',World:'World',UserDefined:'UserDefined', };
+declare type ECameraAnimPlaySpace = 'CameraLocal' | 'World' | 'UserDefined' | 'ECameraAnimPlaySpace_MAX';
+declare var ECameraAnimPlaySpace : { CameraLocal:'CameraLocal',World:'World',UserDefined:'UserDefined',ECameraAnimPlaySpace_MAX:'ECameraAnimPlaySpace_MAX', };
 declare class CameraAnimInst extends UObject { 
 	CamAnim: CameraAnim;
 	InterpGroupInst: InterpGroupInst;
@@ -6248,21 +6716,21 @@ declare class MeshBuildSettings {
 	bUseHighPrecisionTangentBasis: boolean;
 	bUseFullPrecisionUVs: boolean;
 	bGenerateLightmapUVs: boolean;
+	bGenerateDistanceFieldAsIfTwoSided: boolean;
 	MinLightmapResolution: number;
 	SrcLightmapIndex: number;
 	DstLightmapIndex: number;
 	BuildScale: number;
 	BuildScale3D: Vector;
 	DistanceFieldResolutionScale: number;
-	bGenerateDistanceFieldAsIfTwoSided: boolean;
 	DistanceFieldBias: number;
 	DistanceFieldReplacementMesh: StaticMesh;
 	clone() : MeshBuildSettings;
 	static C(Other: UObject | any): MeshBuildSettings;
 }
 
-declare type EMeshFeatureImportance = 'Off' | 'Lowest' | 'Low' | 'Normal' | 'High' | 'Highest';
-declare var EMeshFeatureImportance : { Off:'Off',Lowest:'Lowest',Low:'Low',Normal:'Normal',High:'High',Highest:'Highest', };
+declare type EMeshFeatureImportance = 'Off' | 'Lowest' | 'Low' | 'Normal' | 'High' | 'Highest' | 'EMeshFeatureImportance_MAX';
+declare var EMeshFeatureImportance : { Off:'Off',Lowest:'Lowest',Low:'Low',Normal:'Normal',High:'High',Highest:'Highest',EMeshFeatureImportance_MAX:'EMeshFeatureImportance_MAX', };
 declare class MeshReductionSettings { 
 	PercentTriangles: number;
 	MaxDeviation: number;
@@ -6288,11 +6756,21 @@ declare class StaticMeshSourceModel {
 	BuildSettings: MeshBuildSettings;
 	ReductionSettings: MeshReductionSettings;
 	LODDistance: number;
-	ScreenSize: number;
+	ScreenSize: PerPlatformFloat;
+	SourceImportFilename: string;
+	bImportWithBaseMesh: boolean;
 	clone() : StaticMeshSourceModel;
 	static C(Other: UObject | any): StaticMeshSourceModel;
 }
 
+declare class StaticMeshDescriptions extends UObject { 
+	static Load(ResourceName: string): StaticMeshDescriptions;
+	static Find(Outer: UObject, ResourceName: string): StaticMeshDescriptions;
+	static GetDefaultObject(): StaticMeshDescriptions;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshDescriptions;
+	static C(Other: UObject | any): StaticMeshDescriptions;
+}
+
 declare class MeshSectionInfoMap { 
 	Map: any;
 	clone() : MeshSectionInfoMap;
@@ -6339,32 +6817,13 @@ declare class StaticMeshSocket extends UObject {
 	static C(Other: UObject | any): StaticMeshSocket;
 }
 
-declare class NavCollisionCylinder { 
-	Offset: Vector;
-	Radius: number;
-	Height: number;
-	clone() : NavCollisionCylinder;
-	static C(Other: UObject | any): NavCollisionCylinder;
-}
-
-declare class NavCollisionBox { 
-	Offset: Vector;
-	Extent: Vector;
-	clone() : NavCollisionBox;
-	static C(Other: UObject | any): NavCollisionBox;
-}
-
-declare class NavCollision extends UObject { 
-	CylinderCollision: NavCollisionCylinder[];
-	BoxCollision: NavCollisionBox[];
-	AreaClass: UnrealEngineClass;
+declare class NavCollisionBase extends UObject { 
 	bIsDynamicObstacle: boolean;
-	bGatherConvexGeometry: boolean;
-	static Load(ResourceName: string): NavCollision;
-	static Find(Outer: UObject, ResourceName: string): NavCollision;
-	static GetDefaultObject(): NavCollision;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavCollision;
-	static C(Other: UObject | any): NavCollision;
+	static Load(ResourceName: string): NavCollisionBase;
+	static Find(Outer: UObject, ResourceName: string): NavCollisionBase;
+	static GetDefaultObject(): NavCollisionBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavCollisionBase;
+	static C(Other: UObject | any): NavCollisionBase;
 }
 
 declare class MeshSectionInfo { 
@@ -6409,26 +6868,28 @@ declare class JavascriptRawMesh {
 
 declare class StaticMesh extends UObject { 
 	SourceModels: StaticMeshSourceModel[];
+	MeshDescriptions: StaticMeshDescriptions;
 	SectionInfoMap: MeshSectionInfoMap;
+	OriginalSectionInfoMap: MeshSectionInfoMap;
 	LODGroup: string;
-	bAutoComputeLODScreenSize: boolean;
 	ImportVersion: number;
 	MaterialRemapIndexPerImportVersion: MaterialRemapIndex[];
 	LightmapUVVersion: number;
-	MinLOD: number;
+	bAutoComputeLODScreenSize: boolean;
 	Materials: MaterialInterface[];
+	MinLOD: PerPlatformInt;
+	LpvBiasMultiplier: number;
 	StaticMaterials: StaticMaterial[];
 	LightmapUVDensity: number;
 	LightMapResolution: number;
 	LightMapCoordinateIndex: number;
 	DistanceFieldSelfShadowBias: number;
-	bGenerateMeshDistanceField: boolean;
 	BodySetup: BodySetup;
 	LODForCollision: number;
+	bGenerateMeshDistanceField: boolean;
 	bStripComplexCollisionForConsole: boolean;
 	bHasNavigationData: boolean;
 	bSupportUniformlyDistributedSampling: boolean;
-	LpvBiasMultiplier: number;
 	bAllowCPUAccess: boolean;
 	AssetImportData: AssetImportData;
 	SourceFilePath: string;
@@ -6436,17 +6897,20 @@ declare class StaticMesh extends UObject {
 	ThumbnailInfo: ThumbnailInfo;
 	EditorCameraPosition: AssetEditorOrbitCameraPosition;
 	bCustomizedCollision: boolean;
+	LODForOccluderMesh: number;
 	Sockets: StaticMeshSocket[];
 	PositiveBoundsExtension: Vector;
 	NegativeBoundsExtension: Vector;
 	ExtendedBounds: BoxSphereBounds;
 	ElementToIgnoreForTexFactor: number;
 	AssetUserData: AssetUserData[];
-	NavCollision: NavCollision;
+	EditableMesh: UObject;
+	NavCollision: NavCollisionBase;
 	static Load(ResourceName: string): StaticMesh;
 	static Find(Outer: UObject, ResourceName: string): StaticMesh;
 	static GetDefaultObject(): StaticMesh;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMesh;
+	SetMaterial(MaterialIndex: number,NewMaterial: MaterialInterface): void;
 	GetNumSections(InLOD: number): number;
 	GetNumLODs(): number;
 	GetMaterialIndex(MaterialSlotName: string): number;
@@ -6479,9 +6943,9 @@ declare class CameraComponent extends SceneComponent {
 	bLockToHmd: boolean;
 	bUsePawnControlRotation: boolean;
 	ProjectionMode: ECameraProjectionMode;
+	CameraMesh: StaticMesh;
 	PostProcessBlendWeight: number;
 	PostProcessSettings: PostProcessSettings;
-	CameraMesh: StaticMesh;
 	bUseControllerViewRotation: boolean;
 	static Load(ResourceName: string): CameraComponent;
 	static Find(Outer: UObject, ResourceName: string): CameraComponent;
@@ -6496,6 +6960,7 @@ declare class CameraComponent extends SceneComponent {
 	SetFieldOfView(InFieldOfView: number): void;
 	SetConstraintAspectRatio(bInConstrainAspectRatio: boolean): void;
 	SetAspectRatio(InAspectRatio: number): void;
+	GetFilmbackText(): string;
 	GetCameraView(DeltaTime: number,DesiredView?: MinimalViewInfo): {DesiredView: MinimalViewInfo};
 	static C(Other: UObject | any): CameraComponent;
 }
@@ -6527,6 +6992,8 @@ declare class PlayerCameraManager extends Actor {
 	LastFrameCameraCache: CameraCacheEntry;
 	ViewTarget: TViewTarget;
 	PendingViewTarget: TViewTarget;
+	CameraCachePrivate: CameraCacheEntry;
+	LastFrameCameraCachePrivate: CameraCacheEntry;
 	ModifierList: CameraModifier[];
 	DefaultModifiers: UnrealEngineClass[];
 	FreeCamDistance: number;
@@ -6541,6 +7008,7 @@ declare class PlayerCameraManager extends Actor {
 	AnimCameraActor: CameraActor;
 	bIsOrthographic: boolean;
 	bDefaultConstrainAspectRatio: boolean;
+	bClientSimulatingViewTarget: boolean;
 	bUseClientSideCameraUpdates: boolean;
 	bGameCameraCutThisFrame: boolean;
 	ViewPitchMin: number;
@@ -6627,6 +7095,9 @@ declare class CheatManager extends UObject {
 	ViewPlayer(S: string): void;
 	ViewClass(DesiredClass: UnrealEngineClass): void;
 	ViewActor(ActorName: string): void;
+	UpdateSafeArea(): void;
+	ToggleServerStatReplicatorUpdateStatNet(): void;
+	ToggleServerStatReplicatorClientOverwrite(): void;
 	ToggleDebugCamera(): void;
 	ToggleAILogging(): void;
 	TestCollisionDistance(): void;
@@ -6634,14 +7105,13 @@ declare class CheatManager extends UObject {
 	Summon(ClassName: string): void;
 	StreamLevelOut(PackageName: string): void;
 	StreamLevelIn(PackageName: string): void;
+	SpawnServerStatReplicator(): void;
 	Slomo(NewTimeDilation: number): void;
 	SetWorldOrigin(): void;
-	SetNavDrawDistance(DrawDistance: number): void;
 	SetMouseSensitivityToDefault(): void;
 	ServerToggleAILogging(): void;
 	ReceiveInitCheatManager(): void;
 	ReceiveEndPlay(): void;
-	RebuildNavigation(): void;
 	PlayersOnly(): void;
 	OnlyLoadLevel(PackageName: string): void;
 	LogLoc(): void;
@@ -6658,6 +7128,7 @@ declare class CheatManager extends UObject {
 	DumpChatState(): void;
 	DisableDebugCamera(): void;
 	DestroyTarget(): void;
+	DestroyServerStatReplicator(): void;
 	DestroyPawns(aClass: UnrealEngineClass): void;
 	DestroyAllPawnsExceptTarget(): void;
 	DestroyAll(aClass: UnrealEngineClass): void;
@@ -6700,7 +7171,7 @@ declare class PlayerInput extends UObject {
 	static Find(Outer: UObject, ResourceName: string): PlayerInput;
 	static GetDefaultObject(): PlayerInput;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlayerInput;
-	SetMouseSensitivity(Sensitivity: number): void;
+	SetMouseSensitivity(SensitivityX: number,SensitivityY: number): void;
 	SetBind(BindName: string,Command: string): void;
 	InvertAxisKey(AxisKey: Key): void;
 	InvertAxis(AxisName: string): void;
@@ -6725,18 +7196,18 @@ declare class ForceFeedbackChannelDetails {
 	static C(Other: UObject | any): ForceFeedbackChannelDetails;
 }
 
-declare type EAttenuationDistanceModel = 'Linear' | 'Logarithmic' | 'Inverse' | 'LogReverse' | 'NaturalSound' | 'Custom';
-declare var EAttenuationDistanceModel : { Linear:'Linear',Logarithmic:'Logarithmic',Inverse:'Inverse',LogReverse:'LogReverse',NaturalSound:'NaturalSound',Custom:'Custom', };
-declare type EAttenuationShape = 'Sphere' | 'Capsule' | 'Box' | 'Cone';
-declare var EAttenuationShape : { Sphere:'Sphere',Capsule:'Capsule',Box:'Box',Cone:'Cone', };
+declare type EAttenuationDistanceModel = 'Linear' | 'Logarithmic' | 'Inverse' | 'LogReverse' | 'NaturalSound' | 'Custom' | 'EAttenuationDistanceModel_MAX';
+declare var EAttenuationDistanceModel : { Linear:'Linear',Logarithmic:'Logarithmic',Inverse:'Inverse',LogReverse:'LogReverse',NaturalSound:'NaturalSound',Custom:'Custom',EAttenuationDistanceModel_MAX:'EAttenuationDistanceModel_MAX', };
+declare type EAttenuationShape = 'Sphere' | 'Capsule' | 'Box' | 'Cone' | 'EAttenuationShape_MAX';
+declare var EAttenuationShape : { Sphere:'Sphere',Capsule:'Capsule',Box:'Box',Cone:'Cone',EAttenuationShape_MAX:'EAttenuationShape_MAX', };
 declare class BaseAttenuationSettings { 
-	DistanceAlgorithm: DistanceAlgorithm;
-	CustomAttenuationCurve: RuntimeFloatCurve;
+	DistanceAlgorithm: EAttenuationDistanceModel;
 	AttenuationShape: EAttenuationShape;
 	dBAttenuationAtMax: number;
 	AttenuationShapeExtents: Vector;
 	ConeOffset: number;
 	FalloffDistance: number;
+	CustomAttenuationCurve: RuntimeFloatCurve;
 	clone() : BaseAttenuationSettings;
 	static C(Other: UObject | any): BaseAttenuationSettings;
 }
@@ -6760,6 +7231,7 @@ declare class ForceFeedbackComponent extends SceneComponent {
 	bAutoDestroy: boolean;
 	bStopWhenOwnerDestroyed: boolean;
 	bLooping: boolean;
+	bIgnoreTimeDilation: boolean;
 	bOverrideAttenuation: boolean;
 	IntensityMultiplier: number;
 	AttenuationSettings: ForceFeedbackAttenuation;
@@ -6813,8 +7285,26 @@ declare class Property extends Field {
 	static C(Other: UObject | any): Property;
 }
 
+declare class Channel extends UObject { 
+	Connection: NetConnection;
+	static Load(ResourceName: string): Channel;
+	static Find(Outer: UObject, ResourceName: string): Channel;
+	static GetDefaultObject(): Channel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Channel;
+	static C(Other: UObject | any): Channel;
+}
+
+declare class ReplicationDriver extends UObject { 
+	static Load(ResourceName: string): ReplicationDriver;
+	static Find(Outer: UObject, ResourceName: string): ReplicationDriver;
+	static GetDefaultObject(): ReplicationDriver;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReplicationDriver;
+	static C(Other: UObject | any): ReplicationDriver;
+}
+
 declare class NetDriver extends UObject { 
 	NetConnectionClassName: string;
+	ReplicationDriverClassName: string;
 	MaxDownloadSize: number;
 	bClampListenServerTickRate: boolean;
 	NetServerMaxTickRate: number;
@@ -6831,11 +7321,15 @@ declare class NetDriver extends UObject {
 	ServerConnection: NetConnection;
 	ClientConnections: NetConnection[];
 	World: World;
+	WorldPackage: Package;
 	NetConnectionClass: UnrealEngineClass;
+	ReplicationDriverClass: UnrealEngineClass;
 	RoleProperty: Property;
 	RemoteRoleProperty: Property;
 	NetDriverName: string;
+	ActorChannelPool: Channel[];
 	Time: number;
+	ReplicationDriver: ReplicationDriver;
 	static Load(ResourceName: string): NetDriver;
 	static Find(Outer: UObject, ResourceName: string): NetDriver;
 	static GetDefaultObject(): NetDriver;
@@ -6851,18 +7345,10 @@ declare class PackageMap extends UObject {
 	static C(Other: UObject | any): PackageMap;
 }
 
-declare class Channel extends UObject { 
-	Connection: NetConnection;
-	static Load(ResourceName: string): Channel;
-	static Find(Outer: UObject, ResourceName: string): Channel;
-	static GetDefaultObject(): Channel;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Channel;
-	static C(Other: UObject | any): Channel;
-}
-
 declare class NetConnection extends Player { 
 	Children: ChildConnection[];
 	Driver: NetDriver;
+	PackageMapClass: UnrealEngineClass;
 	PackageMap: PackageMap;
 	OpenChannels: Channel[];
 	SentTemporaries: Actor[];
@@ -6880,11 +7366,18 @@ declare class NetConnection extends Player {
 	static C(Other: UObject | any): NetConnection;
 }
 
-declare type EMouseCursor = 'None' | 'Default' | 'TextEditBeam' | 'ResizeLeftRight' | 'ResizeUpDown' | 'ResizeSouthEast' | 'ResizeSouthWest' | 'CardinalCross' | 'Crosshairs' | 'Hand' | 'GrabHand' | 'GrabHandClosed' | 'SlashedCircle' | 'EyeDropper';
-declare var EMouseCursor : { None:'None',Default:'Default',TextEditBeam:'TextEditBeam',ResizeLeftRight:'ResizeLeftRight',ResizeUpDown:'ResizeUpDown',ResizeSouthEast:'ResizeSouthEast',ResizeSouthWest:'ResizeSouthWest',CardinalCross:'CardinalCross',Crosshairs:'Crosshairs',Hand:'Hand',GrabHand:'GrabHand',GrabHandClosed:'GrabHandClosed',SlashedCircle:'SlashedCircle',EyeDropper:'EyeDropper', };
-declare type EControllerAnalogStick = 'CAS_LeftStick' | 'CAS_RightStick';
-declare var EControllerAnalogStick : { CAS_LeftStick:'CAS_LeftStick',CAS_RightStick:'CAS_RightStick', };
+declare type EMouseCursor = 'None' | 'Default' | 'TextEditBeam' | 'ResizeLeftRight' | 'ResizeUpDown' | 'ResizeSouthEast' | 'ResizeSouthWest' | 'CardinalCross' | 'Crosshairs' | 'Hand' | 'GrabHand' | 'GrabHandClosed' | 'SlashedCircle' | 'EyeDropper' | 'EMouseCursor_MAX';
+declare var EMouseCursor : { None:'None',Default:'Default',TextEditBeam:'TextEditBeam',ResizeLeftRight:'ResizeLeftRight',ResizeUpDown:'ResizeUpDown',ResizeSouthEast:'ResizeSouthEast',ResizeSouthWest:'ResizeSouthWest',CardinalCross:'CardinalCross',Crosshairs:'Crosshairs',Hand:'Hand',GrabHand:'GrabHand',GrabHandClosed:'GrabHandClosed',SlashedCircle:'SlashedCircle',EyeDropper:'EyeDropper',EMouseCursor_MAX:'EMouseCursor_MAX', };
+declare class CachedKeyToActionInfo { 
+	PlayerInput: PlayerInput;
+	clone() : CachedKeyToActionInfo;
+	static C(Other: UObject | any): CachedKeyToActionInfo;
+}
+
+declare type EControllerAnalogStick = 'CAS_LeftStick' | 'CAS_RightStick' | 'CAS_MAX';
+declare var EControllerAnalogStick : { CAS_LeftStick:'CAS_LeftStick',CAS_RightStick:'CAS_RightStick',CAS_MAX:'CAS_MAX', };
 declare class InputComponent extends ActorComponent { 
+	CachedKeyToActionInfo: CachedKeyToActionInfo[];
 	static Load(ResourceName: string): InputComponent;
 	static Find(Outer: UObject, ResourceName: string): InputComponent;
 	static GetDefaultObject(): InputComponent;
@@ -6944,18 +7437,9 @@ declare class SphereComponent extends ShapeComponent {
 	static C(Other: UObject | any): SphereComponent;
 }
 
-declare class PackedNormal { 
-	X: number;
-	Y: number;
-	Z: number;
-	W: number;
-	clone() : PackedNormal;
-	static C(Other: UObject | any): PackedNormal;
-}
-
 declare class PaintedVertex { 
 	Position: Vector;
-	Normal: PackedNormal;
+	Normal: Vector4;
 	Color: Color;
 	clone() : PaintedVertex;
 	static C(Other: UObject | any): PaintedVertex;
@@ -6995,13 +7479,16 @@ declare class ProcMeshVertex {
 	Tangent: ProcMeshTangent;
 	Color: Color;
 	UV0: Vector2D;
+	UV1: Vector2D;
+	UV2: Vector2D;
+	UV3: Vector2D;
 	clone() : ProcMeshVertex;
 	static C(Other: UObject | any): ProcMeshVertex;
 }
 
 declare class ProcMeshSection { 
 	ProcVertexBuffer: ProcMeshVertex[];
-	ProcIndexBuffer: number[];
+	ProcIndexBuffer: any[];
 	SectionLocalBox: Box;
 	bEnableCollision: boolean;
 	bSectionVisible: boolean;
@@ -7009,8 +7496,8 @@ declare class ProcMeshSection {
 	static C(Other: UObject | any): ProcMeshSection;
 }
 
-declare type EProcMeshSliceCapOption = 'NoCap' | 'CreateNewSectionForCap' | 'UseLastSectionForCap';
-declare var EProcMeshSliceCapOption : { NoCap:'NoCap',CreateNewSectionForCap:'CreateNewSectionForCap',UseLastSectionForCap:'UseLastSectionForCap', };
+declare type EProcMeshSliceCapOption = 'NoCap' | 'CreateNewSectionForCap' | 'UseLastSectionForCap' | 'EProcMeshSliceCapOption_MAX';
+declare var EProcMeshSliceCapOption : { NoCap:'NoCap',CreateNewSectionForCap:'CreateNewSectionForCap',UseLastSectionForCap:'UseLastSectionForCap',EProcMeshSliceCapOption_MAX:'EProcMeshSliceCapOption_MAX', };
 declare class ProceduralMeshComponent extends MeshComponent { 
 	bUseComplexAsSimpleCollision: boolean;
 	bUseAsyncCooking: boolean;
@@ -7023,75 +7510,79 @@ declare class ProceduralMeshComponent extends MeshComponent {
 	static Find(Outer: UObject, ResourceName: string): ProceduralMeshComponent;
 	static GetDefaultObject(): ProceduralMeshComponent;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralMeshComponent;
-	UpdateMeshSection_LinearColor(SectionIndex: number,Vertices: Vector[],Normals: Vector[],UV0: Vector2D[],VertexColors: LinearColor[],Tangents: ProcMeshTangent[]): void;
+	UpdateMeshSection_LinearColor(SectionIndex: number,Vertices: Vector[],Normals: Vector[],UV0: Vector2D[],UV1: Vector2D[],UV2: Vector2D[],UV3: Vector2D[],VertexColors: LinearColor[],Tangents: ProcMeshTangent[]): void;
 	UpdateMeshSection(SectionIndex: number,Vertices: Vector[],Normals: Vector[],UV0: Vector2D[],VertexColors: Color[],Tangents: ProcMeshTangent[]): void;
 	SetMeshSectionVisible(SectionIndex: number,bNewVisibility: boolean): void;
 	IsMeshSectionVisible(SectionIndex: number): boolean;
 	GetNumSections(): number;
-	CreateMeshSection_LinearColor(SectionIndex: number,Vertices: Vector[],Triangles: number[],Normals: Vector[],UV0: Vector2D[],VertexColors: LinearColor[],Tangents: ProcMeshTangent[],bCreateCollision: boolean): void;
+	CreateMeshSection_LinearColor(SectionIndex: number,Vertices: Vector[],Triangles: number[],Normals: Vector[],UV0: Vector2D[],UV1: Vector2D[],UV2: Vector2D[],UV3: Vector2D[],VertexColors: LinearColor[],Tangents: ProcMeshTangent[],bCreateCollision: boolean): void;
 	CreateMeshSection(SectionIndex: number,Vertices: Vector[],Triangles: number[],Normals: Vector[],UV0: Vector2D[],VertexColors: Color[],Tangents: ProcMeshTangent[],bCreateCollision: boolean): void;
 	ClearMeshSection(SectionIndex: number): void;
 	ClearCollisionConvexMeshes(): void;
 	ClearAllMeshSections(): void;
 	AddCollisionConvexMesh(ConvexVerts: Vector[]): void;
 	static C(Other: UObject | any): ProceduralMeshComponent;
-	SliceProceduralMesh(PlanePosition: Vector,PlaneNormal: Vector,bCreateOtherHalf: boolean,OutOtherHalfProcMesh?: ProceduralMeshComponent,CapOption?: CapOption,CapMaterial?: MaterialInterface): {OutOtherHalfProcMesh: ProceduralMeshComponent};
-	static SliceProceduralMesh(InProcMesh: ProceduralMeshComponent,PlanePosition: Vector,PlaneNormal: Vector,bCreateOtherHalf: boolean,OutOtherHalfProcMesh?: ProceduralMeshComponent,CapOption?: CapOption,CapMaterial?: MaterialInterface): {OutOtherHalfProcMesh: ProceduralMeshComponent};
+	GetSectionFromProceduralMesh(SectionIndex: number,Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
+	SliceProceduralMesh(PlanePosition: Vector,PlaneNormal: Vector,bCreateOtherHalf: boolean,OutOtherHalfProcMesh?: ProceduralMeshComponent,CapOption?: EProcMeshSliceCapOption,CapMaterial?: MaterialInterface): {OutOtherHalfProcMesh: ProceduralMeshComponent};
+	static GetSectionFromProceduralMesh(InProcMesh: ProceduralMeshComponent,SectionIndex: number,Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
+	static SliceProceduralMesh(InProcMesh: ProceduralMeshComponent,PlanePosition: Vector,PlaneNormal: Vector,bCreateOtherHalf: boolean,OutOtherHalfProcMesh?: ProceduralMeshComponent,CapOption?: EProcMeshSliceCapOption,CapMaterial?: MaterialInterface): {OutOtherHalfProcMesh: ProceduralMeshComponent};
 }
 
-declare type EVertexPaintAxis = 'X' | 'Y' | 'Z';
-declare var EVertexPaintAxis : { X:'X',Y:'Y',Z:'Z', };
+declare type EVertexPaintAxis = 'X' | 'Y' | 'Z' | 'EVertexPaintAxis_MAX';
+declare var EVertexPaintAxis : { X:'X',Y:'Y',Z:'Z',EVertexPaintAxis_MAX:'EVertexPaintAxis_MAX', };
 declare class StaticMeshComponent extends MeshComponent { 
 	ForcedLodModel: number;
 	PreviousLODLevel: number;
-	bOverrideMinLOD: boolean;
 	MinLOD: number;
+	SubDivisionStepSize: number;
 	StaticMesh: StaticMesh;
-	bOverrideWireframeColor: boolean;
 	WireframeColorOverride: Color;
 	SelectedEditorSection: number;
 	SelectedEditorMaterial: number;
 	SectionIndexPreview: number;
 	MaterialIndexPreview: number;
 	StaticMeshImportVersion: number;
+	bOverrideWireframeColor: boolean;
+	bOverrideMinLOD: boolean;
 	bOverrideNavigationExport: boolean;
 	bForceNavigationObstacle: boolean;
 	bDisallowMeshPaintPerInstance: boolean;
 	bIgnoreInstanceForTextureStreaming: boolean;
 	bOverrideLightMapRes: boolean;
-	OverriddenLightMapRes: number;
 	bCastDistanceFieldIndirectShadow: boolean;
-	DistanceFieldIndirectShadowMinVisibility: number;
 	bOverrideDistanceFieldSelfShadowBias: boolean;
+	bUseSubDivisions: boolean;
+	bUseDefaultCollision: boolean;
+	bCustomOverrideVertexColorPerLOD: boolean;
+	bDisplayVertexColors: boolean;
+	bReverseCulling: boolean;
+	OverriddenLightMapRes: number;
+	DistanceFieldIndirectShadowMinVisibility: number;
 	DistanceFieldSelfShadowBias: number;
 	StreamingDistanceMultiplier: number;
-	SubDivisionStepSize: number;
-	bUseSubDivisions: boolean;
 	IrrelevantLights: Guid[];
-	LODData: StaticMeshComponentLODInfo[];
+	LodData: StaticMeshComponentLODInfo[];
 	StreamingTextureData: StreamingTextureBuildInfo[];
-	bUseDefaultCollision: boolean;
 	StaticMeshDerivedDataKey: string;
 	MaterialStreamingRelativeBoxes: any[];
-	bCustomOverrideVertexColorPerLOD: boolean;
-	bDisplayVertexColors: boolean;
 	LightmassSettings: LightmassPrimitiveSettings;
 	static Load(ResourceName: string): StaticMeshComponent;
 	static Find(Outer: UObject, ResourceName: string): StaticMeshComponent;
 	static GetDefaultObject(): StaticMeshComponent;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshComponent;
 	SetStaticMesh(NewMesh: StaticMesh): boolean;
+	SetReverseCulling(ReverseCulling: boolean): void;
 	SetForcedLodModel(NewForcedLodModel: number): void;
 	SetDistanceFieldSelfShadowBias(NewValue: number): void;
 	OnRep_StaticMesh(OldStaticMesh: StaticMesh): void;
 	GetLocalBounds(Min?: Vector,Max?: Vector): {Min: Vector, Max: Vector};
 	static C(Other: UObject | any): StaticMeshComponent;
 	CopyProceduralMeshFromStaticMeshComponent(LODIndex: number,ProcMeshComponent: ProceduralMeshComponent,bCreateCollision: boolean): void;
-	PaintVerticesLerpAlongAxis(StartColor: LinearColor,EndColor: LinearColor,Axis: Axis,bConvertToSRGB: boolean): void;
+	PaintVerticesLerpAlongAxis(StartColor: LinearColor,EndColor: LinearColor,Axis: EVertexPaintAxis,bConvertToSRGB: boolean): void;
 	PaintVerticesSingleColor(FillColor: LinearColor,bConvertToSRGB: boolean): void;
 	RemovePaintedVertices(): void;
 	static CopyProceduralMeshFromStaticMeshComponent(StaticMeshComponent: StaticMeshComponent,LODIndex: number,ProcMeshComponent: ProceduralMeshComponent,bCreateCollision: boolean): void;
-	static PaintVerticesLerpAlongAxis(StaticMeshComponent: StaticMeshComponent,StartColor: LinearColor,EndColor: LinearColor,Axis: Axis,bConvertToSRGB: boolean): void;
+	static PaintVerticesLerpAlongAxis(StaticMeshComponent: StaticMeshComponent,StartColor: LinearColor,EndColor: LinearColor,Axis: EVertexPaintAxis,bConvertToSRGB: boolean): void;
 	static PaintVerticesSingleColor(StaticMeshComponent: StaticMeshComponent,FillColor: LinearColor,bConvertToSRGB: boolean): void;
 	static RemovePaintedVertices(StaticMeshComponent: StaticMeshComponent): void;
 }
@@ -7119,10 +7610,10 @@ declare class SpectatorPawn extends DefaultPawn {
 	static C(Other: UObject | any): SpectatorPawn;
 }
 
-declare type EControllerHand = 'Left' | 'Right' | 'AnyHand' | 'Pad' | 'ExternalCamera' | 'Gun' | 'Special_1' | 'Special_2' | 'Special_3' | 'Special_4' | 'Special_5' | 'Special_6' | 'Special_7' | 'Special_8' | 'Special_9';
-declare var EControllerHand : { Left:'Left',Right:'Right',AnyHand:'AnyHand',Pad:'Pad',ExternalCamera:'ExternalCamera',Gun:'Gun',Special_1:'Special_1',Special_2:'Special_2',Special_3:'Special_3',Special_4:'Special_4',Special_5:'Special_5',Special_6:'Special_6',Special_7:'Special_7',Special_8:'Special_8',Special_9:'Special_9', };
-declare type EViewTargetBlendFunction = 'VTBlend_Linear' | 'VTBlend_Cubic' | 'VTBlend_EaseIn' | 'VTBlend_EaseOut' | 'VTBlend_EaseInOut';
-declare var EViewTargetBlendFunction : { VTBlend_Linear:'VTBlend_Linear',VTBlend_Cubic:'VTBlend_Cubic',VTBlend_EaseIn:'VTBlend_EaseIn',VTBlend_EaseOut:'VTBlend_EaseOut',VTBlend_EaseInOut:'VTBlend_EaseInOut', };
+declare type EControllerHand = 'Left' | 'Right' | 'AnyHand' | 'Pad' | 'ExternalCamera' | 'Gun' | 'Special_1' | 'Special_2' | 'Special_3' | 'Special_4' | 'Special_5' | 'Special_6' | 'Special_7' | 'Special_8' | 'Special_9' | 'Special_10' | 'Special_11' | 'ControllerHand_Count' | 'EControllerHand_MAX';
+declare var EControllerHand : { Left:'Left',Right:'Right',AnyHand:'AnyHand',Pad:'Pad',ExternalCamera:'ExternalCamera',Gun:'Gun',Special_1:'Special_1',Special_2:'Special_2',Special_3:'Special_3',Special_4:'Special_4',Special_5:'Special_5',Special_6:'Special_6',Special_7:'Special_7',Special_8:'Special_8',Special_9:'Special_9',Special_10:'Special_10',Special_11:'Special_11',ControllerHand_Count:'ControllerHand_Count',EControllerHand_MAX:'EControllerHand_MAX', };
+declare type EViewTargetBlendFunction = 'VTBlend_Linear' | 'VTBlend_Cubic' | 'VTBlend_EaseIn' | 'VTBlend_EaseOut' | 'VTBlend_EaseInOut' | 'VTBlend_MAX';
+declare var EViewTargetBlendFunction : { VTBlend_Linear:'VTBlend_Linear',VTBlend_Cubic:'VTBlend_Cubic',VTBlend_EaseIn:'VTBlend_EaseIn',VTBlend_EaseOut:'VTBlend_EaseOut',VTBlend_EaseInOut:'VTBlend_EaseInOut',VTBlend_MAX:'VTBlend_MAX', };
 declare class Visual extends UObject { 
 	static Load(ResourceName: string): Visual;
 	static Find(Outer: UObject, ResourceName: string): Visual;
@@ -7137,13 +7628,13 @@ declare class PanelWidget extends Widget {
 	static Find(Outer: UObject, ResourceName: string): PanelWidget;
 	static GetDefaultObject(): PanelWidget;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PanelWidget;
-	RemoveChildAt(Index: number): boolean;
+	RemoveChildAt(index: number): boolean;
 	RemoveChild(Content: Widget): boolean;
 	HasChild(Content: Widget): boolean;
 	HasAnyChildren(): boolean;
 	GetChildrenCount(): number;
 	GetChildIndex(Content: Widget): number;
-	GetChildAt(Index: number): Widget;
+	GetChildAt(index: number): Widget;
 	ClearChildren(): void;
 	AddChild(Content: Widget): PanelSlot;
 	static C(Other: UObject | any): PanelWidget;
@@ -7159,10 +7650,8 @@ declare class PanelSlot extends Visual {
 	static C(Other: UObject | any): PanelSlot;
 }
 
-declare type ESlateVisibility = 'Visible' | 'Collapsed' | 'Hidden' | 'HitTestInvisible' | 'SelfHitTestInvisible';
-declare var ESlateVisibility : { Visible:'Visible',Collapsed:'Collapsed',Hidden:'Hidden',HitTestInvisible:'HitTestInvisible',SelfHitTestInvisible:'SelfHitTestInvisible', };
-declare type EWidgetClipping = 'Inherit' | 'ClipToBounds' | 'ClipToBoundsWithoutIntersecting' | 'ClipToBoundsAlways' | 'OnDemand';
-declare var EWidgetClipping : { Inherit:'Inherit',ClipToBounds:'ClipToBounds',ClipToBoundsWithoutIntersecting:'ClipToBoundsWithoutIntersecting',ClipToBoundsAlways:'ClipToBoundsAlways',OnDemand:'OnDemand', };
+declare type ESlateVisibility = 'Visible' | 'Collapsed' | 'Hidden' | 'HitTestInvisible' | 'SelfHitTestInvisible' | 'ESlateVisibility_MAX';
+declare var ESlateVisibility : { Visible:'Visible',Collapsed:'Collapsed',Hidden:'Hidden',HitTestInvisible:'HitTestInvisible',SelfHitTestInvisible:'SelfHitTestInvisible',ESlateVisibility_MAX:'ESlateVisibility_MAX', };
 declare class WidgetTransform { 
 	Translation: Vector2D;
 	Scale: Vector2D;
@@ -7172,12 +7661,17 @@ declare class WidgetTransform {
 	static C(Other: UObject | any): WidgetTransform;
 }
 
-declare type EUINavigationRule = 'Escape' | 'Explicit' | 'Wrap' | 'Stop' | 'Custom' | 'Invalid';
-declare var EUINavigationRule : { Escape:'Escape',Explicit:'Explicit',Wrap:'Wrap',Stop:'Stop',Custom:'Custom',Invalid:'Invalid', };
+declare type EWidgetClipping = 'Inherit' | 'ClipToBounds' | 'ClipToBoundsWithoutIntersecting' | 'ClipToBoundsAlways' | 'OnDemand' | 'EWidgetClipping_MAX';
+declare var EWidgetClipping : { Inherit:'Inherit',ClipToBounds:'ClipToBounds',ClipToBoundsWithoutIntersecting:'ClipToBoundsWithoutIntersecting',ClipToBoundsAlways:'ClipToBoundsAlways',OnDemand:'OnDemand',EWidgetClipping_MAX:'EWidgetClipping_MAX', };
+declare type EUINavigationRule = 'Escape' | 'Explicit' | 'Wrap' | 'Stop' | 'Custom' | 'CustomBoundary' | 'Invalid' | 'EUINavigationRule_MAX';
+declare var EUINavigationRule : { Escape:'Escape',Explicit:'Explicit',Wrap:'Wrap',Stop:'Stop',Custom:'Custom',CustomBoundary:'CustomBoundary',Invalid:'Invalid',EUINavigationRule_MAX:'EUINavigationRule_MAX', };
+declare type EUINavigation = 'Left' | 'Right' | 'Up' | 'Down' | 'Next' | 'Previous' | 'Num' | 'Invalid' | 'EUINavigation_MAX';
+declare var EUINavigation : { Left:'Left',Right:'Right',Up:'Up',Down:'Down',Next:'Next',Previous:'Previous',Num:'Num',Invalid:'Invalid',EUINavigation_MAX:'EUINavigation_MAX', };
 declare class WidgetNavigationData { 
-	Rule: Rule;
+	Rule: EUINavigationRule;
 	WidgetToFocus: string;
 	Widget: any;
+	CustomDelegate: UnrealEngineDelegate<(Navigation: EUINavigation) => Widget>;
 	clone() : WidgetNavigationData;
 	static C(Other: UObject | any): WidgetNavigationData;
 }
@@ -7199,14 +7693,30 @@ declare class WidgetNavigation extends UObject {
 declare class PropertyPathSegment { 
 	Name: string;
 	ArrayIndex: number;
-	Struct: Struct;
+	struct: Struct;
 	Field: Field;
 	clone() : PropertyPathSegment;
 	static C(Other: UObject | any): PropertyPathSegment;
 }
 
-declare class DynamicPropertyPath { 
+declare class UFunction extends Struct { 
+	static Load(ResourceName: string): UFunction;
+	static Find(Outer: UObject, ResourceName: string): UFunction;
+	static GetDefaultObject(): UFunction;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UFunction;
+	static C(Other: UObject | any): UFunction;
+	GetFunctionParmsSize(): number;
+	static GetFunctionParmsSize(UFunction: UFunction): number;
+}
+
+declare class CachedPropertyPath { 
 	Segments: PropertyPathSegment[];
+	CachedFunction: UFunction;
+	clone() : CachedPropertyPath;
+	static C(Other: UObject | any): CachedPropertyPath;
+}
+
+declare class DynamicPropertyPath extends CachedPropertyPath { 
 	clone() : DynamicPropertyPath;
 	static C(Other: UObject | any): DynamicPropertyPath;
 }
@@ -7224,47 +7734,133 @@ declare class PropertyBinding extends UObject {
 
 declare type EWidgetDesignFlags = 'None' | 'Designing' | 'ShowOutline' | 'ExecutePreConstruct' | 'EWidgetDesignFlags_MAX';
 declare var EWidgetDesignFlags : { None:'None',Designing:'Designing',ShowOutline:'ShowOutline',ExecutePreConstruct:'ExecutePreConstruct',EWidgetDesignFlags_MAX:'EWidgetDesignFlags_MAX', };
-declare type EUINavigation = 'Left' | 'Right' | 'Up' | 'Down' | 'Next' | 'Previous' | 'Num' | 'Invalid';
-declare var EUINavigation : { Left:'Left',Right:'Right',Up:'Up',Down:'Down',Next:'Next',Previous:'Previous',Num:'Num',Invalid:'Invalid', };
-declare class Geometry { 
-	clone() : Geometry;
-	static C(Other: UObject | any): Geometry;
-	CenterOf(): Vector2D;
-	FindClosestPointOnGeom(TestPoint: Vector2D): Vector2D;
-	AbsoluteToLocal(AbsoluteCoordinate: Vector2D): Vector2D;
-	GetAbsoluteSize(): Vector2D;
-	GetLocalSize(): Vector2D;
-	IsUnderLocation(AbsoluteCoordinate: Vector2D): boolean;
-	LocalToAbsolute(LocalCoordinate: Vector2D): Vector2D;
-	static CenterOf(Geom: Geometry): Vector2D;
-	static FindClosestPointOnGeom(Geom: Geometry,TestPoint: Vector2D): Vector2D;
-	static AbsoluteToLocal(Geometry: Geometry,AbsoluteCoordinate: Vector2D): Vector2D;
-	static GetAbsoluteSize(Geometry: Geometry): Vector2D;
-	static GetLocalSize(Geometry: Geometry): Vector2D;
-	static IsUnderLocation(Geometry: Geometry,AbsoluteCoordinate: Vector2D): boolean;
-	static LocalToAbsolute(Geometry: Geometry,LocalCoordinate: Vector2D): Vector2D;
-}
-
-declare class JavascriptSlateWidget { 
-	clone() : JavascriptSlateWidget;
-	static C(Other: UObject | any): JavascriptSlateWidget;
-	EditorAddModalWindow(): void;
-	AddWindow(bShowImmediately: boolean): void;
-	AddWindowAsNativeChild(RootWindow: JavascriptSlateWidget): void;
-	static EditorAddModalWindow(Widget: JavascriptSlateWidget): void;
-	static AddWindow(NewWindow: JavascriptSlateWidget,bShowImmediately: boolean): void;
-	static AddWindowAsNativeChild(NewWindow: JavascriptSlateWidget,RootWindow: JavascriptSlateWidget): void;
-	static CreateLogListingWidget(InLogName: string): JavascriptSlateWidget;
-	static GetRootWindow(): JavascriptSlateWidget;
+declare class ScriptViewportClient extends UObject { 
+	static Load(ResourceName: string): ScriptViewportClient;
+	static Find(Outer: UObject, ResourceName: string): ScriptViewportClient;
+	static GetDefaultObject(): ScriptViewportClient;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScriptViewportClient;
+	static C(Other: UObject | any): ScriptViewportClient;
 }
 
-declare type EHorizontalAlignment = 'HAlign_Fill' | 'HAlign_Left' | 'HAlign_Center' | 'HAlign_Right';
-declare var EHorizontalAlignment : { HAlign_Fill:'HAlign_Fill',HAlign_Left:'HAlign_Left',HAlign_Center:'HAlign_Center',HAlign_Right:'HAlign_Right', };
-declare type EVerticalAlignment = 'VAlign_Fill' | 'VAlign_Top' | 'VAlign_Center' | 'VAlign_Bottom';
-declare var EVerticalAlignment : { VAlign_Fill:'VAlign_Fill',VAlign_Top:'VAlign_Top',VAlign_Center:'VAlign_Center',VAlign_Bottom:'VAlign_Bottom', };
-declare class BorderSlot extends PanelSlot { 
-	Padding: Margin;
-	HorizontalAlignment: EHorizontalAlignment;
+declare class Console extends UObject { 
+	ConsoleTargetPlayer: LocalPlayer;
+	DefaultTexture_Black: Texture2D;
+	DefaultTexture_White: Texture2D;
+	HistoryBuffer: string[];
+	static Load(ResourceName: string): Console;
+	static Find(Outer: UObject, ResourceName: string): Console;
+	static GetDefaultObject(): Console;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Console;
+	static C(Other: UObject | any): Console;
+}
+
+declare class DebugDisplayProperty { 
+	Obj: UObject;
+	WithinClass: UnrealEngineClass;
+	clone() : DebugDisplayProperty;
+	static C(Other: UObject | any): DebugDisplayProperty;
+}
+
+declare class OnlineSession extends UObject { 
+	static Load(ResourceName: string): OnlineSession;
+	static Find(Outer: UObject, ResourceName: string): OnlineSession;
+	static GetDefaultObject(): OnlineSession;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineSession;
+	static C(Other: UObject | any): OnlineSession;
+}
+
+declare type ETravelFailure = 'NoLevel' | 'LoadMapFailure' | 'InvalidURL' | 'PackageMissing' | 'PackageVersion' | 'NoDownload' | 'TravelFailure' | 'CheatCommands' | 'PendingNetGameCreateFailure' | 'CloudSaveFailure' | 'ServerTravelFailure' | 'ClientTravelFailure' | 'ETravelFailure_MAX';
+declare var ETravelFailure : { NoLevel:'NoLevel',LoadMapFailure:'LoadMapFailure',InvalidURL:'InvalidURL',PackageMissing:'PackageMissing',PackageVersion:'PackageVersion',NoDownload:'NoDownload',TravelFailure:'TravelFailure',CheatCommands:'CheatCommands',PendingNetGameCreateFailure:'PendingNetGameCreateFailure',CloudSaveFailure:'CloudSaveFailure',ServerTravelFailure:'ServerTravelFailure',ClientTravelFailure:'ClientTravelFailure',ETravelFailure_MAX:'ETravelFailure_MAX', };
+declare type ENetworkFailure = 'NetDriverAlreadyExists' | 'NetDriverCreateFailure' | 'NetDriverListenFailure' | 'ConnectionLost' | 'ConnectionTimeout' | 'FailureReceived' | 'OutdatedClient' | 'OutdatedServer' | 'PendingConnectionFailure' | 'NetGuidMismatch' | 'NetChecksumMismatch' | 'ENetworkFailure_MAX';
+declare var ENetworkFailure : { NetDriverAlreadyExists:'NetDriverAlreadyExists',NetDriverCreateFailure:'NetDriverCreateFailure',NetDriverListenFailure:'NetDriverListenFailure',ConnectionLost:'ConnectionLost',ConnectionTimeout:'ConnectionTimeout',FailureReceived:'FailureReceived',OutdatedClient:'OutdatedClient',OutdatedServer:'OutdatedServer',PendingConnectionFailure:'PendingConnectionFailure',NetGuidMismatch:'NetGuidMismatch',NetChecksumMismatch:'NetChecksumMismatch',ENetworkFailure_MAX:'ENetworkFailure_MAX', };
+declare class GameInstance extends UObject { 
+	LocalPlayers: LocalPlayer[];
+	OnlineSession: OnlineSession;
+	ReferencedObjects: UObject[];
+	static Load(ResourceName: string): GameInstance;
+	static Find(Outer: UObject, ResourceName: string): GameInstance;
+	static GetDefaultObject(): GameInstance;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GameInstance;
+	ReceiveShutdown(): void;
+	ReceiveInit(): void;
+	HandleTravelError(FailureType: ETravelFailure): void;
+	HandleNetworkError(FailureType: ENetworkFailure,bIsServer: boolean): void;
+	DebugRemovePlayer(ControllerId: number): void;
+	DebugCreatePlayer(ControllerId: number): void;
+	static C(Other: UObject | any): GameInstance;
+}
+
+declare class GameViewportClient extends ScriptViewportClient { 
+	ViewportConsole: Console;
+	DebugProperties: DebugDisplayProperty[];
+	World: World;
+	GameInstance: GameInstance;
+	static Load(ResourceName: string): GameViewportClient;
+	static Find(Outer: UObject, ResourceName: string): GameViewportClient;
+	static GetDefaultObject(): GameViewportClient;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GameViewportClient;
+	SSSwapControllers(): void;
+	ShowTitleSafeArea(): void;
+	SetConsoleTarget(PlayerIndex: number): void;
+	static C(Other: UObject | any): GameViewportClient;
+}
+
+declare type EAspectRatioAxisConstraint = 'AspectRatio_MaintainYFOV' | 'AspectRatio_MaintainXFOV' | 'AspectRatio_MajorAxisFOV' | 'AspectRatio_MAX';
+declare var EAspectRatioAxisConstraint : { AspectRatio_MaintainYFOV:'AspectRatio_MaintainYFOV',AspectRatio_MaintainXFOV:'AspectRatio_MaintainXFOV',AspectRatio_MajorAxisFOV:'AspectRatio_MajorAxisFOV',AspectRatio_MAX:'AspectRatio_MAX', };
+declare class LocalPlayer extends Player { 
+	ViewportClient: GameViewportClient;
+	AspectRatioAxisConstraint: EAspectRatioAxisConstraint;
+	PendingLevelPlayerControllerClass: UnrealEngineClass;
+	bSentSplitJoin: boolean;
+	ControllerId: number;
+	static Load(ResourceName: string): LocalPlayer;
+	static Find(Outer: UObject, ResourceName: string): LocalPlayer;
+	static GetDefaultObject(): LocalPlayer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalPlayer;
+	static C(Other: UObject | any): LocalPlayer;
+}
+
+declare class Geometry { 
+	clone() : Geometry;
+	static C(Other: UObject | any): Geometry;
+	CenterOf(): Vector2D;
+	FindClosestPointOnGeom(TestPoint: Vector2D): Vector2D;
+	AbsoluteToLocal(AbsoluteCoordinate: Vector2D): Vector2D;
+	GetAbsoluteSize(): Vector2D;
+	GetLocalSize(): Vector2D;
+	IsUnderLocation(AbsoluteCoordinate: Vector2D): boolean;
+	LocalToAbsolute(LocalCoordinate: Vector2D): Vector2D;
+	static CenterOf(Geom: Geometry): Vector2D;
+	static FindClosestPointOnGeom(Geom: Geometry,TestPoint: Vector2D): Vector2D;
+	static AbsoluteToLocal(Geometry: Geometry,AbsoluteCoordinate: Vector2D): Vector2D;
+	static GetAbsoluteSize(Geometry: Geometry): Vector2D;
+	static GetLocalSize(Geometry: Geometry): Vector2D;
+	static IsUnderLocation(Geometry: Geometry,AbsoluteCoordinate: Vector2D): boolean;
+	static LocalToAbsolute(Geometry: Geometry,LocalCoordinate: Vector2D): Vector2D;
+}
+
+declare class JavascriptSlateWidget { 
+	clone() : JavascriptSlateWidget;
+	static C(Other: UObject | any): JavascriptSlateWidget;
+	EditorAddModalWindow(): void;
+	AddWindow(bShowImmediately: boolean): void;
+	AddWindowAsNativeChild(RootWindow: JavascriptSlateWidget): void;
+	ShowWindow(): void;
+	static EditorAddModalWindow(Widget: JavascriptSlateWidget): void;
+	static AddWindow(NewWindow: JavascriptSlateWidget,bShowImmediately: boolean): void;
+	static AddWindowAsNativeChild(NewWindow: JavascriptSlateWidget,RootWindow: JavascriptSlateWidget): void;
+	static ShowWindow(NewWindow: JavascriptSlateWidget): void;
+	static CreateLogListingWidget(InLogName: string): JavascriptSlateWidget;
+	static GetRootWindow(): JavascriptSlateWidget;
+}
+
+declare type EHorizontalAlignment = 'HAlign_Fill' | 'HAlign_Left' | 'HAlign_Center' | 'HAlign_Right' | 'HAlign_MAX';
+declare var EHorizontalAlignment : { HAlign_Fill:'HAlign_Fill',HAlign_Left:'HAlign_Left',HAlign_Center:'HAlign_Center',HAlign_Right:'HAlign_Right',HAlign_MAX:'HAlign_MAX', };
+declare type EVerticalAlignment = 'VAlign_Fill' | 'VAlign_Top' | 'VAlign_Center' | 'VAlign_Bottom' | 'VAlign_MAX';
+declare var EVerticalAlignment : { VAlign_Fill:'VAlign_Fill',VAlign_Top:'VAlign_Top',VAlign_Center:'VAlign_Center',VAlign_Bottom:'VAlign_Bottom',VAlign_MAX:'VAlign_MAX', };
+declare class BorderSlot extends PanelSlot { 
+	Padding: Margin;
+	HorizontalAlignment: EHorizontalAlignment;
 	VerticalAlignment: EVerticalAlignment;
 	static Load(ResourceName: string): BorderSlot;
 	static Find(Outer: UObject, ResourceName: string): BorderSlot;
@@ -7345,8 +7941,8 @@ declare class GridSlot extends PanelSlot {
 	static C(Other: UObject | any): GridSlot;
 }
 
-declare type ESlateSizeRule = 'Automatic' | 'Fill';
-declare var ESlateSizeRule : { Automatic:'Automatic',Fill:'Fill', };
+declare type ESlateSizeRule = 'Automatic' | 'Fill' | 'ESlateSizeRule_MAX';
+declare var ESlateSizeRule : { Automatic:'Automatic',Fill:'Fill',ESlateSizeRule_MAX:'ESlateSizeRule_MAX', };
 declare class SlateChildSize { 
 	Value: number;
 	SizeRule: ESlateSizeRule;
@@ -7416,36 +8012,40 @@ declare class VerticalBoxSlot extends PanelSlot {
 	static C(Other: UObject | any): VerticalBoxSlot;
 }
 
+declare type EWindowTitleBarMode = 'Overlay' | 'VerticalBox' | 'EWindowTitleBarMode_MAX';
+declare var EWindowTitleBarMode : { Overlay:'Overlay',VerticalBox:'VerticalBox',EWindowTitleBarMode_MAX:'EWindowTitleBarMode_MAX', };
 declare class Widget extends Visual { 
-	bIsVariable: boolean;
 	Slot: PanelSlot;
-	bIsEnabled: boolean;
 	bIsEnabledDelegate: UnrealEngineDelegate<() => boolean>;
 	ToolTipText: string;
 	ToolTipTextDelegate: UnrealEngineDelegate<() => string>;
 	ToolTipWidget: Widget;
 	ToolTipWidgetDelegate: UnrealEngineDelegate<() => Widget>;
-	Visiblity: Visiblity;
-	Visibility: Visibility;
-	VisibilityDelegate: UnrealEngineDelegate<() => ReturnValue>;
-	bOverride_Cursor: boolean;
-	Cursor: EMouseCursor;
-	Clipping: Clipping;
-	bIsVolatile: boolean;
+	VisibilityDelegate: UnrealEngineDelegate<() => ESlateVisibility>;
 	RenderTransform: WidgetTransform;
 	RenderTransformPivot: Vector2D;
-	Navigation: WidgetNavigation;
+	bIsVariable: boolean;
+	bCreatedByConstructionScript: boolean;
+	bIsEnabled: boolean;
+	bOverride_Cursor: boolean;
+	bIsVolatile: boolean;
 	bHiddenInDesigner: boolean;
 	bExpandedInDesigner: boolean;
 	bLockedInDesigner: boolean;
+	Cursor: EMouseCursor;
+	Clipping: EWidgetClipping;
+	Visibility: ESlateVisibility;
+	RenderOpacity: number;
+	Navigation: WidgetNavigation;
 	NativeBindings: PropertyBinding[];
 	DesignerFlags: EWidgetDesignFlags;
 	DisplayLabel: string;
+	CategoryName: string;
 	static Load(ResourceName: string): Widget;
 	static Find(Outer: UObject, ResourceName: string): Widget;
 	static GetDefaultObject(): Widget;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Widget;
-	SetVisibility(InVisibility: InVisibility): void;
+	SetVisibility(InVisibility: ESlateVisibility): void;
 	SetUserFocus(PlayerController: PlayerController): void;
 	SetToolTipText(InToolTipText: string): void;
 	SetToolTip(Widget: Widget): void;
@@ -7454,13 +8054,14 @@ declare class Widget extends Visual {
 	SetRenderTransform(InTransform: WidgetTransform): void;
 	SetRenderShear(Shear: Vector2D): void;
 	SetRenderScale(Scale: Vector2D): void;
+	SetRenderOpacity(InOpacity: number): void;
 	SetRenderAngle(Angle: number): void;
-	SetNavigationRule(Direction: Direction,Rule: Rule,WidgetToFocus: string): void;
+	SetNavigationRule(Direction: EUINavigation,Rule: EUINavigationRule,WidgetToFocus: string): void;
 	SetKeyboardFocus(): void;
 	SetIsEnabled(bInIsEnabled: boolean): void;
 	SetCursor(InCursor: EMouseCursor): void;
-	SetClipping(InClipping: InClipping): void;
-	SetAllNavigationRules(Rule: Rule,WidgetToFocus: string): void;
+	SetClipping(InClipping: EWidgetClipping): void;
+	SetAllNavigationRules(Rule: EUINavigationRule,WidgetToFocus: string): void;
 	ResetCursor(): void;
 	RemoveFromParent(): void;
 	IsVisible(): boolean;
@@ -7468,16 +8069,19 @@ declare class Widget extends Visual {
 	InvalidateLayoutAndVolatility(): void;
 	HasUserFocusedDescendants(PlayerController: PlayerController): boolean;
 	HasUserFocus(PlayerController: PlayerController): boolean;
+	HasMouseCaptureByUser(UserIndex: number,PointerIndex: number): boolean;
 	HasMouseCapture(): boolean;
 	HasKeyboardFocus(): boolean;
 	HasFocusedDescendants(): boolean;
 	HasAnyUserFocus(): boolean;
-	GetVisibility(): ReturnValue;
+	GetVisibility(): ESlateVisibility;
+	GetRenderOpacity(): number;
 	GetParent(): PanelWidget;
 	GetOwningPlayer(): PlayerController;
+	GetOwningLocalPlayer(): LocalPlayer;
 	GetIsEnabled(): boolean;
 	GetDesiredSize(): Vector2D;
-	GetClipping(): ReturnValue;
+	GetClipping(): EWidgetClipping;
 	GetCachedGeometry(): Geometry;
 	ForceVolatile(bForce: boolean): void;
 	ForceLayoutPrepass(): void;
@@ -7491,6 +8095,7 @@ declare class Widget extends Visual {
 	SlotAsOverlaySlot(): OverlaySlot;
 	SlotAsUniformGridSlot(): UniformGridSlot;
 	SlotAsVerticalBoxSlot(): VerticalBoxSlot;
+	SetWindowTitleBarState(Mode: EWindowTitleBarMode,bTitleBarDragEnabled: boolean,bWindowButtonsVisible: boolean,bTitleBarVisible: boolean): void;
 	static OpenPopupWindow(Widget: Widget,PopupDesiredSize: Vector2D,HeadingText: string): void;
 	static TakeWidget(Widget: Widget): JavascriptSlateWidget;
 	static SlotAsBorderSlot(Widget: Widget): BorderSlot;
@@ -7500,6 +8105,7 @@ declare class Widget extends Visual {
 	static SlotAsOverlaySlot(Widget: Widget): OverlaySlot;
 	static SlotAsUniformGridSlot(Widget: Widget): UniformGridSlot;
 	static SlotAsVerticalBoxSlot(Widget: Widget): VerticalBoxSlot;
+	static SetWindowTitleBarState(TitleBarContent: Widget,Mode: EWindowTitleBarMode,bTitleBarDragEnabled: boolean,bWindowButtonsVisible: boolean,bTitleBarVisible: boolean): void;
 }
 
 declare class MovieSceneSignedObject extends UObject { 
@@ -7511,18 +8117,9 @@ declare class MovieSceneSignedObject extends UObject {
 	static C(Other: UObject | any): MovieSceneSignedObject;
 }
 
-declare class FloatRangeBound { 
-	Type: ERangeBoundTypes;
-	Value: number;
-	clone() : FloatRangeBound;
-	static C(Other: UObject | any): FloatRangeBound;
-}
-
-declare class FloatRange { 
-	LowerBound: FloatRangeBound;
-	UpperBound: FloatRangeBound;
-	clone() : FloatRange;
-	static C(Other: UObject | any): FloatRange;
+declare class MovieSceneFrameRange { 
+	clone() : MovieSceneFrameRange;
+	static C(Other: UObject | any): MovieSceneFrameRange;
 }
 
 declare class MovieSceneEvaluationGroupLUTIndex { 
@@ -7552,8 +8149,14 @@ declare class MovieSceneEvaluationFieldTrackPtr {
 	static C(Other: UObject | any): MovieSceneEvaluationFieldTrackPtr;
 }
 
+declare class MovieSceneSegmentIdentifier { 
+	IdentifierIndex: number;
+	clone() : MovieSceneSegmentIdentifier;
+	static C(Other: UObject | any): MovieSceneSegmentIdentifier;
+}
+
 declare class MovieSceneEvaluationFieldSegmentPtr extends MovieSceneEvaluationFieldTrackPtr { 
-	SegmentIndex: number;
+	SegmentID: MovieSceneSegmentIdentifier;
 	clone() : MovieSceneEvaluationFieldSegmentPtr;
 	static C(Other: UObject | any): MovieSceneEvaluationFieldSegmentPtr;
 }
@@ -7566,6 +8169,9 @@ declare class MovieSceneEvaluationGroup {
 }
 
 declare class MovieSceneEvaluationKey { 
+	SequenceID: MovieSceneSequenceID;
+	TrackIdentifier: MovieSceneTrackIdentifier;
+	SectionIndex: any;
 	clone() : MovieSceneEvaluationKey;
 	static C(Other: UObject | any): MovieSceneEvaluationKey;
 }
@@ -7580,12 +8186,14 @@ declare class MovieSceneOrderedEvaluationKey {
 declare class MovieSceneEvaluationMetaData { 
 	ActiveSequences: MovieSceneSequenceID[];
 	ActiveEntities: MovieSceneOrderedEvaluationKey[];
+	SubTemplateSerialNumbers: any;
 	clone() : MovieSceneEvaluationMetaData;
 	static C(Other: UObject | any): MovieSceneEvaluationMetaData;
 }
 
 declare class MovieSceneEvaluationField { 
-	Ranges: FloatRange[];
+	Signature: Guid;
+	Ranges: MovieSceneFrameRange[];
 	Groups: MovieSceneEvaluationGroup[];
 	MetaData: MovieSceneEvaluationMetaData[];
 	clone() : MovieSceneEvaluationField;
@@ -7599,50 +8207,48 @@ declare class MovieSceneSequenceHierarchy {
 	static C(Other: UObject | any): MovieSceneSequenceHierarchy;
 }
 
+declare class MovieSceneEvaluationTemplateSerialNumber { 
+	Value: any;
+	clone() : MovieSceneEvaluationTemplateSerialNumber;
+	static C(Other: UObject | any): MovieSceneEvaluationTemplateSerialNumber;
+}
+
 declare class MovieSceneTemplateGenerationLedger { 
 	LastTrackIdentifier: MovieSceneTrackIdentifier;
-	TrackReferenceCounts: any;
 	TrackSignatureToTrackIdentifier: any;
+	SubSectionRanges: any;
 	clone() : MovieSceneTemplateGenerationLedger;
 	static C(Other: UObject | any): MovieSceneTemplateGenerationLedger;
 }
 
+declare class MovieSceneTrackFieldData { 
+	clone() : MovieSceneTrackFieldData;
+	static C(Other: UObject | any): MovieSceneTrackFieldData;
+}
+
+declare class MovieSceneSubSectionFieldData { 
+	clone() : MovieSceneSubSectionFieldData;
+	static C(Other: UObject | any): MovieSceneSubSectionFieldData;
+}
+
 declare class MovieSceneEvaluationTemplate { 
 	Tracks: any;
 	EvaluationField: MovieSceneEvaluationField;
 	Hierarchy: MovieSceneSequenceHierarchy;
+	SequenceSignature: Guid;
+	TemplateSerialNumber: MovieSceneEvaluationTemplateSerialNumber;
 	TemplateLedger: MovieSceneTemplateGenerationLedger;
-	bHasLegacyTrackInstances: boolean;
-	bKeepStaleTracks: boolean;
+	TrackFieldData: MovieSceneTrackFieldData;
+	SubSectionFieldData: MovieSceneSubSectionFieldData;
 	clone() : MovieSceneEvaluationTemplate;
 	static C(Other: UObject | any): MovieSceneEvaluationTemplate;
 }
 
-declare class MovieSceneTrackCompilationParams { 
-	bForEditorPreview: boolean;
-	bDuringBlueprintCompile: boolean;
-	clone() : MovieSceneTrackCompilationParams;
-	static C(Other: UObject | any): MovieSceneTrackCompilationParams;
-}
-
-declare class MovieSceneSequenceCachedSignature { 
-	Sequence: any;
-	CachedSignature: Guid;
-	clone() : MovieSceneSequenceCachedSignature;
-	static C(Other: UObject | any): MovieSceneSequenceCachedSignature;
-}
-
-declare class CachedMovieSceneEvaluationTemplate extends MovieSceneEvaluationTemplate { 
-	CachedCompilationParams: MovieSceneTrackCompilationParams;
-	CachedSignatures: MovieSceneSequenceCachedSignature[];
-	clone() : CachedMovieSceneEvaluationTemplate;
-	static C(Other: UObject | any): CachedMovieSceneEvaluationTemplate;
-}
-
+declare type EMovieSceneCompletionMode = 'KeepState' | 'RestoreState' | 'ProjectDefault' | 'EMovieSceneCompletionMode_MAX';
+declare var EMovieSceneCompletionMode : { KeepState:'KeepState',RestoreState:'RestoreState',ProjectDefault:'ProjectDefault',EMovieSceneCompletionMode_MAX:'EMovieSceneCompletionMode_MAX', };
 declare class MovieSceneSequence extends MovieSceneSignedObject { 
-	EvaluationTemplate: CachedMovieSceneEvaluationTemplate;
-	TemplateParameters: MovieSceneTrackCompilationParams;
-	InstancedSubSequenceEvaluationTemplates: any;
+	PrecompiledEvaluationTemplate: MovieSceneEvaluationTemplate;
+	DefaultCompletionMode: EMovieSceneCompletionMode;
 	bParentContextsAreSignificant: boolean;
 	static Load(ResourceName: string): MovieSceneSequence;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneSequence;
@@ -7651,20 +8257,105 @@ declare class MovieSceneSequence extends MovieSceneSignedObject {
 	static C(Other: UObject | any): MovieSceneSequence;
 }
 
-declare type ESpawnOwnership = 'InnerSequence' | 'MasterSequence' | 'External';
-declare var ESpawnOwnership : { InnerSequence:'InnerSequence',MasterSequence:'MasterSequence',External:'External', };
+declare class Timecode { 
+	Hours: number;
+	Minutes: number;
+	Seconds: number;
+	Frames: number;
+	bDropFrameFormat: boolean;
+	clone() : Timecode;
+	static C(Other: UObject | any): Timecode;
+	Conv_TimecodeToString(bForceSignDisplay: boolean): string;
+	static Conv_TimecodeToString(InTimecode: Timecode,bForceSignDisplay: boolean): string;
+	static GetTimecode(): Timecode;
+}
+
+declare class FrameRate { 
+	Numerator: number;
+	Denominator: number;
+	clone() : FrameRate;
+	static C(Other: UObject | any): FrameRate;
+	BreakFrameRate(Numerator?: number,Denominator?: number): {Numerator: number, Denominator: number};
+	Conv_FrameRateToSeconds(): number;
+	IsValid_Framerate(): boolean;
+	IsValid_MultipleOf(OtherFramerate: FrameRate): boolean;
+	static BreakFrameRate(InFrameRate: FrameRate,Numerator?: number,Denominator?: number): {Numerator: number, Denominator: number};
+	static Conv_FrameRateToSeconds(InFrameRate: FrameRate): number;
+	static IsValid_Framerate(InFrameRate: FrameRate): boolean;
+	static IsValid_MultipleOf(InFrameRate: FrameRate,OtherFramerate: FrameRate): boolean;
+	static MakeFrameRate(Numerator: number,Denominator: number): FrameRate;
+}
+
+declare class FrameTime { 
+	FrameNumber: FrameNumber;
+	SubFrame: number;
+	clone() : FrameTime;
+	static C(Other: UObject | any): FrameTime;
+	SnapFrameTimeToRate(SourceRate: FrameRate,SnapToRate: FrameRate): FrameTime;
+	TransformTime(SourceRate: FrameRate,DestinationRate: FrameRate): FrameTime;
+	static SnapFrameTimeToRate(SourceTime: FrameTime,SourceRate: FrameRate,SnapToRate: FrameRate): FrameTime;
+	static TransformTime(SourceTime: FrameTime,SourceRate: FrameRate,DestinationRate: FrameRate): FrameTime;
+	static Multiply_SecondsFrameRate(TimeInSeconds: number,FrameRate: FrameRate): FrameTime;
+}
+
+declare class QualifiedFrameTime { 
+	Time: FrameTime;
+	Rate: FrameRate;
+	clone() : QualifiedFrameTime;
+	static C(Other: UObject | any): QualifiedFrameTime;
+	BreakQualifiedFrameTime(Frame?: FrameNumber,FrameRate?: FrameRate,SubFrame?: number): {Frame: FrameNumber, FrameRate: FrameRate, SubFrame: number};
+	Conv_QualifiedFrameTimeToSeconds(): number;
+	static BreakQualifiedFrameTime(InFrameTime: QualifiedFrameTime,Frame?: FrameNumber,FrameRate?: FrameRate,SubFrame?: number): {Frame: FrameNumber, FrameRate: FrameRate, SubFrame: number};
+	static Conv_QualifiedFrameTimeToSeconds(InFrameTime: QualifiedFrameTime): number;
+}
+
+declare class FrameNumber { 
+	Value: number;
+	clone() : FrameNumber;
+	static C(Other: UObject | any): FrameNumber;
+	MakeQualifiedFrameTime(FrameRate: FrameRate,SubFrame: number): QualifiedFrameTime;
+	Add_FrameNumberFrameNumber(B: FrameNumber): FrameNumber;
+	Add_FrameNumberInteger(B: number): FrameNumber;
+	Conv_FrameNumberToInteger(): number;
+	Divide_FrameNumberInteger(B: number): FrameNumber;
+	Multiply_FrameNumberInteger(B: number): FrameNumber;
+	Subtract_FrameNumberFrameNumber(B: FrameNumber): FrameNumber;
+	Subtract_FrameNumberInteger(B: number): FrameNumber;
+	static MakeQualifiedFrameTime(Frame: FrameNumber,FrameRate: FrameRate,SubFrame: number): QualifiedFrameTime;
+	static Add_FrameNumberFrameNumber(A: FrameNumber,B: FrameNumber): FrameNumber;
+	static Add_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
+	static Conv_FrameNumberToInteger(InFrameNumber: FrameNumber): number;
+	static Divide_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
+	static Multiply_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
+	static Subtract_FrameNumberFrameNumber(A: FrameNumber,B: FrameNumber): FrameNumber;
+	static Subtract_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
+}
+
+declare class MovieSceneTimecodeSource { 
+	Timecode: Timecode;
+	DeltaFrame: FrameNumber;
+	clone() : MovieSceneTimecodeSource;
+	static C(Other: UObject | any): MovieSceneTimecodeSource;
+}
+
+declare type ESpawnOwnership = 'InnerSequence' | 'MasterSequence' | 'External' | 'ESpawnOwnership_MAX';
+declare var ESpawnOwnership : { InnerSequence:'InnerSequence',MasterSequence:'MasterSequence',External:'External',ESpawnOwnership_MAX:'ESpawnOwnership_MAX', };
 declare class MovieSceneSpawnable { 
+	SpawnTransform: Transform;
+	Tags: string[];
 	Guid: Guid;
 	Name: string;
 	ObjectTemplate: UObject;
 	ChildPossessables: Guid[];
-	Ownership: Ownership;
+	Ownership: ESpawnOwnership;
 	GeneratedClass: UnrealEngineClass;
+	LevelName: string;
 	clone() : MovieSceneSpawnable;
 	static C(Other: UObject | any): MovieSceneSpawnable;
 }
 
 declare class MovieScenePossessable { 
+	Tags: string[];
 	Guid: Guid;
 	Name: string;
 	PossessedObjectClass: UnrealEngineClass;
@@ -7686,6 +8377,8 @@ declare class MovieSceneTrackEvalOptions {
 declare class MovieSceneTrack extends MovieSceneSignedObject { 
 	EvalOptions: MovieSceneTrackEvalOptions;
 	TrackTint: Color;
+	SortingOrder: number;
+	bSupportsDefaultSections: boolean;
 	static Load(ResourceName: string): MovieSceneTrack;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneTrack;
 	static GetDefaultObject(): MovieSceneTrack;
@@ -7697,12 +8390,36 @@ declare class MovieSceneBinding {
 	ObjectGuid: Guid;
 	BindingName: string;
 	Tracks: MovieSceneTrack[];
+	SortingOrder: number;
 	clone() : MovieSceneBinding;
 	static C(Other: UObject | any): MovieSceneBinding;
 }
 
+declare type EMovieSceneEvaluationType = 'FrameLocked' | 'WithSubFrames' | 'EMovieSceneEvaluationType_MAX';
+declare var EMovieSceneEvaluationType : { FrameLocked:'FrameLocked',WithSubFrames:'WithSubFrames',EMovieSceneEvaluationType_MAX:'EMovieSceneEvaluationType_MAX', };
+declare type EUpdateClockSource = 'Tick' | 'Platform' | 'Audio' | 'EUpdateClockSource_MAX';
+declare var EUpdateClockSource : { Tick:'Tick',Platform:'Platform',Audio:'Audio',EUpdateClockSource_MAX:'EUpdateClockSource_MAX', };
+declare class FloatRangeBound { 
+	Type: ERangeBoundTypes;
+	Value: number;
+	clone() : FloatRangeBound;
+	static C(Other: UObject | any): FloatRangeBound;
+}
+
+declare class FloatRange { 
+	LowerBound: FloatRangeBound;
+	UpperBound: FloatRangeBound;
+	clone() : FloatRange;
+	static C(Other: UObject | any): FloatRange;
+}
+
 declare class MovieSceneEditorData { 
 	ExpansionStates: any;
+	ViewStart: any;
+	ViewEnd: any;
+	WorkStart: any;
+	WorkEnd: any;
+	MarkedFrames: any;
 	WorkingRange: FloatRange;
 	ViewRange: FloatRange;
 	clone() : MovieSceneEditorData;
@@ -7715,6 +8432,7 @@ declare class MovieSceneFolder extends UObject {
 	ChildMasterTracks: MovieSceneTrack[];
 	ChildObjectBindingStrings: string[];
 	FolderColor: Color;
+	SortingOrder: number;
 	static Load(ResourceName: string): MovieSceneFolder;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneFolder;
 	static GetDefaultObject(): MovieSceneFolder;
@@ -7723,16 +8441,20 @@ declare class MovieSceneFolder extends UObject {
 }
 
 declare class MovieScene extends MovieSceneSignedObject { 
+	TimecodeSource: MovieSceneTimecodeSource;
 	Spawnables: MovieSceneSpawnable[];
 	Possessables: MovieScenePossessable[];
 	ObjectBindings: MovieSceneBinding[];
 	MasterTracks: MovieSceneTrack[];
 	CameraCutTrack: MovieSceneTrack;
-	SelectionRange: FloatRange;
-	PlaybackRange: FloatRange;
+	SelectionRange: MovieSceneFrameRange;
+	PlaybackRange: MovieSceneFrameRange;
+	TickResolution: FrameRate;
+	DisplayRate: FrameRate;
+	EvaluationType: EMovieSceneEvaluationType;
+	ClockSource: EUpdateClockSource;
+	bReadOnly: boolean;
 	bPlaybackRangeLocked: boolean;
-	bForceFixedFrameIntervalPlayback: boolean;
-	FixedFrameInterval: number;
 	ObjectsToDisplayNames: any;
 	ObjectsToLabels: any;
 	EditorData: MovieSceneEditorData;
@@ -7741,6 +8463,8 @@ declare class MovieScene extends MovieSceneSignedObject {
 	OutTime: number;
 	StartTime: number;
 	EndTime: number;
+	bForceFixedFrameIntervalPlayback: boolean;
+	FixedFrameInterval: number;
 	static Load(ResourceName: string): MovieScene;
 	static Find(Outer: UObject, ResourceName: string): MovieScene;
 	static GetDefaultObject(): MovieScene;
@@ -7762,6 +8486,8 @@ declare class WidgetAnimation extends MovieSceneSequence {
 	OnAnimationFinished: UnrealEngineMulticastDelegate<() => void>;
 	MovieScene: MovieScene;
 	AnimationBindings: WidgetAnimationBinding[];
+	bLegacyFinishOnStop: boolean;
+	DisplayLabel: string;
 	static Load(ResourceName: string): WidgetAnimation;
 	static Find(Outer: UObject, ResourceName: string): WidgetAnimation;
 	static GetDefaultObject(): WidgetAnimation;
@@ -7797,97 +8523,14 @@ declare class WidgetTree extends UObject {
 	static C(Other: UObject | any): WidgetTree;
 }
 
-declare type EDesignPreviewSizeMode = 'FillScreen' | 'Custom' | 'CustomOnScreen' | 'Desired' | 'DesiredOnScreen';
-declare var EDesignPreviewSizeMode : { FillScreen:'FillScreen',Custom:'Custom',CustomOnScreen:'CustomOnScreen',Desired:'Desired',DesiredOnScreen:'DesiredOnScreen', };
-declare type EInputEvent = 'IE_Pressed' | 'IE_Released' | 'IE_Repeat' | 'IE_DoubleClick' | 'IE_Axis';
-declare var EInputEvent : { IE_Pressed:'IE_Pressed',IE_Released:'IE_Released',IE_Repeat:'IE_Repeat',IE_DoubleClick:'IE_DoubleClick',IE_Axis:'IE_Axis', };
-declare class ScriptViewportClient extends UObject { 
-	static Load(ResourceName: string): ScriptViewportClient;
-	static Find(Outer: UObject, ResourceName: string): ScriptViewportClient;
-	static GetDefaultObject(): ScriptViewportClient;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScriptViewportClient;
-	static C(Other: UObject | any): ScriptViewportClient;
-}
-
-declare class Console extends UObject { 
-	ConsoleTargetPlayer: LocalPlayer;
-	DefaultTexture_Black: Texture2D;
-	DefaultTexture_White: Texture2D;
-	HistoryBuffer: string[];
-	static Load(ResourceName: string): Console;
-	static Find(Outer: UObject, ResourceName: string): Console;
-	static GetDefaultObject(): Console;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Console;
-	static C(Other: UObject | any): Console;
-}
-
-declare class DebugDisplayProperty { 
-	Obj: UObject;
-	WithinClass: UnrealEngineClass;
-	clone() : DebugDisplayProperty;
-	static C(Other: UObject | any): DebugDisplayProperty;
-}
-
-declare class OnlineSession extends UObject { 
-	static Load(ResourceName: string): OnlineSession;
-	static Find(Outer: UObject, ResourceName: string): OnlineSession;
-	static GetDefaultObject(): OnlineSession;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineSession;
-	static C(Other: UObject | any): OnlineSession;
-}
-
-declare type ETravelFailure = 'NoLevel' | 'LoadMapFailure' | 'InvalidURL' | 'PackageMissing' | 'PackageVersion' | 'NoDownload' | 'TravelFailure' | 'CheatCommands' | 'PendingNetGameCreateFailure' | 'CloudSaveFailure' | 'ServerTravelFailure' | 'ClientTravelFailure';
-declare var ETravelFailure : { NoLevel:'NoLevel',LoadMapFailure:'LoadMapFailure',InvalidURL:'InvalidURL',PackageMissing:'PackageMissing',PackageVersion:'PackageVersion',NoDownload:'NoDownload',TravelFailure:'TravelFailure',CheatCommands:'CheatCommands',PendingNetGameCreateFailure:'PendingNetGameCreateFailure',CloudSaveFailure:'CloudSaveFailure',ServerTravelFailure:'ServerTravelFailure',ClientTravelFailure:'ClientTravelFailure', };
-declare type ENetworkFailure = 'NetDriverAlreadyExists' | 'NetDriverCreateFailure' | 'NetDriverListenFailure' | 'ConnectionLost' | 'ConnectionTimeout' | 'FailureReceived' | 'OutdatedClient' | 'OutdatedServer' | 'PendingConnectionFailure' | 'NetGuidMismatch' | 'NetChecksumMismatch';
-declare var ENetworkFailure : { NetDriverAlreadyExists:'NetDriverAlreadyExists',NetDriverCreateFailure:'NetDriverCreateFailure',NetDriverListenFailure:'NetDriverListenFailure',ConnectionLost:'ConnectionLost',ConnectionTimeout:'ConnectionTimeout',FailureReceived:'FailureReceived',OutdatedClient:'OutdatedClient',OutdatedServer:'OutdatedServer',PendingConnectionFailure:'PendingConnectionFailure',NetGuidMismatch:'NetGuidMismatch',NetChecksumMismatch:'NetChecksumMismatch', };
-declare class GameInstance extends UObject { 
-	LocalPlayers: LocalPlayer[];
-	OnlineSession: OnlineSession;
-	static Load(ResourceName: string): GameInstance;
-	static Find(Outer: UObject, ResourceName: string): GameInstance;
-	static GetDefaultObject(): GameInstance;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GameInstance;
-	ReceiveShutdown(): void;
-	ReceiveInit(): void;
-	HandleTravelError(FailureType: ETravelFailure): void;
-	HandleNetworkError(FailureType: ENetworkFailure,bIsServer: boolean): void;
-	DebugRemovePlayer(ControllerId: number): void;
-	DebugCreatePlayer(ControllerId: number): void;
-	static C(Other: UObject | any): GameInstance;
-}
-
-declare class GameViewportClient extends ScriptViewportClient { 
-	ViewportConsole: Console;
-	DebugProperties: DebugDisplayProperty[];
-	World: World;
-	GameInstance: GameInstance;
-	static Load(ResourceName: string): GameViewportClient;
-	static Find(Outer: UObject, ResourceName: string): GameViewportClient;
-	static GetDefaultObject(): GameViewportClient;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GameViewportClient;
-	SSSwapControllers(): void;
-	ShowTitleSafeArea(): void;
-	SetConsoleTarget(PlayerIndex: number): void;
-	static C(Other: UObject | any): GameViewportClient;
-}
-
-declare type EAspectRatioAxisConstraint = 'AspectRatio_MaintainYFOV' | 'AspectRatio_MaintainXFOV' | 'AspectRatio_MajorAxisFOV';
-declare var EAspectRatioAxisConstraint : { AspectRatio_MaintainYFOV:'AspectRatio_MaintainYFOV',AspectRatio_MaintainXFOV:'AspectRatio_MaintainXFOV',AspectRatio_MajorAxisFOV:'AspectRatio_MajorAxisFOV', };
-declare class LocalPlayer extends Player { 
-	ViewportClient: GameViewportClient;
-	AspectRatioAxisConstraint: EAspectRatioAxisConstraint;
-	PendingLevelPlayerControllerClass: UnrealEngineClass;
-	bSentSplitJoin: boolean;
-	ControllerId: number;
-	static Load(ResourceName: string): LocalPlayer;
-	static Find(Outer: UObject, ResourceName: string): LocalPlayer;
-	static GetDefaultObject(): LocalPlayer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalPlayer;
-	static C(Other: UObject | any): LocalPlayer;
-}
-
-declare type EAudioOutputTarget = 'Speaker' | 'Controller' | 'ControllerFallbackToSpeaker';
-declare var EAudioOutputTarget : { Speaker:'Speaker',Controller:'Controller',ControllerFallbackToSpeaker:'ControllerFallbackToSpeaker', };
+declare type EDesignPreviewSizeMode = 'FillScreen' | 'Custom' | 'CustomOnScreen' | 'Desired' | 'DesiredOnScreen' | 'EDesignPreviewSizeMode_MAX';
+declare var EDesignPreviewSizeMode : { FillScreen:'FillScreen',Custom:'Custom',CustomOnScreen:'CustomOnScreen',Desired:'Desired',DesiredOnScreen:'DesiredOnScreen',EDesignPreviewSizeMode_MAX:'EDesignPreviewSizeMode_MAX', };
+declare type EWidgetTickFrequency = 'Never' | 'Auto' | 'EWidgetTickFrequency_MAX';
+declare var EWidgetTickFrequency : { Never:'Never',Auto:'Auto',EWidgetTickFrequency_MAX:'EWidgetTickFrequency_MAX', };
+declare type EInputEvent = 'IE_Pressed' | 'IE_Released' | 'IE_Repeat' | 'IE_DoubleClick' | 'IE_Axis' | 'IE_MAX';
+declare var EInputEvent : { IE_Pressed:'IE_Pressed',IE_Released:'IE_Released',IE_Repeat:'IE_Repeat',IE_DoubleClick:'IE_DoubleClick',IE_Axis:'IE_Axis',IE_MAX:'IE_MAX', };
+declare type EAudioOutputTarget = 'Speaker' | 'Controller' | 'ControllerFallbackToSpeaker' | 'EAudioOutputTarget_MAX';
+declare var EAudioOutputTarget : { Speaker:'Speaker',Controller:'Controller',ControllerFallbackToSpeaker:'ControllerFallbackToSpeaker',EAudioOutputTarget_MAX:'EAudioOutputTarget_MAX', };
 declare class SoundClassProperties { 
 	Volume: number;
 	Pitch: number;
@@ -7973,8 +8616,8 @@ declare class SoundClass extends UObject {
 	static C(Other: UObject | any): SoundClass;
 }
 
-declare type EMaxConcurrentResolutionRule = 'PreventNew' | 'StopOldest' | 'StopFarthestThenPreventNew' | 'StopFarthestThenOldest' | 'StopLowestPriority' | 'StopQuietest' | 'StopLowestPriorityThenPreventNew';
-declare var EMaxConcurrentResolutionRule : { PreventNew:'PreventNew',StopOldest:'StopOldest',StopFarthestThenPreventNew:'StopFarthestThenPreventNew',StopFarthestThenOldest:'StopFarthestThenOldest',StopLowestPriority:'StopLowestPriority',StopQuietest:'StopQuietest',StopLowestPriorityThenPreventNew:'StopLowestPriorityThenPreventNew', };
+declare type EMaxConcurrentResolutionRule = 'PreventNew' | 'StopOldest' | 'StopFarthestThenPreventNew' | 'StopFarthestThenOldest' | 'StopLowestPriority' | 'StopQuietest' | 'StopLowestPriorityThenPreventNew' | 'EMaxConcurrentResolutionRule_MAX';
+declare var EMaxConcurrentResolutionRule : { PreventNew:'PreventNew',StopOldest:'StopOldest',StopFarthestThenPreventNew:'StopFarthestThenPreventNew',StopFarthestThenOldest:'StopFarthestThenOldest',StopLowestPriority:'StopLowestPriority',StopQuietest:'StopQuietest',StopLowestPriorityThenPreventNew:'StopLowestPriorityThenPreventNew',EMaxConcurrentResolutionRule_MAX:'EMaxConcurrentResolutionRule_MAX', };
 declare class SoundConcurrencySettings { 
 	MaxCount: number;
 	bLimitToOwner: boolean;
@@ -7993,10 +8636,14 @@ declare class SoundConcurrency extends UObject {
 	static C(Other: UObject | any): SoundConcurrency;
 }
 
-declare type ESoundDistanceCalc = 'SOUNDDISTANCE_Normal' | 'SOUNDDISTANCE_InfiniteXYPlane' | 'SOUNDDISTANCE_InfiniteXZPlane' | 'SOUNDDISTANCE_InfiniteYZPlane';
-declare var ESoundDistanceCalc : { SOUNDDISTANCE_Normal:'SOUNDDISTANCE_Normal',SOUNDDISTANCE_InfiniteXYPlane:'SOUNDDISTANCE_InfiniteXYPlane',SOUNDDISTANCE_InfiniteXZPlane:'SOUNDDISTANCE_InfiniteXZPlane',SOUNDDISTANCE_InfiniteYZPlane:'SOUNDDISTANCE_InfiniteYZPlane', };
-declare type ESoundSpatializationAlgorithm = 'SPATIALIZATION_Default' | 'SPATIALIZATION_HRTF';
-declare var ESoundSpatializationAlgorithm : { SPATIALIZATION_Default:'SPATIALIZATION_Default',SPATIALIZATION_HRTF:'SPATIALIZATION_HRTF', };
+declare type ESoundSpatializationAlgorithm = 'SPATIALIZATION_Default' | 'SPATIALIZATION_HRTF' | 'SPATIALIZATION_MAX';
+declare var ESoundSpatializationAlgorithm : { SPATIALIZATION_Default:'SPATIALIZATION_Default',SPATIALIZATION_HRTF:'SPATIALIZATION_HRTF',SPATIALIZATION_MAX:'SPATIALIZATION_MAX', };
+declare type EAirAbsorptionMethod = 'Linear' | 'CustomCurve' | 'EAirAbsorptionMethod_MAX';
+declare var EAirAbsorptionMethod : { Linear:'Linear',CustomCurve:'CustomCurve',EAirAbsorptionMethod_MAX:'EAirAbsorptionMethod_MAX', };
+declare type EReverbSendMethod = 'Linear' | 'CustomCurve' | 'Manual' | 'EReverbSendMethod_MAX';
+declare var EReverbSendMethod : { Linear:'Linear',CustomCurve:'CustomCurve',Manual:'Manual',EReverbSendMethod_MAX:'EReverbSendMethod_MAX', };
+declare type ESoundDistanceCalc = 'SOUNDDISTANCE_Normal' | 'SOUNDDISTANCE_InfiniteXYPlane' | 'SOUNDDISTANCE_InfiniteXZPlane' | 'SOUNDDISTANCE_InfiniteYZPlane' | 'SOUNDDISTANCE_MAX';
+declare var ESoundDistanceCalc : { SOUNDDISTANCE_Normal:'SOUNDDISTANCE_Normal',SOUNDDISTANCE_InfiniteXYPlane:'SOUNDDISTANCE_InfiniteXYPlane',SOUNDDISTANCE_InfiniteXZPlane:'SOUNDDISTANCE_InfiniteXZPlane',SOUNDDISTANCE_InfiniteYZPlane:'SOUNDDISTANCE_InfiniteYZPlane',SOUNDDISTANCE_MAX:'SOUNDDISTANCE_MAX', };
 declare class SpatializationPluginSourceSettingsBase extends UObject { 
 	static Load(ResourceName: string): SpatializationPluginSourceSettingsBase;
 	static Find(Outer: UObject, ResourceName: string): SpatializationPluginSourceSettingsBase;
@@ -8021,24 +8668,43 @@ declare class ReverbPluginSourceSettingsBase extends UObject {
 	static C(Other: UObject | any): ReverbPluginSourceSettingsBase;
 }
 
+declare class SoundAttenuationPluginSettings { 
+	SpatializationPluginSettingsArray: SpatializationPluginSourceSettingsBase[];
+	OcclusionPluginSettingsArray: OcclusionPluginSourceSettingsBase[];
+	ReverbPluginSettingsArray: ReverbPluginSourceSettingsBase[];
+	clone() : SoundAttenuationPluginSettings;
+	static C(Other: UObject | any): SoundAttenuationPluginSettings;
+}
+
 declare class SoundAttenuationSettings extends BaseAttenuationSettings { 
 	bAttenuate: boolean;
 	bSpatialize: boolean;
 	bAttenuateWithLPF: boolean;
 	bEnableListenerFocus: boolean;
+	bEnableFocusInterpolation: boolean;
 	bEnableOcclusion: boolean;
 	bUseComplexCollisionForOcclusion: boolean;
+	bEnableReverbSend: boolean;
+	bApplyNormalizationToStereoSounds: boolean;
+	bEnableLogFrequencyScaling: boolean;
+	SpatializationAlgorithm: ESoundSpatializationAlgorithm;
+	AbsorptionMethod: EAirAbsorptionMethod;
+	OcclusionTraceChannel: ECollisionChannel;
+	ReverbSendMethod: EReverbSendMethod;
 	DistanceType: ESoundDistanceCalc;
 	OmniRadius: number;
 	StereoSpread: number;
-	SpatializationAlgorithm: ESoundSpatializationAlgorithm;
 	SpatializationPluginSettings: SpatializationPluginSourceSettingsBase;
 	RadiusMin: number;
 	RadiusMax: number;
 	LPFRadiusMin: number;
 	LPFRadiusMax: number;
+	CustomLowpassAirAbsorptionCurve: RuntimeFloatCurve;
+	CustomHighpassAirAbsorptionCurve: RuntimeFloatCurve;
 	LPFFrequencyAtMin: number;
 	LPFFrequencyAtMax: number;
+	HPFFrequencyAtMin: number;
+	HPFFrequencyAtMax: number;
 	FocusAzimuth: number;
 	NonFocusAzimuth: number;
 	FocusDistanceScale: number;
@@ -8047,7 +8713,8 @@ declare class SoundAttenuationSettings extends BaseAttenuationSettings {
 	NonFocusPriorityScale: number;
 	FocusVolumeAttenuation: number;
 	NonFocusVolumeAttenuation: number;
-	OcclusionTraceChannel: ECollisionChannel;
+	FocusAttackInterpSpeed: number;
+	FocusReleaseInterpSpeed: number;
 	OcclusionLowPassFilterFrequency: number;
 	OcclusionVolumeAttenuation: number;
 	OcclusionInterpolationTime: number;
@@ -8057,6 +8724,9 @@ declare class SoundAttenuationSettings extends BaseAttenuationSettings {
 	ReverbWetLevelMax: number;
 	ReverbDistanceMin: number;
 	ReverbDistanceMax: number;
+	ManualReverbSendLevel: number;
+	CustomReverbSendCurve: RuntimeFloatCurve;
+	PluginSettings: SoundAttenuationPluginSettings;
 	clone() : SoundAttenuationSettings;
 	static C(Other: UObject | any): SoundAttenuationSettings;
 }
@@ -8070,6 +8740,8 @@ declare class SoundAttenuation extends UObject {
 	static C(Other: UObject | any): SoundAttenuation;
 }
 
+declare type ESubmixChannelFormat = 'Device' | 'Stereo' | 'Quad' | 'FiveDotOne' | 'SevenDotOne' | 'Ambisonics' | 'Count' | 'ESubmixChannelFormat_MAX';
+declare var ESubmixChannelFormat : { Device:'Device',Stereo:'Stereo',Quad:'Quad',FiveDotOne:'FiveDotOne',SevenDotOne:'SevenDotOne',Ambisonics:'Ambisonics',Count:'Count',ESubmixChannelFormat_MAX:'ESubmixChannelFormat_MAX', };
 declare class SoundEffectPreset extends UObject { 
 	static Load(ResourceName: string): SoundEffectPreset;
 	static Find(Outer: UObject, ResourceName: string): SoundEffectPreset;
@@ -8086,53 +8758,20 @@ declare class SoundEffectSubmixPreset extends SoundEffectPreset {
 	static C(Other: UObject | any): SoundEffectSubmixPreset;
 }
 
-declare class SoundSubmix extends UObject { 
-	ChildSubmixes: SoundSubmix[];
-	ParentSubmix: SoundSubmix;
-	SubmixEffectChain: SoundEffectSubmixPreset[];
-	static Load(ResourceName: string): SoundSubmix;
-	static Find(Outer: UObject, ResourceName: string): SoundSubmix;
-	static GetDefaultObject(): SoundSubmix;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmix;
-	static C(Other: UObject | any): SoundSubmix;
-}
-
-declare class SoundSubmixSendInfo { 
-	SendLevel: number;
-	SoundSubmix: SoundSubmix;
-	clone() : SoundSubmixSendInfo;
-	static C(Other: UObject | any): SoundSubmixSendInfo;
-}
-
-declare class SoundEffectSourcePreset extends SoundEffectPreset { 
-	static Load(ResourceName: string): SoundEffectSourcePreset;
-	static Find(Outer: UObject, ResourceName: string): SoundEffectSourcePreset;
-	static GetDefaultObject(): SoundEffectSourcePreset;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundEffectSourcePreset;
-	static C(Other: UObject | any): SoundEffectSourcePreset;
-}
-
-declare class SourceEffectChainEntry { 
-	Preset: SoundEffectSourcePreset;
-	bBypass: boolean;
-	clone() : SourceEffectChainEntry;
-	static C(Other: UObject | any): SourceEffectChainEntry;
-}
-
-declare class SoundEffectSourcePresetChain extends UObject { 
-	Chain: SourceEffectChainEntry[];
-	bPlayEffectChainTails: boolean;
-	static Load(ResourceName: string): SoundEffectSourcePresetChain;
-	static Find(Outer: UObject, ResourceName: string): SoundEffectSourcePresetChain;
-	static GetDefaultObject(): SoundEffectSourcePresetChain;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundEffectSourcePresetChain;
-	static C(Other: UObject | any): SoundEffectSourcePresetChain;
+declare class AmbisonicsSubmixSettingsBase extends UObject { 
+	static Load(ResourceName: string): AmbisonicsSubmixSettingsBase;
+	static Find(Outer: UObject, ResourceName: string): AmbisonicsSubmixSettingsBase;
+	static GetDefaultObject(): AmbisonicsSubmixSettingsBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AmbisonicsSubmixSettingsBase;
+	static C(Other: UObject | any): AmbisonicsSubmixSettingsBase;
 }
 
-declare type ESoundGroup = 'SOUNDGROUP_Default' | 'SOUNDGROUP_Effects' | 'SOUNDGROUP_UI' | 'SOUNDGROUP_Music' | 'SOUNDGROUP_Voice' | 'SOUNDGROUP_GameSoundGroup1' | 'SOUNDGROUP_GameSoundGroup2' | 'SOUNDGROUP_GameSoundGroup3' | 'SOUNDGROUP_GameSoundGroup4' | 'SOUNDGROUP_GameSoundGroup5' | 'SOUNDGROUP_GameSoundGroup6' | 'SOUNDGROUP_GameSoundGroup7' | 'SOUNDGROUP_GameSoundGroup8' | 'SOUNDGROUP_GameSoundGroup9' | 'SOUNDGROUP_GameSoundGroup10' | 'SOUNDGROUP_GameSoundGroup11' | 'SOUNDGROUP_GameSoundGroup12' | 'SOUNDGROUP_GameSoundGroup13' | 'SOUNDGROUP_GameSoundGroup14' | 'SOUNDGROUP_GameSoundGroup15' | 'SOUNDGROUP_GameSoundGroup16' | 'SOUNDGROUP_GameSoundGroup17' | 'SOUNDGROUP_GameSoundGroup18' | 'SOUNDGROUP_GameSoundGroup19' | 'SOUNDGROUP_GameSoundGroup20';
-declare var ESoundGroup : { SOUNDGROUP_Default:'SOUNDGROUP_Default',SOUNDGROUP_Effects:'SOUNDGROUP_Effects',SOUNDGROUP_UI:'SOUNDGROUP_UI',SOUNDGROUP_Music:'SOUNDGROUP_Music',SOUNDGROUP_Voice:'SOUNDGROUP_Voice',SOUNDGROUP_GameSoundGroup1:'SOUNDGROUP_GameSoundGroup1',SOUNDGROUP_GameSoundGroup2:'SOUNDGROUP_GameSoundGroup2',SOUNDGROUP_GameSoundGroup3:'SOUNDGROUP_GameSoundGroup3',SOUNDGROUP_GameSoundGroup4:'SOUNDGROUP_GameSoundGroup4',SOUNDGROUP_GameSoundGroup5:'SOUNDGROUP_GameSoundGroup5',SOUNDGROUP_GameSoundGroup6:'SOUNDGROUP_GameSoundGroup6',SOUNDGROUP_GameSoundGroup7:'SOUNDGROUP_GameSoundGroup7',SOUNDGROUP_GameSoundGroup8:'SOUNDGROUP_GameSoundGroup8',SOUNDGROUP_GameSoundGroup9:'SOUNDGROUP_GameSoundGroup9',SOUNDGROUP_GameSoundGroup10:'SOUNDGROUP_GameSoundGroup10',SOUNDGROUP_GameSoundGroup11:'SOUNDGROUP_GameSoundGroup11',SOUNDGROUP_GameSoundGroup12:'SOUNDGROUP_GameSoundGroup12',SOUNDGROUP_GameSoundGroup13:'SOUNDGROUP_GameSoundGroup13',SOUNDGROUP_GameSoundGroup14:'SOUNDGROUP_GameSoundGroup14',SOUNDGROUP_GameSoundGroup15:'SOUNDGROUP_GameSoundGroup15',SOUNDGROUP_GameSoundGroup16:'SOUNDGROUP_GameSoundGroup16',SOUNDGROUP_GameSoundGroup17:'SOUNDGROUP_GameSoundGroup17',SOUNDGROUP_GameSoundGroup18:'SOUNDGROUP_GameSoundGroup18',SOUNDGROUP_GameSoundGroup19:'SOUNDGROUP_GameSoundGroup19',SOUNDGROUP_GameSoundGroup20:'SOUNDGROUP_GameSoundGroup20', };
+declare type ESoundwaveSampleRateSettings = 'Max' | 'High' | 'Medium' | 'Low' | 'Min' | 'MatchDevice' | 'ESoundwaveSampleRateSettings_MAX';
+declare var ESoundwaveSampleRateSettings : { Max:'Max',High:'High',Medium:'Medium',Low:'Low',Min:'Min',MatchDevice:'MatchDevice',ESoundwaveSampleRateSettings_MAX:'ESoundwaveSampleRateSettings_MAX', };
+declare type ESoundGroup = 'SOUNDGROUP_Default' | 'SOUNDGROUP_Effects' | 'SOUNDGROUP_UI' | 'SOUNDGROUP_Music' | 'SOUNDGROUP_Voice' | 'SOUNDGROUP_GameSoundGroup1' | 'SOUNDGROUP_GameSoundGroup2' | 'SOUNDGROUP_GameSoundGroup3' | 'SOUNDGROUP_GameSoundGroup4' | 'SOUNDGROUP_GameSoundGroup5' | 'SOUNDGROUP_GameSoundGroup6' | 'SOUNDGROUP_GameSoundGroup7' | 'SOUNDGROUP_GameSoundGroup8' | 'SOUNDGROUP_GameSoundGroup9' | 'SOUNDGROUP_GameSoundGroup10' | 'SOUNDGROUP_GameSoundGroup11' | 'SOUNDGROUP_GameSoundGroup12' | 'SOUNDGROUP_GameSoundGroup13' | 'SOUNDGROUP_GameSoundGroup14' | 'SOUNDGROUP_GameSoundGroup15' | 'SOUNDGROUP_GameSoundGroup16' | 'SOUNDGROUP_GameSoundGroup17' | 'SOUNDGROUP_GameSoundGroup18' | 'SOUNDGROUP_GameSoundGroup19' | 'SOUNDGROUP_GameSoundGroup20' | 'SOUNDGROUP_MAX';
+declare var ESoundGroup : { SOUNDGROUP_Default:'SOUNDGROUP_Default',SOUNDGROUP_Effects:'SOUNDGROUP_Effects',SOUNDGROUP_UI:'SOUNDGROUP_UI',SOUNDGROUP_Music:'SOUNDGROUP_Music',SOUNDGROUP_Voice:'SOUNDGROUP_Voice',SOUNDGROUP_GameSoundGroup1:'SOUNDGROUP_GameSoundGroup1',SOUNDGROUP_GameSoundGroup2:'SOUNDGROUP_GameSoundGroup2',SOUNDGROUP_GameSoundGroup3:'SOUNDGROUP_GameSoundGroup3',SOUNDGROUP_GameSoundGroup4:'SOUNDGROUP_GameSoundGroup4',SOUNDGROUP_GameSoundGroup5:'SOUNDGROUP_GameSoundGroup5',SOUNDGROUP_GameSoundGroup6:'SOUNDGROUP_GameSoundGroup6',SOUNDGROUP_GameSoundGroup7:'SOUNDGROUP_GameSoundGroup7',SOUNDGROUP_GameSoundGroup8:'SOUNDGROUP_GameSoundGroup8',SOUNDGROUP_GameSoundGroup9:'SOUNDGROUP_GameSoundGroup9',SOUNDGROUP_GameSoundGroup10:'SOUNDGROUP_GameSoundGroup10',SOUNDGROUP_GameSoundGroup11:'SOUNDGROUP_GameSoundGroup11',SOUNDGROUP_GameSoundGroup12:'SOUNDGROUP_GameSoundGroup12',SOUNDGROUP_GameSoundGroup13:'SOUNDGROUP_GameSoundGroup13',SOUNDGROUP_GameSoundGroup14:'SOUNDGROUP_GameSoundGroup14',SOUNDGROUP_GameSoundGroup15:'SOUNDGROUP_GameSoundGroup15',SOUNDGROUP_GameSoundGroup16:'SOUNDGROUP_GameSoundGroup16',SOUNDGROUP_GameSoundGroup17:'SOUNDGROUP_GameSoundGroup17',SOUNDGROUP_GameSoundGroup18:'SOUNDGROUP_GameSoundGroup18',SOUNDGROUP_GameSoundGroup19:'SOUNDGROUP_GameSoundGroup19',SOUNDGROUP_GameSoundGroup20:'SOUNDGROUP_GameSoundGroup20',SOUNDGROUP_MAX:'SOUNDGROUP_MAX', };
 declare class SubtitleCue { 
-	Text: string;
+	text: string;
 	Time: number;
 	clone() : SubtitleCue;
 	static C(Other: UObject | any): SubtitleCue;
@@ -8148,8 +8787,8 @@ declare class LocalizedSubtitle {
 	static C(Other: UObject | any): LocalizedSubtitle;
 }
 
-declare type EEvaluateCurveTableResult = 'RowFound' | 'RowNotFound';
-declare var EEvaluateCurveTableResult : { RowFound:'RowFound',RowNotFound:'RowNotFound', };
+declare type EEvaluateCurveTableResult = 'RowFound' | 'RowNotFound' | 'EEvaluateCurveTableResult_MAX';
+declare var EEvaluateCurveTableResult : { RowFound:'RowFound',RowNotFound:'RowNotFound',EEvaluateCurveTableResult_MAX:'EEvaluateCurveTableResult_MAX', };
 declare class CurveTable extends UObject { 
 	AssetImportData: AssetImportData;
 	ImportPath: string;
@@ -8164,23 +8803,24 @@ declare class CurveTable extends UObject {
 
 declare class SoundWave extends SoundBase { 
 	CompressionQuality: number;
+	StreamingPriority: number;
+	SampleRateQuality: ESoundwaveSampleRateSettings;
+	SoundGroup: ESoundGroup;
 	bLooping: boolean;
 	bStreaming: boolean;
-	StreamingPriority: number;
 	bMature: boolean;
 	bManualWordWrap: boolean;
 	bSingleLine: boolean;
 	bVirtualizeWhenSilent: boolean;
-	SoundGroup: ESoundGroup;
+	bIsAmbisonics: boolean;
 	SpokenText: string;
 	SubtitlePriority: number;
 	Volume: number;
 	Pitch: number;
 	NumChannels: number;
-	SampleRate: number;
 	ChannelOffsets: number[];
 	ChannelSizes: number[];
-	RawPCMDataSize: number;
+	SampleRate: number;
 	Subtitles: SubtitleCue[];
 	Comment: string;
 	LocalizedSubtitles: LocalizedSubtitle[];
@@ -8196,6 +8836,80 @@ declare class SoundWave extends SoundBase {
 	static C(Other: UObject | any): SoundWave;
 }
 
+declare type EAudioRecordingExportType = 'SoundWave' | 'WavFile' | 'EAudioRecordingExportType_MAX';
+declare var EAudioRecordingExportType : { SoundWave:'SoundWave',WavFile:'WavFile',EAudioRecordingExportType_MAX:'EAudioRecordingExportType_MAX', };
+declare class SoundSubmix extends UObject { 
+	ChildSubmixes: SoundSubmix[];
+	ParentSubmix: SoundSubmix;
+	ChannelFormat: ESubmixChannelFormat;
+	SubmixEffectChain: SoundEffectSubmixPreset[];
+	AmbisonicsPluginSettings: AmbisonicsSubmixSettingsBase;
+	EnvelopeFollowerAttackTime: number;
+	EnvelopeFollowerReleaseTime: number;
+	OnSubmixRecordedFileDone: UnrealEngineMulticastDelegate<(ResultingSoundWave: SoundWave) => void>;
+	static Load(ResourceName: string): SoundSubmix;
+	static Find(Outer: UObject, ResourceName: string): SoundSubmix;
+	static GetDefaultObject(): SoundSubmix;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmix;
+	StopRecordingOutput(WorldContextObject: UObject,ExportType: EAudioRecordingExportType,Name: string,Path: string,ExistingSoundWaveToOverwrite: SoundWave): void;
+	StopEnvelopeFollowing(WorldContextObject: UObject): void;
+	StartRecordingOutput(WorldContextObject: UObject,ExpectedDuration: number): void;
+	StartEnvelopeFollowing(WorldContextObject: UObject): void;
+	static C(Other: UObject | any): SoundSubmix;
+}
+
+declare class SoundSubmixSendInfo { 
+	SendLevel: number;
+	SoundSubmix: SoundSubmix;
+	clone() : SoundSubmixSendInfo;
+	static C(Other: UObject | any): SoundSubmixSendInfo;
+}
+
+declare class SoundEffectSourcePreset extends SoundEffectPreset { 
+	static Load(ResourceName: string): SoundEffectSourcePreset;
+	static Find(Outer: UObject, ResourceName: string): SoundEffectSourcePreset;
+	static GetDefaultObject(): SoundEffectSourcePreset;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundEffectSourcePreset;
+	static C(Other: UObject | any): SoundEffectSourcePreset;
+}
+
+declare class SourceEffectChainEntry { 
+	Preset: SoundEffectSourcePreset;
+	bBypass: boolean;
+	clone() : SourceEffectChainEntry;
+	static C(Other: UObject | any): SourceEffectChainEntry;
+}
+
+declare class SoundEffectSourcePresetChain extends UObject { 
+	Chain: SourceEffectChainEntry[];
+	bPlayEffectChainTails: boolean;
+	static Load(ResourceName: string): SoundEffectSourcePresetChain;
+	static Find(Outer: UObject, ResourceName: string): SoundEffectSourcePresetChain;
+	static GetDefaultObject(): SoundEffectSourcePresetChain;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundEffectSourcePresetChain;
+	static C(Other: UObject | any): SoundEffectSourcePresetChain;
+}
+
+declare type ESourceBusChannels = 'Mono' | 'Stereo' | 'ESourceBusChannels_MAX';
+declare var ESourceBusChannels : { Mono:'Mono',Stereo:'Stereo',ESourceBusChannels_MAX:'ESourceBusChannels_MAX', };
+declare class SoundSourceBus extends SoundWave { 
+	SourceBusChannels: ESourceBusChannels;
+	SourceBusDuration: number;
+	bAutoDeactivateWhenSilent: boolean;
+	static Load(ResourceName: string): SoundSourceBus;
+	static Find(Outer: UObject, ResourceName: string): SoundSourceBus;
+	static GetDefaultObject(): SoundSourceBus;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSourceBus;
+	static C(Other: UObject | any): SoundSourceBus;
+}
+
+declare class SoundSourceBusSendInfo { 
+	SendLevel: number;
+	SoundSourceBus: SoundSourceBus;
+	clone() : SoundSourceBusSendInfo;
+	static C(Other: UObject | any): SoundSourceBusSendInfo;
+}
+
 declare class AudioComponentParam { 
 	ParamName: string;
 	FloatParam: number;
@@ -8220,24 +8934,34 @@ declare class AudioComponent extends SceneComponent {
 	bEnableLowPassFilter: boolean;
 	bOverridePriority: boolean;
 	bSuppressSubtitles: boolean;
+	bAutoManageAttachment: boolean;
 	AudioComponentUserID: string;
 	PitchModulationMin: number;
 	PitchModulationMax: number;
 	VolumeModulationMin: number;
 	VolumeModulationMax: number;
 	VolumeMultiplier: number;
+	EnvelopeFollowerAttackTime: number;
+	EnvelopeFollowerReleaseTime: number;
 	Priority: number;
 	SubtitlePriority: number;
 	VolumeWeightedPriorityScale: number;
-	PitchMultiplier: number;
 	HighFrequencyGainMultiplier: number;
+	PitchMultiplier: number;
 	LowPassFilterFrequency: number;
 	AttenuationSettings: SoundAttenuation;
 	AttenuationOverrides: SoundAttenuationSettings;
 	ConcurrencySettings: SoundConcurrency;
+	AutoAttachLocationRule: EAttachmentRule;
+	AutoAttachRotationRule: EAttachmentRule;
+	AutoAttachScaleRule: EAttachmentRule;
 	OnAudioFinished: UnrealEngineMulticastDelegate<() => void>;
 	OnAudioPlaybackPercent: UnrealEngineMulticastDelegate<(PlayingSoundWave: SoundWave, PlaybackPercent: number) => void>;
+	OnAudioSingleEnvelopeValue: UnrealEngineMulticastDelegate<(PlayingSoundWave: SoundWave, EnvelopeValue: number) => void>;
+	OnAudioMultiEnvelopeValue: UnrealEngineMulticastDelegate<(AverageEnvelopeValue: number, MaxEnvelope: number, NumWaveInstances: number) => void>;
 	OnQueueSubtitles: UnrealEngineDelegate<(Subtitles: SubtitleCue[], CueDuration: number) => void>;
+	AutoAttachParent: any;
+	AutoAttachSocketName: string;
 	static Load(ResourceName: string): AudioComponent;
 	static Find(Outer: UObject, ResourceName: string): AudioComponent;
 	static GetDefaultObject(): AudioComponent;
@@ -8252,7 +8976,7 @@ declare class AudioComponent extends SceneComponent {
 	SetPaused(bPause: boolean): void;
 	SetLowPassFilterFrequency(InLowPassFilterFrequency: number): void;
 	SetLowPassFilterEnabled(InLowPassFilterEnabled: boolean): void;
-	SetIntParameter(InName: string,InInt: number): void;
+	SetIntParameter(InName: string,inInt: number): void;
 	SetFloatParameter(InName: string,InFloat: number): void;
 	SetBoolParameter(InName: string,InBool: boolean): void;
 	Play(StartTime: number): void;
@@ -8269,18 +8993,26 @@ declare class SoundBase extends UObject {
 	SoundClassObject: SoundClass;
 	bDebug: boolean;
 	bOverrideConcurrency: boolean;
+	bOutputToBusOnly: boolean;
 	bIgnoreFocus: boolean;
+	bHasDelayNode: boolean;
+	bHasConcatenatorNode: boolean;
+	bHasVirtualizeWhenSilent: boolean;
+	bBypassVolumeScaleForPriority: boolean;
+	MaxConcurrentResolutionRule: EMaxConcurrentResolutionRule;
 	SoundConcurrencySettings: SoundConcurrency;
 	ConcurrencyOverrides: SoundConcurrencySettings;
-	MaxConcurrentResolutionRule: EMaxConcurrentResolutionRule;
 	MaxConcurrentPlayCount: number;
 	Duration: number;
-	AttenuationSettings: SoundAttenuation;
+	MaxDistance: number;
+	TotalSamples: number;
 	Priority: number;
+	AttenuationSettings: SoundAttenuation;
 	SoundSubmixObject: SoundSubmix;
 	SoundSubmixSends: SoundSubmixSendInfo[];
-	DefaultMasterReverbSendAmount: number;
 	SourceEffectChain: SoundEffectSourcePresetChain;
+	BusSends: SoundSourceBusSendInfo[];
+	PreEffectBusSends: SoundSourceBusSendInfo[];
 	static Load(ResourceName: string): SoundBase;
 	static Find(Outer: UObject, ResourceName: string): SoundBase;
 	static GetDefaultObject(): SoundBase;
@@ -8290,8 +9022,8 @@ declare class SoundBase extends UObject {
 	static SpawnSoundAttached(Sound: SoundBase,AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,LocationType: EAttachLocation,bStopWhenAttachedToDestroyed: boolean,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,ConcurrencySettings: SoundConcurrency,bAutoDestroy: boolean): AudioComponent;
 }
 
-declare type EUMGSequencePlayMode = 'Forward' | 'Reverse' | 'PingPong';
-declare var EUMGSequencePlayMode : { Forward:'Forward',Reverse:'Reverse',PingPong:'PingPong', };
+declare type EUMGSequencePlayMode = 'Forward' | 'Reverse' | 'PingPong' | 'EUMGSequencePlayMode_MAX';
+declare var EUMGSequencePlayMode : { Forward:'Forward',Reverse:'Reverse',PingPong:'PingPong',EUMGSequencePlayMode_MAX:'EUMGSequencePlayMode_MAX', };
 declare class InputEvent { 
 	clone() : InputEvent;
 	static C(Other: UObject | any): InputEvent;
@@ -8323,8 +9055,8 @@ declare class InputEvent {
 	static InputEvent_IsShiftDown(Input: InputEvent): boolean;
 }
 
-declare type ESlateGesture = 'None' | 'Scroll' | 'Magnify' | 'Swipe' | 'Rotate' | 'LongPress';
-declare var ESlateGesture : { None:'None',Scroll:'Scroll',Magnify:'Magnify',Swipe:'Swipe',Rotate:'Rotate',LongPress:'LongPress', };
+declare type ESlateGesture = 'None' | 'Scroll' | 'Magnify' | 'Swipe' | 'Rotate' | 'LongPress' | 'ESlateGesture_MAX';
+declare var ESlateGesture : { None:'None',Scroll:'Scroll',Magnify:'Magnify',Swipe:'Swipe',Rotate:'Rotate',LongPress:'LongPress',ESlateGesture_MAX:'ESlateGesture_MAX', };
 declare class EventReply { 
 	clone() : EventReply;
 	static C(Other: UObject | any): EventReply;
@@ -8360,7 +9092,7 @@ declare class UPointerEvent extends InputEvent {
 	PointerEvent_GetCursorDelta(): Vector2D;
 	PointerEvent_GetEffectingButton(): Key;
 	PointerEvent_GetGestureDelta(): Vector2D;
-	PointerEvent_GetGestureType(): ReturnValue;
+	PointerEvent_GetGestureType(): ESlateGesture;
 	PointerEvent_GetLastScreenSpacePosition(): Vector2D;
 	PointerEvent_GetPointerIndex(): number;
 	PointerEvent_GetScreenSpacePosition(): Vector2D;
@@ -8374,7 +9106,7 @@ declare class UPointerEvent extends InputEvent {
 	static PointerEvent_GetCursorDelta(Input: UPointerEvent): Vector2D;
 	static PointerEvent_GetEffectingButton(Input: UPointerEvent): Key;
 	static PointerEvent_GetGestureDelta(Input: UPointerEvent): Vector2D;
-	static PointerEvent_GetGestureType(Input: UPointerEvent): ReturnValue;
+	static PointerEvent_GetGestureType(Input: UPointerEvent): ESlateGesture;
 	static PointerEvent_GetLastScreenSpacePosition(Input: UPointerEvent): Vector2D;
 	static PointerEvent_GetPointerIndex(Input: UPointerEvent): number;
 	static PointerEvent_GetScreenSpacePosition(Input: UPointerEvent): Vector2D;
@@ -8421,14 +9153,14 @@ declare class PaintContext {
 	DrawBox(Position?: Vector2D,Size?: Vector2D,Brush?: SlateBrushAsset,Tint?: LinearColor): {Context: PaintContext};
 	DrawLine(PositionA?: Vector2D,PositionB?: Vector2D,Tint?: LinearColor,bAntiAlias?: boolean): {Context: PaintContext};
 	DrawLines(Points?: Vector2D[],Tint?: LinearColor,bAntiAlias?: boolean): {Context: PaintContext};
-	DrawText(InString?: string,Position?: Vector2D,Tint?: LinearColor): {Context: PaintContext};
-	DrawTextFormatted(Text?: string,Position?: Vector2D,Font?: Font,FontSize?: number,FontTypeFace?: string,Tint?: LinearColor): {Context: PaintContext};
+	DrawText(inString?: string,Position?: Vector2D,Tint?: LinearColor): {Context: PaintContext};
+	DrawTextFormatted(text?: string,Position?: Vector2D,Font?: Font,FontSize?: number,FontTypeFace?: string,Tint?: LinearColor): {Context: PaintContext};
 	static DrawSpaceSpline(Context?: PaintContext,InStart?: Vector2D,InStartDir?: Vector2D,InEnd?: Vector2D,InEndDir?: Vector2D,InThickness?: number,InTint?: LinearColor): {Context: PaintContext};
 	static DrawBox(Context?: PaintContext,Position?: Vector2D,Size?: Vector2D,Brush?: SlateBrushAsset,Tint?: LinearColor): {Context: PaintContext};
 	static DrawLine(Context?: PaintContext,PositionA?: Vector2D,PositionB?: Vector2D,Tint?: LinearColor,bAntiAlias?: boolean): {Context: PaintContext};
 	static DrawLines(Context?: PaintContext,Points?: Vector2D[],Tint?: LinearColor,bAntiAlias?: boolean): {Context: PaintContext};
-	static DrawText(Context?: PaintContext,InString?: string,Position?: Vector2D,Tint?: LinearColor): {Context: PaintContext};
-	static DrawTextFormatted(Context?: PaintContext,Text?: string,Position?: Vector2D,Font?: Font,FontSize?: number,FontTypeFace?: string,Tint?: LinearColor): {Context: PaintContext};
+	static DrawText(Context?: PaintContext,inString?: string,Position?: Vector2D,Tint?: LinearColor): {Context: PaintContext};
+	static DrawTextFormatted(Context?: PaintContext,text?: string,Position?: Vector2D,Font?: Font,FontSize?: number,FontTypeFace?: string,Tint?: LinearColor): {Context: PaintContext};
 }
 
 declare class MotionEvent extends InputEvent { 
@@ -8443,13 +9175,13 @@ declare class CharacterEvent extends InputEvent {
 	static GetInputEventFromCharacterEvent(Event: CharacterEvent): InputEvent;
 }
 
-declare type EDragPivot = 'MouseDown' | 'TopLeft' | 'TopCenter' | 'TopRight' | 'CenterLeft' | 'CenterCenter' | 'CenterRight' | 'BottomLeft' | 'BottomCenter' | 'BottomRight';
-declare var EDragPivot : { MouseDown:'MouseDown',TopLeft:'TopLeft',TopCenter:'TopCenter',TopRight:'TopRight',CenterLeft:'CenterLeft',CenterCenter:'CenterCenter',CenterRight:'CenterRight',BottomLeft:'BottomLeft',BottomCenter:'BottomCenter',BottomRight:'BottomRight', };
+declare type EDragPivot = 'MouseDown' | 'TopLeft' | 'TopCenter' | 'TopRight' | 'CenterLeft' | 'CenterCenter' | 'CenterRight' | 'BottomLeft' | 'BottomCenter' | 'BottomRight' | 'EDragPivot_MAX';
+declare var EDragPivot : { MouseDown:'MouseDown',TopLeft:'TopLeft',TopCenter:'TopCenter',TopRight:'TopRight',CenterLeft:'CenterLeft',CenterCenter:'CenterCenter',CenterRight:'CenterRight',BottomLeft:'BottomLeft',BottomCenter:'BottomCenter',BottomRight:'BottomRight',EDragPivot_MAX:'EDragPivot_MAX', };
 declare class DragDropOperation extends UObject { 
 	Tag: string;
 	Payload: UObject;
 	DefaultDragVisual: Widget;
-	Pivot: Pivot;
+	Pivot: EDragPivot;
 	Offset: Vector2D;
 	OnDrop: UnrealEngineMulticastDelegate<(Operation: DragDropOperation) => void>;
 	OnDragCancelled: UnrealEngineMulticastDelegate<(Operation: DragDropOperation) => void>;
@@ -8479,21 +9211,22 @@ declare class UserWidget extends Widget {
 	ForegroundColor: SlateColor;
 	ForegroundColorDelegate: UnrealEngineDelegate<() => SlateColor>;
 	Padding: Margin;
-	bSupportsKeyboardFocus: boolean;
-	bIsFocusable: boolean;
 	ActiveSequencePlayers: UMGSequencePlayer[];
 	StoppedSequencePlayers: UMGSequencePlayer[];
-	bStopAction: boolean;
-	Priority: number;
 	NamedSlotBindings: NamedSlotBinding[];
 	WidgetTree: WidgetTree;
 	DesignTimeSize: Vector2D;
-	DesignSizeMode: DesignSizeMode;
+	DesignSizeMode: EDesignPreviewSizeMode;
 	PaletteCategory: string;
 	PreviewBackground: Texture2D;
-	bCanEverTick: boolean;
-	bCanEverPaint: boolean;
+	Priority: number;
+	bSupportsKeyboardFocus: boolean;
+	bIsFocusable: boolean;
+	bStopAction: boolean;
+	bHasScriptImplementedTick: boolean;
+	bHasScriptImplementedPaint: boolean;
 	bCookedWidgetTree: boolean;
+	TickFrequency: EWidgetTickFrequency;
 	InputComponent: InputComponent;
 	static Load(ResourceName: string): UserWidget;
 	static Find(Outer: UObject, ResourceName: string): UserWidget;
@@ -8503,12 +9236,13 @@ declare class UserWidget extends Widget {
 	Tick(MyGeometry: Geometry,InDeltaTime: number): void;
 	StopListeningForInputAction(ActionName: string,EventType: EInputEvent): void;
 	StopListeningForAllInputActions(): void;
+	StopAnimationsAndLatentActions(): void;
 	StopAnimation(InAnimation: WidgetAnimation): void;
+	StopAllAnimations(): void;
 	SetPositionInViewport(Position: Vector2D,bRemoveDPIScale: boolean): void;
 	SetPlaybackSpeed(InAnimation: WidgetAnimation,PlaybackSpeed: number): void;
 	SetPadding(InPadding: Margin): void;
 	SetOwningPlayer(LocalPlayerController: PlayerController): void;
-	SetOwningLocalPlayer(LocalPlayer: LocalPlayer): void;
 	SetNumLoopsToPlay(InAnimation: WidgetAnimation,NumLoopsToPlay: number): void;
 	SetInputActionPriority(NewPriority: number): void;
 	SetInputActionBlocking(bShouldBlock: boolean): void;
@@ -8528,6 +9262,7 @@ declare class UserWidget extends Widget {
 	OnTouchStarted(MyGeometry: Geometry,InTouchEvent: UPointerEvent): EventReply;
 	OnTouchMoved(MyGeometry: Geometry,InTouchEvent: UPointerEvent): EventReply;
 	OnTouchGesture(MyGeometry: Geometry,GestureEvent: UPointerEvent): EventReply;
+	OnTouchForceChanged(MyGeometry: Geometry,InTouchEvent: UPointerEvent): EventReply;
 	OnTouchEnded(MyGeometry: Geometry,InTouchEvent: UPointerEvent): EventReply;
 	OnRemovedFromFocusPath(InFocusEvent: UFocusEvent): void;
 	OnPreviewMouseButtonDown(MyGeometry: Geometry,MouseEvent: UPointerEvent): EventReply;
@@ -8545,6 +9280,7 @@ declare class UserWidget extends Widget {
 	OnKeyUp(MyGeometry: Geometry,InKeyEvent: KeyEvent): EventReply;
 	OnKeyDown(MyGeometry: Geometry,InKeyEvent: KeyEvent): EventReply;
 	OnKeyChar(MyGeometry: Geometry,InCharacterEvent: CharacterEvent): EventReply;
+	OnInitialized(): void;
 	OnFocusReceived(MyGeometry: Geometry,InFocusEvent: UFocusEvent): EventReply;
 	OnFocusLost(InFocusEvent: UFocusEvent): void;
 	OnDrop(MyGeometry: Geometry,UPointerEvent: UPointerEvent,Operation: DragDropOperation): boolean;
@@ -8565,14 +9301,13 @@ declare class UserWidget extends Widget {
 	IsAnimationPlayingForward(InAnimation: WidgetAnimation): boolean;
 	IsAnimationPlaying(InAnimation: WidgetAnimation): boolean;
 	GetOwningPlayerPawn(): Pawn;
-	GetOwningPlayer(): PlayerController;
-	GetOwningLocalPlayer(): LocalPlayer;
 	GetIsVisible(): boolean;
 	GetAnimationCurrentTime(InAnimation: WidgetAnimation): number;
 	GetAnchorsInViewport(): Anchors;
 	GetAlignmentInViewport(): Vector2D;
 	Destruct(): void;
 	Construct(): void;
+	CancelLatentActions(): void;
 	AddToViewport(ZOrder: number): void;
 	AddToPlayerScreen(ZOrder: number): boolean;
 	static C(Other: UObject | any): UserWidget;
@@ -8587,6 +9322,13 @@ declare class ViewTargetTransitionParams {
 	static C(Other: UObject | any): ViewTargetTransitionParams;
 }
 
+declare class UpdateLevelVisibilityLevelInfo { 
+	PackageName: string;
+	bIsVisible: boolean;
+	clone() : UpdateLevelVisibilityLevelInfo;
+	static C(Other: UObject | any): UpdateLevelVisibilityLevelInfo;
+}
+
 declare class HapticFeedbackEffect_Base extends UObject { 
 	static Load(ResourceName: string): HapticFeedbackEffect_Base;
 	static Find(Outer: UObject, ResourceName: string): HapticFeedbackEffect_Base;
@@ -8595,8 +9337,8 @@ declare class HapticFeedbackEffect_Base extends UObject {
 	static C(Other: UObject | any): HapticFeedbackEffect_Base;
 }
 
-declare type EDynamicForceFeedbackAction = 'Start' | 'Update' | 'Stop';
-declare var EDynamicForceFeedbackAction : { Start:'Start',Update:'Update',Stop:'Stop', };
+declare type EDynamicForceFeedbackAction = 'Start' | 'Update' | 'Stop' | 'EDynamicForceFeedbackAction_MAX';
+declare var EDynamicForceFeedbackAction : { Start:'Start',Update:'Update',Stop:'Stop',EDynamicForceFeedbackAction_MAX:'EDynamicForceFeedbackAction_MAX', };
 declare class LatentActionInfo { 
 	Linkage: number;
 	UUID: number;
@@ -8606,14 +9348,24 @@ declare class LatentActionInfo {
 	static C(Other: UObject | any): LatentActionInfo;
 }
 
-declare type EObjectTypeQuery = 'ObjectTypeQuery1' | 'ObjectTypeQuery2' | 'ObjectTypeQuery3' | 'ObjectTypeQuery4' | 'ObjectTypeQuery5' | 'ObjectTypeQuery6' | 'ObjectTypeQuery7' | 'ObjectTypeQuery8' | 'ObjectTypeQuery9' | 'ObjectTypeQuery10' | 'ObjectTypeQuery11' | 'ObjectTypeQuery12' | 'ObjectTypeQuery13' | 'ObjectTypeQuery14' | 'ObjectTypeQuery15' | 'ObjectTypeQuery16' | 'ObjectTypeQuery17' | 'ObjectTypeQuery18' | 'ObjectTypeQuery19' | 'ObjectTypeQuery20' | 'ObjectTypeQuery21' | 'ObjectTypeQuery22' | 'ObjectTypeQuery23' | 'ObjectTypeQuery24' | 'ObjectTypeQuery25' | 'ObjectTypeQuery26' | 'ObjectTypeQuery27' | 'ObjectTypeQuery28' | 'ObjectTypeQuery29' | 'ObjectTypeQuery30' | 'ObjectTypeQuery31' | 'ObjectTypeQuery32' | 'ObjectTypeQuery_MAX';
-declare var EObjectTypeQuery : { ObjectTypeQuery1:'ObjectTypeQuery1',ObjectTypeQuery2:'ObjectTypeQuery2',ObjectTypeQuery3:'ObjectTypeQuery3',ObjectTypeQuery4:'ObjectTypeQuery4',ObjectTypeQuery5:'ObjectTypeQuery5',ObjectTypeQuery6:'ObjectTypeQuery6',ObjectTypeQuery7:'ObjectTypeQuery7',ObjectTypeQuery8:'ObjectTypeQuery8',ObjectTypeQuery9:'ObjectTypeQuery9',ObjectTypeQuery10:'ObjectTypeQuery10',ObjectTypeQuery11:'ObjectTypeQuery11',ObjectTypeQuery12:'ObjectTypeQuery12',ObjectTypeQuery13:'ObjectTypeQuery13',ObjectTypeQuery14:'ObjectTypeQuery14',ObjectTypeQuery15:'ObjectTypeQuery15',ObjectTypeQuery16:'ObjectTypeQuery16',ObjectTypeQuery17:'ObjectTypeQuery17',ObjectTypeQuery18:'ObjectTypeQuery18',ObjectTypeQuery19:'ObjectTypeQuery19',ObjectTypeQuery20:'ObjectTypeQuery20',ObjectTypeQuery21:'ObjectTypeQuery21',ObjectTypeQuery22:'ObjectTypeQuery22',ObjectTypeQuery23:'ObjectTypeQuery23',ObjectTypeQuery24:'ObjectTypeQuery24',ObjectTypeQuery25:'ObjectTypeQuery25',ObjectTypeQuery26:'ObjectTypeQuery26',ObjectTypeQuery27:'ObjectTypeQuery27',ObjectTypeQuery28:'ObjectTypeQuery28',ObjectTypeQuery29:'ObjectTypeQuery29',ObjectTypeQuery30:'ObjectTypeQuery30',ObjectTypeQuery31:'ObjectTypeQuery31',ObjectTypeQuery32:'ObjectTypeQuery32',ObjectTypeQuery_MAX:'ObjectTypeQuery_MAX', };
-declare type ETraceTypeQuery = 'TraceTypeQuery1' | 'TraceTypeQuery2' | 'TraceTypeQuery3' | 'TraceTypeQuery4' | 'TraceTypeQuery5' | 'TraceTypeQuery6' | 'TraceTypeQuery7' | 'TraceTypeQuery8' | 'TraceTypeQuery9' | 'TraceTypeQuery10' | 'TraceTypeQuery11' | 'TraceTypeQuery12' | 'TraceTypeQuery13' | 'TraceTypeQuery14' | 'TraceTypeQuery15' | 'TraceTypeQuery16' | 'TraceTypeQuery17' | 'TraceTypeQuery18' | 'TraceTypeQuery19' | 'TraceTypeQuery20' | 'TraceTypeQuery21' | 'TraceTypeQuery22' | 'TraceTypeQuery23' | 'TraceTypeQuery24' | 'TraceTypeQuery25' | 'TraceTypeQuery26' | 'TraceTypeQuery27' | 'TraceTypeQuery28' | 'TraceTypeQuery29' | 'TraceTypeQuery30' | 'TraceTypeQuery31' | 'TraceTypeQuery32' | 'TraceTypeQuery_MAX';
-declare var ETraceTypeQuery : { TraceTypeQuery1:'TraceTypeQuery1',TraceTypeQuery2:'TraceTypeQuery2',TraceTypeQuery3:'TraceTypeQuery3',TraceTypeQuery4:'TraceTypeQuery4',TraceTypeQuery5:'TraceTypeQuery5',TraceTypeQuery6:'TraceTypeQuery6',TraceTypeQuery7:'TraceTypeQuery7',TraceTypeQuery8:'TraceTypeQuery8',TraceTypeQuery9:'TraceTypeQuery9',TraceTypeQuery10:'TraceTypeQuery10',TraceTypeQuery11:'TraceTypeQuery11',TraceTypeQuery12:'TraceTypeQuery12',TraceTypeQuery13:'TraceTypeQuery13',TraceTypeQuery14:'TraceTypeQuery14',TraceTypeQuery15:'TraceTypeQuery15',TraceTypeQuery16:'TraceTypeQuery16',TraceTypeQuery17:'TraceTypeQuery17',TraceTypeQuery18:'TraceTypeQuery18',TraceTypeQuery19:'TraceTypeQuery19',TraceTypeQuery20:'TraceTypeQuery20',TraceTypeQuery21:'TraceTypeQuery21',TraceTypeQuery22:'TraceTypeQuery22',TraceTypeQuery23:'TraceTypeQuery23',TraceTypeQuery24:'TraceTypeQuery24',TraceTypeQuery25:'TraceTypeQuery25',TraceTypeQuery26:'TraceTypeQuery26',TraceTypeQuery27:'TraceTypeQuery27',TraceTypeQuery28:'TraceTypeQuery28',TraceTypeQuery29:'TraceTypeQuery29',TraceTypeQuery30:'TraceTypeQuery30',TraceTypeQuery31:'TraceTypeQuery31',TraceTypeQuery32:'TraceTypeQuery32',TraceTypeQuery_MAX:'TraceTypeQuery_MAX', };
-declare type ETravelType = 'TRAVEL_Absolute' | 'TRAVEL_Partial' | 'TRAVEL_Relative';
-declare var ETravelType : { TRAVEL_Absolute:'TRAVEL_Absolute',TRAVEL_Partial:'TRAVEL_Partial',TRAVEL_Relative:'TRAVEL_Relative', };
-declare type EMouseLockMode = 'DoNotLock' | 'LockOnCapture' | 'LockAlways';
-declare var EMouseLockMode : { DoNotLock:'DoNotLock',LockOnCapture:'LockOnCapture',LockAlways:'LockAlways', };
+declare type EObjectTypeQuery = 'ObjectTypeQuery1' | 'ObjectTypeQuery2' | 'ObjectTypeQuery3' | 'ObjectTypeQuery4' | 'ObjectTypeQuery5' | 'ObjectTypeQuery6' | 'ObjectTypeQuery7' | 'ObjectTypeQuery8' | 'ObjectTypeQuery9' | 'ObjectTypeQuery10' | 'ObjectTypeQuery11' | 'ObjectTypeQuery12' | 'ObjectTypeQuery13' | 'ObjectTypeQuery14' | 'ObjectTypeQuery15' | 'ObjectTypeQuery16' | 'ObjectTypeQuery17' | 'ObjectTypeQuery18' | 'ObjectTypeQuery19' | 'ObjectTypeQuery20' | 'ObjectTypeQuery21' | 'ObjectTypeQuery22' | 'ObjectTypeQuery23' | 'ObjectTypeQuery24' | 'ObjectTypeQuery25' | 'ObjectTypeQuery26' | 'ObjectTypeQuery27' | 'ObjectTypeQuery28' | 'ObjectTypeQuery29' | 'ObjectTypeQuery30' | 'ObjectTypeQuery31' | 'ObjectTypeQuery32' | 'ObjectTypeQuery_MAX' | 'EObjectTypeQuery_MAX';
+declare var EObjectTypeQuery : { ObjectTypeQuery1:'ObjectTypeQuery1',ObjectTypeQuery2:'ObjectTypeQuery2',ObjectTypeQuery3:'ObjectTypeQuery3',ObjectTypeQuery4:'ObjectTypeQuery4',ObjectTypeQuery5:'ObjectTypeQuery5',ObjectTypeQuery6:'ObjectTypeQuery6',ObjectTypeQuery7:'ObjectTypeQuery7',ObjectTypeQuery8:'ObjectTypeQuery8',ObjectTypeQuery9:'ObjectTypeQuery9',ObjectTypeQuery10:'ObjectTypeQuery10',ObjectTypeQuery11:'ObjectTypeQuery11',ObjectTypeQuery12:'ObjectTypeQuery12',ObjectTypeQuery13:'ObjectTypeQuery13',ObjectTypeQuery14:'ObjectTypeQuery14',ObjectTypeQuery15:'ObjectTypeQuery15',ObjectTypeQuery16:'ObjectTypeQuery16',ObjectTypeQuery17:'ObjectTypeQuery17',ObjectTypeQuery18:'ObjectTypeQuery18',ObjectTypeQuery19:'ObjectTypeQuery19',ObjectTypeQuery20:'ObjectTypeQuery20',ObjectTypeQuery21:'ObjectTypeQuery21',ObjectTypeQuery22:'ObjectTypeQuery22',ObjectTypeQuery23:'ObjectTypeQuery23',ObjectTypeQuery24:'ObjectTypeQuery24',ObjectTypeQuery25:'ObjectTypeQuery25',ObjectTypeQuery26:'ObjectTypeQuery26',ObjectTypeQuery27:'ObjectTypeQuery27',ObjectTypeQuery28:'ObjectTypeQuery28',ObjectTypeQuery29:'ObjectTypeQuery29',ObjectTypeQuery30:'ObjectTypeQuery30',ObjectTypeQuery31:'ObjectTypeQuery31',ObjectTypeQuery32:'ObjectTypeQuery32',ObjectTypeQuery_MAX:'ObjectTypeQuery_MAX',EObjectTypeQuery_MAX:'EObjectTypeQuery_MAX', };
+declare type ETraceTypeQuery = 'TraceTypeQuery1' | 'TraceTypeQuery2' | 'TraceTypeQuery3' | 'TraceTypeQuery4' | 'TraceTypeQuery5' | 'TraceTypeQuery6' | 'TraceTypeQuery7' | 'TraceTypeQuery8' | 'TraceTypeQuery9' | 'TraceTypeQuery10' | 'TraceTypeQuery11' | 'TraceTypeQuery12' | 'TraceTypeQuery13' | 'TraceTypeQuery14' | 'TraceTypeQuery15' | 'TraceTypeQuery16' | 'TraceTypeQuery17' | 'TraceTypeQuery18' | 'TraceTypeQuery19' | 'TraceTypeQuery20' | 'TraceTypeQuery21' | 'TraceTypeQuery22' | 'TraceTypeQuery23' | 'TraceTypeQuery24' | 'TraceTypeQuery25' | 'TraceTypeQuery26' | 'TraceTypeQuery27' | 'TraceTypeQuery28' | 'TraceTypeQuery29' | 'TraceTypeQuery30' | 'TraceTypeQuery31' | 'TraceTypeQuery32' | 'TraceTypeQuery_MAX' | 'ETraceTypeQuery_MAX';
+declare var ETraceTypeQuery : { TraceTypeQuery1:'TraceTypeQuery1',TraceTypeQuery2:'TraceTypeQuery2',TraceTypeQuery3:'TraceTypeQuery3',TraceTypeQuery4:'TraceTypeQuery4',TraceTypeQuery5:'TraceTypeQuery5',TraceTypeQuery6:'TraceTypeQuery6',TraceTypeQuery7:'TraceTypeQuery7',TraceTypeQuery8:'TraceTypeQuery8',TraceTypeQuery9:'TraceTypeQuery9',TraceTypeQuery10:'TraceTypeQuery10',TraceTypeQuery11:'TraceTypeQuery11',TraceTypeQuery12:'TraceTypeQuery12',TraceTypeQuery13:'TraceTypeQuery13',TraceTypeQuery14:'TraceTypeQuery14',TraceTypeQuery15:'TraceTypeQuery15',TraceTypeQuery16:'TraceTypeQuery16',TraceTypeQuery17:'TraceTypeQuery17',TraceTypeQuery18:'TraceTypeQuery18',TraceTypeQuery19:'TraceTypeQuery19',TraceTypeQuery20:'TraceTypeQuery20',TraceTypeQuery21:'TraceTypeQuery21',TraceTypeQuery22:'TraceTypeQuery22',TraceTypeQuery23:'TraceTypeQuery23',TraceTypeQuery24:'TraceTypeQuery24',TraceTypeQuery25:'TraceTypeQuery25',TraceTypeQuery26:'TraceTypeQuery26',TraceTypeQuery27:'TraceTypeQuery27',TraceTypeQuery28:'TraceTypeQuery28',TraceTypeQuery29:'TraceTypeQuery29',TraceTypeQuery30:'TraceTypeQuery30',TraceTypeQuery31:'TraceTypeQuery31',TraceTypeQuery32:'TraceTypeQuery32',TraceTypeQuery_MAX:'TraceTypeQuery_MAX',ETraceTypeQuery_MAX:'ETraceTypeQuery_MAX', };
+declare class UpdateLevelStreamingLevelStatus { 
+	PackageName: string;
+	LODIndex: number;
+	bNewShouldBeLoaded: boolean;
+	bNewShouldBeVisible: boolean;
+	bNewShouldBlockOnLoad: boolean;
+	clone() : UpdateLevelStreamingLevelStatus;
+	static C(Other: UObject | any): UpdateLevelStreamingLevelStatus;
+}
+
+declare type ETravelType = 'TRAVEL_Absolute' | 'TRAVEL_Partial' | 'TRAVEL_Relative' | 'TRAVEL_MAX';
+declare var ETravelType : { TRAVEL_Absolute:'TRAVEL_Absolute',TRAVEL_Partial:'TRAVEL_Partial',TRAVEL_Relative:'TRAVEL_Relative',TRAVEL_MAX:'TRAVEL_MAX', };
+declare type EMouseLockMode = 'DoNotLock' | 'LockOnCapture' | 'LockAlways' | 'LockInFullscreen' | 'EMouseLockMode_MAX';
+declare var EMouseLockMode : { DoNotLock:'DoNotLock',LockOnCapture:'LockOnCapture',LockAlways:'LockAlways',LockInFullscreen:'LockInFullscreen',EMouseLockMode_MAX:'EMouseLockMode_MAX', };
 declare class PlayerController extends Controller { 
 	Player: Player;
 	AcknowledgedPawn: Pawn;
@@ -8654,35 +9406,38 @@ declare class PlayerController extends Controller {
 	DefaultClickTraceChannel: ECollisionChannel;
 	CurrentClickTraceChannel: ECollisionChannel;
 	HitResultTraceDistance: number;
+	SeamlessTravelCount: any;
+	LastCompletedSeamlessTravelCount: any;
 	InactiveStateInputComponent: InputComponent;
 	bShouldPerformFullTickWhenPaused: boolean;
 	CurrentTouchInterface: TouchInterface;
 	SpectatorPawn: SpectatorPawn;
-	SpawnLocation: Vector;
 	bIsLocalPlayerController: boolean;
-	SeamlessTravelCount: any;
-	LastCompletedSeamlessTravelCount: any;
+	SpawnLocation: Vector;
 	static GetDefaultObject(): PlayerController;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlayerController;
 	WasInputKeyJustReleased(Key: Key): boolean;
 	WasInputKeyJustPressed(Key: Key): boolean;
 	ToggleSpeaking(bInSpeaking: boolean): void;
 	SwitchLevel(URL: string): void;
-	StopHapticEffect(Hand: Hand): void;
+	StopHapticEffect(Hand: EControllerHand): void;
 	StartFire(FireModeNum: number): void;
 	SetVirtualJoystickVisibility(bVisible: boolean): void;
 	SetViewTargetWithBlend(NewViewTarget: Actor,BlendTime: number,BlendFunc: EViewTargetBlendFunction,BlendExp: number,bLockOutgoing: boolean): void;
 	SetName(S: string): void;
 	SetMouseLocation(X: number,Y: number): void;
 	SetMouseCursorWidget(Cursor: EMouseCursor,CursorWidget: UserWidget): void;
-	SetHapticsByValue(Frequency: number,Amplitude: number,Hand: Hand): void;
+	SetHapticsByValue(Frequency: number,Amplitude: number,Hand: EControllerHand): void;
+	SetDisableHaptics(bNewDisabled: boolean): void;
 	SetControllerLightColor(Color: Color): void;
 	SetCinematicMode(bInCinematicMode: boolean,bHidePlayer: boolean,bAffectsHUD: boolean,bAffectsMovement: boolean,bAffectsTurning: boolean): void;
 	SetAudioListenerOverride(AttachToComponent: SceneComponent,Location: Vector,Rotation: Rotator): void;
+	SetAudioListenerAttenuationOverride(AttachToComponent: SceneComponent,AttenuationLocationOVerride: Vector): void;
 	ServerViewSelf(TransitionParams: ViewTargetTransitionParams): void;
 	ServerViewPrevPlayer(): void;
 	ServerViewNextPlayer(): void;
 	ServerVerifyViewTarget(): void;
+	ServerUpdateMultipleLevelsVisibility(LevelVisibilities: UpdateLevelVisibilityLevelInfo[]): void;
 	ServerUpdateLevelVisibility(PackageName: string,bIsVisible: boolean): void;
 	ServerUpdateCamera(CamLoc: Vector_NetQuantize,CamPitchAndYaw: number): void;
 	ServerUnmutePlayer(PlayerId: UniqueNetIdRepl): void;
@@ -8702,7 +9457,7 @@ declare class PlayerController extends Controller {
 	SendToConsole(Command: string): void;
 	RestartLevel(): void;
 	ProjectWorldLocationToScreen(WorldLocation: Vector,ScreenLocation?: Vector2D,bPlayerViewportRelative?: boolean): {ScreenLocation: Vector2D, $: boolean};
-	PlayHapticEffect(HapticEffect: HapticFeedbackEffect_Base,Hand: Hand,Scale: number,bLoop: boolean): void;
+	PlayHapticEffect(HapticEffect: HapticFeedbackEffect_Base,Hand: EControllerHand,Scale: number,bLoop: boolean): void;
 	PlayDynamicForceFeedback(Intensity: number,Duration: number,bAffectsLeftLarge: boolean,bAffectsLeftSmall: boolean,bAffectsRightLarge: boolean,bAffectsRightSmall: boolean,Action: EDynamicForceFeedbackAction,LatentInfo: LatentActionInfo): void;
 	Pause(): void;
 	OnServerStartedVisualLogger(bIsLogging: boolean): void;
@@ -8733,6 +9488,7 @@ declare class PlayerController extends Controller {
 	ConsoleKey(Key: Key): void;
 	ClientWasKicked(KickReason: string): void;
 	ClientVoiceHandshakeComplete(): void;
+	ClientUpdateMultipleLevelsStreamingStatus(LevelStatuses: UpdateLevelStreamingLevelStatus[]): void;
 	ClientUpdateLevelStreamingStatus(PackageName: string,bNewShouldBeLoaded: boolean,bNewShouldBeVisible: boolean,bNewShouldBlockOnLoad: boolean,LODIndex: number): void;
 	ClientUnmutePlayer(PlayerId: UniqueNetIdRepl): void;
 	ClientTravelInternal(URL: string,TravelType: ETravelType,bSeamless: boolean,MapPackageGuid: Guid): void;
@@ -8751,6 +9507,7 @@ declare class PlayerController extends Controller {
 	ClientSetCameraMode(NewCamMode: string): void;
 	ClientSetCameraFade(bEnableFading: boolean,FadeColor: Color,FadeAlpha: Vector2D,FadeTime: number,bFadeAudio: boolean): void;
 	ClientSetBlockOnAsyncLoading(): void;
+	ClientReturnToMainMenuWithTextReason(ReturnReason: string): void;
 	ClientReturnToMainMenu(ReturnReason: string): void;
 	ClientRetryClientRestart(NewPawn: Pawn): void;
 	ClientRestart(NewPawn: Pawn): void;
@@ -8761,7 +9518,7 @@ declare class PlayerController extends Controller {
 	ClientPrepareMapChange(LevelName: string,bFirst: boolean,bLast: boolean): void;
 	ClientPlaySoundAtLocation(Sound: SoundBase,Location: Vector,VolumeMultiplier: number,PitchMultiplier: number): void;
 	ClientPlaySound(Sound: SoundBase,VolumeMultiplier: number,PitchMultiplier: number): void;
-	ClientPlayForceFeedback(ForceFeedbackEffect: ForceFeedbackEffect,bLooping: boolean,Tag: string): void;
+	ClientPlayForceFeedback(ForceFeedbackEffect: ForceFeedbackEffect,bLooping: boolean,bIgnoreTimeDilation: boolean,Tag: string): void;
 	ClientPlayCameraShake(Shake: UnrealEngineClass,Scale: number,PlaySpace: ECameraAnimPlaySpace,UserPlaySpaceRot: Rotator): void;
 	ClientPlayCameraAnim(AnimToPlay: CameraAnim,Scale: number,Rate: number,BlendInTime: number,BlendOutTime: number,bLoop: boolean,bRandomStartTime: boolean,Space: ECameraAnimPlaySpace,CustomPlaySpace: Rotator): void;
 	ClientMutePlayer(PlayerId: UniqueNetIdRepl): void;
@@ -8780,6 +9537,8 @@ declare class PlayerController extends Controller {
 	ClientCancelPendingMapChange(): void;
 	ClientAddTextureStreamingLoc(InLoc: Vector,Duration: number,bOverrideLocation: boolean): void;
 	ClearAudioListenerOverride(): void;
+	ClearAudioListenerAttenuationOverride(): void;
+	CanRestartPlayer(): boolean;
 	Camera(NewMode: string): void;
 	AddYawInput(Val: number): void;
 	AddRollInput(Val: number): void;
@@ -8787,6 +9546,7 @@ declare class PlayerController extends Controller {
 	ActivateTouchInterface(NewTouchInterface: TouchInterface): void;
 	static C(Other: UObject | any): PlayerController;
 	WriteLeaderboardInteger(StatName: string,StatValue: number): boolean;
+	SetEyeTrackedPlayer(): void;
 	IsLoggedIn(): boolean;
 	ShowPlatformSpecificAchievementsScreen(): void;
 	DeprojectScreenToWorld(ScreenPosition: Vector2D,WorldPosition?: Vector,WorldDirection?: Vector): {WorldPosition: Vector, WorldDirection: Vector, $: boolean};
@@ -8798,11 +9558,12 @@ declare class PlayerController extends Controller {
 	GetPlayerScreenWidgetGeometry(): Geometry;
 	ProjectWorldLocationToWidgetPosition(WorldLocation: Vector,ScreenPosition?: Vector2D): {ScreenPosition: Vector2D, $: boolean};
 	SetInputMode_GameAndUI(InWidgetToFocus: Widget,bLockMouseToViewport: boolean,bHideCursorDuringCapture: boolean): void;
-	SetInputMode_GameAndUIEx(InWidgetToFocus: Widget,InMouseLockMode: InMouseLockMode,bHideCursorDuringCapture: boolean): void;
+	SetInputMode_GameAndUIEx(InWidgetToFocus: Widget,InMouseLockMode: EMouseLockMode,bHideCursorDuringCapture: boolean): void;
 	SetInputMode_GameOnly(): void;
 	SetInputMode_UIOnly(InWidgetToFocus: Widget,bLockMouseToViewport: boolean): void;
-	SetInputMode_UIOnlyEx(InWidgetToFocus: Widget,InMouseLockMode: InMouseLockMode): void;
+	SetInputMode_UIOnlyEx(InWidgetToFocus: Widget,InMouseLockMode: EMouseLockMode): void;
 	static WriteLeaderboardInteger(PlayerController: PlayerController,StatName: string,StatValue: number): boolean;
+	static SetEyeTrackedPlayer(PlayerController: PlayerController): void;
 	static IsLoggedIn(SpecificPlayer: PlayerController): boolean;
 	static ShowPlatformSpecificAchievementsScreen(SpecificPlayer: PlayerController): void;
 	static DeprojectScreenToWorld(Player: PlayerController,ScreenPosition: Vector2D,WorldPosition?: Vector,WorldDirection?: Vector): {WorldPosition: Vector, WorldDirection: Vector, $: boolean};
@@ -8814,14 +9575,14 @@ declare class PlayerController extends Controller {
 	static GetPlayerScreenWidgetGeometry(PlayerController: PlayerController): Geometry;
 	static ProjectWorldLocationToWidgetPosition(PlayerController: PlayerController,WorldLocation: Vector,ScreenPosition?: Vector2D): {ScreenPosition: Vector2D, $: boolean};
 	static SetInputMode_GameAndUI(Target: PlayerController,InWidgetToFocus: Widget,bLockMouseToViewport: boolean,bHideCursorDuringCapture: boolean): void;
-	static SetInputMode_GameAndUIEx(Target: PlayerController,InWidgetToFocus: Widget,InMouseLockMode: InMouseLockMode,bHideCursorDuringCapture: boolean): void;
-	static SetInputMode_GameOnly(Target: PlayerController): void;
+	static SetInputMode_GameAndUIEx(PlayerController: PlayerController,InWidgetToFocus: Widget,InMouseLockMode: EMouseLockMode,bHideCursorDuringCapture: boolean): void;
+	static SetInputMode_GameOnly(PlayerController: PlayerController): void;
 	static SetInputMode_UIOnly(Target: PlayerController,InWidgetToFocus: Widget,bLockMouseToViewport: boolean): void;
-	static SetInputMode_UIOnlyEx(Target: PlayerController,InWidgetToFocus: Widget,InMouseLockMode: InMouseLockMode): void;
+	static SetInputMode_UIOnlyEx(PlayerController: PlayerController,InWidgetToFocus: Widget,InMouseLockMode: EMouseLockMode): void;
 }
 
-declare type ENavPathEvent = 'Cleared' | 'NewPath' | 'UpdatedDueToGoalMoved' | 'UpdatedDueToNavigationChanged' | 'Invalidated' | 'RePathFailed' | 'MetaPathUpdate' | 'Custom';
-declare var ENavPathEvent : { Cleared:'Cleared',NewPath:'NewPath',UpdatedDueToGoalMoved:'UpdatedDueToGoalMoved',UpdatedDueToNavigationChanged:'UpdatedDueToNavigationChanged',Invalidated:'Invalidated',RePathFailed:'RePathFailed',MetaPathUpdate:'MetaPathUpdate',Custom:'Custom', };
+declare type ENavPathEvent = 'Cleared' | 'NewPath' | 'UpdatedDueToGoalMoved' | 'UpdatedDueToNavigationChanged' | 'Invalidated' | 'RePathFailed' | 'MetaPathUpdate' | 'Custom' | 'ENavPathEvent_MAX';
+declare var ENavPathEvent : { Cleared:'Cleared',NewPath:'NewPath',UpdatedDueToGoalMoved:'UpdatedDueToGoalMoved',UpdatedDueToNavigationChanged:'UpdatedDueToNavigationChanged',Invalidated:'Invalidated',RePathFailed:'RePathFailed',MetaPathUpdate:'MetaPathUpdate',Custom:'Custom',ENavPathEvent_MAX:'ENavPathEvent_MAX', };
 declare type ENavigationOptionFlag = 'Default' | 'Enable' | 'Disable' | 'MAX';
 declare var ENavigationOptionFlag : { Default:'Default',Enable:'Enable',Disable:'Disable',MAX:'MAX', };
 declare class NavigationPath extends UObject { 
@@ -8844,15 +9605,15 @@ declare class NavigationPath extends UObject {
 }
 
 declare class Controller extends Actor { 
+	PlayerState: PlayerState;
+	OnInstigatedAnyDamage: UnrealEngineMulticastDelegate<(Damage: number, DamageType: DamageType, DamagedActor: Actor, DamageCauser: Actor) => void>;
+	StateName: string;
 	Pawn: Pawn;
 	Character: Character;
-	PlayerState: PlayerState;
 	TransformComponent: SceneComponent;
 	ControlRotation: Rotator;
 	bAttachToPawn: boolean;
 	bIsPlayerController: boolean;
-	StateName: string;
-	OnInstigatedAnyDamage: UnrealEngineMulticastDelegate<(Damage: number, DamageType: DamageType, DamagedActor: Actor, DamageCauser: Actor) => void>;
 	static GetDefaultObject(): Controller;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Controller;
 	UnPossess(): void;
@@ -8882,12 +9643,12 @@ declare class Controller extends Actor {
 	ClientSetLocation(NewLocation: Vector,NewRotation: Rotator): void;
 	CastToPlayerController(): PlayerController;
 	static C(Other: UObject | any): Controller;
+	GetCurrentPath(): NavigationPath;
 	SimpleMoveToActor(Goal: Actor): void;
 	SimpleMoveToLocation(Goal: Vector): void;
-	GetCurrentPath(): NavigationPath;
+	static GetCurrentPath(Controller: Controller): NavigationPath;
 	static SimpleMoveToActor(Controller: Controller,Goal: Actor): void;
 	static SimpleMoveToLocation(Controller: Controller,Goal: Vector): void;
-	static GetCurrentPath(Controller: Controller): NavigationPath;
 }
 
 declare class Pawn extends Actor { 
@@ -8897,10 +9658,10 @@ declare class Pawn extends Actor {
 	bCanAffectNavigationGeneration: boolean;
 	BaseEyeHeight: number;
 	AutoPossessPlayer: EAutoReceiveInput;
-	AutoPossessAI: AutoPossessAI;
+	AutoPossessAI: EAutoPossessAI;
+	RemoteViewPitch: number;
 	AIControllerClass: UnrealEngineClass;
 	PlayerState: PlayerState;
-	RemoteViewPitch: number;
 	LastHitBy: Controller;
 	Controller: Controller;
 	ControlInputVector: Vector;
@@ -8939,14 +9700,20 @@ declare class Pawn extends Actor {
 	static SendAIMessage(Target: Pawn,Message: string,MessageSource: UObject,bSuccess: boolean): void;
 }
 
-declare type ERadialImpulseFalloff = 'RIF_Constant' | 'RIF_Linear';
-declare var ERadialImpulseFalloff : { RIF_Constant:'RIF_Constant',RIF_Linear:'RIF_Linear', };
+declare type ERadialImpulseFalloff = 'RIF_Constant' | 'RIF_Linear' | 'RIF_MAX';
+declare var ERadialImpulseFalloff : { RIF_Constant:'RIF_Constant',RIF_Linear:'RIF_Linear',RIF_MAX:'RIF_MAX', };
 declare class PrimitiveComponent extends SceneComponent { 
 	MinDrawDistance: number;
 	LDMaxDrawDistance: number;
 	CachedMaxDrawDistance: number;
 	DepthPriorityGroup: ESceneDepthPriorityGroup;
 	ViewOwnerDepthPriorityGroup: ESceneDepthPriorityGroup;
+	IndirectLightingCacheQuality: EIndirectLightingCacheQuality;
+	LightmapType: ELightmapType;
+	bEnableAutoLODGeneration: boolean;
+	bUseMaxLODAsImposter: boolean;
+	ExcludeForSpecificHLODLevels: number[];
+	bNeverDistanceCull: boolean;
 	bAlwaysCreatePhysicsState: boolean;
 	bGenerateOverlapEvents: boolean;
 	bMultiBodyOverlap: boolean;
@@ -8981,32 +9748,32 @@ declare class PrimitiveComponent extends SceneComponent {
 	bCastShadowAsTwoSided: boolean;
 	bLightAsIfStatic: boolean;
 	bLightAttachmentsAsGroup: boolean;
-	IndirectLightingCacheQuality: EIndirectLightingCacheQuality;
-	bReceiveCombinedCSMAndStaticShadowsFromStationaryLights: boolean;
+	bReceiveMobileCSMShadows: boolean;
 	bSingleSampleShadowFromStationaryLights: boolean;
-	LightingChannels: LightingChannels;
 	bIgnoreRadialImpulse: boolean;
 	bIgnoreRadialForce: boolean;
 	bApplyImpulseOnDamage: boolean;
+	bReplicatePhysicsToAutonomousProxy: boolean;
 	AlwaysLoadOnClient: boolean;
 	AlwaysLoadOnServer: boolean;
 	bUseEditorCompositing: boolean;
 	bRenderCustomDepth: boolean;
+	bHasCustomNavigableGeometry: EHasCustomNavigableGeometry;
+	CanBeCharacterBase: ECanBeCharacterBase;
+	CanCharacterStepUpOn: ECanBeCharacterBase;
+	LightingChannels: LightingChannels;
+	CustomDepthStencilWriteMask: ERendererStencilMask;
 	CustomDepthStencilValue: number;
-	CustomDepthStencilWriteMask: CustomDepthStencilWriteMask;
 	TranslucencySortPriority: number;
 	VisibilityId: number;
 	LpvBiasMultiplier: number;
-	BodyInstance: BodyInstance;
-	bHasCustomNavigableGeometry: EHasCustomNavigableGeometry;
 	BoundsScale: number;
 	LastSubmitTime: number;
 	LastRenderTime: number;
 	LastRenderTimeOnScreen: number;
-	CanBeCharacterBase: ECanBeCharacterBase;
-	CanCharacterStepUpOn: ECanBeCharacterBase;
 	MoveIgnoreActors: Actor[];
 	MoveIgnoreComponents: PrimitiveComponent[];
+	BodyInstance: BodyInstance;
 	OnComponentHit: UnrealEngineMulticastDelegate<(HitComponent: PrimitiveComponent, OtherActor: Actor, OtherComp: PrimitiveComponent, NormalImpulse: Vector, Hit: HitResult) => void>;
 	OnComponentBeginOverlap: UnrealEngineMulticastDelegate<(OverlappedComponent: PrimitiveComponent, OtherActor: Actor, OtherComp: PrimitiveComponent, OtherBodyIndex: number, bFromSweep: boolean, SweepResult: HitResult) => void>;
 	OnComponentEndOverlap: UnrealEngineMulticastDelegate<(OverlappedComponent: PrimitiveComponent, OtherActor: Actor, OtherComp: PrimitiveComponent, OtherBodyIndex: number) => void>;
@@ -9029,6 +9796,7 @@ declare class PrimitiveComponent extends SceneComponent {
 	WakeRigidBody(BoneName: string): void;
 	WakeAllRigidBodies(): void;
 	SetWalkableSlopeOverride(NewOverride: WalkableSlopeOverride): void;
+	SetUseCCD(InUseCCD: boolean,BoneName: string): void;
 	SetTranslucentSortPriority(NewTranslucentSortPriority: number): void;
 	SetSingleSampleShadowFromStationaryLights(bNewSingleSampleShadowFromStationaryLights: boolean): void;
 	SetSimulatePhysics(bSimulate: boolean): void;
@@ -9037,8 +9805,12 @@ declare class PrimitiveComponent extends SceneComponent {
 	SetRenderCustomDepth(bValue: boolean): void;
 	SetReceivesDecals(bNewReceivesDecals: boolean): void;
 	SetPhysMaterialOverride(NewPhysMaterial: PhysicalMaterial): void;
+	SetPhysicsMaxAngularVelocityInRadians(NewMaxAngVel: number,bAddToCurrent: boolean,BoneName: string): void;
+	SetPhysicsMaxAngularVelocityInDegrees(NewMaxAngVel: number,bAddToCurrent: boolean,BoneName: string): void;
 	SetPhysicsMaxAngularVelocity(NewMaxAngVel: number,bAddToCurrent: boolean,BoneName: string): void;
 	SetPhysicsLinearVelocity(NewVel: Vector,bAddToCurrent: boolean,BoneName: string): void;
+	SetPhysicsAngularVelocityInRadians(NewAngVel: Vector,bAddToCurrent: boolean,BoneName: string): void;
+	SetPhysicsAngularVelocityInDegrees(NewAngVel: Vector,bAddToCurrent: boolean,BoneName: string): void;
 	SetPhysicsAngularVelocity(NewAngVel: Vector,bAddToCurrent: boolean,BoneName: string): void;
 	SetOwnerNoSee(bNewOwnerNoSee: boolean): void;
 	SetOnlyOwnerSee(bNewOnlyOwnerSee: boolean): void;
@@ -9049,8 +9821,9 @@ declare class PrimitiveComponent extends SceneComponent {
 	SetMassOverrideInKg(BoneName: string,MassInKg: number,bOverrideMass: boolean): void;
 	SetLockedAxis(LockedAxis: EDOFMode): void;
 	SetLinearDamping(InDamping: number): void;
+	SetGenerateOverlapEvents(bInGenerateOverlapEvents: boolean): void;
 	SetEnableGravity(bGravityEnabled: boolean): void;
-	SetCustomDepthStencilWriteMask(WriteMaskBit: WriteMaskBit): void;
+	SetCustomDepthStencilWriteMask(WriteMaskBit: ERendererStencilMask): void;
 	SetCustomDepthStencilValue(Value: number): void;
 	SetCullDistance(NewCullDistance: number): void;
 	SetConstraintMode(ConstraintMode: EDOFMode): void;
@@ -9063,15 +9836,21 @@ declare class PrimitiveComponent extends SceneComponent {
 	SetCastShadow(NewCastShadow: boolean): void;
 	SetBoundsScale(NewBoundsScale: number): void;
 	SetAngularDamping(InDamping: number): void;
+	SetAllUseCCD(InUseCCD: boolean): void;
 	SetAllPhysicsLinearVelocity(NewVel: Vector,bAddToCurrent: boolean): void;
+	SetAllPhysicsAngularVelocityInRadians(NewAngVel: Vector,bAddToCurrent: boolean): void;
+	SetAllPhysicsAngularVelocityInDegrees(NewAngVel: Vector,bAddToCurrent: boolean): void;
 	SetAllPhysicsAngularVelocity(NewAngVel: Vector,bAddToCurrent: boolean): void;
 	SetAllMassScale(InMassScale: number): void;
 	ScaleByMomentOfInertia(InputVector: Vector,BoneName: string): Vector;
 	PutRigidBodyToSleep(BoneName: string): void;
-	K2_LineTraceComponent(TraceStart: Vector,TraceEnd: Vector,bTraceComplex: boolean,bShowTrace: boolean,HitLocation?: Vector,HitNormal?: Vector,BoneName?: string,OutHit?: HitResult): {HitLocation: Vector, HitNormal: Vector, BoneName: string, OutHit: HitResult, $: boolean};
+	K2_SphereTraceComponent(TraceStart: Vector,TraceEnd: Vector,SphereRadius: number,bTraceComplex: boolean,bShowTrace: boolean,bPersistentShowTrace: boolean,HitLocation?: Vector,HitNormal?: Vector,BoneName?: string,OutHit?: HitResult): {HitLocation: Vector, HitNormal: Vector, BoneName: string, OutHit: HitResult, $: boolean};
+	K2_SphereOverlapComponent(InSphereCentre: Vector,InSphereRadius: number,bTraceComplex: boolean,bShowTrace: boolean,bPersistentShowTrace: boolean,HitLocation?: Vector,HitNormal?: Vector,BoneName?: string,OutHit?: HitResult): {HitLocation: Vector, HitNormal: Vector, BoneName: string, OutHit: HitResult, $: boolean};
+	K2_LineTraceComponent(TraceStart: Vector,TraceEnd: Vector,bTraceComplex: boolean,bShowTrace: boolean,bPersistentShowTrace: boolean,HitLocation?: Vector,HitNormal?: Vector,BoneName?: string,OutHit?: HitResult): {HitLocation: Vector, HitNormal: Vector, BoneName: string, OutHit: HitResult, $: boolean};
 	K2_IsQueryCollisionEnabled(): boolean;
 	K2_IsPhysicsCollisionEnabled(): boolean;
 	K2_IsCollisionEnabled(): boolean;
+	K2_BoxOverlapComponent(InBoxCentre: Vector,InBox: Box,bTraceComplex: boolean,bShowTrace: boolean,bPersistentShowTrace: boolean,HitLocation?: Vector,HitNormal?: Vector,BoneName?: string,OutHit?: HitResult): {HitLocation: Vector, HitNormal: Vector, BoneName: string, OutHit: HitResult, $: boolean};
 	IsOverlappingComponent(OtherComp: PrimitiveComponent): boolean;
 	IsOverlappingActor(Other: Actor): boolean;
 	IsGravityEnabled(): boolean;
@@ -9081,8 +9860,10 @@ declare class PrimitiveComponent extends SceneComponent {
 	GetWalkableSlopeOverride(): WalkableSlopeOverride;
 	GetPhysicsLinearVelocityAtPoint(Point: Vector,BoneName: string): Vector;
 	GetPhysicsLinearVelocity(BoneName: string): Vector;
+	GetPhysicsAngularVelocityInRadians(BoneName: string): Vector;
+	GetPhysicsAngularVelocityInDegrees(BoneName: string): Vector;
 	GetPhysicsAngularVelocity(BoneName: string): Vector;
-	GetOverlappingComponents(InOverlappingComponents?: PrimitiveComponent[]): {InOverlappingComponents: PrimitiveComponent[]};
+	GetOverlappingComponents(OutOverlappingComponents?: PrimitiveComponent[]): {OutOverlappingComponents: PrimitiveComponent[]};
 	GetOverlappingActors(OverlappingActors?: Actor[],ClassFilter?: UnrealEngineClass): {OverlappingActors: Actor[]};
 	GetNumMaterials(): number;
 	GetMaterialFromCollisionFaceIndex(FaceIndex: number,SectionIndex?: number): {SectionIndex: number, $: MaterialInterface};
@@ -9091,6 +9872,7 @@ declare class PrimitiveComponent extends SceneComponent {
 	GetMass(): number;
 	GetLinearDamping(): number;
 	GetInertiaTensor(BoneName: string): Vector;
+	GetGenerateOverlapEvents(): boolean;
 	GetCollisionResponseToChannel(Channel: ECollisionChannel): ECollisionResponse;
 	GetCollisionProfileName(): string;
 	GetCollisionObjectType(): ECollisionChannel;
@@ -9098,7 +9880,7 @@ declare class PrimitiveComponent extends SceneComponent {
 	GetClosestPointOnCollision(Point: Vector,OutPointOnBody?: Vector,BoneName?: string): {OutPointOnBody: Vector, $: number};
 	GetCenterOfMass(BoneName: string): Vector;
 	GetAngularDamping(): number;
-	CreateDynamicMaterialInstance(ElementIndex: number,SourceMaterial: MaterialInterface): MaterialInstanceDynamic;
+	CreateDynamicMaterialInstance(ElementIndex: number,SourceMaterial: MaterialInterface,OptionalName: string): MaterialInstanceDynamic;
 	CreateAndSetMaterialInstanceDynamicFromMaterial(ElementIndex: number,Parent: MaterialInterface): MaterialInstanceDynamic;
 	CreateAndSetMaterialInstanceDynamic(ElementIndex: number): MaterialInstanceDynamic;
 	CopyArrayOfMoveIgnoreComponents(): PrimitiveComponent[];
@@ -9106,6 +9888,8 @@ declare class PrimitiveComponent extends SceneComponent {
 	ClearMoveIgnoreComponents(): void;
 	ClearMoveIgnoreActors(): void;
 	CanCharacterStepUp(Pawn: Pawn): boolean;
+	AddTorqueInRadians(Torque: Vector,BoneName: string,bAccelChange: boolean): void;
+	AddTorqueInDegrees(Torque: Vector,BoneName: string,bAccelChange: boolean): void;
 	AddTorque(Torque: Vector,BoneName: string,bAccelChange: boolean): void;
 	AddRadialImpulse(Origin: Vector,Radius: number,Strength: number,Falloff: ERadialImpulseFalloff,bVelChange: boolean): void;
 	AddRadialForce(Origin: Vector,Radius: number,Strength: number,Falloff: ERadialImpulseFalloff,bAccelChange: boolean): void;
@@ -9114,6 +9898,8 @@ declare class PrimitiveComponent extends SceneComponent {
 	AddForceAtLocationLocal(Force: Vector,Location: Vector,BoneName: string): void;
 	AddForceAtLocation(Force: Vector,Location: Vector,BoneName: string): void;
 	AddForce(Force: Vector,BoneName: string,bAccelChange: boolean): void;
+	AddAngularImpulseInRadians(Impulse: Vector,BoneName: string,bVelChange: boolean): void;
+	AddAngularImpulseInDegrees(Impulse: Vector,BoneName: string,bVelChange: boolean): void;
 	AddAngularImpulse(Impulse: Vector,BoneName: string,bVelChange: boolean): void;
 	static C(Other: UObject | any): PrimitiveComponent;
 	ComponentOverlapActors(ComponentTransform: Transform,ObjectTypes: EObjectTypeQuery[],ActorClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutActors?: Actor[]): {OutActors: Actor[], $: boolean};
@@ -9144,7 +9930,7 @@ declare class BuilderPoly {
 
 declare class BrushBuilder extends UObject { 
 	BitmapFilename: string;
-	ToolTip: string;
+	Tooltip: string;
 	NotifyBadParams: boolean;
 	Vertices: Vector[];
 	Polys: BuilderPoly[];
@@ -9161,7 +9947,7 @@ declare class BrushBuilder extends UObject {
 
 declare class GeomSelection { 
 	Type: number;
-	Index: number;
+	index: number;
 	SelectionIndex: number;
 	clone() : GeomSelection;
 	static C(Other: UObject | any): GeomSelection;
@@ -9208,18 +9994,21 @@ declare class PhysicsVolume extends Volume {
 	static C(Other: UObject | any): PhysicsVolume;
 }
 
-declare type EDetachmentRule = 'KeepRelative' | 'KeepWorld';
-declare var EDetachmentRule : { KeepRelative:'KeepRelative',KeepWorld:'KeepWorld', };
-declare type ERelativeTransformSpace = 'RTS_World' | 'RTS_Actor' | 'RTS_Component' | 'RTS_ParentBoneSpace';
-declare var ERelativeTransformSpace : { RTS_World:'RTS_World',RTS_Actor:'RTS_Actor',RTS_Component:'RTS_Component',RTS_ParentBoneSpace:'RTS_ParentBoneSpace', };
-declare type EMoveComponentAction = 'Move' | 'Stop' | 'Return';
-declare var EMoveComponentAction : { Move:'Move',Stop:'Stop',Return:'Return', };
+declare type EDetachmentRule = 'KeepRelative' | 'KeepWorld' | 'EDetachmentRule_MAX';
+declare var EDetachmentRule : { KeepRelative:'KeepRelative',KeepWorld:'KeepWorld',EDetachmentRule_MAX:'EDetachmentRule_MAX', };
+declare type EMoveComponentAction = 'Move' | 'Stop' | 'Return' | 'EMoveComponentAction_MAX';
+declare var EMoveComponentAction : { Move:'Move',Stop:'Stop',Return:'Return',EMoveComponentAction_MAX:'EMoveComponentAction_MAX', };
 declare class SceneComponent extends ActorComponent { 
+	PhysicsVolume: any;
 	AttachParent: SceneComponent;
-	AttachChildren: SceneComponent[];
-	ClientAttachedChildren: any;
 	AttachSocketName: string;
-	bWorldToComponentUpdated: boolean;
+	AttachChildren: SceneComponent[];
+	ClientAttachedChildren: SceneComponent[];
+	RelativeLocation: Vector;
+	RelativeRotation: Rotator;
+	RelativeScale3D: Vector;
+	ComponentVelocity: Vector;
+	bComponentToWorldUpdated: boolean;
 	bAbsoluteLocation: boolean;
 	bAbsoluteRotation: boolean;
 	bAbsoluteScale: boolean;
@@ -9229,16 +10018,11 @@ declare class SceneComponent extends ActorComponent {
 	bBoundsChangeTriggersStreamingDataRebuild: boolean;
 	bUseAttachParentBound: boolean;
 	bAbsoluteTranslation: boolean;
-	PhysicsVolume: any;
-	RelativeLocation: Vector;
-	RelativeRotation: Rotator;
-	RelativeScale3D: Vector;
-	RelativeTranslation: Vector;
+	bVisualizeComponent: boolean;
 	Mobility: EComponentMobility;
 	DetailMode: EDetailMode;
-	ComponentVelocity: Vector;
 	PhysicsVolumeChangedDelegate: UnrealEngineMulticastDelegate<(NewVolume: PhysicsVolume) => void>;
-	bVisualizeComponent: boolean;
+	RelativeTranslation: Vector;
 	static Load(ResourceName: string): SceneComponent;
 	static Find(Outer: UObject, ResourceName: string): SceneComponent;
 	static GetDefaultObject(): SceneComponent;
@@ -9247,7 +10031,9 @@ declare class SceneComponent extends ActorComponent {
 	SnapTo(InParent: SceneComponent,InSocketName: string): boolean;
 	SetWorldScale3D(NewScale: Vector): void;
 	SetVisibility(bNewVisibility: boolean,bPropagateToChildren: boolean): void;
+	SetShouldUpdatePhysicsVolume(bInShouldUpdatePhysicsVolume: boolean): void;
 	SetRelativeScale3D(NewScale3D: Vector): void;
+	SetMobility(NewMobility: EComponentMobility): void;
 	SetHiddenInGame(NewHidden: boolean,bPropagateToChildren: boolean): void;
 	SetAbsolute(bNewAbsoluteLocation: boolean,bNewAbsoluteRotation: boolean,bNewAbsoluteScale: boolean): void;
 	ResetRelativeTransform(): void;
@@ -9268,8 +10054,8 @@ declare class SceneComponent extends ActorComponent {
 	K2_GetComponentScale(): Vector;
 	K2_GetComponentRotation(): Rotator;
 	K2_GetComponentLocation(): Vector;
-	K2_DetachFromComponent(LocationRule: LocationRule,RotationRule: RotationRule,ScaleRule: ScaleRule,bCallModify: boolean): void;
-	K2_AttachToComponent(Parent: SceneComponent,SocketName: string,LocationRule: LocationRule,RotationRule: RotationRule,ScaleRule: ScaleRule,bWeldSimulatedBodies: boolean): boolean;
+	K2_DetachFromComponent(LocationRule: EDetachmentRule,RotationRule: EDetachmentRule,ScaleRule: EDetachmentRule,bCallModify: boolean): void;
+	K2_AttachToComponent(Parent: SceneComponent,SocketName: string,LocationRule: EAttachmentRule,RotationRule: EAttachmentRule,ScaleRule: EAttachmentRule,bWeldSimulatedBodies: boolean): boolean;
 	K2_AttachTo(InParent: SceneComponent,InSocketName: string,AttachType: EAttachLocation,bWeldSimulatedBodies: boolean): boolean;
 	K2_AddWorldTransform(DeltaTransform: Transform,bSweep: boolean,SweepHitResult?: HitResult,bTeleport?: boolean): {SweepHitResult: HitResult};
 	K2_AddWorldRotation(DeltaRotation: Rotator,bSweep: boolean,SweepHitResult?: HitResult,bTeleport?: boolean): {SweepHitResult: HitResult};
@@ -9287,6 +10073,7 @@ declare class SceneComponent extends ActorComponent {
 	GetSocketRotation(InSocketName: string): Rotator;
 	GetSocketQuaternion(InSocketName: string): Quat;
 	GetSocketLocation(InSocketName: string): Vector;
+	GetShouldUpdatePhysicsVolume(): boolean;
 	GetRightVector(): Vector;
 	GetRelativeTransform(): Transform;
 	GetPhysicsVolume(): PhysicsVolume;
@@ -9323,10 +10110,12 @@ declare class RepAttachment {
 	static C(Other: UObject | any): RepAttachment;
 }
 
-declare type EInputConsumeOptions = 'ICO_ConsumeAll' | 'ICO_ConsumeBoundKeys' | 'ICO_ConsumeNone';
-declare var EInputConsumeOptions : { ICO_ConsumeAll:'ICO_ConsumeAll',ICO_ConsumeBoundKeys:'ICO_ConsumeBoundKeys',ICO_ConsumeNone:'ICO_ConsumeNone', };
-declare type ESpawnActorCollisionHandlingMethod = 'Undefined' | 'AlwaysSpawn' | 'AdjustIfPossibleButAlwaysSpawn' | 'AdjustIfPossibleButDontSpawnIfColliding' | 'DontSpawnIfColliding';
-declare var ESpawnActorCollisionHandlingMethod : { Undefined:'Undefined',AlwaysSpawn:'AlwaysSpawn',AdjustIfPossibleButAlwaysSpawn:'AdjustIfPossibleButAlwaysSpawn',AdjustIfPossibleButDontSpawnIfColliding:'AdjustIfPossibleButDontSpawnIfColliding',DontSpawnIfColliding:'DontSpawnIfColliding', };
+declare type ENetDormancy = 'DORM_Never' | 'DORM_Awake' | 'DORM_DormantAll' | 'DORM_DormantPartial' | 'DORM_Initial' | 'DORM_MAX';
+declare var ENetDormancy : { DORM_Never:'DORM_Never',DORM_Awake:'DORM_Awake',DORM_DormantAll:'DORM_DormantAll',DORM_DormantPartial:'DORM_DormantPartial',DORM_Initial:'DORM_Initial',DORM_MAX:'DORM_MAX', };
+declare type ESpawnActorCollisionHandlingMethod = 'Undefined' | 'AlwaysSpawn' | 'AdjustIfPossibleButAlwaysSpawn' | 'AdjustIfPossibleButDontSpawnIfColliding' | 'DontSpawnIfColliding' | 'ESpawnActorCollisionHandlingMethod_MAX';
+declare var ESpawnActorCollisionHandlingMethod : { Undefined:'Undefined',AlwaysSpawn:'AlwaysSpawn',AdjustIfPossibleButAlwaysSpawn:'AdjustIfPossibleButAlwaysSpawn',AdjustIfPossibleButDontSpawnIfColliding:'AdjustIfPossibleButDontSpawnIfColliding',DontSpawnIfColliding:'DontSpawnIfColliding',ESpawnActorCollisionHandlingMethod_MAX:'ESpawnActorCollisionHandlingMethod_MAX', };
+declare type EInputConsumeOptions = 'ICO_ConsumeAll' | 'ICO_ConsumeBoundKeys' | 'ICO_ConsumeNone' | 'ICO_MAX';
+declare var EInputConsumeOptions : { ICO_ConsumeAll:'ICO_ConsumeAll',ICO_ConsumeBoundKeys:'ICO_ConsumeBoundKeys',ICO_ConsumeNone:'ICO_ConsumeNone',ICO_MAX:'ICO_MAX', };
 declare class InterpFilter extends UObject { 
 	Caption: string;
 	static Load(ResourceName: string): InterpFilter;
@@ -9373,7 +10162,7 @@ declare class InterpGroupActorInfo {
 
 declare class CameraCutInfo { 
 	Location: Vector;
-	TimeStamp: number;
+	Timestamp: number;
 	clone() : CameraCutInfo;
 	static C(Other: UObject | any): CameraCutInfo;
 }
@@ -9496,8 +10285,8 @@ declare class NavigationDataChunk extends UObject {
 	static C(Other: UObject | any): NavigationDataChunk;
 }
 
-declare type ELightingBuildQuality = 'Quality_Preview' | 'Quality_Medium' | 'Quality_High' | 'Quality_Production';
-declare var ELightingBuildQuality : { Quality_Preview:'Quality_Preview',Quality_Medium:'Quality_Medium',Quality_High:'Quality_High',Quality_Production:'Quality_Production', };
+declare type ELightingBuildQuality = 'Quality_Preview' | 'Quality_Medium' | 'Quality_High' | 'Quality_Production' | 'Quality_MAX';
+declare var ELightingBuildQuality : { Quality_Preview:'Quality_Preview',Quality_Medium:'Quality_Medium',Quality_High:'Quality_High',Quality_Production:'Quality_Production',Quality_MAX:'Quality_MAX', };
 declare class MapBuildDataRegistry extends UObject { 
 	LevelLightingQuality: ELightingBuildQuality;
 	static Load(ResourceName: string): MapBuildDataRegistry;
@@ -9507,10 +10296,10 @@ declare class MapBuildDataRegistry extends UObject {
 	static C(Other: UObject | any): MapBuildDataRegistry;
 }
 
-declare type ETextureSizingType = 'TextureSizingType_UseSingleTextureSize' | 'TextureSizingType_UseAutomaticBiasedSizes' | 'TextureSizingType_UseManualOverrideTextureSize' | 'TextureSizingType_UseSimplygonAutomaticSizing';
-declare var ETextureSizingType : { TextureSizingType_UseSingleTextureSize:'TextureSizingType_UseSingleTextureSize',TextureSizingType_UseAutomaticBiasedSizes:'TextureSizingType_UseAutomaticBiasedSizes',TextureSizingType_UseManualOverrideTextureSize:'TextureSizingType_UseManualOverrideTextureSize',TextureSizingType_UseSimplygonAutomaticSizing:'TextureSizingType_UseSimplygonAutomaticSizing', };
-declare type EMaterialMergeType = 'MaterialMergeType_Default' | 'MaterialMergeType_Simplygon';
-declare var EMaterialMergeType : { MaterialMergeType_Default:'MaterialMergeType_Default',MaterialMergeType_Simplygon:'MaterialMergeType_Simplygon', };
+declare type ETextureSizingType = 'TextureSizingType_UseSingleTextureSize' | 'TextureSizingType_UseAutomaticBiasedSizes' | 'TextureSizingType_UseManualOverrideTextureSize' | 'TextureSizingType_UseSimplygonAutomaticSizing' | 'TextureSizingType_MAX';
+declare var ETextureSizingType : { TextureSizingType_UseSingleTextureSize:'TextureSizingType_UseSingleTextureSize',TextureSizingType_UseAutomaticBiasedSizes:'TextureSizingType_UseAutomaticBiasedSizes',TextureSizingType_UseManualOverrideTextureSize:'TextureSizingType_UseManualOverrideTextureSize',TextureSizingType_UseSimplygonAutomaticSizing:'TextureSizingType_UseSimplygonAutomaticSizing',TextureSizingType_MAX:'TextureSizingType_MAX', };
+declare type EMaterialMergeType = 'MaterialMergeType_Default' | 'MaterialMergeType_Simplygon' | 'MaterialMergeType_MAX';
+declare var EMaterialMergeType : { MaterialMergeType_Default:'MaterialMergeType_Default',MaterialMergeType_Simplygon:'MaterialMergeType_Simplygon',MaterialMergeType_MAX:'MaterialMergeType_MAX', };
 declare class MaterialProxySettings { 
 	TextureSize: IntPoint;
 	TextureSizingType: ETextureSizingType;
@@ -9565,6 +10354,16 @@ declare class LevelSimplificationDetails {
 	static C(Other: UObject | any): LevelSimplificationDetails;
 }
 
+declare class NavigationSystemConfig extends UObject { 
+	NavigationSystemClass: SoftClassPath;
+	bIsOverriden: boolean;
+	static Load(ResourceName: string): NavigationSystemConfig;
+	static Find(Outer: UObject, ResourceName: string): NavigationSystemConfig;
+	static GetDefaultObject(): NavigationSystemConfig;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationSystemConfig;
+	static C(Other: UObject | any): NavigationSystemConfig;
+}
+
 declare class DefaultPhysicsVolume extends PhysicsVolume { 
 	static GetDefaultObject(): DefaultPhysicsVolume;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DefaultPhysicsVolume;
@@ -9618,6 +10417,62 @@ declare class GameStateBase extends Info {
 	static C(Other: UObject | any): GameStateBase;
 }
 
+declare class ServerStatReplicator extends Info { 
+	bUpdateStatNet: boolean;
+	bOverwriteClientStats: boolean;
+	Channels: any;
+	InRate: any;
+	OutRate: any;
+	OutSaturation: any;
+	MaxPacketOverhead: any;
+	InRateClientMax: any;
+	InRateClientMin: any;
+	InRateClientAvg: any;
+	InPacketsClientMax: any;
+	InPacketsClientMin: any;
+	InPacketsClientAvg: any;
+	OutRateClientMax: any;
+	OutRateClientMin: any;
+	OutRateClientAvg: any;
+	OutPacketsClientMax: any;
+	OutPacketsClientMin: any;
+	OutPacketsClientAvg: any;
+	NetNumClients: any;
+	InPackets: any;
+	OutPackets: any;
+	InBunches: any;
+	OutBunches: any;
+	OutLoss: any;
+	InLoss: any;
+	VoiceBytesSent: any;
+	VoiceBytesRecv: any;
+	VoicePacketsSent: any;
+	VoicePacketsRecv: any;
+	PercentInVoice: any;
+	PercentOutVoice: any;
+	NumActorChannels: any;
+	NumConsideredActors: any;
+	PrioritizedActors: any;
+	NumRelevantActors: any;
+	NumRelevantDeletedActors: any;
+	NumReplicatedActorAttempts: any;
+	NumReplicatedActors: any;
+	NumActors: any;
+	NumNetActors: any;
+	NumDormantActors: any;
+	NumInitiallyDormantActors: any;
+	NumNetGUIDsAckd: any;
+	NumNetGUIDsPending: any;
+	NumNetGUIDsUnAckd: any;
+	ObjPathBytes: any;
+	NetGUIDOutRate: any;
+	NetGUIDInRate: any;
+	NetSaturated: any;
+	static GetDefaultObject(): ServerStatReplicator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ServerStatReplicator;
+	static C(Other: UObject | any): ServerStatReplicator;
+}
+
 declare class GameModeBase extends Info { 
 	OptionsString: string;
 	GameSessionClass: UnrealEngineClass;
@@ -9628,8 +10483,10 @@ declare class GameModeBase extends Info {
 	DefaultPawnClass: UnrealEngineClass;
 	SpectatorClass: UnrealEngineClass;
 	ReplaySpectatorPlayerControllerClass: UnrealEngineClass;
+	ServerStatReplicatorClass: UnrealEngineClass;
 	GameSession: GameSession;
 	GameState: GameStateBase;
+	ServerStatReplicator: ServerStatReplicator;
 	DefaultPlayerName: string;
 	bUseSeamlessTravel: boolean;
 	bStartPlayersAsSpectators: boolean;
@@ -9689,9 +10546,11 @@ declare class GameNetworkManager extends Info {
 	MAXNEARZEROVELOCITYSQUARED: number;
 	CLIENTADJUSTUPDATECOST: number;
 	MAXCLIENTUPDATEINTERVAL: number;
+	MaxClientForcedUpdateDuration: number;
 	MaxMoveDeltaTime: number;
 	ClientNetSendMoveDeltaTime: number;
 	ClientNetSendMoveDeltaTimeThrottled: number;
+	ClientNetSendMoveDeltaTimeStationary: number;
 	ClientNetSendMoveThrottleAtNetSpeed: number;
 	ClientNetSendMoveThrottleOverPlayerCount: number;
 	ClientAuthorativePosition: boolean;
@@ -9709,17 +10568,25 @@ declare class GameNetworkManager extends Info {
 	static C(Other: UObject | any): GameNetworkManager;
 }
 
-declare type EVisibilityAggressiveness = 'VIS_LeastAggressive' | 'VIS_ModeratelyAggressive' | 'VIS_MostAggressive';
-declare var EVisibilityAggressiveness : { VIS_LeastAggressive:'VIS_LeastAggressive',VIS_ModeratelyAggressive:'VIS_ModeratelyAggressive',VIS_MostAggressive:'VIS_MostAggressive', };
+declare type EVisibilityAggressiveness = 'VIS_LeastAggressive' | 'VIS_ModeratelyAggressive' | 'VIS_MostAggressive' | 'VIS_Max';
+declare var EVisibilityAggressiveness : { VIS_LeastAggressive:'VIS_LeastAggressive',VIS_ModeratelyAggressive:'VIS_ModeratelyAggressive',VIS_MostAggressive:'VIS_MostAggressive',VIS_Max:'VIS_Max', };
+declare type EVolumeLightingMethod = 'VLM_VolumetricLightmap' | 'VLM_SparseVolumeLightingSamples' | 'VLM_MAX';
+declare var EVolumeLightingMethod : { VLM_VolumetricLightmap:'VLM_VolumetricLightmap',VLM_SparseVolumeLightingSamples:'VLM_SparseVolumeLightingSamples',VLM_MAX:'VLM_MAX', };
 declare class LightmassWorldInfoSettings { 
 	StaticLightingLevelScale: number;
 	NumIndirectLightingBounces: number;
+	NumSkyLightingBounces: number;
 	IndirectLightingQuality: number;
 	IndirectLightingSmoothness: number;
 	EnvironmentColor: Color;
 	EnvironmentIntensity: number;
 	EmissiveBoost: number;
 	DiffuseBoost: number;
+	VolumeLightingMethod: EVolumeLightingMethod;
+	VolumetricLightmapDetailCellSize: number;
+	VolumetricLightmapMaximumBrickMemoryMb: number;
+	VolumetricLightmapSphericalHarmonicSmoothing: number;
+	VolumeLightSamplePlacementScale: number;
 	bUseAmbientOcclusion: boolean;
 	bGenerateAmbientOcclusionMaterialMask: boolean;
 	DirectIlluminationOcclusionFraction: number;
@@ -9729,14 +10596,13 @@ declare class LightmassWorldInfoSettings {
 	MaxOcclusionDistance: number;
 	bVisualizeMaterialDiffuse: boolean;
 	bVisualizeAmbientOcclusion: boolean;
-	VolumeLightSamplePlacementScale: number;
 	bCompressLightmaps: boolean;
 	clone() : LightmassWorldInfoSettings;
 	static C(Other: UObject | any): LightmassWorldInfoSettings;
 }
 
-declare type ReverbPreset = 'REVERB_Default' | 'REVERB_Bathroom' | 'REVERB_StoneRoom' | 'REVERB_Auditorium' | 'REVERB_ConcertHall' | 'REVERB_Cave' | 'REVERB_Hallway' | 'REVERB_StoneCorridor' | 'REVERB_Alley' | 'REVERB_Forest' | 'REVERB_City' | 'REVERB_Mountains' | 'REVERB_Quarry' | 'REVERB_Plain' | 'REVERB_ParkingLot' | 'REVERB_SewerPipe' | 'REVERB_Underwater' | 'REVERB_SmallRoom' | 'REVERB_MediumRoom' | 'REVERB_LargeRoom' | 'REVERB_MediumHall' | 'REVERB_LargeHall' | 'REVERB_Plate';
-declare var ReverbPreset : { REVERB_Default:'REVERB_Default',REVERB_Bathroom:'REVERB_Bathroom',REVERB_StoneRoom:'REVERB_StoneRoom',REVERB_Auditorium:'REVERB_Auditorium',REVERB_ConcertHall:'REVERB_ConcertHall',REVERB_Cave:'REVERB_Cave',REVERB_Hallway:'REVERB_Hallway',REVERB_StoneCorridor:'REVERB_StoneCorridor',REVERB_Alley:'REVERB_Alley',REVERB_Forest:'REVERB_Forest',REVERB_City:'REVERB_City',REVERB_Mountains:'REVERB_Mountains',REVERB_Quarry:'REVERB_Quarry',REVERB_Plain:'REVERB_Plain',REVERB_ParkingLot:'REVERB_ParkingLot',REVERB_SewerPipe:'REVERB_SewerPipe',REVERB_Underwater:'REVERB_Underwater',REVERB_SmallRoom:'REVERB_SmallRoom',REVERB_MediumRoom:'REVERB_MediumRoom',REVERB_LargeRoom:'REVERB_LargeRoom',REVERB_MediumHall:'REVERB_MediumHall',REVERB_LargeHall:'REVERB_LargeHall',REVERB_Plate:'REVERB_Plate', };
+declare type ReverbPreset = 'REVERB_Default' | 'REVERB_Bathroom' | 'REVERB_StoneRoom' | 'REVERB_Auditorium' | 'REVERB_ConcertHall' | 'REVERB_Cave' | 'REVERB_Hallway' | 'REVERB_StoneCorridor' | 'REVERB_Alley' | 'REVERB_Forest' | 'REVERB_City' | 'REVERB_Mountains' | 'REVERB_Quarry' | 'REVERB_Plain' | 'REVERB_ParkingLot' | 'REVERB_SewerPipe' | 'REVERB_Underwater' | 'REVERB_SmallRoom' | 'REVERB_MediumRoom' | 'REVERB_LargeRoom' | 'REVERB_MediumHall' | 'REVERB_LargeHall' | 'REVERB_Plate' | 'REVERB_MAX';
+declare var ReverbPreset : { REVERB_Default:'REVERB_Default',REVERB_Bathroom:'REVERB_Bathroom',REVERB_StoneRoom:'REVERB_StoneRoom',REVERB_Auditorium:'REVERB_Auditorium',REVERB_ConcertHall:'REVERB_ConcertHall',REVERB_Cave:'REVERB_Cave',REVERB_Hallway:'REVERB_Hallway',REVERB_StoneCorridor:'REVERB_StoneCorridor',REVERB_Alley:'REVERB_Alley',REVERB_Forest:'REVERB_Forest',REVERB_City:'REVERB_City',REVERB_Mountains:'REVERB_Mountains',REVERB_Quarry:'REVERB_Quarry',REVERB_Plain:'REVERB_Plain',REVERB_ParkingLot:'REVERB_ParkingLot',REVERB_SewerPipe:'REVERB_SewerPipe',REVERB_Underwater:'REVERB_Underwater',REVERB_SmallRoom:'REVERB_SmallRoom',REVERB_MediumRoom:'REVERB_MediumRoom',REVERB_LargeRoom:'REVERB_LargeRoom',REVERB_MediumHall:'REVERB_MediumHall',REVERB_LargeHall:'REVERB_LargeHall',REVERB_Plate:'REVERB_Plate',REVERB_MAX:'REVERB_MAX', };
 declare class ReverbEffect extends UObject { 
 	Density: number;
 	Diffusion: number;
@@ -9762,6 +10628,7 @@ declare class ReverbSettings {
 	bApplyReverb: boolean;
 	ReverbType: ReverbPreset;
 	ReverbEffect: ReverbEffect;
+	ReverbPluginEffect: SoundEffectSubmixPreset;
 	Volume: number;
 	FadeTime: number;
 	clone() : ReverbSettings;
@@ -9782,77 +10649,234 @@ declare class InteriorSettings {
 	static C(Other: UObject | any): InteriorSettings;
 }
 
-declare type ELandscapeCullingPrecision = 'High' | 'Medium' | 'Low';
-declare var ELandscapeCullingPrecision : { High:'High',Medium:'Medium',Low:'Low', };
-declare class MeshProxySettings { 
-	ScreenSize: number;
-	MaterialSettings: MaterialProxySettings;
-	TextureWidth: number;
-	TextureHeight: number;
-	bExportNormalMap: boolean;
-	bExportMetallicMap: boolean;
-	bExportRoughnessMap: boolean;
-	bExportSpecularMap: boolean;
-	bCalculateCorrectLODModel: boolean;
-	MergeDistance: number;
-	HardAngleThreshold: number;
-	LightMapResolution: number;
-	bRecalculateNormals: boolean;
-	bBakeVertexData: boolean;
-	bUseLandscapeCulling: boolean;
-	LandscapeCullingPrecision: ELandscapeCullingPrecision;
-	clone() : MeshProxySettings;
-	static C(Other: UObject | any): MeshProxySettings;
-}
-
-declare type EMeshLODSelectionType = 'AllLODs' | 'SpecificLOD' | 'CalculateLOD';
-declare var EMeshLODSelectionType : { AllLODs:'AllLODs',SpecificLOD:'SpecificLOD',CalculateLOD:'CalculateLOD', };
-declare class MeshMergingSettings { 
-	bGenerateLightMapUV: boolean;
-	TargetLightMapResolution: number;
-	bImportVertexColors: boolean;
-	bPivotPointAtZero: boolean;
-	bMergePhysicsData: boolean;
-	bMergeMaterials: boolean;
-	MaterialSettings: MaterialProxySettings;
-	bBakeVertexDataToMesh: boolean;
-	bUseVertexDataForBakingMaterial: boolean;
-	bUseTextureBinning: boolean;
-	bCalculateCorrectLODModel: boolean;
-	LODSelectionType: LODSelectionType;
-	ExportSpecificLOD: number;
-	SpecificLOD: number;
-	bUseLandscapeCulling: boolean;
-	bExportNormalMap: boolean;
-	bExportMetallicMap: boolean;
-	bExportRoughnessMap: boolean;
-	bExportSpecularMap: boolean;
-	MergedMaterialAtlasResolution: number;
-	clone() : MeshMergingSettings;
-	static C(Other: UObject | any): MeshMergingSettings;
+declare class DynamicBlueprintBinding extends UObject { 
+	static Load(ResourceName: string): DynamicBlueprintBinding;
+	static Find(Outer: UObject, ResourceName: string): DynamicBlueprintBinding;
+	static GetDefaultObject(): DynamicBlueprintBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicBlueprintBinding;
+	static C(Other: UObject | any): DynamicBlueprintBinding;
 }
 
-declare class HierarchicalSimplification { 
-	TransitionScreenSize: number;
-	bSimplifyMesh: boolean;
-	ProxySetting: MeshProxySettings;
-	MergeSetting: MeshMergingSettings;
-	DesiredBoundRadius: number;
-	DesiredFillingPercentage: number;
-	MinNumberOfActorsToBuild: number;
-	clone() : HierarchicalSimplification;
-	static C(Other: UObject | any): HierarchicalSimplification;
+declare class DatasmithAssetUserData extends AssetUserData { 
+	MetaData: any;
+	ObjectTemplates: any;
+	static Load(ResourceName: string): DatasmithAssetUserData;
+	static Find(Outer: UObject, ResourceName: string): DatasmithAssetUserData;
+	static GetDefaultObject(): DatasmithAssetUserData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithAssetUserData;
+	static C(Other: UObject | any): DatasmithAssetUserData;
 }
 
-declare class BookMark extends UObject { 
-	Location: Vector;
-	Rotation: Rotator;
-	HiddenLevels: string[];
-	static Load(ResourceName: string): BookMark;
-	static Find(Outer: UObject, ResourceName: string): BookMark;
-	static GetDefaultObject(): BookMark;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BookMark;
-	static C(Other: UObject | any): BookMark;
+declare class PrimaryAssetType { 
+	Name: string;
+	clone() : PrimaryAssetType;
+	static C(Other: UObject | any): PrimaryAssetType;
+	Conv_PrimaryAssetTypeToString(): string;
+	EqualEqual_PrimaryAssetType(B: PrimaryAssetType): boolean;
+	GetPrimaryAssetIdList(OutPrimaryAssetIdList?: PrimaryAssetId[]): {OutPrimaryAssetIdList: PrimaryAssetId[]};
+	IsValidPrimaryAssetType(): boolean;
+	NotEqual_PrimaryAssetType(B: PrimaryAssetType): boolean;
+	static Conv_PrimaryAssetTypeToString(PrimaryAssetType: PrimaryAssetType): string;
+	static EqualEqual_PrimaryAssetType(A: PrimaryAssetType,B: PrimaryAssetType): boolean;
+	static GetPrimaryAssetIdList(PrimaryAssetType: PrimaryAssetType,OutPrimaryAssetIdList?: PrimaryAssetId[]): {OutPrimaryAssetIdList: PrimaryAssetId[]};
+	static IsValidPrimaryAssetType(PrimaryAssetType: PrimaryAssetType): boolean;
+	static NotEqual_PrimaryAssetType(A: PrimaryAssetType,B: PrimaryAssetType): boolean;
+}
+
+declare class PrimaryAssetId { 
+	PrimaryAssetType: PrimaryAssetType;
+	PrimaryAssetName: string;
+	clone() : PrimaryAssetId;
+	static C(Other: UObject | any): PrimaryAssetId;
+	Conv_PrimaryAssetIdToString(): string;
+	EqualEqual_PrimaryAssetId(B: PrimaryAssetId): boolean;
+	GetClassFromPrimaryAssetId(): UnrealEngineClass;
+	GetCurrentBundleState(bForceCurrentState: boolean,OutBundles?: string[]): {OutBundles: string[], $: boolean};
+	GetObjectFromPrimaryAssetId(): UObject;
+	GetSoftClassReferenceFromPrimaryAssetId(): Class;
+	GetSoftObjectReferenceFromPrimaryAssetId(): UObject;
+	IsValidPrimaryAssetId(): boolean;
+	NotEqual_PrimaryAssetId(B: PrimaryAssetId): boolean;
+	UnloadPrimaryAsset(): void;
+	static Conv_PrimaryAssetIdToString(PrimaryAssetId: PrimaryAssetId): string;
+	static EqualEqual_PrimaryAssetId(A: PrimaryAssetId,B: PrimaryAssetId): boolean;
+	static GetClassFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UnrealEngineClass;
+	static GetCurrentBundleState(PrimaryAssetId: PrimaryAssetId,bForceCurrentState: boolean,OutBundles?: string[]): {OutBundles: string[], $: boolean};
+	static GetObjectFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UObject;
+	static GetSoftClassReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): Class;
+	static GetSoftObjectReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UObject;
+	static IsValidPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): boolean;
+	static NotEqual_PrimaryAssetId(A: PrimaryAssetId,B: PrimaryAssetId): boolean;
+	static UnloadPrimaryAsset(PrimaryAssetId: PrimaryAssetId): void;
+}
+
+declare class Class extends Struct { 
+	static Load(ResourceName: string): Class;
+	static Find(Outer: UObject, ResourceName: string): Class;
+	static GetDefaultObject(): Class;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Class;
+	static C(Other: UObject | any): Class;
+	AddDynamicBinding(BindingObject: DynamicBlueprintBinding): void;
+	GetClassPathName(): string;
+	GetDerivedClasses(Results?: UnrealEngineClass[],bRecursive?: boolean): {Results: UnrealEngineClass[]};
+	GetDynamicBinding(BindingObjectClass: UnrealEngineClass): DynamicBlueprintBinding;
+	GetObjectsOfClass(Results?: UObject[],bIncludeDerivedClasses?: boolean,ExcludeFlags?: number,ExclusionInternalFlags?: number): {Results: UObject[]};
+	GetSuperClasses(): UnrealEngineClass[];
+	IsGeneratedByBlueprint(): boolean;
+	GetAllDatasmithUserData(OutUserData?: DatasmithAssetUserData[]): {OutUserData: DatasmithAssetUserData[]};
+	Conv_ClassToSoftClassReference(): Class;
+	Conv_SoftClassReferenceToClass(): UnrealEngineClass;
+	Conv_SoftClassReferenceToString(): string;
+	EqualEqual_SoftClassReference(B: Class): boolean;
+	GetClassDisplayName(): string;
+	GetPrimaryAssetIdFromClass(): PrimaryAssetId;
+	GetPrimaryAssetIdFromSoftClassReference(): PrimaryAssetId;
+	IsValidClass(): boolean;
+	IsValidSoftClassReference(): boolean;
+	NotEqual_SoftClassReference(B: Class): boolean;
+	ClassIsChildOf(ParentClass: UnrealEngineClass): boolean;
+	EqualEqual_ClassClass(B: UnrealEngineClass): boolean;
+	NotEqual_ClassClass(B: UnrealEngineClass): boolean;
+	SelectClass(B: UnrealEngineClass,bSelectA: boolean): UnrealEngineClass;
+	CreateSaveGameObject(): SaveGame;
+	SpawnObject(Outer: UObject): UObject;
+	CreateDragDropOperation(): DragDropOperation;
+	static AddDynamicBinding(Outer: UnrealEngineClass,BindingObject: DynamicBlueprintBinding): void;
+	static GetClassPathName(Class: UnrealEngineClass): string;
+	static GetDerivedClasses(ClassToLookFor: UnrealEngineClass,Results?: UnrealEngineClass[],bRecursive?: boolean): {Results: UnrealEngineClass[]};
+	static GetDynamicBinding(Outer: UnrealEngineClass,BindingObjectClass: UnrealEngineClass): DynamicBlueprintBinding;
+	static GetObjectsOfClass(ClassToLookFor: UnrealEngineClass,Results?: UObject[],bIncludeDerivedClasses?: boolean,ExcludeFlags?: number,ExclusionInternalFlags?: number): {Results: UObject[]};
+	static GetSuperClasses(InClass: UnrealEngineClass): UnrealEngineClass[];
+	static IsGeneratedByBlueprint(InClass: UnrealEngineClass): boolean;
+	static GetAllDatasmithUserData(ObjectClass: UnrealEngineClass,OutUserData?: DatasmithAssetUserData[]): {OutUserData: DatasmithAssetUserData[]};
+	static Conv_ClassToSoftClassReference(Class: UnrealEngineClass): Class;
+	static Conv_SoftClassReferenceToClass(softclass: Class): UnrealEngineClass;
+	static Conv_SoftClassReferenceToString(SoftClassReference: Class): string;
+	static EqualEqual_SoftClassReference(A: Class,B: Class): boolean;
+	static GetClassDisplayName(Class: UnrealEngineClass): string;
+	static GetPrimaryAssetIdFromClass(Class: UnrealEngineClass): PrimaryAssetId;
+	static GetPrimaryAssetIdFromSoftClassReference(SoftClassReference: Class): PrimaryAssetId;
+	static IsValidClass(Class: UnrealEngineClass): boolean;
+	static IsValidSoftClassReference(SoftClassReference: Class): boolean;
+	static NotEqual_SoftClassReference(A: Class,B: Class): boolean;
+	static ClassIsChildOf(TestClass: UnrealEngineClass,ParentClass: UnrealEngineClass): boolean;
+	static EqualEqual_ClassClass(A: UnrealEngineClass,B: UnrealEngineClass): boolean;
+	static NotEqual_ClassClass(A: UnrealEngineClass,B: UnrealEngineClass): boolean;
+	static SelectClass(A: UnrealEngineClass,B: UnrealEngineClass,bSelectA: boolean): UnrealEngineClass;
+	static CreateSaveGameObject(SaveGameClass: UnrealEngineClass): SaveGame;
+	static SpawnObject(ObjectClass: UnrealEngineClass,Outer: UObject): UObject;
+	static CreateDragDropOperation(OperationClass: UnrealEngineClass): DragDropOperation;
+}
+
+declare type EProxyNormalComputationMethod = 'AngleWeighted' | 'AreaWeighted' | 'EqualWeighted' | 'EProxyNormalComputationMethod_MAX';
+declare var EProxyNormalComputationMethod : { AngleWeighted:'AngleWeighted',AreaWeighted:'AreaWeighted',EqualWeighted:'EqualWeighted',EProxyNormalComputationMethod_MAX:'EProxyNormalComputationMethod_MAX', };
+declare type ELandscapeCullingPrecision = 'High' | 'Medium' | 'Low' | 'ELandscapeCullingPrecision_MAX';
+declare var ELandscapeCullingPrecision : { High:'High',Medium:'Medium',Low:'Low',ELandscapeCullingPrecision_MAX:'ELandscapeCullingPrecision_MAX', };
+declare class MeshProxySettings { 
+	ScreenSize: number;
+	bOverrideVoxelSize: boolean;
+	VoxelSize: number;
+	MaterialSettings: MaterialProxySettings;
+	TextureWidth: number;
+	TextureHeight: number;
+	bExportNormalMap: boolean;
+	bExportMetallicMap: boolean;
+	bExportRoughnessMap: boolean;
+	bExportSpecularMap: boolean;
+	bCalculateCorrectLODModel: boolean;
+	MergeDistance: number;
+	UnresolvedGeometryColor: Color;
+	bOverrideTransferDistance: boolean;
+	MaxRayCastDist: number;
+	bUseHardAngleThreshold: boolean;
+	HardAngleThreshold: number;
+	NormalCalculationMethod: EProxyNormalComputationMethod;
+	LightMapResolution: number;
+	bComputeLightMapResolution: boolean;
+	bRecalculateNormals: boolean;
+	bBakeVertexData: boolean;
+	bUseLandscapeCulling: boolean;
+	LandscapeCullingPrecision: ELandscapeCullingPrecision;
+	bAllowAdjacency: boolean;
+	bAllowDistanceField: boolean;
+	bReuseMeshLightmapUVs: boolean;
+	bCreateCollision: boolean;
+	bAllowVertexColors: boolean;
+	bGenerateLightmapUVs: boolean;
+	clone() : MeshProxySettings;
+	static C(Other: UObject | any): MeshProxySettings;
+}
+
+declare type EUVOutput = 'DoNotOutputChannel' | 'OutputChannel' | 'EUVOutput_MAX';
+declare var EUVOutput : { DoNotOutputChannel:'DoNotOutputChannel',OutputChannel:'OutputChannel',EUVOutput_MAX:'EUVOutput_MAX', };
+declare type EMeshLODSelectionType = 'AllLODs' | 'SpecificLOD' | 'CalculateLOD' | 'LowestDetailLOD' | 'EMeshLODSelectionType_MAX';
+declare var EMeshLODSelectionType : { AllLODs:'AllLODs',SpecificLOD:'SpecificLOD',CalculateLOD:'CalculateLOD',LowestDetailLOD:'LowestDetailLOD',EMeshLODSelectionType_MAX:'EMeshLODSelectionType_MAX', };
+declare class MeshMergingSettings { 
+	bGenerateLightMapUV: boolean;
+	TargetLightMapResolution: number;
+	bComputedLightMapResolution: boolean;
+	bImportVertexColors: boolean;
+	bPivotPointAtZero: boolean;
+	bMergePhysicsData: boolean;
+	bMergeMaterials: boolean;
+	MaterialSettings: MaterialProxySettings;
+	bBakeVertexDataToMesh: boolean;
+	bUseVertexDataForBakingMaterial: boolean;
+	bUseTextureBinning: boolean;
+	bReuseMeshLightmapUVs: boolean;
+	bMergeEquivalentMaterials: boolean;
+	OutputUVs: EUVOutput;
+	GutterSize: number;
+	bCalculateCorrectLODModel: boolean;
+	LODSelectionType: EMeshLODSelectionType;
+	ExportSpecificLOD: number;
+	SpecificLOD: number;
+	bUseLandscapeCulling: boolean;
+	bIncludeImposters: boolean;
+	bAllowDistanceField: boolean;
+	bExportNormalMap: boolean;
+	bExportMetallicMap: boolean;
+	bExportRoughnessMap: boolean;
+	bExportSpecularMap: boolean;
+	MergedMaterialAtlasResolution: number;
+	clone() : MeshMergingSettings;
+	static C(Other: UObject | any): MeshMergingSettings;
+}
+
+declare class HierarchicalSimplification { 
+	TransitionScreenSize: number;
+	OverrideDrawDistance: number;
+	bUseOverrideDrawDistance: boolean;
+	bAllowSpecificExclusion: boolean;
+	bSimplifyMesh: boolean;
+	ProxySetting: MeshProxySettings;
+	MergeSetting: MeshMergingSettings;
+	DesiredBoundRadius: number;
+	DesiredFillingPercentage: number;
+	MinNumberOfActorsToBuild: number;
+	bOnlyGenerateClustersForVolumes: boolean;
+	bReusePreviousLevelClusters: boolean;
+	clone() : HierarchicalSimplification;
+	static C(Other: UObject | any): HierarchicalSimplification;
+}
+
+declare class BookmarkBase extends UObject { 
+	static Load(ResourceName: string): BookmarkBase;
+	static Find(Outer: UObject, ResourceName: string): BookmarkBase;
+	static GetDefaultObject(): BookmarkBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BookmarkBase;
+	static C(Other: UObject | any): BookmarkBase;
+}
+
+declare class BookMark extends BookmarkBase { 
+	Location: Vector;
+	Rotation: Rotator;
+	HiddenLevels: string[];
+	static Load(ResourceName: string): BookMark;
+	static Find(Outer: UObject, ResourceName: string): BookMark;
+	static GetDefaultObject(): BookMark;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BookMark;
+	static C(Other: UObject | any): BookMark;
 }
 
 declare class NetViewer { 
@@ -9865,6 +10889,15 @@ declare class NetViewer {
 	static C(Other: UObject | any): NetViewer;
 }
 
+declare class BroadphaseSettings { 
+	bUseMBPOnClient: boolean;
+	bUseMBPOnServer: boolean;
+	MBPBounds: Box;
+	MBPNumSubdivs: any;
+	clone() : BroadphaseSettings;
+	static C(Other: UObject | any): BroadphaseSettings;
+}
+
 declare class WorldSettings extends Info { 
 	bEnableWorldBoundsChecks: boolean;
 	bEnableNavigationSystem: boolean;
@@ -9874,6 +10907,8 @@ declare class WorldSettings extends Info {
 	bEnableWorldOriginRebasing: boolean;
 	bWorldGravitySet: boolean;
 	bGlobalGravitySet: boolean;
+	NavigationSystemConfig: NavigationSystemConfig;
+	NavigationSystemConfigOverride: NavigationSystemConfig;
 	KillZ: number;
 	KillZDamageType: UnrealEngineClass;
 	WorldGravityZ: number;
@@ -9898,11 +10933,14 @@ declare class WorldSettings extends Info {
 	DefaultAmbientZoneSettings: InteriorSettings;
 	DefaultBaseSoundMix: SoundMix;
 	bEnableHierarchicalLODSystem: boolean;
+	HLODSetupAsset: Class;
+	OverrideBaseMaterial: MaterialInterface;
 	HierarchicalLODSetup: HierarchicalSimplification[];
 	NumHLODLevels: number;
+	bGenerateSingleClusterForLevel: boolean;
 	WorldToMeters: number;
 	MonoCullingDistance: number;
-	BookMarks: BookMark;
+	Bookmarks: BookMark;
 	TimeDilation: number;
 	MatineeTimeDilation: number;
 	DemoPlayTimeDilation: number;
@@ -9914,13 +10952,25 @@ declare class WorldSettings extends Info {
 	bHighPriorityLoading: boolean;
 	bHighPriorityLoadingLocal: boolean;
 	ReplicationViewers: NetViewer[];
+	bOverrideDefaultBroadphaseSettings: boolean;
+	BroadphaseSettings: BroadphaseSettings;
 	AssetUserData: AssetUserData[];
+	MaxNumberOfBookmarks: number;
+	DefaultBookmarkClass: UnrealEngineClass;
+	BookmarkArray: BookmarkBase[];
+	LastBookmarkClass: UnrealEngineClass;
 	static GetDefaultObject(): WorldSettings;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorldSettings;
 	OnRep_WorldGravityZ(): void;
 	static C(Other: UObject | any): WorldSettings;
 }
 
+declare class ReplicatedStaticActorDestructionInfo { 
+	ObjClass: UnrealEngineClass;
+	clone() : ReplicatedStaticActorDestructionInfo;
+	static C(Other: UObject | any): ReplicatedStaticActorDestructionInfo;
+}
+
 declare class Level extends UObject { 
 	OwningWorld: World;
 	Model: Model;
@@ -9943,12 +10993,14 @@ declare class Level extends UObject {
 	MapBuildData: MapBuildDataRegistry;
 	LightBuildLevelOffset: IntVector;
 	bTextureStreamingRotationChanged: boolean;
+	bStaticComponentsRegisteredInStreamingManager: boolean;
 	bIsVisible: boolean;
 	bLocked: boolean;
 	LevelSimplification: LevelSimplificationDetails;
 	LevelColor: LinearColor;
 	WorldSettings: WorldSettings;
 	AssetUserData: AssetUserData[];
+	DestroyedReplicatedStaticActors: ReplicatedStaticActorDestructionInfo[];
 	static Load(ResourceName: string): Level;
 	static Find(Outer: UObject, ResourceName: string): Level;
 	static GetDefaultObject(): Level;
@@ -9958,8 +11010,45 @@ declare class Level extends UObject {
 	static UpdateModelComponents(Level: Level): void;
 }
 
-declare type EPathFollowingAction = 'Error' | 'NoMove' | 'DirectMove' | 'PartialPath' | 'PathToGoal';
-declare var EPathFollowingAction : { Error:'Error',NoMove:'NoMove',DirectMove:'DirectMove',PartialPath:'PartialPath',PathToGoal:'PathToGoal', };
+declare class NavDataConfig extends NavAgentProperties { 
+	Name: string;
+	Color: Color;
+	DefaultQueryExtent: Vector;
+	NavigationDataClass: UnrealEngineClass;
+	NavigationDataClassName: SoftClassPath;
+	clone() : NavDataConfig;
+	static C(Other: UObject | any): NavDataConfig;
+}
+
+declare type ERuntimeGenerationType = 'Static' | 'DynamicModifiersOnly' | 'Dynamic' | 'LegacyGeneration' | 'ERuntimeGenerationType_MAX';
+declare var ERuntimeGenerationType : { Static:'Static',DynamicModifiersOnly:'DynamicModifiersOnly',Dynamic:'Dynamic',LegacyGeneration:'LegacyGeneration',ERuntimeGenerationType_MAX:'ERuntimeGenerationType_MAX', };
+declare class SupportedAreaData { 
+	AreaClassName: string;
+	AreaID: number;
+	AreaClass: UnrealEngineClass;
+	clone() : SupportedAreaData;
+	static C(Other: UObject | any): SupportedAreaData;
+}
+
+declare class NavigationData extends Actor { 
+	RenderingComp: PrimitiveComponent;
+	NavDataConfig: NavDataConfig;
+	bEnableDrawing: boolean;
+	bForceRebuildOnLoad: boolean;
+	bCanBeMainNavData: boolean;
+	bCanSpawnOnRebuild: boolean;
+	bRebuildAtRuntime: boolean;
+	RuntimeGeneration: ERuntimeGenerationType;
+	ObservedPathsTickInterval: number;
+	DataVersion: any;
+	SupportedAreas: SupportedAreaData[];
+	static GetDefaultObject(): NavigationData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationData;
+	static C(Other: UObject | any): NavigationData;
+}
+
+declare type EPathFollowingAction = 'Error' | 'NoMove' | 'DirectMove' | 'PartialPath' | 'PathToGoal' | 'EPathFollowingAction_MAX';
+declare var EPathFollowingAction : { Error:'Error',NoMove:'NoMove',DirectMove:'DirectMove',PartialPath:'PartialPath',PathToGoal:'PathToGoal',EPathFollowingAction_MAX:'EPathFollowingAction_MAX', };
 declare class PathFollowingComponent extends ActorComponent { 
 	MovementComp: NavMovementComponent;
 	MyNavData: NavigationData;
@@ -10063,8 +11152,8 @@ declare class AISenseConfig extends UObject {
 	static C(Other: UObject | any): AISenseConfig;
 }
 
-declare type EAISenseNotifyType = 'OnEveryPerception' | 'OnPerceptionChange';
-declare var EAISenseNotifyType : { OnEveryPerception:'OnEveryPerception',OnPerceptionChange:'OnPerceptionChange', };
+declare type EAISenseNotifyType = 'OnEveryPerception' | 'OnPerceptionChange' | 'EAISenseNotifyType_MAX';
+declare var EAISenseNotifyType : { OnEveryPerception:'OnEveryPerception',OnPerceptionChange:'OnPerceptionChange',EAISenseNotifyType_MAX:'EAISenseNotifyType_MAX', };
 declare class AISenseEvent extends UObject { 
 	static Load(ResourceName: string): AISenseEvent;
 	static Find(Outer: UObject, ResourceName: string): AISenseEvent;
@@ -10102,7 +11191,7 @@ declare class AIPerceptionSystem extends UObject {
 
 declare class AISense extends UObject { 
 	DefaultExpirationAge: number;
-	NotifyType: NotifyType;
+	NotifyType: EAISenseNotifyType;
 	bWantsNewPawnNotification: boolean;
 	bAutoRegisterAllPawnsAsSources: boolean;
 	PerceptionSystemInstance: AIPerceptionSystem;
@@ -10131,6 +11220,7 @@ declare class AIPerceptionComponent extends ActorComponent {
 	static Find(Outer: UObject, ResourceName: string): AIPerceptionComponent;
 	static GetDefaultObject(): AIPerceptionComponent;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AIPerceptionComponent;
+	SetSenseEnabled(SenseClass: UnrealEngineClass,bEnable: boolean): void;
 	RequestStimuliListenerUpdate(): void;
 	OnOwnerEndPlay(Actor: Actor,EndPlayReason: EEndPlayReason): void;
 	GetPerceivedHostileActors(OutActors?: Actor[]): {OutActors: Actor[]};
@@ -10143,8 +11233,8 @@ declare class AIPerceptionComponent extends ActorComponent {
 
 declare type EAIRequestPriority = 'SoftScript' | 'Logic' | 'HardScript' | 'Reaction' | 'Ultimate' | 'MAX';
 declare var EAIRequestPriority : { SoftScript:'SoftScript',Logic:'Logic',HardScript:'HardScript',Reaction:'Reaction',Ultimate:'Ultimate',MAX:'MAX', };
-declare type EPawnActionResult = 'NotStarted' | 'InProgress' | 'Success' | 'Failed' | 'Aborted';
-declare var EPawnActionResult : { NotStarted:'NotStarted',InProgress:'InProgress',Success:'Success',Failed:'Failed',Aborted:'Aborted', };
+declare type EPawnActionResult = 'NotStarted' | 'InProgress' | 'Success' | 'Failed' | 'Aborted' | 'EPawnActionResult_MAX';
+declare var EPawnActionResult : { NotStarted:'NotStarted',InProgress:'InProgress',Success:'Success',Failed:'Failed',Aborted:'Aborted',EPawnActionResult_MAX:'EPawnActionResult_MAX', };
 declare class PawnAction extends UObject { 
 	ChildAction: PawnAction;
 	ParentAction: PawnAction;
@@ -10195,11 +11285,11 @@ declare class PawnActionsComponent extends ActorComponent {
 	static C(Other: UObject | any): PawnActionsComponent;
 }
 
-declare type ETaskResourceOverlapPolicy = 'StartOnTop' | 'StartAtEnd';
-declare var ETaskResourceOverlapPolicy : { StartOnTop:'StartOnTop',StartAtEnd:'StartAtEnd', };
+declare type ETaskResourceOverlapPolicy = 'StartOnTop' | 'StartAtEnd' | 'ETaskResourceOverlapPolicy_MAX';
+declare var ETaskResourceOverlapPolicy : { StartOnTop:'StartOnTop',StartAtEnd:'StartAtEnd',ETaskResourceOverlapPolicy_MAX:'ETaskResourceOverlapPolicy_MAX', };
 declare class GameplayTask extends UObject { 
 	InstanceName: string;
-	ResourceOverlapPolicy: ResourceOverlapPolicy;
+	ResourceOverlapPolicy: ETaskResourceOverlapPolicy;
 	ChildTask: GameplayTask;
 	static Load(ResourceName: string): GameplayTask;
 	static Find(Outer: UObject, ResourceName: string): GameplayTask;
@@ -10216,6 +11306,7 @@ declare class GameplayResourceSet {
 }
 
 declare class GameplayTasksComponent extends ActorComponent { 
+	bIsNetDirty: boolean;
 	SimulatedTasks: GameplayTask[];
 	TaskPriorityQueue: GameplayTask[];
 	TickingTasks: GameplayTask[];
@@ -10229,6 +11320,55 @@ declare class GameplayTasksComponent extends ActorComponent {
 	static C(Other: UObject | any): GameplayTasksComponent;
 }
 
+declare class NavAgentSelector { 
+	bSupportsAgent0: boolean;
+	bSupportsAgent1: boolean;
+	bSupportsAgent2: boolean;
+	bSupportsAgent3: boolean;
+	bSupportsAgent4: boolean;
+	bSupportsAgent5: boolean;
+	bSupportsAgent6: boolean;
+	bSupportsAgent7: boolean;
+	bSupportsAgent8: boolean;
+	bSupportsAgent9: boolean;
+	bSupportsAgent10: boolean;
+	bSupportsAgent11: boolean;
+	bSupportsAgent12: boolean;
+	bSupportsAgent13: boolean;
+	bSupportsAgent14: boolean;
+	bSupportsAgent15: boolean;
+	clone() : NavAgentSelector;
+	static C(Other: UObject | any): NavAgentSelector;
+}
+
+declare class NavArea extends NavAreaBase { 
+	DefaultCost: number;
+	FixedAreaEnteringCost: number;
+	DrawColor: Color;
+	SupportedAgents: NavAgentSelector;
+	bSupportsAgent0: boolean;
+	bSupportsAgent1: boolean;
+	bSupportsAgent2: boolean;
+	bSupportsAgent3: boolean;
+	bSupportsAgent4: boolean;
+	bSupportsAgent5: boolean;
+	bSupportsAgent6: boolean;
+	bSupportsAgent7: boolean;
+	bSupportsAgent8: boolean;
+	bSupportsAgent9: boolean;
+	bSupportsAgent10: boolean;
+	bSupportsAgent11: boolean;
+	bSupportsAgent12: boolean;
+	bSupportsAgent13: boolean;
+	bSupportsAgent14: boolean;
+	bSupportsAgent15: boolean;
+	static Load(ResourceName: string): NavArea;
+	static Find(Outer: UObject, ResourceName: string): NavArea;
+	static GetDefaultObject(): NavArea;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavArea;
+	static C(Other: UObject | any): NavArea;
+}
+
 declare class NavigationFilterArea { 
 	AreaClass: UnrealEngineClass;
 	TravelCostOverride: number;
@@ -10278,8 +11418,8 @@ declare class AIRequestID {
 	static C(Other: UObject | any): AIRequestID;
 }
 
-declare type EPathFollowingResult = 'Success' | 'Blocked' | 'OffPath' | 'Aborted' | 'Skipped_DEPRECATED' | 'Invalid';
-declare var EPathFollowingResult : { Success:'Success',Blocked:'Blocked',OffPath:'OffPath',Aborted:'Aborted',Skipped_DEPRECATED:'Skipped_DEPRECATED',Invalid:'Invalid', };
+declare type EPathFollowingResult = 'Success' | 'Blocked' | 'OffPath' | 'Aborted' | 'Skipped_DEPRECATED' | 'Invalid' | 'EPathFollowingResult_MAX';
+declare var EPathFollowingResult : { Success:'Success',Blocked:'Blocked',OffPath:'OffPath',Aborted:'Aborted',Skipped_DEPRECATED:'Skipped_DEPRECATED',Invalid:'Invalid',EPathFollowingResult_MAX:'EPathFollowingResult_MAX', };
 declare class GameplayTaskResource extends UObject { 
 	ManualResourceID: number;
 	AutoResourceID: any;
@@ -10482,8 +11622,8 @@ declare class BTTaskNode extends BTNode {
 	static C(Other: UObject | any): BTTaskNode;
 }
 
-declare type EBTFlowAbortMode = 'None' | 'LowerPriority' | 'Self' | 'Both';
-declare var EBTFlowAbortMode : { None:'None',LowerPriority:'LowerPriority',Self:'Self',Both:'Both', };
+declare type EBTFlowAbortMode = 'None' | 'LowerPriority' | 'Self' | 'Both' | 'EBTFlowAbortMode_MAX';
+declare var EBTFlowAbortMode : { None:'None',LowerPriority:'LowerPriority',Self:'Self',Both:'Both',EBTFlowAbortMode_MAX:'EBTFlowAbortMode_MAX', };
 declare class BTDecorator extends BTAuxiliaryNode { 
 	bInverseCondition: boolean;
 	FlowAbortMode: EBTFlowAbortMode;
@@ -10494,8 +11634,8 @@ declare class BTDecorator extends BTAuxiliaryNode {
 	static C(Other: UObject | any): BTDecorator;
 }
 
-declare type EBTDecoratorLogic = 'Invalid' | 'Test' | 'And' | 'Or' | 'Not';
-declare var EBTDecoratorLogic : { Invalid:'Invalid',Test:'Test',And:'And',Or:'Or',Not:'Not', };
+declare type EBTDecoratorLogic = 'Invalid' | 'Test' | 'And' | 'Or' | 'Not' | 'EBTDecoratorLogic_MAX';
+declare var EBTDecoratorLogic : { Invalid:'Invalid',Test:'Test',And:'And',Or:'Or',Not:'Not',EBTDecoratorLogic_MAX:'EBTDecoratorLogic_MAX', };
 declare class BTDecoratorLogic { 
 	Operation: EBTDecoratorLogic;
 	Number: any;
@@ -10515,6 +11655,7 @@ declare class BTCompositeChild {
 declare class BTCompositeNode extends BTNode { 
 	Children: BTCompositeChild[];
 	Services: BTService[];
+	bApplyDecoratorScope: boolean;
 	static Load(ResourceName: string): BTCompositeNode;
 	static Find(Outer: UObject, ResourceName: string): BTCompositeNode;
 	static GetDefaultObject(): BTCompositeNode;
@@ -10536,10 +11677,10 @@ declare class BehaviorTree extends UObject {
 	static C(Other: UObject | any): BehaviorTree;
 }
 
-declare type EPathFollowingRequestResult = 'Failed' | 'AlreadyAtGoal' | 'RequestSuccessful';
-declare var EPathFollowingRequestResult : { Failed:'Failed',AlreadyAtGoal:'AlreadyAtGoal',RequestSuccessful:'RequestSuccessful', };
-declare type EPathFollowingStatus = 'Idle' | 'Waiting' | 'Paused' | 'Moving';
-declare var EPathFollowingStatus : { Idle:'Idle',Waiting:'Waiting',Paused:'Paused',Moving:'Moving', };
+declare type EPathFollowingRequestResult = 'Failed' | 'AlreadyAtGoal' | 'RequestSuccessful' | 'EPathFollowingRequestResult_MAX';
+declare var EPathFollowingRequestResult : { Failed:'Failed',AlreadyAtGoal:'AlreadyAtGoal',RequestSuccessful:'RequestSuccessful',EPathFollowingRequestResult_MAX:'EPathFollowingRequestResult_MAX', };
+declare type EPathFollowingStatus = 'Idle' | 'Waiting' | 'Paused' | 'Moving' | 'EPathFollowingStatus_MAX';
+declare var EPathFollowingStatus : { Idle:'Idle',Waiting:'Waiting',Paused:'Paused',Moving:'Moving',EPathFollowingStatus_MAX:'EPathFollowingStatus_MAX', };
 declare class AIController extends Controller { 
 	bStopAILogicOnUnposses: boolean;
 	bLOSflag: boolean;
@@ -10559,6 +11700,7 @@ declare class AIController extends Controller {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AIController;
 	UseBlackboard(BlackboardAsset: BlackboardData,BlackboardComponent?: BlackboardComponent): {BlackboardComponent: BlackboardComponent, $: boolean};
 	UnclaimTaskResource(ResourceClass: UnrealEngineClass): void;
+	SetPathFollowingComponent(NewPFComponent: PathFollowingComponent): void;
 	SetMoveBlockDetection(bEnable: boolean): void;
 	RunBehaviorTree(BTAsset: BehaviorTree): boolean;
 	OnUsingBlackBoard(BlackboardComp: BlackboardComponent,BlackboardAsset: BlackboardData): void;
@@ -10582,9 +11724,19 @@ declare class AIController extends Controller {
 	static C(Other: UObject | any): AIController;
 }
 
+declare class XRDeviceId { 
+	SystemName: string;
+	DeviceID: number;
+	clone() : XRDeviceId;
+	static C(Other: UObject | any): XRDeviceId;
+	GetDevicePose(bIsTracked?: boolean,Orientation?: Rotator,bHasPositionalTracking?: boolean,Position?: Vector): {bIsTracked: boolean, Orientation: Rotator, bHasPositionalTracking: boolean, Position: Vector};
+	IsDeviceTracking(): boolean;
+	static GetDevicePose(XRDeviceId: XRDeviceId,bIsTracked?: boolean,Orientation?: Rotator,bHasPositionalTracking?: boolean,Position?: Vector): {bIsTracked: boolean, Orientation: Rotator, bHasPositionalTracking: boolean, Position: Vector};
+	static IsDeviceTracking(XRDeviceId: XRDeviceId): boolean;
+}
+
 declare class Actor extends UObject { 
 	PrimaryActorTick: ActorTickFunction;
-	CustomTimeDilation: number;
 	bHidden: boolean;
 	bNetTemporary: boolean;
 	bNetStartup: boolean;
@@ -10595,63 +11747,69 @@ declare class Actor extends UObject {
 	bExchangedRoles: boolean;
 	bNetLoadOnClient: boolean;
 	bNetUseOwnerRelevancy: boolean;
-	bBlockInput: boolean;
+	bRelevantForNetworkReplays: boolean;
+	bReplayRewindable: boolean;
 	bAllowTickBeforeBeginPlay: boolean;
-	bActorEnableCollision: boolean;
+	bAutoDestroyWhenFinished: boolean;
+	bBlockInput: boolean;
+	bCanBeDamaged: boolean;
+	bCollideWhenPlacing: boolean;
+	bFindCameraComponentWhenViewTarget: boolean;
+	bGenerateOverlapEventsDuringLevelStreaming: boolean;
+	bIgnoresOriginShifting: boolean;
+	bEnableAutoLODGeneration: boolean;
+	bIsEditorOnlyActor: boolean;
+	bActorSeamlessTraveled: boolean;
 	bReplicates: boolean;
-	NetDriverName: string;
+	bCanBeInCluster: boolean;
+	bAllowReceiveTickEventOnDedicatedServer: boolean;
+	bActorEnableCollision: boolean;
+	bActorIsBeingDestroyed: boolean;
 	RemoteRole: ENetRole;
-	Owner: Actor;
 	ReplicatedMovement: RepMovement;
+	InitialLifeSpan: number;
+	CustomTimeDilation: number;
 	AttachmentReplication: RepAttachment;
+	Owner: Actor;
+	NetDriverName: string;
 	Role: ENetRole;
+	NetDormancy: ENetDormancy;
+	SpawnCollisionHandlingMethod: ESpawnActorCollisionHandlingMethod;
 	AutoReceiveInput: EAutoReceiveInput;
+	InputConsumeOption: EInputConsumeOptions;
 	InputPriority: number;
 	InputComponent: InputComponent;
-	InputConsumeOption: EInputConsumeOptions;
 	NetCullDistanceSquared: number;
 	NetTag: number;
 	NetUpdateFrequency: number;
 	MinNetUpdateFrequency: number;
 	NetPriority: number;
-	bAutoDestroyWhenFinished: boolean;
-	bCanBeDamaged: boolean;
-	bActorIsBeingDestroyed: boolean;
-	bCollideWhenPlacing: boolean;
-	bFindCameraComponentWhenViewTarget: boolean;
-	bRelevantForNetworkReplays: boolean;
-	bGenerateOverlapEventsDuringLevelStreaming: boolean;
-	bCanBeInCluster: boolean;
-	SpawnCollisionHandlingMethod: SpawnCollisionHandlingMethod;
 	Instigator: Pawn;
 	Children: Actor[];
 	RootComponent: SceneComponent;
 	PivotOffset: Vector;
 	ControllingMatineeActors: MatineeActor[];
-	InitialLifeSpan: number;
 	Layers: string[];
 	ParentComponentActor: any;
 	ParentComponent: any;
 	GroupActor: Actor;
 	SpriteScale: number;
+	HiddenEditorViews: any;
 	ActorLabel: string;
 	FolderPath: string;
-	bActorLabelEditable: boolean;
 	bHiddenEd: boolean;
-	bEditable: boolean;
-	bListedInSceneOutliner: boolean;
+	bIsEditorPreviewActor: boolean;
 	bHiddenEdLayer: boolean;
-	bHiddenEdTemporary: boolean;
 	bHiddenEdLevel: boolean;
 	bLockLocation: boolean;
-	bAllowReceiveTickEventOnDedicatedServer: boolean;
-	bActorSeamlessTraveled: boolean;
-	bIgnoresOriginShifting: boolean;
-	bEnableAutoLODGeneration: boolean;
+	bActorLabelEditable: boolean;
+	bEditable: boolean;
+	bListedInSceneOutliner: boolean;
+	bHiddenEdTemporary: boolean;
 	Tags: string[];
-	HiddenEditorViews: any;
 	OnTakeAnyDamage: UnrealEngineMulticastDelegate<(DamagedActor: Actor, Damage: number, DamageType: DamageType, InstigatedBy: Controller, DamageCauser: Actor) => void>;
 	OnTakePointDamage: UnrealEngineMulticastDelegate<(DamagedActor: Actor, Damage: number, InstigatedBy: Controller, HitLocation: Vector, FHitComponent: PrimitiveComponent, BoneName: string, ShotFromDirection: Vector, DamageType: DamageType, DamageCauser: Actor) => void>;
+	OnTakeRadialDamage: UnrealEngineMulticastDelegate<(DamagedActor: Actor, Damage: number, DamageType: DamageType, Origin: Vector, HitInfo: HitResult, InstigatedBy: Controller, DamageCauser: Actor) => void>;
 	OnActorBeginOverlap: UnrealEngineMulticastDelegate<(OverlappedActor: Actor, OtherActor: Actor) => void>;
 	OnActorEndOverlap: UnrealEngineMulticastDelegate<(OverlappedActor: Actor, OtherActor: Actor) => void>;
 	OnBeginCursorOver: UnrealEngineMulticastDelegate<(TouchedActor: Actor) => void>;
@@ -10665,8 +11823,8 @@ declare class Actor extends UObject {
 	OnActorHit: UnrealEngineMulticastDelegate<(SelfActor: Actor, OtherActor: Actor, NormalImpulse: Vector, Hit: HitResult) => void>;
 	OnDestroyed: UnrealEngineMulticastDelegate<(DestroyedActor: Actor) => void>;
 	OnEndPlay: UnrealEngineMulticastDelegate<(Actor: Actor, EndPlayReason: EEndPlayReason) => void>;
-	BlueprintCreatedComponents: ActorComponent[];
 	InstanceComponents: ActorComponent[];
+	BlueprintCreatedComponents: ActorComponent[];
 	constructor(InWorld: World, Location?: Vector, Rotation?: Rotator);
 	static GetDefaultObject(): Actor;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Actor;
@@ -10679,12 +11837,15 @@ declare class Actor extends UObject {
 	SetReplicates(bInReplicates: boolean): void;
 	SetReplicateMovement(bInReplicateMovement: boolean): void;
 	SetOwner(NewOwner: Actor): void;
+	SetNetDormancy(NewDormancy: ENetDormancy): void;
 	SetLifeSpan(InLifespan: number): void;
 	SetIsTemporarilyHiddenInEditor(bIsHidden: boolean): void;
+	SetFolderPath(NewFolderPath: string): void;
 	SetActorTickInterval(TickInterval: number): void;
 	SetActorTickEnabled(bEnabled: boolean): void;
 	SetActorScale3D(NewScale3D: Vector): void;
 	SetActorRelativeScale3D(NewRelativeScale: Vector): void;
+	SetActorLabel(NewActorLabel: string,bMarkDirty: boolean): void;
 	SetActorHiddenInGame(bNewHidden: boolean): void;
 	SetActorEnableCollision(bNewActorEnableCollision: boolean): void;
 	RemoveTickPrerequisiteComponent(PrerequisiteComponent: ActorComponent): void;
@@ -10707,6 +11868,7 @@ declare class Actor extends UObject {
 	ReceiveActorEndCursorOver(): void;
 	ReceiveActorBeginOverlap(OtherActor: Actor): void;
 	ReceiveActorBeginCursorOver(): void;
+	PrestreamTextures(Seconds: number,bEnableStreaming: boolean,CinematicTextureGroups: number): void;
 	OnRep_ReplicateMovement(): void;
 	OnRep_ReplicatedMovement(): void;
 	OnRep_Owner(): void;
@@ -10728,11 +11890,11 @@ declare class Actor extends UObject {
 	K2_GetRootComponent(): SceneComponent;
 	K2_GetActorRotation(): Rotator;
 	K2_GetActorLocation(): Vector;
-	K2_DetachFromActor(LocationRule: LocationRule,RotationRule: RotationRule,ScaleRule: ScaleRule): void;
+	K2_DetachFromActor(LocationRule: EDetachmentRule,RotationRule: EDetachmentRule,ScaleRule: EDetachmentRule): void;
 	K2_DestroyComponent(Component: ActorComponent): void;
 	K2_DestroyActor(): void;
-	K2_AttachToComponent(Parent: SceneComponent,SocketName: string,LocationRule: LocationRule,RotationRule: RotationRule,ScaleRule: ScaleRule,bWeldSimulatedBodies: boolean): void;
-	K2_AttachToActor(ParentActor: Actor,SocketName: string,LocationRule: LocationRule,RotationRule: RotationRule,ScaleRule: ScaleRule,bWeldSimulatedBodies: boolean): void;
+	K2_AttachToComponent(Parent: SceneComponent,SocketName: string,LocationRule: EAttachmentRule,RotationRule: EAttachmentRule,ScaleRule: EAttachmentRule,bWeldSimulatedBodies: boolean): void;
+	K2_AttachToActor(ParentActor: Actor,SocketName: string,LocationRule: EAttachmentRule,RotationRule: EAttachmentRule,ScaleRule: EAttachmentRule,bWeldSimulatedBodies: boolean): void;
 	K2_AttachRootComponentToActor(InParentActor: Actor,InSocketName: string,AttachLocationType: EAttachLocation,bWeldSimulatedBodies: boolean): void;
 	K2_AttachRootComponentTo(InParent: SceneComponent,InSocketName: string,AttachLocationType: EAttachLocation,bWeldSimulatedBodies: boolean): void;
 	K2_AddActorWorldTransform(DeltaTransform: Transform,bSweep: boolean,SweepHitResult?: HitResult,bTeleport?: boolean): {SweepHitResult: HitResult};
@@ -10762,6 +11924,7 @@ declare class Actor extends UObject {
 	GetOwner(): Actor;
 	GetOverlappingComponents(OverlappingComponents?: PrimitiveComponent[]): {OverlappingComponents: PrimitiveComponent[]};
 	GetOverlappingActors(OverlappingActors?: Actor[],ClassFilter?: UnrealEngineClass): {OverlappingActors: Actor[]};
+	GetLocalRole(): ENetRole;
 	GetLifeSpan(): number;
 	GetInstigatorController(): Controller;
 	GetInstigator(): Pawn;
@@ -10771,6 +11934,7 @@ declare class Actor extends UObject {
 	GetHorizontalDotProductTo(OtherActor: Actor): number;
 	GetHorizontalDistanceTo(OtherActor: Actor): number;
 	GetGameTimeSinceCreation(): number;
+	GetFolderPath(): string;
 	GetDotProductTo(OtherActor: Actor): number;
 	GetDistanceTo(OtherActor: Actor): number;
 	GetComponentsByTag(ComponentClass: UnrealEngineClass,Tag: string): ActorComponent[];
@@ -10786,6 +11950,7 @@ declare class Actor extends UObject {
 	GetActorScale3D(): Vector;
 	GetActorRightVector(): Vector;
 	GetActorRelativeScale3D(): Vector;
+	GetActorLabel(): string;
 	GetActorForwardVector(): Vector;
 	GetActorEyesViewPoint(OutLocation?: Vector,OutRotation?: Rotator): {OutLocation: Vector, OutRotation: Rotator};
 	GetActorEnableCollision(): boolean;
@@ -10815,12 +11980,15 @@ declare class Actor extends UObject {
 	ReregisterAllComponents(): void;
 	SetActorFlags(Flags: number): void;
 	SetRootComponent(Component: SceneComponent): void;
+	SetFocusActor(): void;
 	GetActorBounds(Origin?: Vector,BoxExtent?: Vector): {Origin: Vector, BoxExtent: Vector};
 	ApplyDamage(BaseDamage: number,EventInstigator: Controller,DamageCauser: Actor,DamageTypeClass: UnrealEngineClass): number;
 	ApplyPointDamage(BaseDamage: number,HitFromDirection: Vector,HitInfo: HitResult,EventInstigator: Controller,DamageCauser: Actor,DamageTypeClass: UnrealEngineClass): number;
 	FinishSpawningActor(SpawnTransform: Transform): Actor;
 	GetAIController(): AIController;
 	GetBlackboard(): BlackboardComponent;
+	AddDeviceVisualizationComponentBlocking(XRDeviceId: XRDeviceId,bManualAttachment: boolean,RelativeTransform: Transform): PrimitiveComponent;
+	AddNamedDeviceVisualizationComponentBlocking(SystemName: string,DeviceName: string,bManualAttachment: boolean,RelativeTransform: Transform,XRDeviceId?: XRDeviceId): {XRDeviceId: XRDeviceId, $: PrimitiveComponent};
 	static ClearActorLabel(Actor: Actor): void;
 	static GetActorLabel(Actor: Actor): string;
 	static GetFolderPath(Actor: Actor): string;
@@ -10836,12 +12004,15 @@ declare class Actor extends UObject {
 	static ReregisterAllComponents(Actor: Actor): void;
 	static SetActorFlags(Actor: Actor,Flags: number): void;
 	static SetRootComponent(Actor: Actor,Component: SceneComponent): void;
+	static SetFocusActor(InFocusActor: Actor): void;
 	static GetActorBounds(Actor: Actor,Origin?: Vector,BoxExtent?: Vector): {Origin: Vector, BoxExtent: Vector};
 	static ApplyDamage(DamagedActor: Actor,BaseDamage: number,EventInstigator: Controller,DamageCauser: Actor,DamageTypeClass: UnrealEngineClass): number;
 	static ApplyPointDamage(DamagedActor: Actor,BaseDamage: number,HitFromDirection: Vector,HitInfo: HitResult,EventInstigator: Controller,DamageCauser: Actor,DamageTypeClass: UnrealEngineClass): number;
 	static FinishSpawningActor(Actor: Actor,SpawnTransform: Transform): Actor;
 	static GetAIController(ControlledActor: Actor): AIController;
 	static GetBlackboard(Target: Actor): BlackboardComponent;
+	static AddDeviceVisualizationComponentBlocking(Target: Actor,XRDeviceId: XRDeviceId,bManualAttachment: boolean,RelativeTransform: Transform): PrimitiveComponent;
+	static AddNamedDeviceVisualizationComponentBlocking(Target: Actor,SystemName: string,DeviceName: string,bManualAttachment: boolean,RelativeTransform: Transform,XRDeviceId?: XRDeviceId): {XRDeviceId: XRDeviceId, $: PrimitiveComponent};
 }
 
 declare class LineBatchComponent extends PrimitiveComponent { 
@@ -10852,8 +12023,8 @@ declare class LineBatchComponent extends PrimitiveComponent {
 	static C(Other: UObject | any): LineBatchComponent;
 }
 
-declare type EStreamingVolumeUsage = 'SVB_Loading' | 'SVB_LoadingAndVisibility' | 'SVB_VisibilityBlockingOnLoad' | 'SVB_BlockingOnLoad' | 'SVB_LoadingNotVisible';
-declare var EStreamingVolumeUsage : { SVB_Loading:'SVB_Loading',SVB_LoadingAndVisibility:'SVB_LoadingAndVisibility',SVB_VisibilityBlockingOnLoad:'SVB_VisibilityBlockingOnLoad',SVB_BlockingOnLoad:'SVB_BlockingOnLoad',SVB_LoadingNotVisible:'SVB_LoadingNotVisible', };
+declare type EStreamingVolumeUsage = 'SVB_Loading' | 'SVB_LoadingAndVisibility' | 'SVB_VisibilityBlockingOnLoad' | 'SVB_BlockingOnLoad' | 'SVB_LoadingNotVisible' | 'SVB_MAX';
+declare var EStreamingVolumeUsage : { SVB_Loading:'SVB_Loading',SVB_LoadingAndVisibility:'SVB_LoadingAndVisibility',SVB_VisibilityBlockingOnLoad:'SVB_VisibilityBlockingOnLoad',SVB_BlockingOnLoad:'SVB_BlockingOnLoad',SVB_LoadingNotVisible:'SVB_LoadingNotVisible',SVB_MAX:'SVB_MAX', };
 declare class LevelStreamingVolume extends Volume { 
 	StreamingLevelNames: string[];
 	bEditorPreVisOnly: boolean;
@@ -10866,17 +12037,18 @@ declare class LevelStreamingVolume extends Volume {
 
 declare class LevelStreaming extends UObject { 
 	PackageName: string;
-	WorldAsset: any;
+	WorldAsset: World;
 	PackageNameToLoad: string;
 	LODPackageNames: string[];
 	LevelTransform: Transform;
+	LevelLODIndex: number;
 	bShouldBeVisibleInEditor: boolean;
-	bLocked: boolean;
-	bShouldBeLoaded: boolean;
 	bShouldBeVisible: boolean;
+	bShouldBeLoaded: boolean;
+	bLocked: boolean;
 	bIsStatic: boolean;
 	bShouldBlockOnLoad: boolean;
-	LevelLODIndex: number;
+	bShouldBlockOnUnload: boolean;
 	bDisableDistanceStreaming: boolean;
 	bDrawOnLevelStatusMap: boolean;
 	DrawColor: Color;
@@ -10895,6 +12067,10 @@ declare class LevelStreaming extends UObject {
 	static Find(Outer: UObject, ResourceName: string): LevelStreaming;
 	static GetDefaultObject(): LevelStreaming;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelStreaming;
+	ShouldBeLoaded(): boolean;
+	SetShouldBeVisible(bInShouldBeVisible: boolean): void;
+	SetShouldBeLoaded(bInShouldBeLoaded: boolean): void;
+	SetLevelLODIndex(LODIndex: number): void;
 	IsStreamingStatePending(): boolean;
 	IsLevelVisible(): boolean;
 	IsLevelLoaded(): boolean;
@@ -10921,86 +12097,16 @@ declare class ParticleEventManager extends Actor {
 	static C(Other: UObject | any): ParticleEventManager;
 }
 
-declare class BlueprintFunctionLibrary extends UObject { 
-	static Load(ResourceName: string): BlueprintFunctionLibrary;
-	static Find(Outer: UObject, ResourceName: string): BlueprintFunctionLibrary;
-	static GetDefaultObject(): BlueprintFunctionLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintFunctionLibrary;
-	static MakeStringAssetReference(AssetLongPathname: string): StringAssetReference;
-	static C(Other: UObject | any): BlueprintFunctionLibrary;
-}
-
-declare class CrowdManagerBase extends UObject { 
-	static Load(ResourceName: string): CrowdManagerBase;
-	static Find(Outer: UObject, ResourceName: string): CrowdManagerBase;
-	static GetDefaultObject(): CrowdManagerBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CrowdManagerBase;
-	static C(Other: UObject | any): CrowdManagerBase;
-}
-
-declare type ENavDataGatheringModeConfig = 'Invalid' | 'Instant' | 'Lazy';
-declare var ENavDataGatheringModeConfig : { Invalid:'Invalid',Instant:'Instant',Lazy:'Lazy', };
-declare type FNavigationSystemRunMode = 'InvalidMode' | 'GameMode' | 'EditorMode' | 'SimulationMode' | 'PIEMode';
-declare var FNavigationSystemRunMode : { InvalidMode:'InvalidMode',GameMode:'GameMode',EditorMode:'EditorMode',SimulationMode:'SimulationMode',PIEMode:'PIEMode', };
-declare class NavMeshBoundsVolume extends Volume { 
-	SupportedAgents: NavAgentSelector;
-	static GetDefaultObject(): NavMeshBoundsVolume;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavMeshBoundsVolume;
-	static C(Other: UObject | any): NavMeshBoundsVolume;
-}
-
-declare type ENavigationQueryResult = 'Invalid' | 'Error' | 'Fail' | 'Success';
-declare var ENavigationQueryResult : { Invalid:'Invalid',Error:'Error',Fail:'Fail',Success:'Success', };
-declare class NavigationSystem extends BlueprintFunctionLibrary { 
-	MainNavData: NavigationData;
-	AbstractNavData: NavigationData;
-	CrowdManagerClass: UnrealEngineClass;
-	bAutoCreateNavigationData: boolean;
-	bAllowClientSideNavigation: boolean;
-	bSupportRebuilding: boolean;
-	bInitialBuildingLocked: boolean;
-	bSkipAgentHeightCheckWhenPickingNavData: boolean;
-	DataGatheringMode: DataGatheringMode;
-	bGenerateNavigationOnlyAroundNavigationInvokers: boolean;
-	ActiveTilesUpdateInterval: number;
-	SupportedAgents: NavDataConfig[];
-	DirtyAreasUpdateFreq: number;
-	NavDataSet: NavigationData[];
-	NavDataRegistrationQueue: NavigationData[];
-	OnNavDataRegisteredEvent: UnrealEngineMulticastDelegate<(NavData: NavigationData) => void>;
-	OnNavigationGenerationFinishedDelegate: UnrealEngineMulticastDelegate<(NavData: NavigationData) => void>;
-	OperationMode: OperationMode;
-	static Load(ResourceName: string): NavigationSystem;
-	static Find(Outer: UObject, ResourceName: string): NavigationSystem;
-	static GetDefaultObject(): NavigationSystem;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationSystem;
-	UnregisterNavigationInvoker(Invoker: Actor): void;
-	static SimpleMoveToLocation(Controller: Controller,Goal: Vector): void;
-	static SimpleMoveToActor(Controller: Controller,Goal: Actor): void;
-	SetMaxSimultaneousTileGenerationJobsCount(MaxNumberOfJobs: number): void;
-	SetGeometryGatheringMode(NewMode: NewMode): void;
-	ResetMaxSimultaneousTileGenerationJobsCount(): void;
-	RegisterNavigationInvoker(Invoker: Actor,TileGenerationRadius: number,TileRemovalRadius: number): void;
-	static ProjectPointToNavigation(WorldContextObject: UObject,Point: Vector,NavData: NavigationData,FilterClass: UnrealEngineClass,QueryExtent: Vector): Vector;
-	OnNavigationBoundsUpdated(NavVolume: NavMeshBoundsVolume): void;
-	static NavigationRaycast(WorldContextObject: UObject,RayStart: Vector,RayEnd: Vector,HitLocation?: Vector,FilterClass?: UnrealEngineClass,Querier?: Controller): {HitLocation: Vector, $: boolean};
-	static K2_ProjectPointToNavigation(WorldContextObject: UObject,Point: Vector,ProjectedLocation?: Vector,NavData?: NavigationData,FilterClass?: UnrealEngineClass,QueryExtent?: Vector): {ProjectedLocation: Vector, $: boolean};
-	static K2_GetRandomReachablePointInRadius(WorldContextObject: UObject,Origin: Vector,RandomLocation?: Vector,Radius?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {RandomLocation: Vector, $: boolean};
-	static K2_GetRandomPointInNavigableRadius(WorldContextObject: UObject,Origin: Vector,RandomLocation?: Vector,Radius?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {RandomLocation: Vector, $: boolean};
-	static IsNavigationBeingBuiltOrLocked(WorldContextObject: UObject): boolean;
-	static IsNavigationBeingBuilt(WorldContextObject: UObject): boolean;
-	static GetRandomReachablePointInRadius(WorldContextObject: UObject,Origin: Vector,Radius: number,NavData: NavigationData,FilterClass: UnrealEngineClass): Vector;
-	static GetRandomPointInNavigableRadius(WorldContextObject: UObject,Origin: Vector,Radius: number,NavData: NavigationData,FilterClass: UnrealEngineClass): Vector;
-	static GetPathLength(WorldContextObject: UObject,PathStart: Vector,PathEnd: Vector,PathLength?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {PathLength: number, $: ENavigationQueryResult};
-	static GetPathCost(WorldContextObject: UObject,PathStart: Vector,PathEnd: Vector,PathCost?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {PathCost: number, $: ENavigationQueryResult};
-	static GetNavigationSystem(WorldContextObject: UObject): NavigationSystem;
-	static FindPathToLocationSynchronously(WorldContextObject: UObject,PathStart: Vector,PathEnd: Vector,PathfindingContext: Actor,FilterClass: UnrealEngineClass): NavigationPath;
-	static FindPathToActorSynchronously(WorldContextObject: UObject,PathStart: Vector,GoalActor: Actor,TetherDistance: number,PathfindingContext: Actor,FilterClass: UnrealEngineClass): NavigationPath;
-	static C(Other: UObject | any): NavigationSystem;
+declare class NavigationSystemBase extends UObject { 
+	static Load(ResourceName: string): NavigationSystemBase;
+	static Find(Outer: UObject, ResourceName: string): NavigationSystemBase;
+	static GetDefaultObject(): NavigationSystemBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationSystemBase;
+	static C(Other: UObject | any): NavigationSystemBase;
 }
 
 declare class AISystemBase extends UObject { 
-	AISystemClassName: StringClassReference;
+	AISystemClassName: SoftClassPath;
 	AISystemModuleName: string;
 	bInstantiateAISystemOnClient: boolean;
 	static Load(ResourceName: string): AISystemBase;
@@ -11041,7 +12147,6 @@ declare class LevelCollection {
 
 declare class MaterialParameterCollectionInstance extends UObject { 
 	Collection: MaterialParameterCollection;
-	World: World;
 	static Load(ResourceName: string): MaterialParameterCollectionInstance;
 	static Find(Outer: UObject, ResourceName: string): MaterialParameterCollectionInstance;
 	static GetDefaultObject(): MaterialParameterCollectionInstance;
@@ -11063,6 +12168,7 @@ declare class WorldComposition extends UObject {
 	TilesStreamingTimeThreshold: any;
 	bLoadAllTilesDuringCinematic: boolean;
 	bRebaseOriginIn3DSpace: boolean;
+	bLockTilesLocation: boolean;
 	RebaseOriginDistance: number;
 	static Load(ResourceName: string): WorldComposition;
 	static Find(Outer: UObject, ResourceName: string): WorldComposition;
@@ -11071,6 +12177,18 @@ declare class WorldComposition extends UObject {
 	static C(Other: UObject | any): WorldComposition;
 }
 
+declare class WorldPSCPool { 
+	WorldParticleSystemPools: any;
+	clone() : WorldPSCPool;
+	static C(Other: UObject | any): WorldPSCPool;
+}
+
+declare class ActorLayer { 
+	Name: string;
+	clone() : ActorLayer;
+	static C(Other: UObject | any): ActorLayer;
+}
+
 declare class URL { 
 	Protocol: string;
 	Host: string;
@@ -11084,8 +12202,8 @@ declare class URL {
 	static C(Other: UObject | any): URL;
 }
 
-declare type ERecastPartitioning = 'Monotone' | 'Watershed' | 'ChunkyMonotone';
-declare var ERecastPartitioning : { Monotone:'Monotone',Watershed:'Watershed',ChunkyMonotone:'ChunkyMonotone', };
+declare type ERecastPartitioning = 'Monotone' | 'Watershed' | 'ChunkyMonotone' | 'ERecastPartitioning_MAX';
+declare var ERecastPartitioning : { Monotone:'Monotone',Watershed:'Watershed',ChunkyMonotone:'ChunkyMonotone',ERecastPartitioning_MAX:'ERecastPartitioning_MAX', };
 declare class RecastNavMesh extends NavigationData { 
 	bDrawTriangleEdges: boolean;
 	bDrawPolyEdges: boolean;
@@ -11101,6 +12219,7 @@ declare class RecastNavMesh extends NavigationData {
 	bDrawFailedNavLinks: boolean;
 	bDrawClusters: boolean;
 	bDrawOctree: boolean;
+	bDrawOctreeDetails: boolean;
 	bDistinctlyDrawTilesBeingBuilt: boolean;
 	bDrawNavMesh: boolean;
 	DrawOffset: number;
@@ -11122,6 +12241,7 @@ declare class RecastNavMesh extends NavigationData {
 	PolyRefTileBits: number;
 	PolyRefNavPolyBits: number;
 	PolyRefSaltBits: number;
+	NavMeshOriginOffset: Vector;
 	DefaultDrawDistance: number;
 	DefaultMaxSearchNodes: number;
 	DefaultMaxHierarchicalSearchNodes: number;
@@ -11132,6 +12252,8 @@ declare class RecastNavMesh extends NavigationData {
 	bSortNavigationAreasByCost: boolean;
 	bPerformVoxelFiltering: boolean;
 	bMarkLowHeightAreas: boolean;
+	bFilterLowSpanSequences: boolean;
+	bFilterLowSpanFromTileCache: boolean;
 	bDoFullyAsyncNavDataGathering: boolean;
 	bUseBetterOffsetsFromCorners: boolean;
 	bStoreEmptyTileLayers: boolean;
@@ -11158,8 +12280,8 @@ declare class TraceChannelTestBatchOptions {
 	static C(Other: UObject | any): TraceChannelTestBatchOptions;
 }
 
-declare type EDrawDebugTrace = 'None' | 'ForOneFrame' | 'ForDuration' | 'Persistent';
-declare var EDrawDebugTrace : { None:'None',ForOneFrame:'ForOneFrame',ForDuration:'ForDuration',Persistent:'Persistent', };
+declare type EDrawDebugTrace = 'None' | 'ForOneFrame' | 'ForDuration' | 'Persistent' | 'EDrawDebugTrace_MAX';
+declare var EDrawDebugTrace : { None:'None',ForOneFrame:'ForOneFrame',ForDuration:'ForDuration',Persistent:'Persistent',EDrawDebugTrace_MAX:'EDrawDebugTrace_MAX', };
 declare class TraceQueryTestNames { 
 	ComponentName: string;
 	PhysicalMaterialName: string;
@@ -11192,6 +12314,7 @@ declare class TraceQueryTestResults extends UObject {
 	ChannelResults: TraceQueryTestResultsInner;
 	ObjectResults: TraceQueryTestResultsInner;
 	ProfileResults: TraceQueryTestResultsInner;
+	BatchOptions: TraceChannelTestBatchOptions;
 	static Load(ResourceName: string): TraceQueryTestResults;
 	static Find(Outer: UObject, ResourceName: string): TraceQueryTestResults;
 	static GetDefaultObject(): TraceQueryTestResults;
@@ -11200,12 +12323,29 @@ declare class TraceQueryTestResults extends UObject {
 	static C(Other: UObject | any): TraceQueryTestResults;
 }
 
-declare type EComparisonTolerance = 'Zero' | 'Low' | 'Medium' | 'High' | 'Custom';
-declare var EComparisonTolerance : { Zero:'Zero',Low:'Low',Medium:'Medium',High:'High',Custom:'Custom', };
+declare class AutomationViewSettings extends DataAsset { 
+	AntiAliasing: boolean;
+	MotionBlur: boolean;
+	TemporalAA: boolean;
+	ScreenSpaceReflections: boolean;
+	ScreenSpaceAO: boolean;
+	DistanceFieldAO: boolean;
+	ContactShadows: boolean;
+	EyeAdaptation: boolean;
+	Bloom: boolean;
+	static Load(ResourceName: string): AutomationViewSettings;
+	static Find(Outer: UObject, ResourceName: string): AutomationViewSettings;
+	static GetDefaultObject(): AutomationViewSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AutomationViewSettings;
+	static C(Other: UObject | any): AutomationViewSettings;
+}
+
+declare type EComparisonTolerance = 'Zero' | 'Low' | 'Medium' | 'High' | 'Custom' | 'EComparisonTolerance_MAX';
+declare var EComparisonTolerance : { Zero:'Zero',Low:'Low',Medium:'Medium',High:'High',Custom:'Custom',EComparisonTolerance_MAX:'EComparisonTolerance_MAX', };
 declare class ComparisonToleranceAmount { 
-	Red: number;
-	Green: number;
-	Blue: number;
+	red: number;
+	green: number;
+	blue: number;
 	Alpha: number;
 	MinBrightness: number;
 	MaxBrightness: number;
@@ -11216,9 +12356,13 @@ declare class ComparisonToleranceAmount {
 declare class AutomationScreenshotOptions { 
 	Resolution: Vector2D;
 	Delay: number;
+	bOverride_OverrideTimeTo: boolean;
+	OverrideTimeTo: number;
 	bDisableNoisyRenderingFeatures: boolean;
+	bDisableTonemapping: boolean;
+	ViewSettings: AutomationViewSettings;
 	VisualizeBuffer: string;
-	Tolerance: Tolerance;
+	Tolerance: EComparisonTolerance;
 	ToleranceAmount: ComparisonToleranceAmount;
 	MaximumLocalError: number;
 	MaximumGlobalError: number;
@@ -11226,271 +12370,8 @@ declare class AutomationScreenshotOptions {
 	bIgnoreColors: boolean;
 	clone() : AutomationScreenshotOptions;
 	static C(Other: UObject | any): AutomationScreenshotOptions;
-	static GetDefaultScreenshotOptionsForGameplay(Tolerance: Tolerance,Delay: number): AutomationScreenshotOptions;
-	static GetDefaultScreenshotOptionsForRendering(Tolerance: Tolerance,Delay: number): AutomationScreenshotOptions;
-}
-
-declare type ENiagaraCollisionMode = 'None' | 'SceneGeometry' | 'DepthBuffer' | 'DistanceField';
-declare var ENiagaraCollisionMode : { None:'None',SceneGeometry:'SceneGeometry',DepthBuffer:'DepthBuffer',DistanceField:'DistanceField', };
-declare class NiagaraEffectRendererProperties extends UObject { 
-	static Load(ResourceName: string): NiagaraEffectRendererProperties;
-	static Find(Outer: UObject, ResourceName: string): NiagaraEffectRendererProperties;
-	static GetDefaultObject(): NiagaraEffectRendererProperties;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraEffectRendererProperties;
-	static C(Other: UObject | any): NiagaraEffectRendererProperties;
-}
-
-declare class NiagaraTypeDefinition { 
-	Struct: Struct;
-	clone() : NiagaraTypeDefinition;
-	static C(Other: UObject | any): NiagaraTypeDefinition;
-}
-
-declare class NiagaraVariable { 
-	Id: Guid;
-	Name: string;
-	TypeDef: NiagaraTypeDefinition;
-	VarData: number[];
-	clone() : NiagaraVariable;
-	static C(Other: UObject | any): NiagaraVariable;
-}
-
-declare class NiagaraParameters { 
-	Parameters: NiagaraVariable[];
-	clone() : NiagaraParameters;
-	static C(Other: UObject | any): NiagaraParameters;
-}
-
-declare type ENiagaraDataSetType = 'ParticleData' | 'Shared' | 'Event';
-declare var ENiagaraDataSetType : { ParticleData:'ParticleData',Shared:'Shared',Event:'Event', };
-declare class NiagaraDataSetID { 
-	Name: string;
-	Type: Type;
-	clone() : NiagaraDataSetID;
-	static C(Other: UObject | any): NiagaraDataSetID;
-}
-
-declare class NiagaraDataSetProperties { 
-	ID: NiagaraDataSetID;
-	Variables: NiagaraVariable[];
-	clone() : NiagaraDataSetProperties;
-	static C(Other: UObject | any): NiagaraDataSetProperties;
-}
-
-declare class NiagaraScriptDataUsageInfo { 
-	bReadsAttriubteData: boolean;
-	clone() : NiagaraScriptDataUsageInfo;
-	static C(Other: UObject | any): NiagaraScriptDataUsageInfo;
-}
-
-declare type ENiagaraScriptUsage = 'Function' | 'Module' | 'SpawnScript' | 'SpawnScriptInterpolated' | 'UpdateScript' | 'EffectScript';
-declare var ENiagaraScriptUsage : { Function:'Function',Module:'Module',SpawnScript:'SpawnScript',SpawnScriptInterpolated:'SpawnScriptInterpolated',UpdateScript:'UpdateScript',EffectScript:'EffectScript', };
-declare class NiagaraDataInterface extends UObject { 
-	static Load(ResourceName: string): NiagaraDataInterface;
-	static Find(Outer: UObject, ResourceName: string): NiagaraDataInterface;
-	static GetDefaultObject(): NiagaraDataInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraDataInterface;
-	static C(Other: UObject | any): NiagaraDataInterface;
-}
-
-declare class NiagaraScriptDataInterfaceInfo { 
-	DataInterface: NiagaraDataInterface;
-	Id: Guid;
-	Name: string;
-	clone() : NiagaraScriptDataInterfaceInfo;
-	static C(Other: UObject | any): NiagaraScriptDataInterfaceInfo;
-}
-
-declare class VMExternalFunctionBindingInfo { 
-	Name: string;
-	OwnerId: Guid;
-	InputParamLocations: boolean[];
-	NumOutputs: number;
-	clone() : VMExternalFunctionBindingInfo;
-	static C(Other: UObject | any): VMExternalFunctionBindingInfo;
-}
-
-declare type ENiagaraNumericOutputTypeSelectionMode = 'None' | 'Largest' | 'Smallest' | 'Scalar';
-declare var ENiagaraNumericOutputTypeSelectionMode : { None:'None',Largest:'Largest',Smallest:'Smallest',Scalar:'Scalar', };
-declare class NiagaraStatScope { 
-	clone() : NiagaraStatScope;
-	static C(Other: UObject | any): NiagaraStatScope;
-}
-
-declare class NiagaraScriptSourceBase extends UObject { 
-	static Load(ResourceName: string): NiagaraScriptSourceBase;
-	static Find(Outer: UObject, ResourceName: string): NiagaraScriptSourceBase;
-	static GetDefaultObject(): NiagaraScriptSourceBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraScriptSourceBase;
-	static C(Other: UObject | any): NiagaraScriptSourceBase;
-}
-
-declare type ENiagaraScriptCompileStatus = 'NCS_Unknown' | 'NCS_Dirty' | 'NCS_Error' | 'NCS_UpToDate' | 'NCS_BeingCreated' | 'NCS_UpToDateWithWarnings';
-declare var ENiagaraScriptCompileStatus : { NCS_Unknown:'NCS_Unknown',NCS_Dirty:'NCS_Dirty',NCS_Error:'NCS_Error',NCS_UpToDate:'NCS_UpToDate',NCS_BeingCreated:'NCS_BeingCreated',NCS_UpToDateWithWarnings:'NCS_UpToDateWithWarnings', };
-declare class NiagaraScript extends UObject { 
-	ByteCode: number[];
-	Parameters: NiagaraParameters;
-	InternalParameters: NiagaraParameters;
-	Attributes: NiagaraVariable[];
-	EventReceivers: NiagaraDataSetProperties[];
-	EventGenerators: NiagaraDataSetProperties[];
-	DataUsage: NiagaraScriptDataUsageInfo;
-	Usage: Usage;
-	DataInterfaceInfo: NiagaraScriptDataInterfaceInfo[];
-	CalledVMExternalFunctions: VMExternalFunctionBindingInfo[];
-	NumericOutputTypeSelectionMode: NumericOutputTypeSelectionMode;
-	StatScopes: NiagaraStatScope[];
-	Source: NiagaraScriptSourceBase;
-	Description: string;
-	ChangeId: Guid;
-	LastCompileStatus: LastCompileStatus;
-	static Load(ResourceName: string): NiagaraScript;
-	static Find(Outer: UObject, ResourceName: string): NiagaraScript;
-	static GetDefaultObject(): NiagaraScript;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraScript;
-	static C(Other: UObject | any): NiagaraScript;
-}
-
-declare class NiagaraEventReceiverEmitterAction extends UObject { 
-	static Load(ResourceName: string): NiagaraEventReceiverEmitterAction;
-	static Find(Outer: UObject, ResourceName: string): NiagaraEventReceiverEmitterAction;
-	static GetDefaultObject(): NiagaraEventReceiverEmitterAction;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraEventReceiverEmitterAction;
-	static C(Other: UObject | any): NiagaraEventReceiverEmitterAction;
-}
-
-declare class NiagaraEventReceiverProperties { 
-	Name: string;
-	SourceEventGenerator: string;
-	SourceEmitter: string;
-	EmitterActions: NiagaraEventReceiverEmitterAction[];
-	clone() : NiagaraEventReceiverProperties;
-	static C(Other: UObject | any): NiagaraEventReceiverProperties;
-}
-
-declare class NiagaraEventGeneratorProperties { 
-	MaxEventsPerFrame: number;
-	SetProps: NiagaraDataSetProperties;
-	clone() : NiagaraEventGeneratorProperties;
-	static C(Other: UObject | any): NiagaraEventGeneratorProperties;
-}
-
-declare class NiagaraEmitterScriptProperties { 
-	Script: NiagaraScript;
-	EventReceivers: NiagaraEventReceiverProperties[];
-	EventGenerators: NiagaraEventGeneratorProperties[];
-	clone() : NiagaraEmitterScriptProperties;
-	static C(Other: UObject | any): NiagaraEmitterScriptProperties;
-}
-
-declare type EScriptExecutionMode = 'EveryParticle' | 'SpawnedParticles' | 'SingleParticle';
-declare var EScriptExecutionMode : { EveryParticle:'EveryParticle',SpawnedParticles:'SpawnedParticles',SingleParticle:'SingleParticle', };
-declare class NiagaraEventScriptProperties extends NiagaraEmitterScriptProperties { 
-	ExecutionMode: ExecutionMode;
-	SpawnNumber: any;
-	MaxEventsPerFrame: any;
-	SourceEmitterID: Guid;
-	SourceEventName: string;
-	clone() : NiagaraEventScriptProperties;
-	static C(Other: UObject | any): NiagaraEventScriptProperties;
-}
-
-declare class NiagaraEmitterBurst { 
-	Time: number;
-	TimeRange: number;
-	SpawnMinimum: any;
-	SpawnMaximum: any;
-	clone() : NiagaraEmitterBurst;
-	static C(Other: UObject | any): NiagaraEmitterBurst;
-}
-
-declare class NiagaraEmitterProperties extends UObject { 
-	SpawnRate: number;
-	bLocalSpace: boolean;
-	Material: Material;
-	StartTime: number;
-	EndTime: number;
-	NumLoops: number;
-	CollisionMode: CollisionMode;
-	RendererProperties: NiagaraEffectRendererProperties;
-	UpdateScriptProps: NiagaraEmitterScriptProperties;
-	SpawnScriptProps: NiagaraEmitterScriptProperties;
-	EventHandlerScriptProps: NiagaraEventScriptProperties;
-	Bursts: NiagaraEmitterBurst[];
-	bInterpolatedSpawning: boolean;
-	ChangeId: Guid;
-	static Load(ResourceName: string): NiagaraEmitterProperties;
-	static Find(Outer: UObject, ResourceName: string): NiagaraEmitterProperties;
-	static GetDefaultObject(): NiagaraEmitterProperties;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraEmitterProperties;
-	static C(Other: UObject | any): NiagaraEmitterProperties;
-}
-
-declare class NiagaraEmitterHandle { 
-	Id: Guid;
-	IdName: string;
-	bIsEnabled: boolean;
-	Name: string;
-	Source: NiagaraEmitterProperties;
-	Instance: NiagaraEmitterProperties;
-	clone() : NiagaraEmitterHandle;
-	static C(Other: UObject | any): NiagaraEmitterHandle;
-}
-
-declare class NiagaraParameterBinding { 
-	SourceParameterId: Guid;
-	DestinationEmitterId: Guid;
-	DestinationParameterId: Guid;
-	clone() : NiagaraParameterBinding;
-	static C(Other: UObject | any): NiagaraParameterBinding;
-}
-
-declare class NiagaraEmitterInternalVariableBinding { 
-	SourceParameterId: Guid;
-	DestinationEmitterId: Guid;
-	DestinationEmitterVariableName: string;
-	clone() : NiagaraEmitterInternalVariableBinding;
-	static C(Other: UObject | any): NiagaraEmitterInternalVariableBinding;
-}
-
-declare class NiagaraComponent extends PrimitiveComponent { 
-	Asset: NiagaraEffect;
-	EffectParameterLocalOverrides: NiagaraVariable[];
-	EffectDataInterfaceLocalOverrides: NiagaraScriptDataInterfaceInfo[];
-	EditorTemporaries: NiagaraDataInterface[];
-	InstanceDataInterfaces: NiagaraDataInterface[];
-	bRenderingEnabled: boolean;
-	static Load(ResourceName: string): NiagaraComponent;
-	static Find(Outer: UObject, ResourceName: string): NiagaraComponent;
-	static GetDefaultObject(): NiagaraComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraComponent;
-	SetRenderingEnabled(bInRenderingEnabled: boolean): void;
-	SetNiagaraVariableVec4(InVariableName: string,InValue: Vector4): void;
-	SetNiagaraVariableVec3(InVariableName: string,InValue: Vector): void;
-	SetNiagaraVariableVec2(InVariableName: string,InValue: Vector2D): void;
-	SetNiagaraVariableFloat(InVariableName: string,InValue: number): void;
-	SetNiagaraVariableBool(InVariableName: string,InValue: boolean): void;
-	SetNiagaraStaticMeshDataInterfaceActor(InVariableName: string,InSource: Actor): void;
-	SetNiagaraEmitterSpawnRate(InEmitterName: string,InValue: number): void;
-	ResetEffect(): void;
-	ReinitializeEffect(): void;
-	static C(Other: UObject | any): NiagaraComponent;
-}
-
-declare class NiagaraEffect extends UObject { 
-	EmitterHandles: NiagaraEmitterHandle[];
-	EffectScript: NiagaraScript;
-	ParameterBindings: NiagaraParameterBinding[];
-	DataInterfaceBindings: NiagaraParameterBinding[];
-	InternalEmitterVariableBindings: NiagaraEmitterInternalVariableBinding[];
-	bAutoImportChangedEmitters: boolean;
-	static Load(ResourceName: string): NiagaraEffect;
-	static Find(Outer: UObject, ResourceName: string): NiagaraEffect;
-	static GetDefaultObject(): NiagaraEffect;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraEffect;
-	static C(Other: UObject | any): NiagaraEffect;
-	SpawnEffectAttached(AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,LocationType: EAttachLocation,bAutoDestroy: boolean): NiagaraComponent;
-	static SpawnEffectAttached(EffectTemplate: NiagaraEffect,AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,LocationType: EAttachLocation,bAutoDestroy: boolean): NiagaraComponent;
+	static GetDefaultScreenshotOptionsForGameplay(Tolerance: EComparisonTolerance,Delay: number): AutomationScreenshotOptions;
+	static GetDefaultScreenshotOptionsForRendering(Tolerance: EComparisonTolerance,Delay: number): AutomationScreenshotOptions;
 }
 
 declare class DebugFloatHistory { 
@@ -11512,11 +12393,11 @@ declare class TimerHandle {
 	K2_IsValidTimerHandle(): boolean;
 	static K2_InvalidateTimerHandle(Handle?: TimerHandle): {Handle: TimerHandle, $: TimerHandle};
 	static K2_IsValidTimerHandle(Handle: TimerHandle): boolean;
-	static K2_SetTimerDelegate(Delegate: UnrealEngineDelegate<() => void>,Time: number,bLooping: boolean): TimerHandle;
+	static K2_SetTimerDelegate(delegate: UnrealEngineDelegate<() => void>,Time: number,bLooping: boolean): TimerHandle;
 }
 
-declare type EQuitPreference = 'Quit' | 'Background';
-declare var EQuitPreference : { Quit:'Quit',Background:'Background', };
+declare type EQuitPreference = 'Quit' | 'Background' | 'EQuitPreference_MAX';
+declare var EQuitPreference : { Quit:'Quit',Background:'Background',EQuitPreference_MAX:'EQuitPreference_MAX', };
 declare class TextureRenderTarget extends Texture { 
 	TargetGamma: number;
 	static Load(ResourceName: string): TextureRenderTarget;
@@ -11526,10 +12407,10 @@ declare class TextureRenderTarget extends Texture {
 	static C(Other: UObject | any): TextureRenderTarget;
 }
 
-declare type ETextureRenderTargetFormat = 'RTF_R8' | 'RTF_RG8' | 'RTF_RGBA8' | 'RTF_R16f' | 'RTF_RG16f' | 'RTF_RGBA16f' | 'RTF_R32f' | 'RTF_RG32f' | 'RTF_RGBA32f';
-declare var ETextureRenderTargetFormat : { RTF_R8:'RTF_R8',RTF_RG8:'RTF_RG8',RTF_RGBA8:'RTF_RGBA8',RTF_R16f:'RTF_R16f',RTF_RG16f:'RTF_RG16f',RTF_RGBA16f:'RTF_RGBA16f',RTF_R32f:'RTF_R32f',RTF_RG32f:'RTF_RG32f',RTF_RGBA32f:'RTF_RGBA32f', };
-declare type EPixelFormat = 'PF_Unknown' | 'PF_A32B32G32R32F' | 'PF_B8G8R8A8' | 'PF_G8' | 'PF_G16' | 'PF_DXT1' | 'PF_DXT3' | 'PF_DXT5' | 'PF_UYVY' | 'PF_FloatRGB' | 'PF_FloatRGBA' | 'PF_DepthStencil' | 'PF_ShadowDepth' | 'PF_R32_FLOAT' | 'PF_G16R16' | 'PF_G16R16F' | 'PF_G16R16F_FILTER' | 'PF_G32R32F' | 'PF_A2B10G10R10' | 'PF_A16B16G16R16' | 'PF_D24' | 'PF_R16F' | 'PF_R16F_FILTER' | 'PF_BC5' | 'PF_V8U8' | 'PF_A1' | 'PF_FloatR11G11B10' | 'PF_A8' | 'PF_R32_UINT' | 'PF_R32_SINT' | 'PF_PVRTC2' | 'PF_PVRTC4' | 'PF_R16_UINT' | 'PF_R16_SINT' | 'PF_R16G16B16A16_UINT' | 'PF_R16G16B16A16_SINT' | 'PF_R5G6B5_UNORM' | 'PF_R8G8B8A8' | 'PF_A8R8G8B8' | 'PF_BC4' | 'PF_R8G8' | 'PF_ATC_RGB' | 'PF_ATC_RGBA_E' | 'PF_ATC_RGBA_I' | 'PF_X24_G8' | 'PF_ETC1' | 'PF_ETC2_RGB' | 'PF_ETC2_RGBA' | 'PF_R32G32B32A32_UINT' | 'PF_R16G16_UINT' | 'PF_ASTC_4x4' | 'PF_ASTC_6x6' | 'PF_ASTC_8x8' | 'PF_ASTC_10x10' | 'PF_ASTC_12x12' | 'PF_BC6H' | 'PF_BC7' | 'PF_R8_UINT' | 'PF_L8';
-declare var EPixelFormat : { PF_Unknown:'PF_Unknown',PF_A32B32G32R32F:'PF_A32B32G32R32F',PF_B8G8R8A8:'PF_B8G8R8A8',PF_G8:'PF_G8',PF_G16:'PF_G16',PF_DXT1:'PF_DXT1',PF_DXT3:'PF_DXT3',PF_DXT5:'PF_DXT5',PF_UYVY:'PF_UYVY',PF_FloatRGB:'PF_FloatRGB',PF_FloatRGBA:'PF_FloatRGBA',PF_DepthStencil:'PF_DepthStencil',PF_ShadowDepth:'PF_ShadowDepth',PF_R32_FLOAT:'PF_R32_FLOAT',PF_G16R16:'PF_G16R16',PF_G16R16F:'PF_G16R16F',PF_G16R16F_FILTER:'PF_G16R16F_FILTER',PF_G32R32F:'PF_G32R32F',PF_A2B10G10R10:'PF_A2B10G10R10',PF_A16B16G16R16:'PF_A16B16G16R16',PF_D24:'PF_D24',PF_R16F:'PF_R16F',PF_R16F_FILTER:'PF_R16F_FILTER',PF_BC5:'PF_BC5',PF_V8U8:'PF_V8U8',PF_A1:'PF_A1',PF_FloatR11G11B10:'PF_FloatR11G11B10',PF_A8:'PF_A8',PF_R32_UINT:'PF_R32_UINT',PF_R32_SINT:'PF_R32_SINT',PF_PVRTC2:'PF_PVRTC2',PF_PVRTC4:'PF_PVRTC4',PF_R16_UINT:'PF_R16_UINT',PF_R16_SINT:'PF_R16_SINT',PF_R16G16B16A16_UINT:'PF_R16G16B16A16_UINT',PF_R16G16B16A16_SINT:'PF_R16G16B16A16_SINT',PF_R5G6B5_UNORM:'PF_R5G6B5_UNORM',PF_R8G8B8A8:'PF_R8G8B8A8',PF_A8R8G8B8:'PF_A8R8G8B8',PF_BC4:'PF_BC4',PF_R8G8:'PF_R8G8',PF_ATC_RGB:'PF_ATC_RGB',PF_ATC_RGBA_E:'PF_ATC_RGBA_E',PF_ATC_RGBA_I:'PF_ATC_RGBA_I',PF_X24_G8:'PF_X24_G8',PF_ETC1:'PF_ETC1',PF_ETC2_RGB:'PF_ETC2_RGB',PF_ETC2_RGBA:'PF_ETC2_RGBA',PF_R32G32B32A32_UINT:'PF_R32G32B32A32_UINT',PF_R16G16_UINT:'PF_R16G16_UINT',PF_ASTC_4x4:'PF_ASTC_4x4',PF_ASTC_6x6:'PF_ASTC_6x6',PF_ASTC_8x8:'PF_ASTC_8x8',PF_ASTC_10x10:'PF_ASTC_10x10',PF_ASTC_12x12:'PF_ASTC_12x12',PF_BC6H:'PF_BC6H',PF_BC7:'PF_BC7',PF_R8_UINT:'PF_R8_UINT',PF_L8:'PF_L8', };
+declare type ETextureRenderTargetFormat = 'RTF_R8' | 'RTF_RG8' | 'RTF_RGBA8' | 'RTF_R16f' | 'RTF_RG16f' | 'RTF_RGBA16f' | 'RTF_R32f' | 'RTF_RG32f' | 'RTF_RGBA32f' | 'RTF_RGB10A2' | 'RTF_MAX';
+declare var ETextureRenderTargetFormat : { RTF_R8:'RTF_R8',RTF_RG8:'RTF_RG8',RTF_RGBA8:'RTF_RGBA8',RTF_R16f:'RTF_R16f',RTF_RG16f:'RTF_RG16f',RTF_RGBA16f:'RTF_RGBA16f',RTF_R32f:'RTF_R32f',RTF_RG32f:'RTF_RG32f',RTF_RGBA32f:'RTF_RGBA32f',RTF_RGB10A2:'RTF_RGB10A2',RTF_MAX:'RTF_MAX', };
+declare type EPixelFormat = 'PF_Unknown' | 'PF_A32B32G32R32F' | 'PF_B8G8R8A8' | 'PF_G8' | 'PF_G16' | 'PF_DXT1' | 'PF_DXT3' | 'PF_DXT5' | 'PF_UYVY' | 'PF_FloatRGB' | 'PF_FloatRGBA' | 'PF_DepthStencil' | 'PF_ShadowDepth' | 'PF_R32_FLOAT' | 'PF_G16R16' | 'PF_G16R16F' | 'PF_G16R16F_FILTER' | 'PF_G32R32F' | 'PF_A2B10G10R10' | 'PF_A16B16G16R16' | 'PF_D24' | 'PF_R16F' | 'PF_R16F_FILTER' | 'PF_BC5' | 'PF_V8U8' | 'PF_A1' | 'PF_FloatR11G11B10' | 'PF_A8' | 'PF_R32_UINT' | 'PF_R32_SINT' | 'PF_PVRTC2' | 'PF_PVRTC4' | 'PF_R16_UINT' | 'PF_R16_SINT' | 'PF_R16G16B16A16_UINT' | 'PF_R16G16B16A16_SINT' | 'PF_R5G6B5_UNORM' | 'PF_R8G8B8A8' | 'PF_A8R8G8B8' | 'PF_BC4' | 'PF_R8G8' | 'PF_ATC_RGB' | 'PF_ATC_RGBA_E' | 'PF_ATC_RGBA_I' | 'PF_X24_G8' | 'PF_ETC1' | 'PF_ETC2_RGB' | 'PF_ETC2_RGBA' | 'PF_R32G32B32A32_UINT' | 'PF_R16G16_UINT' | 'PF_ASTC_4x4' | 'PF_ASTC_6x6' | 'PF_ASTC_8x8' | 'PF_ASTC_10x10' | 'PF_ASTC_12x12' | 'PF_BC6H' | 'PF_BC7' | 'PF_R8_UINT' | 'PF_L8' | 'PF_XGXR8' | 'PF_R8G8B8A8_UINT' | 'PF_R8G8B8A8_SNORM' | 'PF_R16G16B16A16_UNORM' | 'PF_R16G16B16A16_SNORM' | 'PF_MAX';
+declare var EPixelFormat : { PF_Unknown:'PF_Unknown',PF_A32B32G32R32F:'PF_A32B32G32R32F',PF_B8G8R8A8:'PF_B8G8R8A8',PF_G8:'PF_G8',PF_G16:'PF_G16',PF_DXT1:'PF_DXT1',PF_DXT3:'PF_DXT3',PF_DXT5:'PF_DXT5',PF_UYVY:'PF_UYVY',PF_FloatRGB:'PF_FloatRGB',PF_FloatRGBA:'PF_FloatRGBA',PF_DepthStencil:'PF_DepthStencil',PF_ShadowDepth:'PF_ShadowDepth',PF_R32_FLOAT:'PF_R32_FLOAT',PF_G16R16:'PF_G16R16',PF_G16R16F:'PF_G16R16F',PF_G16R16F_FILTER:'PF_G16R16F_FILTER',PF_G32R32F:'PF_G32R32F',PF_A2B10G10R10:'PF_A2B10G10R10',PF_A16B16G16R16:'PF_A16B16G16R16',PF_D24:'PF_D24',PF_R16F:'PF_R16F',PF_R16F_FILTER:'PF_R16F_FILTER',PF_BC5:'PF_BC5',PF_V8U8:'PF_V8U8',PF_A1:'PF_A1',PF_FloatR11G11B10:'PF_FloatR11G11B10',PF_A8:'PF_A8',PF_R32_UINT:'PF_R32_UINT',PF_R32_SINT:'PF_R32_SINT',PF_PVRTC2:'PF_PVRTC2',PF_PVRTC4:'PF_PVRTC4',PF_R16_UINT:'PF_R16_UINT',PF_R16_SINT:'PF_R16_SINT',PF_R16G16B16A16_UINT:'PF_R16G16B16A16_UINT',PF_R16G16B16A16_SINT:'PF_R16G16B16A16_SINT',PF_R5G6B5_UNORM:'PF_R5G6B5_UNORM',PF_R8G8B8A8:'PF_R8G8B8A8',PF_A8R8G8B8:'PF_A8R8G8B8',PF_BC4:'PF_BC4',PF_R8G8:'PF_R8G8',PF_ATC_RGB:'PF_ATC_RGB',PF_ATC_RGBA_E:'PF_ATC_RGBA_E',PF_ATC_RGBA_I:'PF_ATC_RGBA_I',PF_X24_G8:'PF_X24_G8',PF_ETC1:'PF_ETC1',PF_ETC2_RGB:'PF_ETC2_RGB',PF_ETC2_RGBA:'PF_ETC2_RGBA',PF_R32G32B32A32_UINT:'PF_R32G32B32A32_UINT',PF_R16G16_UINT:'PF_R16G16_UINT',PF_ASTC_4x4:'PF_ASTC_4x4',PF_ASTC_6x6:'PF_ASTC_6x6',PF_ASTC_8x8:'PF_ASTC_8x8',PF_ASTC_10x10:'PF_ASTC_10x10',PF_ASTC_12x12:'PF_ASTC_12x12',PF_BC6H:'PF_BC6H',PF_BC7:'PF_BC7',PF_R8_UINT:'PF_R8_UINT',PF_L8:'PF_L8',PF_XGXR8:'PF_XGXR8',PF_R8G8B8A8_UINT:'PF_R8G8B8A8_UINT',PF_R8G8B8A8_SNORM:'PF_R8G8B8A8_SNORM',PF_R16G16B16A16_UNORM:'PF_R16G16B16A16_UNORM',PF_R16G16B16A16_SNORM:'PF_R16G16B16A16_SNORM',PF_MAX:'PF_MAX', };
 declare class TextureRenderTarget2D extends TextureRenderTarget { 
 	SizeX: number;
 	SizeY: number;
@@ -11538,9 +12419,9 @@ declare class TextureRenderTarget2D extends TextureRenderTarget {
 	AddressY: TextureAddress;
 	bForceLinearGamma: boolean;
 	bHDR: boolean;
-	RenderTargetFormat: ETextureRenderTargetFormat;
 	bGPUSharedFlag: boolean;
 	bAutoGenerateMips: boolean;
+	RenderTargetFormat: ETextureRenderTargetFormat;
 	OverrideFormat: EPixelFormat;
 	static Load(ResourceName: string): TextureRenderTarget2D;
 	static Find(Outer: UObject, ResourceName: string): TextureRenderTarget2D;
@@ -11548,7 +12429,9 @@ declare class TextureRenderTarget2D extends TextureRenderTarget {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureRenderTarget2D;
 	static C(Other: UObject | any): TextureRenderTarget2D;
 	ReleaseRenderTarget2D(): void;
+	RenderTargetCreateStaticTexture2DEditorOnly(Name: string,CompressionSettings: TextureCompressionSettings,MipSettings: TextureMipGenSettings): Texture2D;
 	static ReleaseRenderTarget2D(TextureRenderTarget: TextureRenderTarget2D): void;
+	static RenderTargetCreateStaticTexture2DEditorOnly(RenderTarget: TextureRenderTarget2D,Name: string,CompressionSettings: TextureCompressionSettings,MipSettings: TextureMipGenSettings): Texture2D;
 }
 
 declare class DrawToRenderTargetContext { 
@@ -11592,12 +12475,12 @@ declare class PredictProjectilePathResult {
 	static C(Other: UObject | any): PredictProjectilePathResult;
 }
 
-declare type ESuggestProjVelocityTraceOption = 'DoNotTrace' | 'TraceFullPath' | 'OnlyTraceWhileAscending';
-declare var ESuggestProjVelocityTraceOption : { DoNotTrace:'DoNotTrace',TraceFullPath:'TraceFullPath',OnlyTraceWhileAscending:'OnlyTraceWhileAscending', };
-declare type EGrammaticalGender = 'Neuter' | 'Masculine' | 'Feminine' | 'Mixed';
-declare var EGrammaticalGender : { Neuter:'Neuter',Masculine:'Masculine',Feminine:'Feminine',Mixed:'Mixed', };
-declare type EGrammaticalNumber = 'Singular' | 'Plural';
-declare var EGrammaticalNumber : { Singular:'Singular',Plural:'Plural', };
+declare type ESuggestProjVelocityTraceOption = 'DoNotTrace' | 'TraceFullPath' | 'OnlyTraceWhileAscending' | 'ESuggestProjVelocityTraceOption_MAX';
+declare var ESuggestProjVelocityTraceOption : { DoNotTrace:'DoNotTrace',TraceFullPath:'TraceFullPath',OnlyTraceWhileAscending:'OnlyTraceWhileAscending',ESuggestProjVelocityTraceOption_MAX:'ESuggestProjVelocityTraceOption_MAX', };
+declare type EGrammaticalGender = 'Neuter' | 'Masculine' | 'Feminine' | 'Mixed' | 'EGrammaticalGender_MAX';
+declare var EGrammaticalGender : { Neuter:'Neuter',Masculine:'Masculine',Feminine:'Feminine',Mixed:'Mixed',EGrammaticalGender_MAX:'EGrammaticalGender_MAX', };
+declare type EGrammaticalNumber = 'Singular' | 'Plural' | 'EGrammaticalNumber_MAX';
+declare var EGrammaticalNumber : { Singular:'Singular',Plural:'Plural',EGrammaticalNumber_MAX:'EGrammaticalNumber_MAX', };
 declare class DialogueVoice extends UObject { 
 	Gender: EGrammaticalGender;
 	Plurality: EGrammaticalNumber;
@@ -11675,13 +12558,14 @@ declare class World extends UObject {
 	ExtraReferencedObjects: UObject[];
 	PerModuleDataObjects: UObject[];
 	StreamingLevels: LevelStreaming[];
+	StreamingLevelsToConsider: any;
 	StreamingLevelsPrefix: string;
 	CurrentLevelPendingVisibility: Level;
 	CurrentLevelPendingInvisibility: Level;
 	DemoNetDriver: DemoNetDriver;
 	MyParticleEventManager: ParticleEventManager;
 	DefaultPhysicsVolume: PhysicsVolume;
-	NavigationSystem: NavigationSystem;
+	NavigationSystem: NavigationSystemBase;
 	AuthorityGameMode: GameModeBase;
 	GameState: GameStateBase;
 	AISystem: AISystemBase;
@@ -11697,16 +12581,19 @@ declare class World extends UObject {
 	SelectedLevels: Level[];
 	WorldComposition: WorldComposition;
 	bAreConstraintsDirty: boolean;
+	PSCPool: WorldPSCPool;
 	static Load(ResourceName: string): World;
 	static Find(Outer: UObject, ResourceName: string): World;
 	static GetDefaultObject(): World;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): World;
+	HandleTimelineScrubbed(): void;
 	static C(Other: UObject | any): World;
 	EditorDestroyActor(Actor: Actor,bShouldModifyLevel: boolean): boolean;
 	ExportNavigation(Path: string): string;
 	GetDefaultBrush(): Brush;
 	InvalidateModelGeometry(InLevel: Level): void;
 	RemoveLevelInstance(): void;
+	GetActors(ActorLayer: ActorLayer): Actor[];
 	BeginPlay(): void;
 	DestroyWorld(): void;
 	InitializeActorsForPlay(URL: URL): void;
@@ -11714,40 +12601,30 @@ declare class World extends UObject {
 	GetAllActorsOfClassAndTags(ActorClass: UnrealEngineClass,Tags_Accept: string[],Tags_Deny: string[],OutActors?: Actor[]): {OutActors: Actor[]};
 	GetLevels(): Level[];
 	GetModel(): Model;
+	GetWorldBounds(): Box;
 	IsGameWorld(): boolean;
 	IsPlayInEditor(): boolean;
 	IsPlayInPreview(): boolean;
 	TraceChannelTestUtil(BatchOptions: TraceChannelTestBatchOptions,Start: Vector,End: Vector,SphereCapsuleRadius: number,CapsuleHalfHeight: number,BoxHalfSize: Vector,Orientation: Rotator,TraceChannel: ETraceTypeQuery,ObjectTypes: EObjectTypeQuery[],ProfileName: string,bTraceComplex: boolean,ActorsToIgnore: Actor[],bIgnoreSelf: boolean,DrawDebugType: EDrawDebugTrace,TraceColor: LinearColor,TraceHitColor: LinearColor,DrawTime: number): TraceQueryTestResults;
-	RunAllFunctionalTests(bNewLog: boolean,bRunLooped: boolean,bWaitForNavigationBuildFinish: boolean,FailedTestsReproString: string): boolean;
+	RunAllFunctionalTests(bNewLog: boolean,bRunLooped: boolean,FailedTestsReproString: string): boolean;
 	DisableStatGroup(GroupName: string): void;
 	EnableStatGroup(GroupName: string): void;
-	TakeAutomationScreenshot(LatentInfo: LatentActionInfo,Name: string,Options: AutomationScreenshotOptions): void;
-	TakeAutomationScreenshotAtCamera(LatentInfo: LatentActionInfo,Camera: CameraActor,NameOverride: string,Options: AutomationScreenshotOptions): void;
+	SetScalabilityQualityLevelRelativeToMax(Value: number): void;
+	SetScalabilityQualityToEpic(): void;
+	SetScalabilityQualityToLow(): void;
+	TakeAutomationScreenshot(LatentInfo: LatentActionInfo,Name: string,Notes: string,Options: AutomationScreenshotOptions): void;
+	TakeAutomationScreenshotAtCamera(LatentInfo: LatentActionInfo,Camera: CameraActor,NameOverride: string,Notes: string,Options: AutomationScreenshotOptions): void;
 	TakeAutomationScreenshotOfUI(LatentInfo: LatentActionInfo,Name: string,Options: AutomationScreenshotOptions): void;
-	SpawnEffectAtLocation(EffectTemplate: NiagaraEffect,Location: Vector,Rotation: Rotator,bAutoDestroy: boolean): NiagaraComponent;
 	GetIsMyTurn(PlayerController: PlayerController,MatchID: string,bIsMyTurn?: boolean): {bIsMyTurn: boolean};
 	GetMyPlayerIndex(PlayerController: PlayerController,MatchID: string,PlayerIndex?: number): {PlayerIndex: number};
 	GetPlayerDisplayName(PlayerController: PlayerController,MatchID: string,PlayerIndex: number,PlayerDisplayName?: string): {PlayerDisplayName: string};
 	RegisterTurnBasedMatchInterfaceObject(PlayerController: PlayerController,UObject: UObject): void;
 	GetCachedAchievementDescription(PlayerController: PlayerController,AchievementID: string,bFoundID?: boolean,Title?: string,LockedDescription?: string,UnlockedDescription?: string,bHidden?: boolean): {bFoundID: boolean, Title: string, LockedDescription: string, UnlockedDescription: string, bHidden: boolean};
 	GetCachedAchievementProgress(PlayerController: PlayerController,AchievementID: string,bFoundID?: boolean,Progress?: number): {bFoundID: boolean, Progress: number};
-	LogBox(BoxShape: Box,Text: string,ObjectColor: LinearColor,LogCategory: string): void;
-	LogLocation(Location: Vector,Text: string,ObjectColor: LinearColor,Radius: number,LogCategory: string): void;
-	LogText(Text: string,LogCategory: string): void;
-	FindPathToActorSynchronously(PathStart: Vector,GoalActor: Actor,TetherDistance: number,PathfindingContext: Actor,FilterClass: UnrealEngineClass): NavigationPath;
-	FindPathToLocationSynchronously(PathStart: Vector,PathEnd: Vector,PathfindingContext: Actor,FilterClass: UnrealEngineClass): NavigationPath;
-	GetNavigationSystem(): NavigationSystem;
-	GetPathCost(PathStart: Vector,PathEnd: Vector,PathCost?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {PathCost: number, $: ENavigationQueryResult};
-	GetPathLength(PathStart: Vector,PathEnd: Vector,PathLength?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {PathLength: number, $: ENavigationQueryResult};
-	GetRandomPointInNavigableRadius(Origin: Vector,Radius: number,NavData: NavigationData,FilterClass: UnrealEngineClass): Vector;
-	GetRandomReachablePointInRadius(Origin: Vector,Radius: number,NavData: NavigationData,FilterClass: UnrealEngineClass): Vector;
-	IsNavigationBeingBuilt(): boolean;
-	IsNavigationBeingBuiltOrLocked(): boolean;
-	K2_GetRandomPointInNavigableRadius(Origin: Vector,RandomLocation?: Vector,Radius?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {RandomLocation: Vector, $: boolean};
-	K2_GetRandomReachablePointInRadius(Origin: Vector,RandomLocation?: Vector,Radius?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {RandomLocation: Vector, $: boolean};
-	K2_ProjectPointToNavigation(Point: Vector,ProjectedLocation?: Vector,NavData?: NavigationData,FilterClass?: UnrealEngineClass,QueryExtent?: Vector): {ProjectedLocation: Vector, $: boolean};
-	NavigationRaycast(RayStart: Vector,RayEnd: Vector,HitLocation?: Vector,FilterClass?: UnrealEngineClass,Querier?: Controller): {HitLocation: Vector, $: boolean};
-	ProjectPointToNavigation(Point: Vector,NavData: NavigationData,FilterClass: UnrealEngineClass,QueryExtent: Vector): Vector;
+	LogBox(BoxShape: Box,text: string,ObjectColor: LinearColor,LogCategory: string,bAddToMessageLog: boolean): void;
+	LogLocation(Location: Vector,text: string,ObjectColor: LinearColor,Radius: number,LogCategory: string,bAddToMessageLog: boolean): void;
+	LogSegment(SegmentStart: Vector,SegmentEnd: Vector,text: string,ObjectColor: LinearColor,Thickness: number,CategoryName: string,bAddToMessageLog: boolean): void;
+	LogText(text: string,LogCategory: string,bAddToMessageLog: boolean): void;
 	BoxOverlapActors(BoxPos: Vector,BoxExtent: Vector,ObjectTypes: EObjectTypeQuery[],ActorClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutActors?: Actor[]): {OutActors: Actor[], $: boolean};
 	BoxOverlapComponents(BoxPos: Vector,Extent: Vector,ObjectTypes: EObjectTypeQuery[],ComponentClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutComponents?: PrimitiveComponent[]): {OutComponents: PrimitiveComponent[], $: boolean};
 	BoxTraceMulti(Start: Vector,End: Vector,HalfSize: Vector,Orientation: Rotator,TraceChannel: ETraceTypeQuery,bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHits?: HitResult[],bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHits: HitResult[], $: boolean};
@@ -11780,10 +12657,12 @@ declare class World extends UObject {
 	DrawDebugPlane(PlaneCoordinates: Plane,Location: Vector,Size: number,PlaneColor: LinearColor,Duration: number): void;
 	DrawDebugPoint(Position: Vector,Size: number,PointColor: LinearColor,Duration: number): void;
 	DrawDebugSphere(Center: Vector,Radius: number,Segments: number,LineColor: LinearColor,Duration: number,Thickness: number): void;
-	DrawDebugString(TextLocation: Vector,Text: string,TestBaseActor: Actor,TextColor: LinearColor,Duration: number): void;
+	DrawDebugString(TextLocation: Vector,text: string,TestBaseActor: Actor,TextColor: LinearColor,Duration: number): void;
 	ExecuteConsoleCommand(Command: string,SpecificPlayer: PlayerController): void;
 	FlushDebugStrings(): void;
 	FlushPersistentDebugLines(): void;
+	GetConsoleVariableFloatValue(VariableName: string): number;
+	GetConsoleVariableIntValue(VariableName: string): number;
 	GetGameTimeInSeconds(): number;
 	IsDedicatedServer(): boolean;
 	IsServer(): boolean;
@@ -11803,11 +12682,11 @@ declare class World extends UObject {
 	LineTraceSingle(Start: Vector,End: Vector,TraceChannel: ETraceTypeQuery,bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHit?: HitResult,bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHit: HitResult, $: boolean};
 	LineTraceSingleByProfile(Start: Vector,End: Vector,ProfileName: string,bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHit?: HitResult,bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHit: HitResult, $: boolean};
 	LineTraceSingleForObjects(Start: Vector,End: Vector,ObjectTypes: EObjectTypeQuery[],bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHit?: HitResult,bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHit: HitResult, $: boolean};
-	LoadAsset(Asset: any,OnLoaded: UnrealEngineDelegate<(Loaded: UObject) => void>,LatentInfo: LatentActionInfo): void;
-	LoadAssetClass(AssetClass: any,OnLoaded: UnrealEngineDelegate<(Loaded: UnrealEngineClass) => void>,LatentInfo: LatentActionInfo): void;
-	PrintString(InString: string,bPrintToScreen: boolean,bPrintToLog: boolean,TextColor: LinearColor,Duration: number): void;
+	LoadAsset(Asset: UObject,OnLoaded: UnrealEngineDelegate<(Loaded: UObject) => void>,LatentInfo: LatentActionInfo): void;
+	LoadAssetClass(AssetClass: Class,OnLoaded: UnrealEngineDelegate<(Loaded: UnrealEngineClass) => void>,LatentInfo: LatentActionInfo): void;
+	PrintString(inString: string,bPrintToScreen: boolean,bPrintToLog: boolean,TextColor: LinearColor,Duration: number): void;
 	PrintText(InText: string,bPrintToScreen: boolean,bPrintToLog: boolean,TextColor: LinearColor,Duration: number): void;
-	QuitGame(SpecificPlayer: PlayerController,QuitPreference: EQuitPreference): void;
+	QuitGame(SpecificPlayer: PlayerController,QuitPreference: EQuitPreference,bIgnorePlatformRestrictions: boolean): void;
 	RetriggerableDelay(Duration: number,LatentInfo: LatentActionInfo): void;
 	SetSuppressViewportTransitionMessage(bState: boolean): void;
 	SphereOverlapActors(SpherePos: Vector,SphereRadius: number,ObjectTypes: EObjectTypeQuery[],ActorClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutActors?: Actor[]): {OutActors: Actor[], $: boolean};
@@ -11821,13 +12700,19 @@ declare class World extends UObject {
 	BeginDrawCanvasToRenderTarget(TextureRenderTarget: TextureRenderTarget2D,Canvas?: Canvas,Size?: Vector2D,Context?: DrawToRenderTargetContext): {Canvas: Canvas, Size: Vector2D, Context: DrawToRenderTargetContext};
 	ClearRenderTarget2D(TextureRenderTarget: TextureRenderTarget2D,ClearColor: LinearColor): void;
 	ConvertRenderTargetToTexture2DEditorOnly(RenderTarget: TextureRenderTarget2D,Texture: Texture2D): void;
-	CreateRenderTarget2D(Width: number,Height: number): TextureRenderTarget2D;
+	CreateRenderTarget2D(Width: number,Height: number,Format: ETextureRenderTargetFormat): TextureRenderTarget2D;
 	DrawMaterialToRenderTarget(TextureRenderTarget: TextureRenderTarget2D,Material: MaterialInterface): void;
 	EndDrawCanvasToRenderTarget(Context: DrawToRenderTargetContext): void;
-	ExportRenderTarget(TextureRenderTarget: TextureRenderTarget2D,FilePath: string,FileName: string): void;
-	ExportTexture2D(Texture: Texture2D,FilePath: string,FileName: string): void;
+	ExportRenderTarget(TextureRenderTarget: TextureRenderTarget2D,FilePath: string,Filename: string): void;
+	ExportTexture2D(Texture: Texture2D,FilePath: string,Filename: string): void;
+	ImportBufferAsTexture2D(Buffer: number[]): Texture2D;
+	ImportFileAsTexture2D(Filename: string): Texture2D;
+	ReadRenderTargetPixel(TextureRenderTarget: TextureRenderTarget2D,X: number,Y: number): Color;
+	ReadRenderTargetRawPixel(TextureRenderTarget: TextureRenderTarget2D,X: number,Y: number): LinearColor;
+	ReadRenderTargetRawUV(TextureRenderTarget: TextureRenderTarget2D,U: number,V: number): LinearColor;
+	ReadRenderTargetUV(TextureRenderTarget: TextureRenderTarget2D,U: number,V: number): Color;
 	MinimumAreaRectangle(InVerts: Vector[],SampleSurfaceNormal: Vector,OutRectCenter?: Vector,OutRectRotation?: Rotator,OutSideLengthX?: number,OutSideLengthY?: number,bDebugDraw?: boolean): {OutRectCenter: Vector, OutRectRotation: Rotator, OutSideLengthX: number, OutSideLengthY: number};
-	CreateDynamicMaterialInstance(Parent: MaterialInterface): MaterialInstanceDynamic;
+	CreateDynamicMaterialInstance(Parent: MaterialInterface,OptionalName: string): MaterialInstanceDynamic;
 	GetScalarParameterValue(Collection: MaterialParameterCollection,ParameterName: string): number;
 	GetVectorParameterValue(Collection: MaterialParameterCollection,ParameterName: string): LinearColor;
 	SetScalarParameterValue(Collection: MaterialParameterCollection,ParameterName: string,ParameterValue: number): void;
@@ -11836,7 +12721,7 @@ declare class World extends UObject {
 	ApplyRadialDamage(BaseDamage: number,Origin: Vector,DamageRadius: number,DamageTypeClass: UnrealEngineClass,IgnoreActors: Actor[],DamageCauser: Actor,InstigatedByController: Controller,bDoFullDamage: boolean,DamagePreventionChannel: ECollisionChannel): boolean;
 	ApplyRadialDamageWithFalloff(BaseDamage: number,MinimumDamage: number,Origin: Vector,DamageInnerRadius: number,DamageOuterRadius: number,DamageFalloff: number,DamageTypeClass: UnrealEngineClass,IgnoreActors: Actor[],DamageCauser: Actor,InstigatedByController: Controller,DamagePreventionChannel: ECollisionChannel): boolean;
 	AreAnyListenersWithinRange(Location: Vector,MaximumRange: number): boolean;
-	BeginDeferredActorSpawnFromClass(ActorClass: UnrealEngineClass,SpawnTransform: Transform,CollisionHandlingOverride: CollisionHandlingOverride,Owner: Actor): Actor;
+	BeginDeferredActorSpawnFromClass(ActorClass: UnrealEngineClass,SpawnTransform: Transform,CollisionHandlingOverride: ESpawnActorCollisionHandlingMethod,Owner: Actor): Actor;
 	BeginSpawningActorFromBlueprint(Blueprint: Blueprint,SpawnTransform: Transform,bNoCollisionFail: boolean): Actor;
 	BeginSpawningActorFromClass(ActorClass: UnrealEngineClass,SpawnTransform: Transform,bNoCollisionFail: boolean,Owner: Actor): Actor;
 	Blueprint_PredictProjectilePath_Advanced(PredictParams: PredictProjectilePathParams,PredictResult?: PredictProjectilePathResult): {PredictResult: PredictProjectilePathResult, $: boolean};
@@ -11856,6 +12741,7 @@ declare class World extends UObject {
 	GetAudioTimeSeconds(): number;
 	GetCurrentLevelName(bRemovePrefixString: boolean): string;
 	GetCurrentReverbEffect(): ReverbEffect;
+	GetEnableWorldRendering(): boolean;
 	GetGameInstance(): GameInstance;
 	GetGameMode(): GameModeBase;
 	GetGameState(): GameStateBase;
@@ -11876,14 +12762,15 @@ declare class World extends UObject {
 	OpenLevel(LevelName: string,bAbsolute: boolean,Options: string): void;
 	PlayDialogue2D(Dialogue: DialogueWave,Context: DialogueContext,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number): void;
 	PlayDialogueAtLocation(Dialogue: DialogueWave,Context: DialogueContext,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation): void;
-	PlaySound2D(Sound: SoundBase,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,ConcurrencySettings: SoundConcurrency): void;
-	PlaySoundAtLocation(Sound: SoundBase,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,ConcurrencySettings: SoundConcurrency): void;
+	PlaySound2D(Sound: SoundBase,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,ConcurrencySettings: SoundConcurrency,OwningActor: Actor): void;
+	PlaySoundAtLocation(Sound: SoundBase,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,ConcurrencySettings: SoundConcurrency,OwningActor: Actor): void;
 	PlayWorldCameraShake(Shake: UnrealEngineClass,Epicenter: Vector,InnerRadius: number,OuterRadius: number,Falloff: number,bOrientShakeTowardsEpicenter: boolean): void;
 	PopSoundMixModifier(InSoundMixModifier: SoundMix): void;
 	PushSoundMixModifier(InSoundMixModifier: SoundMix): void;
 	RebaseLocalOriginOntoZero(WorldLocation: Vector): Vector;
 	RebaseZeroOriginOntoLocal(WorldLocation: Vector): Vector;
 	SetBaseSoundMix(InSoundMix: SoundMix): void;
+	SetEnableWorldRendering(bEnable: boolean): void;
 	SetGamePaused(bPaused: boolean): boolean;
 	SetGlobalListenerFocusParameters(FocusAzimuthScale: number,NonFocusAzimuthScale: number,FocusDistanceScale: number,NonFocusDistanceScale: number,FocusVolumeScale: number,NonFocusVolumeScale: number,FocusPriorityScale: number,NonFocusPriorityScale: number): void;
 	SetGlobalPitchModulation(PitchModulation: number,TimeSec: number): void;
@@ -11893,12 +12780,12 @@ declare class World extends UObject {
 	SpawnDecalAtLocation(DecalMaterial: MaterialInterface,DecalSize: Vector,Location: Vector,Rotation: Rotator,LifeSpan: number): DecalComponent;
 	SpawnDialogue2D(Dialogue: DialogueWave,Context: DialogueContext,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,bAutoDestroy: boolean): AudioComponent;
 	SpawnDialogueAtLocation(Dialogue: DialogueWave,Context: DialogueContext,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,bAutoDestroy: boolean): AudioComponent;
-	SpawnEmitterAtLocation(EmitterTemplate: ParticleSystem,Location: Vector,Rotation: Rotator,bAutoDestroy: boolean): ParticleSystemComponent;
+	SpawnEmitterAtLocation(EmitterTemplate: ParticleSystem,Location: Vector,Rotation: Rotator,Scale: Vector,bAutoDestroy: boolean,PoolingMethod: EPSCPoolMethod): ParticleSystemComponent;
 	SpawnForceFeedbackAtLocation(ForceFeedbackEffect: ForceFeedbackEffect,Location: Vector,Rotation: Rotator,bLooping: boolean,IntensityMultiplier: number,StartTime: number,AttenuationSettings: ForceFeedbackAttenuation,bAutoDestroy: boolean): ForceFeedbackComponent;
 	SpawnSound2D(Sound: SoundBase,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,ConcurrencySettings: SoundConcurrency,bPersistAcrossLevelTransition: boolean,bAutoDestroy: boolean): AudioComponent;
 	SpawnSoundAtLocation(Sound: SoundBase,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,ConcurrencySettings: SoundConcurrency,bAutoDestroy: boolean): AudioComponent;
 	SuggestProjectileVelocity_CustomArc(OutLaunchVelocity?: Vector,StartPos?: Vector,EndPos?: Vector,OverrideGravityZ?: number,ArcParam?: number): {OutLaunchVelocity: Vector, $: boolean};
-	UnloadStreamLevel(LevelName: string,LatentInfo: LatentActionInfo): void;
+	UnloadStreamLevel(LevelName: string,LatentInfo: LatentActionInfo,bShouldBlockOnUnload: boolean): void;
 	FoliageOverlappingBoxCount(StaticMesh: StaticMesh,Box: Box): number;
 	FoliageOverlappingSphereCount(StaticMesh: StaticMesh,CenterPosition: Vector,Radius: number): number;
 	GetMousePositionOnViewport(): Vector2D;
@@ -11909,7 +12796,7 @@ declare class World extends UObject {
 	Create(WidgetType: UnrealEngineClass,OwningPlayer: PlayerController): UserWidget;
 	GetAllWidgetsOfClass(FoundWidgets?: UserWidget[],WidgetClass?: UnrealEngineClass,TopLevelOnly?: boolean): {FoundWidgets: UserWidget[]};
 	GetAllWidgetsWithInterface(Interface: UnrealEngineClass,FoundWidgets?: UserWidget[],TopLevelOnly?: boolean): {FoundWidgets: UserWidget[]};
-	GetSafeZonePadding(SafePadding?: Vector2D,SafePaddingScale?: Vector2D,SpillOverPadding?: Vector2D): {SafePadding: Vector2D, SafePaddingScale: Vector2D, SpillOverPadding: Vector2D};
+	GetSafeZonePadding(SafePadding?: Vector4,SafePaddingScale?: Vector2D,SpillOverPadding?: Vector4): {SafePadding: Vector4, SafePaddingScale: Vector2D, SpillOverPadding: Vector4};
 	SetHardwareCursor(CursorShape: EMouseCursor,CursorName: string,HotSpot: Vector2D): boolean;
 	AbsoluteToViewport(AbsoluteDesktopCoordinate: Vector2D,PixelPosition?: Vector2D,ViewportPosition?: Vector2D): {PixelPosition: Vector2D, ViewportPosition: Vector2D};
 	LocalToViewport(Geometry: Geometry,LocalCoordinate: Vector2D,PixelPosition?: Vector2D,ViewportPosition?: Vector2D): {PixelPosition: Vector2D, ViewportPosition: Vector2D};
@@ -11920,12 +12807,18 @@ declare class World extends UObject {
 	AddSourceEffectToPresetChain(PresetChain: SoundEffectSourcePresetChain,Entry: SourceEffectChainEntry): void;
 	ClearMasterSubmixEffects(): void;
 	GetNumberOfEntriesInSourceEffectChain(PresetChain: SoundEffectSourcePresetChain): number;
+	PauseRecordingOutput(SubmixToPause: SoundSubmix): void;
 	RemoveMasterSubmixEffect(SubmixEffectPreset: SoundEffectSubmixPreset): void;
 	RemoveSourceEffectFromPresetChain(PresetChain: SoundEffectSourcePresetChain,EntryIndex: number): void;
+	ResumeRecordingOutput(SubmixToPause: SoundSubmix): void;
 	SetBypassSourceEffectChainEntry(PresetChain: SoundEffectSourcePresetChain,EntryIndex: number,bBypassed: boolean): void;
+	StartRecordingOutput(ExpectedDuration: number,SubmixToRecord: SoundSubmix): void;
+	StopRecordingOutput(ExportType: EAudioRecordingExportType,Name: string,Path: string,SubmixToRecord: SoundSubmix,ExistingSoundWaveToOverwrite: SoundWave): SoundWave;
 	CreateMoveToProxyObject(Pawn: Pawn,Destination: Vector,TargetActor: Actor,AcceptanceRadius: number,bStopOnOverlap: boolean): AIAsyncTaskBlueprintProxy;
 	SpawnAIFromClass(PawnClass: UnrealEngineClass,BehaviorTree: BehaviorTree,Location: Vector,Rotation: Rotator,bNoCollisionFail: boolean): Pawn;
 	GetAllActorsOfClassMatchingTagQuery(ActorClass: UnrealEngineClass,GameplayTagQuery: GameplayTagQuery,OutActors?: Actor[]): {OutActors: Actor[]};
+	GetDeviceWorldPose(XRDeviceId: XRDeviceId,bIsTracked?: boolean,Orientation?: Rotator,bHasPositionalTracking?: boolean,Position?: Vector): {bIsTracked: boolean, Orientation: Rotator, bHasPositionalTracking: boolean, Position: Vector};
+	GetTrackingToWorldTransform(): Transform;
 	GetWorldToMetersScale(): number;
 	SetWorldToMetersScale(NewScale: number): void;
 	static EditorDestroyActor(World: World,Actor: Actor,bShouldModifyLevel: boolean): boolean;
@@ -11933,47 +12826,38 @@ declare class World extends UObject {
 	static GetDefaultBrush(World: World): Brush;
 	static InvalidateModelGeometry(World: World,InLevel: Level): void;
 	static RemoveLevelInstance(World: World): void;
+	static GetActors(WorldContextObject: UObject,ActorLayer: ActorLayer): Actor[];
 	static BeginPlay(World: World): void;
 	static DestroyWorld(World: World): void;
 	static InitializeActorsForPlay(World: World,URL: URL): void;
-	static GenerateNavigation(world: World,NavData: RecastNavMesh): void;
+	static GenerateNavigation(InWorld: World,NavData: RecastNavMesh): void;
 	static GetAllActorsOfClassAndTags(WorldContextObject: UObject,ActorClass: UnrealEngineClass,Tags_Accept: string[],Tags_Deny: string[],OutActors?: Actor[]): {OutActors: Actor[]};
 	static GetLevels(World: World): Level[];
 	static GetModel(World: World): Model;
+	static GetWorldBounds(InWorld: World): Box;
 	static IsGameWorld(World: World): boolean;
 	static IsPlayInEditor(World: World): boolean;
 	static IsPlayInPreview(World: World): boolean;
 	static TraceChannelTestUtil(WorldContextObject: UObject,BatchOptions: TraceChannelTestBatchOptions,Start: Vector,End: Vector,SphereCapsuleRadius: number,CapsuleHalfHeight: number,BoxHalfSize: Vector,Orientation: Rotator,TraceChannel: ETraceTypeQuery,ObjectTypes: EObjectTypeQuery[],ProfileName: string,bTraceComplex: boolean,ActorsToIgnore: Actor[],bIgnoreSelf: boolean,DrawDebugType: EDrawDebugTrace,TraceColor: LinearColor,TraceHitColor: LinearColor,DrawTime: number): TraceQueryTestResults;
-	static RunAllFunctionalTests(WorldContextObject: UObject,bNewLog: boolean,bRunLooped: boolean,bWaitForNavigationBuildFinish: boolean,FailedTestsReproString: string): boolean;
+	static RunAllFunctionalTests(WorldContextObject: UObject,bNewLog: boolean,bRunLooped: boolean,FailedTestsReproString: string): boolean;
 	static DisableStatGroup(WorldContextObject: UObject,GroupName: string): void;
 	static EnableStatGroup(WorldContextObject: UObject,GroupName: string): void;
-	static TakeAutomationScreenshot(WorldContextObject: UObject,LatentInfo: LatentActionInfo,Name: string,Options: AutomationScreenshotOptions): void;
-	static TakeAutomationScreenshotAtCamera(WorldContextObject: UObject,LatentInfo: LatentActionInfo,Camera: CameraActor,NameOverride: string,Options: AutomationScreenshotOptions): void;
+	static SetScalabilityQualityLevelRelativeToMax(WorldContextObject: UObject,Value: number): void;
+	static SetScalabilityQualityToEpic(WorldContextObject: UObject): void;
+	static SetScalabilityQualityToLow(WorldContextObject: UObject): void;
+	static TakeAutomationScreenshot(WorldContextObject: UObject,LatentInfo: LatentActionInfo,Name: string,Notes: string,Options: AutomationScreenshotOptions): void;
+	static TakeAutomationScreenshotAtCamera(WorldContextObject: UObject,LatentInfo: LatentActionInfo,Camera: CameraActor,NameOverride: string,Notes: string,Options: AutomationScreenshotOptions): void;
 	static TakeAutomationScreenshotOfUI(WorldContextObject: UObject,LatentInfo: LatentActionInfo,Name: string,Options: AutomationScreenshotOptions): void;
-	static SpawnEffectAtLocation(WorldContextObject: UObject,EffectTemplate: NiagaraEffect,Location: Vector,Rotation: Rotator,bAutoDestroy: boolean): NiagaraComponent;
 	static GetIsMyTurn(WorldContextObject: UObject,PlayerController: PlayerController,MatchID: string,bIsMyTurn?: boolean): {bIsMyTurn: boolean};
 	static GetMyPlayerIndex(WorldContextObject: UObject,PlayerController: PlayerController,MatchID: string,PlayerIndex?: number): {PlayerIndex: number};
 	static GetPlayerDisplayName(WorldContextObject: UObject,PlayerController: PlayerController,MatchID: string,PlayerIndex: number,PlayerDisplayName?: string): {PlayerDisplayName: string};
 	static RegisterTurnBasedMatchInterfaceObject(WorldContextObject: UObject,PlayerController: PlayerController,UObject: UObject): void;
 	static GetCachedAchievementDescription(WorldContextObject: UObject,PlayerController: PlayerController,AchievementID: string,bFoundID?: boolean,Title?: string,LockedDescription?: string,UnlockedDescription?: string,bHidden?: boolean): {bFoundID: boolean, Title: string, LockedDescription: string, UnlockedDescription: string, bHidden: boolean};
 	static GetCachedAchievementProgress(WorldContextObject: UObject,PlayerController: PlayerController,AchievementID: string,bFoundID?: boolean,Progress?: number): {bFoundID: boolean, Progress: number};
-	static LogBox(WorldContextObject: UObject,BoxShape: Box,Text: string,ObjectColor: LinearColor,LogCategory: string): void;
-	static LogLocation(WorldContextObject: UObject,Location: Vector,Text: string,ObjectColor: LinearColor,Radius: number,LogCategory: string): void;
-	static LogText(WorldContextObject: UObject,Text: string,LogCategory: string): void;
-	static FindPathToActorSynchronously(WorldContextObject: UObject,PathStart: Vector,GoalActor: Actor,TetherDistance: number,PathfindingContext: Actor,FilterClass: UnrealEngineClass): NavigationPath;
-	static FindPathToLocationSynchronously(WorldContextObject: UObject,PathStart: Vector,PathEnd: Vector,PathfindingContext: Actor,FilterClass: UnrealEngineClass): NavigationPath;
-	static GetNavigationSystem(WorldContextObject: UObject): NavigationSystem;
-	static GetPathCost(WorldContextObject: UObject,PathStart: Vector,PathEnd: Vector,PathCost?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {PathCost: number, $: ENavigationQueryResult};
-	static GetPathLength(WorldContextObject: UObject,PathStart: Vector,PathEnd: Vector,PathLength?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {PathLength: number, $: ENavigationQueryResult};
-	static GetRandomPointInNavigableRadius(WorldContextObject: UObject,Origin: Vector,Radius: number,NavData: NavigationData,FilterClass: UnrealEngineClass): Vector;
-	static GetRandomReachablePointInRadius(WorldContextObject: UObject,Origin: Vector,Radius: number,NavData: NavigationData,FilterClass: UnrealEngineClass): Vector;
-	static IsNavigationBeingBuilt(WorldContextObject: UObject): boolean;
-	static IsNavigationBeingBuiltOrLocked(WorldContextObject: UObject): boolean;
-	static K2_GetRandomPointInNavigableRadius(WorldContextObject: UObject,Origin: Vector,RandomLocation?: Vector,Radius?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {RandomLocation: Vector, $: boolean};
-	static K2_GetRandomReachablePointInRadius(WorldContextObject: UObject,Origin: Vector,RandomLocation?: Vector,Radius?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {RandomLocation: Vector, $: boolean};
-	static K2_ProjectPointToNavigation(WorldContextObject: UObject,Point: Vector,ProjectedLocation?: Vector,NavData?: NavigationData,FilterClass?: UnrealEngineClass,QueryExtent?: Vector): {ProjectedLocation: Vector, $: boolean};
-	static NavigationRaycast(WorldContextObject: UObject,RayStart: Vector,RayEnd: Vector,HitLocation?: Vector,FilterClass?: UnrealEngineClass,Querier?: Controller): {HitLocation: Vector, $: boolean};
-	static ProjectPointToNavigation(WorldContextObject: UObject,Point: Vector,NavData: NavigationData,FilterClass: UnrealEngineClass,QueryExtent: Vector): Vector;
+	static LogBox(WorldContextObject: UObject,BoxShape: Box,text: string,ObjectColor: LinearColor,LogCategory: string,bAddToMessageLog: boolean): void;
+	static LogLocation(WorldContextObject: UObject,Location: Vector,text: string,ObjectColor: LinearColor,Radius: number,LogCategory: string,bAddToMessageLog: boolean): void;
+	static LogSegment(WorldContextObject: UObject,SegmentStart: Vector,SegmentEnd: Vector,text: string,ObjectColor: LinearColor,Thickness: number,CategoryName: string,bAddToMessageLog: boolean): void;
+	static LogText(WorldContextObject: UObject,text: string,LogCategory: string,bAddToMessageLog: boolean): void;
 	static BoxOverlapActors(WorldContextObject: UObject,BoxPos: Vector,BoxExtent: Vector,ObjectTypes: EObjectTypeQuery[],ActorClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutActors?: Actor[]): {OutActors: Actor[], $: boolean};
 	static BoxOverlapComponents(WorldContextObject: UObject,BoxPos: Vector,Extent: Vector,ObjectTypes: EObjectTypeQuery[],ComponentClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutComponents?: PrimitiveComponent[]): {OutComponents: PrimitiveComponent[], $: boolean};
 	static BoxTraceMulti(WorldContextObject: UObject,Start: Vector,End: Vector,HalfSize: Vector,Orientation: Rotator,TraceChannel: ETraceTypeQuery,bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHits?: HitResult[],bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHits: HitResult[], $: boolean};
@@ -12006,10 +12890,12 @@ declare class World extends UObject {
 	static DrawDebugPlane(WorldContextObject: UObject,PlaneCoordinates: Plane,Location: Vector,Size: number,PlaneColor: LinearColor,Duration: number): void;
 	static DrawDebugPoint(WorldContextObject: UObject,Position: Vector,Size: number,PointColor: LinearColor,Duration: number): void;
 	static DrawDebugSphere(WorldContextObject: UObject,Center: Vector,Radius: number,Segments: number,LineColor: LinearColor,Duration: number,Thickness: number): void;
-	static DrawDebugString(WorldContextObject: UObject,TextLocation: Vector,Text: string,TestBaseActor: Actor,TextColor: LinearColor,Duration: number): void;
+	static DrawDebugString(WorldContextObject: UObject,TextLocation: Vector,text: string,TestBaseActor: Actor,TextColor: LinearColor,Duration: number): void;
 	static ExecuteConsoleCommand(WorldContextObject: UObject,Command: string,SpecificPlayer: PlayerController): void;
 	static FlushDebugStrings(WorldContextObject: UObject): void;
 	static FlushPersistentDebugLines(WorldContextObject: UObject): void;
+	static GetConsoleVariableFloatValue(WorldContextObject: UObject,VariableName: string): number;
+	static GetConsoleVariableIntValue(WorldContextObject: UObject,VariableName: string): number;
 	static GetGameTimeInSeconds(WorldContextObject: UObject): number;
 	static IsDedicatedServer(WorldContextObject: UObject): boolean;
 	static IsServer(WorldContextObject: UObject): boolean;
@@ -12029,11 +12915,11 @@ declare class World extends UObject {
 	static LineTraceSingle(WorldContextObject: UObject,Start: Vector,End: Vector,TraceChannel: ETraceTypeQuery,bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHit?: HitResult,bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHit: HitResult, $: boolean};
 	static LineTraceSingleByProfile(WorldContextObject: UObject,Start: Vector,End: Vector,ProfileName: string,bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHit?: HitResult,bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHit: HitResult, $: boolean};
 	static LineTraceSingleForObjects(WorldContextObject: UObject,Start: Vector,End: Vector,ObjectTypes: EObjectTypeQuery[],bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHit?: HitResult,bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHit: HitResult, $: boolean};
-	static LoadAsset(WorldContextObject: UObject,Asset: any,OnLoaded: UnrealEngineDelegate<(Loaded: UObject) => void>,LatentInfo: LatentActionInfo): void;
-	static LoadAssetClass(WorldContextObject: UObject,AssetClass: any,OnLoaded: UnrealEngineDelegate<(Loaded: UnrealEngineClass) => void>,LatentInfo: LatentActionInfo): void;
-	static PrintString(WorldContextObject: UObject,InString: string,bPrintToScreen: boolean,bPrintToLog: boolean,TextColor: LinearColor,Duration: number): void;
+	static LoadAsset(WorldContextObject: UObject,Asset: UObject,OnLoaded: UnrealEngineDelegate<(Loaded: UObject) => void>,LatentInfo: LatentActionInfo): void;
+	static LoadAssetClass(WorldContextObject: UObject,AssetClass: Class,OnLoaded: UnrealEngineDelegate<(Loaded: UnrealEngineClass) => void>,LatentInfo: LatentActionInfo): void;
+	static PrintString(WorldContextObject: UObject,inString: string,bPrintToScreen: boolean,bPrintToLog: boolean,TextColor: LinearColor,Duration: number): void;
 	static PrintText(WorldContextObject: UObject,InText: string,bPrintToScreen: boolean,bPrintToLog: boolean,TextColor: LinearColor,Duration: number): void;
-	static QuitGame(WorldContextObject: UObject,SpecificPlayer: PlayerController,QuitPreference: EQuitPreference): void;
+	static QuitGame(WorldContextObject: UObject,SpecificPlayer: PlayerController,QuitPreference: EQuitPreference,bIgnorePlatformRestrictions: boolean): void;
 	static RetriggerableDelay(WorldContextObject: UObject,Duration: number,LatentInfo: LatentActionInfo): void;
 	static SetSuppressViewportTransitionMessage(WorldContextObject: UObject,bState: boolean): void;
 	static SphereOverlapActors(WorldContextObject: UObject,SpherePos: Vector,SphereRadius: number,ObjectTypes: EObjectTypeQuery[],ActorClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutActors?: Actor[]): {OutActors: Actor[], $: boolean};
@@ -12047,13 +12933,19 @@ declare class World extends UObject {
 	static BeginDrawCanvasToRenderTarget(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,Canvas?: Canvas,Size?: Vector2D,Context?: DrawToRenderTargetContext): {Canvas: Canvas, Size: Vector2D, Context: DrawToRenderTargetContext};
 	static ClearRenderTarget2D(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,ClearColor: LinearColor): void;
 	static ConvertRenderTargetToTexture2DEditorOnly(WorldContextObject: UObject,RenderTarget: TextureRenderTarget2D,Texture: Texture2D): void;
-	static CreateRenderTarget2D(WorldContextObject: UObject,Width: number,Height: number): TextureRenderTarget2D;
+	static CreateRenderTarget2D(WorldContextObject: UObject,Width: number,Height: number,Format: ETextureRenderTargetFormat): TextureRenderTarget2D;
 	static DrawMaterialToRenderTarget(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,Material: MaterialInterface): void;
 	static EndDrawCanvasToRenderTarget(WorldContextObject: UObject,Context: DrawToRenderTargetContext): void;
-	static ExportRenderTarget(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,FilePath: string,FileName: string): void;
-	static ExportTexture2D(WorldContextObject: UObject,Texture: Texture2D,FilePath: string,FileName: string): void;
+	static ExportRenderTarget(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,FilePath: string,Filename: string): void;
+	static ExportTexture2D(WorldContextObject: UObject,Texture: Texture2D,FilePath: string,Filename: string): void;
+	static ImportBufferAsTexture2D(WorldContextObject: UObject,Buffer: number[]): Texture2D;
+	static ImportFileAsTexture2D(WorldContextObject: UObject,Filename: string): Texture2D;
+	static ReadRenderTargetPixel(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,X: number,Y: number): Color;
+	static ReadRenderTargetRawPixel(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,X: number,Y: number): LinearColor;
+	static ReadRenderTargetRawUV(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,U: number,V: number): LinearColor;
+	static ReadRenderTargetUV(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,U: number,V: number): Color;
 	static MinimumAreaRectangle(WorldContextObject: UObject,InVerts: Vector[],SampleSurfaceNormal: Vector,OutRectCenter?: Vector,OutRectRotation?: Rotator,OutSideLengthX?: number,OutSideLengthY?: number,bDebugDraw?: boolean): {OutRectCenter: Vector, OutRectRotation: Rotator, OutSideLengthX: number, OutSideLengthY: number};
-	static CreateDynamicMaterialInstance(WorldContextObject: UObject,Parent: MaterialInterface): MaterialInstanceDynamic;
+	static CreateDynamicMaterialInstance(WorldContextObject: UObject,Parent: MaterialInterface,OptionalName: string): MaterialInstanceDynamic;
 	static GetScalarParameterValue(WorldContextObject: UObject,Collection: MaterialParameterCollection,ParameterName: string): number;
 	static GetVectorParameterValue(WorldContextObject: UObject,Collection: MaterialParameterCollection,ParameterName: string): LinearColor;
 	static SetScalarParameterValue(WorldContextObject: UObject,Collection: MaterialParameterCollection,ParameterName: string,ParameterValue: number): void;
@@ -12062,7 +12954,7 @@ declare class World extends UObject {
 	static ApplyRadialDamage(WorldContextObject: UObject,BaseDamage: number,Origin: Vector,DamageRadius: number,DamageTypeClass: UnrealEngineClass,IgnoreActors: Actor[],DamageCauser: Actor,InstigatedByController: Controller,bDoFullDamage: boolean,DamagePreventionChannel: ECollisionChannel): boolean;
 	static ApplyRadialDamageWithFalloff(WorldContextObject: UObject,BaseDamage: number,MinimumDamage: number,Origin: Vector,DamageInnerRadius: number,DamageOuterRadius: number,DamageFalloff: number,DamageTypeClass: UnrealEngineClass,IgnoreActors: Actor[],DamageCauser: Actor,InstigatedByController: Controller,DamagePreventionChannel: ECollisionChannel): boolean;
 	static AreAnyListenersWithinRange(WorldContextObject: UObject,Location: Vector,MaximumRange: number): boolean;
-	static BeginDeferredActorSpawnFromClass(WorldContextObject: UObject,ActorClass: UnrealEngineClass,SpawnTransform: Transform,CollisionHandlingOverride: CollisionHandlingOverride,Owner: Actor): Actor;
+	static BeginDeferredActorSpawnFromClass(WorldContextObject: UObject,ActorClass: UnrealEngineClass,SpawnTransform: Transform,CollisionHandlingOverride: ESpawnActorCollisionHandlingMethod,Owner: Actor): Actor;
 	static BeginSpawningActorFromBlueprint(WorldContextObject: UObject,Blueprint: Blueprint,SpawnTransform: Transform,bNoCollisionFail: boolean): Actor;
 	static BeginSpawningActorFromClass(WorldContextObject: UObject,ActorClass: UnrealEngineClass,SpawnTransform: Transform,bNoCollisionFail: boolean,Owner: Actor): Actor;
 	static Blueprint_PredictProjectilePath_Advanced(WorldContextObject: UObject,PredictParams: PredictProjectilePathParams,PredictResult?: PredictProjectilePathResult): {PredictResult: PredictProjectilePathResult, $: boolean};
@@ -12082,6 +12974,7 @@ declare class World extends UObject {
 	static GetAudioTimeSeconds(WorldContextObject: UObject): number;
 	static GetCurrentLevelName(WorldContextObject: UObject,bRemovePrefixString: boolean): string;
 	static GetCurrentReverbEffect(WorldContextObject: UObject): ReverbEffect;
+	static GetEnableWorldRendering(WorldContextObject: UObject): boolean;
 	static GetGameInstance(WorldContextObject: UObject): GameInstance;
 	static GetGameMode(WorldContextObject: UObject): GameModeBase;
 	static GetGameState(WorldContextObject: UObject): GameStateBase;
@@ -12102,14 +12995,15 @@ declare class World extends UObject {
 	static OpenLevel(WorldContextObject: UObject,LevelName: string,bAbsolute: boolean,Options: string): void;
 	static PlayDialogue2D(WorldContextObject: UObject,Dialogue: DialogueWave,Context: DialogueContext,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number): void;
 	static PlayDialogueAtLocation(WorldContextObject: UObject,Dialogue: DialogueWave,Context: DialogueContext,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation): void;
-	static PlaySound2D(WorldContextObject: UObject,Sound: SoundBase,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,ConcurrencySettings: SoundConcurrency): void;
-	static PlaySoundAtLocation(WorldContextObject: UObject,Sound: SoundBase,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,ConcurrencySettings: SoundConcurrency): void;
+	static PlaySound2D(WorldContextObject: UObject,Sound: SoundBase,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,ConcurrencySettings: SoundConcurrency,OwningActor: Actor): void;
+	static PlaySoundAtLocation(WorldContextObject: UObject,Sound: SoundBase,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,ConcurrencySettings: SoundConcurrency,OwningActor: Actor): void;
 	static PlayWorldCameraShake(WorldContextObject: UObject,Shake: UnrealEngineClass,Epicenter: Vector,InnerRadius: number,OuterRadius: number,Falloff: number,bOrientShakeTowardsEpicenter: boolean): void;
 	static PopSoundMixModifier(WorldContextObject: UObject,InSoundMixModifier: SoundMix): void;
 	static PushSoundMixModifier(WorldContextObject: UObject,InSoundMixModifier: SoundMix): void;
 	static RebaseLocalOriginOntoZero(WorldContextObject: UObject,WorldLocation: Vector): Vector;
 	static RebaseZeroOriginOntoLocal(WorldContextObject: UObject,WorldLocation: Vector): Vector;
 	static SetBaseSoundMix(WorldContextObject: UObject,InSoundMix: SoundMix): void;
+	static SetEnableWorldRendering(WorldContextObject: UObject,bEnable: boolean): void;
 	static SetGamePaused(WorldContextObject: UObject,bPaused: boolean): boolean;
 	static SetGlobalListenerFocusParameters(WorldContextObject: UObject,FocusAzimuthScale: number,NonFocusAzimuthScale: number,FocusDistanceScale: number,NonFocusDistanceScale: number,FocusVolumeScale: number,NonFocusVolumeScale: number,FocusPriorityScale: number,NonFocusPriorityScale: number): void;
 	static SetGlobalPitchModulation(WorldContextObject: UObject,PitchModulation: number,TimeSec: number): void;
@@ -12119,12 +13013,12 @@ declare class World extends UObject {
 	static SpawnDecalAtLocation(WorldContextObject: UObject,DecalMaterial: MaterialInterface,DecalSize: Vector,Location: Vector,Rotation: Rotator,LifeSpan: number): DecalComponent;
 	static SpawnDialogue2D(WorldContextObject: UObject,Dialogue: DialogueWave,Context: DialogueContext,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,bAutoDestroy: boolean): AudioComponent;
 	static SpawnDialogueAtLocation(WorldContextObject: UObject,Dialogue: DialogueWave,Context: DialogueContext,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,bAutoDestroy: boolean): AudioComponent;
-	static SpawnEmitterAtLocation(WorldContextObject: UObject,EmitterTemplate: ParticleSystem,Location: Vector,Rotation: Rotator,bAutoDestroy: boolean): ParticleSystemComponent;
+	static SpawnEmitterAtLocation(WorldContextObject: UObject,EmitterTemplate: ParticleSystem,Location: Vector,Rotation: Rotator,Scale: Vector,bAutoDestroy: boolean,PoolingMethod: EPSCPoolMethod): ParticleSystemComponent;
 	static SpawnForceFeedbackAtLocation(WorldContextObject: UObject,ForceFeedbackEffect: ForceFeedbackEffect,Location: Vector,Rotation: Rotator,bLooping: boolean,IntensityMultiplier: number,StartTime: number,AttenuationSettings: ForceFeedbackAttenuation,bAutoDestroy: boolean): ForceFeedbackComponent;
 	static SpawnSound2D(WorldContextObject: UObject,Sound: SoundBase,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,ConcurrencySettings: SoundConcurrency,bPersistAcrossLevelTransition: boolean,bAutoDestroy: boolean): AudioComponent;
 	static SpawnSoundAtLocation(WorldContextObject: UObject,Sound: SoundBase,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,ConcurrencySettings: SoundConcurrency,bAutoDestroy: boolean): AudioComponent;
 	static SuggestProjectileVelocity_CustomArc(WorldContextObject: UObject,OutLaunchVelocity?: Vector,StartPos?: Vector,EndPos?: Vector,OverrideGravityZ?: number,ArcParam?: number): {OutLaunchVelocity: Vector, $: boolean};
-	static UnloadStreamLevel(WorldContextObject: UObject,LevelName: string,LatentInfo: LatentActionInfo): void;
+	static UnloadStreamLevel(WorldContextObject: UObject,LevelName: string,LatentInfo: LatentActionInfo,bShouldBlockOnUnload: boolean): void;
 	static FoliageOverlappingBoxCount(WorldContextObject: UObject,StaticMesh: StaticMesh,Box: Box): number;
 	static FoliageOverlappingSphereCount(WorldContextObject: UObject,StaticMesh: StaticMesh,CenterPosition: Vector,Radius: number): number;
 	static GetMousePositionOnViewport(WorldContextObject: UObject): Vector2D;
@@ -12135,7 +13029,7 @@ declare class World extends UObject {
 	static Create(WorldContextObject: UObject,WidgetType: UnrealEngineClass,OwningPlayer: PlayerController): UserWidget;
 	static GetAllWidgetsOfClass(WorldContextObject: UObject,FoundWidgets?: UserWidget[],WidgetClass?: UnrealEngineClass,TopLevelOnly?: boolean): {FoundWidgets: UserWidget[]};
 	static GetAllWidgetsWithInterface(WorldContextObject: UObject,Interface: UnrealEngineClass,FoundWidgets?: UserWidget[],TopLevelOnly?: boolean): {FoundWidgets: UserWidget[]};
-	static GetSafeZonePadding(WorldContextObject: UObject,SafePadding?: Vector2D,SafePaddingScale?: Vector2D,SpillOverPadding?: Vector2D): {SafePadding: Vector2D, SafePaddingScale: Vector2D, SpillOverPadding: Vector2D};
+	static GetSafeZonePadding(WorldContextObject: UObject,SafePadding?: Vector4,SafePaddingScale?: Vector2D,SpillOverPadding?: Vector4): {SafePadding: Vector4, SafePaddingScale: Vector2D, SpillOverPadding: Vector4};
 	static SetHardwareCursor(WorldContextObject: UObject,CursorShape: EMouseCursor,CursorName: string,HotSpot: Vector2D): boolean;
 	static AbsoluteToViewport(WorldContextObject: UObject,AbsoluteDesktopCoordinate: Vector2D,PixelPosition?: Vector2D,ViewportPosition?: Vector2D): {PixelPosition: Vector2D, ViewportPosition: Vector2D};
 	static LocalToViewport(WorldContextObject: UObject,Geometry: Geometry,LocalCoordinate: Vector2D,PixelPosition?: Vector2D,ViewportPosition?: Vector2D): {PixelPosition: Vector2D, ViewportPosition: Vector2D};
@@ -12146,12 +13040,18 @@ declare class World extends UObject {
 	static AddSourceEffectToPresetChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,Entry: SourceEffectChainEntry): void;
 	static ClearMasterSubmixEffects(WorldContextObject: UObject): void;
 	static GetNumberOfEntriesInSourceEffectChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain): number;
+	static PauseRecordingOutput(WorldContextObject: UObject,SubmixToPause: SoundSubmix): void;
 	static RemoveMasterSubmixEffect(WorldContextObject: UObject,SubmixEffectPreset: SoundEffectSubmixPreset): void;
 	static RemoveSourceEffectFromPresetChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,EntryIndex: number): void;
+	static ResumeRecordingOutput(WorldContextObject: UObject,SubmixToPause: SoundSubmix): void;
 	static SetBypassSourceEffectChainEntry(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,EntryIndex: number,bBypassed: boolean): void;
+	static StartRecordingOutput(WorldContextObject: UObject,ExpectedDuration: number,SubmixToRecord: SoundSubmix): void;
+	static StopRecordingOutput(WorldContextObject: UObject,ExportType: EAudioRecordingExportType,Name: string,Path: string,SubmixToRecord: SoundSubmix,ExistingSoundWaveToOverwrite: SoundWave): SoundWave;
 	static CreateMoveToProxyObject(WorldContextObject: UObject,Pawn: Pawn,Destination: Vector,TargetActor: Actor,AcceptanceRadius: number,bStopOnOverlap: boolean): AIAsyncTaskBlueprintProxy;
 	static SpawnAIFromClass(WorldContextObject: UObject,PawnClass: UnrealEngineClass,BehaviorTree: BehaviorTree,Location: Vector,Rotation: Rotator,bNoCollisionFail: boolean): Pawn;
 	static GetAllActorsOfClassMatchingTagQuery(WorldContextObject: UObject,ActorClass: UnrealEngineClass,GameplayTagQuery: GameplayTagQuery,OutActors?: Actor[]): {OutActors: Actor[]};
+	static GetDeviceWorldPose(WorldContext: UObject,XRDeviceId: XRDeviceId,bIsTracked?: boolean,Orientation?: Rotator,bHasPositionalTracking?: boolean,Position?: Vector): {bIsTracked: boolean, Orientation: Rotator, bHasPositionalTracking: boolean, Position: Vector};
+	static GetTrackingToWorldTransform(WorldContext: UObject): Transform;
 	static GetWorldToMetersScale(WorldContext: UObject): number;
 	static SetWorldToMetersScale(WorldContext: UObject,NewScale: number): void;
 }
@@ -12164,13 +13064,13 @@ declare class Package extends UObject {
 	static C(Other: UObject | any): Package;
 	DeletePackage(): boolean;
 	FindWorldInPackage(): World;
-	SavePackage(FileName: string): boolean;
+	SavePackage(Filename: string): boolean;
 	GetLongPackagePath(): string;
 	HasAnyPackageFlags(Flags: number): boolean;
 	LoadPackage(PackageName: string): Package;
 	static DeletePackage(Package: Package): boolean;
 	static FindWorldInPackage(Package: Package): World;
-	static SavePackage(Package: Package,FileName: string): boolean;
+	static SavePackage(Package: Package,Filename: string): boolean;
 	static GetLongPackagePath(InPackage: Package): string;
 	static HasAnyPackageFlags(Package: Package,Flags: number): boolean;
 	static LoadPackage(InOuter: Package,PackageName: string): Package;
@@ -12183,45 +13083,8 @@ declare class DirectoryItem {
 	static C(Other: UObject | any): DirectoryItem;
 }
 
-declare class PrimaryAssetType { 
-	Name: string;
-	clone() : PrimaryAssetType;
-	static C(Other: UObject | any): PrimaryAssetType;
-	EqualEqual_PrimaryAssetType(B: PrimaryAssetType): boolean;
-	GetPrimaryAssetIdList(OutPrimaryAssetIdList?: PrimaryAssetId[]): {OutPrimaryAssetIdList: PrimaryAssetId[]};
-	IsValidPrimaryAssetType(): boolean;
-	NotEqual_PrimaryAssetType(B: PrimaryAssetType): boolean;
-	static EqualEqual_PrimaryAssetType(A: PrimaryAssetType,B: PrimaryAssetType): boolean;
-	static GetPrimaryAssetIdList(PrimaryAssetType: PrimaryAssetType,OutPrimaryAssetIdList?: PrimaryAssetId[]): {OutPrimaryAssetIdList: PrimaryAssetId[]};
-	static IsValidPrimaryAssetType(PrimaryAssetType: PrimaryAssetType): boolean;
-	static NotEqual_PrimaryAssetType(A: PrimaryAssetType,B: PrimaryAssetType): boolean;
-}
-
-declare class PrimaryAssetId { 
-	PrimaryAssetType: PrimaryAssetType;
-	PrimaryAssetName: string;
-	clone() : PrimaryAssetId;
-	static C(Other: UObject | any): PrimaryAssetId;
-	EqualEqual_PrimaryAssetId(B: PrimaryAssetId): boolean;
-	GetClassFromPrimaryAssetId(): UnrealEngineClass;
-	GetCurrentBundleState(bForceCurrentState: boolean,OutBundles?: string[]): {OutBundles: string[], $: boolean};
-	GetObjectFromPrimaryAssetId(): UObject;
-	GetSoftClassReferenceFromPrimaryAssetId(): any;
-	GetSoftObjectReferenceFromPrimaryAssetId(): any;
-	IsValidPrimaryAssetId(): boolean;
-	NotEqual_PrimaryAssetId(B: PrimaryAssetId): boolean;
-	UnloadPrimaryAsset(): void;
-	static EqualEqual_PrimaryAssetId(A: PrimaryAssetId,B: PrimaryAssetId): boolean;
-	static GetClassFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UnrealEngineClass;
-	static GetCurrentBundleState(PrimaryAssetId: PrimaryAssetId,bForceCurrentState: boolean,OutBundles?: string[]): {OutBundles: string[], $: boolean};
-	static GetObjectFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UObject;
-	static GetSoftClassReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): any;
-	static GetSoftObjectReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): any;
-	static IsValidPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): boolean;
-	static NotEqual_PrimaryAssetId(A: PrimaryAssetId,B: PrimaryAssetId): boolean;
-	static UnloadPrimaryAsset(PrimaryAssetId: PrimaryAssetId): void;
-}
-
+declare type EJavascriptEncodingOptions = 'AutoDetect' | 'ForceAnsi' | 'ForceUnicode' | 'ForceUTF8' | 'ForceUTF8WithoutBOM' | 'EJavascriptEncodingOptions_MAX';
+declare var EJavascriptEncodingOptions : { AutoDetect:'AutoDetect',ForceAnsi:'ForceAnsi',ForceUnicode:'ForceUnicode',ForceUTF8:'ForceUTF8',ForceUTF8WithoutBOM:'ForceUTF8WithoutBOM',EJavascriptEncodingOptions_MAX:'EJavascriptEncodingOptions_MAX', };
 declare class CollisionProfileName { 
 	Name: string;
 	clone() : CollisionProfileName;
@@ -12251,7 +13114,9 @@ declare class UObject {
 	BroadcastAssetCreated(): void;
 	MarkPackageDirty(): boolean;
 	ModifyObject(bAlwaysMarkDirty: boolean): void;
+	OpenEditorForAsset(): boolean;
 	PostEditChange(): void;
+	DestroyUObject(): void;
 	CreateEnum(Name: string,DisplayNames: string[]): Enum;
 	CreatePackage(PackageName: string): Package;
 	Duplicate(Outer: UObject,Name: string): UObject;
@@ -12271,13 +13136,18 @@ declare class UObject {
 	ReadStringFromFile(Filename: string): string;
 	SetObjectFlags(Flags: number): void;
 	WriteFile(Filename: string): boolean;
-	WriteStringToFile(Filename: string,Data: string): boolean;
+	WriteStringToFile(Filename: string,Data: string,EncodingOptions: EJavascriptEncodingOptions): boolean;
+	GetDatasmithUserData(): DatasmithAssetUserData;
+	GetDatasmithUserDataKeysAndValuesForValue(StringToMatch: string,OutKeys?: string[],OutValues?: string[]): {OutKeys: string[], OutValues: string[]};
+	GetDatasmithUserDataValueForKey(Key: string): string;
+	RedirectVislog(DestinationOwner: UObject): void;
 	Conv_ObjectToText(): string;
-	Conv_ObjectToSoftObjectReference(): any;
+	Conv_ObjectToSoftObjectReference(): UObject;
 	Conv_SoftObjectReferenceToObject(): UObject;
+	Conv_SoftObjectReferenceToString(): string;
 	CreateCopyForUndoBuffer(): void;
 	DoesImplementInterface(Interface: UnrealEngineClass): boolean;
-	EqualEqual_SoftObjectReference(B: any): boolean;
+	EqualEqual_SoftObjectReference(B: UObject): boolean;
 	GetDisplayName(): string;
 	GetObjectName(): string;
 	GetPathName(): string;
@@ -12294,9 +13164,7 @@ declare class UObject {
 	K2_SetTimer(FunctionName: string,Time: number,bLooping: boolean): TimerHandle;
 	K2_TimerExists(FunctionName: string): boolean;
 	K2_UnPauseTimer(FunctionName: string): void;
-	NotEqual_SoftObjectReference(B: any): boolean;
-	SetAssetClassPropertyByName(PropertyName: string,Value: any): void;
-	SetAssetPropertyByName(PropertyName: string,Value: any): void;
+	NotEqual_SoftObjectReference(B: UObject): boolean;
 	SetBoolPropertyByName(PropertyName: string,Value: boolean): void;
 	SetBytePropertyByName(PropertyName: string,Value: number): void;
 	SetClassPropertyByName(PropertyName: string,Value: UnrealEngineClass): void;
@@ -12308,11 +13176,14 @@ declare class UObject {
 	SetNamePropertyByName(PropertyName: string,Value: string): void;
 	SetObjectPropertyByName(PropertyName: string,Value: UObject): void;
 	SetRotatorPropertyByName(PropertyName: string,Value: Rotator): void;
+	SetSoftClassPropertyByName(PropertyName: string,Value: Class): void;
+	SetSoftObjectPropertyByName(PropertyName: string,Value: UObject): void;
 	SetStringPropertyByName(PropertyName: string,Value: string): void;
 	SetStructurePropertyByName(PropertyName: string,Value: GenericStruct): void;
 	SetTextPropertyByName(PropertyName: string,Value: string): void;
 	SetTransformPropertyByName(PropertyName: string,Value: Transform): void;
 	SetVectorPropertyByName(PropertyName: string,Value: Vector): void;
+	TransactObject(): void;
 	Conv_ObjectToString(): string;
 	EqualEqual_ObjectObject(B: UObject): boolean;
 	NotEqual_ObjectObject(B: UObject): boolean;
@@ -12325,7 +13196,9 @@ declare class UObject {
 	static BroadcastAssetCreated(NewAsset: UObject): void;
 	static MarkPackageDirty(InObject: UObject): boolean;
 	static ModifyObject(UObject: UObject,bAlwaysMarkDirty: boolean): void;
+	static OpenEditorForAsset(Asset: UObject): boolean;
 	static PostEditChange(InObject: UObject): void;
+	static DestroyUObject(UObject: UObject): void;
 	static CreateEnum(Outer: UObject,Name: string,DisplayNames: string[]): Enum;
 	static CreatePackage(Outer: UObject,PackageName: string): Package;
 	static Duplicate(UObject: UObject,Outer: UObject,Name: string): UObject;
@@ -12345,20 +13218,25 @@ declare class UObject {
 	static ReadStringFromFile(UObject: UObject,Filename: string): string;
 	static SetObjectFlags(Obj: UObject,Flags: number): void;
 	static WriteFile(UObject: UObject,Filename: string): boolean;
-	static WriteStringToFile(UObject: UObject,Filename: string,Data: string): boolean;
+	static WriteStringToFile(UObject: UObject,Filename: string,Data: string,EncodingOptions: EJavascriptEncodingOptions): boolean;
+	static GetDatasmithUserData(UObject: UObject): DatasmithAssetUserData;
+	static GetDatasmithUserDataKeysAndValuesForValue(UObject: UObject,StringToMatch: string,OutKeys?: string[],OutValues?: string[]): {OutKeys: string[], OutValues: string[]};
+	static GetDatasmithUserDataValueForKey(UObject: UObject,Key: string): string;
+	static RedirectVislog(SourceOwner: UObject,DestinationOwner: UObject): void;
 	static Conv_ObjectToText(InObj: UObject): string;
-	static Conv_ObjectToSoftObjectReference(UObject: UObject): any;
-	static Conv_SoftObjectReferenceToObject(Asset: any): UObject;
+	static Conv_ObjectToSoftObjectReference(UObject: UObject): UObject;
+	static Conv_SoftObjectReferenceToObject(softobject: UObject): UObject;
+	static Conv_SoftObjectReferenceToString(SoftObjectReference: UObject): string;
 	static CreateCopyForUndoBuffer(ObjectToModify: UObject): void;
 	static DoesImplementInterface(TestObject: UObject,Interface: UnrealEngineClass): boolean;
-	static EqualEqual_SoftObjectReference(A: any,B: any): boolean;
+	static EqualEqual_SoftObjectReference(A: UObject,B: UObject): boolean;
 	static GetDisplayName(UObject: UObject): string;
 	static GetObjectName(UObject: UObject): string;
 	static GetPathName(UObject: UObject): string;
 	static GetPrimaryAssetIdFromObject(UObject: UObject): PrimaryAssetId;
-	static GetPrimaryAssetIdFromSoftObjectReference(SoftObjectReference: any): PrimaryAssetId;
+	static GetPrimaryAssetIdFromSoftObjectReference(SoftObjectReference: UObject): PrimaryAssetId;
 	static IsValid(UObject: UObject): boolean;
-	static IsValidSoftObjectReference(SoftObjectReference: any): boolean;
+	static IsValidSoftObjectReference(SoftObjectReference: UObject): boolean;
 	static K2_ClearTimer(UObject: UObject,FunctionName: string): void;
 	static K2_GetTimerElapsedTime(UObject: UObject,FunctionName: string): number;
 	static K2_GetTimerRemainingTime(UObject: UObject,FunctionName: string): number;
@@ -12368,9 +13246,7 @@ declare class UObject {
 	static K2_SetTimer(UObject: UObject,FunctionName: string,Time: number,bLooping: boolean): TimerHandle;
 	static K2_TimerExists(UObject: UObject,FunctionName: string): boolean;
 	static K2_UnPauseTimer(UObject: UObject,FunctionName: string): void;
-	static NotEqual_SoftObjectReference(A: any,B: any): boolean;
-	static SetAssetClassPropertyByName(UObject: UObject,PropertyName: string,Value: any): void;
-	static SetAssetPropertyByName(UObject: UObject,PropertyName: string,Value: any): void;
+	static NotEqual_SoftObjectReference(A: UObject,B: UObject): boolean;
 	static SetBoolPropertyByName(UObject: UObject,PropertyName: string,Value: boolean): void;
 	static SetBytePropertyByName(UObject: UObject,PropertyName: string,Value: number): void;
 	static SetClassPropertyByName(UObject: UObject,PropertyName: string,Value: UnrealEngineClass): void;
@@ -12382,11 +13258,14 @@ declare class UObject {
 	static SetNamePropertyByName(UObject: UObject,PropertyName: string,Value: string): void;
 	static SetObjectPropertyByName(UObject: UObject,PropertyName: string,Value: UObject): void;
 	static SetRotatorPropertyByName(UObject: UObject,PropertyName: string,Value: Rotator): void;
+	static SetSoftClassPropertyByName(UObject: UObject,PropertyName: string,Value: Class): void;
+	static SetSoftObjectPropertyByName(UObject: UObject,PropertyName: string,Value: UObject): void;
 	static SetStringPropertyByName(UObject: UObject,PropertyName: string,Value: string): void;
 	static SetStructurePropertyByName(UObject: UObject,PropertyName: string,Value: GenericStruct): void;
 	static SetTextPropertyByName(UObject: UObject,PropertyName: string,Value: string): void;
 	static SetTransformPropertyByName(UObject: UObject,PropertyName: string,Value: Transform): void;
 	static SetVectorPropertyByName(UObject: UObject,PropertyName: string,Value: Vector): void;
+	static TransactObject(UObject: UObject): void;
 	static Conv_ObjectToString(InObj: UObject): string;
 	static EqualEqual_ObjectObject(A: UObject,B: UObject): boolean;
 	static NotEqual_ObjectObject(A: UObject,B: UObject): boolean;
@@ -12421,78 +13300,6 @@ declare class ScriptStruct extends Struct {
 	static C(Other: UObject | any): ScriptStruct;
 }
 
-declare class DynamicBlueprintBinding extends UObject { 
-	static Load(ResourceName: string): DynamicBlueprintBinding;
-	static Find(Outer: UObject, ResourceName: string): DynamicBlueprintBinding;
-	static GetDefaultObject(): DynamicBlueprintBinding;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicBlueprintBinding;
-	static C(Other: UObject | any): DynamicBlueprintBinding;
-}
-
-declare class Class extends Struct { 
-	static Load(ResourceName: string): Class;
-	static Find(Outer: UObject, ResourceName: string): Class;
-	static GetDefaultObject(): Class;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Class;
-	static C(Other: UObject | any): Class;
-	AddDynamicBinding(BindingObject: DynamicBlueprintBinding): void;
-	GetClassPathName(): string;
-	GetDerivedClasses(Results?: UnrealEngineClass[],bRecursive?: boolean): {Results: UnrealEngineClass[]};
-	GetDynamicBinding(BindingObjectClass: UnrealEngineClass): DynamicBlueprintBinding;
-	GetObjectsOfClass(Results?: UObject[],bIncludeDerivedClasses?: boolean,ExcludeFlags?: number,ExclusionInternalFlags?: number): {Results: UObject[]};
-	GetSuperClasses(): UnrealEngineClass[];
-	IsGeneratedByBlueprint(): boolean;
-	Conv_ClassToSoftClassReference(): any;
-	Conv_SoftClassReferenceToClass(): UnrealEngineClass;
-	EqualEqual_SoftClassReference(B: any): boolean;
-	GetClassDisplayName(): string;
-	GetPrimaryAssetIdFromClass(): PrimaryAssetId;
-	GetPrimaryAssetIdFromSoftClassReference(): PrimaryAssetId;
-	IsValidClass(): boolean;
-	IsValidSoftClassReference(): boolean;
-	NotEqual_SoftClassReference(B: any): boolean;
-	ClassIsChildOf(ParentClass: UnrealEngineClass): boolean;
-	EqualEqual_ClassClass(B: UnrealEngineClass): boolean;
-	NotEqual_ClassClass(B: UnrealEngineClass): boolean;
-	SelectClass(B: UnrealEngineClass,bSelectA: boolean): UnrealEngineClass;
-	CreateSaveGameObject(): SaveGame;
-	SpawnObject(Outer: UObject): UObject;
-	CreateDragDropOperation(): DragDropOperation;
-	static AddDynamicBinding(Outer: UnrealEngineClass,BindingObject: DynamicBlueprintBinding): void;
-	static GetClassPathName(Class: UnrealEngineClass): string;
-	static GetDerivedClasses(ClassToLookFor: UnrealEngineClass,Results?: UnrealEngineClass[],bRecursive?: boolean): {Results: UnrealEngineClass[]};
-	static GetDynamicBinding(Outer: UnrealEngineClass,BindingObjectClass: UnrealEngineClass): DynamicBlueprintBinding;
-	static GetObjectsOfClass(ClassToLookFor: UnrealEngineClass,Results?: UObject[],bIncludeDerivedClasses?: boolean,ExcludeFlags?: number,ExclusionInternalFlags?: number): {Results: UObject[]};
-	static GetSuperClasses(InClass: UnrealEngineClass): UnrealEngineClass[];
-	static IsGeneratedByBlueprint(InClass: UnrealEngineClass): boolean;
-	static Conv_ClassToSoftClassReference(Class: UnrealEngineClass): any;
-	static Conv_SoftClassReferenceToClass(AssetClass: any): UnrealEngineClass;
-	static EqualEqual_SoftClassReference(A: any,B: any): boolean;
-	static GetClassDisplayName(Class: UnrealEngineClass): string;
-	static GetPrimaryAssetIdFromClass(Class: UnrealEngineClass): PrimaryAssetId;
-	static GetPrimaryAssetIdFromSoftClassReference(SoftClassReference: any): PrimaryAssetId;
-	static IsValidClass(Class: UnrealEngineClass): boolean;
-	static IsValidSoftClassReference(SoftClassReference: any): boolean;
-	static NotEqual_SoftClassReference(A: any,B: any): boolean;
-	static ClassIsChildOf(TestClass: UnrealEngineClass,ParentClass: UnrealEngineClass): boolean;
-	static EqualEqual_ClassClass(A: UnrealEngineClass,B: UnrealEngineClass): boolean;
-	static NotEqual_ClassClass(A: UnrealEngineClass,B: UnrealEngineClass): boolean;
-	static SelectClass(A: UnrealEngineClass,B: UnrealEngineClass,bSelectA: boolean): UnrealEngineClass;
-	static CreateSaveGameObject(SaveGameClass: UnrealEngineClass): SaveGame;
-	static SpawnObject(ObjectClass: UnrealEngineClass,Outer: UObject): UObject;
-	static CreateDragDropOperation(OperationClass: UnrealEngineClass): DragDropOperation;
-}
-
-declare class UFunction extends Struct { 
-	static Load(ResourceName: string): UFunction;
-	static Find(Outer: UObject, ResourceName: string): UFunction;
-	static GetDefaultObject(): UFunction;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UFunction;
-	static C(Other: UObject | any): UFunction;
-	GetFunctionParmsSize(): number;
-	static GetFunctionParmsSize(UFunction: UFunction): number;
-}
-
 declare class DelegateFunction extends UFunction { 
 	static Load(ResourceName: string): DelegateFunction;
 	static Find(Outer: UObject, ResourceName: string): DelegateFunction;
@@ -12573,22 +13380,6 @@ declare class ObjectPropertyBase extends Property {
 	static C(Other: UObject | any): ObjectPropertyBase;
 }
 
-declare class AssetObjectProperty extends ObjectPropertyBase { 
-	static Load(ResourceName: string): AssetObjectProperty;
-	static Find(Outer: UObject, ResourceName: string): AssetObjectProperty;
-	static GetDefaultObject(): AssetObjectProperty;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetObjectProperty;
-	static C(Other: UObject | any): AssetObjectProperty;
-}
-
-declare class AssetClassProperty extends AssetObjectProperty { 
-	static Load(ResourceName: string): AssetClassProperty;
-	static Find(Outer: UObject, ResourceName: string): AssetClassProperty;
-	static GetDefaultObject(): AssetClassProperty;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetClassProperty;
-	static C(Other: UObject | any): AssetClassProperty;
-}
-
 declare class BoolProperty extends Property { 
 	static Load(ResourceName: string): BoolProperty;
 	static Find(Outer: UObject, ResourceName: string): BoolProperty;
@@ -12733,6 +13524,22 @@ declare class SetProperty extends Property {
 	static C(Other: UObject | any): SetProperty;
 }
 
+declare class SoftObjectProperty extends ObjectPropertyBase { 
+	static Load(ResourceName: string): SoftObjectProperty;
+	static Find(Outer: UObject, ResourceName: string): SoftObjectProperty;
+	static GetDefaultObject(): SoftObjectProperty;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoftObjectProperty;
+	static C(Other: UObject | any): SoftObjectProperty;
+}
+
+declare class SoftClassProperty extends SoftObjectProperty { 
+	static Load(ResourceName: string): SoftClassProperty;
+	static Find(Outer: UObject, ResourceName: string): SoftClassProperty;
+	static GetDefaultObject(): SoftClassProperty;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoftClassProperty;
+	static C(Other: UObject | any): SoftClassProperty;
+}
+
 declare class StrProperty extends Property { 
 	static Load(ResourceName: string): StrProperty;
 	static Find(Outer: UObject, ResourceName: string): StrProperty;
@@ -12881,8 +13688,8 @@ declare class ButtonWidgetStyle extends SlateWidgetStyleContainerBase {
 	static C(Other: UObject | any): ButtonWidgetStyle;
 }
 
-declare type ESlateCheckBoxType = 'CheckBox' | 'ToggleButton';
-declare var ESlateCheckBoxType : { CheckBox:'CheckBox',ToggleButton:'ToggleButton', };
+declare type ESlateCheckBoxType = 'CheckBox' | 'ToggleButton' | 'ESlateCheckBoxType_MAX';
+declare var ESlateCheckBoxType : { CheckBox:'CheckBox',ToggleButton:'ToggleButton',ESlateCheckBoxType_MAX:'ESlateCheckBoxType_MAX', };
 declare class CheckBoxStyle extends SlateWidgetStyle { 
 	CheckBoxType: ESlateCheckBoxType;
 	UncheckedImage: SlateBrush;
@@ -12958,6 +13765,7 @@ declare class FontOutlineSettings {
 	OutlineMaterial: UObject;
 	OutlineColor: LinearColor;
 	bSeparateFillAlpha: boolean;
+	bApplyOutlineToDropShadows: boolean;
 	clone() : FontOutlineSettings;
 	static C(Other: UObject | any): FontOutlineSettings;
 }
@@ -12969,7 +13777,7 @@ declare class SlateFontInfo {
 	TypefaceFontName: string;
 	Size: number;
 	FontName: string;
-	Hinting: Hinting;
+	Hinting: EFontHinting;
 	clone() : SlateFontInfo;
 	static C(Other: UObject | any): SlateFontInfo;
 }
@@ -13129,18 +13937,22 @@ declare class TextBlockWidgetStyle extends SlateWidgetStyleContainerBase {
 	static C(Other: UObject | any): TextBlockWidgetStyle;
 }
 
-declare type EColorVisionDeficiency = 'CVD_NormalVision' | 'CVD_Deuteranomly' | 'CVD_Deuteranopia' | 'CVD_Protanomly' | 'CVD_Protanopia' | 'CVD_Tritanomaly' | 'CVD_Tritanopia' | 'CVD_Achromatopsia';
-declare var EColorVisionDeficiency : { CVD_NormalVision:'CVD_NormalVision',CVD_Deuteranomly:'CVD_Deuteranomly',CVD_Deuteranopia:'CVD_Deuteranopia',CVD_Protanomly:'CVD_Protanomly',CVD_Protanopia:'CVD_Protanopia',CVD_Tritanomaly:'CVD_Tritanomaly',CVD_Tritanopia:'CVD_Tritanopia',CVD_Achromatopsia:'CVD_Achromatopsia', };
-declare type ELogTimes = 'None' | 'UTC' | 'SinceGStartTime';
-declare var ELogTimes : { None:'None',UTC:'UTC',SinceGStartTime:'SinceGStartTime', };
-declare type EAssetEditorOpenLocation = 'Default' | 'NewWindow' | 'MainWindow' | 'ContentBrowser' | 'LastDockedWindowOrNewWindow' | 'LastDockedWindowOrMainWindow' | 'LastDockedWindowOrContentBrowser';
-declare var EAssetEditorOpenLocation : { Default:'Default',NewWindow:'NewWindow',MainWindow:'MainWindow',ContentBrowser:'ContentBrowser',LastDockedWindowOrNewWindow:'LastDockedWindowOrNewWindow',LastDockedWindowOrMainWindow:'LastDockedWindowOrMainWindow',LastDockedWindowOrContentBrowser:'LastDockedWindowOrContentBrowser', };
+declare type EColorVisionDeficiency = 'NormalVision' | 'Deuteranope' | 'Protanope' | 'Tritanope' | 'EColorVisionDeficiency_MAX';
+declare var EColorVisionDeficiency : { NormalVision:'NormalVision',Deuteranope:'Deuteranope',Protanope:'Protanope',Tritanope:'Tritanope',EColorVisionDeficiency_MAX:'EColorVisionDeficiency_MAX', };
+declare type ELogTimes = 'None' | 'UTC' | 'SinceGStartTime' | 'Local' | 'ELogTimes_MAX';
+declare var ELogTimes : { None:'None',UTC:'UTC',SinceGStartTime:'SinceGStartTime',Local:'Local',ELogTimes_MAX:'ELogTimes_MAX', };
+declare type EAssetEditorOpenLocation = 'Default' | 'NewWindow' | 'MainWindow' | 'ContentBrowser' | 'LastDockedWindowOrNewWindow' | 'LastDockedWindowOrMainWindow' | 'LastDockedWindowOrContentBrowser' | 'EAssetEditorOpenLocation_MAX';
+declare var EAssetEditorOpenLocation : { Default:'Default',NewWindow:'NewWindow',MainWindow:'MainWindow',ContentBrowser:'ContentBrowser',LastDockedWindowOrNewWindow:'LastDockedWindowOrNewWindow',LastDockedWindowOrMainWindow:'LastDockedWindowOrMainWindow',LastDockedWindowOrContentBrowser:'LastDockedWindowOrContentBrowser',EAssetEditorOpenLocation_MAX:'EAssetEditorOpenLocation_MAX', };
 declare class EditorStyleSettings extends UObject { 
+	bEnableHighDPIAwareness: boolean;
+	ColorVisionDeficiencyPreviewType: EColorVisionDeficiency;
+	ColorVisionDeficiencySeverity: number;
+	bColorVisionDeficiencyCorrection: boolean;
+	bColorVisionDeficiencyCorrectionPreviewWithDeficiency: boolean;
 	SelectionColor: LinearColor;
 	PressedSelectionColor: LinearColor;
 	InactiveSelectionColor: LinearColor;
 	KeyboardFocusColor: LinearColor;
-	ColorVisionDeficiencyPreviewType: EColorVisionDeficiency;
 	EditorWindowBackgroundColor: LinearColor;
 	EditorMainWindowBackgroundOverride: SlateBrush;
 	EditorChildWindowBackgroundOverride: SlateBrush;
@@ -13167,7 +13979,7 @@ declare class EditorStyleSettings extends UObject {
 	LogFontSize: number;
 	LogTimestampMode: ELogTimes;
 	bPromoteOutputLogWarningsDuringPIE: boolean;
-	AssetEditorOpenLocation: AssetEditorOpenLocation;
+	AssetEditorOpenLocation: EAssetEditorOpenLocation;
 	bEnableColorizedEditorTabs: boolean;
 	static Load(ResourceName: string): EditorStyleSettings;
 	static Find(Outer: UObject, ResourceName: string): EditorStyleSettings;
@@ -13185,15 +13997,17 @@ declare class MaterialShaderQualitySettings extends UObject {
 	static C(Other: UObject | any): MaterialShaderQualitySettings;
 }
 
-declare type EMobileCSMQuality = 'NoFiltering' | 'PCF_1x1' | 'PCF_2x2';
-declare var EMobileCSMQuality : { NoFiltering:'NoFiltering',PCF_1x1:'PCF_1x1',PCF_2x2:'PCF_2x2', };
+declare type EMobileCSMQuality = 'NoFiltering' | 'PCF_1x1' | 'PCF_2x2' | 'EMobileCSMQuality_MAX';
+declare var EMobileCSMQuality : { NoFiltering:'NoFiltering',PCF_1x1:'PCF_1x1',PCF_2x2:'PCF_2x2',EMobileCSMQuality_MAX:'EMobileCSMQuality_MAX', };
 declare class MaterialQualityOverrides { 
+	bDiscardQualityDuringCook: boolean;
 	bEnableOverride: boolean;
 	bForceFullyRough: boolean;
 	bForceNonMetal: boolean;
 	bForceDisableLMDirectionality: boolean;
 	bForceLQReflections: boolean;
-	MobileCSMQuality: MobileCSMQuality;
+	bDisableMaterialNormalCalculation: boolean;
+	MobileCSMQuality: EMobileCSMQuality;
 	clone() : MaterialQualityOverrides;
 	static C(Other: UObject | any): MaterialQualityOverrides;
 }
@@ -13207,6 +14021,14 @@ declare class ShaderPlatformQualitySettings extends UObject {
 	static C(Other: UObject | any): ShaderPlatformQualitySettings;
 }
 
+declare class MeshDescription extends UObject { 
+	static Load(ResourceName: string): MeshDescription;
+	static Find(Outer: UObject, ResourceName: string): MeshDescription;
+	static GetDefaultObject(): MeshDescription;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshDescription;
+	static C(Other: UObject | any): MeshDescription;
+}
+
 declare class ClothingAssetFactoryBase extends UObject { 
 	static Load(ResourceName: string): ClothingAssetFactoryBase;
 	static Find(Outer: UObject, ResourceName: string): ClothingAssetFactoryBase;
@@ -13258,7 +14080,7 @@ declare class AssetRegistryHelpers extends UObject {
 	static Find(Outer: UObject, ResourceName: string): AssetRegistryHelpers;
 	static GetDefaultObject(): AssetRegistryHelpers;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetRegistryHelpers;
-	static ToStringReference(InAssetData: AssetData): StringAssetReference;
+	static ToSoftObjectPath(InAssetData: AssetData): SoftObjectPath;
 	static SetFilterTagsAndValues(InFilter: ARFilter,InTagsAndValues: TagAndValue[]): ARFilter;
 	static IsValid(InAssetData: AssetData): boolean;
 	static IsUAsset(InAssetData: AssetData): boolean;
@@ -13278,7 +14100,12 @@ declare class AssetRegistry extends Interface {
 	static Find(Outer: UObject, ResourceName: string): AssetRegistry;
 	static GetDefaultObject(): AssetRegistry;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetRegistry;
+	SearchAllAssets(bSynchronousSearch: boolean): void;
+	ScanPathsSynchronous(InPaths: string[],bForceRescan: boolean): void;
+	ScanModifiedAssetFiles(InFilePaths: string[]): void;
+	ScanFilesSynchronous(InFilePaths: string[],bForceRescan: boolean): void;
 	RunAssetsThroughFilter(AssetDataList?: AssetData[],Filter?: ARFilter): {AssetDataList: AssetData[]};
+	PrioritizeSearchPath(PathToPrioritize: string): void;
 	IsLoadingAssets(): boolean;
 	HasAssets(PackagePath: string,bRecursive: boolean): boolean;
 	GetSubPaths(InBasePath: string,OutPathList?: string[],bInRecurse?: boolean): {OutPathList: string[]};
@@ -13317,30 +14144,33 @@ declare class ConsoleSettings extends UObject {
 	static C(Other: UObject | any): ConsoleSettings;
 }
 
-declare type ETwoPlayerSplitScreenType = 'Horizontal' | 'Vertical';
-declare var ETwoPlayerSplitScreenType : { Horizontal:'Horizontal',Vertical:'Vertical', };
-declare type EThreePlayerSplitScreenType = 'FavorTop' | 'FavorBottom';
-declare var EThreePlayerSplitScreenType : { FavorTop:'FavorTop',FavorBottom:'FavorBottom', };
+declare type ETwoPlayerSplitScreenType = 'Horizontal' | 'Vertical' | 'ETwoPlayerSplitScreenType_MAX';
+declare var ETwoPlayerSplitScreenType : { Horizontal:'Horizontal',Vertical:'Vertical',ETwoPlayerSplitScreenType_MAX:'ETwoPlayerSplitScreenType_MAX', };
+declare type EThreePlayerSplitScreenType = 'FavorTop' | 'FavorBottom' | 'Vertical' | 'EThreePlayerSplitScreenType_MAX';
+declare var EThreePlayerSplitScreenType : { FavorTop:'FavorTop',FavorBottom:'FavorBottom',Vertical:'Vertical',EThreePlayerSplitScreenType_MAX:'EThreePlayerSplitScreenType_MAX', };
+declare type EFourPlayerSplitScreenType = 'Grid' | 'Vertical' | 'EFourPlayerSplitScreenType_MAX';
+declare var EFourPlayerSplitScreenType : { Grid:'Grid',Vertical:'Vertical',EFourPlayerSplitScreenType_MAX:'EFourPlayerSplitScreenType_MAX', };
 declare class GameModeName { 
 	Name: string;
-	GameMode: StringClassReference;
+	GameMode: SoftClassPath;
 	clone() : GameModeName;
 	static C(Other: UObject | any): GameModeName;
 }
 
 declare class GameMapsSettings extends UObject { 
-	EditorStartupMap: StringAssetReference;
+	EditorStartupMap: SoftObjectPath;
 	LocalMapOptions: string;
-	TransitionMap: StringAssetReference;
+	TransitionMap: SoftObjectPath;
 	bUseSplitscreen: boolean;
 	TwoPlayerSplitscreenLayout: ETwoPlayerSplitScreenType;
 	ThreePlayerSplitscreenLayout: EThreePlayerSplitScreenType;
+	FourPlayerSplitscreenLayout: EFourPlayerSplitScreenType;
 	bOffsetPlayerGamepadIds: boolean;
-	GameInstanceClass: StringClassReference;
-	GameDefaultMap: StringAssetReference;
-	ServerDefaultMap: StringAssetReference;
-	GlobalDefaultGameMode: StringClassReference;
-	GlobalDefaultServerGameMode: StringClassReference;
+	GameInstanceClass: SoftClassPath;
+	GameDefaultMap: SoftObjectPath;
+	ServerDefaultMap: SoftObjectPath;
+	GlobalDefaultGameMode: SoftClassPath;
+	GlobalDefaultServerGameMode: SoftClassPath;
 	GameModeMapPrefixes: GameModeName[];
 	GameModeClassAliases: GameModeName[];
 	static Load(ResourceName: string): GameMapsSettings;
@@ -13405,6 +14235,8 @@ declare class GeneralProjectSettings extends UObject {
 	bShouldWindowPreserveAspectRatio: boolean;
 	bUseBorderlessWindow: boolean;
 	bStartInVR: boolean;
+	bStartInAR: boolean;
+	bSupportAR: boolean;
 	bAllowWindowResize: boolean;
 	bAllowClose: boolean;
 	bAllowMaximize: boolean;
@@ -13434,6 +14266,22 @@ declare class HandlerComponentFactory extends UObject {
 	static C(Other: UObject | any): HandlerComponentFactory;
 }
 
+declare class NetAnalyticsDataConfig { 
+	DataName: string;
+	bEnabled: boolean;
+	clone() : NetAnalyticsDataConfig;
+	static C(Other: UObject | any): NetAnalyticsDataConfig;
+}
+
+declare class NetAnalyticsAggregatorConfig extends UObject { 
+	NetAnalyticsData: NetAnalyticsDataConfig[];
+	static Load(ResourceName: string): NetAnalyticsAggregatorConfig;
+	static Find(Outer: UObject, ResourceName: string): NetAnalyticsAggregatorConfig;
+	static GetDefaultObject(): NetAnalyticsAggregatorConfig;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NetAnalyticsAggregatorConfig;
+	static C(Other: UObject | any): NetAnalyticsAggregatorConfig;
+}
+
 declare class JsonUtilitiesDummyObject extends UObject { 
 	static Load(ResourceName: string): JsonUtilitiesDummyObject;
 	static Find(Outer: UObject, ResourceName: string): JsonUtilitiesDummyObject;
@@ -13442,24 +14290,6 @@ declare class JsonUtilitiesDummyObject extends UObject {
 	static C(Other: UObject | any): JsonUtilitiesDummyObject;
 }
 
-declare type EPIEPreviewDeviceType = 'Unset' | 'Android' | 'IOS' | 'TVOS' | 'MAX';
-declare var EPIEPreviewDeviceType : { Unset:'Unset',Android:'Android',IOS:'IOS',TVOS:'TVOS',MAX:'MAX', };
-declare class PIEPreviewDeviceSpecification extends UObject { 
-	PreviewDeviceType: PreviewDeviceType;
-	GPUFamily: string;
-	GLVersion: string;
-	VulkanVersion: string;
-	AndroidVersion: string;
-	DeviceMake: string;
-	DeviceModel: string;
-	UsingHoudini: boolean;
-	static Load(ResourceName: string): PIEPreviewDeviceSpecification;
-	static Find(Outer: UObject, ResourceName: string): PIEPreviewDeviceSpecification;
-	static GetDefaultObject(): PIEPreviewDeviceSpecification;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PIEPreviewDeviceSpecification;
-	static C(Other: UObject | any): PIEPreviewDeviceSpecification;
-}
-
 declare class PropertyConfigFileDisplayRow extends UObject { 
 	ConfigFileName: string;
 	ExternalProperty: Property;
@@ -13481,6 +14311,36 @@ declare class ConfigHierarchyPropertyView extends UObject {
 	static C(Other: UObject | any): ConfigHierarchyPropertyView;
 }
 
+declare type EPIEPreviewDeviceType = 'Unset' | 'Android' | 'IOS' | 'TVOS' | 'MAX';
+declare var EPIEPreviewDeviceType : { Unset:'Unset',Android:'Android',IOS:'IOS',TVOS:'TVOS',MAX:'MAX', };
+declare class PIEPreviewDeviceSpecification extends UObject { 
+	PreviewDeviceType: EPIEPreviewDeviceType;
+	GPUFamily: string;
+	GLVersion: string;
+	VulkanVersion: string;
+	AndroidVersion: string;
+	DeviceMake: string;
+	DeviceModel: string;
+	DeviceBuildNumber: string;
+	UsingHoudini: boolean;
+	static Load(ResourceName: string): PIEPreviewDeviceSpecification;
+	static Find(Outer: UObject, ResourceName: string): PIEPreviewDeviceSpecification;
+	static GetDefaultObject(): PIEPreviewDeviceSpecification;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PIEPreviewDeviceSpecification;
+	static C(Other: UObject | any): PIEPreviewDeviceSpecification;
+}
+
+declare class PIEPreviewSettings extends UObject { 
+	WindowPosX: number;
+	WindowPosY: number;
+	WindowScalingFactor: number;
+	static Load(ResourceName: string): PIEPreviewSettings;
+	static Find(Outer: UObject, ResourceName: string): PIEPreviewSettings;
+	static GetDefaultObject(): PIEPreviewSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PIEPreviewSettings;
+	static C(Other: UObject | any): PIEPreviewSettings;
+}
+
 declare class ClothingAssetCustomData extends UObject { 
 	static Load(ResourceName: string): ClothingAssetCustomData;
 	static Find(Outer: UObject, ResourceName: string): ClothingAssetCustomData;
@@ -13489,8 +14349,8 @@ declare class ClothingAssetCustomData extends UObject {
 	static C(Other: UObject | any): ClothingAssetCustomData;
 }
 
-declare type EClothingWindMethod = 'Legacy' | 'Accurate';
-declare var EClothingWindMethod : { Legacy:'Legacy',Accurate:'Accurate', };
+declare type EClothingWindMethod = 'Legacy' | 'Accurate' | 'EClothingWindMethod_MAX';
+declare var EClothingWindMethod : { Legacy:'Legacy',Accurate:'Accurate',EClothingWindMethod_MAX:'EClothingWindMethod_MAX', };
 declare class ClothConstraintSetup { 
 	Stiffness: number;
 	StiffnessMultiplier: number;
@@ -13501,7 +14361,7 @@ declare class ClothConstraintSetup {
 }
 
 declare class ClothConfig { 
-	WindMethod: WindMethod;
+	WindMethod: EClothingWindMethod;
 	VerticalConstraintConfig: ClothConstraintSetup;
 	HorizontalConstraintConfig: ClothConstraintSetup;
 	BendConstraintConfig: ClothConstraintSetup;
@@ -13521,14 +14381,19 @@ declare class ClothConfig {
 	SolverFrequency: number;
 	StiffnessFrequency: number;
 	GravityScale: number;
+	GravityOverride: Vector;
+	bUseGravityOverride: boolean;
 	TetherStiffness: number;
 	TetherLimit: number;
 	CollisionThickness: number;
+	AnimDriveSpringStiffness: number;
+	AnimDriveDamperStiffness: number;
 	clone() : ClothConfig;
 	static C(Other: UObject | any): ClothConfig;
 }
 
 declare class ClothVertBoneData { 
+	NumInfluences: number;
 	BoneIndices: any;
 	BoneWeights: number;
 	clone() : ClothVertBoneData;
@@ -13538,10 +14403,12 @@ declare class ClothVertBoneData {
 declare class ClothPhysicalMeshData { 
 	Vertices: Vector[];
 	Normals: Vector[];
+	VertexColors: Color[];
 	Indices: any[];
 	MaxDistances: number[];
 	BackstopDistances: number[];
 	BackstopRadiuses: number[];
+	AnimDriveMultipliers: number[];
 	InverseMasses: number[];
 	BoneData: ClothVertBoneData[];
 	MaxBoneWeights: number;
@@ -13566,7 +14433,7 @@ declare class ClothCollisionPrim_SphereConnection {
 }
 
 declare class ClothCollisionPrim_Convex { 
-	Planes: Plane[];
+	planes: Plane[];
 	BoneIndex: number;
 	clone() : ClothCollisionPrim_Convex;
 	static C(Other: UObject | any): ClothCollisionPrim_Convex;
@@ -13580,11 +14447,11 @@ declare class ClothCollisionData {
 	static C(Other: UObject | any): ClothCollisionData;
 }
 
-declare type MaskTarget_PhysMesh = 'None' | 'MaxDistance' | 'BackstopDistance' | 'BackstopRadius';
-declare var MaskTarget_PhysMesh : { None:'None',MaxDistance:'MaxDistance',BackstopDistance:'BackstopDistance',BackstopRadius:'BackstopRadius', };
+declare type MaskTarget_PhysMesh = 'None' | 'MaxDistance' | 'BackstopDistance' | 'BackstopRadius' | 'AnimDriveMultiplier' | 'MaskTarget_MAX';
+declare var MaskTarget_PhysMesh : { None:'None',MaxDistance:'MaxDistance',BackstopDistance:'BackstopDistance',BackstopRadius:'BackstopRadius',AnimDriveMultiplier:'AnimDriveMultiplier',MaskTarget_MAX:'MaskTarget_MAX', };
 declare class ClothParameterMask_PhysMesh { 
 	MaskName: string;
-	CurrentTarget: CurrentTarget;
+	CurrentTarget: MaskTarget_PhysMesh;
 	MaxValue: number;
 	MinValue: number;
 	Values: number[];
@@ -13625,6 +14492,18 @@ declare class ClothingSimulationFactoryNv extends ClothingSimulationFactory {
 	static C(Other: UObject | any): ClothingSimulationFactoryNv;
 }
 
+declare class ClothingSimulationInteractorNv extends ClothingSimulationInteractor { 
+	static Load(ResourceName: string): ClothingSimulationInteractorNv;
+	static Find(Outer: UObject, ResourceName: string): ClothingSimulationInteractorNv;
+	static GetDefaultObject(): ClothingSimulationInteractorNv;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClothingSimulationInteractorNv;
+	SetAnimDriveSpringStiffness(InStiffness: number): void;
+	SetAnimDriveDamperStiffness(InStiffness: number): void;
+	EnableGravityOverride(InVector: Vector): void;
+	DisableGravityOverride(): void;
+	static C(Other: UObject | any): ClothingSimulationInteractorNv;
+}
+
 declare class ClothingAssetFactory extends ClothingAssetFactoryBase { 
 	static Load(ResourceName: string): ClothingAssetFactory;
 	static Find(Outer: UObject, ResourceName: string): ClothingAssetFactory;
@@ -13633,131 +14512,1132 @@ declare class ClothingAssetFactory extends ClothingAssetFactoryBase {
 	static C(Other: UObject | any): ClothingAssetFactory;
 }
 
-declare type ELocalizationTargetConflictStatus = 'Unknown' | 'ConflictsPresent' | 'Clear';
-declare var ELocalizationTargetConflictStatus : { Unknown:'Unknown',ConflictsPresent:'ConflictsPresent',Clear:'Clear', };
-declare class FilePath { 
-	FilePath: string;
-	clone() : FilePath;
-	static C(Other: UObject | any): FilePath;
-}
-
-declare class GatherTextSearchDirectory { 
-	Path: string;
-	clone() : GatherTextSearchDirectory;
-	static C(Other: UObject | any): GatherTextSearchDirectory;
+declare class SoundNode extends UObject { 
+	ChildNodes: SoundNode[];
+	GraphNode: EdGraphNode;
+	static Load(ResourceName: string): SoundNode;
+	static Find(Outer: UObject, ResourceName: string): SoundNode;
+	static GetDefaultObject(): SoundNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNode;
+	static C(Other: UObject | any): SoundNode;
 }
 
-declare class GatherTextExcludePath { 
-	Pattern: string;
-	clone() : GatherTextExcludePath;
-	static C(Other: UObject | any): GatherTextExcludePath;
+declare class SoundCue extends SoundBase { 
+	bOverrideAttenuation: boolean;
+	bExcludeFromRandomNodeBranchCulling: boolean;
+	FirstNode: SoundNode;
+	VolumeMultiplier: number;
+	PitchMultiplier: number;
+	AttenuationOverrides: SoundAttenuationSettings;
+	AllNodes: SoundNode[];
+	SoundCueGraph: EdGraph;
+	SubtitlePriority: number;
+	static Load(ResourceName: string): SoundCue;
+	static Find(Outer: UObject, ResourceName: string): SoundCue;
+	static GetDefaultObject(): SoundCue;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCue;
+	static C(Other: UObject | any): SoundCue;
 }
 
-declare class GatherTextFileExtension { 
-	Pattern: string;
-	clone() : GatherTextFileExtension;
-	static C(Other: UObject | any): GatherTextFileExtension;
+declare class VREditorAssetContainer extends DataAsset { 
+	DockableWindowCloseSound: SoundBase;
+	DockableWindowOpenSound: SoundBase;
+	DockableWindowDropSound: SoundBase;
+	DockableWindowDragSound: SoundBase;
+	DropFromContentBrowserSound: SoundBase;
+	RadialMenuOpenSound: SoundBase;
+	RadialMenuCloseSound: SoundBase;
+	TeleportSound: SoundBase;
+	ButtonPressSound: SoundCue;
+	AutoScaleSound: SoundBase;
+	GenericHMDMesh: StaticMesh;
+	PlaneMesh: StaticMesh;
+	CylinderMesh: StaticMesh;
+	LaserPointerStartMesh: StaticMesh;
+	LaserPointerMesh: StaticMesh;
+	LaserPointerEndMesh: StaticMesh;
+	LaserPointerHoverMesh: StaticMesh;
+	VivePreControllerMesh: StaticMesh;
+	OculusControllerMesh: StaticMesh;
+	GenericControllerMesh: StaticMesh;
+	TeleportRootMesh: StaticMesh;
+	WindowMesh: StaticMesh;
+	WindowSelectionBarMesh: StaticMesh;
+	WindowCloseButtonMesh: StaticMesh;
+	RadialMenuMainMesh: StaticMesh;
+	RadialMenuPointerMesh: StaticMesh;
+	PointerCursorMesh: StaticMesh;
+	LineSegmentCylinderMesh: StaticMesh;
+	JointSphereMesh: StaticMesh;
+	DockingButtonMesh: StaticMesh;
+	GridMaterial: MaterialInterface;
+	LaserPointerMaterial: MaterialInterface;
+	LaserPointerTranslucentMaterial: MaterialInterface;
+	WorldMovementPostProcessMaterial: Material;
+	TextMaterial: MaterialInterface;
+	VivePreControllerMaterial: MaterialInterface;
+	OculusControllerMaterial: MaterialInterface;
+	TeleportMaterial: MaterialInterface;
+	WindowMaterial: MaterialInterface;
+	WindowTranslucentMaterial: MaterialInterface;
+	LineMaterial: Material;
+	TranslucentTextMaterial: MaterialInterface;
+	TextFont: Font;
+	static Load(ResourceName: string): VREditorAssetContainer;
+	static Find(Outer: UObject, ResourceName: string): VREditorAssetContainer;
+	static GetDefaultObject(): VREditorAssetContainer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorAssetContainer;
+	static C(Other: UObject | any): VREditorAssetContainer;
+}
+
+declare class EditorWorldExtensionActorData { 
+	Actor: Actor;
+	bValidForPIE: boolean;
+	clone() : EditorWorldExtensionActorData;
+	static C(Other: UObject | any): EditorWorldExtensionActorData;
 }
 
-declare class GatherTextFromTextFilesConfiguration { 
-	IsEnabled: boolean;
-	SearchDirectories: GatherTextSearchDirectory[];
-	ExcludePathWildcards: GatherTextExcludePath[];
-	FileExtensions: GatherTextFileExtension[];
-	ShouldGatherFromEditorOnlyData: boolean;
-	clone() : GatherTextFromTextFilesConfiguration;
-	static C(Other: UObject | any): GatherTextFromTextFilesConfiguration;
+declare class EditorWorldExtension extends UObject { 
+	ExtensionActors: EditorWorldExtensionActorData[];
+	static Load(ResourceName: string): EditorWorldExtension;
+	static Find(Outer: UObject, ResourceName: string): EditorWorldExtension;
+	static GetDefaultObject(): EditorWorldExtension;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorWorldExtension;
+	static C(Other: UObject | any): EditorWorldExtension;
 }
 
-declare class GatherTextIncludePath { 
-	Pattern: string;
-	clone() : GatherTextIncludePath;
-	static C(Other: UObject | any): GatherTextIncludePath;
+declare type EHorizTextAligment = 'EHTA_Left' | 'EHTA_Center' | 'EHTA_Right' | 'EHTA_MAX';
+declare var EHorizTextAligment : { EHTA_Left:'EHTA_Left',EHTA_Center:'EHTA_Center',EHTA_Right:'EHTA_Right',EHTA_MAX:'EHTA_MAX', };
+declare type EVerticalTextAligment = 'EVRTA_TextTop' | 'EVRTA_TextCenter' | 'EVRTA_TextBottom' | 'EVRTA_QuadTop' | 'EVRTA_MAX';
+declare var EVerticalTextAligment : { EVRTA_TextTop:'EVRTA_TextTop',EVRTA_TextCenter:'EVRTA_TextCenter',EVRTA_TextBottom:'EVRTA_TextBottom',EVRTA_QuadTop:'EVRTA_QuadTop',EVRTA_MAX:'EVRTA_MAX', };
+declare class TextRenderComponent extends PrimitiveComponent { 
+	text: string;
+	TextMaterial: MaterialInterface;
+	Font: Font;
+	HorizontalAlignment: EHorizTextAligment;
+	VerticalAlignment: EVerticalTextAligment;
+	TextRenderColor: Color;
+	XScale: number;
+	YScale: number;
+	WorldSize: number;
+	InvDefaultSize: number;
+	HorizSpacingAdjust: number;
+	VertSpacingAdjust: number;
+	bAlwaysRenderAsText: boolean;
+	static Load(ResourceName: string): TextRenderComponent;
+	static Find(Outer: UObject, ResourceName: string): TextRenderComponent;
+	static GetDefaultObject(): TextRenderComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextRenderComponent;
+	SetYScale(Value: number): void;
+	SetXScale(Value: number): void;
+	SetWorldSize(Value: number): void;
+	SetVertSpacingAdjust(Value: number): void;
+	SetVerticalAlignment(Value: EVerticalTextAligment): void;
+	SetTextRenderColor(Value: Color): void;
+	SetTextMaterial(Material: MaterialInterface): void;
+	SetText(Value: string): void;
+	SetHorizSpacingAdjust(Value: number): void;
+	SetHorizontalAlignment(Value: EHorizTextAligment): void;
+	SetFont(Value: Font): void;
+	K2_SetText(Value: string): void;
+	GetTextWorldSize(): Vector;
+	GetTextLocalSize(): Vector;
+	static C(Other: UObject | any): TextRenderComponent;
+}
+
+declare class PostProcessComponent extends SceneComponent { 
+	Settings: PostProcessSettings;
+	Priority: number;
+	BlendRadius: number;
+	BlendWeight: number;
+	bEnabled: boolean;
+	bUnbound: boolean;
+	static Load(ResourceName: string): PostProcessComponent;
+	static Find(Outer: UObject, ResourceName: string): PostProcessComponent;
+	static GetDefaultObject(): PostProcessComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PostProcessComponent;
+	static C(Other: UObject | any): PostProcessComponent;
+}
+
+declare class VREditorAvatarActor extends Actor { 
+	HeadMeshComponent: StaticMeshComponent;
+	WorldMovementGridMeshComponent: StaticMeshComponent;
+	WorldMovementGridMID: MaterialInstanceDynamic;
+	WorldMovementGridOpacity: number;
+	bIsDrawingWorldMovementPostProcess: boolean;
+	WorldMovementPostProcessMaterial: MaterialInstanceDynamic;
+	ScaleProgressMeshComponent: StaticMeshComponent;
+	CurrentScaleProgressMeshComponent: StaticMeshComponent;
+	UserScaleIndicatorText: TextRenderComponent;
+	FixedUserScaleMID: MaterialInstanceDynamic;
+	TranslucentFixedUserScaleMID: MaterialInstanceDynamic;
+	CurrentUserScaleMID: MaterialInstanceDynamic;
+	TranslucentCurrentUserScaleMID: MaterialInstanceDynamic;
+	PostProcessComponent: PostProcessComponent;
+	VRMode: VREditorMode;
+	static GetDefaultObject(): VREditorAvatarActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorAvatarActor;
+	static C(Other: UObject | any): VREditorAvatarActor;
+}
+
+declare class VREditorBaseActor extends Actor { 
+	VRMode: VREditorMode;
+	static GetDefaultObject(): VREditorBaseActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorBaseActor;
+	static C(Other: UObject | any): VREditorBaseActor;
+}
+
+declare type EWidgetSpace = 'World' | 'Screen' | 'EWidgetSpace_MAX';
+declare var EWidgetSpace : { World:'World',Screen:'Screen',EWidgetSpace_MAX:'EWidgetSpace_MAX', };
+declare type EWidgetTimingPolicy = 'RealTime' | 'GameTime' | 'EWidgetTimingPolicy_MAX';
+declare var EWidgetTimingPolicy : { RealTime:'RealTime',GameTime:'GameTime',EWidgetTimingPolicy_MAX:'EWidgetTimingPolicy_MAX', };
+declare type EWidgetBlendMode = 'Opaque' | 'Masked' | 'Transparent' | 'EWidgetBlendMode_MAX';
+declare var EWidgetBlendMode : { Opaque:'Opaque',Masked:'Masked',Transparent:'Transparent',EWidgetBlendMode_MAX:'EWidgetBlendMode_MAX', };
+declare type EWidgetGeometryMode = 'Plane' | 'Cylinder' | 'EWidgetGeometryMode_MAX';
+declare var EWidgetGeometryMode : { Plane:'Plane',Cylinder:'Cylinder',EWidgetGeometryMode_MAX:'EWidgetGeometryMode_MAX', };
+declare class WidgetComponent extends MeshComponent { 
+	Space: EWidgetSpace;
+	TimingPolicy: EWidgetTimingPolicy;
+	WidgetClass: UnrealEngineClass;
+	DrawSize: IntPoint;
+	bManuallyRedraw: boolean;
+	bRedrawRequested: boolean;
+	RedrawTime: number;
+	CurrentDrawSize: IntPoint;
+	bDrawAtDesiredSize: boolean;
+	Pivot: Vector2D;
+	bReceiveHardwareInput: boolean;
+	bWindowFocusable: boolean;
+	bApplyGammaCorrection: boolean;
+	OwnerPlayer: LocalPlayer;
+	BackgroundColor: LinearColor;
+	TintColorAndOpacity: LinearColor;
+	OpacityFromTexture: number;
+	BlendMode: EWidgetBlendMode;
+	bIsTwoSided: boolean;
+	TickWhenOffscreen: boolean;
+	Widget: UserWidget;
+	BodySetup: BodySetup;
+	TranslucentMaterial: MaterialInterface;
+	TranslucentMaterial_OneSided: MaterialInterface;
+	OpaqueMaterial: MaterialInterface;
+	OpaqueMaterial_OneSided: MaterialInterface;
+	MaskedMaterial: MaterialInterface;
+	MaskedMaterial_OneSided: MaterialInterface;
+	RenderTarget: TextureRenderTarget2D;
+	MaterialInstance: MaterialInstanceDynamic;
+	bAddedToScreen: boolean;
+	bEditTimeUsable: boolean;
+	SharedLayerName: string;
+	LayerZOrder: number;
+	GeometryMode: EWidgetGeometryMode;
+	CylinderArcAngle: number;
+	static Load(ResourceName: string): WidgetComponent;
+	static Find(Outer: UObject, ResourceName: string): WidgetComponent;
+	static GetDefaultObject(): WidgetComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetComponent;
+	SetWidget(Widget: UserWidget): void;
+	SetTintColorAndOpacity(NewTintColorAndOpacity: LinearColor): void;
+	SetOwnerPlayer(LocalPlayer: LocalPlayer): void;
+	SetManuallyRedraw(bUseManualRedraw: boolean): void;
+	SetDrawSize(Size: Vector2D): void;
+	SetBackgroundColor(NewBackgroundColor: LinearColor): void;
+	RequestRedraw(): void;
+	GetUserWidgetObject(): UserWidget;
+	GetRenderTarget(): TextureRenderTarget2D;
+	GetOwnerPlayer(): LocalPlayer;
+	GetMaterialInstance(): MaterialInstanceDynamic;
+	GetDrawSize(): Vector2D;
+	static C(Other: UObject | any): WidgetComponent;
+}
+
+declare type EVREditorWidgetDrawingPolicy = 'Always' | 'Hovering' | 'EVREditorWidgetDrawingPolicy_MAX';
+declare var EVREditorWidgetDrawingPolicy : { Always:'Always',Hovering:'Hovering',EVREditorWidgetDrawingPolicy_MAX:'EVREditorWidgetDrawingPolicy_MAX', };
+declare class VREditorWidgetComponent extends WidgetComponent { 
+	DrawingPolicy: EVREditorWidgetDrawingPolicy;
+	bIsHovering: boolean;
+	bHasEverDrawn: boolean;
+	static Load(ResourceName: string): VREditorWidgetComponent;
+	static Find(Outer: UObject, ResourceName: string): VREditorWidgetComponent;
+	static GetDefaultObject(): VREditorWidgetComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorWidgetComponent;
+	static C(Other: UObject | any): VREditorWidgetComponent;
+}
+
+declare class VREditorFloatingUI extends VREditorBaseActor { 
+	UserWidget: UserWidget;
+	WidgetComponent: VREditorWidgetComponent;
+	WindowMeshComponent: StaticMeshComponent;
+	UserWidgetClass: UnrealEngineClass;
+	static GetDefaultObject(): VREditorFloatingUI;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorFloatingUI;
+	static C(Other: UObject | any): VREditorFloatingUI;
+}
+
+declare class VREditorRadialFloatingUI extends VREditorBaseActor { 
+	WidgetComponents: VREditorWidgetComponent[];
+	WindowMeshComponent: StaticMeshComponent;
+	ArrowMeshComponent: StaticMeshComponent;
+	CentralWidgetComponent: VREditorWidgetComponent;
+	static GetDefaultObject(): VREditorRadialFloatingUI;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorRadialFloatingUI;
+	static C(Other: UObject | any): VREditorRadialFloatingUI;
 }
 
-declare class GatherTextFromPackagesConfiguration { 
-	IsEnabled: boolean;
-	IncludePathWildcards: GatherTextIncludePath[];
-	ExcludePathWildcards: GatherTextExcludePath[];
-	FileExtensions: GatherTextFileExtension[];
-	Collections: string[];
-	ShouldGatherFromEditorOnlyData: boolean;
-	SkipGatherCache: boolean;
-	clone() : GatherTextFromPackagesConfiguration;
-	static C(Other: UObject | any): GatherTextFromPackagesConfiguration;
+declare class ViewportDragOperation extends UObject { 
+	static Load(ResourceName: string): ViewportDragOperation;
+	static Find(Outer: UObject, ResourceName: string): ViewportDragOperation;
+	static GetDefaultObject(): ViewportDragOperation;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportDragOperation;
+	static C(Other: UObject | any): ViewportDragOperation;
 }
 
-declare class MetaDataKeyName { 
-	Name: string;
-	clone() : MetaDataKeyName;
-	static C(Other: UObject | any): MetaDataKeyName;
+declare class ViewportDragOperationComponent extends ActorComponent { 
+	DragOperation: ViewportDragOperation;
+	DragOperationSubclass: UnrealEngineClass;
+	static Load(ResourceName: string): ViewportDragOperationComponent;
+	static Find(Outer: UObject, ResourceName: string): ViewportDragOperationComponent;
+	static GetDefaultObject(): ViewportDragOperationComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportDragOperationComponent;
+	static C(Other: UObject | any): ViewportDragOperationComponent;
 }
 
-declare class MetaDataTextKeyPattern { 
-	Pattern: string;
-	clone() : MetaDataTextKeyPattern;
-	static C(Other: UObject | any): MetaDataTextKeyPattern;
+declare class VREditorDockableWindow extends VREditorFloatingUI { 
+	DockButtonMeshComponent: StaticMeshComponent;
+	SelectionBarMeshComponent: StaticMeshComponent;
+	CloseButtonMeshComponent: StaticMeshComponent;
+	DockButtonMID: MaterialInstanceDynamic;
+	SelectionBarMID: MaterialInstanceDynamic;
+	SelectionBarTranslucentMID: MaterialInstanceDynamic;
+	CloseButtonMID: MaterialInstanceDynamic;
+	CloseButtonTranslucentMID: MaterialInstanceDynamic;
+	DragOperationComponent: ViewportDragOperationComponent;
+	static GetDefaultObject(): VREditorDockableWindow;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorDockableWindow;
+	static C(Other: UObject | any): VREditorDockableWindow;
 }
 
-declare class MetaDataKeyGatherSpecification { 
-	MetaDataKey: MetaDataKeyName;
-	TextNamespace: string;
-	TextKeyPattern: MetaDataTextKeyPattern;
-	clone() : MetaDataKeyGatherSpecification;
-	static C(Other: UObject | any): MetaDataKeyGatherSpecification;
+declare class ViewportTransformer extends UObject { 
+	ViewportWorldInteraction: ViewportWorldInteraction;
+	static Load(ResourceName: string): ViewportTransformer;
+	static Find(Outer: UObject, ResourceName: string): ViewportTransformer;
+	static GetDefaultObject(): ViewportTransformer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportTransformer;
+	Shutdown(): void;
+	ShouldCenterTransformGizmoPivot(): boolean;
+	OnStopDragging(Interactor: ViewportInteractor): void;
+	OnStartDragging(Interactor: ViewportInteractor): void;
+	Init(InitViewportWorldInteraction: ViewportWorldInteraction): void;
+	CanAlignToActors(): boolean;
+	static C(Other: UObject | any): ViewportTransformer;
 }
 
-declare class GatherTextFromMetaDataConfiguration { 
-	IsEnabled: boolean;
-	IncludePathWildcards: GatherTextIncludePath[];
-	ExcludePathWildcards: GatherTextExcludePath[];
-	KeySpecifications: MetaDataKeyGatherSpecification[];
-	ShouldGatherFromEditorOnlyData: boolean;
-	clone() : GatherTextFromMetaDataConfiguration;
-	static C(Other: UObject | any): GatherTextFromMetaDataConfiguration;
+declare class GizmoHandle { 
+	clone() : GizmoHandle;
+	static C(Other: UObject | any): GizmoHandle;
 }
 
-declare type ELocalizedTextCollapseMode = 'IdenticalTextIdAndSource' | 'IdenticalPackageIdTextIdAndSource' | 'IdenticalNamespaceAndSource';
-declare var ELocalizedTextCollapseMode : { IdenticalTextIdAndSource:'IdenticalTextIdAndSource',IdenticalPackageIdTextIdAndSource:'IdenticalPackageIdTextIdAndSource',IdenticalNamespaceAndSource:'IdenticalNamespaceAndSource', };
-declare class LocalizationExportingSettings { 
-	CollapseMode: CollapseMode;
-	ShouldPersistCommentsOnExport: boolean;
-	ShouldAddSourceLocationsAsComments: boolean;
-	clone() : LocalizationExportingSettings;
-	static C(Other: UObject | any): LocalizationExportingSettings;
+declare class GizmoHandleGroup extends SceneComponent { 
+	GizmoMaterial: MaterialInterface;
+	TranslucentGizmoMaterial: MaterialInterface;
+	Handles: GizmoHandle[];
+	OwningTransformGizmoActor: BaseTransformGizmo;
+	DragOperationComponent: ViewportDragOperationComponent;
+	static Load(ResourceName: string): GizmoHandleGroup;
+	static Find(Outer: UObject, ResourceName: string): GizmoHandleGroup;
+	static GetDefaultObject(): GizmoHandleGroup;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoHandleGroup;
+	static C(Other: UObject | any): GizmoHandleGroup;
 }
 
-declare class LocalizationCompilationSettings { 
-	SkipSourceCheck: boolean;
-	clone() : LocalizationCompilationSettings;
-	static C(Other: UObject | any): LocalizationCompilationSettings;
+declare class BaseTransformGizmo extends Actor { 
+	SceneComponent: SceneComponent;
+	AllHandleGroups: GizmoHandleGroup[];
+	WorldInteraction: ViewportWorldInteraction;
+	static GetDefaultObject(): BaseTransformGizmo;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseTransformGizmo;
+	static C(Other: UObject | any): BaseTransformGizmo;
 }
 
-declare class DirectoryPath { 
-	Path: string;
-	clone() : DirectoryPath;
-	static C(Other: UObject | any): DirectoryPath;
+declare class MouseCursorInteractor extends ViewportInteractor { 
+	static Load(ResourceName: string): MouseCursorInteractor;
+	static Find(Outer: UObject, ResourceName: string): MouseCursorInteractor;
+	static GetDefaultObject(): MouseCursorInteractor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MouseCursorInteractor;
+	static C(Other: UObject | any): MouseCursorInteractor;
 }
 
-declare class LocalizationImportDialogueSettings { 
-	RawAudioPath: DirectoryPath;
-	ImportedDialogueFolder: string;
-	bImportNativeAsSource: boolean;
-	clone() : LocalizationImportDialogueSettings;
-	static C(Other: UObject | any): LocalizationImportDialogueSettings;
+declare class ViewportInteractionAssetContainer extends DataAsset { 
+	GizmoHandleSelectedSound: SoundBase;
+	GizmoHandleDropSound: SoundBase;
+	SelectionChangeSound: SoundBase;
+	SelectionDropSound: SoundBase;
+	SelectionStartDragSound: SoundBase;
+	GridSnapSound: SoundBase;
+	ActorSnapSound: SoundBase;
+	UndoSound: SoundBase;
+	RedoSound: SoundBase;
+	GridMesh: StaticMesh;
+	TranslationHandleMesh: StaticMesh;
+	UniformScaleHandleMesh: StaticMesh;
+	ScaleHandleMesh: StaticMesh;
+	PlaneTranslationHandleMesh: StaticMesh;
+	RotationHandleMesh: StaticMesh;
+	RotationHandleSelectedMesh: StaticMesh;
+	StartRotationIndicatorMesh: StaticMesh;
+	CurrentRotationIndicatorMesh: StaticMesh;
+	FreeRotationHandleMesh: StaticMesh;
+	GridMaterial: MaterialInterface;
+	TransformGizmoMaterial: MaterialInterface;
+	TranslucentTransformGizmoMaterial: MaterialInterface;
+	static Load(ResourceName: string): ViewportInteractionAssetContainer;
+	static Find(Outer: UObject, ResourceName: string): ViewportInteractionAssetContainer;
+	static GetDefaultObject(): ViewportInteractionAssetContainer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportInteractionAssetContainer;
+	static C(Other: UObject | any): ViewportInteractionAssetContainer;
 }
 
-declare class CultureStatistics { 
-	CultureName: string;
-	WordCount: any;
-	clone() : CultureStatistics;
-	static C(Other: UObject | any): CultureStatistics;
+declare class ViewportWorldInteraction extends EditorWorldExtension { 
+	Interactors: ViewportInteractor[];
+	ViewportTransformer: ViewportTransformer;
+	TransformGizmoActor: BaseTransformGizmo;
+	SnapGridActor: Actor;
+	SnapGridMeshComponent: StaticMeshComponent;
+	SnapGridMID: MaterialInstanceDynamic;
+	DefaultMouseCursorInteractor: MouseCursorInteractor;
+	ActorsToExcludeFromHitTest: any[];
+	AssetContainer: ViewportInteractionAssetContainer;
+	static Load(ResourceName: string): ViewportWorldInteraction;
+	static Find(Outer: UObject, ResourceName: string): ViewportWorldInteraction;
+	static GetDefaultObject(): ViewportWorldInteraction;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportWorldInteraction;
+	static C(Other: UObject | any): ViewportWorldInteraction;
+}
+
+declare class ViewportInteractor extends UObject { 
+	WorldInteraction: ViewportWorldInteraction;
+	OtherInteractor: ViewportInteractor;
+	static Load(ResourceName: string): ViewportInteractor;
+	static Find(Outer: UObject, ResourceName: string): ViewportInteractor;
+	static GetDefaultObject(): ViewportInteractor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportInteractor;
+	static C(Other: UObject | any): ViewportInteractor;
+}
+
+declare class VREditorInteractor extends ViewportInteractor { 
+	VRMode: VREditorMode;
+	static Load(ResourceName: string): VREditorInteractor;
+	static Find(Outer: UObject, ResourceName: string): VREditorInteractor;
+	static GetDefaultObject(): VREditorInteractor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorInteractor;
+	static C(Other: UObject | any): VREditorInteractor;
+}
+
+declare type ETrackingStatus = 'NotTracked' | 'InertialOnly' | 'Tracked' | 'ETrackingStatus_MAX';
+declare var ETrackingStatus : { NotTracked:'NotTracked',InertialOnly:'InertialOnly',Tracked:'Tracked',ETrackingStatus_MAX:'ETrackingStatus_MAX', };
+declare class MotionControllerComponent extends PrimitiveComponent { 
+	PlayerIndex: number;
+	Hand: EControllerHand;
+	MotionSource: string;
+	bDisableLowLatencyUpdate: boolean;
+	CurrentTrackingStatus: ETrackingStatus;
+	bDisplayDeviceModel: boolean;
+	DisplayModelSource: string;
+	CustomDisplayMesh: StaticMesh;
+	DisplayMeshMaterialOverrides: MaterialInterface[];
+	DisplayComponent: PrimitiveComponent;
+	static Load(ResourceName: string): MotionControllerComponent;
+	static Find(Outer: UObject, ResourceName: string): MotionControllerComponent;
+	static GetDefaultObject(): MotionControllerComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MotionControllerComponent;
+	SetTrackingSource(NewSource: EControllerHand): void;
+	SetTrackingMotionSource(NewSource: string): void;
+	SetShowDeviceModel(bShowControllerModel: boolean): void;
+	SetDisplayModelSource(NewDisplayModelSource: string): void;
+	SetCustomDisplayMesh(NewDisplayMesh: StaticMesh): void;
+	SetAssociatedPlayerIndex(NewPlayer: number): void;
+	OnMotionControllerUpdated(): void;
+	IsTracked(): boolean;
+	GetTrackingSource(): EControllerHand;
+	GetParameterValue(InName: string,bValueFound?: boolean): {bValueFound: boolean, $: number};
+	static C(Other: UObject | any): MotionControllerComponent;
+	DisableMotionTrackingForComponent(): void;
+	EnableMotionTrackingForComponent(): boolean;
+	IsMotionTrackingEnabledForComponent(): boolean;
+	static DisableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): void;
+	static EnableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): boolean;
+	static IsMotionTrackingEnabledForComponent(MotionControllerComponent: MotionControllerComponent): boolean;
+}
+
+declare class InterpCurvePointQuat { 
+	InVal: number;
+	OutVal: Quat;
+	ArriveTangent: Quat;
+	LeaveTangent: Quat;
+	InterpMode: EInterpCurveMode;
+	clone() : InterpCurvePointQuat;
+	static C(Other: UObject | any): InterpCurvePointQuat;
+}
+
+declare class InterpCurveQuat { 
+	Points: InterpCurvePointQuat[];
+	bIsLooped: boolean;
+	LoopKeyOffset: number;
+	clone() : InterpCurveQuat;
+	static C(Other: UObject | any): InterpCurveQuat;
+}
+
+declare class InterpCurvePointFloat { 
+	InVal: number;
+	OutVal: number;
+	ArriveTangent: number;
+	LeaveTangent: number;
+	InterpMode: EInterpCurveMode;
+	clone() : InterpCurvePointFloat;
+	static C(Other: UObject | any): InterpCurvePointFloat;
+}
+
+declare class InterpCurveFloat { 
+	Points: InterpCurvePointFloat[];
+	bIsLooped: boolean;
+	LoopKeyOffset: number;
+	clone() : InterpCurveFloat;
+	static C(Other: UObject | any): InterpCurveFloat;
+}
+
+declare class SplineCurves { 
+	Position: InterpCurveVector;
+	Rotation: InterpCurveQuat;
+	Scale: InterpCurveVector;
+	ReparamTable: InterpCurveFloat;
+	clone() : SplineCurves;
+	static C(Other: UObject | any): SplineCurves;
+}
+
+declare type ESplineCoordinateSpace = 'Local' | 'World' | 'ESplineCoordinateSpace_MAX';
+declare var ESplineCoordinateSpace : { Local:'Local',World:'World',ESplineCoordinateSpace_MAX:'ESplineCoordinateSpace_MAX', };
+declare type ESplinePointType = 'Linear' | 'Curve' | 'Constant' | 'CurveClamped' | 'CurveCustomTangent' | 'ESplinePointType_MAX';
+declare var ESplinePointType : { Linear:'Linear',Curve:'Curve',Constant:'Constant',CurveClamped:'CurveClamped',CurveCustomTangent:'CurveCustomTangent',ESplinePointType_MAX:'ESplinePointType_MAX', };
+declare class SplinePoint { 
+	InputKey: number;
+	Position: Vector;
+	ArriveTangent: Vector;
+	LeaveTangent: Vector;
+	Rotation: Rotator;
+	Scale: Vector;
+	Type: ESplinePointType;
+	clone() : SplinePoint;
+	static C(Other: UObject | any): SplinePoint;
+}
+
+declare class SplineComponent extends PrimitiveComponent { 
+	SplineCurves: SplineCurves;
+	SplineInfo: InterpCurveVector;
+	SplineRotInfo: InterpCurveQuat;
+	SplineScaleInfo: InterpCurveVector;
+	SplineReparamTable: InterpCurveFloat;
+	bAllowSplineEditingPerInstance: boolean;
+	ReparamStepsPerSegment: number;
+	Duration: number;
+	bStationaryEndpoints: boolean;
+	bSplineHasBeenEdited: boolean;
+	bModifiedByConstructionScript: boolean;
+	bInputSplinePointsToConstructionScript: boolean;
+	bDrawDebug: boolean;
+	bClosedLoop: boolean;
+	bLoopPositionOverride: boolean;
+	LoopPosition: number;
+	DefaultUpVector: Vector;
+	EditorUnselectedSplineSegmentColor: LinearColor;
+	EditorSelectedSplineSegmentColor: LinearColor;
+	bAllowDiscontinuousSpline: boolean;
+	bShouldVisualizeScale: boolean;
+	ScaleVisualizationWidth: number;
+	static Load(ResourceName: string): SplineComponent;
+	static Find(Outer: UObject, ResourceName: string): SplineComponent;
+	static GetDefaultObject(): SplineComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplineComponent;
+	UpdateSpline(): void;
+	SetWorldLocationAtSplinePoint(PointIndex: number,InLocation: Vector): void;
+	SetUpVectorAtSplinePoint(PointIndex: number,InUpVector: Vector,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
+	SetUnselectedSplineSegmentColor(SegmentColor: LinearColor): void;
+	SetTangentsAtSplinePoint(PointIndex: number,InArriveTangent: Vector,InLeaveTangent: Vector,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
+	SetTangentAtSplinePoint(PointIndex: number,InTangent: Vector,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
+	SetSplineWorldPoints(Points: Vector[]): void;
+	SetSplinePointType(PointIndex: number,Type: ESplinePointType,bUpdateSpline: boolean): void;
+	SetSplinePoints(Points: Vector[],CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
+	SetSplineLocalPoints(Points: Vector[]): void;
+	SetSelectedSplineSegmentColor(SegmentColor: LinearColor): void;
+	SetLocationAtSplinePoint(PointIndex: number,InLocation: Vector,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
+	SetDrawDebug(bShow: boolean): void;
+	SetDefaultUpVector(UpVector: Vector,CoordinateSpace: ESplineCoordinateSpace): void;
+	SetClosedLoopAtPosition(bInClosedLoop: boolean,Key: number,bUpdateSpline: boolean): void;
+	SetClosedLoop(bInClosedLoop: boolean,bUpdateSpline: boolean): void;
+	RemoveSplinePoint(index: number,bUpdateSpline: boolean): void;
+	IsClosedLoop(): boolean;
+	GetWorldTangentAtDistanceAlongSpline(Distance: number): Vector;
+	GetWorldRotationAtTime(Time: number,bUseConstantVelocity: boolean): Rotator;
+	GetWorldRotationAtDistanceAlongSpline(Distance: number): Rotator;
+	GetWorldLocationAtTime(Time: number,bUseConstantVelocity: boolean): Vector;
+	GetWorldLocationAtSplinePoint(PointIndex: number): Vector;
+	GetWorldLocationAtDistanceAlongSpline(Distance: number): Vector;
+	GetWorldDirectionAtTime(Time: number,bUseConstantVelocity: boolean): Vector;
+	GetWorldDirectionAtDistanceAlongSpline(Distance: number): Vector;
+	GetUpVectorAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Vector;
+	GetUpVectorAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetUpVectorAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetTransformAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean,bUseScale: boolean): Transform;
+	GetTransformAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace,bUseScale: boolean): Transform;
+	GetTransformAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace,bUseScale: boolean): Transform;
+	GetTangentAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Vector;
+	GetTangentAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetTangentAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetSplinePointType(PointIndex: number): ESplinePointType;
+	GetSplineLength(): number;
+	GetScaleAtTime(Time: number,bUseConstantVelocity: boolean): Vector;
+	GetScaleAtSplinePoint(PointIndex: number): Vector;
+	GetScaleAtDistanceAlongSpline(Distance: number): Vector;
+	GetRotationAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Rotator;
+	GetRotationAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Rotator;
+	GetRotationAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Rotator;
+	GetRollAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): number;
+	GetRollAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): number;
+	GetRollAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): number;
+	GetRightVectorAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Vector;
+	GetRightVectorAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetRightVectorAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetNumberOfSplinePoints(): number;
+	GetLocationAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Vector;
+	GetLocationAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetLocationAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetLocationAndTangentAtSplinePoint(PointIndex: number,Location?: Vector,Tangent?: Vector,CoordinateSpace?: ESplineCoordinateSpace): {Location: Vector, Tangent: Vector};
+	GetLocalLocationAndTangentAtSplinePoint(PointIndex: number,LocalLocation?: Vector,LocalTangent?: Vector): {LocalLocation: Vector, LocalTangent: Vector};
+	GetLeaveTangentAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetInputKeyAtDistanceAlongSpline(Distance: number): number;
+	GetDistanceAlongSplineAtSplinePoint(PointIndex: number): number;
+	GetDirectionAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Vector;
+	GetDirectionAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetDirectionAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetDefaultUpVector(CoordinateSpace: ESplineCoordinateSpace): Vector;
+	GetArriveTangentAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	FindUpVectorClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	FindTransformClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace,bUseScale: boolean): Transform;
+	FindTangentClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	FindScaleClosestToWorldLocation(WorldLocation: Vector): Vector;
+	FindRotationClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Rotator;
+	FindRollClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): number;
+	FindRightVectorClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	FindLocationClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	FindInputKeyClosestToWorldLocation(WorldLocation: Vector): number;
+	FindDirectionClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Vector;
+	ClearSplinePoints(bUpdateSpline: boolean): void;
+	AddSplineWorldPoint(Position: Vector): void;
+	AddSplinePointAtIndex(Position: Vector,index: number,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
+	AddSplinePoint(Position: Vector,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
+	AddSplineLocalPoint(Position: Vector): void;
+	AddPoints(Points: SplinePoint[],bUpdateSpline: boolean): void;
+	AddPoint(Point: SplinePoint,bUpdateSpline: boolean): void;
+	static C(Other: UObject | any): SplineComponent;
+}
+
+declare class SplineMeshParams { 
+	StartPos: Vector;
+	StartTangent: Vector;
+	StartScale: Vector2D;
+	StartRoll: number;
+	StartOffset: Vector2D;
+	EndPos: Vector;
+	EndTangent: Vector;
+	EndScale: Vector2D;
+	EndRoll: number;
+	EndOffset: Vector2D;
+	clone() : SplineMeshParams;
+	static C(Other: UObject | any): SplineMeshParams;
+}
+
+declare type ESplineMeshAxis = 'X' | 'Y' | 'Z' | 'ESplineMeshAxis_MAX';
+declare var ESplineMeshAxis : { X:'X',Y:'Y',Z:'Z',ESplineMeshAxis_MAX:'ESplineMeshAxis_MAX', };
+declare class SplineMeshComponent extends StaticMeshComponent { 
+	SplineParams: SplineMeshParams;
+	SplineUpDir: Vector;
+	bAllowSplineEditingPerInstance: boolean;
+	bSmoothInterpRollScale: boolean;
+	ForwardAxis: ESplineMeshAxis;
+	SplineBoundaryMin: number;
+	SplineBoundaryMax: number;
+	BodySetup: BodySetup;
+	CachedMeshBodySetupGuid: Guid;
+	bSelected: boolean;
+	bMeshDirty: boolean;
+	static Load(ResourceName: string): SplineMeshComponent;
+	static Find(Outer: UObject, ResourceName: string): SplineMeshComponent;
+	static GetDefaultObject(): SplineMeshComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplineMeshComponent;
+	UpdateMesh(): void;
+	SetStartTangent(StartTangent: Vector,bUpdateMesh: boolean): void;
+	SetStartScale(StartScale: Vector2D,bUpdateMesh: boolean): void;
+	SetStartRoll(StartRoll: number,bUpdateMesh: boolean): void;
+	SetStartPosition(StartPos: Vector,bUpdateMesh: boolean): void;
+	SetStartOffset(StartOffset: Vector2D,bUpdateMesh: boolean): void;
+	SetStartAndEnd(StartPos: Vector,StartTangent: Vector,EndPos: Vector,EndTangent: Vector,bUpdateMesh: boolean): void;
+	SetSplineUpDir(InSplineUpDir: Vector,bUpdateMesh: boolean): void;
+	SetForwardAxis(InForwardAxis: ESplineMeshAxis,bUpdateMesh: boolean): void;
+	SetEndTangent(EndTangent: Vector,bUpdateMesh: boolean): void;
+	SetEndScale(EndScale: Vector2D,bUpdateMesh: boolean): void;
+	SetEndRoll(EndRoll: number,bUpdateMesh: boolean): void;
+	SetEndPosition(EndPos: Vector,bUpdateMesh: boolean): void;
+	SetEndOffset(EndOffset: Vector2D,bUpdateMesh: boolean): void;
+	SetBoundaryMin(InBoundaryMin: number,bUpdateMesh: boolean): void;
+	SetBoundaryMax(InBoundaryMax: number,bUpdateMesh: boolean): void;
+	GetStartTangent(): Vector;
+	GetStartScale(): Vector2D;
+	GetStartRoll(): number;
+	GetStartPosition(): Vector;
+	GetStartOffset(): Vector2D;
+	GetSplineUpDir(): Vector;
+	GetForwardAxis(): ESplineMeshAxis;
+	GetEndTangent(): Vector;
+	GetEndScale(): Vector2D;
+	GetEndRoll(): number;
+	GetEndPosition(): Vector;
+	GetEndOffset(): Vector2D;
+	GetBoundaryMin(): number;
+	GetBoundaryMax(): number;
+	static C(Other: UObject | any): SplineMeshComponent;
+}
+
+declare class LightComponentBase extends SceneComponent { 
+	LightGuid: Guid;
+	Brightness: number;
+	Intensity: number;
+	LightColor: Color;
+	bAffectsWorld: boolean;
+	CastShadows: boolean;
+	CastStaticShadows: boolean;
+	CastDynamicShadows: boolean;
+	bAffectTranslucentLighting: boolean;
+	bTransmission: boolean;
+	bCastVolumetricShadow: boolean;
+	IndirectLightingIntensity: number;
+	VolumetricScatteringIntensity: number;
+	StaticEditorTexture: Texture2D;
+	StaticEditorTextureScale: number;
+	DynamicEditorTexture: Texture2D;
+	DynamicEditorTextureScale: number;
+	static Load(ResourceName: string): LightComponentBase;
+	static Find(Outer: UObject, ResourceName: string): LightComponentBase;
+	static GetDefaultObject(): LightComponentBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightComponentBase;
+	SetCastVolumetricShadow(bNewValue: boolean): void;
+	SetCastShadows(bNewValue: boolean): void;
+	GetLightColor(): LinearColor;
+	static C(Other: UObject | any): LightComponentBase;
+}
+
+declare class TextureLightProfile extends Texture2D { 
+	Brightness: number;
+	TextureMultiplier: number;
+	static Load(ResourceName: string): TextureLightProfile;
+	static Find(Outer: UObject, ResourceName: string): TextureLightProfile;
+	static GetDefaultObject(): TextureLightProfile;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureLightProfile;
+	static C(Other: UObject | any): TextureLightProfile;
+}
+
+declare class LightComponent extends LightComponentBase { 
+	Temperature: number;
+	MaxDrawDistance: number;
+	MaxDistanceFadeRange: number;
+	bUseTemperature: boolean;
+	ShadowMapChannel: number;
+	MinRoughness: number;
+	SpecularScale: number;
+	ShadowResolutionScale: number;
+	ShadowBias: number;
+	ShadowSharpen: number;
+	ContactShadowLength: number;
+	ContactShadowLengthInWS: boolean;
+	InverseSquaredFalloff: boolean;
+	CastTranslucentShadows: boolean;
+	bCastShadowsFromCinematicObjectsOnly: boolean;
+	bAffectDynamicIndirectLighting: boolean;
+	bForceCachedShadowsForMovablePrimitives: boolean;
+	LightingChannels: LightingChannels;
+	LightFunctionMaterial: MaterialInterface;
+	LightFunctionScale: Vector;
+	IESTexture: TextureLightProfile;
+	bUseIESBrightness: boolean;
+	IESBrightnessScale: number;
+	LightFunctionFadeDistance: number;
+	DisabledBrightness: number;
+	bEnableLightShaftBloom: boolean;
+	BloomScale: number;
+	BloomThreshold: number;
+	BloomTint: Color;
+	bUseRayTracedDistanceFieldShadows: boolean;
+	RayStartOffsetDepthScale: number;
+	static Load(ResourceName: string): LightComponent;
+	static Find(Outer: UObject, ResourceName: string): LightComponent;
+	static GetDefaultObject(): LightComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightComponent;
+	SetVolumetricScatteringIntensity(NewIntensity: number): void;
+	SetTransmission(bNewValue: boolean): void;
+	SetTemperature(NewTemperature: number): void;
+	SetShadowBias(NewValue: number): void;
+	SetLightFunctionScale(NewLightFunctionScale: Vector): void;
+	SetLightFunctionMaterial(NewLightFunctionMaterial: MaterialInterface): void;
+	SetLightFunctionFadeDistance(NewLightFunctionFadeDistance: number): void;
+	SetLightFunctionDisabledBrightness(NewValue: number): void;
+	SetLightColor(NewLightColor: LinearColor,bSRGB: boolean): void;
+	SetIntensity(NewIntensity: number): void;
+	SetIndirectLightingIntensity(NewIntensity: number): void;
+	SetIESTexture(NewValue: TextureLightProfile): void;
+	SetForceCachedShadowsForMovablePrimitives(bNewValue: boolean): void;
+	SetEnableLightShaftBloom(bNewValue: boolean): void;
+	SetBloomTint(NewValue: Color): void;
+	SetBloomThreshold(NewValue: number): void;
+	SetBloomScale(NewValue: number): void;
+	SetAffectTranslucentLighting(bNewValue: boolean): void;
+	SetAffectDynamicIndirectLighting(bNewValue: boolean): void;
+	static C(Other: UObject | any): LightComponent;
+}
+
+declare type ELightUnits = 'Unitless' | 'Candelas' | 'Lumens' | 'ELightUnits_MAX';
+declare var ELightUnits : { Unitless:'Unitless',Candelas:'Candelas',Lumens:'Lumens',ELightUnits_MAX:'ELightUnits_MAX', };
+declare class LightmassLightSettings { 
+	IndirectLightingSaturation: number;
+	ShadowExponent: number;
+	bUseAreaShadowsForStationaryLight: boolean;
+	clone() : LightmassLightSettings;
+	static C(Other: UObject | any): LightmassLightSettings;
+}
+
+declare class LightmassPointLightSettings extends LightmassLightSettings { 
+	clone() : LightmassPointLightSettings;
+	static C(Other: UObject | any): LightmassPointLightSettings;
+}
+
+declare class LocalLightComponent extends LightComponent { 
+	IntensityUnits: ELightUnits;
+	Radius: number;
+	AttenuationRadius: number;
+	LightmassSettings: LightmassPointLightSettings;
+	static Load(ResourceName: string): LocalLightComponent;
+	static Find(Outer: UObject, ResourceName: string): LocalLightComponent;
+	static GetDefaultObject(): LocalLightComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalLightComponent;
+	SetAttenuationRadius(NewRadius: number): void;
+	static GetUnitsConversionFactor(SrcUnits: ELightUnits,TargetUnits: ELightUnits,CosHalfConeAngle: number): number;
+	static C(Other: UObject | any): LocalLightComponent;
+}
+
+declare class PointLightComponent extends LocalLightComponent { 
+	bUseInverseSquaredFalloff: boolean;
+	LightFalloffExponent: number;
+	SourceRadius: number;
+	SoftSourceRadius: number;
+	SourceLength: number;
+	static Load(ResourceName: string): PointLightComponent;
+	static Find(Outer: UObject, ResourceName: string): PointLightComponent;
+	static GetDefaultObject(): PointLightComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PointLightComponent;
+	SetSourceRadius(bNewValue: number): void;
+	SetSourceLength(NewValue: number): void;
+	SetSoftSourceRadius(bNewValue: number): void;
+	SetLightFalloffExponent(NewLightFalloffExponent: number): void;
+	static C(Other: UObject | any): PointLightComponent;
+}
+
+declare class VREditorMotionControllerInteractor extends VREditorInteractor { 
+	MotionControllerComponent: MotionControllerComponent;
+	HandMeshComponent: StaticMeshComponent;
+	LaserSplineComponent: SplineComponent;
+	LaserSplineMeshComponents: SplineMeshComponent[];
+	LaserPointerMID: MaterialInstanceDynamic;
+	TranslucentLaserPointerMID: MaterialInstanceDynamic;
+	HoverMeshComponent: StaticMeshComponent;
+	HoverPointLightComponent: PointLightComponent;
+	HandMeshMID: MaterialInstanceDynamic;
+	static Load(ResourceName: string): VREditorMotionControllerInteractor;
+	static Find(Outer: UObject, ResourceName: string): VREditorMotionControllerInteractor;
+	static GetDefaultObject(): VREditorMotionControllerInteractor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorMotionControllerInteractor;
+	static C(Other: UObject | any): VREditorMotionControllerInteractor;
+}
+
+declare class VRButton { 
+	ButtonWidget: VREditorWidgetComponent;
+	clone() : VRButton;
+	static C(Other: UObject | any): VRButton;
+}
+
+declare class VRRadialMenuHandler extends UObject { 
+	static Load(ResourceName: string): VRRadialMenuHandler;
+	static Find(Outer: UObject, ResourceName: string): VRRadialMenuHandler;
+	static GetDefaultObject(): VRRadialMenuHandler;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VRRadialMenuHandler;
+	static C(Other: UObject | any): VRRadialMenuHandler;
+}
+
+declare class VREditorUISystem extends UObject { 
+	VRMode: VREditorMode;
+	FloatingUIs: any;
+	PreviewWindowInfo: any;
+	InfoDisplayPanel: VREditorFloatingUI;
+	QuickRadialMenu: VREditorRadialFloatingUI;
+	DraggingUI: VREditorDockableWindow;
+	ColorPickerUI: VREditorDockableWindow;
+	LaserInteractor: VREditorMotionControllerInteractor;
+	UIInteractor: VREditorMotionControllerInteractor;
+	VRButtons: VRButton[];
+	RadialMenuHandler: VRRadialMenuHandler;
+	static Load(ResourceName: string): VREditorUISystem;
+	static Find(Outer: UObject, ResourceName: string): VREditorUISystem;
+	static GetDefaultObject(): VREditorUISystem;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorUISystem;
+	static C(Other: UObject | any): VREditorUISystem;
+}
+
+declare class VREditorTeleporter extends Actor { 
+	VRMode: VREditorMode;
+	TeleportDirectionMeshComponent: StaticMeshComponent;
+	HMDMeshComponent: StaticMeshComponent;
+	LeftMotionControllerMeshComponent: StaticMeshComponent;
+	RightMotionControllerMeshComponent: StaticMeshComponent;
+	TeleportMID: MaterialInstanceDynamic;
+	InteractorTryingTeleport: ViewportInteractor;
+	static GetDefaultObject(): VREditorTeleporter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorTeleporter;
+	static C(Other: UObject | any): VREditorTeleporter;
+}
+
+declare class VREditorPlacement extends UObject { 
+	VRMode: VREditorMode;
+	ViewportWorldInteraction: ViewportWorldInteraction;
+	FloatingUIAssetDraggedFrom: WidgetComponent;
+	PlacingMaterialOrTextureAsset: UObject;
+	static Load(ResourceName: string): VREditorPlacement;
+	static Find(Outer: UObject, ResourceName: string): VREditorPlacement;
+	static GetDefaultObject(): VREditorPlacement;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorPlacement;
+	static C(Other: UObject | any): VREditorPlacement;
+}
+
+declare class VREditorMode extends EditorWorldExtension { 
+	AvatarActor: VREditorAvatarActor;
+	UISystem: VREditorUISystem;
+	TeleportActor: VREditorTeleporter;
+	AutoScalerSystem: VREditorAutoScaler;
+	WorldInteraction: ViewportWorldInteraction;
+	PlacementSystem: VREditorPlacement;
+	LeftHandInteractor: VREditorMotionControllerInteractor;
+	RightHandInteractor: VREditorMotionControllerInteractor;
+	AssetContainer: VREditorAssetContainer;
+	static Load(ResourceName: string): VREditorMode;
+	static Find(Outer: UObject, ResourceName: string): VREditorMode;
+	static GetDefaultObject(): VREditorMode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorMode;
+	static C(Other: UObject | any): VREditorMode;
+}
+
+declare class VREditorAutoScaler extends UObject { 
+	VRMode: VREditorMode;
+	static Load(ResourceName: string): VREditorAutoScaler;
+	static Find(Outer: UObject, ResourceName: string): VREditorAutoScaler;
+	static GetDefaultObject(): VREditorAutoScaler;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorAutoScaler;
+	static C(Other: UObject | any): VREditorAutoScaler;
+}
+
+declare class VREditorBaseUserWidget extends UserWidget { 
+	Owner: any;
+	static Load(ResourceName: string): VREditorBaseUserWidget;
+	static Find(Outer: UObject, ResourceName: string): VREditorBaseUserWidget;
+	static GetDefaultObject(): VREditorBaseUserWidget;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorBaseUserWidget;
+	static C(Other: UObject | any): VREditorBaseUserWidget;
+}
+
+declare class DockableWindowDragOperation extends ViewportDragOperation { 
+	static Load(ResourceName: string): DockableWindowDragOperation;
+	static Find(Outer: UObject, ResourceName: string): DockableWindowDragOperation;
+	static GetDefaultObject(): DockableWindowDragOperation;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DockableWindowDragOperation;
+	static C(Other: UObject | any): DockableWindowDragOperation;
+}
+
+declare class FloatingText extends Actor { 
+	SceneComponent: SceneComponent;
+	FirstLineComponent: StaticMeshComponent;
+	JointSphereComponent: StaticMeshComponent;
+	SecondLineComponent: StaticMeshComponent;
+	TextComponent: TextRenderComponent;
+	MaskedTextMaterial: MaterialInterface;
+	TranslucentTextMaterial: MaterialInterface;
+	LineMaterial: MaterialInterface;
+	LineMaterialMID: MaterialInstanceDynamic;
+	static GetDefaultObject(): FloatingText;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FloatingText;
+	static C(Other: UObject | any): FloatingText;
+}
+
+declare class VISettings extends UObject { 
+	bScaleWorldFromFloor: boolean;
+	bScaleWorldWithDynamicPivot: boolean;
+	bAllowSimultaneousWorldScalingAndRotation: boolean;
+	static Load(ResourceName: string): VISettings;
+	static Find(Outer: UObject, ResourceName: string): VISettings;
+	static GetDefaultObject(): VISettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VISettings;
+	static C(Other: UObject | any): VISettings;
+}
+
+declare type EInteractorHand = 'Right' | 'Left' | 'EInteractorHand_MAX';
+declare var EInteractorHand : { Right:'Right',Left:'Left',EInteractorHand_MAX:'EInteractorHand_MAX', };
+declare class VRModeSettings extends VISettings { 
+	bEnableAutoVREditMode: boolean;
+	bAutokeySequences: boolean;
+	InteractorHand: EInteractorHand;
+	bShowWorldMovementGrid: boolean;
+	bShowWorldMovementPostProcess: boolean;
+	bShowWorldScaleProgressBar: boolean;
+	UIBrightness: number;
+	GizmoScale: number;
+	DoubleClickTime: number;
+	TriggerPressedThreshold_Vive: number;
+	TriggerPressedThreshold_Rift: number;
+	static Load(ResourceName: string): VRModeSettings;
+	static Find(Outer: UObject, ResourceName: string): VRModeSettings;
+	static GetDefaultObject(): VRModeSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VRModeSettings;
+	static C(Other: UObject | any): VRModeSettings;
+}
+
+declare type ELocalizationTargetConflictStatus = 'Unknown' | 'ConflictsPresent' | 'Clear' | 'ELocalizationTargetConflictStatus_MAX';
+declare var ELocalizationTargetConflictStatus : { Unknown:'Unknown',ConflictsPresent:'ConflictsPresent',Clear:'Clear',ELocalizationTargetConflictStatus_MAX:'ELocalizationTargetConflictStatus_MAX', };
+declare class FilePath { 
+	FilePath: string;
+	clone() : FilePath;
+	static C(Other: UObject | any): FilePath;
+}
+
+declare class GatherTextSearchDirectory { 
+	Path: string;
+	clone() : GatherTextSearchDirectory;
+	static C(Other: UObject | any): GatherTextSearchDirectory;
+}
+
+declare class GatherTextExcludePath { 
+	Pattern: string;
+	clone() : GatherTextExcludePath;
+	static C(Other: UObject | any): GatherTextExcludePath;
+}
+
+declare class GatherTextFileExtension { 
+	Pattern: string;
+	clone() : GatherTextFileExtension;
+	static C(Other: UObject | any): GatherTextFileExtension;
+}
+
+declare class GatherTextFromTextFilesConfiguration { 
+	IsEnabled: boolean;
+	SearchDirectories: GatherTextSearchDirectory[];
+	ExcludePathWildcards: GatherTextExcludePath[];
+	FileExtensions: GatherTextFileExtension[];
+	ShouldGatherFromEditorOnlyData: boolean;
+	clone() : GatherTextFromTextFilesConfiguration;
+	static C(Other: UObject | any): GatherTextFromTextFilesConfiguration;
+}
+
+declare class GatherTextIncludePath { 
+	Pattern: string;
+	clone() : GatherTextIncludePath;
+	static C(Other: UObject | any): GatherTextIncludePath;
+}
+
+declare class GatherTextFromPackagesConfiguration { 
+	IsEnabled: boolean;
+	IncludePathWildcards: GatherTextIncludePath[];
+	ExcludePathWildcards: GatherTextExcludePath[];
+	FileExtensions: GatherTextFileExtension[];
+	Collections: string[];
+	ShouldGatherFromEditorOnlyData: boolean;
+	SkipGatherCache: boolean;
+	clone() : GatherTextFromPackagesConfiguration;
+	static C(Other: UObject | any): GatherTextFromPackagesConfiguration;
+}
+
+declare class MetaDataKeyName { 
+	Name: string;
+	clone() : MetaDataKeyName;
+	static C(Other: UObject | any): MetaDataKeyName;
+}
+
+declare class MetaDataTextKeyPattern { 
+	Pattern: string;
+	clone() : MetaDataTextKeyPattern;
+	static C(Other: UObject | any): MetaDataTextKeyPattern;
+}
+
+declare class MetaDataKeyGatherSpecification { 
+	MetaDataKey: MetaDataKeyName;
+	TextNamespace: string;
+	TextKeyPattern: MetaDataTextKeyPattern;
+	clone() : MetaDataKeyGatherSpecification;
+	static C(Other: UObject | any): MetaDataKeyGatherSpecification;
+}
+
+declare class GatherTextFromMetaDataConfiguration { 
+	IsEnabled: boolean;
+	IncludePathWildcards: GatherTextIncludePath[];
+	ExcludePathWildcards: GatherTextExcludePath[];
+	KeySpecifications: MetaDataKeyGatherSpecification[];
+	ShouldGatherFromEditorOnlyData: boolean;
+	clone() : GatherTextFromMetaDataConfiguration;
+	static C(Other: UObject | any): GatherTextFromMetaDataConfiguration;
+}
+
+declare type ELocalizedTextCollapseMode = 'IdenticalTextIdAndSource' | 'IdenticalPackageIdTextIdAndSource' | 'IdenticalNamespaceAndSource' | 'ELocalizedTextCollapseMode_MAX';
+declare var ELocalizedTextCollapseMode : { IdenticalTextIdAndSource:'IdenticalTextIdAndSource',IdenticalPackageIdTextIdAndSource:'IdenticalPackageIdTextIdAndSource',IdenticalNamespaceAndSource:'IdenticalNamespaceAndSource',ELocalizedTextCollapseMode_MAX:'ELocalizedTextCollapseMode_MAX', };
+declare class LocalizationExportingSettings { 
+	CollapseMode: ELocalizedTextCollapseMode;
+	ShouldPersistCommentsOnExport: boolean;
+	ShouldAddSourceLocationsAsComments: boolean;
+	clone() : LocalizationExportingSettings;
+	static C(Other: UObject | any): LocalizationExportingSettings;
+}
+
+declare class LocalizationCompilationSettings { 
+	SkipSourceCheck: boolean;
+	clone() : LocalizationCompilationSettings;
+	static C(Other: UObject | any): LocalizationCompilationSettings;
+}
+
+declare class DirectoryPath { 
+	Path: string;
+	clone() : DirectoryPath;
+	static C(Other: UObject | any): DirectoryPath;
+}
+
+declare class LocalizationImportDialogueSettings { 
+	RawAudioPath: DirectoryPath;
+	ImportedDialogueFolder: string;
+	bImportNativeAsSource: boolean;
+	clone() : LocalizationImportDialogueSettings;
+	static C(Other: UObject | any): LocalizationImportDialogueSettings;
+}
+
+declare class CultureStatistics { 
+	CultureName: string;
+	WordCount: any;
+	clone() : CultureStatistics;
+	static C(Other: UObject | any): CultureStatistics;
 }
 
 declare class LocalizationTargetSettings { 
 	Name: string;
 	Guid: Guid;
-	ConflictStatus: ConflictStatus;
+	ConflictStatus: ELocalizationTargetConflictStatus;
 	TargetDependencies: Guid[];
 	AdditionalManifestDependencies: FilePath[];
 	RequiredModuleNames: string[];
@@ -13803,101 +15683,6 @@ declare class LocalizationSettings extends UObject {
 	static C(Other: UObject | any): LocalizationSettings;
 }
 
-declare type EHMDTrackingOrigin = 'Floor' | 'Eye';
-declare var EHMDTrackingOrigin : { Floor:'Floor',Eye:'Eye', };
-declare type ESpectatorScreenMode = 'Disabled' | 'SingleEyeLetterboxed' | 'Undistorted' | 'Distorted' | 'SingleEye' | 'SingleEyeCroppedToFill' | 'Texture' | 'TexturePlusEye';
-declare var ESpectatorScreenMode : { Disabled:'Disabled',SingleEyeLetterboxed:'SingleEyeLetterboxed',Undistorted:'Undistorted',Distorted:'Distorted',SingleEye:'SingleEye',SingleEyeCroppedToFill:'SingleEyeCroppedToFill',Texture:'Texture',TexturePlusEye:'TexturePlusEye', };
-declare type EHMDWornState = 'Unknown' | 'Worn' | 'NotWorn';
-declare var EHMDWornState : { Unknown:'Unknown',Worn:'Worn',NotWorn:'NotWorn', };
-declare class HeadMountedDisplayFunctionLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): HeadMountedDisplayFunctionLibrary;
-	static Find(Outer: UObject, ResourceName: string): HeadMountedDisplayFunctionLibrary;
-	static GetDefaultObject(): HeadMountedDisplayFunctionLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HeadMountedDisplayFunctionLibrary;
-	static SetWorldToMetersScale(WorldContext: UObject,NewScale: number): void;
-	static SetTrackingOrigin(Origin: EHMDTrackingOrigin): void;
-	static SetSpectatorScreenTexture(InTexture: Texture): void;
-	static SetSpectatorScreenModeTexturePlusEyeLayout(EyeRectMin: Vector2D,EyeRectMax: Vector2D,TextureRectMin: Vector2D,TextureRectMax: Vector2D,bDrawEyeFirst: boolean,bClearBlack: boolean): void;
-	static SetSpectatorScreenMode(Mode: Mode): void;
-	static SetClippingPlanes(Near: number,Far: number): void;
-	static ResetOrientationAndPosition(Yaw: number,Options: EOrientPositionSelector): void;
-	static IsSpectatorScreenModeControllable(): boolean;
-	static IsInLowPersistenceMode(): boolean;
-	static IsHeadMountedDisplayEnabled(): boolean;
-	static IsHeadMountedDisplayConnected(): boolean;
-	static HasValidTrackingPosition(): boolean;
-	static GetWorldToMetersScale(WorldContext: UObject): number;
-	static GetVRFocusState(bUseFocus?: boolean,bHasFocus?: boolean): {bUseFocus: boolean, bHasFocus: boolean};
-	static GetTrackingSensorParameters(Origin?: Vector,Rotation?: Rotator,LeftFOV?: number,RightFOV?: number,TopFOV?: number,BottomFOV?: number,Distance?: number,NearPlane?: number,FarPlane?: number,IsActive?: boolean,Index?: number): {Origin: Vector, Rotation: Rotator, LeftFOV: number, RightFOV: number, TopFOV: number, BottomFOV: number, Distance: number, NearPlane: number, FarPlane: number, IsActive: boolean};
-	static GetTrackingOrigin(): EHMDTrackingOrigin;
-	static GetScreenPercentage(): number;
-	static GetPositionalTrackingCameraParameters(CameraOrigin?: Vector,CameraRotation?: Rotator,HFOV?: number,VFOV?: number,CameraDistance?: number,NearPlane?: number,FarPlane?: number): {CameraOrigin: Vector, CameraRotation: Rotator, HFOV: number, VFOV: number, CameraDistance: number, NearPlane: number, FarPlane: number};
-	static GetOrientationAndPosition(DeviceRotation?: Rotator,DevicePosition?: Vector): {DeviceRotation: Rotator, DevicePosition: Vector};
-	static GetNumOfTrackingSensors(): number;
-	static GetHMDWornState(): EHMDWornState;
-	static GetHMDDeviceName(): string;
-	static EnableLowPersistenceMode(bEnable: boolean): void;
-	static EnableHMD(bEnable: boolean): boolean;
-	static C(Other: UObject | any): HeadMountedDisplayFunctionLibrary;
-}
-
-declare type ETrackingStatus = 'NotTracked' | 'InertialOnly' | 'Tracked';
-declare var ETrackingStatus : { NotTracked:'NotTracked',InertialOnly:'InertialOnly',Tracked:'Tracked', };
-declare class MotionControllerComponent extends PrimitiveComponent { 
-	PlayerIndex: number;
-	Hand: Hand;
-	bDisableLowLatencyUpdate: boolean;
-	CurrentTrackingStatus: CurrentTrackingStatus;
-	static Load(ResourceName: string): MotionControllerComponent;
-	static Find(Outer: UObject, ResourceName: string): MotionControllerComponent;
-	static GetDefaultObject(): MotionControllerComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MotionControllerComponent;
-	IsTracked(): boolean;
-	static C(Other: UObject | any): MotionControllerComponent;
-	DisableMotionTrackingForComponent(): void;
-	EnableMotionTrackingForComponent(): boolean;
-	IsMotionTrackingEnabledForComponent(): boolean;
-	static DisableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): void;
-	static EnableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): boolean;
-	static IsMotionTrackingEnabledForComponent(MotionControllerComponent: MotionControllerComponent): boolean;
-}
-
-declare class MotionTrackedDeviceFunctionLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): MotionTrackedDeviceFunctionLibrary;
-	static Find(Outer: UObject, ResourceName: string): MotionTrackedDeviceFunctionLibrary;
-	static GetDefaultObject(): MotionTrackedDeviceFunctionLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MotionTrackedDeviceFunctionLibrary;
-	static SetIsControllerMotionTrackingEnabledByDefault(Enable: boolean): void;
-	static IsMotionTrackingEnabledForDevice(PlayerIndex: number,Hand: Hand): boolean;
-	static IsMotionTrackingEnabledForComponent(MotionControllerComponent: MotionControllerComponent): boolean;
-	static IsMotionTrackedDeviceCountManagementNecessary(): boolean;
-	static GetMotionTrackingEnabledControllerCount(): number;
-	static GetMaximumMotionTrackedControllerCount(): number;
-	static EnableMotionTrackingOfDevice(PlayerIndex: number,Hand: Hand): boolean;
-	static EnableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): boolean;
-	static DisableMotionTrackingOfDevice(PlayerIndex: number,Hand: Hand): void;
-	static DisableMotionTrackingOfControllersForPlayer(PlayerIndex: number): void;
-	static DisableMotionTrackingOfAllControllers(): void;
-	static DisableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): void;
-	static C(Other: UObject | any): MotionTrackedDeviceFunctionLibrary;
-}
-
-declare class VRNotificationsComponent extends ActorComponent { 
-	HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate: UnrealEngineMulticastDelegate<() => void>;
-	HMDTrackingInitializedDelegate: UnrealEngineMulticastDelegate<() => void>;
-	HMDRecenteredDelegate: UnrealEngineMulticastDelegate<() => void>;
-	HMDLostDelegate: UnrealEngineMulticastDelegate<() => void>;
-	HMDReconnectedDelegate: UnrealEngineMulticastDelegate<() => void>;
-	HMDConnectCanceledDelegate: UnrealEngineMulticastDelegate<() => void>;
-	HMDPutOnHeadDelegate: UnrealEngineMulticastDelegate<() => void>;
-	HMDRemovedFromHeadDelegate: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): VRNotificationsComponent;
-	static Find(Outer: UObject, ResourceName: string): VRNotificationsComponent;
-	static GetDefaultObject(): VRNotificationsComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VRNotificationsComponent;
-	static C(Other: UObject | any): VRNotificationsComponent;
-}
-
 declare class CookerStats extends UObject { 
 	Assets: any[];
 	SizeBefore: number;
@@ -13930,6 +15715,7 @@ declare class PrimitiveStats extends UObject {
 	Type: string;
 	Count: number;
 	Sections: number;
+	HWInstances: number;
 	InstSections: number;
 	Triangles: number;
 	InstTriangles: number;
@@ -13994,12 +15780,67 @@ declare class TextureStats extends UObject {
 	static C(Other: UObject | any): TextureStats;
 }
 
+declare class PropertyEntry { 
+	Property: EMaterialProperty;
+	bUseCustomSize: boolean;
+	CustomSize: IntPoint;
+	bUseConstantValue: boolean;
+	ConstantValue: number;
+	clone() : PropertyEntry;
+	static C(Other: UObject | any): PropertyEntry;
+}
+
+declare class MaterialOptions extends UObject { 
+	Properties: PropertyEntry[];
+	TextureSize: IntPoint;
+	LODIndices: number[];
+	bUseMeshData: boolean;
+	bUseSpecificUVIndex: boolean;
+	TextureCoordinateIndex: number;
+	static Load(ResourceName: string): MaterialOptions;
+	static Find(Outer: UObject, ResourceName: string): MaterialOptions;
+	static GetDefaultObject(): MaterialOptions;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialOptions;
+	static C(Other: UObject | any): MaterialOptions;
+}
+
+declare class AssetBakeOptions extends UObject { 
+	static Load(ResourceName: string): AssetBakeOptions;
+	static Find(Outer: UObject, ResourceName: string): AssetBakeOptions;
+	static GetDefaultObject(): AssetBakeOptions;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetBakeOptions;
+	static C(Other: UObject | any): AssetBakeOptions;
+}
+
+declare type EMaterialBakeMethod = 'IndividualMaterial' | 'AtlasMaterial' | 'BinnedMaterial' | 'EMaterialBakeMethod_MAX';
+declare var EMaterialBakeMethod : { IndividualMaterial:'IndividualMaterial',AtlasMaterial:'AtlasMaterial',BinnedMaterial:'BinnedMaterial',EMaterialBakeMethod_MAX:'EMaterialBakeMethod_MAX', };
+declare class MaterialMergeOptions extends UObject { 
+	Method: EMaterialBakeMethod;
+	BlendMode: EBlendMode;
+	static Load(ResourceName: string): MaterialMergeOptions;
+	static Find(Outer: UObject, ResourceName: string): MaterialMergeOptions;
+	static GetDefaultObject(): MaterialMergeOptions;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialMergeOptions;
+	static C(Other: UObject | any): MaterialMergeOptions;
+}
+
+declare class BlueprintFunctionLibrary extends UObject { 
+	static Load(ResourceName: string): BlueprintFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): BlueprintFunctionLibrary;
+	static GetDefaultObject(): BlueprintFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintFunctionLibrary;
+	static C(Other: UObject | any): BlueprintFunctionLibrary;
+}
+
 declare class MaterialInstanceConstant extends MaterialInstance { 
 	ParameterStateId: Guid;
 	static Load(ResourceName: string): MaterialInstanceConstant;
 	static Find(Outer: UObject, ResourceName: string): MaterialInstanceConstant;
 	static GetDefaultObject(): MaterialInstanceConstant;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialInstanceConstant;
+	K2_GetVectorParameterValue(ParameterName: string): LinearColor;
+	K2_GetTextureParameterValue(ParameterName: string): Texture;
+	K2_GetScalarParameterValue(ParameterName: string): number;
 	static C(Other: UObject | any): MaterialInstanceConstant;
 	ClearAllMaterialInstanceParameters(): void;
 	GetMaterialInstanceScalarParameterValue(ParameterName: string): number;
@@ -14027,7 +15868,7 @@ declare class MaterialEditingLibrary extends BlueprintFunctionLibrary {
 	static GetDefaultObject(): MaterialEditingLibrary;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialEditingLibrary;
 	static UpdateMaterialInstance(Instance: MaterialInstanceConstant): void;
-	static UpdateMaterialFunction(MaterialFunction: MaterialFunction,PreviewMaterial: Material): void;
+	static UpdateMaterialFunction(MaterialFunction: MaterialFunctionInterface,PreviewMaterial: Material): void;
 	static SetMaterialUsage(Material: Material,Usage: EMaterialUsage,bNeedsRecompile?: boolean): {bNeedsRecompile: boolean, $: boolean};
 	static SetMaterialInstanceVectorParameterValue(Instance: MaterialInstanceConstant,ParameterName: string,Value: LinearColor): boolean;
 	static SetMaterialInstanceTextureParameterValue(Instance: MaterialInstanceConstant,ParameterName: string,Value: Texture): boolean;
@@ -14051,6 +15892,138 @@ declare class MaterialEditingLibrary extends BlueprintFunctionLibrary {
 	static C(Other: UObject | any): MaterialEditingLibrary;
 }
 
+declare class MaterialEditorSettings extends UObject { 
+	MaliOfflineCompilerPath: FilePath;
+	static Load(ResourceName: string): MaterialEditorSettings;
+	static Find(Outer: UObject, ResourceName: string): MaterialEditorSettings;
+	static GetDefaultObject(): MaterialEditorSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialEditorSettings;
+	static C(Other: UObject | any): MaterialEditorSettings;
+}
+
+declare type EHMDTrackingOrigin = 'Floor' | 'Eye' | 'EHMDTrackingOrigin_MAX';
+declare var EHMDTrackingOrigin : { Floor:'Floor',Eye:'Eye',EHMDTrackingOrigin_MAX:'EHMDTrackingOrigin_MAX', };
+declare type ESpectatorScreenMode = 'Disabled' | 'SingleEyeLetterboxed' | 'Undistorted' | 'Distorted' | 'SingleEye' | 'SingleEyeCroppedToFill' | 'Texture' | 'TexturePlusEye' | 'ESpectatorScreenMode_MAX';
+declare var ESpectatorScreenMode : { Disabled:'Disabled',SingleEyeLetterboxed:'SingleEyeLetterboxed',Undistorted:'Undistorted',Distorted:'Distorted',SingleEye:'SingleEye',SingleEyeCroppedToFill:'SingleEyeCroppedToFill',Texture:'Texture',TexturePlusEye:'TexturePlusEye',ESpectatorScreenMode_MAX:'ESpectatorScreenMode_MAX', };
+declare type EHMDWornState = 'Unknown' | 'Worn' | 'NotWorn' | 'EHMDWornState_MAX';
+declare var EHMDWornState : { Unknown:'Unknown',Worn:'Worn',NotWorn:'NotWorn',EHMDWornState_MAX:'EHMDWornState_MAX', };
+declare type EXRTrackedDeviceType = 'HeadMountedDisplay' | 'Controller' | 'TrackingReference' | 'Other' | 'Invalid' | 'Any' | 'EXRTrackedDeviceType_MAX';
+declare var EXRTrackedDeviceType : { HeadMountedDisplay:'HeadMountedDisplay',Controller:'Controller',TrackingReference:'TrackingReference',Other:'Other',Invalid:'Invalid',Any:'Any',EXRTrackedDeviceType_MAX:'EXRTrackedDeviceType_MAX', };
+declare class HeadMountedDisplayFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): HeadMountedDisplayFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): HeadMountedDisplayFunctionLibrary;
+	static GetDefaultObject(): HeadMountedDisplayFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HeadMountedDisplayFunctionLibrary;
+	static UpdateExternalTrackingHMDPosition(ExternalTrackingTransform: Transform): void;
+	static SetWorldToMetersScale(WorldContext: UObject,NewScale: number): void;
+	static SetTrackingOrigin(Origin: EHMDTrackingOrigin): void;
+	static SetSpectatorScreenTexture(InTexture: Texture): void;
+	static SetSpectatorScreenModeTexturePlusEyeLayout(EyeRectMin: Vector2D,EyeRectMax: Vector2D,TextureRectMin: Vector2D,TextureRectMax: Vector2D,bDrawEyeFirst: boolean,bClearBlack: boolean,bUseAlpha: boolean): void;
+	static SetSpectatorScreenMode(Mode: ESpectatorScreenMode): void;
+	static SetClippingPlanes(Near: number,Far: number): void;
+	static ResetOrientationAndPosition(Yaw: number,Options: EOrientPositionSelector): void;
+	static IsSpectatorScreenModeControllable(): boolean;
+	static IsInLowPersistenceMode(): boolean;
+	static IsHeadMountedDisplayEnabled(): boolean;
+	static IsHeadMountedDisplayConnected(): boolean;
+	static IsDeviceTracking(XRDeviceId: XRDeviceId): boolean;
+	static HasValidTrackingPosition(): boolean;
+	static GetWorldToMetersScale(WorldContext: UObject): number;
+	static GetVRFocusState(bUseFocus?: boolean,bHasFocus?: boolean): {bUseFocus: boolean, bHasFocus: boolean};
+	static GetTrackingToWorldTransform(WorldContext: UObject): Transform;
+	static GetTrackingSensorParameters(Origin?: Vector,Rotation?: Rotator,LeftFOV?: number,RightFOV?: number,TopFOV?: number,BottomFOV?: number,Distance?: number,NearPlane?: number,FarPlane?: number,IsActive?: boolean,index?: number): {Origin: Vector, Rotation: Rotator, LeftFOV: number, RightFOV: number, TopFOV: number, BottomFOV: number, Distance: number, NearPlane: number, FarPlane: number, IsActive: boolean};
+	static GetTrackingOrigin(): EHMDTrackingOrigin;
+	static GetScreenPercentage(): number;
+	static GetPositionalTrackingCameraParameters(CameraOrigin?: Vector,CameraRotation?: Rotator,HFOV?: number,VFOV?: number,CameraDistance?: number,NearPlane?: number,FarPlane?: number): {CameraOrigin: Vector, CameraRotation: Rotator, HFOV: number, VFOV: number, CameraDistance: number, NearPlane: number, FarPlane: number};
+	static GetPixelDensity(): number;
+	static GetOrientationAndPosition(DeviceRotation?: Rotator,DevicePosition?: Vector): {DeviceRotation: Rotator, DevicePosition: Vector};
+	static GetNumOfTrackingSensors(): number;
+	static GetHMDWornState(): EHMDWornState;
+	static GetHMDDeviceName(): string;
+	static GetDeviceWorldPose(WorldContext: UObject,XRDeviceId: XRDeviceId,bIsTracked?: boolean,Orientation?: Rotator,bHasPositionalTracking?: boolean,Position?: Vector): {bIsTracked: boolean, Orientation: Rotator, bHasPositionalTracking: boolean, Position: Vector};
+	static GetDevicePose(XRDeviceId: XRDeviceId,bIsTracked?: boolean,Orientation?: Rotator,bHasPositionalTracking?: boolean,Position?: Vector): {bIsTracked: boolean, Orientation: Rotator, bHasPositionalTracking: boolean, Position: Vector};
+	static EnumerateTrackedDevices(SystemId: string,DeviceType: EXRTrackedDeviceType): XRDeviceId[];
+	static EnableLowPersistenceMode(bEnable: boolean): void;
+	static EnableHMD(bEnable: boolean): boolean;
+	static CalibrateExternalTrackingToHMD(ExternalTrackingTransform: Transform): void;
+	static C(Other: UObject | any): HeadMountedDisplayFunctionLibrary;
+}
+
+declare class MotionTrackedDeviceFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): MotionTrackedDeviceFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): MotionTrackedDeviceFunctionLibrary;
+	static GetDefaultObject(): MotionTrackedDeviceFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MotionTrackedDeviceFunctionLibrary;
+	static SetIsControllerMotionTrackingEnabledByDefault(Enable: boolean): void;
+	static IsMotionTrackingEnabledForSource(PlayerIndex: number,SourceName: string): boolean;
+	static IsMotionTrackingEnabledForDevice(PlayerIndex: number,Hand: EControllerHand): boolean;
+	static IsMotionTrackingEnabledForComponent(MotionControllerComponent: MotionControllerComponent): boolean;
+	static IsMotionTrackedDeviceCountManagementNecessary(): boolean;
+	static IsMotionSourceTracking(PlayerIndex: number,SourceName: string): boolean;
+	static GetMotionTrackingEnabledControllerCount(): number;
+	static GetMaximumMotionTrackedControllerCount(): number;
+	static GetActiveTrackingSystemName(): string;
+	static EnumerateMotionSources(): string[];
+	static EnableMotionTrackingOfSource(PlayerIndex: number,SourceName: string): boolean;
+	static EnableMotionTrackingOfDevice(PlayerIndex: number,Hand: EControllerHand): boolean;
+	static EnableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): boolean;
+	static DisableMotionTrackingOfSource(PlayerIndex: number,SourceName: string): void;
+	static DisableMotionTrackingOfDevice(PlayerIndex: number,Hand: EControllerHand): void;
+	static DisableMotionTrackingOfControllersForPlayer(PlayerIndex: number): void;
+	static DisableMotionTrackingOfAllControllers(): void;
+	static DisableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): void;
+	static C(Other: UObject | any): MotionTrackedDeviceFunctionLibrary;
+}
+
+declare class VRNotificationsComponent extends ActorComponent { 
+	HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate: UnrealEngineMulticastDelegate<() => void>;
+	HMDTrackingInitializedDelegate: UnrealEngineMulticastDelegate<() => void>;
+	HMDRecenteredDelegate: UnrealEngineMulticastDelegate<() => void>;
+	HMDLostDelegate: UnrealEngineMulticastDelegate<() => void>;
+	HMDReconnectedDelegate: UnrealEngineMulticastDelegate<() => void>;
+	HMDConnectCanceledDelegate: UnrealEngineMulticastDelegate<() => void>;
+	HMDPutOnHeadDelegate: UnrealEngineMulticastDelegate<() => void>;
+	HMDRemovedFromHeadDelegate: UnrealEngineMulticastDelegate<() => void>;
+	VRControllerRecenteredDelegate: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): VRNotificationsComponent;
+	static Find(Outer: UObject, ResourceName: string): VRNotificationsComponent;
+	static GetDefaultObject(): VRNotificationsComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VRNotificationsComponent;
+	static C(Other: UObject | any): VRNotificationsComponent;
+}
+
+declare class XRAssetFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): XRAssetFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): XRAssetFunctionLibrary;
+	static GetDefaultObject(): XRAssetFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): XRAssetFunctionLibrary;
+	static AddNamedDeviceVisualizationComponentBlocking(Target: Actor,SystemName: string,DeviceName: string,bManualAttachment: boolean,RelativeTransform: Transform,XRDeviceId?: XRDeviceId): {XRDeviceId: XRDeviceId, $: PrimitiveComponent};
+	static AddDeviceVisualizationComponentBlocking(Target: Actor,XRDeviceId: XRDeviceId,bManualAttachment: boolean,RelativeTransform: Transform): PrimitiveComponent;
+	static C(Other: UObject | any): XRAssetFunctionLibrary;
+}
+
+declare class BlueprintAsyncActionBase extends UObject { 
+	static Load(ResourceName: string): BlueprintAsyncActionBase;
+	static Find(Outer: UObject, ResourceName: string): BlueprintAsyncActionBase;
+	static GetDefaultObject(): BlueprintAsyncActionBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintAsyncActionBase;
+	Activate(): void;
+	static C(Other: UObject | any): BlueprintAsyncActionBase;
+}
+
+declare class AsyncTask_LoadXRDeviceVisComponent extends BlueprintAsyncActionBase { 
+	OnModelLoaded: UnrealEngineMulticastDelegate<(LoadedComponent: PrimitiveComponent) => void>;
+	OnLoadFailure: UnrealEngineMulticastDelegate<(LoadedComponent: PrimitiveComponent) => void>;
+	SpawnedComponent: PrimitiveComponent;
+	static Load(ResourceName: string): AsyncTask_LoadXRDeviceVisComponent;
+	static Find(Outer: UObject, ResourceName: string): AsyncTask_LoadXRDeviceVisComponent;
+	static GetDefaultObject(): AsyncTask_LoadXRDeviceVisComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AsyncTask_LoadXRDeviceVisComponent;
+	static AddNamedDeviceVisualizationComponentAsync(Target: Actor,SystemName: string,DeviceName: string,bManualAttachment: boolean,RelativeTransform: Transform,XRDeviceId?: XRDeviceId,NewComponent?: PrimitiveComponent): {XRDeviceId: XRDeviceId, NewComponent: PrimitiveComponent, $: AsyncTask_LoadXRDeviceVisComponent};
+	static AddDeviceVisualizationComponentAsync(Target: Actor,XRDeviceId: XRDeviceId,bManualAttachment: boolean,RelativeTransform: Transform,NewComponent?: PrimitiveComponent): {NewComponent: PrimitiveComponent, $: AsyncTask_LoadXRDeviceVisComponent};
+	static C(Other: UObject | any): AsyncTask_LoadXRDeviceVisComponent;
+}
+
 declare class PreviewSceneProfile { 
 	ProfileName: string;
 	bSharedProfile: boolean;
@@ -14060,7 +16033,9 @@ declare class PreviewSceneProfile {
 	bRotateLightingRig: boolean;
 	bShowEnvironment: boolean;
 	bShowFloor: boolean;
-	EnvironmentCubeMap: any;
+	EnvironmentColor: LinearColor;
+	EnvironmentIntensity: number;
+	EnvironmentCubeMap: TextureCube;
 	EnvironmentCubeMapPath: string;
 	PostProcessingSettings: PostProcessSettings;
 	bPostProcessingEnabled: boolean;
@@ -14098,6 +16073,14 @@ declare class AssetViewerSettings extends UObject {
 	static C(Other: UObject | any): AssetViewerSettings;
 }
 
+declare class Manipulator extends Actor { 
+	AssociatedComponent: SceneComponent;
+	StaticMeshComponent: StaticMeshComponent;
+	static GetDefaultObject(): Manipulator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Manipulator;
+	static C(Other: UObject | any): Manipulator;
+}
+
 declare class GameplayTask_ClaimResource extends GameplayTask { 
 	static Load(ResourceName: string): GameplayTask_ClaimResource;
 	static Find(Outer: UObject, ResourceName: string): GameplayTask_ClaimResource;
@@ -14266,8 +16249,8 @@ declare class EditableGameplayTagQueryExpression_NoExprMatch extends EditableGam
 	static C(Other: UObject | any): EditableGameplayTagQueryExpression_NoExprMatch;
 }
 
-declare type EGameplayTagSourceType = 'Native' | 'DefaultTagList' | 'TagList' | 'DataTable' | 'Invalid';
-declare var EGameplayTagSourceType : { Native:'Native',DefaultTagList:'DefaultTagList',TagList:'TagList',DataTable:'DataTable',Invalid:'Invalid', };
+declare type EGameplayTagSourceType = 'Native' | 'DefaultTagList' | 'TagList' | 'RestrictedTagList' | 'DataTable' | 'Invalid' | 'EGameplayTagSourceType_MAX';
+declare var EGameplayTagSourceType : { Native:'Native',DefaultTagList:'DefaultTagList',TagList:'TagList',RestrictedTagList:'RestrictedTagList',DataTable:'DataTable',Invalid:'Invalid',EGameplayTagSourceType_MAX:'EGameplayTagSourceType_MAX', };
 declare class TableRowBase { 
 	clone() : TableRowBase;
 	static C(Other: UObject | any): TableRowBase;
@@ -14290,32 +16273,65 @@ declare class GameplayTagsList extends UObject {
 	static C(Other: UObject | any): GameplayTagsList;
 }
 
+declare class RestrictedGameplayTagTableRow extends GameplayTagTableRow { 
+	bAllowNonRestrictedChildren: boolean;
+	clone() : RestrictedGameplayTagTableRow;
+	static C(Other: UObject | any): RestrictedGameplayTagTableRow;
+}
+
+declare class RestrictedGameplayTagsList extends UObject { 
+	ConfigFileName: string;
+	RestrictedGameplayTagList: RestrictedGameplayTagTableRow[];
+	static Load(ResourceName: string): RestrictedGameplayTagsList;
+	static Find(Outer: UObject, ResourceName: string): RestrictedGameplayTagsList;
+	static GetDefaultObject(): RestrictedGameplayTagsList;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RestrictedGameplayTagsList;
+	static C(Other: UObject | any): RestrictedGameplayTagsList;
+}
+
 declare class GameplayTagSource { 
 	SourceName: string;
-	SourceType: SourceType;
+	SourceType: EGameplayTagSourceType;
 	SourceTagList: GameplayTagsList;
+	SourceRestrictedTagList: RestrictedGameplayTagsList;
 	clone() : GameplayTagSource;
 	static C(Other: UObject | any): GameplayTagSource;
 }
 
 declare class DataTable extends UObject { 
 	RowStruct: ScriptStruct;
+	bStripFromClientBuilds: boolean;
 	AssetImportData: AssetImportData;
 	ImportPath: string;
 	RowStructName: string;
+	RowsSerializedWithTags: number[];
+	TemporarilyReferencedObjects: any;
 	static Load(ResourceName: string): DataTable;
 	static Find(Outer: UObject, ResourceName: string): DataTable;
 	static GetDefaultObject(): DataTable;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataTable;
 	static C(Other: UObject | any): DataTable;
+	DoesDataTableRowExist(RowName: string): boolean;
+	FillDataTableFromCSVFile(CSVFilePath: string): boolean;
+	FillDataTableFromCSVString(CSVString: string): boolean;
+	FillDataTableFromJSONFile(JSONFilePath: string): boolean;
+	FillDataTableFromJSONString(JsonString: string): boolean;
+	GetDataTableColumnAsString(PropertyName: string): string[];
 	GetDataTableRowFromName(RowName: string,OutRow?: TableRowBase): {OutRow: TableRowBase, $: boolean};
 	GetDataTableRowNames(OutRowNames?: string[]): {OutRowNames: string[]};
+	static DoesDataTableRowExist(Table: DataTable,RowName: string): boolean;
+	static FillDataTableFromCSVFile(DataTable: DataTable,CSVFilePath: string): boolean;
+	static FillDataTableFromCSVString(DataTable: DataTable,CSVString: string): boolean;
+	static FillDataTableFromJSONFile(DataTable: DataTable,JSONFilePath: string): boolean;
+	static FillDataTableFromJSONString(DataTable: DataTable,JsonString: string): boolean;
+	static GetDataTableColumnAsString(DataTable: DataTable,PropertyName: string): string[];
 	static GetDataTableRowFromName(Table: DataTable,RowName: string,OutRow?: TableRowBase): {OutRow: TableRowBase, $: boolean};
 	static GetDataTableRowNames(Table: DataTable,OutRowNames?: string[]): {OutRowNames: string[]};
 }
 
 declare class GameplayTagsManager extends UObject { 
 	TagSources: GameplayTagSource[];
+	RestrictedGameplayTagTables: DataTable[];
 	GameplayTagTables: DataTable[];
 	static Load(ResourceName: string): GameplayTagsManager;
 	static Find(Outer: UObject, ResourceName: string): GameplayTagsManager;
@@ -14338,16 +16354,25 @@ declare class GameplayTagRedirect {
 	static C(Other: UObject | any): GameplayTagRedirect;
 }
 
+declare class RestrictedConfigInfo { 
+	RestrictedConfigName: string;
+	Owners: string[];
+	clone() : RestrictedConfigInfo;
+	static C(Other: UObject | any): RestrictedConfigInfo;
+}
+
 declare class GameplayTagsSettings extends GameplayTagsList { 
 	ImportTagsFromConfig: boolean;
 	WarnOnInvalidTags: boolean;
 	CategoryRemapping: GameplayTagCategoryRemap[];
 	FastReplication: boolean;
-	GameplayTagTableList: StringAssetReference[];
+	GameplayTagTableList: SoftObjectPath[];
 	GameplayTagRedirects: GameplayTagRedirect[];
 	CommonlyReplicatedTags: string[];
 	NumBitsForContainerSize: number;
 	NetIndexFirstBitSegment: number;
+	RestrictedConfigFiles: RestrictedConfigInfo[];
+	RestrictedTagList: string;
 	static Load(ResourceName: string): GameplayTagsSettings;
 	static Find(Outer: UObject, ResourceName: string): GameplayTagsSettings;
 	static GetDefaultObject(): GameplayTagsSettings;
@@ -14401,8 +16426,8 @@ declare class GameplayDebuggerCategoryReplicator extends Actor {
 	static C(Other: UObject | any): GameplayDebuggerCategoryReplicator;
 }
 
-declare type EGameplayDebuggerOverrideMode = 'Enable' | 'Disable' | 'UseDefault';
-declare var EGameplayDebuggerOverrideMode : { Enable:'Enable',Disable:'Disable',UseDefault:'UseDefault', };
+declare type EGameplayDebuggerOverrideMode = 'Enable' | 'Disable' | 'UseDefault' | 'EGameplayDebuggerOverrideMode_MAX';
+declare var EGameplayDebuggerOverrideMode : { Enable:'Enable',Disable:'Disable',UseDefault:'UseDefault',EGameplayDebuggerOverrideMode_MAX:'EGameplayDebuggerOverrideMode_MAX', };
 declare class GameplayDebuggerInputConfig { 
 	ConfigName: string;
 	Key: Key;
@@ -14417,9 +16442,9 @@ declare class GameplayDebuggerInputConfig {
 declare class GameplayDebuggerCategoryConfig { 
 	CategoryName: string;
 	SlotIdx: number;
-	ActiveInGame: ActiveInGame;
-	ActiveInSimulate: ActiveInSimulate;
-	Hidden: Hidden;
+	ActiveInGame: EGameplayDebuggerOverrideMode;
+	ActiveInSimulate: EGameplayDebuggerOverrideMode;
+	Hidden: EGameplayDebuggerOverrideMode;
 	bOverrideSlotIdx: boolean;
 	InputHandlers: GameplayDebuggerInputConfig[];
 	clone() : GameplayDebuggerCategoryConfig;
@@ -14428,7 +16453,7 @@ declare class GameplayDebuggerCategoryConfig {
 
 declare class GameplayDebuggerExtensionConfig { 
 	ExtensionName: string;
-	UseExtension: UseExtension;
+	UseExtension: EGameplayDebuggerOverrideMode;
 	InputHandlers: GameplayDebuggerInputConfig[];
 	clone() : GameplayDebuggerExtensionConfig;
 	static C(Other: UObject | any): GameplayDebuggerExtensionConfig;
@@ -14495,6 +16520,8 @@ declare class AIBlueprintHelperLibrary extends BlueprintFunctionLibrary {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AIBlueprintHelperLibrary;
 	static UnlockAIResourcesWithAnimation(AnimInstance: AnimInstance,bUnlockMovement: boolean,UnlockAILogic: boolean): void;
 	static SpawnAIFromClass(WorldContextObject: UObject,PawnClass: UnrealEngineClass,BehaviorTree: BehaviorTree,Location: Vector,Rotation: Rotator,bNoCollisionFail: boolean): Pawn;
+	static SimpleMoveToLocation(Controller: Controller,Goal: Vector): void;
+	static SimpleMoveToActor(Controller: Controller,Goal: Actor): void;
 	static SendAIMessage(Target: Pawn,Message: string,MessageSource: UObject,bSuccess: boolean): void;
 	static LockAIResourcesWithAnimation(AnimInstance: AnimInstance,bLockMovement: boolean,LockAILogic: boolean): void;
 	static IsValidAIRotation(Rotation: Rotator): boolean;
@@ -14592,13 +16619,13 @@ declare class AIResource_Logic extends GameplayTaskResource {
 	static C(Other: UObject | any): AIResource_Logic;
 }
 
-declare type EUserDefinedStructureStatus = 'UDSS_UpToDate' | 'UDSS_Dirty' | 'UDSS_Error' | 'UDSS_Duplicate';
-declare var EUserDefinedStructureStatus : { UDSS_UpToDate:'UDSS_UpToDate',UDSS_Dirty:'UDSS_Dirty',UDSS_Error:'UDSS_Error',UDSS_Duplicate:'UDSS_Duplicate', };
+declare type EUserDefinedStructureStatus = 'UDSS_UpToDate' | 'UDSS_Dirty' | 'UDSS_Error' | 'UDSS_Duplicate' | 'UDSS_MAX';
+declare var EUserDefinedStructureStatus : { UDSS_UpToDate:'UDSS_UpToDate',UDSS_Dirty:'UDSS_Dirty',UDSS_Error:'UDSS_Error',UDSS_Duplicate:'UDSS_Duplicate',UDSS_MAX:'UDSS_MAX', };
 declare class UserDefinedStruct extends ScriptStruct { 
-	Status: EUserDefinedStructureStatus;
 	PrimaryStruct: any;
 	ErrorMessage: string;
 	EditorData: UObject;
+	Status: EUserDefinedStructureStatus;
 	Guid: Guid;
 	static Load(ResourceName: string): UserDefinedStruct;
 	static Find(Outer: UObject, ResourceName: string): UserDefinedStruct;
@@ -14887,14 +16914,14 @@ declare class EnvQueryGenerator extends EnvQueryNode {
 	static C(Other: UObject | any): EnvQueryGenerator;
 }
 
-declare type EEnvTestPurpose = 'Filter' | 'Score' | 'FilterAndScore';
-declare var EEnvTestPurpose : { Filter:'Filter',Score:'Score',FilterAndScore:'FilterAndScore', };
-declare type EEnvTestFilterOperator = 'AllPass' | 'AnyPass';
-declare var EEnvTestFilterOperator : { AllPass:'AllPass',AnyPass:'AnyPass', };
-declare type EEnvTestScoreOperator = 'AverageScore' | 'MinScore' | 'MaxScore';
-declare var EEnvTestScoreOperator : { AverageScore:'AverageScore',MinScore:'MinScore',MaxScore:'MaxScore', };
-declare type EEnvTestFilterType = 'Minimum' | 'Maximum' | 'Range' | 'Match';
-declare var EEnvTestFilterType : { Minimum:'Minimum',Maximum:'Maximum',Range:'Range',Match:'Match', };
+declare type EEnvTestPurpose = 'Filter' | 'Score' | 'FilterAndScore' | 'EEnvTestPurpose_MAX';
+declare var EEnvTestPurpose : { Filter:'Filter',Score:'Score',FilterAndScore:'FilterAndScore',EEnvTestPurpose_MAX:'EEnvTestPurpose_MAX', };
+declare type EEnvTestFilterOperator = 'AllPass' | 'AnyPass' | 'EEnvTestFilterOperator_MAX';
+declare var EEnvTestFilterOperator : { AllPass:'AllPass',AnyPass:'AnyPass',EEnvTestFilterOperator_MAX:'EEnvTestFilterOperator_MAX', };
+declare type EEnvTestScoreOperator = 'AverageScore' | 'MinScore' | 'MaxScore' | 'EEnvTestScoreOperator_MAX';
+declare var EEnvTestScoreOperator : { AverageScore:'AverageScore',MinScore:'MinScore',MaxScore:'MaxScore',EEnvTestScoreOperator_MAX:'EEnvTestScoreOperator_MAX', };
+declare type EEnvTestFilterType = 'Minimum' | 'Maximum' | 'Range' | 'Match' | 'EEnvTestFilterType_MAX';
+declare var EEnvTestFilterType : { Minimum:'Minimum',Maximum:'Maximum',Range:'Range',Match:'Match',EEnvTestFilterType_MAX:'EEnvTestFilterType_MAX', };
 declare class AIDataProviderValue { 
 	CachedProperty: Property;
 	DataBinding: AIDataProvider;
@@ -14921,12 +16948,12 @@ declare class AIDataProviderFloatValue extends AIDataProviderTypedValue {
 	static C(Other: UObject | any): AIDataProviderFloatValue;
 }
 
-declare type EEnvTestScoreEquation = 'Linear' | 'Square' | 'InverseLinear' | 'SquareRoot' | 'Constant';
-declare var EEnvTestScoreEquation : { Linear:'Linear',Square:'Square',InverseLinear:'InverseLinear',SquareRoot:'SquareRoot',Constant:'Constant', };
-declare type EEnvQueryTestClamping = 'None' | 'SpecifiedValue' | 'FilterThreshold';
-declare var EEnvQueryTestClamping : { None:'None',SpecifiedValue:'SpecifiedValue',FilterThreshold:'FilterThreshold', };
-declare type EEQSNormalizationType = 'Absolute' | 'RelativeToScores';
-declare var EEQSNormalizationType : { Absolute:'Absolute',RelativeToScores:'RelativeToScores', };
+declare type EEnvTestScoreEquation = 'Linear' | 'Square' | 'InverseLinear' | 'SquareRoot' | 'Constant' | 'EEnvTestScoreEquation_MAX';
+declare var EEnvTestScoreEquation : { Linear:'Linear',Square:'Square',InverseLinear:'InverseLinear',SquareRoot:'SquareRoot',Constant:'Constant',EEnvTestScoreEquation_MAX:'EEnvTestScoreEquation_MAX', };
+declare type EEnvQueryTestClamping = 'None' | 'SpecifiedValue' | 'FilterThreshold' | 'EEnvQueryTestClamping_MAX';
+declare var EEnvQueryTestClamping : { None:'None',SpecifiedValue:'SpecifiedValue',FilterThreshold:'FilterThreshold',EEnvQueryTestClamping_MAX:'EEnvQueryTestClamping_MAX', };
+declare type EEQSNormalizationType = 'Absolute' | 'RelativeToScores' | 'EEQSNormalizationType_MAX';
+declare var EEQSNormalizationType : { Absolute:'Absolute',RelativeToScores:'RelativeToScores',EEQSNormalizationType_MAX:'EEQSNormalizationType_MAX', };
 declare class EnvQueryTest extends EnvQueryNode { 
 	TestOrder: number;
 	TestPurpose: EEnvTestPurpose;
@@ -14940,7 +16967,7 @@ declare class EnvQueryTest extends EnvQueryNode {
 	ScoringEquation: EEnvTestScoreEquation;
 	ClampMinType: EEnvQueryTestClamping;
 	ClampMaxType: EEnvQueryTestClamping;
-	NormalizationType: NormalizationType;
+	NormalizationType: EEQSNormalizationType;
 	ScoreClampMin: AIDataProviderFloatValue;
 	ScoreClampMax: AIDataProviderFloatValue;
 	ScoringFactor: AIDataProviderFloatValue;
@@ -14989,8 +17016,8 @@ declare class EnvQueryContext extends UObject {
 	static C(Other: UObject | any): EnvQueryContext;
 }
 
-declare type EEnvQueryStatus = 'Processing' | 'Success' | 'Failed' | 'Aborted' | 'OwnerLost' | 'MissingParam';
-declare var EEnvQueryStatus : { Processing:'Processing',Success:'Success',Failed:'Failed',Aborted:'Aborted',OwnerLost:'OwnerLost',MissingParam:'MissingParam', };
+declare type EEnvQueryStatus = 'Processing' | 'Success' | 'Failed' | 'Aborted' | 'OwnerLost' | 'MissingParam' | 'EEnvQueryStatus_MAX';
+declare var EEnvQueryStatus : { Processing:'Processing',Success:'Success',Failed:'Failed',Aborted:'Aborted',OwnerLost:'OwnerLost',MissingParam:'MissingParam',EEnvQueryStatus_MAX:'EEnvQueryStatus_MAX', };
 declare class EnvQueryInstanceBlueprintWrapper extends UObject { 
 	QueryID: number;
 	ItemType: UnrealEngineClass;
@@ -15007,8 +17034,8 @@ declare class EnvQueryInstanceBlueprintWrapper extends UObject {
 	static C(Other: UObject | any): EnvQueryInstanceBlueprintWrapper;
 }
 
-declare type EEnvQueryRunMode = 'SingleResult' | 'RandomBest5Pct' | 'RandomBest25Pct' | 'AllMatching';
-declare var EEnvQueryRunMode : { SingleResult:'SingleResult',RandomBest5Pct:'RandomBest5Pct',RandomBest25Pct:'RandomBest25Pct',AllMatching:'AllMatching', };
+declare type EEnvQueryRunMode = 'SingleResult' | 'RandomBest5Pct' | 'RandomBest25Pct' | 'AllMatching' | 'EEnvQueryRunMode_MAX';
+declare var EEnvQueryRunMode : { SingleResult:'SingleResult',RandomBest5Pct:'RandomBest5Pct',RandomBest25Pct:'RandomBest25Pct',AllMatching:'AllMatching',EEnvQueryRunMode_MAX:'EEnvQueryRunMode_MAX', };
 declare class EnvQueryManager extends UObject { 
 	InstanceCache: EnvQueryInstanceCache[];
 	LocalContexts: EnvQueryContext[];
@@ -15041,8 +17068,8 @@ declare class NavLocalGridManager extends UObject {
 }
 
 declare class AISystem extends AISystemBase { 
-	PerceptionSystemClassName: StringClassReference;
-	HotSpotManagerClassName: StringClassReference;
+	PerceptionSystemClassName: SoftClassPath;
+	HotSpotManagerClassName: SoftClassPath;
 	AcceptanceRadius: number;
 	PathfollowingRegularPathPointAcceptanceRadius: number;
 	PathfollowingNavLinkAcceptanceRadius: number;
@@ -15234,8 +17261,8 @@ declare class BTComposite_Sequence extends BTCompositeNode {
 	static C(Other: UObject | any): BTComposite_Sequence;
 }
 
-declare type EBTParallelMode = 'AbortBackground' | 'WaitForBackground';
-declare var EBTParallelMode : { AbortBackground:'AbortBackground',WaitForBackground:'WaitForBackground', };
+declare type EBTParallelMode = 'AbortBackground' | 'WaitForBackground' | 'EBTParallelMode_MAX';
+declare var EBTParallelMode : { AbortBackground:'AbortBackground',WaitForBackground:'WaitForBackground',EBTParallelMode_MAX:'EBTParallelMode_MAX', };
 declare class BTComposite_SimpleParallel extends BTCompositeNode { 
 	FinishMode: EBTParallelMode;
 	static Load(ResourceName: string): BTComposite_SimpleParallel;
@@ -15254,14 +17281,14 @@ declare class BTDecorator_BlackboardBase extends BTDecorator {
 	static C(Other: UObject | any): BTDecorator_BlackboardBase;
 }
 
-declare type EBTBlackboardRestart = 'ValueChange' | 'ResultChange';
-declare var EBTBlackboardRestart : { ValueChange:'ValueChange',ResultChange:'ResultChange', };
-declare type EBasicKeyOperation = 'Set' | 'NotSet';
-declare var EBasicKeyOperation : { Set:'Set',NotSet:'NotSet', };
-declare type EArithmeticKeyOperation = 'Equal' | 'NotEqual' | 'Less' | 'LessOrEqual' | 'Greater' | 'GreaterOrEqual';
-declare var EArithmeticKeyOperation : { Equal:'Equal',NotEqual:'NotEqual',Less:'Less',LessOrEqual:'LessOrEqual',Greater:'Greater',GreaterOrEqual:'GreaterOrEqual', };
-declare type ETextKeyOperation = 'Equal' | 'NotEqual' | 'Contain' | 'NotContain';
-declare var ETextKeyOperation : { Equal:'Equal',NotEqual:'NotEqual',Contain:'Contain',NotContain:'NotContain', };
+declare type EBTBlackboardRestart = 'ValueChange' | 'ResultChange' | 'EBTBlackboardRestart_MAX';
+declare var EBTBlackboardRestart : { ValueChange:'ValueChange',ResultChange:'ResultChange',EBTBlackboardRestart_MAX:'EBTBlackboardRestart_MAX', };
+declare type EBasicKeyOperation = 'Set' | 'NotSet' | 'EBasicKeyOperation_MAX';
+declare var EBasicKeyOperation : { Set:'Set',NotSet:'NotSet',EBasicKeyOperation_MAX:'EBasicKeyOperation_MAX', };
+declare type EArithmeticKeyOperation = 'Equal' | 'NotEqual' | 'Less' | 'LessOrEqual' | 'Greater' | 'GreaterOrEqual' | 'EArithmeticKeyOperation_MAX';
+declare var EArithmeticKeyOperation : { Equal:'Equal',NotEqual:'NotEqual',Less:'Less',LessOrEqual:'LessOrEqual',Greater:'Greater',GreaterOrEqual:'GreaterOrEqual',EArithmeticKeyOperation_MAX:'EArithmeticKeyOperation_MAX', };
+declare type ETextKeyOperation = 'Equal' | 'NotEqual' | 'Contain' | 'NotContain' | 'ETextKeyOperation_MAX';
+declare var ETextKeyOperation : { Equal:'Equal',NotEqual:'NotEqual',Contain:'Contain',NotContain:'NotContain',ETextKeyOperation_MAX:'ETextKeyOperation_MAX', };
 declare class BTDecorator_Blackboard extends BTDecorator_BlackboardBase { 
 	IntValue: number;
 	FloatValue: number;
@@ -15279,8 +17306,8 @@ declare class BTDecorator_Blackboard extends BTDecorator_BlackboardBase {
 	static C(Other: UObject | any): BTDecorator_Blackboard;
 }
 
-declare type EBTNodeResult = 'Succeeded' | 'Failed' | 'Aborted' | 'InProgress';
-declare var EBTNodeResult : { Succeeded:'Succeeded',Failed:'Failed',Aborted:'Aborted',InProgress:'InProgress', };
+declare type EBTNodeResult = 'Succeeded' | 'Failed' | 'Aborted' | 'InProgress' | 'EBTNodeResult_MAX';
+declare var EBTNodeResult : { Succeeded:'Succeeded',Failed:'Failed',Aborted:'Aborted',InProgress:'InProgress',EBTNodeResult_MAX:'EBTNodeResult_MAX', };
 declare class BTDecorator_BlueprintBase extends BTDecorator { 
 	AIOwner: AIController;
 	ActorOwner: Actor;
@@ -15309,11 +17336,11 @@ declare class BTDecorator_BlueprintBase extends BTDecorator {
 	static C(Other: UObject | any): BTDecorator_BlueprintBase;
 }
 
-declare type EGameplayContainerMatchType = 'Any' | 'All';
-declare var EGameplayContainerMatchType : { Any:'Any',All:'All', };
+declare type EGameplayContainerMatchType = 'Any' | 'All' | 'EGameplayContainerMatchType_MAX';
+declare var EGameplayContainerMatchType : { Any:'Any',All:'All',EGameplayContainerMatchType_MAX:'EGameplayContainerMatchType_MAX', };
 declare class BTDecorator_CheckGameplayTagsOnActor extends BTDecorator { 
 	ActorToCheck: BlackboardKeySelector;
-	TagsToMatch: TagsToMatch;
+	TagsToMatch: EGameplayContainerMatchType;
 	GameplayTags: GameplayTagContainer;
 	CachedDescription: string;
 	static Load(ResourceName: string): BTDecorator_CheckGameplayTagsOnActor;
@@ -15323,8 +17350,8 @@ declare class BTDecorator_CheckGameplayTagsOnActor extends BTDecorator {
 	static C(Other: UObject | any): BTDecorator_CheckGameplayTagsOnActor;
 }
 
-declare type EBlackBoardEntryComparison = 'Equal' | 'NotEqual';
-declare var EBlackBoardEntryComparison : { Equal:'Equal',NotEqual:'NotEqual', };
+declare type EBlackBoardEntryComparison = 'Equal' | 'NotEqual' | 'EBlackBoardEntryComparison_MAX';
+declare var EBlackBoardEntryComparison : { Equal:'Equal',NotEqual:'NotEqual',EBlackBoardEntryComparison_MAX:'EBlackBoardEntryComparison_MAX', };
 declare class BTDecorator_CompareBBEntries extends BTDecorator { 
 	Operator: EBlackBoardEntryComparison;
 	BlackboardKeyA: BlackboardKeySelector;
@@ -15365,8 +17392,8 @@ declare class BTDecorator_Cooldown extends BTDecorator {
 	static C(Other: UObject | any): BTDecorator_Cooldown;
 }
 
-declare type EPathExistanceQueryType = 'NavmeshRaycast2D' | 'HierarchicalQuery' | 'RegularPathFinding';
-declare var EPathExistanceQueryType : { NavmeshRaycast2D:'NavmeshRaycast2D',HierarchicalQuery:'HierarchicalQuery',RegularPathFinding:'RegularPathFinding', };
+declare type EPathExistanceQueryType = 'NavmeshRaycast2D' | 'HierarchicalQuery' | 'RegularPathFinding' | 'EPathExistanceQueryType_MAX';
+declare var EPathExistanceQueryType : { NavmeshRaycast2D:'NavmeshRaycast2D',HierarchicalQuery:'HierarchicalQuery',RegularPathFinding:'RegularPathFinding',EPathExistanceQueryType_MAX:'EPathExistanceQueryType_MAX', };
 declare class BTDecorator_DoesPathExist extends BTDecorator { 
 	BlackboardKeyA: BlackboardKeySelector;
 	BlackboardKeyB: BlackboardKeySelector;
@@ -15393,7 +17420,7 @@ declare var FAIDistanceType : { Distance3D:'Distance3D',Distance2D:'Distance2D',
 declare class BTDecorator_IsAtLocation extends BTDecorator_BlackboardBase { 
 	AcceptableRadius: number;
 	ParametrizedAcceptableRadius: AIDataProviderFloatValue;
-	GeometricDistanceType: GeometricDistanceType;
+	GeometricDistanceType: FAIDistanceType;
 	bUseParametrizedRadius: boolean;
 	bUseNavAgentGoalLocation: boolean;
 	bPathFindingBasedTest: boolean;
@@ -15551,11 +17578,11 @@ declare class BTService_DefaultFocus extends BTService_BlackboardBase {
 	static C(Other: UObject | any): BTService_DefaultFocus;
 }
 
-declare type EAIParamType = 'Float' | 'Int' | 'Bool';
-declare var EAIParamType : { Float:'Float',Int:'Int',Bool:'Bool', };
+declare type EAIParamType = 'Float' | 'Int' | 'Bool' | 'MAX';
+declare var EAIParamType : { Float:'Float',Int:'Int',Bool:'Bool',MAX:'MAX', };
 declare class AIDynamicParam { 
 	ParamName: string;
-	ParamType: ParamType;
+	ParamType: EAIParamType;
 	Value: number;
 	BBKey: BlackboardKeySelector;
 	clone() : AIDynamicParam;
@@ -15613,6 +17640,15 @@ declare class BTTask_BlueprintBase extends BTTaskNode {
 	static C(Other: UObject | any): BTTask_BlueprintBase;
 }
 
+declare class BTTask_FinishWithResult extends BTTaskNode { 
+	Result: EBTNodeResult;
+	static Load(ResourceName: string): BTTask_FinishWithResult;
+	static Find(Outer: UObject, ResourceName: string): BTTask_FinishWithResult;
+	static GetDefaultObject(): BTTask_FinishWithResult;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BTTask_FinishWithResult;
+	static C(Other: UObject | any): BTTask_FinishWithResult;
+}
+
 declare class BTTask_GameplayTaskBase extends BTTaskNode { 
 	bWaitForGameplayTask: boolean;
 	static Load(ResourceName: string): BTTask_GameplayTaskBase;
@@ -15640,7 +17676,10 @@ declare class BTTask_MoveTo extends BTTask_BlackboardBase {
 	bAllowPartialPath: boolean;
 	bTrackMovingGoal: boolean;
 	bProjectGoalLocation: boolean;
+	bReachTestIncludesAgentRadius: boolean;
+	bReachTestIncludesGoalRadius: boolean;
 	bStopOnOverlap: boolean;
+	bStopOnOverlapNeedsUpdate: boolean;
 	static Load(ResourceName: string): BTTask_MoveTo;
 	static Find(Outer: UObject, ResourceName: string): BTTask_MoveTo;
 	static GetDefaultObject(): BTTask_MoveTo;
@@ -15672,38 +17711,12 @@ declare class BTTask_PlayAnimation extends BTTaskNode {
 	bLooping: boolean;
 	bNonBlocking: boolean;
 	MyOwnerComp: BehaviorTreeComponent;
-	CachedSkelMesh: SkeletalMeshComponent;
-	static Load(ResourceName: string): BTTask_PlayAnimation;
-	static Find(Outer: UObject, ResourceName: string): BTTask_PlayAnimation;
-	static GetDefaultObject(): BTTask_PlayAnimation;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BTTask_PlayAnimation;
-	static C(Other: UObject | any): BTTask_PlayAnimation;
-}
-
-declare class SoundNode extends UObject { 
-	ChildNodes: SoundNode[];
-	GraphNode: EdGraphNode;
-	static Load(ResourceName: string): SoundNode;
-	static Find(Outer: UObject, ResourceName: string): SoundNode;
-	static GetDefaultObject(): SoundNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNode;
-	static C(Other: UObject | any): SoundNode;
-}
-
-declare class SoundCue extends SoundBase { 
-	bOverrideAttenuation: boolean;
-	FirstNode: SoundNode;
-	VolumeMultiplier: number;
-	PitchMultiplier: number;
-	AttenuationOverrides: SoundAttenuationSettings;
-	AllNodes: SoundNode[];
-	SoundCueGraph: EdGraph;
-	SubtitlePriority: number;
-	static Load(ResourceName: string): SoundCue;
-	static Find(Outer: UObject, ResourceName: string): SoundCue;
-	static GetDefaultObject(): SoundCue;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCue;
-	static C(Other: UObject | any): SoundCue;
+	CachedSkelMesh: SkeletalMeshComponent;
+	static Load(ResourceName: string): BTTask_PlayAnimation;
+	static Find(Outer: UObject, ResourceName: string): BTTask_PlayAnimation;
+	static GetDefaultObject(): BTTask_PlayAnimation;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BTTask_PlayAnimation;
+	static C(Other: UObject | any): BTTask_PlayAnimation;
 }
 
 declare class BTTask_PlaySound extends BTTaskNode { 
@@ -15755,7 +17768,7 @@ declare class BTTask_RunBehaviorDynamic extends BTTaskNode {
 
 declare class EnvNamedValue { 
 	ParamName: string;
-	ParamType: ParamType;
+	ParamType: EAIParamType;
 	Value: number;
 	clone() : EnvNamedValue;
 	static C(Other: UObject | any): EnvNamedValue;
@@ -15815,8 +17828,8 @@ declare class CrowdAgentInterface extends Interface {
 }
 
 declare class CrowdFollowingComponent extends PathFollowingComponent { 
-	CrowdAgentMoveDirection: Vector;
 	CharacterMovement: CharacterMovementComponent;
+	CrowdAgentMoveDirection: Vector;
 	AvoidanceGroup: NavAvoidanceMask;
 	GroupsToAvoid: NavAvoidanceMask;
 	GroupsToIgnore: NavAvoidanceMask;
@@ -15828,6 +17841,14 @@ declare class CrowdFollowingComponent extends PathFollowingComponent {
 	static C(Other: UObject | any): CrowdFollowingComponent;
 }
 
+declare class CrowdManagerBase extends UObject { 
+	static Load(ResourceName: string): CrowdManagerBase;
+	static Find(Outer: UObject, ResourceName: string): CrowdManagerBase;
+	static GetDefaultObject(): CrowdManagerBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CrowdManagerBase;
+	static C(Other: UObject | any): CrowdManagerBase;
+}
+
 declare class CrowdAvoidanceConfig { 
 	VelocityBias: number;
 	DesiredVelocityWeight: number;
@@ -15951,10 +17972,10 @@ declare class EnvQueryGenerator_Composite extends EnvQueryGenerator {
 	static C(Other: UObject | any): EnvQueryGenerator_Composite;
 }
 
-declare type EEnvTraceShape = 'Line' | 'Box' | 'Sphere' | 'Capsule';
-declare var EEnvTraceShape : { Line:'Line',Box:'Box',Sphere:'Sphere',Capsule:'Capsule', };
-declare type EEnvQueryTrace = 'None' | 'Navigation' | 'Geometry' | 'NavigationOverLedges';
-declare var EEnvQueryTrace : { None:'None',Navigation:'Navigation',Geometry:'Geometry',NavigationOverLedges:'NavigationOverLedges', };
+declare type EEnvTraceShape = 'Line' | 'Box' | 'Sphere' | 'Capsule' | 'EEnvTraceShape_MAX';
+declare var EEnvTraceShape : { Line:'Line',Box:'Box',Sphere:'Sphere',Capsule:'Capsule',EEnvTraceShape_MAX:'EEnvTraceShape_MAX', };
+declare type EEnvQueryTrace = 'None' | 'Navigation' | 'Geometry' | 'NavigationOverLedges' | 'EEnvQueryTrace_MAX';
+declare var EEnvQueryTrace : { None:'None',Navigation:'Navigation',Geometry:'Geometry',NavigationOverLedges:'NavigationOverLedges',EEnvQueryTrace_MAX:'EEnvQueryTrace_MAX', };
 declare class EnvTraceData { 
 	VersionNum: number;
 	NavigationFilter: UnrealEngineClass;
@@ -16016,8 +18037,8 @@ declare class AIDataProviderIntValue extends AIDataProviderTypedValue {
 	static C(Other: UObject | any): AIDataProviderIntValue;
 }
 
-declare type EEnvDirection = 'TwoPoints' | 'Rotation';
-declare var EEnvDirection : { TwoPoints:'TwoPoints',Rotation:'Rotation', };
+declare type EEnvDirection = 'TwoPoints' | 'Rotation' | 'EEnvDirection_MAX';
+declare var EEnvDirection : { TwoPoints:'TwoPoints',Rotation:'Rotation',EEnvDirection_MAX:'EEnvDirection_MAX', };
 declare class EnvDirection { 
 	LineFrom: UnrealEngineClass;
 	LineTo: UnrealEngineClass;
@@ -16044,13 +18065,13 @@ declare class EnvQueryGenerator_Donut extends EnvQueryGenerator_ProjectedPoints
 	static C(Other: UObject | any): EnvQueryGenerator_Donut;
 }
 
-declare type EPointOnCircleSpacingMethod = 'BySpaceBetween' | 'ByNumberOfPoints';
-declare var EPointOnCircleSpacingMethod : { BySpaceBetween:'BySpaceBetween',ByNumberOfPoints:'ByNumberOfPoints', };
+declare type EPointOnCircleSpacingMethod = 'BySpaceBetween' | 'ByNumberOfPoints' | 'EPointOnCircleSpacingMethod_MAX';
+declare var EPointOnCircleSpacingMethod : { BySpaceBetween:'BySpaceBetween',ByNumberOfPoints:'ByNumberOfPoints',EPointOnCircleSpacingMethod_MAX:'EPointOnCircleSpacingMethod_MAX', };
 declare class EnvQueryGenerator_OnCircle extends EnvQueryGenerator_ProjectedPoints { 
 	CircleRadius: AIDataProviderFloatValue;
 	SpaceBetween: AIDataProviderFloatValue;
 	NumberOfPoints: AIDataProviderIntValue;
-	PointOnCircleSpacingMethod: PointOnCircleSpacingMethod;
+	PointOnCircleSpacingMethod: EPointOnCircleSpacingMethod;
 	ArcDirection: EnvDirection;
 	ArcAngle: AIDataProviderFloatValue;
 	AngleRadians: number;
@@ -16128,8 +18149,8 @@ declare class EnvQueryItemType_Point extends EnvQueryItemType_VectorBase {
 	static C(Other: UObject | any): EnvQueryItemType_Point;
 }
 
-declare type EEnvTestDistance = 'Distance3D' | 'Distance2D' | 'DistanceZ' | 'DistanceAbsoluteZ';
-declare var EEnvTestDistance : { Distance3D:'Distance3D',Distance2D:'Distance2D',DistanceZ:'DistanceZ',DistanceAbsoluteZ:'DistanceAbsoluteZ', };
+declare type EEnvTestDistance = 'Distance3D' | 'Distance2D' | 'DistanceZ' | 'DistanceAbsoluteZ' | 'EEnvTestDistance_MAX';
+declare var EEnvTestDistance : { Distance3D:'Distance3D',Distance2D:'Distance2D',DistanceZ:'DistanceZ',DistanceAbsoluteZ:'DistanceAbsoluteZ',EEnvTestDistance_MAX:'EEnvTestDistance_MAX', };
 declare class EnvQueryTest_Distance extends EnvQueryTest { 
 	TestMode: EEnvTestDistance;
 	DistanceTo: UnrealEngineClass;
@@ -16140,12 +18161,12 @@ declare class EnvQueryTest_Distance extends EnvQueryTest {
 	static C(Other: UObject | any): EnvQueryTest_Distance;
 }
 
-declare type EEnvTestDot = 'Dot3D' | 'Dot2D';
-declare var EEnvTestDot : { Dot3D:'Dot3D',Dot2D:'Dot2D', };
+declare type EEnvTestDot = 'Dot3D' | 'Dot2D' | 'EEnvTestDot_MAX';
+declare var EEnvTestDot : { Dot3D:'Dot3D',Dot2D:'Dot2D',EEnvTestDot_MAX:'EEnvTestDot_MAX', };
 declare class EnvQueryTest_Dot extends EnvQueryTest { 
 	LineA: EnvDirection;
 	LineB: EnvDirection;
-	TestMode: TestMode;
+	TestMode: EEnvTestDot;
 	bAbsoluteValue: boolean;
 	static Load(ResourceName: string): EnvQueryTest_Dot;
 	static Find(Outer: UObject, ResourceName: string): EnvQueryTest_Dot;
@@ -16157,7 +18178,7 @@ declare class EnvQueryTest_Dot extends EnvQueryTest {
 declare class EnvQueryTest_GameplayTags extends EnvQueryTest { 
 	TagQueryToMatch: GameplayTagQuery;
 	bUpdatedToUseQuery: boolean;
-	TagsToMatch: TagsToMatch;
+	TagsToMatch: EGameplayContainerMatchType;
 	GameplayTags: GameplayTagContainer;
 	static Load(ResourceName: string): EnvQueryTest_GameplayTags;
 	static Find(Outer: UObject, ResourceName: string): EnvQueryTest_GameplayTags;
@@ -16166,8 +18187,8 @@ declare class EnvQueryTest_GameplayTags extends EnvQueryTest {
 	static C(Other: UObject | any): EnvQueryTest_GameplayTags;
 }
 
-declare type EEnvOverlapShape = 'Box' | 'Sphere' | 'Capsule';
-declare var EEnvOverlapShape : { Box:'Box',Sphere:'Sphere',Capsule:'Capsule', };
+declare type EEnvOverlapShape = 'Box' | 'Sphere' | 'Capsule' | 'EEnvOverlapShape_MAX';
+declare var EEnvOverlapShape : { Box:'Box',Sphere:'Sphere',Capsule:'Capsule',EEnvOverlapShape_MAX:'EEnvOverlapShape_MAX', };
 declare class EnvOverlapData { 
 	ExtentX: number;
 	ExtentY: number;
@@ -16190,8 +18211,8 @@ declare class EnvQueryTest_Overlap extends EnvQueryTest {
 	static C(Other: UObject | any): EnvQueryTest_Overlap;
 }
 
-declare type EEnvTestPathfinding = 'PathExist' | 'PathCost' | 'PathLength';
-declare var EEnvTestPathfinding : { PathExist:'PathExist',PathCost:'PathCost',PathLength:'PathLength', };
+declare type EEnvTestPathfinding = 'PathExist' | 'PathCost' | 'PathLength' | 'EEnvTestPathfinding_MAX';
+declare var EEnvTestPathfinding : { PathExist:'PathExist',PathCost:'PathCost',PathLength:'PathLength',EEnvTestPathfinding_MAX:'EEnvTestPathfinding_MAX', };
 declare class EnvQueryTest_Pathfinding extends EnvQueryTest { 
 	TestMode: EEnvTestPathfinding;
 	Context: UnrealEngineClass;
@@ -16268,21 +18289,22 @@ declare class EQSRenderingComponent extends PrimitiveComponent {
 	static C(Other: UObject | any): EQSRenderingComponent;
 }
 
-declare type EEnvQueryHightlightMode = 'All' | 'Best5Pct' | 'Best25Pct';
-declare var EEnvQueryHightlightMode : { All:'All',Best5Pct:'Best5Pct',Best25Pct:'Best25Pct', };
+declare type EEnvQueryHightlightMode = 'All' | 'Best5Pct' | 'Best25Pct' | 'EEnvQueryHightlightMode_MAX';
+declare var EEnvQueryHightlightMode : { All:'All',Best5Pct:'Best5Pct',Best25Pct:'Best25Pct',EEnvQueryHightlightMode_MAX:'EEnvQueryHightlightMode_MAX', };
 declare class EQSTestingPawn extends Character { 
 	QueryTemplate: EnvQuery;
 	QueryParams: EnvNamedValue[];
 	QueryConfig: AIDynamicParam[];
 	TimeLimitPerStep: number;
 	StepToDebugDraw: number;
-	HighlightMode: HighlightMode;
+	HighlightMode: EEnvQueryHightlightMode;
 	bDrawLabels: boolean;
 	bDrawFailedItems: boolean;
 	bReRunQueryOnlyOnFinishedMove: boolean;
 	bShouldBeVisibleInGame: boolean;
 	bTickDuringGame: boolean;
 	QueryingMode: EEnvQueryRunMode;
+	NavAgentProperties: NavAgentProperties;
 	EdRenderComp: EQSRenderingComponent;
 	static GetDefaultObject(): EQSTestingPawn;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EQSTestingPawn;
@@ -16320,6 +18342,132 @@ declare class NavFilter_AIControllerDefault extends NavigationQueryFilter {
 	static C(Other: UObject | any): NavFilter_AIControllerDefault;
 }
 
+declare type ENavLinkDirection = 'BothWays' | 'LeftToRight' | 'RightToLeft' | 'ENavLinkDirection_MAX';
+declare var ENavLinkDirection : { BothWays:'BothWays',LeftToRight:'LeftToRight',RightToLeft:'RightToLeft',ENavLinkDirection_MAX:'ENavLinkDirection_MAX', };
+declare class NavigationLinkBase { 
+	LeftProjectHeight: number;
+	MaxFallDownLength: number;
+	Direction: ENavLinkDirection;
+	SnapRadius: number;
+	SnapHeight: number;
+	SupportedAgents: NavAgentSelector;
+	bSupportsAgent0: boolean;
+	bSupportsAgent1: boolean;
+	bSupportsAgent2: boolean;
+	bSupportsAgent3: boolean;
+	bSupportsAgent4: boolean;
+	bSupportsAgent5: boolean;
+	bSupportsAgent6: boolean;
+	bSupportsAgent7: boolean;
+	bSupportsAgent8: boolean;
+	bSupportsAgent9: boolean;
+	bSupportsAgent10: boolean;
+	bSupportsAgent11: boolean;
+	bSupportsAgent12: boolean;
+	bSupportsAgent13: boolean;
+	bSupportsAgent14: boolean;
+	bSupportsAgent15: boolean;
+	Description: string;
+	bUseSnapHeight: boolean;
+	bSnapToCheapestArea: boolean;
+	bCustomFlag0: boolean;
+	bCustomFlag1: boolean;
+	bCustomFlag2: boolean;
+	bCustomFlag3: boolean;
+	bCustomFlag4: boolean;
+	bCustomFlag5: boolean;
+	bCustomFlag6: boolean;
+	bCustomFlag7: boolean;
+	AreaClass: UnrealEngineClass;
+	clone() : NavigationLinkBase;
+	static C(Other: UObject | any): NavigationLinkBase;
+}
+
+declare class NavigationLink extends NavigationLinkBase { 
+	Left: Vector;
+	Right: Vector;
+	clone() : NavigationLink;
+	static C(Other: UObject | any): NavigationLink;
+}
+
+declare class NavigationSegmentLink extends NavigationLinkBase { 
+	LeftStart: Vector;
+	LeftEnd: Vector;
+	RightStart: Vector;
+	RightEnd: Vector;
+	clone() : NavigationSegmentLink;
+	static C(Other: UObject | any): NavigationSegmentLink;
+}
+
+declare class NavRelevantComponent extends ActorComponent { 
+	bAttachToOwnersRoot: boolean;
+	CachedNavParent: UObject;
+	static Load(ResourceName: string): NavRelevantComponent;
+	static Find(Outer: UObject, ResourceName: string): NavRelevantComponent;
+	static GetDefaultObject(): NavRelevantComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavRelevantComponent;
+	SetNavigationRelevancy(bRelevant: boolean): void;
+	static C(Other: UObject | any): NavRelevantComponent;
+}
+
+declare class NavLinkCustomComponent extends NavRelevantComponent { 
+	NavLinkUserId: any;
+	EnabledAreaClass: UnrealEngineClass;
+	DisabledAreaClass: UnrealEngineClass;
+	LinkRelativeStart: Vector;
+	LinkRelativeEnd: Vector;
+	LinkDirection: ENavLinkDirection;
+	bLinkEnabled: boolean;
+	bNotifyWhenEnabled: boolean;
+	bNotifyWhenDisabled: boolean;
+	bCreateBoxObstacle: boolean;
+	ObstacleOffset: Vector;
+	ObstacleExtent: Vector;
+	ObstacleAreaClass: UnrealEngineClass;
+	BroadcastRadius: number;
+	BroadcastInterval: number;
+	BroadcastChannel: ECollisionChannel;
+	static Load(ResourceName: string): NavLinkCustomComponent;
+	static Find(Outer: UObject, ResourceName: string): NavLinkCustomComponent;
+	static GetDefaultObject(): NavLinkCustomComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkCustomComponent;
+	static C(Other: UObject | any): NavLinkCustomComponent;
+}
+
+declare class NavLinkRenderingComponent extends PrimitiveComponent { 
+	static Load(ResourceName: string): NavLinkRenderingComponent;
+	static Find(Outer: UObject, ResourceName: string): NavLinkRenderingComponent;
+	static GetDefaultObject(): NavLinkRenderingComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkRenderingComponent;
+	static C(Other: UObject | any): NavLinkRenderingComponent;
+}
+
+declare class NavLinkProxy extends Actor { 
+	PointLinks: NavigationLink[];
+	SegmentLinks: NavigationSegmentLink[];
+	SmartLinkComp: NavLinkCustomComponent;
+	bSmartLinkIsRelevant: boolean;
+	EdRenderComp: NavLinkRenderingComponent;
+	SpriteComponent: BillboardComponent;
+	OnSmartLinkReached: UnrealEngineMulticastDelegate<(MovingActor: Actor, DestinationPoint: Vector) => void>;
+	static GetDefaultObject(): NavLinkProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkProxy;
+	SetSmartLinkEnabled(bEnabled: boolean): void;
+	ResumePathFollowing(Agent: Actor): void;
+	ReceiveSmartLinkReached(Agent: Actor,Destination: Vector): void;
+	IsSmartLinkEnabled(): boolean;
+	HasMovingAgents(): boolean;
+	static C(Other: UObject | any): NavLinkProxy;
+}
+
+declare class PathFollowingManager extends UObject { 
+	static Load(ResourceName: string): PathFollowingManager;
+	static Find(Outer: UObject, ResourceName: string): PathFollowingManager;
+	static GetDefaultObject(): PathFollowingManager;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PathFollowingManager;
+	static C(Other: UObject | any): PathFollowingManager;
+}
+
 declare class PawnAction_BlueprintBase extends PawnAction { 
 	static Load(ResourceName: string): PawnAction_BlueprintBase;
 	static Find(Outer: UObject, ResourceName: string): PawnAction_BlueprintBase;
@@ -16352,8 +18500,8 @@ declare class PawnAction_Move extends PawnAction {
 	static C(Other: UObject | any): PawnAction_Move;
 }
 
-declare type EPawnActionFailHandling = 'RequireSuccess' | 'IgnoreFailure';
-declare var EPawnActionFailHandling : { RequireSuccess:'RequireSuccess',IgnoreFailure:'IgnoreFailure', };
+declare type EPawnActionFailHandling = 'RequireSuccess' | 'IgnoreFailure' | 'EPawnActionFailHandling_MAX';
+declare var EPawnActionFailHandling : { RequireSuccess:'RequireSuccess',IgnoreFailure:'IgnoreFailure',EPawnActionFailHandling_MAX:'EPawnActionFailHandling_MAX', };
 declare class PawnAction_Repeat extends PawnAction { 
 	ActionToRepeat: PawnAction;
 	RecentActionCopy: PawnAction;
@@ -16419,149 +18567,385 @@ declare class VisualLoggerExtension extends UObject {
 	static C(Other: UObject | any): VisualLoggerExtension;
 }
 
-declare type ETimezoneSetting = 'InternationalDateLineWest' | 'CoordinatedUniversalTimeNeg11' | 'Samoa' | 'Hawaii' | 'Alaska' | 'PacificTime_USCAN' | 'BajaCalifornia' | 'MountainTime_USCAN' | 'Chihuahua_LaPaz_Mazatlan' | 'Arizona' | 'Saskatchewan' | 'CentralAmerica' | 'CentralTime_USCAN' | 'Guadalajara_MexicoCity_Monterrey' | 'EasternTime_USCAN' | 'Bogota_Lima_Quito' | 'Indiana_US' | 'Caracas' | 'AtlanticTime_Canada' | 'Cuiaba' | 'Santiago' | 'Georgetown_LaPaz_Manaus_SanJuan' | 'Asuncion' | 'Newfoundland' | 'Brasilia' | 'Greenland' | 'Montevideo' | 'Cayenne_Fortaleza' | 'BuenosAires' | 'MidAtlantic' | 'CoordinatedUniversalTimeNeg02' | 'Azores' | 'CaboVerdeIs' | 'Dublin_Edinburgh_Lisbon_London' | 'Monrovia_Reykjavik' | 'Casablanca' | 'UTC' | 'Belgrade_Bratislava_Budapest_Ljubljana_Prague' | 'Sarajevo_Skopje_Warsaw_Zagreb' | 'Brussels_Copenhagen_Madrid_Paris' | 'WestCentralAfrica' | 'Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna' | 'Windhoek' | 'Minsk' | 'Cairo' | 'Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius' | 'Athens_Bucharest' | 'Jerusalem' | 'Amman' | 'Beirut' | 'Harare_Pretoria' | 'Damascus' | 'Istanbul' | 'Kuwait_Riyadh' | 'Baghdad' | 'Nairobi' | 'Kaliningrad' | 'Tehran' | 'Moscow_StPetersburg_Volgograd' | 'AbuDhabi_Muscat' | 'Baku' | 'Yerevan' | 'Tbilisi' | 'PortLouis' | 'Kabul' | 'Tashkent' | 'Islamabad_Karachi' | 'Chennai_Kolkata_Mumbai_NewDelhi' | 'SriJayawardenepura' | 'Kathmandu' | 'Ekaterinburg' | 'Astana' | 'Dhaka' | 'Yangon_Rangoon' | 'Novosibirsk' | 'Bangkok_Hanoi_Jakarta' | 'Krasnoyarsk' | 'Beijing_Chongqing_HongKong_Urumqi' | 'KualaLumpur_Singapore' | 'Taipei' | 'Perth' | 'Ulaanbaatar' | 'Irkutsk' | 'Seoul' | 'Osaka_Sapporo_Tokyo' | 'Darwin' | 'Adelaide' | 'Yakutsk' | 'Canberra_Melbourne_Sydney' | 'Brisbane' | 'Hobart' | 'Guam_PortMoresby' | 'Vladivostok' | 'SolomonIs_NewCaledonia' | 'Magadan' | 'Fiji' | 'Auckland_Wellington' | 'CoordinatedUniversalTime12' | 'Nukualofa' | 'LocalTime';
-declare var ETimezoneSetting : { InternationalDateLineWest:'InternationalDateLineWest',CoordinatedUniversalTimeNeg11:'CoordinatedUniversalTimeNeg11',Samoa:'Samoa',Hawaii:'Hawaii',Alaska:'Alaska',PacificTime_USCAN:'PacificTime_USCAN',BajaCalifornia:'BajaCalifornia',MountainTime_USCAN:'MountainTime_USCAN',Chihuahua_LaPaz_Mazatlan:'Chihuahua_LaPaz_Mazatlan',Arizona:'Arizona',Saskatchewan:'Saskatchewan',CentralAmerica:'CentralAmerica',CentralTime_USCAN:'CentralTime_USCAN',Guadalajara_MexicoCity_Monterrey:'Guadalajara_MexicoCity_Monterrey',EasternTime_USCAN:'EasternTime_USCAN',Bogota_Lima_Quito:'Bogota_Lima_Quito',Indiana_US:'Indiana_US',Caracas:'Caracas',AtlanticTime_Canada:'AtlanticTime_Canada',Cuiaba:'Cuiaba',Santiago:'Santiago',Georgetown_LaPaz_Manaus_SanJuan:'Georgetown_LaPaz_Manaus_SanJuan',Asuncion:'Asuncion',Newfoundland:'Newfoundland',Brasilia:'Brasilia',Greenland:'Greenland',Montevideo:'Montevideo',Cayenne_Fortaleza:'Cayenne_Fortaleza',BuenosAires:'BuenosAires',MidAtlantic:'MidAtlantic',CoordinatedUniversalTimeNeg02:'CoordinatedUniversalTimeNeg02',Azores:'Azores',CaboVerdeIs:'CaboVerdeIs',Dublin_Edinburgh_Lisbon_London:'Dublin_Edinburgh_Lisbon_London',Monrovia_Reykjavik:'Monrovia_Reykjavik',Casablanca:'Casablanca',UTC:'UTC',Belgrade_Bratislava_Budapest_Ljubljana_Prague:'Belgrade_Bratislava_Budapest_Ljubljana_Prague',Sarajevo_Skopje_Warsaw_Zagreb:'Sarajevo_Skopje_Warsaw_Zagreb',Brussels_Copenhagen_Madrid_Paris:'Brussels_Copenhagen_Madrid_Paris',WestCentralAfrica:'WestCentralAfrica',Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna:'Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna',Windhoek:'Windhoek',Minsk:'Minsk',Cairo:'Cairo',Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius:'Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius',Athens_Bucharest:'Athens_Bucharest',Jerusalem:'Jerusalem',Amman:'Amman',Beirut:'Beirut',Harare_Pretoria:'Harare_Pretoria',Damascus:'Damascus',Istanbul:'Istanbul',Kuwait_Riyadh:'Kuwait_Riyadh',Baghdad:'Baghdad',Nairobi:'Nairobi',Kaliningrad:'Kaliningrad',Tehran:'Tehran',Moscow_StPetersburg_Volgograd:'Moscow_StPetersburg_Volgograd',AbuDhabi_Muscat:'AbuDhabi_Muscat',Baku:'Baku',Yerevan:'Yerevan',Tbilisi:'Tbilisi',PortLouis:'PortLouis',Kabul:'Kabul',Tashkent:'Tashkent',Islamabad_Karachi:'Islamabad_Karachi',Chennai_Kolkata_Mumbai_NewDelhi:'Chennai_Kolkata_Mumbai_NewDelhi',SriJayawardenepura:'SriJayawardenepura',Kathmandu:'Kathmandu',Ekaterinburg:'Ekaterinburg',Astana:'Astana',Dhaka:'Dhaka',Yangon_Rangoon:'Yangon_Rangoon',Novosibirsk:'Novosibirsk',Bangkok_Hanoi_Jakarta:'Bangkok_Hanoi_Jakarta',Krasnoyarsk:'Krasnoyarsk',Beijing_Chongqing_HongKong_Urumqi:'Beijing_Chongqing_HongKong_Urumqi',KualaLumpur_Singapore:'KualaLumpur_Singapore',Taipei:'Taipei',Perth:'Perth',Ulaanbaatar:'Ulaanbaatar',Irkutsk:'Irkutsk',Seoul:'Seoul',Osaka_Sapporo_Tokyo:'Osaka_Sapporo_Tokyo',Darwin:'Darwin',Adelaide:'Adelaide',Yakutsk:'Yakutsk',Canberra_Melbourne_Sydney:'Canberra_Melbourne_Sydney',Brisbane:'Brisbane',Hobart:'Hobart',Guam_PortMoresby:'Guam_PortMoresby',Vladivostok:'Vladivostok',SolomonIs_NewCaledonia:'SolomonIs_NewCaledonia',Magadan:'Magadan',Fiji:'Fiji',Auckland_Wellington:'Auckland_Wellington',CoordinatedUniversalTime12:'CoordinatedUniversalTime12',Nukualofa:'Nukualofa',LocalTime:'LocalTime', };
-declare class InternationalizationSettingsModel extends UObject { 
-	DisplayTimezone: DisplayTimezone;
-	static Load(ResourceName: string): InternationalizationSettingsModel;
-	static Find(Outer: UObject, ResourceName: string): InternationalizationSettingsModel;
-	static GetDefaultObject(): InternationalizationSettingsModel;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InternationalizationSettingsModel;
-	static C(Other: UObject | any): InternationalizationSettingsModel;
+declare class AbstractNavData extends NavigationData { 
+	static GetDefaultObject(): AbstractNavData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AbstractNavData;
+	static C(Other: UObject | any): AbstractNavData;
+}
+
+declare class NavArea_Default extends NavArea { 
+	static Load(ResourceName: string): NavArea_Default;
+	static Find(Outer: UObject, ResourceName: string): NavArea_Default;
+	static GetDefaultObject(): NavArea_Default;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavArea_Default;
+	static C(Other: UObject | any): NavArea_Default;
+}
+
+declare class NavArea_LowHeight extends NavArea { 
+	static Load(ResourceName: string): NavArea_LowHeight;
+	static Find(Outer: UObject, ResourceName: string): NavArea_LowHeight;
+	static GetDefaultObject(): NavArea_LowHeight;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavArea_LowHeight;
+	static C(Other: UObject | any): NavArea_LowHeight;
+}
+
+declare class NavArea_Null extends NavArea { 
+	static Load(ResourceName: string): NavArea_Null;
+	static Find(Outer: UObject, ResourceName: string): NavArea_Null;
+	static GetDefaultObject(): NavArea_Null;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavArea_Null;
+	static C(Other: UObject | any): NavArea_Null;
+}
+
+declare class NavArea_Obstacle extends NavArea { 
+	static Load(ResourceName: string): NavArea_Obstacle;
+	static Find(Outer: UObject, ResourceName: string): NavArea_Obstacle;
+	static GetDefaultObject(): NavArea_Obstacle;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavArea_Obstacle;
+	static C(Other: UObject | any): NavArea_Obstacle;
+}
+
+declare class NavAreaMeta extends NavArea { 
+	static Load(ResourceName: string): NavAreaMeta;
+	static Find(Outer: UObject, ResourceName: string): NavAreaMeta;
+	static GetDefaultObject(): NavAreaMeta;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavAreaMeta;
+	static C(Other: UObject | any): NavAreaMeta;
+}
+
+declare class NavAreaMeta_SwitchByAgent extends NavAreaMeta { 
+	Agent0Area: UnrealEngineClass;
+	Agent1Area: UnrealEngineClass;
+	Agent2Area: UnrealEngineClass;
+	Agent3Area: UnrealEngineClass;
+	Agent4Area: UnrealEngineClass;
+	Agent5Area: UnrealEngineClass;
+	Agent6Area: UnrealEngineClass;
+	Agent7Area: UnrealEngineClass;
+	Agent8Area: UnrealEngineClass;
+	Agent9Area: UnrealEngineClass;
+	Agent10Area: UnrealEngineClass;
+	Agent11Area: UnrealEngineClass;
+	Agent12Area: UnrealEngineClass;
+	Agent13Area: UnrealEngineClass;
+	Agent14Area: UnrealEngineClass;
+	Agent15Area: UnrealEngineClass;
+	static Load(ResourceName: string): NavAreaMeta_SwitchByAgent;
+	static Find(Outer: UObject, ResourceName: string): NavAreaMeta_SwitchByAgent;
+	static GetDefaultObject(): NavAreaMeta_SwitchByAgent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavAreaMeta_SwitchByAgent;
+	static C(Other: UObject | any): NavAreaMeta_SwitchByAgent;
 }
 
-declare class EditorWorldExtension extends UObject { 
-	ExtensionActors: Actor[];
-	static Load(ResourceName: string): EditorWorldExtension;
-	static Find(Outer: UObject, ResourceName: string): EditorWorldExtension;
-	static GetDefaultObject(): EditorWorldExtension;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorWorldExtension;
-	static C(Other: UObject | any): EditorWorldExtension;
+declare class NavCollisionCylinder { 
+	Offset: Vector;
+	Radius: number;
+	Height: number;
+	clone() : NavCollisionCylinder;
+	static C(Other: UObject | any): NavCollisionCylinder;
 }
 
-declare class ViewportInteractor extends UObject { 
-	WorldInteraction: ViewportWorldInteraction;
-	OtherInteractor: ViewportInteractor;
-	static Load(ResourceName: string): ViewportInteractor;
-	static Find(Outer: UObject, ResourceName: string): ViewportInteractor;
-	static GetDefaultObject(): ViewportInteractor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportInteractor;
-	static C(Other: UObject | any): ViewportInteractor;
+declare class NavCollisionBox { 
+	Offset: Vector;
+	Extent: Vector;
+	clone() : NavCollisionBox;
+	static C(Other: UObject | any): NavCollisionBox;
 }
 
-declare class GizmoHandle { 
-	clone() : GizmoHandle;
-	static C(Other: UObject | any): GizmoHandle;
+declare class NavCollision extends NavCollisionBase { 
+	CylinderCollision: NavCollisionCylinder[];
+	BoxCollision: NavCollisionBox[];
+	AreaClass: UnrealEngineClass;
+	bGatherConvexGeometry: boolean;
+	static Load(ResourceName: string): NavCollision;
+	static Find(Outer: UObject, ResourceName: string): NavCollision;
+	static GetDefaultObject(): NavCollision;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavCollision;
+	static C(Other: UObject | any): NavCollision;
 }
 
-declare class ViewportDragOperation extends UObject { 
-	static Load(ResourceName: string): ViewportDragOperation;
-	static Find(Outer: UObject, ResourceName: string): ViewportDragOperation;
-	static GetDefaultObject(): ViewportDragOperation;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportDragOperation;
-	static C(Other: UObject | any): ViewportDragOperation;
+declare class NavigationGraph extends NavigationData { 
+	static GetDefaultObject(): NavigationGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationGraph;
+	static C(Other: UObject | any): NavigationGraph;
 }
 
-declare class ViewportDragOperationComponent extends ActorComponent { 
-	DragOperation: ViewportDragOperation;
-	DragOperationSubclass: UnrealEngineClass;
-	static Load(ResourceName: string): ViewportDragOperationComponent;
-	static Find(Outer: UObject, ResourceName: string): ViewportDragOperationComponent;
-	static GetDefaultObject(): ViewportDragOperationComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportDragOperationComponent;
-	static C(Other: UObject | any): ViewportDragOperationComponent;
+declare class NavigationGraphNode extends Actor { 
+	static GetDefaultObject(): NavigationGraphNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationGraphNode;
+	static C(Other: UObject | any): NavigationGraphNode;
 }
 
-declare class GizmoHandleGroup extends SceneComponent { 
-	GizmoMaterial: MaterialInterface;
-	TranslucentGizmoMaterial: MaterialInterface;
-	Handles: GizmoHandle[];
-	OwningTransformGizmoActor: BaseTransformGizmo;
-	DragOperationComponent: ViewportDragOperationComponent;
-	static Load(ResourceName: string): GizmoHandleGroup;
-	static Find(Outer: UObject, ResourceName: string): GizmoHandleGroup;
-	static GetDefaultObject(): GizmoHandleGroup;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GizmoHandleGroup;
-	static C(Other: UObject | any): GizmoHandleGroup;
+declare class NavGraphNode { 
+	Owner: UObject;
+	clone() : NavGraphNode;
+	static C(Other: UObject | any): NavGraphNode;
 }
 
-declare class BaseTransformGizmo extends Actor { 
-	SceneComponent: SceneComponent;
-	AllHandleGroups: GizmoHandleGroup[];
-	WorldInteraction: ViewportWorldInteraction;
-	static GetDefaultObject(): BaseTransformGizmo;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseTransformGizmo;
-	static C(Other: UObject | any): BaseTransformGizmo;
+declare class NavigationGraphNodeComponent extends SceneComponent { 
+	UNode: NavGraphNode;
+	NextNodeComponent: NavigationGraphNodeComponent;
+	PrevNodeComponent: NavigationGraphNodeComponent;
+	static Load(ResourceName: string): NavigationGraphNodeComponent;
+	static Find(Outer: UObject, ResourceName: string): NavigationGraphNodeComponent;
+	static GetDefaultObject(): NavigationGraphNodeComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationGraphNodeComponent;
+	static C(Other: UObject | any): NavigationGraphNodeComponent;
 }
 
-declare class MouseCursorInteractor extends ViewportInteractor { 
-	static Load(ResourceName: string): MouseCursorInteractor;
-	static Find(Outer: UObject, ResourceName: string): MouseCursorInteractor;
-	static GetDefaultObject(): MouseCursorInteractor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MouseCursorInteractor;
-	static C(Other: UObject | any): MouseCursorInteractor;
+declare class NavigationInvokerComponent extends ActorComponent { 
+	TileGenerationRadius: number;
+	TileRemovalRadius: number;
+	static Load(ResourceName: string): NavigationInvokerComponent;
+	static Find(Outer: UObject, ResourceName: string): NavigationInvokerComponent;
+	static GetDefaultObject(): NavigationInvokerComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationInvokerComponent;
+	static C(Other: UObject | any): NavigationInvokerComponent;
 }
 
-declare class ViewportInteractionAssetContainer extends DataAsset { 
-	GizmoHandleSelectedSound: SoundBase;
-	GizmoHandleDropSound: SoundBase;
-	SelectionChangeSound: SoundBase;
-	SelectionDropSound: SoundBase;
-	SelectionStartDragSound: SoundBase;
-	GridSnapSound: SoundBase;
-	ActorSnapSound: SoundBase;
-	UndoSound: SoundBase;
-	RedoSound: SoundBase;
-	GridMesh: StaticMesh;
-	TranslationHandleMesh: StaticMesh;
-	UniformScaleHandleMesh: StaticMesh;
-	ScaleHandleMesh: StaticMesh;
-	PlaneTranslationHandleMesh: StaticMesh;
-	RotationHandleMesh: StaticMesh;
-	RotationHandleSelectedMesh: StaticMesh;
-	StartRotationIndicatorMesh: StaticMesh;
-	CurrentRotationIndicatorMesh: StaticMesh;
-	FreeRotationHandleMesh: StaticMesh;
-	GridMaterial: MaterialInterface;
-	TransformGizmoMaterial: MaterialInterface;
-	TranslucentTransformGizmoMaterial: MaterialInterface;
-	static Load(ResourceName: string): ViewportInteractionAssetContainer;
-	static Find(Outer: UObject, ResourceName: string): ViewportInteractionAssetContainer;
-	static GetDefaultObject(): ViewportInteractionAssetContainer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportInteractionAssetContainer;
-	static C(Other: UObject | any): ViewportInteractionAssetContainer;
+declare class NavigationPathGenerator extends Interface { 
+	static Load(ResourceName: string): NavigationPathGenerator;
+	static Find(Outer: UObject, ResourceName: string): NavigationPathGenerator;
+	static GetDefaultObject(): NavigationPathGenerator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationPathGenerator;
+	static C(Other: UObject | any): NavigationPathGenerator;
 }
 
-declare class ViewportWorldInteraction extends EditorWorldExtension { 
-	Interactors: ViewportInteractor[];
-	ViewportTransformer: ViewportTransformer;
-	TransformGizmoActor: BaseTransformGizmo;
-	SnapGridActor: Actor;
-	SnapGridMeshComponent: StaticMeshComponent;
-	SnapGridMID: MaterialInstanceDynamic;
-	DefaultMouseCursorInteractor: MouseCursorInteractor;
-	ActorsToExcludeFromHitTest: any[];
-	AssetContainer: ViewportInteractionAssetContainer;
-	static Load(ResourceName: string): ViewportWorldInteraction;
-	static Find(Outer: UObject, ResourceName: string): ViewportWorldInteraction;
-	static GetDefaultObject(): ViewportWorldInteraction;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportWorldInteraction;
-	static C(Other: UObject | any): ViewportWorldInteraction;
+declare type ENavDataGatheringModeConfig = 'Invalid' | 'Instant' | 'Lazy' | 'ENavDataGatheringModeConfig_MAX';
+declare var ENavDataGatheringModeConfig : { Invalid:'Invalid',Instant:'Instant',Lazy:'Lazy',ENavDataGatheringModeConfig_MAX:'ENavDataGatheringModeConfig_MAX', };
+declare type FNavigationSystemRunMode = 'InvalidMode' | 'GameMode' | 'EditorMode' | 'SimulationMode' | 'PIEMode' | 'FNavigationSystemRunMode_MAX';
+declare var FNavigationSystemRunMode : { InvalidMode:'InvalidMode',GameMode:'GameMode',EditorMode:'EditorMode',SimulationMode:'SimulationMode',PIEMode:'PIEMode',FNavigationSystemRunMode_MAX:'FNavigationSystemRunMode_MAX', };
+declare class NavMeshBoundsVolume extends Volume { 
+	SupportedAgents: NavAgentSelector;
+	static GetDefaultObject(): NavMeshBoundsVolume;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavMeshBoundsVolume;
+	static C(Other: UObject | any): NavMeshBoundsVolume;
 }
 
-declare class ViewportTransformer extends UObject { 
-	ViewportWorldInteraction: ViewportWorldInteraction;
-	static Load(ResourceName: string): ViewportTransformer;
-	static Find(Outer: UObject, ResourceName: string): ViewportTransformer;
-	static GetDefaultObject(): ViewportTransformer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewportTransformer;
-	Shutdown(): void;
-	ShouldCenterTransformGizmoPivot(): boolean;
-	OnStopDragging(Interactor: ViewportInteractor): void;
-	OnStartDragging(Interactor: ViewportInteractor): void;
-	Init(InitViewportWorldInteraction: ViewportWorldInteraction): void;
-	CanAlignToActors(): boolean;
-	static C(Other: UObject | any): ViewportTransformer;
+declare type ENavigationQueryResult = 'Invalid' | 'Error' | 'Fail' | 'Success' | 'ENavigationQueryResult_MAX';
+declare var ENavigationQueryResult : { Invalid:'Invalid',Error:'Error',Fail:'Fail',Success:'Success',ENavigationQueryResult_MAX:'ENavigationQueryResult_MAX', };
+declare class NavigationSystemV1 extends NavigationSystemBase { 
+	MainNavData: NavigationData;
+	AbstractNavData: NavigationData;
+	CrowdManagerClass: UnrealEngineClass;
+	bAutoCreateNavigationData: boolean;
+	bSpawnNavDataInNavBoundsLevel: boolean;
+	bAllowClientSideNavigation: boolean;
+	bShouldDiscardSubLevelNavData: boolean;
+	bTickWhilePaused: boolean;
+	bSupportRebuilding: boolean;
+	bInitialBuildingLocked: boolean;
+	bSkipAgentHeightCheckWhenPickingNavData: boolean;
+	DataGatheringMode: ENavDataGatheringModeConfig;
+	bGenerateNavigationOnlyAroundNavigationInvokers: boolean;
+	ActiveTilesUpdateInterval: number;
+	SupportedAgents: NavDataConfig[];
+	DirtyAreasUpdateFreq: number;
+	NavDataSet: NavigationData[];
+	NavDataRegistrationQueue: NavigationData[];
+	OnNavDataRegisteredEvent: UnrealEngineMulticastDelegate<(NavData: NavigationData) => void>;
+	OnNavigationGenerationFinishedDelegate: UnrealEngineMulticastDelegate<(NavData: NavigationData) => void>;
+	OperationMode: FNavigationSystemRunMode;
+	static Load(ResourceName: string): NavigationSystemV1;
+	static Find(Outer: UObject, ResourceName: string): NavigationSystemV1;
+	static GetDefaultObject(): NavigationSystemV1;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationSystemV1;
+	UnregisterNavigationInvoker(Invoker: Actor): void;
+	static SimpleMoveToLocation(Controller: Controller,Goal: Vector): void;
+	static SimpleMoveToActor(Controller: Controller,Goal: Actor): void;
+	SetMaxSimultaneousTileGenerationJobsCount(MaxNumberOfJobs: number): void;
+	SetGeometryGatheringMode(NewMode: ENavDataGatheringModeConfig): void;
+	ResetMaxSimultaneousTileGenerationJobsCount(): void;
+	RegisterNavigationInvoker(Invoker: Actor,TileGenerationRadius: number,TileRemovalRadius: number): void;
+	static ProjectPointToNavigation(WorldContextObject: UObject,Point: Vector,NavData: NavigationData,FilterClass: UnrealEngineClass,QueryExtent: Vector): Vector;
+	OnNavigationBoundsUpdated(NavVolume: NavMeshBoundsVolume): void;
+	static NavigationRaycast(WorldContextObject: UObject,RayStart: Vector,RayEnd: Vector,HitLocation?: Vector,FilterClass?: UnrealEngineClass,Querier?: Controller): {HitLocation: Vector, $: boolean};
+	static K2_ProjectPointToNavigation(WorldContextObject: UObject,Point: Vector,ProjectedLocation?: Vector,NavData?: NavigationData,FilterClass?: UnrealEngineClass,QueryExtent?: Vector): {ProjectedLocation: Vector, $: boolean};
+	static K2_GetRandomReachablePointInRadius(WorldContextObject: UObject,Origin: Vector,RandomLocation?: Vector,Radius?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {RandomLocation: Vector, $: boolean};
+	static K2_GetRandomPointInNavigableRadius(WorldContextObject: UObject,Origin: Vector,RandomLocation?: Vector,Radius?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {RandomLocation: Vector, $: boolean};
+	static IsNavigationBeingBuiltOrLocked(WorldContextObject: UObject): boolean;
+	static IsNavigationBeingBuilt(WorldContextObject: UObject): boolean;
+	static GetRandomReachablePointInRadius(WorldContextObject: UObject,Origin: Vector,Radius: number,NavData: NavigationData,FilterClass: UnrealEngineClass): Vector;
+	static GetRandomPointInNavigableRadius(WorldContextObject: UObject,Origin: Vector,Radius: number,NavData: NavigationData,FilterClass: UnrealEngineClass): Vector;
+	static GetPathLength(WorldContextObject: UObject,PathStart: Vector,PathEnd: Vector,PathLength?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {PathLength: number, $: ENavigationQueryResult};
+	static GetPathCost(WorldContextObject: UObject,PathStart: Vector,PathEnd: Vector,PathCost?: number,NavData?: NavigationData,FilterClass?: UnrealEngineClass): {PathCost: number, $: ENavigationQueryResult};
+	static GetNavigationSystem(WorldContextObject: UObject): NavigationSystemV1;
+	static FindPathToLocationSynchronously(WorldContextObject: UObject,PathStart: Vector,PathEnd: Vector,PathfindingContext: Actor,FilterClass: UnrealEngineClass): NavigationPath;
+	static FindPathToActorSynchronously(WorldContextObject: UObject,PathStart: Vector,GoalActor: Actor,TetherDistance: number,PathfindingContext: Actor,FilterClass: UnrealEngineClass): NavigationPath;
+	static C(Other: UObject | any): NavigationSystemV1;
+}
+
+declare class NavigationSystemModuleConfig extends NavigationSystemConfig { 
+	bStrictlyStatic: boolean;
+	bCreateOnClient: boolean;
+	bAutoSpawnMissingNavData: boolean;
+	bSpawnNavDataInNavBoundsLevel: boolean;
+	static Load(ResourceName: string): NavigationSystemModuleConfig;
+	static Find(Outer: UObject, ResourceName: string): NavigationSystemModuleConfig;
+	static GetDefaultObject(): NavigationSystemModuleConfig;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationSystemModuleConfig;
+	static C(Other: UObject | any): NavigationSystemModuleConfig;
+}
+
+declare class NavTestRenderingComponent extends PrimitiveComponent { 
+	static Load(ResourceName: string): NavTestRenderingComponent;
+	static Find(Outer: UObject, ResourceName: string): NavTestRenderingComponent;
+	static GetDefaultObject(): NavTestRenderingComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavTestRenderingComponent;
+	static C(Other: UObject | any): NavTestRenderingComponent;
+}
+
+declare type ENavCostDisplay = 'TotalCost' | 'HeuristicOnly' | 'RealCostOnly' | 'ENavCostDisplay_MAX';
+declare var ENavCostDisplay : { TotalCost:'TotalCost',HeuristicOnly:'HeuristicOnly',RealCostOnly:'RealCostOnly',ENavCostDisplay_MAX:'ENavCostDisplay_MAX', };
+declare class NavigationTestingActor extends Actor { 
+	CapsuleComponent: CapsuleComponent;
+	EdRenderComp: NavTestRenderingComponent;
+	InvokerComponent: NavigationInvokerComponent;
+	bActAsNavigationInvoker: boolean;
+	NavAgentProps: NavAgentProperties;
+	QueryingExtent: Vector;
+	MyNavData: NavigationData;
+	ProjectedLocation: Vector;
+	bProjectedLocationValid: boolean;
+	bSearchStart: boolean;
+	bUseHierarchicalPathfinding: boolean;
+	bGatherDetailedInfo: boolean;
+	bDrawDistanceToWall: boolean;
+	bShowNodePool: boolean;
+	bShowBestPath: boolean;
+	bShowDiffWithPreviousStep: boolean;
+	bShouldBeVisibleInGame: boolean;
+	CostDisplayMode: ENavCostDisplay;
+	TextCanvasOffset: Vector2D;
+	bPathExist: boolean;
+	bPathIsPartial: boolean;
+	bPathSearchOutOfNodes: boolean;
+	PathfindingTime: number;
+	PathCost: number;
+	PathfindingSteps: number;
+	OtherActor: NavigationTestingActor;
+	FilterClass: UnrealEngineClass;
+	ShowStepIndex: number;
+	OffsetFromCornersDistance: number;
+	static GetDefaultObject(): NavigationTestingActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationTestingActor;
+	static C(Other: UObject | any): NavigationTestingActor;
+}
+
+declare class NavLinkComponent extends PrimitiveComponent { 
+	Links: NavigationLink[];
+	static Load(ResourceName: string): NavLinkComponent;
+	static Find(Outer: UObject, ResourceName: string): NavLinkComponent;
+	static GetDefaultObject(): NavLinkComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkComponent;
+	static C(Other: UObject | any): NavLinkComponent;
+}
+
+declare class NavLinkCustomInterface extends Interface { 
+	static Load(ResourceName: string): NavLinkCustomInterface;
+	static Find(Outer: UObject, ResourceName: string): NavLinkCustomInterface;
+	static GetDefaultObject(): NavLinkCustomInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkCustomInterface;
+	static C(Other: UObject | any): NavLinkCustomInterface;
+}
+
+declare class NavLinkHostInterface extends Interface { 
+	static Load(ResourceName: string): NavLinkHostInterface;
+	static Find(Outer: UObject, ResourceName: string): NavLinkHostInterface;
+	static GetDefaultObject(): NavLinkHostInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkHostInterface;
+	static C(Other: UObject | any): NavLinkHostInterface;
+}
+
+declare class NavLinkDefinition extends UObject { 
+	Links: NavigationLink[];
+	SegmentLinks: NavigationSegmentLink[];
+	static Load(ResourceName: string): NavLinkDefinition;
+	static Find(Outer: UObject, ResourceName: string): NavLinkDefinition;
+	static GetDefaultObject(): NavLinkDefinition;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkDefinition;
+	static C(Other: UObject | any): NavLinkDefinition;
+}
+
+declare class NavLinkTrivial extends NavLinkDefinition { 
+	static Load(ResourceName: string): NavLinkTrivial;
+	static Find(Outer: UObject, ResourceName: string): NavLinkTrivial;
+	static GetDefaultObject(): NavLinkTrivial;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkTrivial;
+	static C(Other: UObject | any): NavLinkTrivial;
+}
+
+declare class NavMeshRenderingComponent extends PrimitiveComponent { 
+	static Load(ResourceName: string): NavMeshRenderingComponent;
+	static Find(Outer: UObject, ResourceName: string): NavMeshRenderingComponent;
+	static GetDefaultObject(): NavMeshRenderingComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavMeshRenderingComponent;
+	static C(Other: UObject | any): NavMeshRenderingComponent;
+}
+
+declare class NavModifierComponent extends NavRelevantComponent { 
+	AreaClass: UnrealEngineClass;
+	FailsafeExtent: Vector;
+	bIncludeAgentHeight: boolean;
+	static Load(ResourceName: string): NavModifierComponent;
+	static Find(Outer: UObject, ResourceName: string): NavModifierComponent;
+	static GetDefaultObject(): NavModifierComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavModifierComponent;
+	SetAreaClass(NewAreaClass: UnrealEngineClass): void;
+	static C(Other: UObject | any): NavModifierComponent;
+}
+
+declare class NavModifierVolume extends Volume { 
+	AreaClass: UnrealEngineClass;
+	static GetDefaultObject(): NavModifierVolume;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavModifierVolume;
+	SetAreaClass(NewAreaClass: UnrealEngineClass): void;
+	static C(Other: UObject | any): NavModifierVolume;
+}
+
+declare class NavNodeInterface extends Interface { 
+	static Load(ResourceName: string): NavNodeInterface;
+	static Find(Outer: UObject, ResourceName: string): NavNodeInterface;
+	static GetDefaultObject(): NavNodeInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavNodeInterface;
+	static C(Other: UObject | any): NavNodeInterface;
+}
+
+declare class NavSystemConfigOverride extends Actor { 
+	SpriteComponent: BillboardComponent;
+	NavigationSystemConfig: NavigationSystemConfig;
+	bLoadOnClient: boolean;
+	static GetDefaultObject(): NavSystemConfigOverride;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavSystemConfigOverride;
+	ApplyChanges(): void;
+	static C(Other: UObject | any): NavSystemConfigOverride;
+}
+
+declare class RecastFilter_UseDefaultArea extends NavigationQueryFilter { 
+	static Load(ResourceName: string): RecastFilter_UseDefaultArea;
+	static Find(Outer: UObject, ResourceName: string): RecastFilter_UseDefaultArea;
+	static GetDefaultObject(): RecastFilter_UseDefaultArea;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RecastFilter_UseDefaultArea;
+	static C(Other: UObject | any): RecastFilter_UseDefaultArea;
+}
+
+declare class RecastNavMeshDataChunk extends NavigationDataChunk { 
+	static Load(ResourceName: string): RecastNavMeshDataChunk;
+	static Find(Outer: UObject, ResourceName: string): RecastNavMeshDataChunk;
+	static GetDefaultObject(): RecastNavMeshDataChunk;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RecastNavMeshDataChunk;
+	static C(Other: UObject | any): RecastNavMeshDataChunk;
+}
+
+declare type ETimezoneSetting = 'InternationalDateLineWest' | 'CoordinatedUniversalTimeNeg11' | 'Samoa' | 'Hawaii' | 'Alaska' | 'PacificTime_USCAN' | 'BajaCalifornia' | 'MountainTime_USCAN' | 'Chihuahua_LaPaz_Mazatlan' | 'Arizona' | 'Saskatchewan' | 'CentralAmerica' | 'CentralTime_USCAN' | 'Guadalajara_MexicoCity_Monterrey' | 'EasternTime_USCAN' | 'Bogota_Lima_Quito' | 'Indiana_US' | 'Caracas' | 'AtlanticTime_Canada' | 'Cuiaba' | 'Santiago' | 'Georgetown_LaPaz_Manaus_SanJuan' | 'Asuncion' | 'Newfoundland' | 'Brasilia' | 'Greenland' | 'Montevideo' | 'Cayenne_Fortaleza' | 'BuenosAires' | 'MidAtlantic' | 'CoordinatedUniversalTimeNeg02' | 'Azores' | 'CaboVerdeIs' | 'Dublin_Edinburgh_Lisbon_London' | 'Monrovia_Reykjavik' | 'Casablanca' | 'UTC' | 'Belgrade_Bratislava_Budapest_Ljubljana_Prague' | 'Sarajevo_Skopje_Warsaw_Zagreb' | 'Brussels_Copenhagen_Madrid_Paris' | 'WestCentralAfrica' | 'Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna' | 'Windhoek' | 'Minsk' | 'Cairo' | 'Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius' | 'Athens_Bucharest' | 'Jerusalem' | 'Amman' | 'Beirut' | 'Harare_Pretoria' | 'Damascus' | 'Istanbul' | 'Kuwait_Riyadh' | 'Baghdad' | 'Nairobi' | 'Kaliningrad' | 'Tehran' | 'Moscow_StPetersburg_Volgograd' | 'AbuDhabi_Muscat' | 'Baku' | 'Yerevan' | 'Tbilisi' | 'PortLouis' | 'Kabul' | 'Tashkent' | 'Islamabad_Karachi' | 'Chennai_Kolkata_Mumbai_NewDelhi' | 'SriJayawardenepura' | 'Kathmandu' | 'Ekaterinburg' | 'Astana' | 'Dhaka' | 'Yangon_Rangoon' | 'Novosibirsk' | 'Bangkok_Hanoi_Jakarta' | 'Krasnoyarsk' | 'Beijing_Chongqing_HongKong_Urumqi' | 'KualaLumpur_Singapore' | 'Taipei' | 'Perth' | 'Ulaanbaatar' | 'Irkutsk' | 'Seoul' | 'Osaka_Sapporo_Tokyo' | 'Darwin' | 'Adelaide' | 'Yakutsk' | 'Canberra_Melbourne_Sydney' | 'Brisbane' | 'Hobart' | 'Guam_PortMoresby' | 'Vladivostok' | 'SolomonIs_NewCaledonia' | 'Magadan' | 'Fiji' | 'Auckland_Wellington' | 'CoordinatedUniversalTime12' | 'Nukualofa' | 'LocalTime' | 'ETimezoneSetting_MAX';
+declare var ETimezoneSetting : { InternationalDateLineWest:'InternationalDateLineWest',CoordinatedUniversalTimeNeg11:'CoordinatedUniversalTimeNeg11',Samoa:'Samoa',Hawaii:'Hawaii',Alaska:'Alaska',PacificTime_USCAN:'PacificTime_USCAN',BajaCalifornia:'BajaCalifornia',MountainTime_USCAN:'MountainTime_USCAN',Chihuahua_LaPaz_Mazatlan:'Chihuahua_LaPaz_Mazatlan',Arizona:'Arizona',Saskatchewan:'Saskatchewan',CentralAmerica:'CentralAmerica',CentralTime_USCAN:'CentralTime_USCAN',Guadalajara_MexicoCity_Monterrey:'Guadalajara_MexicoCity_Monterrey',EasternTime_USCAN:'EasternTime_USCAN',Bogota_Lima_Quito:'Bogota_Lima_Quito',Indiana_US:'Indiana_US',Caracas:'Caracas',AtlanticTime_Canada:'AtlanticTime_Canada',Cuiaba:'Cuiaba',Santiago:'Santiago',Georgetown_LaPaz_Manaus_SanJuan:'Georgetown_LaPaz_Manaus_SanJuan',Asuncion:'Asuncion',Newfoundland:'Newfoundland',Brasilia:'Brasilia',Greenland:'Greenland',Montevideo:'Montevideo',Cayenne_Fortaleza:'Cayenne_Fortaleza',BuenosAires:'BuenosAires',MidAtlantic:'MidAtlantic',CoordinatedUniversalTimeNeg02:'CoordinatedUniversalTimeNeg02',Azores:'Azores',CaboVerdeIs:'CaboVerdeIs',Dublin_Edinburgh_Lisbon_London:'Dublin_Edinburgh_Lisbon_London',Monrovia_Reykjavik:'Monrovia_Reykjavik',Casablanca:'Casablanca',UTC:'UTC',Belgrade_Bratislava_Budapest_Ljubljana_Prague:'Belgrade_Bratislava_Budapest_Ljubljana_Prague',Sarajevo_Skopje_Warsaw_Zagreb:'Sarajevo_Skopje_Warsaw_Zagreb',Brussels_Copenhagen_Madrid_Paris:'Brussels_Copenhagen_Madrid_Paris',WestCentralAfrica:'WestCentralAfrica',Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna:'Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna',Windhoek:'Windhoek',Minsk:'Minsk',Cairo:'Cairo',Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius:'Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius',Athens_Bucharest:'Athens_Bucharest',Jerusalem:'Jerusalem',Amman:'Amman',Beirut:'Beirut',Harare_Pretoria:'Harare_Pretoria',Damascus:'Damascus',Istanbul:'Istanbul',Kuwait_Riyadh:'Kuwait_Riyadh',Baghdad:'Baghdad',Nairobi:'Nairobi',Kaliningrad:'Kaliningrad',Tehran:'Tehran',Moscow_StPetersburg_Volgograd:'Moscow_StPetersburg_Volgograd',AbuDhabi_Muscat:'AbuDhabi_Muscat',Baku:'Baku',Yerevan:'Yerevan',Tbilisi:'Tbilisi',PortLouis:'PortLouis',Kabul:'Kabul',Tashkent:'Tashkent',Islamabad_Karachi:'Islamabad_Karachi',Chennai_Kolkata_Mumbai_NewDelhi:'Chennai_Kolkata_Mumbai_NewDelhi',SriJayawardenepura:'SriJayawardenepura',Kathmandu:'Kathmandu',Ekaterinburg:'Ekaterinburg',Astana:'Astana',Dhaka:'Dhaka',Yangon_Rangoon:'Yangon_Rangoon',Novosibirsk:'Novosibirsk',Bangkok_Hanoi_Jakarta:'Bangkok_Hanoi_Jakarta',Krasnoyarsk:'Krasnoyarsk',Beijing_Chongqing_HongKong_Urumqi:'Beijing_Chongqing_HongKong_Urumqi',KualaLumpur_Singapore:'KualaLumpur_Singapore',Taipei:'Taipei',Perth:'Perth',Ulaanbaatar:'Ulaanbaatar',Irkutsk:'Irkutsk',Seoul:'Seoul',Osaka_Sapporo_Tokyo:'Osaka_Sapporo_Tokyo',Darwin:'Darwin',Adelaide:'Adelaide',Yakutsk:'Yakutsk',Canberra_Melbourne_Sydney:'Canberra_Melbourne_Sydney',Brisbane:'Brisbane',Hobart:'Hobart',Guam_PortMoresby:'Guam_PortMoresby',Vladivostok:'Vladivostok',SolomonIs_NewCaledonia:'SolomonIs_NewCaledonia',Magadan:'Magadan',Fiji:'Fiji',Auckland_Wellington:'Auckland_Wellington',CoordinatedUniversalTime12:'CoordinatedUniversalTime12',Nukualofa:'Nukualofa',LocalTime:'LocalTime',ETimezoneSetting_MAX:'ETimezoneSetting_MAX', };
+declare class InternationalizationSettingsModel extends UObject { 
+	DisplayTimezone: ETimezoneSetting;
+	static Load(ResourceName: string): InternationalizationSettingsModel;
+	static Find(Outer: UObject, ResourceName: string): InternationalizationSettingsModel;
+	static GetDefaultObject(): InternationalizationSettingsModel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InternationalizationSettingsModel;
+	static C(Other: UObject | any): InternationalizationSettingsModel;
 }
 
 declare class ActorTransformer extends ViewportTransformer { 
@@ -16711,32 +19095,97 @@ declare class StretchGizmoHandleDragOperation extends ViewportDragOperation {
 	static C(Other: UObject | any): StretchGizmoHandleDragOperation;
 }
 
-declare type EMovieSceneCompletionMode = 'KeepState' | 'RestoreState';
-declare var EMovieSceneCompletionMode : { KeepState:'KeepState',RestoreState:'RestoreState', };
+declare class MovieSceneCopyableBinding extends UObject { 
+	SpawnableObjectTemplate: UObject;
+	Tracks: MovieSceneTrack[];
+	Binding: MovieSceneBinding;
+	Spawnable: MovieSceneSpawnable;
+	Possessable: MovieScenePossessable;
+	static Load(ResourceName: string): MovieSceneCopyableBinding;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneCopyableBinding;
+	static GetDefaultObject(): MovieSceneCopyableBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCopyableBinding;
+	static C(Other: UObject | any): MovieSceneCopyableBinding;
+}
+
+declare class Exporter extends UObject { 
+	SupportedClass: UnrealEngineClass;
+	ExportRootScope: UObject;
+	FormatExtension: string[];
+	FormatDescription: string[];
+	PreferredFormatIndex: number;
+	TextIndent: number;
+	bText: boolean;
+	bSelectedOnly: boolean;
+	bForceFileOperations: boolean;
+	ExportTask: AssetExportTask;
+	static Load(ResourceName: string): Exporter;
+	static Find(Outer: UObject, ResourceName: string): Exporter;
+	static GetDefaultObject(): Exporter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Exporter;
+	ScriptRunAssetExportTask(Task: AssetExportTask): boolean;
+	static RunAssetExportTasks(ExportTasks: AssetExportTask[]): boolean;
+	static RunAssetExportTask(Task: AssetExportTask): boolean;
+	static C(Other: UObject | any): Exporter;
+}
+
+declare class AssetExportTask extends UObject { 
+	UObject: UObject;
+	Exporter: Exporter;
+	Filename: string;
+	bSelected: boolean;
+	bReplaceIdentical: boolean;
+	bPrompt: boolean;
+	bAutomated: boolean;
+	bUseFileArchive: boolean;
+	bWriteEmptyFiles: boolean;
+	IgnoreObjectList: UObject[];
+	Options: UObject;
+	Errors: string[];
+	static Load(ResourceName: string): AssetExportTask;
+	static Find(Outer: UObject, ResourceName: string): AssetExportTask;
+	static GetDefaultObject(): AssetExportTask;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetExportTask;
+	static C(Other: UObject | any): AssetExportTask;
+}
+
+declare class SequencerExportTask extends AssetExportTask { 
+	SequencerContext: UObject;
+	static Load(ResourceName: string): SequencerExportTask;
+	static Find(Outer: UObject, ResourceName: string): SequencerExportTask;
+	static GetDefaultObject(): SequencerExportTask;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequencerExportTask;
+	static C(Other: UObject | any): SequencerExportTask;
+}
+
 declare class MovieSceneSectionEvalOptions { 
 	bCanEditCompletionMode: boolean;
-	CompletionMode: CompletionMode;
+	CompletionMode: EMovieSceneCompletionMode;
 	clone() : MovieSceneSectionEvalOptions;
 	static C(Other: UObject | any): MovieSceneSectionEvalOptions;
 }
 
 declare class MovieSceneEasingSettings { 
-	AutoEaseInTime: number;
-	AutoEaseOutTime: number;
+	AutoEaseInDuration: number;
+	AutoEaseOutDuration: number;
 	EaseIn: any;
 	bManualEaseIn: boolean;
-	ManualEaseInTime: number;
+	ManualEaseInDuration: number;
 	EaseOut: any;
 	bManualEaseOut: boolean;
+	ManualEaseOutDuration: number;
+	AutoEaseInTime: number;
+	AutoEaseOutTime: number;
+	ManualEaseInTime: number;
 	ManualEaseOutTime: number;
 	clone() : MovieSceneEasingSettings;
 	static C(Other: UObject | any): MovieSceneEasingSettings;
 }
 
-declare type EMovieSceneBlendType = 'Absolute' | 'Additive' | 'Relative' | 'EMovieSceneBlendType_MAX' | '';
-declare var EMovieSceneBlendType : { Absolute:'Absolute',Additive:'Additive',Relative:'Relative',EMovieSceneBlendType_MAX:'EMovieSceneBlendType_MAX',:'', };
+declare type EMovieSceneBlendType = 'Absolute' | 'Additive' | 'Relative' | 'EMovieSceneBlendType_MAX';
+declare var EMovieSceneBlendType : { Absolute:'Absolute',Additive:'Additive',Relative:'Relative',EMovieSceneBlendType_MAX:'EMovieSceneBlendType_MAX', };
 declare class OptionalMovieSceneBlendType { 
-	BlendType: BlendType;
+	BlendType: EMovieSceneBlendType;
 	bIsValid: boolean;
 	clone() : OptionalMovieSceneBlendType;
 	static C(Other: UObject | any): OptionalMovieSceneBlendType;
@@ -16745,15 +19194,20 @@ declare class OptionalMovieSceneBlendType {
 declare class MovieSceneSection extends MovieSceneSignedObject { 
 	EvalOptions: MovieSceneSectionEvalOptions;
 	Easing: MovieSceneEasingSettings;
-	StartTime: number;
-	EndTime: number;
+	SectionRange: MovieSceneFrameRange;
+	TimecodeSource: MovieSceneTimecodeSource;
+	PreRollFrames: FrameNumber;
+	PostRollFrames: FrameNumber;
 	RowIndex: number;
 	OverlapPriority: number;
 	bIsActive: boolean;
 	bIsLocked: boolean;
+	StartTime: number;
+	EndTime: number;
+	PrerollTime: number;
+	PostrollTime: number;
 	bIsInfinite: boolean;
-	PreRollTime: number;
-	PostRollTime: number;
+	bSupportsInfiniteRange: boolean;
 	BlendType: OptionalMovieSceneBlendType;
 	static Load(ResourceName: string): MovieSceneSection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneSection;
@@ -16763,20 +19217,68 @@ declare class MovieSceneSection extends MovieSceneSignedObject {
 }
 
 declare class MovieSceneTransformMask { 
-	Mask: any;
+	mask: any;
 	clone() : MovieSceneTransformMask;
 	static C(Other: UObject | any): MovieSceneTransformMask;
 }
 
-declare type EShow3DTrajectory = 'EST_OnlyWhenSelected' | 'EST_Always' | 'EST_Never';
-declare var EShow3DTrajectory : { EST_OnlyWhenSelected:'EST_OnlyWhenSelected',EST_Always:'EST_Always',EST_Never:'EST_Never', };
+declare class MovieSceneChannel { 
+	clone() : MovieSceneChannel;
+	static C(Other: UObject | any): MovieSceneChannel;
+}
+
+declare class MovieSceneTangentData { 
+	ArriveTangent: number;
+	LeaveTangent: number;
+	TangentWeightMode: ERichCurveTangentWeightMode;
+	ArriveTangentWeight: number;
+	LeaveTangentWeight: number;
+	clone() : MovieSceneTangentData;
+	static C(Other: UObject | any): MovieSceneTangentData;
+}
+
+declare class MovieSceneFloatValue { 
+	Value: number;
+	InterpMode: ERichCurveInterpMode;
+	TangentMode: ERichCurveTangentMode;
+	Tangent: MovieSceneTangentData;
+	clone() : MovieSceneFloatValue;
+	static C(Other: UObject | any): MovieSceneFloatValue;
+}
+
+declare class KeyHandleLookupTable { 
+	clone() : KeyHandleLookupTable;
+	static C(Other: UObject | any): KeyHandleLookupTable;
+}
+
+declare class MovieSceneKeyHandleMap extends KeyHandleLookupTable { 
+	clone() : MovieSceneKeyHandleMap;
+	static C(Other: UObject | any): MovieSceneKeyHandleMap;
+}
+
+declare class MovieSceneFloatChannel extends MovieSceneChannel { 
+	PreInfinityExtrap: ERichCurveExtrapolation;
+	PostInfinityExtrap: ERichCurveExtrapolation;
+	Times: FrameNumber[];
+	Values: MovieSceneFloatValue[];
+	DefaultValue: number;
+	bHasDefaultValue: boolean;
+	KeyHandles: MovieSceneKeyHandleMap;
+	TickResolution: FrameRate;
+	clone() : MovieSceneFloatChannel;
+	static C(Other: UObject | any): MovieSceneFloatChannel;
+}
+
+declare type EShow3DTrajectory = 'EST_OnlyWhenSelected' | 'EST_Always' | 'EST_Never' | 'EST_MAX';
+declare var EShow3DTrajectory : { EST_OnlyWhenSelected:'EST_OnlyWhenSelected',EST_Always:'EST_Always',EST_Never:'EST_Never',EST_MAX:'EST_MAX', };
 declare class MovieScene3DTransformSection extends MovieSceneSection { 
 	TransformMask: MovieSceneTransformMask;
-	Translation: RichCurve;
-	Rotation: RichCurve;
-	Scale: RichCurve;
-	ManualWeight: RichCurve;
-	Show3DTrajectory: Show3DTrajectory;
+	Translation: MovieSceneFloatChannel;
+	Rotation: MovieSceneFloatChannel;
+	Scale: MovieSceneFloatChannel;
+	ManualWeight: MovieSceneFloatChannel;
+	bUseQuaternionInterpolation: boolean;
+	Show3DTrajectory: EShow3DTrajectory;
 	static Load(ResourceName: string): MovieScene3DTransformSection;
 	static Find(Outer: UObject, ResourceName: string): MovieScene3DTransformSection;
 	static GetDefaultObject(): MovieScene3DTransformSection;
@@ -16808,34 +19310,35 @@ declare class SequencerSettingsContainer extends UObject {
 	static C(Other: UObject | any): SequencerSettingsContainer;
 }
 
-declare type EAutoChangeMode = 'AutoKey' | 'AutoTrack' | 'All' | 'None';
-declare var EAutoChangeMode : { AutoKey:'AutoKey',AutoTrack:'AutoTrack',All:'All',None:'None', };
-declare type EAllowEditsMode = 'AllEdits' | 'AllowSequencerEditsOnly' | 'AllowLevelEditsOnly';
-declare var EAllowEditsMode : { AllEdits:'AllEdits',AllowSequencerEditsOnly:'AllowSequencerEditsOnly',AllowLevelEditsOnly:'AllowLevelEditsOnly', };
-declare type EMovieSceneKeyInterpolation = 'Auto' | 'User' | 'Break' | 'Linear' | 'Constant';
-declare var EMovieSceneKeyInterpolation : { Auto:'Auto',User:'User',Break:'Break',Linear:'Linear',Constant:'Constant', };
-declare type ESequencerSpawnPosition = 'SSP_Origin' | 'SSP_PlaceInFrontOfCamera';
-declare var ESequencerSpawnPosition : { SSP_Origin:'SSP_Origin',SSP_PlaceInFrontOfCamera:'SSP_PlaceInFrontOfCamera', };
-declare type ESequencerTimeSnapInterval = 'STSI_0_001' | 'STSI_0_01' | 'STSI_0_1' | 'STSI_1' | 'STSI_10' | 'STSI_100' | 'STSI_15Fps' | 'STSI_24Fps' | 'STSI_25Fps' | 'STSI_29_97Fps' | 'STSI_30Fps' | 'STSI_48Fps' | 'STSI_50Fps' | 'STSI_59_94Fps' | 'STSI_60Fps' | 'STSI_120Fps' | 'STSI_Custom';
-declare var ESequencerTimeSnapInterval : { STSI_0_001:'STSI_0_001',STSI_0_01:'STSI_0_01',STSI_0_1:'STSI_0_1',STSI_1:'STSI_1',STSI_10:'STSI_10',STSI_100:'STSI_100',STSI_15Fps:'STSI_15Fps',STSI_24Fps:'STSI_24Fps',STSI_25Fps:'STSI_25Fps',STSI_29_97Fps:'STSI_29_97Fps',STSI_30Fps:'STSI_30Fps',STSI_48Fps:'STSI_48Fps',STSI_50Fps:'STSI_50Fps',STSI_59_94Fps:'STSI_59_94Fps',STSI_60Fps:'STSI_60Fps',STSI_120Fps:'STSI_120Fps',STSI_Custom:'STSI_Custom', };
-declare type ESequencerZoomPosition = 'SZP_CurrentTime' | 'SZP_MousePosition';
-declare var ESequencerZoomPosition : { SZP_CurrentTime:'SZP_CurrentTime',SZP_MousePosition:'SZP_MousePosition', };
-declare type ESequencerLoopMode = 'SLM_NoLoop' | 'SLM_Loop' | 'SLM_LoopSelectionRange';
-declare var ESequencerLoopMode : { SLM_NoLoop:'SLM_NoLoop',SLM_Loop:'SLM_Loop',SLM_LoopSelectionRange:'SLM_LoopSelectionRange', };
+declare type EAutoChangeMode = 'AutoKey' | 'AutoTrack' | 'All' | 'None' | 'EAutoChangeMode_MAX';
+declare var EAutoChangeMode : { AutoKey:'AutoKey',AutoTrack:'AutoTrack',All:'All',None:'None',EAutoChangeMode_MAX:'EAutoChangeMode_MAX', };
+declare type EAllowEditsMode = 'AllEdits' | 'AllowSequencerEditsOnly' | 'AllowLevelEditsOnly' | 'EAllowEditsMode_MAX';
+declare var EAllowEditsMode : { AllEdits:'AllEdits',AllowSequencerEditsOnly:'AllowSequencerEditsOnly',AllowLevelEditsOnly:'AllowLevelEditsOnly',EAllowEditsMode_MAX:'EAllowEditsMode_MAX', };
+declare type EKeyGroupMode = 'KeyChanged' | 'KeyGroup' | 'KeyAll' | 'EKeyGroupMode_MAX';
+declare var EKeyGroupMode : { KeyChanged:'KeyChanged',KeyGroup:'KeyGroup',KeyAll:'KeyAll',EKeyGroupMode_MAX:'EKeyGroupMode_MAX', };
+declare type EMovieSceneKeyInterpolation = 'Auto' | 'User' | 'Break' | 'Linear' | 'Constant' | 'EMovieSceneKeyInterpolation_MAX';
+declare var EMovieSceneKeyInterpolation : { Auto:'Auto',User:'User',Break:'Break',Linear:'Linear',Constant:'Constant',EMovieSceneKeyInterpolation_MAX:'EMovieSceneKeyInterpolation_MAX', };
+declare type ESequencerSpawnPosition = 'SSP_Origin' | 'SSP_PlaceInFrontOfCamera' | 'SSP_MAX';
+declare var ESequencerSpawnPosition : { SSP_Origin:'SSP_Origin',SSP_PlaceInFrontOfCamera:'SSP_PlaceInFrontOfCamera',SSP_MAX:'SSP_MAX', };
+declare type ESequencerZoomPosition = 'SZP_CurrentTime' | 'SZP_MousePosition' | 'SZP_MAX';
+declare var ESequencerZoomPosition : { SZP_CurrentTime:'SZP_CurrentTime',SZP_MousePosition:'SZP_MousePosition',SZP_MAX:'SZP_MAX', };
+declare type ESequencerLoopMode = 'SLM_NoLoop' | 'SLM_Loop' | 'SLM_LoopSelectionRange' | 'SLM_MAX';
+declare var ESequencerLoopMode : { SLM_NoLoop:'SLM_NoLoop',SLM_Loop:'SLM_Loop',SLM_LoopSelectionRange:'SLM_LoopSelectionRange',SLM_MAX:'SLM_MAX', };
+declare type EFrameNumberDisplayFormats = 'NonDropFrameTimecode' | 'DropFrameTimecode' | 'Seconds' | 'Frames' | 'MAX_Count' | 'EFrameNumberDisplayFormats_MAX';
+declare var EFrameNumberDisplayFormats : { NonDropFrameTimecode:'NonDropFrameTimecode',DropFrameTimecode:'DropFrameTimecode',Seconds:'Seconds',Frames:'Frames',MAX_Count:'MAX_Count',EFrameNumberDisplayFormats_MAX:'EFrameNumberDisplayFormats_MAX', };
+declare type ECurveEditorCurveVisibility = 'AllCurves' | 'SelectedCurves' | 'AnimatedCurves' | 'ECurveEditorCurveVisibility_MAX';
+declare var ECurveEditorCurveVisibility : { AllCurves:'AllCurves',SelectedCurves:'SelectedCurves',AnimatedCurves:'AnimatedCurves',ECurveEditorCurveVisibility_MAX:'ECurveEditorCurveVisibility_MAX', };
 declare class SequencerSettings extends UObject { 
-	AutoChangeMode: AutoChangeMode;
-	AllowEditsMode: AllowEditsMode;
-	bKeyAllEnabled: boolean;
+	AutoChangeMode: EAutoChangeMode;
+	AllowEditsMode: EAllowEditsMode;
+	KeyGroupMode: EKeyGroupMode;
 	bKeyInterpPropertiesOnly: boolean;
-	KeyInterpolation: KeyInterpolation;
+	KeyInterpolation: EMovieSceneKeyInterpolation;
 	bAutoSetTrackDefaults: boolean;
 	SpawnPosition: ESequencerSpawnPosition;
 	bCreateSpawnableCameras: boolean;
-	bShowFrameNumbers: boolean;
 	bShowRangeSlider: boolean;
 	bIsSnapEnabled: boolean;
-	TimeSnapIntervalMode: ESequencerTimeSnapInterval;
-	CustomTimeSnapInterval: number;
 	bSnapKeyTimesToInterval: boolean;
 	bSnapKeyTimesToKeys: boolean;
 	bSnapSectionTimesToInterval: boolean;
@@ -16846,10 +19349,10 @@ declare class SequencerSettings extends UObject {
 	bSnapPlayTimeToDraggedKey: boolean;
 	bSnapCurveValueToInterval: boolean;
 	bLabelBrowserVisible: boolean;
+	bShowSelectedNodesOnly: boolean;
 	bRewindOnRecord: boolean;
 	ZoomPosition: ESequencerZoomPosition;
 	bAutoScrollEnabled: boolean;
-	bShowCurveEditorCurveToolTips: boolean;
 	bLinkCurveEditorTimeRange: boolean;
 	LoopMode: ESequencerLoopMode;
 	bKeepCursorInPlayRangeWhileScrubbing: boolean;
@@ -16859,13 +19362,16 @@ declare class SequencerSettings extends UObject {
 	bShowCombinedKeyframes: boolean;
 	bInfiniteKeyAreas: boolean;
 	bShowChannelColors: boolean;
-	bShowViewportTransportControls: boolean;
-	bLockPlaybackToAudioClock: boolean;
 	bAllowPossessionOfPIEViewports: boolean;
 	bActivateRealtimeViewports: boolean;
 	bEvaluateSubSequencesInIsolation: boolean;
+	bRerunConstructionScripts: boolean;
 	bShowDebugVisualization: boolean;
 	bVisualizePreAndPostRoll: boolean;
+	bCompileDirectorOnEvaluate: boolean;
+	TrajectoryPathCap: any;
+	FrameNumberDisplayFormat: EFrameNumberDisplayFormats;
+	CurveVisibility: ECurveEditorCurveVisibility;
 	static Load(ResourceName: string): SequencerSettings;
 	static Find(Outer: UObject, ResourceName: string): SequencerSettings;
 	static GetDefaultObject(): SequencerSettings;
@@ -16873,264 +19379,321 @@ declare class SequencerSettings extends UObject {
 	static C(Other: UObject | any): SequencerSettings;
 }
 
-declare class CameraRig_Crane extends Actor { 
-	CranePitch: number;
-	CraneYaw: number;
-	CraneArmLength: number;
-	bLockMountPitch: boolean;
-	bLockMountYaw: boolean;
-	TransformComponent: SceneComponent;
-	CraneYawControl: SceneComponent;
-	CranePitchControl: SceneComponent;
-	CraneCameraMount: SceneComponent;
-	PreviewMesh_CraneArm: StaticMeshComponent;
-	PreviewMesh_CraneBase: StaticMeshComponent;
-	PreviewMesh_CraneMount: StaticMeshComponent;
-	PreviewMesh_CraneCounterWeight: StaticMeshComponent;
-	static GetDefaultObject(): CameraRig_Crane;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CameraRig_Crane;
-	static C(Other: UObject | any): CameraRig_Crane;
+declare type EMovieSceneCaptureProtocolState = 'Idle' | 'Initialized' | 'Capturing' | 'Finalizing' | 'EMovieSceneCaptureProtocolState_MAX';
+declare var EMovieSceneCaptureProtocolState : { Idle:'Idle',Initialized:'Initialized',Capturing:'Capturing',Finalizing:'Finalizing',EMovieSceneCaptureProtocolState_MAX:'EMovieSceneCaptureProtocolState_MAX', };
+declare class MovieSceneCaptureProtocolBase extends UObject { 
+	State: EMovieSceneCaptureProtocolState;
+	bFrameRequested: boolean;
+	static Load(ResourceName: string): MovieSceneCaptureProtocolBase;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneCaptureProtocolBase;
+	static GetDefaultObject(): MovieSceneCaptureProtocolBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCaptureProtocolBase;
+	IsCapturing(): boolean;
+	GetState(): EMovieSceneCaptureProtocolState;
+	static C(Other: UObject | any): MovieSceneCaptureProtocolBase;
 }
 
-declare class InterpCurvePointQuat { 
-	InVal: number;
-	OutVal: Quat;
-	ArriveTangent: Quat;
-	LeaveTangent: Quat;
-	InterpMode: EInterpCurveMode;
-	clone() : InterpCurvePointQuat;
-	static C(Other: UObject | any): InterpCurvePointQuat;
+declare class MovieSceneAudioCaptureProtocolBase extends MovieSceneCaptureProtocolBase { 
+	static Load(ResourceName: string): MovieSceneAudioCaptureProtocolBase;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneAudioCaptureProtocolBase;
+	static GetDefaultObject(): MovieSceneAudioCaptureProtocolBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneAudioCaptureProtocolBase;
+	static C(Other: UObject | any): MovieSceneAudioCaptureProtocolBase;
 }
 
-declare class InterpCurveQuat { 
-	Points: InterpCurvePointQuat[];
-	bIsLooped: boolean;
-	LoopKeyOffset: number;
-	clone() : InterpCurveQuat;
-	static C(Other: UObject | any): InterpCurveQuat;
+declare class NullAudioCaptureProtocol extends MovieSceneAudioCaptureProtocolBase { 
+	static Load(ResourceName: string): NullAudioCaptureProtocol;
+	static Find(Outer: UObject, ResourceName: string): NullAudioCaptureProtocol;
+	static GetDefaultObject(): NullAudioCaptureProtocol;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NullAudioCaptureProtocol;
+	static C(Other: UObject | any): NullAudioCaptureProtocol;
 }
 
-declare class InterpCurvePointFloat { 
-	InVal: number;
-	OutVal: number;
-	ArriveTangent: number;
-	LeaveTangent: number;
-	InterpMode: EInterpCurveMode;
-	clone() : InterpCurvePointFloat;
-	static C(Other: UObject | any): InterpCurvePointFloat;
+declare class MasterAudioSubmixCaptureProtocol extends MovieSceneAudioCaptureProtocolBase { 
+	Filename: string;
+	static Load(ResourceName: string): MasterAudioSubmixCaptureProtocol;
+	static Find(Outer: UObject, ResourceName: string): MasterAudioSubmixCaptureProtocol;
+	static GetDefaultObject(): MasterAudioSubmixCaptureProtocol;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MasterAudioSubmixCaptureProtocol;
+	static C(Other: UObject | any): MasterAudioSubmixCaptureProtocol;
 }
 
-declare class InterpCurveFloat { 
-	Points: InterpCurvePointFloat[];
-	bIsLooped: boolean;
-	LoopKeyOffset: number;
-	clone() : InterpCurveFloat;
-	static C(Other: UObject | any): InterpCurveFloat;
+declare class MovieSceneImageCaptureProtocolBase extends MovieSceneCaptureProtocolBase { 
+	static Load(ResourceName: string): MovieSceneImageCaptureProtocolBase;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneImageCaptureProtocolBase;
+	static GetDefaultObject(): MovieSceneImageCaptureProtocolBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneImageCaptureProtocolBase;
+	static C(Other: UObject | any): MovieSceneImageCaptureProtocolBase;
 }
 
-declare class SplineCurves { 
-	Position: InterpCurveVector;
-	Rotation: InterpCurveQuat;
-	Scale: InterpCurveVector;
-	ReparamTable: InterpCurveFloat;
-	clone() : SplineCurves;
-	static C(Other: UObject | any): SplineCurves;
+declare class CompositionGraphCapturePasses { 
+	Value: string[];
+	clone() : CompositionGraphCapturePasses;
+	static C(Other: UObject | any): CompositionGraphCapturePasses;
 }
 
-declare type ESplineCoordinateSpace = 'Local' | 'World';
-declare var ESplineCoordinateSpace : { Local:'Local',World:'World', };
-declare type ESplinePointType = 'Linear' | 'Curve' | 'Constant' | 'CurveClamped' | 'CurveCustomTangent';
-declare var ESplinePointType : { Linear:'Linear',Curve:'Curve',Constant:'Constant',CurveClamped:'CurveClamped',CurveCustomTangent:'CurveCustomTangent', };
-declare class SplinePoint { 
-	InputKey: number;
-	Position: Vector;
-	ArriveTangent: Vector;
-	LeaveTangent: Vector;
-	Rotation: Rotator;
-	Scale: Vector;
-	Type: ESplinePointType;
-	clone() : SplinePoint;
-	static C(Other: UObject | any): SplinePoint;
+declare type EHDRCaptureGamut = 'HCGM_Rec709' | 'HCGM_P3DCI' | 'HCGM_Rec2020' | 'HCGM_ACES' | 'HCGM_ACEScg' | 'HCGM_Linear' | 'HCGM_MAX';
+declare var EHDRCaptureGamut : { HCGM_Rec709:'HCGM_Rec709',HCGM_P3DCI:'HCGM_P3DCI',HCGM_Rec2020:'HCGM_Rec2020',HCGM_ACES:'HCGM_ACES',HCGM_ACEScg:'HCGM_ACEScg',HCGM_Linear:'HCGM_Linear',HCGM_MAX:'HCGM_MAX', };
+declare class CompositionGraphCaptureProtocol extends MovieSceneImageCaptureProtocolBase { 
+	IncludeRenderPasses: CompositionGraphCapturePasses;
+	bCaptureFramesInHDR: boolean;
+	HDRCompressionQuality: number;
+	CaptureGamut: EHDRCaptureGamut;
+	PostProcessingMaterial: SoftObjectPath;
+	bDisableScreenPercentage: boolean;
+	PostProcessingMaterialPtr: MaterialInterface;
+	static Load(ResourceName: string): CompositionGraphCaptureProtocol;
+	static Find(Outer: UObject, ResourceName: string): CompositionGraphCaptureProtocol;
+	static GetDefaultObject(): CompositionGraphCaptureProtocol;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompositionGraphCaptureProtocol;
+	static C(Other: UObject | any): CompositionGraphCaptureProtocol;
 }
 
-declare class SplineComponent extends PrimitiveComponent { 
-	SplineCurves: SplineCurves;
-	SplineInfo: InterpCurveVector;
-	SplineRotInfo: InterpCurveQuat;
-	SplineScaleInfo: InterpCurveVector;
-	SplineReparamTable: InterpCurveFloat;
-	bAllowSplineEditingPerInstance: boolean;
-	ReparamStepsPerSegment: number;
-	Duration: number;
-	bStationaryEndpoints: boolean;
-	bSplineHasBeenEdited: boolean;
-	bModifiedByConstructionScript: boolean;
-	bInputSplinePointsToConstructionScript: boolean;
-	bDrawDebug: boolean;
-	bClosedLoop: boolean;
-	bLoopPositionOverride: boolean;
-	LoopPosition: number;
-	DefaultUpVector: Vector;
-	EditorUnselectedSplineSegmentColor: LinearColor;
-	EditorSelectedSplineSegmentColor: LinearColor;
-	bAllowDiscontinuousSpline: boolean;
-	bShouldVisualizeScale: boolean;
-	ScaleVisualizationWidth: number;
-	static Load(ResourceName: string): SplineComponent;
-	static Find(Outer: UObject, ResourceName: string): SplineComponent;
-	static GetDefaultObject(): SplineComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplineComponent;
-	UpdateSpline(): void;
-	SetWorldLocationAtSplinePoint(PointIndex: number,InLocation: Vector): void;
-	SetUpVectorAtSplinePoint(PointIndex: number,InUpVector: Vector,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
-	SetUnselectedSplineSegmentColor(SegmentColor: LinearColor): void;
-	SetTangentsAtSplinePoint(PointIndex: number,InArriveTangent: Vector,InLeaveTangent: Vector,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
-	SetTangentAtSplinePoint(PointIndex: number,InTangent: Vector,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
-	SetSplineWorldPoints(Points: Vector[]): void;
-	SetSplinePointType(PointIndex: number,Type: ESplinePointType,bUpdateSpline: boolean): void;
-	SetSplinePoints(Points: Vector[],CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
-	SetSplineLocalPoints(Points: Vector[]): void;
-	SetSelectedSplineSegmentColor(SegmentColor: LinearColor): void;
-	SetLocationAtSplinePoint(PointIndex: number,InLocation: Vector,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
-	SetDrawDebug(bShow: boolean): void;
-	SetDefaultUpVector(UpVector: Vector,CoordinateSpace: ESplineCoordinateSpace): void;
-	SetClosedLoopAtPosition(bInClosedLoop: boolean,Key: number,bUpdateSpline: boolean): void;
-	SetClosedLoop(bInClosedLoop: boolean,bUpdateSpline: boolean): void;
-	RemoveSplinePoint(Index: number,bUpdateSpline: boolean): void;
-	IsClosedLoop(): boolean;
-	GetWorldTangentAtDistanceAlongSpline(Distance: number): Vector;
-	GetWorldRotationAtTime(Time: number,bUseConstantVelocity: boolean): Rotator;
-	GetWorldRotationAtDistanceAlongSpline(Distance: number): Rotator;
-	GetWorldLocationAtTime(Time: number,bUseConstantVelocity: boolean): Vector;
-	GetWorldLocationAtSplinePoint(PointIndex: number): Vector;
-	GetWorldLocationAtDistanceAlongSpline(Distance: number): Vector;
-	GetWorldDirectionAtTime(Time: number,bUseConstantVelocity: boolean): Vector;
-	GetWorldDirectionAtDistanceAlongSpline(Distance: number): Vector;
-	GetUpVectorAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Vector;
-	GetUpVectorAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetUpVectorAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetTransformAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean,bUseScale: boolean): Transform;
-	GetTransformAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace,bUseScale: boolean): Transform;
-	GetTransformAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace,bUseScale: boolean): Transform;
-	GetTangentAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Vector;
-	GetTangentAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetTangentAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetSplinePointType(PointIndex: number): ESplinePointType;
-	GetSplineLength(): number;
-	GetScaleAtTime(Time: number,bUseConstantVelocity: boolean): Vector;
-	GetScaleAtSplinePoint(PointIndex: number): Vector;
-	GetScaleAtDistanceAlongSpline(Distance: number): Vector;
-	GetRotationAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Rotator;
-	GetRotationAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Rotator;
-	GetRotationAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Rotator;
-	GetRollAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): number;
-	GetRollAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): number;
-	GetRollAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): number;
-	GetRightVectorAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Vector;
-	GetRightVectorAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetRightVectorAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetNumberOfSplinePoints(): number;
-	GetLocationAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Vector;
-	GetLocationAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetLocationAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetLocationAndTangentAtSplinePoint(PointIndex: number,Location?: Vector,Tangent?: Vector,CoordinateSpace?: ESplineCoordinateSpace): {Location: Vector, Tangent: Vector};
-	GetLocalLocationAndTangentAtSplinePoint(PointIndex: number,LocalLocation?: Vector,LocalTangent?: Vector): {LocalLocation: Vector, LocalTangent: Vector};
-	GetLeaveTangentAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetInputKeyAtDistanceAlongSpline(Distance: number): number;
-	GetDistanceAlongSplineAtSplinePoint(PointIndex: number): number;
-	GetDirectionAtTime(Time: number,CoordinateSpace: ESplineCoordinateSpace,bUseConstantVelocity: boolean): Vector;
-	GetDirectionAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetDirectionAtDistanceAlongSpline(Distance: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetDefaultUpVector(CoordinateSpace: ESplineCoordinateSpace): Vector;
-	GetArriveTangentAtSplinePoint(PointIndex: number,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	FindUpVectorClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	FindTransformClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace,bUseScale: boolean): Transform;
-	FindTangentClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	FindScaleClosestToWorldLocation(WorldLocation: Vector): Vector;
-	FindRotationClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Rotator;
-	FindRollClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): number;
-	FindRightVectorClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	FindLocationClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	FindInputKeyClosestToWorldLocation(WorldLocation: Vector): number;
-	FindDirectionClosestToWorldLocation(WorldLocation: Vector,CoordinateSpace: ESplineCoordinateSpace): Vector;
-	ClearSplinePoints(bUpdateSpline: boolean): void;
-	AddSplineWorldPoint(Position: Vector): void;
-	AddSplinePointAtIndex(Position: Vector,Index: number,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
-	AddSplinePoint(Position: Vector,CoordinateSpace: ESplineCoordinateSpace,bUpdateSpline: boolean): void;
-	AddSplineLocalPoint(Position: Vector): void;
-	AddPoints(Points: SplinePoint[],bUpdateSpline: boolean): void;
-	AddPoint(Point: SplinePoint,bUpdateSpline: boolean): void;
-	static C(Other: UObject | any): SplineComponent;
+declare class FrameGrabberProtocol extends MovieSceneImageCaptureProtocolBase { 
+	static Load(ResourceName: string): FrameGrabberProtocol;
+	static Find(Outer: UObject, ResourceName: string): FrameGrabberProtocol;
+	static GetDefaultObject(): FrameGrabberProtocol;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FrameGrabberProtocol;
+	static C(Other: UObject | any): FrameGrabberProtocol;
+}
+
+declare class ImageSequenceProtocol extends FrameGrabberProtocol { 
+	static Load(ResourceName: string): ImageSequenceProtocol;
+	static Find(Outer: UObject, ResourceName: string): ImageSequenceProtocol;
+	static GetDefaultObject(): ImageSequenceProtocol;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImageSequenceProtocol;
+	static C(Other: UObject | any): ImageSequenceProtocol;
+}
+
+declare class CompressedImageSequenceProtocol extends ImageSequenceProtocol { 
+	CompressionQuality: number;
+	static Load(ResourceName: string): CompressedImageSequenceProtocol;
+	static Find(Outer: UObject, ResourceName: string): CompressedImageSequenceProtocol;
+	static GetDefaultObject(): CompressedImageSequenceProtocol;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompressedImageSequenceProtocol;
+	static C(Other: UObject | any): CompressedImageSequenceProtocol;
+}
+
+declare class ImageSequenceProtocol_BMP extends ImageSequenceProtocol { 
+	static Load(ResourceName: string): ImageSequenceProtocol_BMP;
+	static Find(Outer: UObject, ResourceName: string): ImageSequenceProtocol_BMP;
+	static GetDefaultObject(): ImageSequenceProtocol_BMP;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImageSequenceProtocol_BMP;
+	static C(Other: UObject | any): ImageSequenceProtocol_BMP;
+}
+
+declare class ImageSequenceProtocol_PNG extends CompressedImageSequenceProtocol { 
+	static Load(ResourceName: string): ImageSequenceProtocol_PNG;
+	static Find(Outer: UObject, ResourceName: string): ImageSequenceProtocol_PNG;
+	static GetDefaultObject(): ImageSequenceProtocol_PNG;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImageSequenceProtocol_PNG;
+	static C(Other: UObject | any): ImageSequenceProtocol_PNG;
+}
+
+declare class ImageSequenceProtocol_JPG extends CompressedImageSequenceProtocol { 
+	static Load(ResourceName: string): ImageSequenceProtocol_JPG;
+	static Find(Outer: UObject, ResourceName: string): ImageSequenceProtocol_JPG;
+	static GetDefaultObject(): ImageSequenceProtocol_JPG;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImageSequenceProtocol_JPG;
+	static C(Other: UObject | any): ImageSequenceProtocol_JPG;
+}
+
+declare class ImageSequenceProtocol_EXR extends ImageSequenceProtocol { 
+	bCompressed: boolean;
+	CaptureGamut: EHDRCaptureGamut;
+	static Load(ResourceName: string): ImageSequenceProtocol_EXR;
+	static Find(Outer: UObject, ResourceName: string): ImageSequenceProtocol_EXR;
+	static GetDefaultObject(): ImageSequenceProtocol_EXR;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImageSequenceProtocol_EXR;
+	static C(Other: UObject | any): ImageSequenceProtocol_EXR;
+}
+
+declare class MovieSceneCaptureInterface extends Interface { 
+	static Load(ResourceName: string): MovieSceneCaptureInterface;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneCaptureInterface;
+	static GetDefaultObject(): MovieSceneCaptureInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCaptureInterface;
+	static C(Other: UObject | any): MovieSceneCaptureInterface;
+}
+
+declare class CaptureResolution { 
+	ResX: number;
+	ResY: number;
+	clone() : CaptureResolution;
+	static C(Other: UObject | any): CaptureResolution;
+}
+
+declare class MovieSceneCaptureSettings { 
+	OutputDirectory: DirectoryPath;
+	GameModeOverride: UnrealEngineClass;
+	OutputFormat: string;
+	bOverwriteExisting: boolean;
+	bUseRelativeFrameNumbers: boolean;
+	HandleFrames: number;
+	ZeroPadFrameNumbers: number;
+	FrameRate: FrameRate;
+	Resolution: CaptureResolution;
+	bEnableTextureStreaming: boolean;
+	bCinematicEngineScalability: boolean;
+	bCinematicMode: boolean;
+	bAllowMovement: boolean;
+	bAllowTurning: boolean;
+	bShowPlayer: boolean;
+	bShowHUD: boolean;
+	clone() : MovieSceneCaptureSettings;
+	static C(Other: UObject | any): MovieSceneCaptureSettings;
 }
 
-declare class SplineMeshParams { 
-	StartPos: Vector;
-	StartTangent: Vector;
-	StartScale: Vector2D;
-	StartRoll: number;
-	StartOffset: Vector2D;
-	EndPos: Vector;
-	EndTangent: Vector;
-	EndScale: Vector2D;
-	EndRoll: number;
-	EndOffset: Vector2D;
-	clone() : SplineMeshParams;
-	static C(Other: UObject | any): SplineMeshParams;
+declare class MovieSceneCapture extends UObject { 
+	ImageCaptureProtocolType: SoftClassPath;
+	AudioCaptureProtocolType: SoftClassPath;
+	ImageCaptureProtocol: MovieSceneImageCaptureProtocolBase;
+	AudioCaptureProtocol: MovieSceneAudioCaptureProtocolBase;
+	Settings: MovieSceneCaptureSettings;
+	bUseSeparateProcess: boolean;
+	bCloseEditorWhenCaptureStarts: boolean;
+	AdditionalCommandLineArguments: string;
+	InheritedCommandLineArguments: string;
+	static Load(ResourceName: string): MovieSceneCapture;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneCapture;
+	static GetDefaultObject(): MovieSceneCapture;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCapture;
+	SetImageCaptureProtocolType(ProtocolType: UnrealEngineClass): void;
+	SetAudioCaptureProtocolType(ProtocolType: UnrealEngineClass): void;
+	GetImageCaptureProtocol(): MovieSceneCaptureProtocolBase;
+	GetAudioCaptureProtocol(): MovieSceneCaptureProtocolBase;
+	static C(Other: UObject | any): MovieSceneCapture;
 }
 
-declare type ESplineMeshAxis = 'X' | 'Y' | 'Z';
-declare var ESplineMeshAxis : { X:'X',Y:'Y',Z:'Z', };
-declare class SplineMeshComponent extends StaticMeshComponent { 
-	SplineParams: SplineMeshParams;
-	SplineUpDir: Vector;
-	bAllowSplineEditingPerInstance: boolean;
-	bSmoothInterpRollScale: boolean;
-	ForwardAxis: ESplineMeshAxis;
-	SplineBoundaryMin: number;
-	SplineBoundaryMax: number;
-	BodySetup: BodySetup;
-	CachedMeshBodySetupGuid: Guid;
-	bSelected: boolean;
-	bMeshDirty: boolean;
-	static Load(ResourceName: string): SplineMeshComponent;
-	static Find(Outer: UObject, ResourceName: string): SplineMeshComponent;
-	static GetDefaultObject(): SplineMeshComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplineMeshComponent;
-	UpdateMesh(): void;
-	SetStartTangent(StartTangent: Vector,bUpdateMesh: boolean): void;
-	SetStartScale(StartScale: Vector2D,bUpdateMesh: boolean): void;
-	SetStartRoll(StartRoll: number,bUpdateMesh: boolean): void;
-	SetStartPosition(StartPos: Vector,bUpdateMesh: boolean): void;
-	SetStartOffset(StartOffset: Vector2D,bUpdateMesh: boolean): void;
-	SetStartAndEnd(StartPos: Vector,StartTangent: Vector,EndPos: Vector,EndTangent: Vector,bUpdateMesh: boolean): void;
-	SetSplineUpDir(InSplineUpDir: Vector,bUpdateMesh: boolean): void;
-	SetForwardAxis(InForwardAxis: ESplineMeshAxis,bUpdateMesh: boolean): void;
-	SetEndTangent(EndTangent: Vector,bUpdateMesh: boolean): void;
-	SetEndScale(EndScale: Vector2D,bUpdateMesh: boolean): void;
-	SetEndRoll(EndRoll: number,bUpdateMesh: boolean): void;
-	SetEndPosition(EndPos: Vector,bUpdateMesh: boolean): void;
-	SetEndOffset(EndOffset: Vector2D,bUpdateMesh: boolean): void;
-	SetBoundaryMin(InBoundaryMin: number,bUpdateMesh: boolean): void;
-	SetBoundaryMax(InBoundaryMax: number,bUpdateMesh: boolean): void;
-	GetStartTangent(): Vector;
-	GetStartScale(): Vector2D;
-	GetStartRoll(): number;
-	GetStartPosition(): Vector;
-	GetStartOffset(): Vector2D;
-	GetSplineUpDir(): Vector;
-	GetForwardAxis(): ESplineMeshAxis;
-	GetEndTangent(): Vector;
-	GetEndScale(): Vector2D;
-	GetEndRoll(): number;
-	GetEndPosition(): Vector;
-	GetEndOffset(): Vector2D;
-	GetBoundaryMin(): number;
-	GetBoundaryMax(): number;
-	static C(Other: UObject | any): SplineMeshComponent;
+declare class LevelCapture extends MovieSceneCapture { 
+	bAutoStartCapture: boolean;
+	PrerequisiteActorId: Guid;
+	static Load(ResourceName: string): LevelCapture;
+	static Find(Outer: UObject, ResourceName: string): LevelCapture;
+	static GetDefaultObject(): LevelCapture;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelCapture;
+	static C(Other: UObject | any): LevelCapture;
+}
+
+declare class MovieSceneCaptureEnvironment extends UObject { 
+	static Load(ResourceName: string): MovieSceneCaptureEnvironment;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneCaptureEnvironment;
+	static GetDefaultObject(): MovieSceneCaptureEnvironment;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCaptureEnvironment;
+	static IsCaptureInProgress(): boolean;
+	static GetCaptureFrameNumber(): number;
+	static GetCaptureElapsedTime(): number;
+	static FindImageCaptureProtocol(): MovieSceneImageCaptureProtocolBase;
+	static FindAudioCaptureProtocol(): MovieSceneAudioCaptureProtocolBase;
+	static C(Other: UObject | any): MovieSceneCaptureEnvironment;
+}
+
+declare class FrameMetrics { 
+	TotalElapsedTime: number;
+	FrameDelta: number;
+	FrameNumber: number;
+	NumDroppedFrames: number;
+	clone() : FrameMetrics;
+	static C(Other: UObject | any): FrameMetrics;
+}
+
+declare class UserDefinedCaptureProtocol extends MovieSceneImageCaptureProtocolBase { 
+	World: World;
+	static Load(ResourceName: string): UserDefinedCaptureProtocol;
+	static Find(Outer: UObject, ResourceName: string): UserDefinedCaptureProtocol;
+	static GetDefaultObject(): UserDefinedCaptureProtocol;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UserDefinedCaptureProtocol;
+	StopCapturingFinalPixels(): void;
+	StartCapturingFinalPixels(StreamName: string): void;
+	PushBufferToStream(Buffer: Texture,StreamName: string): void;
+	OnWarmUp(): void;
+	OnTick(): void;
+	OnStartCapture(): void;
+	OnSetup(): boolean;
+	OnPreTick(): void;
+	OnPauseCapture(): void;
+	OnFinalize(): void;
+	OnCaptureFrame(): void;
+	OnCanFinalize(): boolean;
+	OnBeginFinalize(): void;
+	GetCurrentFrameMetrics(): FrameMetrics;
+	GenerateFilename(InFrameMetrics: FrameMetrics): string;
+	static C(Other: UObject | any): UserDefinedCaptureProtocol;
+}
+
+declare class CapturedPixels { 
+	clone() : CapturedPixels;
+	static C(Other: UObject | any): CapturedPixels;
+}
+
+declare class UserDefinedImageCaptureProtocol extends UserDefinedCaptureProtocol { 
+	Format: EDesiredImageFormat;
+	bEnableCompression: boolean;
+	CompressionQuality: number;
+	static Load(ResourceName: string): UserDefinedImageCaptureProtocol;
+	static Find(Outer: UObject, ResourceName: string): UserDefinedImageCaptureProtocol;
+	static GetDefaultObject(): UserDefinedImageCaptureProtocol;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UserDefinedImageCaptureProtocol;
+	WriteImageToDisk(PixelData: CapturedPixels,StreamName: string,FrameMetrics: FrameMetrics,bCopyImageData: boolean): void;
+	GenerateFilenameForCurrentFrame(): string;
+	GenerateFilenameForBuffer(Buffer: Texture,StreamName: string): string;
+	static C(Other: UObject | any): UserDefinedImageCaptureProtocol;
+}
+
+declare class VideoCaptureProtocol extends FrameGrabberProtocol { 
+	bUseCompression: boolean;
+	CompressionQuality: number;
+	VideoCodec: string;
+	static Load(ResourceName: string): VideoCaptureProtocol;
+	static Find(Outer: UObject, ResourceName: string): VideoCaptureProtocol;
+	static GetDefaultObject(): VideoCaptureProtocol;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VideoCaptureProtocol;
+	static C(Other: UObject | any): VideoCaptureProtocol;
+}
+
+declare class CurveEditorKeyProxy extends Interface { 
+	static Load(ResourceName: string): CurveEditorKeyProxy;
+	static Find(Outer: UObject, ResourceName: string): CurveEditorKeyProxy;
+	static GetDefaultObject(): CurveEditorKeyProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveEditorKeyProxy;
+	static C(Other: UObject | any): CurveEditorKeyProxy;
+}
+
+declare type ECurveEditorTangentVisibility = 'AllTangents' | 'SelectedKeys' | 'NoTangents' | 'ECurveEditorTangentVisibility_MAX';
+declare var ECurveEditorTangentVisibility : { AllTangents:'AllTangents',SelectedKeys:'SelectedKeys',NoTangents:'NoTangents',ECurveEditorTangentVisibility_MAX:'ECurveEditorTangentVisibility_MAX', };
+declare class CurveEditorSettings extends UObject { 
+	bAutoFrameCurveEditor: boolean;
+	bShowCurveEditorCurveToolTips: boolean;
+	TangentVisibility: ECurveEditorTangentVisibility;
+	static Load(ResourceName: string): CurveEditorSettings;
+	static Find(Outer: UObject, ResourceName: string): CurveEditorSettings;
+	static GetDefaultObject(): CurveEditorSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveEditorSettings;
+	static C(Other: UObject | any): CurveEditorSettings;
+}
+
+declare class CameraRig_Crane extends Actor { 
+	CranePitch: number;
+	CraneYaw: number;
+	CraneArmLength: number;
+	bLockMountPitch: boolean;
+	bLockMountYaw: boolean;
+	TransformComponent: SceneComponent;
+	CraneYawControl: SceneComponent;
+	CranePitchControl: SceneComponent;
+	CraneCameraMount: SceneComponent;
+	PreviewMesh_CraneArm: StaticMeshComponent;
+	PreviewMesh_CraneBase: StaticMeshComponent;
+	PreviewMesh_CraneMount: StaticMeshComponent;
+	PreviewMesh_CraneCounterWeight: StaticMeshComponent;
+	static GetDefaultObject(): CameraRig_Crane;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CameraRig_Crane;
+	static C(Other: UObject | any): CameraRig_Crane;
 }
 
 declare class CameraRig_Rail extends Actor { 
 	CurrentPositionOnRail: number;
+	bLockOrientationToRail: boolean;
 	TransformComponent: SceneComponent;
 	RailSplineComponent: SplineComponent;
 	RailCameraMount: SceneComponent;
@@ -17149,6 +19712,7 @@ declare class CameraLookatTrackingSettings {
 	LookAtTrackingInterpSpeed: number;
 	ActorToTrack: Actor;
 	RelativeOffset: Vector;
+	bAllowRoll: boolean;
 	clone() : CameraLookatTrackingSettings;
 	static C(Other: UObject | any): CameraLookatTrackingSettings;
 }
@@ -17167,12 +19731,13 @@ declare class CameraLensSettings {
 	MinFStop: number;
 	MaxFStop: number;
 	MinimumFocusDistance: number;
+	DiaphragmBladeCount: number;
 	clone() : CameraLensSettings;
 	static C(Other: UObject | any): CameraLensSettings;
 }
 
-declare type ECameraFocusMethod = 'None' | 'Manual' | 'Tracking';
-declare var ECameraFocusMethod : { None:'None',Manual:'Manual',Tracking:'Tracking', };
+declare type ECameraFocusMethod = 'None' | 'Manual' | 'Tracking' | 'ECameraFocusMethod_MAX';
+declare var ECameraFocusMethod : { None:'None',Manual:'Manual',Tracking:'Tracking',ECameraFocusMethod_MAX:'ECameraFocusMethod_MAX', };
 declare class CameraTrackingFocusSettings { 
 	ActorToTrack: Actor;
 	RelativeOffset: Vector;
@@ -17182,7 +19747,7 @@ declare class CameraTrackingFocusSettings {
 }
 
 declare class CameraFocusSettings { 
-	FocusMethod: FocusMethod;
+	FocusMethod: ECameraFocusMethod;
 	ManualFocusDistance: number;
 	TrackingFocusSettings: CameraTrackingFocusSettings;
 	bDrawDebugFocusPlane: boolean;
@@ -17216,8 +19781,8 @@ declare class CineCameraComponent extends CameraComponent {
 	CurrentAperture: number;
 	CurrentFocusDistance: number;
 	CurrentHorizontalFOV: number;
-	DebugFocusPlaneMesh: StaticMesh;
-	DebugFocusPlaneMaterial: Material;
+	FocusPlaneVisualizationMesh: StaticMesh;
+	FocusPlaneVisualizationMaterial: Material;
 	DebugFocusPlaneComponent: StaticMeshComponent;
 	DebugFocusPlaneMID: MaterialInstanceDynamic;
 	FilmbackPresets: NamedFilmbackPreset[];
@@ -17230,8 +19795,12 @@ declare class CineCameraComponent extends CameraComponent {
 	static Find(Outer: UObject, ResourceName: string): CineCameraComponent;
 	static GetDefaultObject(): CineCameraComponent;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CineCameraComponent;
+	SetLensPresetByName(InPresetName: string): void;
+	SetFilmbackPresetByName(InPresetName: string): void;
 	GetVerticalFieldOfView(): number;
+	GetLensPresetName(): string;
 	GetHorizontalFieldOfView(): number;
+	GetFilmbackPresetName(): string;
 	static C(Other: UObject | any): CineCameraComponent;
 }
 
@@ -17243,285 +19812,54 @@ declare class CineCameraActor extends CameraActor {
 	static C(Other: UObject | any): CineCameraActor;
 }
 
-declare class ActorRecordingSettings { 
-	Settings: UObject[];
-	clone() : ActorRecordingSettings;
-	static C(Other: UObject | any): ActorRecordingSettings;
-}
-
-declare class AnimationRecordingSettings { 
-	bRecordInWorldSpace: boolean;
-	bRemoveRootAnimation: boolean;
-	bAutoSaveAsset: boolean;
-	SampleRate: number;
-	Length: number;
-	clone() : AnimationRecordingSettings;
-	static C(Other: UObject | any): AnimationRecordingSettings;
-}
-
-declare class ActorRecording extends UObject { 
-	ActorSettings: ActorRecordingSettings;
-	bSpecifyTargetAnimation: boolean;
-	TargetAnimation: any;
-	AnimationSettings: AnimationRecordingSettings;
-	bRecordToPossessable: boolean;
-	ActorToRecord: any;
-	static Load(ResourceName: string): ActorRecording;
-	static Find(Outer: UObject, ResourceName: string): ActorRecording;
-	static GetDefaultObject(): ActorRecording;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorRecording;
-	static C(Other: UObject | any): ActorRecording;
-}
-
-declare class MovieScene3DTransformSectionRecorderSettings extends UObject { 
-	bRecordTransforms: boolean;
-	static Load(ResourceName: string): MovieScene3DTransformSectionRecorderSettings;
-	static Find(Outer: UObject, ResourceName: string): MovieScene3DTransformSectionRecorderSettings;
-	static GetDefaultObject(): MovieScene3DTransformSectionRecorderSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene3DTransformSectionRecorderSettings;
-	static C(Other: UObject | any): MovieScene3DTransformSectionRecorderSettings;
-}
-
-declare class SequenceRecorderBlueprintLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): SequenceRecorderBlueprintLibrary;
-	static Find(Outer: UObject, ResourceName: string): SequenceRecorderBlueprintLibrary;
-	static GetDefaultObject(): SequenceRecorderBlueprintLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequenceRecorderBlueprintLibrary;
-	static StopRecordingSequence(): void;
-	static StartRecordingSequence(ActorsToRecord: Actor[]): void;
-	static IsRecordingSequence(): boolean;
-	static C(Other: UObject | any): SequenceRecorderBlueprintLibrary;
-}
-
-declare type EAudioRecordingMode = 'None' | 'AudioTrack';
-declare var EAudioRecordingMode : { None:'None',AudioTrack:'AudioTrack', };
-declare class SequenceRecorderActorFilter { 
-	ActorClassesToRecord: UnrealEngineClass[];
-	clone() : SequenceRecorderActorFilter;
-	static C(Other: UObject | any): SequenceRecorderActorFilter;
-}
-
-declare class PropertiesToRecordForClass { 
-	Class: UnrealEngineClass;
-	Properties: string[];
-	clone() : PropertiesToRecordForClass;
-	static C(Other: UObject | any): PropertiesToRecordForClass;
-}
-
-declare class SettingsForActorClass { 
-	Class: UnrealEngineClass;
-	bRecordToPossessable: boolean;
-	clone() : SettingsForActorClass;
-	static C(Other: UObject | any): SettingsForActorClass;
-}
-
-declare class SequenceRecorderSettings extends UObject { 
-	bCreateLevelSequence: boolean;
-	bImmersiveMode: boolean;
-	SequenceLength: number;
-	RecordingDelay: number;
-	SequenceName: string;
-	SequenceRecordingBasePath: DirectoryPath;
-	AnimationSubDirectory: string;
-	AudioSubDirectory: string;
-	RecordAudio: RecordAudio;
-	AudioGain: number;
-	AudioInputBufferSize: number;
-	bRecordNearbySpawnedActors: boolean;
-	NearbyActorRecordingProximity: number;
-	bRecordWorldSettingsActor: boolean;
-	bReduceKeys: boolean;
-	ActorFilter: SequenceRecorderActorFilter;
-	LevelSequenceActorsToTrigger: any[];
-	DefaultAnimationSettings: AnimationRecordingSettings;
-	bRecordSequencerSpawnedActors: boolean;
-	ClassesAndPropertiesToRecord: PropertiesToRecordForClass[];
-	PerActorSettings: SettingsForActorClass[];
-	static Load(ResourceName: string): SequenceRecorderSettings;
-	static Find(Outer: UObject, ResourceName: string): SequenceRecorderSettings;
-	static GetDefaultObject(): SequenceRecorderSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequenceRecorderSettings;
-	static C(Other: UObject | any): SequenceRecorderSettings;
-}
-
-declare class CaptureProtocolID { 
-	Identifier: string;
-	clone() : CaptureProtocolID;
-	static C(Other: UObject | any): CaptureProtocolID;
-}
-
-declare class MovieSceneCaptureProtocolSettings extends UObject { 
-	static Load(ResourceName: string): MovieSceneCaptureProtocolSettings;
-	static Find(Outer: UObject, ResourceName: string): MovieSceneCaptureProtocolSettings;
-	static GetDefaultObject(): MovieSceneCaptureProtocolSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCaptureProtocolSettings;
-	static C(Other: UObject | any): MovieSceneCaptureProtocolSettings;
-}
-
-declare class CaptureResolution { 
-	ResX: any;
-	ResY: any;
-	clone() : CaptureResolution;
-	static C(Other: UObject | any): CaptureResolution;
-}
-
-declare class MovieSceneCaptureSettings { 
-	OutputDirectory: DirectoryPath;
-	bCreateTemporaryCopiesOfLevels: boolean;
-	GameModeOverride: UnrealEngineClass;
-	OutputFormat: string;
-	bOverwriteExisting: boolean;
-	bUseRelativeFrameNumbers: boolean;
-	HandleFrames: number;
-	ZeroPadFrameNumbers: number;
-	FrameRate: number;
-	Resolution: CaptureResolution;
-	bEnableTextureStreaming: boolean;
-	bCinematicEngineScalability: boolean;
-	bCinematicMode: boolean;
-	bAllowMovement: boolean;
-	bAllowTurning: boolean;
-	bShowPlayer: boolean;
-	bShowHUD: boolean;
-	clone() : MovieSceneCaptureSettings;
-	static C(Other: UObject | any): MovieSceneCaptureSettings;
-}
-
-declare class MovieSceneCapture extends UObject { 
-	CaptureType: CaptureProtocolID;
-	ProtocolSettings: MovieSceneCaptureProtocolSettings;
-	Settings: MovieSceneCaptureSettings;
-	bUseSeparateProcess: boolean;
-	bCloseEditorWhenCaptureStarts: boolean;
-	AdditionalCommandLineArguments: string;
-	InheritedCommandLineArguments: string;
-	static Load(ResourceName: string): MovieSceneCapture;
-	static Find(Outer: UObject, ResourceName: string): MovieSceneCapture;
-	static GetDefaultObject(): MovieSceneCapture;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCapture;
-	static C(Other: UObject | any): MovieSceneCapture;
-}
-
 declare class LevelSequenceBurnInInitSettings extends UObject { 
 	static Load(ResourceName: string): LevelSequenceBurnInInitSettings;
 	static Find(Outer: UObject, ResourceName: string): LevelSequenceBurnInInitSettings;
 	static GetDefaultObject(): LevelSequenceBurnInInitSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceBurnInInitSettings;
-	static C(Other: UObject | any): LevelSequenceBurnInInitSettings;
-}
-
-declare class LevelSequenceBurnInOptions extends UObject { 
-	bUseBurnIn: boolean;
-	BurnInClass: StringClassReference;
-	Settings: LevelSequenceBurnInInitSettings;
-	static Load(ResourceName: string): LevelSequenceBurnInOptions;
-	static Find(Outer: UObject, ResourceName: string): LevelSequenceBurnInOptions;
-	static GetDefaultObject(): LevelSequenceBurnInOptions;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceBurnInOptions;
-	static C(Other: UObject | any): LevelSequenceBurnInOptions;
-}
-
-declare class AutomatedLevelSequenceCapture extends MovieSceneCapture { 
-	bUseCustomStartFrame: boolean;
-	StartFrame: number;
-	bUseCustomEndFrame: boolean;
-	EndFrame: number;
-	WarmUpFrameCount: number;
-	DelayBeforeWarmUp: number;
-	BurnInOptions: LevelSequenceBurnInOptions;
-	bWriteEditDecisionList: boolean;
-	LevelSequenceAsset: StringAssetReference;
-	LevelSequenceActor: any;
-	static Load(ResourceName: string): AutomatedLevelSequenceCapture;
-	static Find(Outer: UObject, ResourceName: string): AutomatedLevelSequenceCapture;
-	static GetDefaultObject(): AutomatedLevelSequenceCapture;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AutomatedLevelSequenceCapture;
-	static C(Other: UObject | any): AutomatedLevelSequenceCapture;
-}
-
-declare class CompositionGraphCapturePasses { 
-	Value: string[];
-	clone() : CompositionGraphCapturePasses;
-	static C(Other: UObject | any): CompositionGraphCapturePasses;
-}
-
-declare type EHDRCaptureGamut = 'HCGM_Rec709' | 'HCGM_P3DCI' | 'HCGM_Rec2020' | 'HCGM_ACES' | 'HCGM_ACEScg';
-declare var EHDRCaptureGamut : { HCGM_Rec709:'HCGM_Rec709',HCGM_P3DCI:'HCGM_P3DCI',HCGM_Rec2020:'HCGM_Rec2020',HCGM_ACES:'HCGM_ACES',HCGM_ACEScg:'HCGM_ACEScg', };
-declare class CompositionGraphCaptureSettings extends MovieSceneCaptureProtocolSettings { 
-	IncludeRenderPasses: CompositionGraphCapturePasses;
-	bCaptureFramesInHDR: boolean;
-	HDRCompressionQuality: number;
-	CaptureGamut: EHDRCaptureGamut;
-	PostProcessingMaterial: StringAssetReference;
-	static Load(ResourceName: string): CompositionGraphCaptureSettings;
-	static Find(Outer: UObject, ResourceName: string): CompositionGraphCaptureSettings;
-	static GetDefaultObject(): CompositionGraphCaptureSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompositionGraphCaptureSettings;
-	static C(Other: UObject | any): CompositionGraphCaptureSettings;
-}
-
-declare class FrameGrabberProtocolSettings extends MovieSceneCaptureProtocolSettings { 
-	static Load(ResourceName: string): FrameGrabberProtocolSettings;
-	static Find(Outer: UObject, ResourceName: string): FrameGrabberProtocolSettings;
-	static GetDefaultObject(): FrameGrabberProtocolSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FrameGrabberProtocolSettings;
-	static C(Other: UObject | any): FrameGrabberProtocolSettings;
-}
-
-declare class BmpImageCaptureSettings extends MovieSceneCaptureProtocolSettings { 
-	static Load(ResourceName: string): BmpImageCaptureSettings;
-	static Find(Outer: UObject, ResourceName: string): BmpImageCaptureSettings;
-	static GetDefaultObject(): BmpImageCaptureSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BmpImageCaptureSettings;
-	static C(Other: UObject | any): BmpImageCaptureSettings;
-}
-
-declare class ImageCaptureSettings extends FrameGrabberProtocolSettings { 
-	CompressionQuality: number;
-	static Load(ResourceName: string): ImageCaptureSettings;
-	static Find(Outer: UObject, ResourceName: string): ImageCaptureSettings;
-	static GetDefaultObject(): ImageCaptureSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImageCaptureSettings;
-	static C(Other: UObject | any): ImageCaptureSettings;
-}
-
-declare class MovieSceneCaptureInterface extends Interface { 
-	static Load(ResourceName: string): MovieSceneCaptureInterface;
-	static Find(Outer: UObject, ResourceName: string): MovieSceneCaptureInterface;
-	static GetDefaultObject(): MovieSceneCaptureInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCaptureInterface;
-	static C(Other: UObject | any): MovieSceneCaptureInterface;
-}
-
-declare class LevelCapture extends MovieSceneCapture { 
-	bAutoStartCapture: boolean;
-	PrerequisiteActorId: Guid;
-	static Load(ResourceName: string): LevelCapture;
-	static Find(Outer: UObject, ResourceName: string): LevelCapture;
-	static GetDefaultObject(): LevelCapture;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelCapture;
-	static C(Other: UObject | any): LevelCapture;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceBurnInInitSettings;
+	static C(Other: UObject | any): LevelSequenceBurnInInitSettings;
 }
 
-declare class MovieSceneCaptureEnvironment extends UObject { 
-	static Load(ResourceName: string): MovieSceneCaptureEnvironment;
-	static Find(Outer: UObject, ResourceName: string): MovieSceneCaptureEnvironment;
-	static GetDefaultObject(): MovieSceneCaptureEnvironment;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneCaptureEnvironment;
-	static GetCaptureFrameNumber(): number;
-	static GetCaptureElapsedTime(): number;
-	static C(Other: UObject | any): MovieSceneCaptureEnvironment;
+declare class LevelSequenceBurnInOptions extends UObject { 
+	bUseBurnIn: boolean;
+	BurnInClass: SoftClassPath;
+	Settings: LevelSequenceBurnInInitSettings;
+	static Load(ResourceName: string): LevelSequenceBurnInOptions;
+	static Find(Outer: UObject, ResourceName: string): LevelSequenceBurnInOptions;
+	static GetDefaultObject(): LevelSequenceBurnInOptions;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceBurnInOptions;
+	SetBurnIn(InBurnInClass: SoftClassPath): void;
+	static C(Other: UObject | any): LevelSequenceBurnInOptions;
 }
 
-declare class VideoCaptureSettings extends FrameGrabberProtocolSettings { 
-	bUseCompression: boolean;
-	CompressionQuality: number;
-	VideoCodec: string;
-	static Load(ResourceName: string): VideoCaptureSettings;
-	static Find(Outer: UObject, ResourceName: string): VideoCaptureSettings;
-	static GetDefaultObject(): VideoCaptureSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VideoCaptureSettings;
-	static C(Other: UObject | any): VideoCaptureSettings;
+declare class AutomatedLevelSequenceCapture extends MovieSceneCapture { 
+	LevelSequenceAsset: SoftObjectPath;
+	bUseCustomStartFrame: boolean;
+	CustomStartFrame: FrameNumber;
+	bUseCustomEndFrame: boolean;
+	CustomEndFrame: FrameNumber;
+	WarmUpFrameCount: number;
+	DelayBeforeWarmUp: number;
+	DelayBeforeShotWarmUp: number;
+	BurnInOptions: LevelSequenceBurnInOptions;
+	bWriteEditDecisionList: boolean;
+	bWriteFinalCutProXML: boolean;
+	LevelSequenceActor: any;
+	static Load(ResourceName: string): AutomatedLevelSequenceCapture;
+	static Find(Outer: UObject, ResourceName: string): AutomatedLevelSequenceCapture;
+	static GetDefaultObject(): AutomatedLevelSequenceCapture;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AutomatedLevelSequenceCapture;
+	static C(Other: UObject | any): AutomatedLevelSequenceCapture;
+}
+
+declare class FloatChannelKeyProxy extends UObject { 
+	Time: FrameNumber;
+	Value: MovieSceneFloatValue;
+	static Load(ResourceName: string): FloatChannelKeyProxy;
+	static Find(Outer: UObject, ResourceName: string): FloatChannelKeyProxy;
+	static GetDefaultObject(): FloatChannelKeyProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FloatChannelKeyProxy;
+	static C(Other: UObject | any): FloatChannelKeyProxy;
 }
 
 declare class K2Node extends EdGraphNode { 
@@ -17532,18 +19870,18 @@ declare class K2Node extends EdGraphNode {
 	static C(Other: UObject | any): K2Node;
 }
 
-declare type EMovieSceneObjectBindingSpace = 'Local' | 'Root';
-declare var EMovieSceneObjectBindingSpace : { Local:'Local',Root:'Root', };
+declare type EMovieSceneObjectBindingSpace = 'Local' | 'Root' | 'EMovieSceneObjectBindingSpace_MAX';
+declare var EMovieSceneObjectBindingSpace : { Local:'Local',Root:'Root',EMovieSceneObjectBindingSpace_MAX:'EMovieSceneObjectBindingSpace_MAX', };
 declare class MovieSceneObjectBindingID { 
 	SequenceID: number;
-	Space: Space;
+	Space: EMovieSceneObjectBindingSpace;
 	Guid: Guid;
 	clone() : MovieSceneObjectBindingID;
 	static C(Other: UObject | any): MovieSceneObjectBindingID;
 }
 
 declare class K2Node_GetSequenceBinding extends K2Node { 
-	SourceSequence: StringAssetReference;
+	SourceSequence: SoftObjectPath;
 	Binding: MovieSceneObjectBindingID;
 	static Load(ResourceName: string): K2Node_GetSequenceBinding;
 	static Find(Outer: UObject, ResourceName: string): K2Node_GetSequenceBinding;
@@ -17603,13 +19941,13 @@ declare class MovieSceneToolsProjectSettings extends UObject {
 	static C(Other: UObject | any): MovieSceneToolsProjectSettings;
 }
 
-declare type EThumbnailQuality = 'Draft' | 'Normal' | 'Best';
-declare var EThumbnailQuality : { Draft:'Draft',Normal:'Normal',Best:'Best', };
+declare type EThumbnailQuality = 'Draft' | 'Normal' | 'Best' | 'EThumbnailQuality_MAX';
+declare var EThumbnailQuality : { Draft:'Draft',Normal:'Normal',Best:'Best',EThumbnailQuality_MAX:'EThumbnailQuality_MAX', };
 declare class MovieSceneUserThumbnailSettings extends UObject { 
 	bDrawThumbnails: boolean;
 	bDrawSingleThumbnails: boolean;
 	ThumbnailSize: IntPoint;
-	Quality: Quality;
+	Quality: EThumbnailQuality;
 	static Load(ResourceName: string): MovieSceneUserThumbnailSettings;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneUserThumbnailSettings;
 	static GetDefaultObject(): MovieSceneUserThumbnailSettings;
@@ -17617,6 +19955,19 @@ declare class MovieSceneUserThumbnailSettings extends UObject {
 	static C(Other: UObject | any): MovieSceneUserThumbnailSettings;
 }
 
+declare class MovieSceneUserImportFBXSettings extends UObject { 
+	bMatchByNameOnly: boolean;
+	bForceFrontXAxis: boolean;
+	bCreateCameras: boolean;
+	bReduceKeys: boolean;
+	ReduceKeysTolerance: number;
+	static Load(ResourceName: string): MovieSceneUserImportFBXSettings;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneUserImportFBXSettings;
+	static GetDefaultObject(): MovieSceneUserImportFBXSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneUserImportFBXSettings;
+	static C(Other: UObject | any): MovieSceneUserImportFBXSettings;
+}
+
 declare class K2Node_ConstructObjectFromClass extends K2Node { 
 	static Load(ResourceName: string): K2Node_ConstructObjectFromClass;
 	static Find(Outer: UObject, ResourceName: string): K2Node_ConstructObjectFromClass;
@@ -17625,2979 +19976,3 @@ declare class K2Node_ConstructObjectFromClass extends K2Node {
 	static C(Other: UObject | any): K2Node_ConstructObjectFromClass;
 }
 
-declare class K2Node_CreateDragDropOperation extends K2Node_ConstructObjectFromClass { 
-	static Load(ResourceName: string): K2Node_CreateDragDropOperation;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CreateDragDropOperation;
-	static GetDefaultObject(): K2Node_CreateDragDropOperation;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CreateDragDropOperation;
-	static C(Other: UObject | any): K2Node_CreateDragDropOperation;
-}
-
-declare class K2Node_CreateWidget extends K2Node_ConstructObjectFromClass { 
-	static Load(ResourceName: string): K2Node_CreateWidget;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CreateWidget;
-	static GetDefaultObject(): K2Node_CreateWidget;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CreateWidget;
-	static C(Other: UObject | any): K2Node_CreateWidget;
-}
-
-declare class AutomatedAssetImportData extends UObject { 
-	GroupName: string;
-	Filenames: string[];
-	DestinationPath: string;
-	FactoryName: string;
-	bReplaceExisting: boolean;
-	bSkipReadOnly: boolean;
-	Factory: Factory;
-	static Load(ResourceName: string): AutomatedAssetImportData;
-	static Find(Outer: UObject, ResourceName: string): AutomatedAssetImportData;
-	static GetDefaultObject(): AutomatedAssetImportData;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AutomatedAssetImportData;
-	static C(Other: UObject | any): AutomatedAssetImportData;
-}
-
-declare class Factory extends UObject { 
-	bCreateNew: boolean;
-	SupportedClass: UnrealEngineClass;
-	ContextClass: UnrealEngineClass;
-	Formats: string[];
-	bEditAfterNew: boolean;
-	bEditorImport: boolean;
-	bText: boolean;
-	ImportPriority: number;
-	AutomatedImportData: AutomatedAssetImportData;
-	OverwriteYesOrNoToAllState: number;
-	static Load(ResourceName: string): Factory;
-	static Find(Outer: UObject, ResourceName: string): Factory;
-	static GetDefaultObject(): Factory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Factory;
-	static C(Other: UObject | any): Factory;
-}
-
-declare class SlateVectorArtDataFactory extends Factory { 
-	static Load(ResourceName: string): SlateVectorArtDataFactory;
-	static Find(Outer: UObject, ResourceName: string): SlateVectorArtDataFactory;
-	static GetDefaultObject(): SlateVectorArtDataFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateVectorArtDataFactory;
-	static C(Other: UObject | any): SlateVectorArtDataFactory;
-}
-
-declare class DeveloperSettings extends UObject { 
-	static Load(ResourceName: string): DeveloperSettings;
-	static Find(Outer: UObject, ResourceName: string): DeveloperSettings;
-	static GetDefaultObject(): DeveloperSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DeveloperSettings;
-	static C(Other: UObject | any): DeveloperSettings;
-}
-
-declare class DebugResolution { 
-	Width: number;
-	Height: number;
-	Description: string;
-	Color: LinearColor;
-	clone() : DebugResolution;
-	static C(Other: UObject | any): DebugResolution;
-}
-
-declare class UMGEditorProjectSettings extends DeveloperSettings { 
-	bCookSlowConstructionWidgetTree: boolean;
-	DebugResolutions: DebugResolution[];
-	bShowWidgetsFromEngineContent: boolean;
-	bShowWidgetsFromDeveloperContent: boolean;
-	CategoriesToHide: string[];
-	WidgetClassesToHide: StringClassReference[];
-	static Load(ResourceName: string): UMGEditorProjectSettings;
-	static Find(Outer: UObject, ResourceName: string): UMGEditorProjectSettings;
-	static GetDefaultObject(): UMGEditorProjectSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UMGEditorProjectSettings;
-	static C(Other: UObject | any): UMGEditorProjectSettings;
-}
-
-declare class EditorPropertyPathSegment { 
-	Struct: Struct;
-	MemberName: string;
-	MemberGuid: Guid;
-	IsProperty: boolean;
-	clone() : EditorPropertyPathSegment;
-	static C(Other: UObject | any): EditorPropertyPathSegment;
-}
-
-declare class EditorPropertyPath { 
-	Segments: EditorPropertyPathSegment[];
-	clone() : EditorPropertyPath;
-	static C(Other: UObject | any): EditorPropertyPath;
-}
-
-declare type EBindingKind = 'Function' | 'Property';
-declare var EBindingKind : { Function:'Function',Property:'Property', };
-declare class DelegateEditorBinding { 
-	ObjectName: string;
-	PropertyName: string;
-	FunctionName: string;
-	SourceProperty: string;
-	SourcePath: EditorPropertyPath;
-	MemberGuid: Guid;
-	Kind: Kind;
-	clone() : DelegateEditorBinding;
-	static C(Other: UObject | any): DelegateEditorBinding;
-}
-
-declare class WidgetAnimation_DEPRECATED { 
-	MovieScene: MovieScene;
-	AnimationBindings: WidgetAnimationBinding[];
-	clone() : WidgetAnimation_DEPRECATED;
-	static C(Other: UObject | any): WidgetAnimation_DEPRECATED;
-}
-
-declare class WidgetBlueprint extends Blueprint { 
-	WidgetTree: WidgetTree;
-	Bindings: DelegateEditorBinding[];
-	AnimationData: WidgetAnimation_DEPRECATED[];
-	Animations: WidgetAnimation[];
-	PaletteCategory: string;
-	bForceSlowConstructionPath: boolean;
-	static Load(ResourceName: string): WidgetBlueprint;
-	static Find(Outer: UObject, ResourceName: string): WidgetBlueprint;
-	static GetDefaultObject(): WidgetBlueprint;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBlueprint;
-	static C(Other: UObject | any): WidgetBlueprint;
-}
-
-declare class WidgetBlueprintFactory extends Factory { 
-	BlueprintType: EBlueprintType;
-	ParentClass: UnrealEngineClass;
-	static Load(ResourceName: string): WidgetBlueprintFactory;
-	static Find(Outer: UObject, ResourceName: string): WidgetBlueprintFactory;
-	static GetDefaultObject(): WidgetBlueprintFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBlueprintFactory;
-	static C(Other: UObject | any): WidgetBlueprintFactory;
-}
-
-declare class WidgetDesignerSettings extends DeveloperSettings { 
-	GridSnapEnabled: boolean;
-	GridSnapSize: number;
-	bLockToPanelOnDragByDefault: boolean;
-	bShowOutlines: boolean;
-	bExecutePreConstructEvent: boolean;
-	bRespectLocks: boolean;
-	static Load(ResourceName: string): WidgetDesignerSettings;
-	static Find(Outer: UObject, ResourceName: string): WidgetDesignerSettings;
-	static GetDefaultObject(): WidgetDesignerSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetDesignerSettings;
-	static C(Other: UObject | any): WidgetDesignerSettings;
-}
-
-declare class BlueprintCallableFunctionRedirect { 
-	ClassName: string;
-	OldFunctionName: string;
-	NewFunctionName: string;
-	BlueprintParamName: string;
-	ClassParamName: string;
-	clone() : BlueprintCallableFunctionRedirect;
-	static C(Other: UObject | any): BlueprintCallableFunctionRedirect;
-}
-
-declare class EdGraphSchema_K2 extends EdGraphSchema { 
-	EditoronlyBPFunctionRedirects: BlueprintCallableFunctionRedirect[];
-	static Load(ResourceName: string): EdGraphSchema_K2;
-	static Find(Outer: UObject, ResourceName: string): EdGraphSchema_K2;
-	static GetDefaultObject(): EdGraphSchema_K2;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EdGraphSchema_K2;
-	static C(Other: UObject | any): EdGraphSchema_K2;
-}
-
-declare class WidgetGraphSchema extends EdGraphSchema_K2 { 
-	static Load(ResourceName: string): WidgetGraphSchema;
-	static Find(Outer: UObject, ResourceName: string): WidgetGraphSchema;
-	static GetDefaultObject(): WidgetGraphSchema;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetGraphSchema;
-	static C(Other: UObject | any): WidgetGraphSchema;
-}
-
-declare class WidgetSlotPair extends UObject { 
-	WidgetName: string;
-	SlotPropertyNames: string[];
-	SlotPropertyValues: string[];
-	static Load(ResourceName: string): WidgetSlotPair;
-	static Find(Outer: UObject, ResourceName: string): WidgetSlotPair;
-	static GetDefaultObject(): WidgetSlotPair;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetSlotPair;
-	static C(Other: UObject | any): WidgetSlotPair;
-}
-
-declare class AudioMixerBlueprintLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): AudioMixerBlueprintLibrary;
-	static Find(Outer: UObject, ResourceName: string): AudioMixerBlueprintLibrary;
-	static GetDefaultObject(): AudioMixerBlueprintLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioMixerBlueprintLibrary;
-	static SetBypassSourceEffectChainEntry(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,EntryIndex: number,bBypassed: boolean): void;
-	static RemoveSourceEffectFromPresetChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,EntryIndex: number): void;
-	static RemoveMasterSubmixEffect(WorldContextObject: UObject,SubmixEffectPreset: SoundEffectSubmixPreset): void;
-	static GetNumberOfEntriesInSourceEffectChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain): number;
-	static ClearMasterSubmixEffects(WorldContextObject: UObject): void;
-	static AddSourceEffectToPresetChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,Entry: SourceEffectChainEntry): void;
-	static AddMasterSubmixEffect(WorldContextObject: UObject,SubmixEffectPreset: SoundEffectSubmixPreset): void;
-	static C(Other: UObject | any): AudioMixerBlueprintLibrary;
-}
-
-declare type ESubmixEffectDynamicsProcessorType = 'Compressor' | 'Limiter' | 'Expander' | 'Gate' | 'Count';
-declare var ESubmixEffectDynamicsProcessorType : { Compressor:'Compressor',Limiter:'Limiter',Expander:'Expander',Gate:'Gate',Count:'Count', };
-declare type ESubmixEffectDynamicsPeakMode = 'MeanSquared' | 'RootMeanSquared' | 'Peak' | 'Count';
-declare var ESubmixEffectDynamicsPeakMode : { MeanSquared:'MeanSquared',RootMeanSquared:'RootMeanSquared',Peak:'Peak',Count:'Count', };
-declare class SubmixEffectDynamicsProcessorSettings { 
-	DynamicsProcessorType: DynamicsProcessorType;
-	PeakMode: PeakMode;
-	LookAheadMsec: number;
-	AttackTimeMsec: number;
-	ReleaseTimeMsec: number;
-	ThresholdDb: number;
-	Ratio: number;
-	KneeBandwidthDb: number;
-	InputGainDb: number;
-	OutputGainDb: number;
-	bChannelLinked: boolean;
-	bAnalogMode: boolean;
-	clone() : SubmixEffectDynamicsProcessorSettings;
-	static C(Other: UObject | any): SubmixEffectDynamicsProcessorSettings;
-}
-
-declare class SubmixEffectDynamicsProcessorPreset extends SoundEffectSubmixPreset { 
-	Settings: SubmixEffectDynamicsProcessorSettings;
-	static Load(ResourceName: string): SubmixEffectDynamicsProcessorPreset;
-	static Find(Outer: UObject, ResourceName: string): SubmixEffectDynamicsProcessorPreset;
-	static GetDefaultObject(): SubmixEffectDynamicsProcessorPreset;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectDynamicsProcessorPreset;
-	SetSettings(InSettings: SubmixEffectDynamicsProcessorSettings): void;
-	static C(Other: UObject | any): SubmixEffectDynamicsProcessorPreset;
-}
-
-declare class SubmixEffectEQBand { 
-	Frequency: number;
-	Bandwidth: number;
-	GainDb: number;
-	bEnabled: boolean;
-	clone() : SubmixEffectEQBand;
-	static C(Other: UObject | any): SubmixEffectEQBand;
-}
-
-declare class SubmixEffectSubmixEQSettings { 
-	EQBands: SubmixEffectEQBand[];
-	clone() : SubmixEffectSubmixEQSettings;
-	static C(Other: UObject | any): SubmixEffectSubmixEQSettings;
-}
-
-declare class SubmixEffectSubmixEQPreset extends SoundEffectSubmixPreset { 
-	Settings: SubmixEffectSubmixEQSettings;
-	static Load(ResourceName: string): SubmixEffectSubmixEQPreset;
-	static Find(Outer: UObject, ResourceName: string): SubmixEffectSubmixEQPreset;
-	static GetDefaultObject(): SubmixEffectSubmixEQPreset;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectSubmixEQPreset;
-	SetSettings(InSettings: SubmixEffectSubmixEQSettings): void;
-	static C(Other: UObject | any): SubmixEffectSubmixEQPreset;
-}
-
-declare class SubmixEffectReverbSettings { 
-	Density: number;
-	Diffusion: number;
-	Gain: number;
-	GainHF: number;
-	DecayTime: number;
-	DecayHFRatio: number;
-	ReflectionsGain: number;
-	ReflectionsDelay: number;
-	LateGain: number;
-	LateDelay: number;
-	AirAbsorptionGainHF: number;
-	WetLevel: number;
-	clone() : SubmixEffectReverbSettings;
-	static C(Other: UObject | any): SubmixEffectReverbSettings;
-}
-
-declare class SubmixEffectReverbPreset extends SoundEffectSubmixPreset { 
-	Settings: SubmixEffectReverbSettings;
-	static Load(ResourceName: string): SubmixEffectReverbPreset;
-	static Find(Outer: UObject, ResourceName: string): SubmixEffectReverbPreset;
-	static GetDefaultObject(): SubmixEffectReverbPreset;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectReverbPreset;
-	SetSettingsWithReverbEffect(InReverbEffect: ReverbEffect,WetLevel: number): void;
-	SetSettings(InSettings: SubmixEffectReverbSettings): void;
-	static C(Other: UObject | any): SubmixEffectReverbPreset;
-}
-
-declare class SoundWaveProcedural extends SoundWave { 
-	static Load(ResourceName: string): SoundWaveProcedural;
-	static Find(Outer: UObject, ResourceName: string): SoundWaveProcedural;
-	static GetDefaultObject(): SoundWaveProcedural;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundWaveProcedural;
-	static C(Other: UObject | any): SoundWaveProcedural;
-}
-
-declare class SynthSound extends SoundWaveProcedural { 
-	static Load(ResourceName: string): SynthSound;
-	static Find(Outer: UObject, ResourceName: string): SynthSound;
-	static GetDefaultObject(): SynthSound;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthSound;
-	static C(Other: UObject | any): SynthSound;
-}
-
-declare class SynthComponent extends SceneComponent { 
-	bAutoDestroy: boolean;
-	bStopWhenOwnerDestroyed: boolean;
-	bAllowSpatialization: boolean;
-	bOverrideAttenuation: boolean;
-	AttenuationSettings: SoundAttenuation;
-	AttenuationOverrides: SoundAttenuationSettings;
-	ConcurrencySettings: SoundConcurrency;
-	SoundClass: SoundClass;
-	SourceEffectChain: SoundEffectSourcePresetChain;
-	DefaultMasterReverbSendAmount: number;
-	SoundSubmix: SoundSubmix;
-	SoundSubmixSends: SoundSubmixSendInfo[];
-	Synth: SynthSound;
-	AudioComponent: AudioComponent;
-	static Load(ResourceName: string): SynthComponent;
-	static Find(Outer: UObject, ResourceName: string): SynthComponent;
-	static GetDefaultObject(): SynthComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthComponent;
-	Stop(): void;
-	Start(): void;
-	SetSubmixSend(Submix: SoundSubmix,SendLevel: number): void;
-	IsPlaying(): boolean;
-	static C(Other: UObject | any): SynthComponent;
-}
-
-declare type EHardwareClass = 'Unspecified' | 'Desktop' | 'Mobile';
-declare var EHardwareClass : { Unspecified:'Unspecified',Desktop:'Desktop',Mobile:'Mobile', };
-declare type EGraphicsPreset = 'Unspecified' | 'Maximum' | 'Scalable';
-declare var EGraphicsPreset : { Unspecified:'Unspecified',Maximum:'Maximum',Scalable:'Scalable', };
-declare class HardwareTargetingSettings extends UObject { 
-	TargetedHardwareClass: EHardwareClass;
-	AppliedTargetedHardwareClass: EHardwareClass;
-	DefaultGraphicsPerformance: EGraphicsPreset;
-	AppliedDefaultGraphicsPerformance: EGraphicsPreset;
-	static Load(ResourceName: string): HardwareTargetingSettings;
-	static Find(Outer: UObject, ResourceName: string): HardwareTargetingSettings;
-	static GetDefaultObject(): HardwareTargetingSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HardwareTargetingSettings;
-	static C(Other: UObject | any): HardwareTargetingSettings;
-}
-
-declare class ClassViewerProjectSettings extends UObject { 
-	InternalOnlyPaths: DirectoryPath[];
-	InternalOnlyClasses: StringClassReference[];
-	static Load(ResourceName: string): ClassViewerProjectSettings;
-	static Find(Outer: UObject, ResourceName: string): ClassViewerProjectSettings;
-	static GetDefaultObject(): ClassViewerProjectSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClassViewerProjectSettings;
-	static C(Other: UObject | any): ClassViewerProjectSettings;
-}
-
-declare class LocalizedTemplateString { 
-	Language: string;
-	Text: string;
-	clone() : LocalizedTemplateString;
-	static C(Other: UObject | any): LocalizedTemplateString;
-}
-
-declare class TemplateFolderRename { 
-	From: string;
-	To: string;
-	clone() : TemplateFolderRename;
-	static C(Other: UObject | any): TemplateFolderRename;
-}
-
-declare class TemplateReplacement { 
-	Extensions: string[];
-	From: string;
-	To: string;
-	bCaseSensitive: boolean;
-	clone() : TemplateReplacement;
-	static C(Other: UObject | any): TemplateReplacement;
-}
-
-declare type EFeaturePackDetailLevel = 'Standard' | 'High';
-declare var EFeaturePackDetailLevel : { Standard:'Standard',High:'High', };
-declare class FeaturePackLevelSet { 
-	DetailLevels: DetailLevels[];
-	MountName: string;
-	clone() : FeaturePackLevelSet;
-	static C(Other: UObject | any): FeaturePackLevelSet;
-}
-
-declare class TemplateProjectDefs extends UObject { 
-	LocalizedDisplayNames: LocalizedTemplateString[];
-	LocalizedDescriptions: LocalizedTemplateString[];
-	FoldersToIgnore: string[];
-	FilesToIgnore: string[];
-	FolderRenames: TemplateFolderRename[];
-	FilenameReplacements: TemplateReplacement[];
-	ReplacementsInFiles: TemplateReplacement[];
-	SortKey: string;
-	Category: string;
-	ClassTypes: string;
-	AssetTypes: string;
-	bAllowProjectCreation: boolean;
-	PacksToInclude: string[];
-	EditDetailLevelPreference: EditDetailLevelPreference;
-	SharedContentPacks: FeaturePackLevelSet[];
-	static Load(ResourceName: string): TemplateProjectDefs;
-	static Find(Outer: UObject, ResourceName: string): TemplateProjectDefs;
-	static GetDefaultObject(): TemplateProjectDefs;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TemplateProjectDefs;
-	static C(Other: UObject | any): TemplateProjectDefs;
-}
-
-declare class DefaultTemplateProjectDefs extends TemplateProjectDefs { 
-	static Load(ResourceName: string): DefaultTemplateProjectDefs;
-	static Find(Outer: UObject, ResourceName: string): DefaultTemplateProjectDefs;
-	static GetDefaultObject(): DefaultTemplateProjectDefs;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DefaultTemplateProjectDefs;
-	static C(Other: UObject | any): DefaultTemplateProjectDefs;
-}
-
-declare class SourceControlHelpers extends UObject { 
-	static Load(ResourceName: string): SourceControlHelpers;
-	static Find(Outer: UObject, ResourceName: string): SourceControlHelpers;
-	static GetDefaultObject(): SourceControlHelpers;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceControlHelpers;
-	static PackageFilenames(InPackageNames: string[]): string[];
-	static PackageFilename(InPackageName: string): string;
-	static MarkFileForAdd(InFile: string): boolean;
-	static CopyFileUnderSourceControl(InDestFile: string,InSourceFile: string,InFileDescription: string,OutFailReason?: string): {OutFailReason: string, $: boolean};
-	static CheckOutFile(InFile: string): boolean;
-	static AbsoluteFilenames(InFileNames: string[]): string[];
-	static C(Other: UObject | any): SourceControlHelpers;
-}
-
-declare class BlueprintNodeSpawner extends UObject { 
-	NodeClass: UnrealEngineClass;
-	static Load(ResourceName: string): BlueprintNodeSpawner;
-	static Find(Outer: UObject, ResourceName: string): BlueprintNodeSpawner;
-	static GetDefaultObject(): BlueprintNodeSpawner;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintNodeSpawner;
-	static C(Other: UObject | any): BlueprintNodeSpawner;
-}
-
-declare class BlueprintEventNodeSpawner extends BlueprintNodeSpawner { 
-	EventFunc: UFunction;
-	CustomEventName: string;
-	static Load(ResourceName: string): BlueprintEventNodeSpawner;
-	static Find(Outer: UObject, ResourceName: string): BlueprintEventNodeSpawner;
-	static GetDefaultObject(): BlueprintEventNodeSpawner;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintEventNodeSpawner;
-	static C(Other: UObject | any): BlueprintEventNodeSpawner;
-}
-
-declare class BlueprintBoundEventNodeSpawner extends BlueprintEventNodeSpawner { 
-	EventDelegate: MulticastDelegateProperty;
-	static Load(ResourceName: string): BlueprintBoundEventNodeSpawner;
-	static Find(Outer: UObject, ResourceName: string): BlueprintBoundEventNodeSpawner;
-	static GetDefaultObject(): BlueprintBoundEventNodeSpawner;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintBoundEventNodeSpawner;
-	static C(Other: UObject | any): BlueprintBoundEventNodeSpawner;
-}
-
-declare class BlueprintBoundNodeSpawner extends BlueprintNodeSpawner { 
-	static Load(ResourceName: string): BlueprintBoundNodeSpawner;
-	static Find(Outer: UObject, ResourceName: string): BlueprintBoundNodeSpawner;
-	static GetDefaultObject(): BlueprintBoundNodeSpawner;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintBoundNodeSpawner;
-	static C(Other: UObject | any): BlueprintBoundNodeSpawner;
-}
-
-declare class BlueprintComponentNodeSpawner extends BlueprintNodeSpawner { 
-	ComponentClass: UnrealEngineClass;
-	ComponentName: string;
-	ComponentAssetName: string;
-	static Load(ResourceName: string): BlueprintComponentNodeSpawner;
-	static Find(Outer: UObject, ResourceName: string): BlueprintComponentNodeSpawner;
-	static GetDefaultObject(): BlueprintComponentNodeSpawner;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintComponentNodeSpawner;
-	static C(Other: UObject | any): BlueprintComponentNodeSpawner;
-}
-
-declare class BlueprintFieldNodeSpawner extends BlueprintNodeSpawner { 
-	Field: Field;
-	static Load(ResourceName: string): BlueprintFieldNodeSpawner;
-	static Find(Outer: UObject, ResourceName: string): BlueprintFieldNodeSpawner;
-	static GetDefaultObject(): BlueprintFieldNodeSpawner;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintFieldNodeSpawner;
-	static C(Other: UObject | any): BlueprintFieldNodeSpawner;
-}
-
-declare class BlueprintDelegateNodeSpawner extends BlueprintFieldNodeSpawner { 
-	static Load(ResourceName: string): BlueprintDelegateNodeSpawner;
-	static Find(Outer: UObject, ResourceName: string): BlueprintDelegateNodeSpawner;
-	static GetDefaultObject(): BlueprintDelegateNodeSpawner;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintDelegateNodeSpawner;
-	static C(Other: UObject | any): BlueprintDelegateNodeSpawner;
-}
-
-declare type ESaveOnCompile = 'SoC_Never' | 'SoC_SuccessOnly' | 'SoC_Always';
-declare var ESaveOnCompile : { SoC_Never:'SoC_Never',SoC_SuccessOnly:'SoC_SuccessOnly',SoC_Always:'SoC_Always', };
-declare class BlueprintEditorSettings extends UObject { 
-	bDrawMidpointArrowsInBlueprints: boolean;
-	bShowGraphInstructionText: boolean;
-	bSplitContextTargetSettings: boolean;
-	bExposeAllMemberComponentFunctions: boolean;
-	bShowContextualFavorites: boolean;
-	bCompactCallOnMemberNodes: boolean;
-	bFlattenFavoritesMenus: boolean;
-	bFavorPureCastNodes: boolean;
-	bAutoCastObjectConnections: boolean;
-	bShowViewportOnSimulate: boolean;
-	bShowInheritedVariables: boolean;
-	bShowEmptySections: boolean;
-	bSpawnDefaultBlueprintNodes: boolean;
-	bHideConstructionScriptComponentsInDetailsView: boolean;
-	SaveOnCompile: ESaveOnCompile;
-	bJumpToNodeErrors: boolean;
-	bAllowExplicitImpureNodeDisabling: boolean;
-	bShowActionMenuItemSignatures: boolean;
-	bBlueprintNodeUniqueNames: boolean;
-	bShowDetailedCompileResults: boolean;
-	CompileEventDisplayThresholdMs: number;
-	NodeTemplateCacheCapMB: number;
-	static Load(ResourceName: string): BlueprintEditorSettings;
-	static Find(Outer: UObject, ResourceName: string): BlueprintEditorSettings;
-	static GetDefaultObject(): BlueprintEditorSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintEditorSettings;
-	static C(Other: UObject | any): BlueprintEditorSettings;
-}
-
-declare class BlueprintFunctionNodeSpawner extends BlueprintFieldNodeSpawner { 
-	static Load(ResourceName: string): BlueprintFunctionNodeSpawner;
-	static Find(Outer: UObject, ResourceName: string): BlueprintFunctionNodeSpawner;
-	static GetDefaultObject(): BlueprintFunctionNodeSpawner;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintFunctionNodeSpawner;
-	static C(Other: UObject | any): BlueprintFunctionNodeSpawner;
-}
-
-declare class BlueprintVariableNodeSpawner extends BlueprintFieldNodeSpawner { 
-	LocalVarOuter: EdGraph;
-	LocalVarDesc: BPVariableDescription;
-	static Load(ResourceName: string): BlueprintVariableNodeSpawner;
-	static Find(Outer: UObject, ResourceName: string): BlueprintVariableNodeSpawner;
-	static GetDefaultObject(): BlueprintVariableNodeSpawner;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintVariableNodeSpawner;
-	static C(Other: UObject | any): BlueprintVariableNodeSpawner;
-}
-
-declare class K2Node_EditablePinBase extends K2Node { 
-	bIsEditable: boolean;
-	static Load(ResourceName: string): K2Node_EditablePinBase;
-	static Find(Outer: UObject, ResourceName: string): K2Node_EditablePinBase;
-	static GetDefaultObject(): K2Node_EditablePinBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EditablePinBase;
-	static C(Other: UObject | any): K2Node_EditablePinBase;
-}
-
-declare class MemberReference { 
-	MemberParent: UObject;
-	MemberScope: string;
-	MemberName: string;
-	MemberGuid: Guid;
-	bSelfContext: boolean;
-	bWasDeprecated: boolean;
-	clone() : MemberReference;
-	static C(Other: UObject | any): MemberReference;
-}
-
-declare class K2Node_Event extends K2Node_EditablePinBase { 
-	EventSignatureName: string;
-	EventSignatureClass: UnrealEngineClass;
-	EventReference: MemberReference;
-	bOverrideFunction: boolean;
-	bInternalEvent: boolean;
-	CustomFunctionName: string;
-	FunctionFlags: any;
-	static Load(ResourceName: string): K2Node_Event;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Event;
-	static GetDefaultObject(): K2Node_Event;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Event;
-	static C(Other: UObject | any): K2Node_Event;
-}
-
-declare class K2Node_ActorBoundEvent extends K2Node_Event { 
-	DelegatePropertyName: string;
-	DelegateOwnerClass: UnrealEngineClass;
-	EventOwner: Actor;
-	static Load(ResourceName: string): K2Node_ActorBoundEvent;
-	static Find(Outer: UObject, ResourceName: string): K2Node_ActorBoundEvent;
-	static GetDefaultObject(): K2Node_ActorBoundEvent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ActorBoundEvent;
-	static C(Other: UObject | any): K2Node_ActorBoundEvent;
-}
-
-declare class K2Node_CallFunction extends K2Node { 
-	bIsPureFunc: boolean;
-	bIsConstFunc: boolean;
-	bWantsEnumToExecExpansion: boolean;
-	bIsInterfaceCall: boolean;
-	bIsFinalFunction: boolean;
-	bIsBeadFunction: boolean;
-	FunctionReference: MemberReference;
-	CallFunctionName: string;
-	CallFunctionClass: UnrealEngineClass;
-	static Load(ResourceName: string): K2Node_CallFunction;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CallFunction;
-	static GetDefaultObject(): K2Node_CallFunction;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallFunction;
-	static C(Other: UObject | any): K2Node_CallFunction;
-}
-
-declare class K2Node_AddComponent extends K2Node_CallFunction { 
-	bHasExposedVariable: boolean;
-	TemplateBlueprint: string;
-	TemplateType: UnrealEngineClass;
-	static Load(ResourceName: string): K2Node_AddComponent;
-	static Find(Outer: UObject, ResourceName: string): K2Node_AddComponent;
-	static GetDefaultObject(): K2Node_AddComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AddComponent;
-	static C(Other: UObject | any): K2Node_AddComponent;
-}
-
-declare class K2Node_BaseMCDelegate extends K2Node { 
-	DelegateReference: MemberReference;
-	static Load(ResourceName: string): K2Node_BaseMCDelegate;
-	static Find(Outer: UObject, ResourceName: string): K2Node_BaseMCDelegate;
-	static GetDefaultObject(): K2Node_BaseMCDelegate;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BaseMCDelegate;
-	static C(Other: UObject | any): K2Node_BaseMCDelegate;
-}
-
-declare class K2Node_AddDelegate extends K2Node_BaseMCDelegate { 
-	static Load(ResourceName: string): K2Node_AddDelegate;
-	static Find(Outer: UObject, ResourceName: string): K2Node_AddDelegate;
-	static GetDefaultObject(): K2Node_AddDelegate;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AddDelegate;
-	static C(Other: UObject | any): K2Node_AddDelegate;
-}
-
-declare class K2Node_AddPinInterface extends Interface { 
-	static Load(ResourceName: string): K2Node_AddPinInterface;
-	static Find(Outer: UObject, ResourceName: string): K2Node_AddPinInterface;
-	static GetDefaultObject(): K2Node_AddPinInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AddPinInterface;
-	static C(Other: UObject | any): K2Node_AddPinInterface;
-}
-
-declare class K2Node_AssignDelegate extends K2Node_AddDelegate { 
-	static Load(ResourceName: string): K2Node_AssignDelegate;
-	static Find(Outer: UObject, ResourceName: string): K2Node_AssignDelegate;
-	static GetDefaultObject(): K2Node_AssignDelegate;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AssignDelegate;
-	static C(Other: UObject | any): K2Node_AssignDelegate;
-}
-
-declare class K2Node_AssignmentStatement extends K2Node { 
-	static Load(ResourceName: string): K2Node_AssignmentStatement;
-	static Find(Outer: UObject, ResourceName: string): K2Node_AssignmentStatement;
-	static GetDefaultObject(): K2Node_AssignmentStatement;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AssignmentStatement;
-	static C(Other: UObject | any): K2Node_AssignmentStatement;
-}
-
-declare class K2Node_BaseAsyncTask extends K2Node { 
-	ProxyFactoryFunctionName: string;
-	ProxyFactoryClass: UnrealEngineClass;
-	ProxyClass: UnrealEngineClass;
-	ProxyActivateFunctionName: string;
-	static Load(ResourceName: string): K2Node_BaseAsyncTask;
-	static Find(Outer: UObject, ResourceName: string): K2Node_BaseAsyncTask;
-	static GetDefaultObject(): K2Node_BaseAsyncTask;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BaseAsyncTask;
-	static C(Other: UObject | any): K2Node_BaseAsyncTask;
-}
-
-declare class K2Node_BitmaskLiteral extends K2Node { 
-	BitflagsEnum: Enum;
-	static Load(ResourceName: string): K2Node_BitmaskLiteral;
-	static Find(Outer: UObject, ResourceName: string): K2Node_BitmaskLiteral;
-	static GetDefaultObject(): K2Node_BitmaskLiteral;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BitmaskLiteral;
-	static C(Other: UObject | any): K2Node_BitmaskLiteral;
-}
-
-declare type ESelfContextInfo = 'Unspecified' | 'NotSelfContext';
-declare var ESelfContextInfo : { Unspecified:'Unspecified',NotSelfContext:'NotSelfContext', };
-declare class K2Node_Variable extends K2Node { 
-	VariableReference: MemberReference;
-	SelfContextInfo: ESelfContextInfo;
-	VariableSourceClass: UnrealEngineClass;
-	VariableName: string;
-	bSelfContext: boolean;
-	static Load(ResourceName: string): K2Node_Variable;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Variable;
-	static GetDefaultObject(): K2Node_Variable;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Variable;
-	static C(Other: UObject | any): K2Node_Variable;
-}
-
-declare class K2Node_StructOperation extends K2Node_Variable { 
-	StructType: ScriptStruct;
-	static Load(ResourceName: string): K2Node_StructOperation;
-	static Find(Outer: UObject, ResourceName: string): K2Node_StructOperation;
-	static GetDefaultObject(): K2Node_StructOperation;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_StructOperation;
-	static C(Other: UObject | any): K2Node_StructOperation;
-}
-
-declare class OptionalPinFromProperty { 
-	PropertyName: string;
-	PropertyFriendlyName: string;
-	PropertyTooltip: string;
-	CategoryName: string;
-	bShowPin: boolean;
-	bCanToggleVisibility: boolean;
-	bPropertyIsCustomized: boolean;
-	bHasOverridePin: boolean;
-	bIsMarkedForAdvancedDisplay: boolean;
-	bIsOverrideEnabled: boolean;
-	bIsSetValuePinVisible: boolean;
-	bIsOverridePinVisible: boolean;
-	clone() : OptionalPinFromProperty;
-	static C(Other: UObject | any): OptionalPinFromProperty;
-}
-
-declare class K2Node_StructMemberGet extends K2Node_StructOperation { 
-	ShowPinForProperties: OptionalPinFromProperty[];
-	static Load(ResourceName: string): K2Node_StructMemberGet;
-	static Find(Outer: UObject, ResourceName: string): K2Node_StructMemberGet;
-	static GetDefaultObject(): K2Node_StructMemberGet;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_StructMemberGet;
-	static C(Other: UObject | any): K2Node_StructMemberGet;
-}
-
-declare class K2Node_BreakStruct extends K2Node_StructMemberGet { 
-	bMadeAfterOverridePinRemoval: boolean;
-	static Load(ResourceName: string): K2Node_BreakStruct;
-	static Find(Outer: UObject, ResourceName: string): K2Node_BreakStruct;
-	static GetDefaultObject(): K2Node_BreakStruct;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BreakStruct;
-	static C(Other: UObject | any): K2Node_BreakStruct;
-}
-
-declare class K2Node_CallArrayFunction extends K2Node_CallFunction { 
-	static Load(ResourceName: string): K2Node_CallArrayFunction;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CallArrayFunction;
-	static GetDefaultObject(): K2Node_CallArrayFunction;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallArrayFunction;
-	static C(Other: UObject | any): K2Node_CallArrayFunction;
-}
-
-declare class K2Node_CallDataTableFunction extends K2Node_CallFunction { 
-	static Load(ResourceName: string): K2Node_CallDataTableFunction;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CallDataTableFunction;
-	static GetDefaultObject(): K2Node_CallDataTableFunction;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallDataTableFunction;
-	static C(Other: UObject | any): K2Node_CallDataTableFunction;
-}
-
-declare class K2Node_CallDelegate extends K2Node_BaseMCDelegate { 
-	static Load(ResourceName: string): K2Node_CallDelegate;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CallDelegate;
-	static GetDefaultObject(): K2Node_CallDelegate;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallDelegate;
-	static C(Other: UObject | any): K2Node_CallDelegate;
-}
-
-declare class K2Node_CallFunctionOnMember extends K2Node_CallFunction { 
-	MemberVariableToCallOn: MemberReference;
-	static Load(ResourceName: string): K2Node_CallFunctionOnMember;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CallFunctionOnMember;
-	static GetDefaultObject(): K2Node_CallFunctionOnMember;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallFunctionOnMember;
-	static C(Other: UObject | any): K2Node_CallFunctionOnMember;
-}
-
-declare class K2Node_CallMaterialParameterCollectionFunction extends K2Node_CallFunction { 
-	static Load(ResourceName: string): K2Node_CallMaterialParameterCollectionFunction;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CallMaterialParameterCollectionFunction;
-	static GetDefaultObject(): K2Node_CallMaterialParameterCollectionFunction;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallMaterialParameterCollectionFunction;
-	static C(Other: UObject | any): K2Node_CallMaterialParameterCollectionFunction;
-}
-
-declare class K2Node_CallParentFunction extends K2Node_CallFunction { 
-	static Load(ResourceName: string): K2Node_CallParentFunction;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CallParentFunction;
-	static GetDefaultObject(): K2Node_CallParentFunction;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallParentFunction;
-	static C(Other: UObject | any): K2Node_CallParentFunction;
-}
-
-declare class K2Node_CastByteToEnum extends K2Node { 
-	Enum: Enum;
-	bSafe: boolean;
-	static Load(ResourceName: string): K2Node_CastByteToEnum;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CastByteToEnum;
-	static GetDefaultObject(): K2Node_CastByteToEnum;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CastByteToEnum;
-	static C(Other: UObject | any): K2Node_CastByteToEnum;
-}
-
-declare class K2Node_DynamicCast extends K2Node { 
-	TargetType: UnrealEngineClass;
-	bIsPureCast: boolean;
-	static Load(ResourceName: string): K2Node_DynamicCast;
-	static Find(Outer: UObject, ResourceName: string): K2Node_DynamicCast;
-	static GetDefaultObject(): K2Node_DynamicCast;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DynamicCast;
-	static C(Other: UObject | any): K2Node_DynamicCast;
-}
-
-declare class K2Node_ClassDynamicCast extends K2Node_DynamicCast { 
-	static Load(ResourceName: string): K2Node_ClassDynamicCast;
-	static Find(Outer: UObject, ResourceName: string): K2Node_ClassDynamicCast;
-	static GetDefaultObject(): K2Node_ClassDynamicCast;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ClassDynamicCast;
-	static C(Other: UObject | any): K2Node_ClassDynamicCast;
-}
-
-declare class K2Node_ClearDelegate extends K2Node_BaseMCDelegate { 
-	static Load(ResourceName: string): K2Node_ClearDelegate;
-	static Find(Outer: UObject, ResourceName: string): K2Node_ClearDelegate;
-	static GetDefaultObject(): K2Node_ClearDelegate;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ClearDelegate;
-	static C(Other: UObject | any): K2Node_ClearDelegate;
-}
-
-declare class K2Node_CommutativeAssociativeBinaryOperator extends K2Node_CallFunction { 
-	NumAdditionalInputs: number;
-	static Load(ResourceName: string): K2Node_CommutativeAssociativeBinaryOperator;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CommutativeAssociativeBinaryOperator;
-	static GetDefaultObject(): K2Node_CommutativeAssociativeBinaryOperator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CommutativeAssociativeBinaryOperator;
-	static C(Other: UObject | any): K2Node_CommutativeAssociativeBinaryOperator;
-}
-
-declare class K2Node_ComponentBoundEvent extends K2Node_Event { 
-	DelegatePropertyName: string;
-	DelegateOwnerClass: UnrealEngineClass;
-	ComponentPropertyName: string;
-	DelegatePropertyDisplayName: string;
-	static Load(ResourceName: string): K2Node_ComponentBoundEvent;
-	static Find(Outer: UObject, ResourceName: string): K2Node_ComponentBoundEvent;
-	static GetDefaultObject(): K2Node_ComponentBoundEvent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ComponentBoundEvent;
-	static C(Other: UObject | any): K2Node_ComponentBoundEvent;
-}
-
-declare class KismetUserDeclaredFunctionMetadata { 
-	ToolTip: string;
-	Category: string;
-	Keywords: string;
-	CompactNodeTitle: string;
-	InstanceTitleColor: LinearColor;
-	bCallInEditor: boolean;
-	HasLatentFunctions: any;
-	clone() : KismetUserDeclaredFunctionMetadata;
-	static C(Other: UObject | any): KismetUserDeclaredFunctionMetadata;
-}
-
-declare class K2Node_Tunnel extends K2Node_EditablePinBase { 
-	OutputSourceNode: K2Node_Tunnel;
-	InputSinkNode: K2Node_Tunnel;
-	bCanHaveInputs: boolean;
-	bCanHaveOutputs: boolean;
-	MetaData: KismetUserDeclaredFunctionMetadata;
-	static Load(ResourceName: string): K2Node_Tunnel;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Tunnel;
-	static GetDefaultObject(): K2Node_Tunnel;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Tunnel;
-	static C(Other: UObject | any): K2Node_Tunnel;
-}
-
-declare class K2Node_Composite extends K2Node_Tunnel { 
-	BoundGraph: EdGraph;
-	static Load(ResourceName: string): K2Node_Composite;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Composite;
-	static GetDefaultObject(): K2Node_Composite;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Composite;
-	static C(Other: UObject | any): K2Node_Composite;
-}
-
-declare class K2Node_ConvertAsset extends K2Node { 
-	static Load(ResourceName: string): K2Node_ConvertAsset;
-	static Find(Outer: UObject, ResourceName: string): K2Node_ConvertAsset;
-	static GetDefaultObject(): K2Node_ConvertAsset;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConvertAsset;
-	static C(Other: UObject | any): K2Node_ConvertAsset;
-}
-
-declare class K2Node_Copy extends K2Node { 
-	static Load(ResourceName: string): K2Node_Copy;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Copy;
-	static GetDefaultObject(): K2Node_Copy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Copy;
-	static C(Other: UObject | any): K2Node_Copy;
-}
-
-declare class K2Node_CreateDelegate extends K2Node { 
-	SelectedFunctionName: string;
-	SelectedFunctionGuid: Guid;
-	static Load(ResourceName: string): K2Node_CreateDelegate;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CreateDelegate;
-	static GetDefaultObject(): K2Node_CreateDelegate;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CreateDelegate;
-	static C(Other: UObject | any): K2Node_CreateDelegate;
-}
-
-declare class K2Node_CustomEvent extends K2Node_Event { 
-	bCallInEditor: boolean;
-	static Load(ResourceName: string): K2Node_CustomEvent;
-	static Find(Outer: UObject, ResourceName: string): K2Node_CustomEvent;
-	static GetDefaultObject(): K2Node_CustomEvent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CustomEvent;
-	static C(Other: UObject | any): K2Node_CustomEvent;
-}
-
-declare class K2Node_DeadClass extends K2Node { 
-	static Load(ResourceName: string): K2Node_DeadClass;
-	static Find(Outer: UObject, ResourceName: string): K2Node_DeadClass;
-	static GetDefaultObject(): K2Node_DeadClass;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DeadClass;
-	static C(Other: UObject | any): K2Node_DeadClass;
-}
-
-declare class K2Node_DelegateSet extends K2Node { 
-	DelegatePropertyName: string;
-	DelegatePropertyClass: UnrealEngineClass;
-	static Load(ResourceName: string): K2Node_DelegateSet;
-	static Find(Outer: UObject, ResourceName: string): K2Node_DelegateSet;
-	static GetDefaultObject(): K2Node_DelegateSet;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DelegateSet;
-	static C(Other: UObject | any): K2Node_DelegateSet;
-}
-
-declare class K2Node_TemporaryVariable extends K2Node { 
-	VariableType: EdGraphPinType;
-	bIsPersistent: boolean;
-	static Load(ResourceName: string): K2Node_TemporaryVariable;
-	static Find(Outer: UObject, ResourceName: string): K2Node_TemporaryVariable;
-	static GetDefaultObject(): K2Node_TemporaryVariable;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_TemporaryVariable;
-	static C(Other: UObject | any): K2Node_TemporaryVariable;
-}
-
-declare class K2Node_DoOnceMultiInput extends K2Node { 
-	NumAdditionalInputs: number;
-	DataNode: K2Node_TemporaryVariable;
-	static Load(ResourceName: string): K2Node_DoOnceMultiInput;
-	static Find(Outer: UObject, ResourceName: string): K2Node_DoOnceMultiInput;
-	static GetDefaultObject(): K2Node_DoOnceMultiInput;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DoOnceMultiInput;
-	static C(Other: UObject | any): K2Node_DoOnceMultiInput;
-}
-
-declare class K2Node_EaseFunction extends K2Node { 
-	EaseFunctionName: string;
-	static Load(ResourceName: string): K2Node_EaseFunction;
-	static Find(Outer: UObject, ResourceName: string): K2Node_EaseFunction;
-	static GetDefaultObject(): K2Node_EaseFunction;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EaseFunction;
-	static C(Other: UObject | any): K2Node_EaseFunction;
-}
-
-declare class K2Node_EnumEquality extends K2Node { 
-	static Load(ResourceName: string): K2Node_EnumEquality;
-	static Find(Outer: UObject, ResourceName: string): K2Node_EnumEquality;
-	static GetDefaultObject(): K2Node_EnumEquality;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EnumEquality;
-	static C(Other: UObject | any): K2Node_EnumEquality;
-}
-
-declare class K2Node_EnumInequality extends K2Node_EnumEquality { 
-	static Load(ResourceName: string): K2Node_EnumInequality;
-	static Find(Outer: UObject, ResourceName: string): K2Node_EnumInequality;
-	static GetDefaultObject(): K2Node_EnumInequality;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EnumInequality;
-	static C(Other: UObject | any): K2Node_EnumInequality;
-}
-
-declare class K2Node_EnumLiteral extends K2Node { 
-	Enum: Enum;
-	static Load(ResourceName: string): K2Node_EnumLiteral;
-	static Find(Outer: UObject, ResourceName: string): K2Node_EnumLiteral;
-	static GetDefaultObject(): K2Node_EnumLiteral;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EnumLiteral;
-	static C(Other: UObject | any): K2Node_EnumLiteral;
-}
-
-declare class K2Node_ExecutionSequence extends K2Node { 
-	static Load(ResourceName: string): K2Node_ExecutionSequence;
-	static Find(Outer: UObject, ResourceName: string): K2Node_ExecutionSequence;
-	static GetDefaultObject(): K2Node_ExecutionSequence;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ExecutionSequence;
-	static C(Other: UObject | any): K2Node_ExecutionSequence;
-}
-
-declare class K2Node_ForEachElementInEnum extends K2Node { 
-	Enum: Enum;
-	static Load(ResourceName: string): K2Node_ForEachElementInEnum;
-	static Find(Outer: UObject, ResourceName: string): K2Node_ForEachElementInEnum;
-	static GetDefaultObject(): K2Node_ForEachElementInEnum;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ForEachElementInEnum;
-	static C(Other: UObject | any): K2Node_ForEachElementInEnum;
-}
-
-declare class K2Node_FormatText extends K2Node { 
-	PinNames: string[];
-	static Load(ResourceName: string): K2Node_FormatText;
-	static Find(Outer: UObject, ResourceName: string): K2Node_FormatText;
-	static GetDefaultObject(): K2Node_FormatText;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FormatText;
-	static C(Other: UObject | any): K2Node_FormatText;
-}
-
-declare class K2Node_FunctionTerminator extends K2Node_EditablePinBase { 
-	SignatureClass: UnrealEngineClass;
-	SignatureName: string;
-	static Load(ResourceName: string): K2Node_FunctionTerminator;
-	static Find(Outer: UObject, ResourceName: string): K2Node_FunctionTerminator;
-	static GetDefaultObject(): K2Node_FunctionTerminator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FunctionTerminator;
-	static C(Other: UObject | any): K2Node_FunctionTerminator;
-}
-
-declare class K2Node_FunctionEntry extends K2Node_FunctionTerminator { 
-	CustomGeneratedFunctionName: string;
-	MetaData: KismetUserDeclaredFunctionMetadata;
-	LocalVariables: BPVariableDescription[];
-	bEnforceConstCorrectness: boolean;
-	ExtraFlags: number;
-	static Load(ResourceName: string): K2Node_FunctionEntry;
-	static Find(Outer: UObject, ResourceName: string): K2Node_FunctionEntry;
-	static GetDefaultObject(): K2Node_FunctionEntry;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FunctionEntry;
-	static C(Other: UObject | any): K2Node_FunctionEntry;
-}
-
-declare class K2Node_FunctionResult extends K2Node_FunctionTerminator { 
-	static Load(ResourceName: string): K2Node_FunctionResult;
-	static Find(Outer: UObject, ResourceName: string): K2Node_FunctionResult;
-	static GetDefaultObject(): K2Node_FunctionResult;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FunctionResult;
-	static C(Other: UObject | any): K2Node_FunctionResult;
-}
-
-declare class K2Node_GenericCreateObject extends K2Node_ConstructObjectFromClass { 
-	static Load(ResourceName: string): K2Node_GenericCreateObject;
-	static Find(Outer: UObject, ResourceName: string): K2Node_GenericCreateObject;
-	static GetDefaultObject(): K2Node_GenericCreateObject;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GenericCreateObject;
-	static C(Other: UObject | any): K2Node_GenericCreateObject;
-}
-
-declare class K2Node_GetArrayItem extends K2Node { 
-	bReturnByRefDesired: boolean;
-	static Load(ResourceName: string): K2Node_GetArrayItem;
-	static Find(Outer: UObject, ResourceName: string): K2Node_GetArrayItem;
-	static GetDefaultObject(): K2Node_GetArrayItem;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetArrayItem;
-	static C(Other: UObject | any): K2Node_GetArrayItem;
-}
-
-declare class K2Node_GetClassDefaults extends K2Node { 
-	BlueprintSubscribedTo: Blueprint;
-	ShowPinForProperties: OptionalPinFromProperty[];
-	bExcludeObjectContainers: boolean;
-	bExcludeObjectArrays: boolean;
-	static Load(ResourceName: string): K2Node_GetClassDefaults;
-	static Find(Outer: UObject, ResourceName: string): K2Node_GetClassDefaults;
-	static GetDefaultObject(): K2Node_GetClassDefaults;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetClassDefaults;
-	static C(Other: UObject | any): K2Node_GetClassDefaults;
-}
-
-declare class K2Node_GetDataTableRow extends K2Node { 
-	static Load(ResourceName: string): K2Node_GetDataTableRow;
-	static Find(Outer: UObject, ResourceName: string): K2Node_GetDataTableRow;
-	static GetDefaultObject(): K2Node_GetDataTableRow;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetDataTableRow;
-	static C(Other: UObject | any): K2Node_GetDataTableRow;
-}
-
-declare class K2Node_GetEnumeratorName extends K2Node { 
-	static Load(ResourceName: string): K2Node_GetEnumeratorName;
-	static Find(Outer: UObject, ResourceName: string): K2Node_GetEnumeratorName;
-	static GetDefaultObject(): K2Node_GetEnumeratorName;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetEnumeratorName;
-	static C(Other: UObject | any): K2Node_GetEnumeratorName;
-}
-
-declare class K2Node_GetEnumeratorNameAsString extends K2Node_GetEnumeratorName { 
-	static Load(ResourceName: string): K2Node_GetEnumeratorNameAsString;
-	static Find(Outer: UObject, ResourceName: string): K2Node_GetEnumeratorNameAsString;
-	static GetDefaultObject(): K2Node_GetEnumeratorNameAsString;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetEnumeratorNameAsString;
-	static C(Other: UObject | any): K2Node_GetEnumeratorNameAsString;
-}
-
-declare class K2Node_GetInputAxisKeyValue extends K2Node_CallFunction { 
-	InputAxisKey: Key;
-	bConsumeInput: boolean;
-	bExecuteWhenPaused: boolean;
-	static Load(ResourceName: string): K2Node_GetInputAxisKeyValue;
-	static Find(Outer: UObject, ResourceName: string): K2Node_GetInputAxisKeyValue;
-	static GetDefaultObject(): K2Node_GetInputAxisKeyValue;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetInputAxisKeyValue;
-	static C(Other: UObject | any): K2Node_GetInputAxisKeyValue;
-}
-
-declare class K2Node_GetInputAxisValue extends K2Node_CallFunction { 
-	InputAxisName: string;
-	bConsumeInput: boolean;
-	bExecuteWhenPaused: boolean;
-	static Load(ResourceName: string): K2Node_GetInputAxisValue;
-	static Find(Outer: UObject, ResourceName: string): K2Node_GetInputAxisValue;
-	static GetDefaultObject(): K2Node_GetInputAxisValue;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetInputAxisValue;
-	static C(Other: UObject | any): K2Node_GetInputAxisValue;
-}
-
-declare class K2Node_GetInputVectorAxisValue extends K2Node_GetInputAxisKeyValue { 
-	static Load(ResourceName: string): K2Node_GetInputVectorAxisValue;
-	static Find(Outer: UObject, ResourceName: string): K2Node_GetInputVectorAxisValue;
-	static GetDefaultObject(): K2Node_GetInputVectorAxisValue;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetInputVectorAxisValue;
-	static C(Other: UObject | any): K2Node_GetInputVectorAxisValue;
-}
-
-declare class K2Node_GetNumEnumEntries extends K2Node { 
-	Enum: Enum;
-	static Load(ResourceName: string): K2Node_GetNumEnumEntries;
-	static Find(Outer: UObject, ResourceName: string): K2Node_GetNumEnumEntries;
-	static GetDefaultObject(): K2Node_GetNumEnumEntries;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetNumEnumEntries;
-	static C(Other: UObject | any): K2Node_GetNumEnumEntries;
-}
-
-declare class K2Node_IfThenElse extends K2Node { 
-	static Load(ResourceName: string): K2Node_IfThenElse;
-	static Find(Outer: UObject, ResourceName: string): K2Node_IfThenElse;
-	static GetDefaultObject(): K2Node_IfThenElse;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_IfThenElse;
-	static C(Other: UObject | any): K2Node_IfThenElse;
-}
-
-declare class K2Node_InputAction extends K2Node { 
-	InputActionName: string;
-	bConsumeInput: boolean;
-	bExecuteWhenPaused: boolean;
-	bOverrideParentBinding: boolean;
-	static Load(ResourceName: string): K2Node_InputAction;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InputAction;
-	static GetDefaultObject(): K2Node_InputAction;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputAction;
-	static C(Other: UObject | any): K2Node_InputAction;
-}
-
-declare class K2Node_InputActionEvent extends K2Node_Event { 
-	InputActionName: string;
-	InputKeyEvent: EInputEvent;
-	bConsumeInput: boolean;
-	bExecuteWhenPaused: boolean;
-	bOverrideParentBinding: boolean;
-	static Load(ResourceName: string): K2Node_InputActionEvent;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InputActionEvent;
-	static GetDefaultObject(): K2Node_InputActionEvent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputActionEvent;
-	static C(Other: UObject | any): K2Node_InputActionEvent;
-}
-
-declare class K2Node_InputAxisEvent extends K2Node_Event { 
-	InputAxisName: string;
-	bConsumeInput: boolean;
-	bExecuteWhenPaused: boolean;
-	bOverrideParentBinding: boolean;
-	static Load(ResourceName: string): K2Node_InputAxisEvent;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InputAxisEvent;
-	static GetDefaultObject(): K2Node_InputAxisEvent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputAxisEvent;
-	static C(Other: UObject | any): K2Node_InputAxisEvent;
-}
-
-declare class K2Node_InputAxisKeyEvent extends K2Node_Event { 
-	AxisKey: Key;
-	bConsumeInput: boolean;
-	bExecuteWhenPaused: boolean;
-	bOverrideParentBinding: boolean;
-	static Load(ResourceName: string): K2Node_InputAxisKeyEvent;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InputAxisKeyEvent;
-	static GetDefaultObject(): K2Node_InputAxisKeyEvent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputAxisKeyEvent;
-	static C(Other: UObject | any): K2Node_InputAxisKeyEvent;
-}
-
-declare class K2Node_InputKey extends K2Node { 
-	InputKey: Key;
-	bConsumeInput: boolean;
-	bExecuteWhenPaused: boolean;
-	bOverrideParentBinding: boolean;
-	bControl: boolean;
-	bAlt: boolean;
-	bShift: boolean;
-	bCommand: boolean;
-	static Load(ResourceName: string): K2Node_InputKey;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InputKey;
-	static GetDefaultObject(): K2Node_InputKey;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputKey;
-	static C(Other: UObject | any): K2Node_InputKey;
-}
-
-declare class InputChord { 
-	Key: Key;
-	bShift: boolean;
-	bCtrl: boolean;
-	bAlt: boolean;
-	bCmd: boolean;
-	clone() : InputChord;
-	static C(Other: UObject | any): InputChord;
-	EqualEqual_InputChordInputChord(B: InputChord): boolean;
-	static EqualEqual_InputChordInputChord(A: InputChord,B: InputChord): boolean;
-}
-
-declare class K2Node_InputKeyEvent extends K2Node_Event { 
-	InputChord: InputChord;
-	InputKeyEvent: EInputEvent;
-	bConsumeInput: boolean;
-	bExecuteWhenPaused: boolean;
-	bOverrideParentBinding: boolean;
-	static Load(ResourceName: string): K2Node_InputKeyEvent;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InputKeyEvent;
-	static GetDefaultObject(): K2Node_InputKeyEvent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputKeyEvent;
-	static C(Other: UObject | any): K2Node_InputKeyEvent;
-}
-
-declare class K2Node_InputTouch extends K2Node { 
-	bConsumeInput: boolean;
-	bExecuteWhenPaused: boolean;
-	bOverrideParentBinding: boolean;
-	static Load(ResourceName: string): K2Node_InputTouch;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InputTouch;
-	static GetDefaultObject(): K2Node_InputTouch;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputTouch;
-	static C(Other: UObject | any): K2Node_InputTouch;
-}
-
-declare class K2Node_InputTouchEvent extends K2Node_Event { 
-	InputKeyEvent: EInputEvent;
-	bConsumeInput: boolean;
-	bExecuteWhenPaused: boolean;
-	bOverrideParentBinding: boolean;
-	static Load(ResourceName: string): K2Node_InputTouchEvent;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InputTouchEvent;
-	static GetDefaultObject(): K2Node_InputTouchEvent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputTouchEvent;
-	static C(Other: UObject | any): K2Node_InputTouchEvent;
-}
-
-declare class K2Node_InputVectorAxisEvent extends K2Node_InputAxisKeyEvent { 
-	static Load(ResourceName: string): K2Node_InputVectorAxisEvent;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InputVectorAxisEvent;
-	static GetDefaultObject(): K2Node_InputVectorAxisEvent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputVectorAxisEvent;
-	static C(Other: UObject | any): K2Node_InputVectorAxisEvent;
-}
-
-declare class K2Node_Knot extends K2Node { 
-	static Load(ResourceName: string): K2Node_Knot;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Knot;
-	static GetDefaultObject(): K2Node_Knot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Knot;
-	static C(Other: UObject | any): K2Node_Knot;
-}
-
-declare class K2Node_Literal extends K2Node { 
-	ObjectRef: UObject;
-	static Load(ResourceName: string): K2Node_Literal;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Literal;
-	static GetDefaultObject(): K2Node_Literal;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Literal;
-	static C(Other: UObject | any): K2Node_Literal;
-}
-
-declare class K2Node_LoadAsset extends K2Node { 
-	static Load(ResourceName: string): K2Node_LoadAsset;
-	static Find(Outer: UObject, ResourceName: string): K2Node_LoadAsset;
-	static GetDefaultObject(): K2Node_LoadAsset;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LoadAsset;
-	static C(Other: UObject | any): K2Node_LoadAsset;
-}
-
-declare class K2Node_LoadAssetClass extends K2Node_LoadAsset { 
-	static Load(ResourceName: string): K2Node_LoadAssetClass;
-	static Find(Outer: UObject, ResourceName: string): K2Node_LoadAssetClass;
-	static GetDefaultObject(): K2Node_LoadAssetClass;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LoadAssetClass;
-	static C(Other: UObject | any): K2Node_LoadAssetClass;
-}
-
-declare class K2Node_LocalVariable extends K2Node_TemporaryVariable { 
-	CustomVariableName: string;
-	VariableTooltip: string;
-	static Load(ResourceName: string): K2Node_LocalVariable;
-	static Find(Outer: UObject, ResourceName: string): K2Node_LocalVariable;
-	static GetDefaultObject(): K2Node_LocalVariable;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LocalVariable;
-	static C(Other: UObject | any): K2Node_LocalVariable;
-}
-
-declare class GraphReference { 
-	MacroGraph: EdGraph;
-	GraphBlueprint: Blueprint;
-	GraphGuid: Guid;
-	clone() : GraphReference;
-	static C(Other: UObject | any): GraphReference;
-}
-
-declare class K2Node_MacroInstance extends K2Node_Tunnel { 
-	MacroGraph: EdGraph;
-	MacroGraphReference: GraphReference;
-	ResolvedWildcardType: EdGraphPinType;
-	static Load(ResourceName: string): K2Node_MacroInstance;
-	static Find(Outer: UObject, ResourceName: string): K2Node_MacroInstance;
-	static GetDefaultObject(): K2Node_MacroInstance;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MacroInstance;
-	static C(Other: UObject | any): K2Node_MacroInstance;
-}
-
-declare class K2Node_MakeArray extends K2Node { 
-	NumInputs: number;
-	static Load(ResourceName: string): K2Node_MakeArray;
-	static Find(Outer: UObject, ResourceName: string): K2Node_MakeArray;
-	static GetDefaultObject(): K2Node_MakeArray;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeArray;
-	static C(Other: UObject | any): K2Node_MakeArray;
-}
-
-declare class K2Node_StructMemberSet extends K2Node_StructOperation { 
-	ShowPinForProperties: OptionalPinFromProperty[];
-	static Load(ResourceName: string): K2Node_StructMemberSet;
-	static Find(Outer: UObject, ResourceName: string): K2Node_StructMemberSet;
-	static GetDefaultObject(): K2Node_StructMemberSet;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_StructMemberSet;
-	static C(Other: UObject | any): K2Node_StructMemberSet;
-}
-
-declare class K2Node_MakeStruct extends K2Node_StructMemberSet { 
-	bMadeAfterOverridePinRemoval: boolean;
-	static Load(ResourceName: string): K2Node_MakeStruct;
-	static Find(Outer: UObject, ResourceName: string): K2Node_MakeStruct;
-	static GetDefaultObject(): K2Node_MakeStruct;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeStruct;
-	static C(Other: UObject | any): K2Node_MakeStruct;
-}
-
-declare class K2Node_MakeVariable extends K2Node { 
-	VariableType: BPVariableDescription;
-	static Load(ResourceName: string): K2Node_MakeVariable;
-	static Find(Outer: UObject, ResourceName: string): K2Node_MakeVariable;
-	static GetDefaultObject(): K2Node_MakeVariable;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeVariable;
-	static C(Other: UObject | any): K2Node_MakeVariable;
-}
-
-declare class K2Node_MathExpression extends K2Node_Composite { 
-	Expression: string;
-	bMadeAfterRotChange: boolean;
-	static Load(ResourceName: string): K2Node_MathExpression;
-	static Find(Outer: UObject, ResourceName: string): K2Node_MathExpression;
-	static GetDefaultObject(): K2Node_MathExpression;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MathExpression;
-	static C(Other: UObject | any): K2Node_MathExpression;
-}
-
-declare class K2Node_MatineeController extends K2Node { 
-	MatineeActor: MatineeActor;
-	static Load(ResourceName: string): K2Node_MatineeController;
-	static Find(Outer: UObject, ResourceName: string): K2Node_MatineeController;
-	static GetDefaultObject(): K2Node_MatineeController;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MatineeController;
-	static C(Other: UObject | any): K2Node_MatineeController;
-}
-
-declare class K2Node_Message extends K2Node_CallFunction { 
-	static Load(ResourceName: string): K2Node_Message;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Message;
-	static GetDefaultObject(): K2Node_Message;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Message;
-	static C(Other: UObject | any): K2Node_Message;
-}
-
-declare class K2Node_MultiGate extends K2Node_ExecutionSequence { 
-	DataNode: K2Node_TemporaryVariable;
-	static Load(ResourceName: string): K2Node_MultiGate;
-	static Find(Outer: UObject, ResourceName: string): K2Node_MultiGate;
-	static GetDefaultObject(): K2Node_MultiGate;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MultiGate;
-	static C(Other: UObject | any): K2Node_MultiGate;
-}
-
-declare class K2Node_PureAssignmentStatement extends K2Node { 
-	static Load(ResourceName: string): K2Node_PureAssignmentStatement;
-	static Find(Outer: UObject, ResourceName: string): K2Node_PureAssignmentStatement;
-	static GetDefaultObject(): K2Node_PureAssignmentStatement;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_PureAssignmentStatement;
-	static C(Other: UObject | any): K2Node_PureAssignmentStatement;
-}
-
-declare class K2Node_RemoveDelegate extends K2Node_BaseMCDelegate { 
-	static Load(ResourceName: string): K2Node_RemoveDelegate;
-	static Find(Outer: UObject, ResourceName: string): K2Node_RemoveDelegate;
-	static GetDefaultObject(): K2Node_RemoveDelegate;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_RemoveDelegate;
-	static C(Other: UObject | any): K2Node_RemoveDelegate;
-}
-
-declare class K2Node_Select extends K2Node { 
-	NumOptionPins: number;
-	IndexPinType: EdGraphPinType;
-	Enum: Enum;
-	EnumEntries: string[];
-	EnumEntryFriendlyNames: string[];
-	bReconstructNode: boolean;
-	static Load(ResourceName: string): K2Node_Select;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Select;
-	static GetDefaultObject(): K2Node_Select;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Select;
-	static C(Other: UObject | any): K2Node_Select;
-}
-
-declare class K2Node_Self extends K2Node { 
-	static Load(ResourceName: string): K2Node_Self;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Self;
-	static GetDefaultObject(): K2Node_Self;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Self;
-	static C(Other: UObject | any): K2Node_Self;
-}
-
-declare class K2Node_SetFieldsInStruct extends K2Node_MakeStruct { 
-	static Load(ResourceName: string): K2Node_SetFieldsInStruct;
-	static Find(Outer: UObject, ResourceName: string): K2Node_SetFieldsInStruct;
-	static GetDefaultObject(): K2Node_SetFieldsInStruct;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SetFieldsInStruct;
-	static C(Other: UObject | any): K2Node_SetFieldsInStruct;
-}
-
-declare class K2Node_SetVariableOnPersistentFrame extends K2Node { 
-	static Load(ResourceName: string): K2Node_SetVariableOnPersistentFrame;
-	static Find(Outer: UObject, ResourceName: string): K2Node_SetVariableOnPersistentFrame;
-	static GetDefaultObject(): K2Node_SetVariableOnPersistentFrame;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SetVariableOnPersistentFrame;
-	static C(Other: UObject | any): K2Node_SetVariableOnPersistentFrame;
-}
-
-declare class K2Node_SpawnActor extends K2Node { 
-	static Load(ResourceName: string): K2Node_SpawnActor;
-	static Find(Outer: UObject, ResourceName: string): K2Node_SpawnActor;
-	static GetDefaultObject(): K2Node_SpawnActor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SpawnActor;
-	static C(Other: UObject | any): K2Node_SpawnActor;
-}
-
-declare class K2Node_SpawnActorFromClass extends K2Node { 
-	static Load(ResourceName: string): K2Node_SpawnActorFromClass;
-	static Find(Outer: UObject, ResourceName: string): K2Node_SpawnActorFromClass;
-	static GetDefaultObject(): K2Node_SpawnActorFromClass;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SpawnActorFromClass;
-	static C(Other: UObject | any): K2Node_SpawnActorFromClass;
-}
-
-declare class K2Node_Switch extends K2Node { 
-	bHasDefaultPin: boolean;
-	FunctionName: string;
-	FunctionClass: UnrealEngineClass;
-	static Load(ResourceName: string): K2Node_Switch;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Switch;
-	static GetDefaultObject(): K2Node_Switch;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Switch;
-	static C(Other: UObject | any): K2Node_Switch;
-}
-
-declare class K2Node_SwitchEnum extends K2Node_Switch { 
-	Enum: Enum;
-	EnumEntries: string[];
-	EnumFriendlyNames: string[];
-	static Load(ResourceName: string): K2Node_SwitchEnum;
-	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchEnum;
-	static GetDefaultObject(): K2Node_SwitchEnum;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchEnum;
-	static C(Other: UObject | any): K2Node_SwitchEnum;
-}
-
-declare class K2Node_SwitchInteger extends K2Node_Switch { 
-	StartIndex: number;
-	static Load(ResourceName: string): K2Node_SwitchInteger;
-	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchInteger;
-	static GetDefaultObject(): K2Node_SwitchInteger;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchInteger;
-	static C(Other: UObject | any): K2Node_SwitchInteger;
-}
-
-declare class K2Node_SwitchName extends K2Node_Switch { 
-	PinNames: string[];
-	static Load(ResourceName: string): K2Node_SwitchName;
-	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchName;
-	static GetDefaultObject(): K2Node_SwitchName;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchName;
-	static C(Other: UObject | any): K2Node_SwitchName;
-}
-
-declare class K2Node_SwitchString extends K2Node_Switch { 
-	PinNames: string[];
-	bIsCaseSensitive: boolean;
-	static Load(ResourceName: string): K2Node_SwitchString;
-	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchString;
-	static GetDefaultObject(): K2Node_SwitchString;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchString;
-	static C(Other: UObject | any): K2Node_SwitchString;
-}
-
-declare class K2Node_Timeline extends K2Node { 
-	TimelineName: string;
-	bAutoPlay: boolean;
-	TimelineGuid: Guid;
-	bLoop: boolean;
-	bReplicated: boolean;
-	bIgnoreTimeDilation: boolean;
-	static Load(ResourceName: string): K2Node_Timeline;
-	static Find(Outer: UObject, ResourceName: string): K2Node_Timeline;
-	static GetDefaultObject(): K2Node_Timeline;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Timeline;
-	static C(Other: UObject | any): K2Node_Timeline;
-}
-
-declare class K2Node_TunnelBoundary extends K2Node { 
-	BaseName: string;
-	FinalExitSite: EdGraphPinReference;
-	static Load(ResourceName: string): K2Node_TunnelBoundary;
-	static Find(Outer: UObject, ResourceName: string): K2Node_TunnelBoundary;
-	static GetDefaultObject(): K2Node_TunnelBoundary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_TunnelBoundary;
-	static C(Other: UObject | any): K2Node_TunnelBoundary;
-}
-
-declare class K2Node_VariableGet extends K2Node_Variable { 
-	bIsPureGet: boolean;
-	static Load(ResourceName: string): K2Node_VariableGet;
-	static Find(Outer: UObject, ResourceName: string): K2Node_VariableGet;
-	static GetDefaultObject(): K2Node_VariableGet;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_VariableGet;
-	static C(Other: UObject | any): K2Node_VariableGet;
-}
-
-declare class K2Node_VariableSet extends K2Node_Variable { 
-	static Load(ResourceName: string): K2Node_VariableSet;
-	static Find(Outer: UObject, ResourceName: string): K2Node_VariableSet;
-	static GetDefaultObject(): K2Node_VariableSet;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_VariableSet;
-	static C(Other: UObject | any): K2Node_VariableSet;
-}
-
-declare class K2Node_VariableSetRef extends K2Node { 
-	static Load(ResourceName: string): K2Node_VariableSetRef;
-	static Find(Outer: UObject, ResourceName: string): K2Node_VariableSetRef;
-	static GetDefaultObject(): K2Node_VariableSetRef;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_VariableSetRef;
-	static C(Other: UObject | any): K2Node_VariableSetRef;
-}
-
-declare class NodeDependingOnEnumInterface extends Interface { 
-	static Load(ResourceName: string): NodeDependingOnEnumInterface;
-	static Find(Outer: UObject, ResourceName: string): NodeDependingOnEnumInterface;
-	static GetDefaultObject(): NodeDependingOnEnumInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NodeDependingOnEnumInterface;
-	static C(Other: UObject | any): NodeDependingOnEnumInterface;
-}
-
-declare class FavoritedBlueprintPaletteItem { 
-	clone() : FavoritedBlueprintPaletteItem;
-	static C(Other: UObject | any): FavoritedBlueprintPaletteItem;
-}
-
-declare class BlueprintPaletteFavorites extends UObject { 
-	CustomFavorites: string[];
-	CurrentFavorites: FavoritedBlueprintPaletteItem[];
-	CurrentProfile: string;
-	static Load(ResourceName: string): BlueprintPaletteFavorites;
-	static Find(Outer: UObject, ResourceName: string): BlueprintPaletteFavorites;
-	static GetDefaultObject(): BlueprintPaletteFavorites;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintPaletteFavorites;
-	static C(Other: UObject | any): BlueprintPaletteFavorites;
-}
-
-declare type EBlueprintProfilerHeatMapDisplayMode = 'None' | 'Inclusive' | 'Average' | 'MaxTiming' | 'Total' | 'HottestPath' | 'PinToPin';
-declare var EBlueprintProfilerHeatMapDisplayMode : { None:'None',Inclusive:'Inclusive',Average:'Average',MaxTiming:'MaxTiming',Total:'Total',HottestPath:'HottestPath',PinToPin:'PinToPin', };
-declare type EBlueprintProfilerHeatLevelMetricsType = 'ClassRelative' | 'FrameRelative' | 'CustomThresholds';
-declare var EBlueprintProfilerHeatLevelMetricsType : { ClassRelative:'ClassRelative',FrameRelative:'FrameRelative',CustomThresholds:'CustomThresholds', };
-declare class BlueprintProfilerSettings extends UObject { 
-	bDisplayByInstance: boolean;
-	bScopeToDebugInstance: boolean;
-	bGraphFilter: boolean;
-	bDisplayPure: boolean;
-	bDisplayInheritedEvents: boolean;
-	GraphNodeHeatMapDisplayMode: GraphNodeHeatMapDisplayMode;
-	WireHeatMapDisplayMode: WireHeatMapDisplayMode;
-	HeatLevelMetricsType: HeatLevelMetricsType;
-	CustomEventPerformanceThreshold: number;
-	CustomAveragePerformanceThreshold: number;
-	CustomInclusivePerformanceThreshold: number;
-	CustomMaxPerformanceThreshold: number;
-	static Load(ResourceName: string): BlueprintProfilerSettings;
-	static Find(Outer: UObject, ResourceName: string): BlueprintProfilerSettings;
-	static GetDefaultObject(): BlueprintProfilerSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintProfilerSettings;
-	static C(Other: UObject | any): BlueprintProfilerSettings;
-}
-
-declare class K2Node_AsyncAction extends K2Node_BaseAsyncTask { 
-	static Load(ResourceName: string): K2Node_AsyncAction;
-	static Find(Outer: UObject, ResourceName: string): K2Node_AsyncAction;
-	static GetDefaultObject(): K2Node_AsyncAction;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AsyncAction;
-	static C(Other: UObject | any): K2Node_AsyncAction;
-}
-
-declare type EBlueprintPinStyleType = 'BPST_Original' | 'BPST_VariantA';
-declare var EBlueprintPinStyleType : { BPST_Original:'BPST_Original',BPST_VariantA:'BPST_VariantA', };
-declare type EGraphPanningMouseButton = 'Right' | 'Middle' | 'Both';
-declare var EGraphPanningMouseButton : { Right:'Right',Middle:'Middle',Both:'Both', };
-declare class GraphEditorSettings extends UObject { 
-	DataPinStyle: EBlueprintPinStyleType;
-	PanningMouseButton: PanningMouseButton;
-	PaddingAbovePin: number;
-	PaddingBelowPin: number;
-	PaddingRightOfInput: number;
-	PaddingLeftOfOutput: number;
-	PaddingTowardsNodeEdge: number;
-	bTreatSplinesLikePins: boolean;
-	SplineHoverTolerance: number;
-	ForwardSplineHorizontalDeltaRange: number;
-	ForwardSplineVerticalDeltaRange: number;
-	ForwardSplineTangentFromHorizontalDelta: Vector2D;
-	ForwardSplineTangentFromVerticalDelta: Vector2D;
-	BackwardSplineHorizontalDeltaRange: number;
-	BackwardSplineVerticalDeltaRange: number;
-	BackwardSplineTangentFromHorizontalDelta: Vector2D;
-	BackwardSplineTangentFromVerticalDelta: Vector2D;
-	DefaultPinTypeColor: LinearColor;
-	ExecutionPinTypeColor: LinearColor;
-	BooleanPinTypeColor: LinearColor;
-	BytePinTypeColor: LinearColor;
-	ClassPinTypeColor: LinearColor;
-	IntPinTypeColor: LinearColor;
-	FloatPinTypeColor: LinearColor;
-	NamePinTypeColor: LinearColor;
-	AssetPinTypeColor: LinearColor;
-	AssetClassPinTypeColor: LinearColor;
-	DelegatePinTypeColor: LinearColor;
-	ObjectPinTypeColor: LinearColor;
-	InterfacePinTypeColor: LinearColor;
-	StringPinTypeColor: LinearColor;
-	TextPinTypeColor: LinearColor;
-	StructPinTypeColor: LinearColor;
-	WildcardPinTypeColor: LinearColor;
-	VectorPinTypeColor: LinearColor;
-	RotatorPinTypeColor: LinearColor;
-	TransformPinTypeColor: LinearColor;
-	IndexPinTypeColor: LinearColor;
-	EventNodeTitleColor: LinearColor;
-	FunctionCallNodeTitleColor: LinearColor;
-	PureFunctionCallNodeTitleColor: LinearColor;
-	ParentFunctionCallNodeTitleColor: LinearColor;
-	FunctionTerminatorNodeTitleColor: LinearColor;
-	ExecBranchNodeTitleColor: LinearColor;
-	ExecSequenceNodeTitleColor: LinearColor;
-	ResultNodeTitleColor: LinearColor;
-	DefaultCommentNodeTitleColor: LinearColor;
-	DefaultDataWireThickness: number;
-	DefaultExecutionWireThickness: number;
-	TraceAttackColor: LinearColor;
-	TraceAttackWireThickness: number;
-	TraceAttackHoldPeriod: number;
-	TraceDecayPeriod: number;
-	TraceDecayExponent: number;
-	TraceSustainColor: LinearColor;
-	TraceSustainWireThickness: number;
-	TraceSustainHoldPeriod: number;
-	TraceReleaseColor: LinearColor;
-	TraceReleaseWireThickness: number;
-	TraceReleasePeriod: number;
-	TraceReleaseExponent: number;
-	TracePositionBonusPeriod: number;
-	TracePositionExponent: number;
-	static Load(ResourceName: string): GraphEditorSettings;
-	static Find(Outer: UObject, ResourceName: string): GraphEditorSettings;
-	static GetDefaultObject(): GraphEditorSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GraphEditorSettings;
-	static C(Other: UObject | any): GraphEditorSettings;
-}
-
-declare class AnimationConduitGraphSchema extends EdGraphSchema_K2 { 
-	static Load(ResourceName: string): AnimationConduitGraphSchema;
-	static Find(Outer: UObject, ResourceName: string): AnimationConduitGraphSchema;
-	static GetDefaultObject(): AnimationConduitGraphSchema;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationConduitGraphSchema;
-	static C(Other: UObject | any): AnimationConduitGraphSchema;
-}
-
-declare class AnimationGraph extends EdGraph { 
-	static Load(ResourceName: string): AnimationGraph;
-	static Find(Outer: UObject, ResourceName: string): AnimationGraph;
-	static GetDefaultObject(): AnimationGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationGraph;
-	static C(Other: UObject | any): AnimationGraph;
-}
-
-declare type EBlueprintUsage = 'NoProperties' | 'DoesNotUseBlueprint' | 'UsesBlueprint';
-declare var EBlueprintUsage : { NoProperties:'NoProperties',DoesNotUseBlueprint:'DoesNotUseBlueprint',UsesBlueprint:'UsesBlueprint', };
-declare class AnimGraphNode_Base extends K2Node { 
-	ShowPinForProperties: OptionalPinFromProperty[];
-	BlueprintUsage: BlueprintUsage;
-	static Load(ResourceName: string): AnimGraphNode_Base;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Base;
-	static GetDefaultObject(): AnimGraphNode_Base;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Base;
-	static C(Other: UObject | any): AnimGraphNode_Base;
-}
-
-declare type EPostCopyOperation = 'None' | 'LogicalNegateBool';
-declare var EPostCopyOperation : { None:'None',LogicalNegateBool:'LogicalNegateBool', };
-declare type ECopyType = 'MemCopy' | 'BoolProperty' | 'StructProperty' | 'ObjectProperty';
-declare var ECopyType : { MemCopy:'MemCopy',BoolProperty:'BoolProperty',StructProperty:'StructProperty',ObjectProperty:'ObjectProperty', };
-declare class ExposedValueCopyRecord { 
-	SourceProperty: Property;
-	SourcePropertyName: string;
-	SourceSubPropertyName: string;
-	SourceArrayIndex: number;
-	DestProperty: Property;
-	DestArrayIndex: number;
-	Size: number;
-	bInstanceIsTarget: boolean;
-	PostCopyOperation: PostCopyOperation;
-	CopyType: CopyType;
-	CachedSourceProperty: Property;
-	clone() : ExposedValueCopyRecord;
-	static C(Other: UObject | any): ExposedValueCopyRecord;
-}
-
-declare class ExposedValueHandler { 
-	BoundFunction: string;
-	CopyRecords: ExposedValueCopyRecord[];
-	clone() : ExposedValueHandler;
-	static C(Other: UObject | any): ExposedValueHandler;
-}
-
-declare class AnimNode_Base { 
-	EvaluateGraphExposedInputs: ExposedValueHandler;
-	clone() : AnimNode_Base;
-	static C(Other: UObject | any): AnimNode_Base;
-}
-
-declare class PoseLinkBase { 
-	LinkID: number;
-	SourceLinkID: number;
-	clone() : PoseLinkBase;
-	static C(Other: UObject | any): PoseLinkBase;
-}
-
-declare class PoseLink extends PoseLinkBase { 
-	clone() : PoseLink;
-	static C(Other: UObject | any): PoseLink;
-}
-
-declare class AnimNode_Root extends AnimNode_Base { 
-	Result: PoseLink;
-	clone() : AnimNode_Root;
-	static C(Other: UObject | any): AnimNode_Root;
-}
-
-declare class AnimGraphNode_Root extends AnimGraphNode_Base { 
-	UNode: AnimNode_Root;
-	static Load(ResourceName: string): AnimGraphNode_Root;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Root;
-	static GetDefaultObject(): AnimGraphNode_Root;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Root;
-	static C(Other: UObject | any): AnimGraphNode_Root;
-}
-
-declare class AnimGraphNode_CustomTransitionResult extends AnimGraphNode_Root { 
-	static Load(ResourceName: string): AnimGraphNode_CustomTransitionResult;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CustomTransitionResult;
-	static GetDefaultObject(): AnimGraphNode_CustomTransitionResult;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CustomTransitionResult;
-	static C(Other: UObject | any): AnimGraphNode_CustomTransitionResult;
-}
-
-declare class AnimationCustomTransitionGraph extends AnimationGraph { 
-	MyResultNode: AnimGraphNode_CustomTransitionResult;
-	static Load(ResourceName: string): AnimationCustomTransitionGraph;
-	static Find(Outer: UObject, ResourceName: string): AnimationCustomTransitionGraph;
-	static GetDefaultObject(): AnimationCustomTransitionGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationCustomTransitionGraph;
-	static C(Other: UObject | any): AnimationCustomTransitionGraph;
-}
-
-declare class AnimationGraphSchema extends EdGraphSchema_K2 { 
-	PN_SequenceName: string;
-	NAME_NeverAsPin: string;
-	NAME_PinHiddenByDefault: string;
-	NAME_PinShownByDefault: string;
-	NAME_AlwaysAsPin: string;
-	NAME_CustomizeProperty: string;
-	NAME_OnEvaluate: string;
-	DefaultEvaluationHandlerName: string;
-	static Load(ResourceName: string): AnimationGraphSchema;
-	static Find(Outer: UObject, ResourceName: string): AnimationGraphSchema;
-	static GetDefaultObject(): AnimationGraphSchema;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationGraphSchema;
-	static C(Other: UObject | any): AnimationGraphSchema;
-}
-
-declare class AnimationCustomTransitionSchema extends AnimationGraphSchema { 
-	static Load(ResourceName: string): AnimationCustomTransitionSchema;
-	static Find(Outer: UObject, ResourceName: string): AnimationCustomTransitionSchema;
-	static GetDefaultObject(): AnimationCustomTransitionSchema;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationCustomTransitionSchema;
-	static C(Other: UObject | any): AnimationCustomTransitionSchema;
-}
-
-declare class AnimGraphNode_StateResult extends AnimGraphNode_Root { 
-	static Load(ResourceName: string): AnimGraphNode_StateResult;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_StateResult;
-	static GetDefaultObject(): AnimGraphNode_StateResult;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_StateResult;
-	static C(Other: UObject | any): AnimGraphNode_StateResult;
-}
-
-declare class AnimationStateGraph extends AnimationGraph { 
-	MyResultNode: AnimGraphNode_StateResult;
-	static Load(ResourceName: string): AnimationStateGraph;
-	static Find(Outer: UObject, ResourceName: string): AnimationStateGraph;
-	static GetDefaultObject(): AnimationStateGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateGraph;
-	static C(Other: UObject | any): AnimationStateGraph;
-}
-
-declare class AnimationStateGraphSchema extends AnimationGraphSchema { 
-	static Load(ResourceName: string): AnimationStateGraphSchema;
-	static Find(Outer: UObject, ResourceName: string): AnimationStateGraphSchema;
-	static GetDefaultObject(): AnimationStateGraphSchema;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateGraphSchema;
-	static C(Other: UObject | any): AnimationStateGraphSchema;
-}
-
-declare class AnimStateEntryNode extends EdGraphNode { 
-	static Load(ResourceName: string): AnimStateEntryNode;
-	static Find(Outer: UObject, ResourceName: string): AnimStateEntryNode;
-	static GetDefaultObject(): AnimStateEntryNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateEntryNode;
-	static C(Other: UObject | any): AnimStateEntryNode;
-}
-
-declare class AnimGraphNode_StateMachineBase extends AnimGraphNode_Base { 
-	EditorStateMachineGraph: AnimationStateMachineGraph;
-	static Load(ResourceName: string): AnimGraphNode_StateMachineBase;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_StateMachineBase;
-	static GetDefaultObject(): AnimGraphNode_StateMachineBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_StateMachineBase;
-	static C(Other: UObject | any): AnimGraphNode_StateMachineBase;
-}
-
-declare class AnimationStateMachineGraph extends EdGraph { 
-	EntryNode: AnimStateEntryNode;
-	OwnerAnimGraphNode: AnimGraphNode_StateMachineBase;
-	static Load(ResourceName: string): AnimationStateMachineGraph;
-	static Find(Outer: UObject, ResourceName: string): AnimationStateMachineGraph;
-	static GetDefaultObject(): AnimationStateMachineGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateMachineGraph;
-	static C(Other: UObject | any): AnimationStateMachineGraph;
-}
-
-declare class AnimationStateMachineSchema extends EdGraphSchema { 
-	PC_Exec: string;
-	static Load(ResourceName: string): AnimationStateMachineSchema;
-	static Find(Outer: UObject, ResourceName: string): AnimationStateMachineSchema;
-	static GetDefaultObject(): AnimationStateMachineSchema;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateMachineSchema;
-	static C(Other: UObject | any): AnimationStateMachineSchema;
-}
-
-declare class AnimNode_TransitionResult extends AnimNode_Base { 
-	bCanEnterTransition: boolean;
-	clone() : AnimNode_TransitionResult;
-	static C(Other: UObject | any): AnimNode_TransitionResult;
-}
-
-declare class AnimGraphNode_TransitionResult extends AnimGraphNode_Base { 
-	UNode: AnimNode_TransitionResult;
-	static Load(ResourceName: string): AnimGraphNode_TransitionResult;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TransitionResult;
-	static GetDefaultObject(): AnimGraphNode_TransitionResult;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TransitionResult;
-	static C(Other: UObject | any): AnimGraphNode_TransitionResult;
-}
-
-declare class AnimationTransitionGraph extends AnimationGraph { 
-	MyResultNode: AnimGraphNode_TransitionResult;
-	static Load(ResourceName: string): AnimationTransitionGraph;
-	static Find(Outer: UObject, ResourceName: string): AnimationTransitionGraph;
-	static GetDefaultObject(): AnimationTransitionGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationTransitionGraph;
-	static C(Other: UObject | any): AnimationTransitionGraph;
-}
-
-declare class AnimationTransitionSchema extends EdGraphSchema_K2 { 
-	static Load(ResourceName: string): AnimationTransitionSchema;
-	static Find(Outer: UObject, ResourceName: string): AnimationTransitionSchema;
-	static GetDefaultObject(): AnimationTransitionSchema;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationTransitionSchema;
-	static C(Other: UObject | any): AnimationTransitionSchema;
-}
-
-declare class AnimBlueprintPostCompileValidation extends UObject { 
-	static Load(ResourceName: string): AnimBlueprintPostCompileValidation;
-	static Find(Outer: UObject, ResourceName: string): AnimBlueprintPostCompileValidation;
-	static GetDefaultObject(): AnimBlueprintPostCompileValidation;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintPostCompileValidation;
-	static C(Other: UObject | any): AnimBlueprintPostCompileValidation;
-}
-
-declare type EAnimGroupRole = 'CanBeLeader' | 'AlwaysFollower' | 'AlwaysLeader' | 'TransitionLeader' | 'TransitionFollower';
-declare var EAnimGroupRole : { CanBeLeader:'CanBeLeader',AlwaysFollower:'AlwaysFollower',AlwaysLeader:'AlwaysLeader',TransitionLeader:'TransitionLeader',TransitionFollower:'TransitionFollower', };
-declare class AnimationGroupReference { 
-	GroupName: string;
-	GroupRole: EAnimGroupRole;
-	clone() : AnimationGroupReference;
-	static C(Other: UObject | any): AnimationGroupReference;
-}
-
-declare class AnimGraphNode_AssetPlayerBase extends AnimGraphNode_Base { 
-	SyncGroup: AnimationGroupReference;
-	static Load(ResourceName: string): AnimGraphNode_AssetPlayerBase;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_AssetPlayerBase;
-	static GetDefaultObject(): AnimGraphNode_AssetPlayerBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_AssetPlayerBase;
-	static C(Other: UObject | any): AnimGraphNode_AssetPlayerBase;
-}
-
-declare class AnimGraphNode_BlendSpaceBase extends AnimGraphNode_AssetPlayerBase { 
-	static Load(ResourceName: string): AnimGraphNode_BlendSpaceBase;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpaceBase;
-	static GetDefaultObject(): AnimGraphNode_BlendSpaceBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpaceBase;
-	static C(Other: UObject | any): AnimGraphNode_BlendSpaceBase;
-}
-
-declare class AnimNode_AssetPlayerBase extends AnimNode_Base { 
-	bIgnoreForRelevancyTest: boolean;
-	GroupIndex: number;
-	GroupRole: EAnimGroupRole;
-	BlendWeight: number;
-	InternalTimeAccumulator: number;
-	clone() : AnimNode_AssetPlayerBase;
-	static C(Other: UObject | any): AnimNode_AssetPlayerBase;
-}
-
-declare type EFilterInterpolationType = 'BSIT_Average' | 'BSIT_Linear' | 'BSIT_Cubic';
-declare var EFilterInterpolationType : { BSIT_Average:'BSIT_Average',BSIT_Linear:'BSIT_Linear',BSIT_Cubic:'BSIT_Cubic', };
-declare class InterpolationParameter { 
-	InterpolationTime: number;
-	InterpolationType: EFilterInterpolationType;
-	clone() : InterpolationParameter;
-	static C(Other: UObject | any): InterpolationParameter;
-}
-
-declare type ENotifyTriggerMode = 'AllAnimations' | 'HighestWeightedAnimation' | 'None';
-declare var ENotifyTriggerMode : { AllAnimations:'AllAnimations',HighestWeightedAnimation:'HighestWeightedAnimation',None:'None', };
-declare class PerBoneInterpolation { 
-	BoneReference: BoneReference;
-	InterpolationSpeedPerSec: number;
-	clone() : PerBoneInterpolation;
-	static C(Other: UObject | any): PerBoneInterpolation;
-}
-
-declare class BlendSample { 
-	Animation: AnimSequence;
-	SampleValue: Vector;
-	RateScale: number;
-	bIsValid: boolean;
-	clone() : BlendSample;
-	static C(Other: UObject | any): BlendSample;
-}
-
-declare class EditorElement { 
-	Indices: number;
-	Weights: number;
-	clone() : EditorElement;
-	static C(Other: UObject | any): EditorElement;
-}
-
-declare class BlendParameter { 
-	DisplayName: string;
-	Min: number;
-	Max: number;
-	GridNum: number;
-	clone() : BlendParameter;
-	static C(Other: UObject | any): BlendParameter;
-}
-
-declare class BlendSpaceBase extends AnimationAsset { 
-	bRotationBlendInMeshSpace: boolean;
-	PreviewBasePose: AnimSequence;
-	AnimLength: number;
-	InterpolationParam: InterpolationParameter;
-	TargetWeightInterpolationSpeedPerSec: number;
-	NotifyTriggerMode: ENotifyTriggerMode;
-	PerBoneBlend: PerBoneInterpolation[];
-	SampleIndexWithMarkers: number;
-	SampleData: BlendSample[];
-	GridSamples: EditorElement[];
-	BlendParameters: BlendParameter;
-	static Load(ResourceName: string): BlendSpaceBase;
-	static Find(Outer: UObject, ResourceName: string): BlendSpaceBase;
-	static GetDefaultObject(): BlendSpaceBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlendSpaceBase;
-	static C(Other: UObject | any): BlendSpaceBase;
-}
-
-declare class BlendFilter { 
-	clone() : BlendFilter;
-	static C(Other: UObject | any): BlendFilter;
-}
-
-declare class BlendSampleData { 
-	SampleDataIndex: number;
-	Animation: AnimSequence;
-	TotalWeight: number;
-	Time: number;
-	PreviousTime: number;
-	clone() : BlendSampleData;
-	static C(Other: UObject | any): BlendSampleData;
-}
-
-declare class AnimNode_BlendSpacePlayer extends AnimNode_AssetPlayerBase { 
-	X: number;
-	Y: number;
-	Z: number;
-	PlayRate: number;
-	bLoop: boolean;
-	StartPosition: number;
-	BlendSpace: BlendSpaceBase;
-	bResetPlayTimeWhenBlendSpaceChanges: boolean;
-	BlendFilter: BlendFilter;
-	BlendSampleDataCache: BlendSampleData[];
-	PreviousBlendSpace: BlendSpaceBase;
-	clone() : AnimNode_BlendSpacePlayer;
-	static C(Other: UObject | any): AnimNode_BlendSpacePlayer;
-}
-
-declare class AnimNode_AimOffsetLookAt extends AnimNode_BlendSpacePlayer { 
-	BasePose: PoseLink;
-	LODThreshold: number;
-	bIsLODEnabled: boolean;
-	LookAtLocation: Vector;
-	SourceSocketName: string;
-	PivotSocketName: string;
-	SocketAxis: Vector;
-	Alpha: number;
-	SocketBoneReference: BoneReference;
-	SocketLocalTransform: Transform;
-	PivotSocketBoneReference: BoneReference;
-	PivotSocketLocalTransform: Transform;
-	clone() : AnimNode_AimOffsetLookAt;
-	static C(Other: UObject | any): AnimNode_AimOffsetLookAt;
-}
-
-declare class AnimGraphNode_AimOffsetLookAt extends AnimGraphNode_BlendSpaceBase { 
-	UNode: AnimNode_AimOffsetLookAt;
-	static Load(ResourceName: string): AnimGraphNode_AimOffsetLookAt;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_AimOffsetLookAt;
-	static GetDefaultObject(): AnimGraphNode_AimOffsetLookAt;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_AimOffsetLookAt;
-	static C(Other: UObject | any): AnimGraphNode_AimOffsetLookAt;
-}
-
-declare class AnimGraphNode_SkeletalControlBase extends AnimGraphNode_Base { 
-	static Load(ResourceName: string): AnimGraphNode_SkeletalControlBase;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SkeletalControlBase;
-	static GetDefaultObject(): AnimGraphNode_SkeletalControlBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SkeletalControlBase;
-	static C(Other: UObject | any): AnimGraphNode_SkeletalControlBase;
-}
-
-declare class ComponentSpacePoseLink extends PoseLinkBase { 
-	clone() : ComponentSpacePoseLink;
-	static C(Other: UObject | any): ComponentSpacePoseLink;
-}
-
-declare class InputScaleBias { 
-	Scale: number;
-	Bias: number;
-	clone() : InputScaleBias;
-	static C(Other: UObject | any): InputScaleBias;
-}
-
-declare class AnimNode_SkeletalControlBase extends AnimNode_Base { 
-	ComponentPose: ComponentSpacePoseLink;
-	Alpha: number;
-	AlphaScaleBias: InputScaleBias;
-	LODThreshold: number;
-	ActualAlpha: number;
-	clone() : AnimNode_SkeletalControlBase;
-	static C(Other: UObject | any): AnimNode_SkeletalControlBase;
-}
-
-declare type AnimPhysSimSpaceType = 'Component' | 'Actor' | 'World' | 'RootRelative' | 'BoneRelative';
-declare var AnimPhysSimSpaceType : { Component:'Component',Actor:'Actor',World:'World',RootRelative:'RootRelative',BoneRelative:'BoneRelative', };
-declare type AnimPhysLinearConstraintType = 'Free' | 'Limited';
-declare var AnimPhysLinearConstraintType : { Free:'Free',Limited:'Limited', };
-declare type AnimPhysAngularConstraintType = 'Angular' | 'Cone';
-declare var AnimPhysAngularConstraintType : { Angular:'Angular',Cone:'Cone', };
-declare type AnimPhysTwistAxis = 'AxisX' | 'AxisY' | 'AxisZ';
-declare var AnimPhysTwistAxis : { AxisX:'AxisX',AxisY:'AxisY',AxisZ:'AxisZ', };
-declare class AnimPhysConstraintSetup { 
-	LinearXLimitType: LinearXLimitType;
-	LinearYLimitType: LinearYLimitType;
-	LinearZLimitType: LinearZLimitType;
-	LinearAxesMin: Vector;
-	LinearAxesMax: Vector;
-	AngularConstraintType: AngularConstraintType;
-	TwistAxis: TwistAxis;
-	ConeAngle: number;
-	AngularXAngle: number;
-	AngularYAngle: number;
-	AngularZAngle: number;
-	AngularLimitsMin: Vector;
-	AngularLimitsMax: Vector;
-	AngularTargetAxis: AngularTargetAxis;
-	AngularTarget: Vector;
-	bLinearFullyLocked: boolean;
-	clone() : AnimPhysConstraintSetup;
-	static C(Other: UObject | any): AnimPhysConstraintSetup;
-}
-
-declare class AnimPhysPlanarLimit { 
-	DrivingBone: BoneReference;
-	PlaneTransform: Transform;
-	clone() : AnimPhysPlanarLimit;
-	static C(Other: UObject | any): AnimPhysPlanarLimit;
-}
-
-declare type ESphericalLimitType = 'Inner' | 'Outer';
-declare var ESphericalLimitType : { Inner:'Inner',Outer:'Outer', };
-declare class AnimPhysSphericalLimit { 
-	DrivingBone: BoneReference;
-	SphereLocalOffset: Vector;
-	LimitRadius: number;
-	LimitType: LimitType;
-	clone() : AnimPhysSphericalLimit;
-	static C(Other: UObject | any): AnimPhysSphericalLimit;
-}
-
-declare type AnimPhysCollisionType = 'CoM' | 'CustomSphere' | 'InnerSphere' | 'OuterSphere';
-declare var AnimPhysCollisionType : { CoM:'CoM',CustomSphere:'CustomSphere',InnerSphere:'InnerSphere',OuterSphere:'OuterSphere', };
-declare class AnimNode_AnimDynamics extends AnimNode_SkeletalControlBase { 
-	SimulationSpace: SimulationSpace;
-	RelativeSpaceBone: BoneReference;
-	bChain: boolean;
-	BoundBone: BoneReference;
-	ChainEnd: BoneReference;
-	BoxExtents: Vector;
-	LocalJointOffset: Vector;
-	GravityScale: number;
-	bLinearSpring: boolean;
-	bAngularSpring: boolean;
-	LinearSpringConstant: number;
-	AngularSpringConstant: number;
-	bEnableWind: boolean;
-	bWindWasEnabled: boolean;
-	WindScale: number;
-	bOverrideLinearDamping: boolean;
-	LinearDampingOverride: number;
-	bOverrideAngularDamping: boolean;
-	AngularDampingOverride: number;
-	bOverrideAngularBias: boolean;
-	AngularBiasOverride: number;
-	bDoUpdate: boolean;
-	bDoEval: boolean;
-	NumSolverIterationsPreUpdate: number;
-	NumSolverIterationsPostUpdate: number;
-	ConstraintSetup: AnimPhysConstraintSetup;
-	bUsePlanarLimit: boolean;
-	PlanarLimits: AnimPhysPlanarLimit[];
-	bUseSphericalLimits: boolean;
-	SphericalLimits: AnimPhysSphericalLimit[];
-	CollisionType: CollisionType;
-	SphereCollisionRadius: number;
-	ExternalForce: Vector;
-	clone() : AnimNode_AnimDynamics;
-	static C(Other: UObject | any): AnimNode_AnimDynamics;
-}
-
-declare class AnimGraphNode_AnimDynamics extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_AnimDynamics;
-	bPreviewLive: boolean;
-	bShowLinearLimits: boolean;
-	bShowAngularLimits: boolean;
-	bShowPlanarLimit: boolean;
-	bShowSphericalLimit: boolean;
-	bShowCollisionSpheres: boolean;
-	LastPreviewComponent: SkeletalMeshComponent;
-	static Load(ResourceName: string): AnimGraphNode_AnimDynamics;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_AnimDynamics;
-	static GetDefaultObject(): AnimGraphNode_AnimDynamics;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_AnimDynamics;
-	static C(Other: UObject | any): AnimGraphNode_AnimDynamics;
-}
-
-declare class AnimNode_ApplyAdditive extends AnimNode_Base { 
-	Base: PoseLink;
-	Additive: PoseLink;
-	Alpha: number;
-	AlphaScaleBias: InputScaleBias;
-	LODThreshold: number;
-	ActualAlpha: number;
-	clone() : AnimNode_ApplyAdditive;
-	static C(Other: UObject | any): AnimNode_ApplyAdditive;
-}
-
-declare class AnimGraphNode_ApplyAdditive extends AnimGraphNode_Base { 
-	UNode: AnimNode_ApplyAdditive;
-	static Load(ResourceName: string): AnimGraphNode_ApplyAdditive;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ApplyAdditive;
-	static GetDefaultObject(): AnimGraphNode_ApplyAdditive;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ApplyAdditive;
-	static C(Other: UObject | any): AnimGraphNode_ApplyAdditive;
-}
-
-declare class AnimNode_ApplyMeshSpaceAdditive extends AnimNode_Base { 
-	Base: PoseLink;
-	Additive: PoseLink;
-	Alpha: number;
-	AlphaScaleBias: InputScaleBias;
-	LODThreshold: number;
-	ActualAlpha: number;
-	clone() : AnimNode_ApplyMeshSpaceAdditive;
-	static C(Other: UObject | any): AnimNode_ApplyMeshSpaceAdditive;
-}
-
-declare class AnimGraphNode_ApplyMeshSpaceAdditive extends AnimGraphNode_Base { 
-	UNode: AnimNode_ApplyMeshSpaceAdditive;
-	static Load(ResourceName: string): AnimGraphNode_ApplyMeshSpaceAdditive;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ApplyMeshSpaceAdditive;
-	static GetDefaultObject(): AnimGraphNode_ApplyMeshSpaceAdditive;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ApplyMeshSpaceAdditive;
-	static C(Other: UObject | any): AnimGraphNode_ApplyMeshSpaceAdditive;
-}
-
-declare class BlendBoneByChannelEntry { 
-	SourceBone: BoneReference;
-	TargetBone: BoneReference;
-	bBlendTranslation: boolean;
-	bBlendRotation: boolean;
-	bBlendScale: boolean;
-	clone() : BlendBoneByChannelEntry;
-	static C(Other: UObject | any): BlendBoneByChannelEntry;
-}
-
-declare type EBoneControlSpace = 'BCS_WorldSpace' | 'BCS_ComponentSpace' | 'BCS_ParentBoneSpace' | 'BCS_BoneSpace';
-declare var EBoneControlSpace : { BCS_WorldSpace:'BCS_WorldSpace',BCS_ComponentSpace:'BCS_ComponentSpace',BCS_ParentBoneSpace:'BCS_ParentBoneSpace',BCS_BoneSpace:'BCS_BoneSpace', };
-declare class AnimNode_BlendBoneByChannel extends AnimNode_Base { 
-	A: PoseLink;
-	B: PoseLink;
-	Alpha: number;
-	AlphaScaleBias: InputScaleBias;
-	BoneDefinitions: BlendBoneByChannelEntry[];
-	TransformsSpace: EBoneControlSpace;
-	InternalBlendAlpha: number;
-	bBIsRelevant: boolean;
-	ValidBoneEntries: BlendBoneByChannelEntry[];
-	clone() : AnimNode_BlendBoneByChannel;
-	static C(Other: UObject | any): AnimNode_BlendBoneByChannel;
-}
-
-declare class AnimGraphNode_BlendBoneByChannel extends AnimGraphNode_Base { 
-	BlendNode: AnimNode_BlendBoneByChannel;
-	static Load(ResourceName: string): AnimGraphNode_BlendBoneByChannel;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendBoneByChannel;
-	static GetDefaultObject(): AnimGraphNode_BlendBoneByChannel;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendBoneByChannel;
-	static C(Other: UObject | any): AnimGraphNode_BlendBoneByChannel;
-}
-
-declare class AnimGraphNode_BlendListBase extends AnimGraphNode_Base { 
-	static Load(ResourceName: string): AnimGraphNode_BlendListBase;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListBase;
-	static GetDefaultObject(): AnimGraphNode_BlendListBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListBase;
-	static C(Other: UObject | any): AnimGraphNode_BlendListBase;
-}
-
-declare class AnimNode_BlendListBase extends AnimNode_Base { 
-	BlendPose: PoseLink[];
-	BlendTime: number[];
-	BlendType: BlendType;
-	CustomBlendCurve: CurveFloat;
-	BlendProfile: BlendProfile;
-	Blends: AlphaBlend[];
-	BlendWeights: number[];
-	RemainingBlendTimes: number[];
-	LastActiveChildIndex: number;
-	PerBoneSampleData: BlendSampleData[];
-	bResetChildOnActivation: boolean;
-	clone() : AnimNode_BlendListBase;
-	static C(Other: UObject | any): AnimNode_BlendListBase;
-}
-
-declare class AnimNode_BlendListByBool extends AnimNode_BlendListBase { 
-	bActiveValue: boolean;
-	clone() : AnimNode_BlendListByBool;
-	static C(Other: UObject | any): AnimNode_BlendListByBool;
-}
-
-declare class AnimGraphNode_BlendListByBool extends AnimGraphNode_BlendListBase { 
-	UNode: AnimNode_BlendListByBool;
-	static Load(ResourceName: string): AnimGraphNode_BlendListByBool;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListByBool;
-	static GetDefaultObject(): AnimGraphNode_BlendListByBool;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListByBool;
-	static C(Other: UObject | any): AnimGraphNode_BlendListByBool;
-}
-
-declare class AnimNode_BlendListByEnum extends AnimNode_BlendListBase { 
-	EnumToPoseIndex: number[];
-	ActiveEnumValue: number;
-	clone() : AnimNode_BlendListByEnum;
-	static C(Other: UObject | any): AnimNode_BlendListByEnum;
-}
-
-declare class AnimGraphNode_BlendListByEnum extends AnimGraphNode_BlendListBase { 
-	UNode: AnimNode_BlendListByEnum;
-	BoundEnum: Enum;
-	VisibleEnumEntries: string[];
-	static Load(ResourceName: string): AnimGraphNode_BlendListByEnum;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListByEnum;
-	static GetDefaultObject(): AnimGraphNode_BlendListByEnum;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListByEnum;
-	static C(Other: UObject | any): AnimGraphNode_BlendListByEnum;
-}
-
-declare class AnimNode_BlendListByInt extends AnimNode_BlendListBase { 
-	ActiveChildIndex: number;
-	clone() : AnimNode_BlendListByInt;
-	static C(Other: UObject | any): AnimNode_BlendListByInt;
-}
-
-declare class AnimGraphNode_BlendListByInt extends AnimGraphNode_BlendListBase { 
-	UNode: AnimNode_BlendListByInt;
-	static Load(ResourceName: string): AnimGraphNode_BlendListByInt;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListByInt;
-	static GetDefaultObject(): AnimGraphNode_BlendListByInt;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListByInt;
-	static C(Other: UObject | any): AnimGraphNode_BlendListByInt;
-}
-
-declare class AnimNode_BlendSpaceEvaluator extends AnimNode_BlendSpacePlayer { 
-	NormalizedTime: number;
-	clone() : AnimNode_BlendSpaceEvaluator;
-	static C(Other: UObject | any): AnimNode_BlendSpaceEvaluator;
-}
-
-declare class AnimGraphNode_BlendSpaceEvaluator extends AnimGraphNode_BlendSpaceBase { 
-	UNode: AnimNode_BlendSpaceEvaluator;
-	static Load(ResourceName: string): AnimGraphNode_BlendSpaceEvaluator;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpaceEvaluator;
-	static GetDefaultObject(): AnimGraphNode_BlendSpaceEvaluator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpaceEvaluator;
-	static C(Other: UObject | any): AnimGraphNode_BlendSpaceEvaluator;
-}
-
-declare class AnimGraphNode_BlendSpacePlayer extends AnimGraphNode_BlendSpaceBase { 
-	UNode: AnimNode_BlendSpacePlayer;
-	static Load(ResourceName: string): AnimGraphNode_BlendSpacePlayer;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpacePlayer;
-	static GetDefaultObject(): AnimGraphNode_BlendSpacePlayer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpacePlayer;
-	static C(Other: UObject | any): AnimGraphNode_BlendSpacePlayer;
-}
-
-declare type EComponentType = 'None' | 'TranslationX' | 'TranslationY' | 'TranslationZ' | 'RotationX' | 'RotationY' | 'RotationZ' | 'Scale' | 'ScaleX' | 'ScaleY' | 'ScaleZ';
-declare var EComponentType : { None:'None',TranslationX:'TranslationX',TranslationY:'TranslationY',TranslationZ:'TranslationZ',RotationX:'RotationX',RotationY:'RotationY',RotationZ:'RotationZ',Scale:'Scale',ScaleX:'ScaleX',ScaleY:'ScaleY',ScaleZ:'ScaleZ', };
-declare type EDrivenDestinationMode = 'Bone' | 'MorphTarget' | 'MaterialParameter';
-declare var EDrivenDestinationMode : { Bone:'Bone',MorphTarget:'MorphTarget',MaterialParameter:'MaterialParameter', };
-declare type EDrivenBoneModificationMode = 'AddToInput' | 'ReplaceComponent' | 'AddToRefPose';
-declare var EDrivenBoneModificationMode : { AddToInput:'AddToInput',ReplaceComponent:'ReplaceComponent',AddToRefPose:'AddToRefPose', };
-declare class AnimNode_BoneDrivenController extends AnimNode_SkeletalControlBase { 
-	SourceBone: BoneReference;
-	SourceComponent: EComponentType;
-	DrivingCurve: CurveFloat;
-	Multiplier: number;
-	bUseRange: boolean;
-	RangeMin: number;
-	RangeMax: number;
-	RemappedMin: number;
-	RemappedMax: number;
-	DestinationMode: DestinationMode;
-	ParameterName: string;
-	TargetBone: BoneReference;
-	TargetComponent: EComponentType;
-	bAffectTargetTranslationX: boolean;
-	bAffectTargetTranslationY: boolean;
-	bAffectTargetTranslationZ: boolean;
-	bAffectTargetRotationX: boolean;
-	bAffectTargetRotationY: boolean;
-	bAffectTargetRotationZ: boolean;
-	bAffectTargetScaleX: boolean;
-	bAffectTargetScaleY: boolean;
-	bAffectTargetScaleZ: boolean;
-	ModificationMode: ModificationMode;
-	clone() : AnimNode_BoneDrivenController;
-	static C(Other: UObject | any): AnimNode_BoneDrivenController;
-}
-
-declare class AnimGraphNode_BoneDrivenController extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_BoneDrivenController;
-	static Load(ResourceName: string): AnimGraphNode_BoneDrivenController;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BoneDrivenController;
-	static GetDefaultObject(): AnimGraphNode_BoneDrivenController;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BoneDrivenController;
-	static C(Other: UObject | any): AnimGraphNode_BoneDrivenController;
-}
-
-declare class AnimNode_ConvertComponentToLocalSpace extends AnimNode_Base { 
-	ComponentPose: ComponentSpacePoseLink;
-	clone() : AnimNode_ConvertComponentToLocalSpace;
-	static C(Other: UObject | any): AnimNode_ConvertComponentToLocalSpace;
-}
-
-declare class AnimGraphNode_ComponentToLocalSpace extends AnimGraphNode_Base { 
-	UNode: AnimNode_ConvertComponentToLocalSpace;
-	static Load(ResourceName: string): AnimGraphNode_ComponentToLocalSpace;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ComponentToLocalSpace;
-	static GetDefaultObject(): AnimGraphNode_ComponentToLocalSpace;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ComponentToLocalSpace;
-	static C(Other: UObject | any): AnimGraphNode_ComponentToLocalSpace;
-}
-
-declare type EConstraintOffsetOption = 'None' | 'Offset_RefPose';
-declare var EConstraintOffsetOption : { None:'None',Offset_RefPose:'Offset_RefPose', };
-declare type ETransformConstraintType = 'Translation' | 'Rotation' | 'Scale' | 'Parent';
-declare var ETransformConstraintType : { Translation:'Translation',Rotation:'Rotation',Scale:'Scale',Parent:'Parent', };
-declare class FilterOptionPerAxis { 
-	bX: boolean;
-	bY: boolean;
-	bZ: boolean;
-	clone() : FilterOptionPerAxis;
-	static C(Other: UObject | any): FilterOptionPerAxis;
-}
-
-declare class Constraint { 
-	TargetBone: BoneReference;
-	OffsetOption: OffsetOption;
-	TransformType: TransformType;
-	PerAxis: FilterOptionPerAxis;
-	clone() : Constraint;
-	static C(Other: UObject | any): Constraint;
-}
-
-declare class AnimNode_Constraint extends AnimNode_SkeletalControlBase { 
-	BoneToModify: BoneReference;
-	ConstraintSetup: Constraint[];
-	ConstraintWeights: number[];
-	clone() : AnimNode_Constraint;
-	static C(Other: UObject | any): AnimNode_Constraint;
-}
-
-declare class AnimGraphNode_Constraint extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_Constraint;
-	static Load(ResourceName: string): AnimGraphNode_Constraint;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Constraint;
-	static GetDefaultObject(): AnimGraphNode_Constraint;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Constraint;
-	static C(Other: UObject | any): AnimGraphNode_Constraint;
-}
-
-declare class AnimNode_CopyBone extends AnimNode_SkeletalControlBase { 
-	SourceBone: BoneReference;
-	TargetBone: BoneReference;
-	bCopyTranslation: boolean;
-	bCopyRotation: boolean;
-	bCopyScale: boolean;
-	ControlSpace: EBoneControlSpace;
-	clone() : AnimNode_CopyBone;
-	static C(Other: UObject | any): AnimNode_CopyBone;
-}
-
-declare class AnimGraphNode_CopyBone extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_CopyBone;
-	static Load(ResourceName: string): AnimGraphNode_CopyBone;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CopyBone;
-	static GetDefaultObject(): AnimGraphNode_CopyBone;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CopyBone;
-	static C(Other: UObject | any): AnimGraphNode_CopyBone;
-}
-
-declare type CopyBoneDeltaMode = 'Accumulate' | 'Copy';
-declare var CopyBoneDeltaMode : { Accumulate:'Accumulate',Copy:'Copy', };
-declare class AnimNode_CopyBoneDelta extends AnimNode_SkeletalControlBase { 
-	SourceBone: BoneReference;
-	TargetBone: BoneReference;
-	bCopyTranslation: boolean;
-	bCopyRotation: boolean;
-	bCopyScale: boolean;
-	CopyMode: CopyMode;
-	TranslationMultiplier: number;
-	RotationMultiplier: number;
-	ScaleMultiplier: number;
-	clone() : AnimNode_CopyBoneDelta;
-	static C(Other: UObject | any): AnimNode_CopyBoneDelta;
-}
-
-declare class AnimGraphNode_CopyBoneDelta extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_CopyBoneDelta;
-	static Load(ResourceName: string): AnimGraphNode_CopyBoneDelta;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CopyBoneDelta;
-	static GetDefaultObject(): AnimGraphNode_CopyBoneDelta;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CopyBoneDelta;
-	static C(Other: UObject | any): AnimGraphNode_CopyBoneDelta;
-}
-
-declare class AnimNode_CopyPoseFromMesh extends AnimNode_Base { 
-	SourceMeshComponent: any;
-	bUseAttachedParent: boolean;
-	clone() : AnimNode_CopyPoseFromMesh;
-	static C(Other: UObject | any): AnimNode_CopyPoseFromMesh;
-}
-
-declare class AnimGraphNode_CopyPoseFromMesh extends AnimGraphNode_Base { 
-	UNode: AnimNode_CopyPoseFromMesh;
-	static Load(ResourceName: string): AnimGraphNode_CopyPoseFromMesh;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CopyPoseFromMesh;
-	static GetDefaultObject(): AnimGraphNode_CopyPoseFromMesh;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CopyPoseFromMesh;
-	static C(Other: UObject | any): AnimGraphNode_CopyPoseFromMesh;
-}
-
-declare class AnimNode_CurveSource extends AnimNode_Base { 
-	SourcePose: PoseLink;
-	SourceBinding: string;
-	Alpha: number;
-	CurveSource: any;
-	clone() : AnimNode_CurveSource;
-	static C(Other: UObject | any): AnimNode_CurveSource;
-}
-
-declare class AnimGraphNode_CurveSource extends AnimGraphNode_Base { 
-	UNode: AnimNode_CurveSource;
-	static Load(ResourceName: string): AnimGraphNode_CurveSource;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CurveSource;
-	static GetDefaultObject(): AnimGraphNode_CurveSource;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CurveSource;
-	static C(Other: UObject | any): AnimGraphNode_CurveSource;
-}
-
-declare type EBoneRotationSource = 'BRS_KeepComponentSpaceRotation' | 'BRS_KeepLocalSpaceRotation' | 'BRS_CopyFromTarget';
-declare var EBoneRotationSource : { BRS_KeepComponentSpaceRotation:'BRS_KeepComponentSpaceRotation',BRS_KeepLocalSpaceRotation:'BRS_KeepLocalSpaceRotation',BRS_CopyFromTarget:'BRS_CopyFromTarget', };
-declare class AnimNode_Fabrik extends AnimNode_SkeletalControlBase { 
-	EffectorTransform: Transform;
-	EffectorTransformSpace: EBoneControlSpace;
-	EffectorTransformBone: BoneReference;
-	EffectorRotationSource: EBoneRotationSource;
-	TipBone: BoneReference;
-	RootBone: BoneReference;
-	Precision: number;
-	MaxIterations: number;
-	bEnableDebugDraw: boolean;
-	clone() : AnimNode_Fabrik;
-	static C(Other: UObject | any): AnimNode_Fabrik;
-}
-
-declare class AnimGraphNode_Fabrik extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_Fabrik;
-	static Load(ResourceName: string): AnimGraphNode_Fabrik;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Fabrik;
-	static GetDefaultObject(): AnimGraphNode_Fabrik;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Fabrik;
-	static C(Other: UObject | any): AnimGraphNode_Fabrik;
-}
-
-declare class AnimNode_HandIKRetargeting extends AnimNode_SkeletalControlBase { 
-	RightHandFK: BoneReference;
-	LeftHandFK: BoneReference;
-	RightHandIK: BoneReference;
-	LeftHandIK: BoneReference;
-	IKBonesToMove: BoneReference[];
-	HandFKWeight: number;
-	clone() : AnimNode_HandIKRetargeting;
-	static C(Other: UObject | any): AnimNode_HandIKRetargeting;
-}
-
-declare class AnimGraphNode_HandIKRetargeting extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_HandIKRetargeting;
-	static Load(ResourceName: string): AnimGraphNode_HandIKRetargeting;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_HandIKRetargeting;
-	static GetDefaultObject(): AnimGraphNode_HandIKRetargeting;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_HandIKRetargeting;
-	static C(Other: UObject | any): AnimGraphNode_HandIKRetargeting;
-}
-
-declare type ERefPoseType = 'EIT_LocalSpace' | 'EIT_Additive';
-declare var ERefPoseType : { EIT_LocalSpace:'EIT_LocalSpace',EIT_Additive:'EIT_Additive', };
-declare class AnimNode_RefPose extends AnimNode_Base { 
-	RefPoseType: ERefPoseType;
-	clone() : AnimNode_RefPose;
-	static C(Other: UObject | any): AnimNode_RefPose;
-}
-
-declare class AnimGraphNode_RefPoseBase extends AnimGraphNode_Base { 
-	UNode: AnimNode_RefPose;
-	static Load(ResourceName: string): AnimGraphNode_RefPoseBase;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RefPoseBase;
-	static GetDefaultObject(): AnimGraphNode_RefPoseBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RefPoseBase;
-	static C(Other: UObject | any): AnimGraphNode_RefPoseBase;
-}
-
-declare class AnimGraphNode_IdentityPose extends AnimGraphNode_RefPoseBase { 
-	static Load(ResourceName: string): AnimGraphNode_IdentityPose;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_IdentityPose;
-	static GetDefaultObject(): AnimGraphNode_IdentityPose;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_IdentityPose;
-	static C(Other: UObject | any): AnimGraphNode_IdentityPose;
-}
-
-declare class BranchFilter { 
-	BoneName: string;
-	BlendDepth: number;
-	clone() : BranchFilter;
-	static C(Other: UObject | any): BranchFilter;
-}
-
-declare class InputBlendPose { 
-	BranchFilters: BranchFilter[];
-	clone() : InputBlendPose;
-	static C(Other: UObject | any): InputBlendPose;
-}
-
-declare type ECurveBlendOption = 'MaxWeight' | 'NormalizeByWeight' | 'BlendByWeight';
-declare var ECurveBlendOption : { MaxWeight:'MaxWeight',NormalizeByWeight:'NormalizeByWeight',BlendByWeight:'BlendByWeight', };
-declare class PerBoneBlendWeight { 
-	SourceIndex: number;
-	BlendWeight: number;
-	clone() : PerBoneBlendWeight;
-	static C(Other: UObject | any): PerBoneBlendWeight;
-}
-
-declare class AnimNode_LayeredBoneBlend extends AnimNode_Base { 
-	BasePose: PoseLink;
-	BlendPoses: PoseLink[];
-	LayerSetup: InputBlendPose[];
-	BlendWeights: number[];
-	bMeshSpaceRotationBlend: boolean;
-	CurveBlendOption: ECurveBlendOption;
-	bBlendRootMotionBasedOnRootBone: boolean;
-	bHasRelevantPoses: boolean;
-	PerBoneBlendWeights: PerBoneBlendWeight[];
-	SkeletonGuid: Guid;
-	VirtualBoneGuid: Guid;
-	clone() : AnimNode_LayeredBoneBlend;
-	static C(Other: UObject | any): AnimNode_LayeredBoneBlend;
-}
-
-declare class AnimGraphNode_LayeredBoneBlend extends AnimGraphNode_BlendListBase { 
-	UNode: AnimNode_LayeredBoneBlend;
-	static Load(ResourceName: string): AnimGraphNode_LayeredBoneBlend;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LayeredBoneBlend;
-	static GetDefaultObject(): AnimGraphNode_LayeredBoneBlend;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LayeredBoneBlend;
-	static C(Other: UObject | any): AnimGraphNode_LayeredBoneBlend;
-}
-
-declare class AnimLegIKDefinition { 
-	IKFootBone: BoneReference;
-	FKFootBone: BoneReference;
-	NumBonesInLimb: number;
-	FootBoneForwardAxis: EAxis;
-	bEnableRotationLimit: boolean;
-	MinRotationAngle: number;
-	bEnableKneeTwistCorrection: boolean;
-	clone() : AnimLegIKDefinition;
-	static C(Other: UObject | any): AnimLegIKDefinition;
-}
-
-declare class AnimLegIKData { 
-	clone() : AnimLegIKData;
-	static C(Other: UObject | any): AnimLegIKData;
-}
-
-declare class AnimNode_LegIK extends AnimNode_SkeletalControlBase { 
-	ReachPrecision: number;
-	MaxIterations: number;
-	LegsDefinition: AnimLegIKDefinition[];
-	LegsData: AnimLegIKData[];
-	clone() : AnimNode_LegIK;
-	static C(Other: UObject | any): AnimNode_LegIK;
-}
-
-declare class AnimGraphNode_LegIK extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_LegIK;
-	static Load(ResourceName: string): AnimGraphNode_LegIK;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LegIK;
-	static GetDefaultObject(): AnimGraphNode_LegIK;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LegIK;
-	static C(Other: UObject | any): AnimGraphNode_LegIK;
-}
-
-declare class AnimGraphNode_LocalRefPose extends AnimGraphNode_RefPoseBase { 
-	static Load(ResourceName: string): AnimGraphNode_LocalRefPose;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LocalRefPose;
-	static GetDefaultObject(): AnimGraphNode_LocalRefPose;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LocalRefPose;
-	static C(Other: UObject | any): AnimGraphNode_LocalRefPose;
-}
-
-declare class AnimNode_ConvertLocalToComponentSpace extends AnimNode_Base { 
-	LocalPose: PoseLink;
-	clone() : AnimNode_ConvertLocalToComponentSpace;
-	static C(Other: UObject | any): AnimNode_ConvertLocalToComponentSpace;
-}
-
-declare class AnimGraphNode_LocalToComponentSpace extends AnimGraphNode_Base { 
-	UNode: AnimNode_ConvertLocalToComponentSpace;
-	static Load(ResourceName: string): AnimGraphNode_LocalToComponentSpace;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LocalToComponentSpace;
-	static GetDefaultObject(): AnimGraphNode_LocalToComponentSpace;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LocalToComponentSpace;
-	static C(Other: UObject | any): AnimGraphNode_LocalToComponentSpace;
-}
-
-declare class SocketReference { 
-	SocketName: string;
-	clone() : SocketReference;
-	static C(Other: UObject | any): SocketReference;
-}
-
-declare class TargetReference { 
-	bUseSocket: boolean;
-	BoneReference: BoneReference;
-	SocketReference: SocketReference;
-	clone() : TargetReference;
-	static C(Other: UObject | any): TargetReference;
-}
-
-declare type EAxisOption = 'X' | 'Y' | 'Z' | 'X_Neg' | 'Y_Neg' | 'Z_Neg' | 'Custom';
-declare var EAxisOption : { X:'X',Y:'Y',Z:'Z',X_Neg:'X_Neg',Y_Neg:'Y_Neg',Z_Neg:'Z_Neg',Custom:'Custom', };
-declare class Axis { 
-	Axis: Vector;
-	bInLocalSpace: boolean;
-	clone() : Axis;
-	static C(Other: UObject | any): Axis;
-}
-
-declare type EInterpolationBlend = 'Linear' | 'Cubic' | 'Sinusoidal' | 'EaseInOutExponent2' | 'EaseInOutExponent3' | 'EaseInOutExponent4' | 'EaseInOutExponent5' | 'MAX';
-declare var EInterpolationBlend : { Linear:'Linear',Cubic:'Cubic',Sinusoidal:'Sinusoidal',EaseInOutExponent2:'EaseInOutExponent2',EaseInOutExponent3:'EaseInOutExponent3',EaseInOutExponent4:'EaseInOutExponent4',EaseInOutExponent5:'EaseInOutExponent5',MAX:'MAX', };
-declare class AnimNode_LookAt extends AnimNode_SkeletalControlBase { 
-	BoneToModify: BoneReference;
-	LookAtBone: BoneReference;
-	LookAtSocket: string;
-	LookAtTarget: TargetReference;
-	LookAtLocation: Vector;
-	LookAtAxis: EAxisOption;
-	CustomLookAtAxis: Vector;
-	LookAt_Axis: Axis;
-	bUseLookUpAxis: boolean;
-	LookUpAxis: EAxisOption;
-	CustomLookUpAxis: Vector;
-	LookUp_Axis: Axis;
-	LookAtClamp: number;
-	InterpolationType: EInterpolationBlend;
-	InterpolationTime: number;
-	InterpolationTriggerThreashold: number;
-	clone() : AnimNode_LookAt;
-	static C(Other: UObject | any): AnimNode_LookAt;
-}
-
-declare class AnimGraphNode_LookAt extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_LookAt;
-	static Load(ResourceName: string): AnimGraphNode_LookAt;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LookAt;
-	static GetDefaultObject(): AnimGraphNode_LookAt;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LookAt;
-	static C(Other: UObject | any): AnimGraphNode_LookAt;
-}
-
-declare class AnimNode_MakeDynamicAdditive extends AnimNode_Base { 
-	Base: PoseLink;
-	Additive: PoseLink;
-	bMeshSpaceAdditive: boolean;
-	clone() : AnimNode_MakeDynamicAdditive;
-	static C(Other: UObject | any): AnimNode_MakeDynamicAdditive;
-}
-
-declare class AnimGraphNode_MakeDynamicAdditive extends AnimGraphNode_Base { 
-	UNode: AnimNode_MakeDynamicAdditive;
-	static Load(ResourceName: string): AnimGraphNode_MakeDynamicAdditive;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_MakeDynamicAdditive;
-	static GetDefaultObject(): AnimGraphNode_MakeDynamicAdditive;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_MakeDynamicAdditive;
-	static C(Other: UObject | any): AnimGraphNode_MakeDynamicAdditive;
-}
-
-declare class AnimNode_MeshSpaceRefPose extends AnimNode_Base { 
-	clone() : AnimNode_MeshSpaceRefPose;
-	static C(Other: UObject | any): AnimNode_MeshSpaceRefPose;
-}
-
-declare class AnimGraphNode_MeshRefPose extends AnimGraphNode_Base { 
-	UNode: AnimNode_MeshSpaceRefPose;
-	static Load(ResourceName: string): AnimGraphNode_MeshRefPose;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_MeshRefPose;
-	static GetDefaultObject(): AnimGraphNode_MeshRefPose;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_MeshRefPose;
-	static C(Other: UObject | any): AnimGraphNode_MeshRefPose;
-}
-
-declare type EBoneModificationMode = 'BMM_Ignore' | 'BMM_Replace' | 'BMM_Additive';
-declare var EBoneModificationMode : { BMM_Ignore:'BMM_Ignore',BMM_Replace:'BMM_Replace',BMM_Additive:'BMM_Additive', };
-declare class AnimNode_ModifyBone extends AnimNode_SkeletalControlBase { 
-	BoneToModify: BoneReference;
-	Translation: Vector;
-	Rotation: Rotator;
-	Scale: Vector;
-	TranslationMode: EBoneModificationMode;
-	RotationMode: EBoneModificationMode;
-	ScaleMode: EBoneModificationMode;
-	TranslationSpace: EBoneControlSpace;
-	RotationSpace: EBoneControlSpace;
-	ScaleSpace: EBoneControlSpace;
-	clone() : AnimNode_ModifyBone;
-	static C(Other: UObject | any): AnimNode_ModifyBone;
-}
-
-declare class AnimGraphNode_ModifyBone extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_ModifyBone;
-	static Load(ResourceName: string): AnimGraphNode_ModifyBone;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ModifyBone;
-	static GetDefaultObject(): AnimGraphNode_ModifyBone;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ModifyBone;
-	static C(Other: UObject | any): AnimGraphNode_ModifyBone;
-}
-
-declare type EModifyCurveApplyMode = 'Add' | 'Scale' | 'Blend';
-declare var EModifyCurveApplyMode : { Add:'Add',Scale:'Scale',Blend:'Blend', };
-declare class AnimNode_ModifyCurve extends AnimNode_Base { 
-	SourcePose: PoseLink;
-	ApplyMode: ApplyMode;
-	CurveValues: number[];
-	CurveNames: string[];
-	Alpha: number;
-	clone() : AnimNode_ModifyCurve;
-	static C(Other: UObject | any): AnimNode_ModifyCurve;
-}
-
-declare class AnimGraphNode_ModifyCurve extends AnimGraphNode_Base { 
-	UNode: AnimNode_ModifyCurve;
-	static Load(ResourceName: string): AnimGraphNode_ModifyCurve;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ModifyCurve;
-	static GetDefaultObject(): AnimGraphNode_ModifyCurve;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ModifyCurve;
-	static C(Other: UObject | any): AnimGraphNode_ModifyCurve;
-}
-
-declare class AnimNode_MultiWayBlend extends AnimNode_Base { 
-	Poses: PoseLink[];
-	DesiredAlphas: number[];
-	bAdditiveNode: boolean;
-	bNormalizeAlpha: boolean;
-	AlphaScaleBias: InputScaleBias;
-	clone() : AnimNode_MultiWayBlend;
-	static C(Other: UObject | any): AnimNode_MultiWayBlend;
-}
-
-declare class AnimGraphNode_MultiWayBlend extends AnimGraphNode_Base { 
-	UNode: AnimNode_MultiWayBlend;
-	static Load(ResourceName: string): AnimGraphNode_MultiWayBlend;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_MultiWayBlend;
-	static GetDefaultObject(): AnimGraphNode_MultiWayBlend;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_MultiWayBlend;
-	static C(Other: UObject | any): AnimGraphNode_MultiWayBlend;
-}
-
-declare class AnimNode_ObserveBone extends AnimNode_SkeletalControlBase { 
-	BoneToObserve: BoneReference;
-	DisplaySpace: EBoneControlSpace;
-	bRelativeToRefPose: boolean;
-	Translation: Vector;
-	Rotation: Rotator;
-	Scale: Vector;
-	clone() : AnimNode_ObserveBone;
-	static C(Other: UObject | any): AnimNode_ObserveBone;
-}
-
-declare class AnimGraphNode_ObserveBone extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_ObserveBone;
-	static Load(ResourceName: string): AnimGraphNode_ObserveBone;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ObserveBone;
-	static GetDefaultObject(): AnimGraphNode_ObserveBone;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ObserveBone;
-	static C(Other: UObject | any): AnimGraphNode_ObserveBone;
-}
-
-declare class AnimGraphNode_PoseHandler extends AnimGraphNode_AssetPlayerBase { 
-	static Load(ResourceName: string): AnimGraphNode_PoseHandler;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseHandler;
-	static GetDefaultObject(): AnimGraphNode_PoseHandler;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseHandler;
-	static C(Other: UObject | any): AnimGraphNode_PoseHandler;
-}
-
-declare class AnimNode_PoseHandler extends AnimNode_AssetPlayerBase { 
-	PoseAsset: PoseAsset;
-	clone() : AnimNode_PoseHandler;
-	static C(Other: UObject | any): AnimNode_PoseHandler;
-}
-
-declare class AnimNode_PoseBlendNode extends AnimNode_PoseHandler { 
-	SourcePose: PoseLink;
-	BlendOption: BlendOption;
-	CustomCurve: CurveFloat;
-	clone() : AnimNode_PoseBlendNode;
-	static C(Other: UObject | any): AnimNode_PoseBlendNode;
-}
-
-declare class AnimGraphNode_PoseBlendNode extends AnimGraphNode_PoseHandler { 
-	UNode: AnimNode_PoseBlendNode;
-	static Load(ResourceName: string): AnimGraphNode_PoseBlendNode;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseBlendNode;
-	static GetDefaultObject(): AnimGraphNode_PoseBlendNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseBlendNode;
-	static C(Other: UObject | any): AnimGraphNode_PoseBlendNode;
-}
-
-declare class AnimNode_PoseByName extends AnimNode_PoseHandler { 
-	PoseName: string;
-	PoseWeight: number;
-	clone() : AnimNode_PoseByName;
-	static C(Other: UObject | any): AnimNode_PoseByName;
-}
-
-declare class AnimGraphNode_PoseByName extends AnimGraphNode_AssetPlayerBase { 
-	UNode: AnimNode_PoseByName;
-	static Load(ResourceName: string): AnimGraphNode_PoseByName;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseByName;
-	static GetDefaultObject(): AnimGraphNode_PoseByName;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseByName;
-	static C(Other: UObject | any): AnimGraphNode_PoseByName;
-}
-
-declare type ERBFFunctionType = 'Gaussian' | 'Exponential' | 'Linear' | 'Cubic' | 'Quintic';
-declare var ERBFFunctionType : { Gaussian:'Gaussian',Exponential:'Exponential',Linear:'Linear',Cubic:'Cubic',Quintic:'Quintic', };
-declare type ERBFDistanceMethod = 'Euclidean' | 'Quaternion' | 'SwingAngle';
-declare var ERBFDistanceMethod : { Euclidean:'Euclidean',Quaternion:'Quaternion',SwingAngle:'SwingAngle', };
-declare type EBoneAxis = 'BA_X' | 'BA_Y' | 'BA_Z';
-declare var EBoneAxis : { BA_X:'BA_X',BA_Y:'BA_Y',BA_Z:'BA_Z', };
diff --git a/Examples/Content/Scripts/typings/_part_1_ue.d.ts b/Examples/Content/Scripts/typings/_part_1_ue.d.ts
index 2bae4f6..2bd8c98 100644
--- a/Examples/Content/Scripts/typings/_part_1_ue.d.ts
+++ b/Examples/Content/Scripts/typings/_part_1_ue.d.ts
@@ -1,2321 +1,5748 @@
-declare class RBFParams { 
-	TargetDimensions: number;
-	Radius: number;
-	UFunction: UFunction;
-	DistanceMethod: DistanceMethod;
-	TwistAxis: EBoneAxis;
-	WeightThreshold: number;
-	clone() : RBFParams;
-	static C(Other: UObject | any): RBFParams;
-}
-
-declare type EPoseDriverSource = 'Rotation' | 'Translation';
-declare var EPoseDriverSource : { Rotation:'Rotation',Translation:'Translation', };
-declare type EPoseDriverOutput = 'DrivePoses' | 'DriveCurves';
-declare var EPoseDriverOutput : { DrivePoses:'DrivePoses',DriveCurves:'DriveCurves', };
-declare class PoseDriverTransform { 
-	TargetTranslation: Vector;
-	TargetRotation: Rotator;
-	clone() : PoseDriverTransform;
-	static C(Other: UObject | any): PoseDriverTransform;
-}
-
-declare class PoseDriverTarget { 
-	BoneTransforms: PoseDriverTransform[];
-	TargetRotation: Rotator;
-	TargetScale: number;
-	bApplyCustomCurve: boolean;
-	CustomCurve: RichCurve;
-	DrivenName: string;
-	clone() : PoseDriverTarget;
-	static C(Other: UObject | any): PoseDriverTarget;
+declare class K2Node_CreateDragDropOperation extends K2Node_ConstructObjectFromClass { 
+	static Load(ResourceName: string): K2Node_CreateDragDropOperation;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CreateDragDropOperation;
+	static GetDefaultObject(): K2Node_CreateDragDropOperation;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CreateDragDropOperation;
+	static C(Other: UObject | any): K2Node_CreateDragDropOperation;
 }
 
-declare type EPoseDriverType = 'SwingAndTwist' | 'SwingOnly' | 'Translation';
-declare var EPoseDriverType : { SwingAndTwist:'SwingAndTwist',SwingOnly:'SwingOnly',Translation:'Translation', };
-declare class AnimNode_PoseDriver extends AnimNode_PoseHandler { 
-	SourcePose: PoseLink;
-	SourceBones: BoneReference[];
-	bOnlyDriveSelectedBones: boolean;
-	OnlyDriveBones: BoneReference[];
-	EvalSpaceBone: BoneReference;
-	RBFParams: RBFParams;
-	DriveSource: DriveSource;
-	DriveOutput: DriveOutput;
-	PoseTargets: PoseDriverTarget[];
-	SourceBone: BoneReference;
-	TwistAxis: EBoneAxis;
-	Type: Type;
-	RadialScaling: number;
-	clone() : AnimNode_PoseDriver;
-	static C(Other: UObject | any): AnimNode_PoseDriver;
+declare class K2Node_CreateWidget extends K2Node_ConstructObjectFromClass { 
+	static Load(ResourceName: string): K2Node_CreateWidget;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CreateWidget;
+	static GetDefaultObject(): K2Node_CreateWidget;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CreateWidget;
+	static C(Other: UObject | any): K2Node_CreateWidget;
 }
 
-declare class AnimGraphNode_PoseDriver extends AnimGraphNode_PoseHandler { 
-	UNode: AnimNode_PoseDriver;
-	LastPreviewComponent: SkeletalMeshComponent;
-	static Load(ResourceName: string): AnimGraphNode_PoseDriver;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseDriver;
-	static GetDefaultObject(): AnimGraphNode_PoseDriver;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseDriver;
-	static C(Other: UObject | any): AnimGraphNode_PoseDriver;
+declare class AutomatedAssetImportData extends UObject { 
+	GroupName: string;
+	Filenames: string[];
+	DestinationPath: string;
+	FactoryName: string;
+	bReplaceExisting: boolean;
+	bSkipReadOnly: boolean;
+	Factory: Factory;
+	LevelToLoad: string;
+	static Load(ResourceName: string): AutomatedAssetImportData;
+	static Find(Outer: UObject, ResourceName: string): AutomatedAssetImportData;
+	static GetDefaultObject(): AutomatedAssetImportData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AutomatedAssetImportData;
+	static C(Other: UObject | any): AutomatedAssetImportData;
+}
+
+declare class AssetImportTask extends UObject { 
+	Filename: string;
+	DestinationPath: string;
+	DestinationName: string;
+	bReplaceExisting: boolean;
+	bAutomated: boolean;
+	bSave: boolean;
+	Options: UObject;
+	ImportedObjectPaths: string[];
+	Result: UObject;
+	static Load(ResourceName: string): AssetImportTask;
+	static Find(Outer: UObject, ResourceName: string): AssetImportTask;
+	static GetDefaultObject(): AssetImportTask;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetImportTask;
+	static C(Other: UObject | any): AssetImportTask;
+}
+
+declare class Factory extends UObject { 
+	bCreateNew: boolean;
+	SupportedClass: UnrealEngineClass;
+	ContextClass: UnrealEngineClass;
+	Formats: string[];
+	bEditAfterNew: boolean;
+	bEditorImport: boolean;
+	bText: boolean;
+	ImportPriority: number;
+	AutomatedImportData: AutomatedAssetImportData;
+	AssetImportTask: AssetImportTask;
+	OverwriteYesOrNoToAllState: number;
+	static Load(ResourceName: string): Factory;
+	static Find(Outer: UObject, ResourceName: string): Factory;
+	static GetDefaultObject(): Factory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Factory;
+	ScriptFactoryCreateFile(InTask: AssetImportTask): boolean;
+	ScriptFactoryCanImport(Filename: string): boolean;
+	static C(Other: UObject | any): Factory;
+}
+
+declare class SlateVectorArtDataFactory extends Factory { 
+	static Load(ResourceName: string): SlateVectorArtDataFactory;
+	static Find(Outer: UObject, ResourceName: string): SlateVectorArtDataFactory;
+	static GetDefaultObject(): SlateVectorArtDataFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateVectorArtDataFactory;
+	static C(Other: UObject | any): SlateVectorArtDataFactory;
+}
+
+declare class DeveloperSettings extends UObject { 
+	static Load(ResourceName: string): DeveloperSettings;
+	static Find(Outer: UObject, ResourceName: string): DeveloperSettings;
+	static GetDefaultObject(): DeveloperSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DeveloperSettings;
+	static C(Other: UObject | any): DeveloperSettings;
+}
+
+declare type EPropertyBindingPermissionLevel = 'Allow' | 'PreventAndWarn' | 'PreventAndError' | 'EPropertyBindingPermissionLevel_MAX';
+declare var EPropertyBindingPermissionLevel : { Allow:'Allow',PreventAndWarn:'PreventAndWarn',PreventAndError:'PreventAndError',EPropertyBindingPermissionLevel_MAX:'EPropertyBindingPermissionLevel_MAX', };
+declare class WidgetCompilerOptions { 
+	bCookSlowConstructionWidgetTree: boolean;
+	bWidgetSupportsDynamicCreation: boolean;
+	bAllowBlueprintTick: boolean;
+	bAllowBlueprintPaint: boolean;
+	PropertyBindingRule: EPropertyBindingPermissionLevel;
+	Rules: Class[];
+	clone() : WidgetCompilerOptions;
+	static C(Other: UObject | any): WidgetCompilerOptions;
 }
 
-declare type ESnapshotSourceMode = 'NamedSnapshot' | 'SnapshotPin';
-declare var ESnapshotSourceMode : { NamedSnapshot:'NamedSnapshot',SnapshotPin:'SnapshotPin', };
-declare class AnimNode_PoseSnapshot extends AnimNode_Base { 
-	Mode: Mode;
-	SnapshotName: string;
-	Snapshot: PoseSnapshot;
-	clone() : AnimNode_PoseSnapshot;
-	static C(Other: UObject | any): AnimNode_PoseSnapshot;
+declare class BaseWidgetBlueprint extends Blueprint { 
+	WidgetTree: WidgetTree;
+	static Load(ResourceName: string): BaseWidgetBlueprint;
+	static Find(Outer: UObject, ResourceName: string): BaseWidgetBlueprint;
+	static GetDefaultObject(): BaseWidgetBlueprint;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseWidgetBlueprint;
+	static C(Other: UObject | any): BaseWidgetBlueprint;
 }
 
-declare class AnimGraphNode_PoseSnapshot extends AnimGraphNode_Base { 
-	UNode: AnimNode_PoseSnapshot;
-	static Load(ResourceName: string): AnimGraphNode_PoseSnapshot;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseSnapshot;
-	static GetDefaultObject(): AnimGraphNode_PoseSnapshot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseSnapshot;
-	static C(Other: UObject | any): AnimGraphNode_PoseSnapshot;
+declare class EditorPropertyPathSegment { 
+	struct: Struct;
+	MemberName: string;
+	MemberGuid: Guid;
+	IsProperty: boolean;
+	clone() : EditorPropertyPathSegment;
+	static C(Other: UObject | any): EditorPropertyPathSegment;
 }
 
-declare class RandomPlayerSequenceEntry { 
-	Sequence: AnimSequence;
-	ChanceToPlay: number;
-	MinLoopCount: number;
-	MaxLoopCount: number;
-	MinPlayRate: number;
-	MaxPlayRate: number;
-	BlendIn: AlphaBlend;
-	clone() : RandomPlayerSequenceEntry;
-	static C(Other: UObject | any): RandomPlayerSequenceEntry;
+declare class EditorPropertyPath { 
+	Segments: EditorPropertyPathSegment[];
+	clone() : EditorPropertyPath;
+	static C(Other: UObject | any): EditorPropertyPath;
 }
 
-declare class AnimNode_RandomPlayer extends AnimNode_Base { 
-	bShuffleMode: boolean;
-	Entries: RandomPlayerSequenceEntry[];
-	clone() : AnimNode_RandomPlayer;
-	static C(Other: UObject | any): AnimNode_RandomPlayer;
+declare type EBindingKind = 'Function' | 'Property' | 'EBindingKind_MAX';
+declare var EBindingKind : { Function:'Function',Property:'Property',EBindingKind_MAX:'EBindingKind_MAX', };
+declare class DelegateEditorBinding { 
+	ObjectName: string;
+	PropertyName: string;
+	FunctionName: string;
+	SourceProperty: string;
+	SourcePath: EditorPropertyPath;
+	MemberGuid: Guid;
+	Kind: EBindingKind;
+	clone() : DelegateEditorBinding;
+	static C(Other: UObject | any): DelegateEditorBinding;
 }
 
-declare class AnimGraphNode_RandomPlayer extends AnimGraphNode_Base { 
-	UNode: AnimNode_RandomPlayer;
-	static Load(ResourceName: string): AnimGraphNode_RandomPlayer;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RandomPlayer;
-	static GetDefaultObject(): AnimGraphNode_RandomPlayer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RandomPlayer;
-	static C(Other: UObject | any): AnimGraphNode_RandomPlayer;
+declare class WidgetAnimation_DEPRECATED { 
+	MovieScene: MovieScene;
+	AnimationBindings: WidgetAnimationBinding[];
+	clone() : WidgetAnimation_DEPRECATED;
+	static C(Other: UObject | any): WidgetAnimation_DEPRECATED;
+}
+
+declare type EWidgetSupportsDynamicCreation = 'Default' | 'Yes' | 'No' | 'EWidgetSupportsDynamicCreation_MAX';
+declare var EWidgetSupportsDynamicCreation : { Default:'Default',Yes:'Yes',No:'No',EWidgetSupportsDynamicCreation_MAX:'EWidgetSupportsDynamicCreation_MAX', };
+declare type EWidgetCompileTimeTickPrediction = 'WontTick' | 'OnDemand' | 'WillTick' | 'EWidgetCompileTimeTickPrediction_MAX';
+declare var EWidgetCompileTimeTickPrediction : { WontTick:'WontTick',OnDemand:'OnDemand',WillTick:'WillTick',EWidgetCompileTimeTickPrediction_MAX:'EWidgetCompileTimeTickPrediction_MAX', };
+declare class WidgetBlueprint extends BaseWidgetBlueprint { 
+	Bindings: DelegateEditorBinding[];
+	AnimationData: WidgetAnimation_DEPRECATED[];
+	Animations: WidgetAnimation[];
+	PaletteCategory: string;
+	bForceSlowConstructionPath: boolean;
+	SupportDynamicCreation: EWidgetSupportsDynamicCreation;
+	InclusiveWidgets: number;
+	TickFrequency: EWidgetTickFrequency;
+	TickPrediction: EWidgetCompileTimeTickPrediction;
+	TickPredictionReason: string;
+	PropertyBindings: number;
+	static Load(ResourceName: string): WidgetBlueprint;
+	static Find(Outer: UObject, ResourceName: string): WidgetBlueprint;
+	static GetDefaultObject(): WidgetBlueprint;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBlueprint;
+	static C(Other: UObject | any): WidgetBlueprint;
+}
+
+declare class DirectoryWidgetCompilerOptions { 
+	Directory: DirectoryPath;
+	IgnoredWidgets: WidgetBlueprint[];
+	Options: WidgetCompilerOptions;
+	clone() : DirectoryWidgetCompilerOptions;
+	static C(Other: UObject | any): DirectoryWidgetCompilerOptions;
+}
+
+declare class DebugResolution { 
+	Width: number;
+	Height: number;
+	Description: string;
+	Color: LinearColor;
+	clone() : DebugResolution;
+	static C(Other: UObject | any): DebugResolution;
+}
+
+declare class UMGEditorProjectSettings extends DeveloperSettings { 
+	DefaultCompilerOptions: WidgetCompilerOptions;
+	DirectoryCompilerOptions: DirectoryWidgetCompilerOptions[];
+	bShowWidgetsFromEngineContent: boolean;
+	bShowWidgetsFromDeveloperContent: boolean;
+	CategoriesToHide: string[];
+	WidgetClassesToHide: SoftClassPath[];
+	DebugResolutions: DebugResolution[];
+	Version: number;
+	bCookSlowConstructionWidgetTree: boolean;
+	bWidgetSupportsDynamicCreation: boolean;
+	static Load(ResourceName: string): UMGEditorProjectSettings;
+	static Find(Outer: UObject, ResourceName: string): UMGEditorProjectSettings;
+	static GetDefaultObject(): UMGEditorProjectSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UMGEditorProjectSettings;
+	static C(Other: UObject | any): UMGEditorProjectSettings;
 }
 
-declare class AnimNode_RotateRootBone extends AnimNode_Base { 
-	BasePose: PoseLink;
-	Pitch: number;
-	Yaw: number;
-	MeshToComponent: Rotator;
-	clone() : AnimNode_RotateRootBone;
-	static C(Other: UObject | any): AnimNode_RotateRootBone;
+declare class WidgetBlueprintFactory extends Factory { 
+	BlueprintType: EBlueprintType;
+	ParentClass: UnrealEngineClass;
+	static Load(ResourceName: string): WidgetBlueprintFactory;
+	static Find(Outer: UObject, ResourceName: string): WidgetBlueprintFactory;
+	static GetDefaultObject(): WidgetBlueprintFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBlueprintFactory;
+	static C(Other: UObject | any): WidgetBlueprintFactory;
+}
+
+declare class WidgetCompilerRule extends UObject { 
+	static Load(ResourceName: string): WidgetCompilerRule;
+	static Find(Outer: UObject, ResourceName: string): WidgetCompilerRule;
+	static GetDefaultObject(): WidgetCompilerRule;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetCompilerRule;
+	static C(Other: UObject | any): WidgetCompilerRule;
+}
+
+declare class WidgetDesignerSettings extends DeveloperSettings { 
+	GridSnapEnabled: boolean;
+	GridSnapSize: number;
+	bLockToPanelOnDragByDefault: boolean;
+	bShowOutlines: boolean;
+	bExecutePreConstructEvent: boolean;
+	bRespectLocks: boolean;
+	static Load(ResourceName: string): WidgetDesignerSettings;
+	static Find(Outer: UObject, ResourceName: string): WidgetDesignerSettings;
+	static GetDefaultObject(): WidgetDesignerSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetDesignerSettings;
+	static C(Other: UObject | any): WidgetDesignerSettings;
+}
+
+declare class BlueprintCallableFunctionRedirect { 
+	ClassName: string;
+	OldFunctionName: string;
+	NewFunctionName: string;
+	BlueprintParamName: string;
+	ClassParamName: string;
+	clone() : BlueprintCallableFunctionRedirect;
+	static C(Other: UObject | any): BlueprintCallableFunctionRedirect;
+}
+
+declare class EdGraphSchema_K2 extends EdGraphSchema { 
+	EditoronlyBPFunctionRedirects: BlueprintCallableFunctionRedirect[];
+	static Load(ResourceName: string): EdGraphSchema_K2;
+	static Find(Outer: UObject, ResourceName: string): EdGraphSchema_K2;
+	static GetDefaultObject(): EdGraphSchema_K2;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EdGraphSchema_K2;
+	static C(Other: UObject | any): EdGraphSchema_K2;
+}
+
+declare class WidgetGraphSchema extends EdGraphSchema_K2 { 
+	static Load(ResourceName: string): WidgetGraphSchema;
+	static Find(Outer: UObject, ResourceName: string): WidgetGraphSchema;
+	static GetDefaultObject(): WidgetGraphSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetGraphSchema;
+	static C(Other: UObject | any): WidgetGraphSchema;
+}
+
+declare class WidgetSlotPair extends UObject { 
+	WidgetName: string;
+	SlotPropertyNames: string[];
+	SlotPropertyValues: string[];
+	static Load(ResourceName: string): WidgetSlotPair;
+	static Find(Outer: UObject, ResourceName: string): WidgetSlotPair;
+	static GetDefaultObject(): WidgetSlotPair;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetSlotPair;
+	static C(Other: UObject | any): WidgetSlotPair;
+}
+
+declare class AudioMixerBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): AudioMixerBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): AudioMixerBlueprintLibrary;
+	static GetDefaultObject(): AudioMixerBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioMixerBlueprintLibrary;
+	static StopRecordingOutput(WorldContextObject: UObject,ExportType: EAudioRecordingExportType,Name: string,Path: string,SubmixToRecord: SoundSubmix,ExistingSoundWaveToOverwrite: SoundWave): SoundWave;
+	static StartRecordingOutput(WorldContextObject: UObject,ExpectedDuration: number,SubmixToRecord: SoundSubmix): void;
+	static SetBypassSourceEffectChainEntry(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,EntryIndex: number,bBypassed: boolean): void;
+	static ResumeRecordingOutput(WorldContextObject: UObject,SubmixToPause: SoundSubmix): void;
+	static RemoveSourceEffectFromPresetChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,EntryIndex: number): void;
+	static RemoveMasterSubmixEffect(WorldContextObject: UObject,SubmixEffectPreset: SoundEffectSubmixPreset): void;
+	static PauseRecordingOutput(WorldContextObject: UObject,SubmixToPause: SoundSubmix): void;
+	static GetNumberOfEntriesInSourceEffectChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain): number;
+	static ClearMasterSubmixEffects(WorldContextObject: UObject): void;
+	static AddSourceEffectToPresetChain(WorldContextObject: UObject,PresetChain: SoundEffectSourcePresetChain,Entry: SourceEffectChainEntry): void;
+	static AddMasterSubmixEffect(WorldContextObject: UObject,SubmixEffectPreset: SoundEffectSubmixPreset): void;
+	static C(Other: UObject | any): AudioMixerBlueprintLibrary;
+}
+
+declare type ESubmixEffectDynamicsProcessorType = 'Compressor' | 'Limiter' | 'Expander' | 'Gate' | 'Count' | 'ESubmixEffectDynamicsProcessorType_MAX';
+declare var ESubmixEffectDynamicsProcessorType : { Compressor:'Compressor',Limiter:'Limiter',Expander:'Expander',Gate:'Gate',Count:'Count',ESubmixEffectDynamicsProcessorType_MAX:'ESubmixEffectDynamicsProcessorType_MAX', };
+declare type ESubmixEffectDynamicsPeakMode = 'MeanSquared' | 'RootMeanSquared' | 'Peak' | 'Count' | 'ESubmixEffectDynamicsPeakMode_MAX';
+declare var ESubmixEffectDynamicsPeakMode : { MeanSquared:'MeanSquared',RootMeanSquared:'RootMeanSquared',Peak:'Peak',Count:'Count',ESubmixEffectDynamicsPeakMode_MAX:'ESubmixEffectDynamicsPeakMode_MAX', };
+declare class SubmixEffectDynamicsProcessorSettings { 
+	DynamicsProcessorType: ESubmixEffectDynamicsProcessorType;
+	PeakMode: ESubmixEffectDynamicsPeakMode;
+	LookAheadMsec: number;
+	AttackTimeMsec: number;
+	ReleaseTimeMsec: number;
+	ThresholdDb: number;
+	Ratio: number;
+	KneeBandwidthDb: number;
+	InputGainDb: number;
+	OutputGainDb: number;
+	bChannelLinked: boolean;
+	bAnalogMode: boolean;
+	clone() : SubmixEffectDynamicsProcessorSettings;
+	static C(Other: UObject | any): SubmixEffectDynamicsProcessorSettings;
+}
+
+declare class SubmixEffectDynamicsProcessorPreset extends SoundEffectSubmixPreset { 
+	Settings: SubmixEffectDynamicsProcessorSettings;
+	static Load(ResourceName: string): SubmixEffectDynamicsProcessorPreset;
+	static Find(Outer: UObject, ResourceName: string): SubmixEffectDynamicsProcessorPreset;
+	static GetDefaultObject(): SubmixEffectDynamicsProcessorPreset;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectDynamicsProcessorPreset;
+	SetSettings(InSettings: SubmixEffectDynamicsProcessorSettings): void;
+	static C(Other: UObject | any): SubmixEffectDynamicsProcessorPreset;
+}
+
+declare class SubmixEffectEQBand { 
+	Frequency: number;
+	Bandwidth: number;
+	GainDb: number;
+	bEnabled: boolean;
+	clone() : SubmixEffectEQBand;
+	static C(Other: UObject | any): SubmixEffectEQBand;
 }
 
-declare class AnimGraphNode_RotateRootBone extends AnimGraphNode_Base { 
-	UNode: AnimNode_RotateRootBone;
-	static Load(ResourceName: string): AnimGraphNode_RotateRootBone;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RotateRootBone;
-	static GetDefaultObject(): AnimGraphNode_RotateRootBone;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RotateRootBone;
-	static C(Other: UObject | any): AnimGraphNode_RotateRootBone;
+declare class SubmixEffectSubmixEQSettings { 
+	EQBands: SubmixEffectEQBand[];
+	clone() : SubmixEffectSubmixEQSettings;
+	static C(Other: UObject | any): SubmixEffectSubmixEQSettings;
 }
 
-declare class AnimNode_RotationMultiplier extends AnimNode_SkeletalControlBase { 
-	TargetBone: BoneReference;
-	SourceBone: BoneReference;
-	Multiplier: number;
-	RotationAxisToRefer: EBoneAxis;
-	bIsAdditive: boolean;
-	clone() : AnimNode_RotationMultiplier;
-	static C(Other: UObject | any): AnimNode_RotationMultiplier;
+declare class SubmixEffectSubmixEQPreset extends SoundEffectSubmixPreset { 
+	Settings: SubmixEffectSubmixEQSettings;
+	static Load(ResourceName: string): SubmixEffectSubmixEQPreset;
+	static Find(Outer: UObject, ResourceName: string): SubmixEffectSubmixEQPreset;
+	static GetDefaultObject(): SubmixEffectSubmixEQPreset;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectSubmixEQPreset;
+	SetSettings(InSettings: SubmixEffectSubmixEQSettings): void;
+	static C(Other: UObject | any): SubmixEffectSubmixEQPreset;
 }
 
-declare class AnimGraphNode_RotationMultiplier extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_RotationMultiplier;
-	static Load(ResourceName: string): AnimGraphNode_RotationMultiplier;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RotationMultiplier;
-	static GetDefaultObject(): AnimGraphNode_RotationMultiplier;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RotationMultiplier;
-	static C(Other: UObject | any): AnimGraphNode_RotationMultiplier;
+declare class SubmixEffectReverbSettings { 
+	Density: number;
+	Diffusion: number;
+	Gain: number;
+	GainHF: number;
+	DecayTime: number;
+	DecayHFRatio: number;
+	ReflectionsGain: number;
+	ReflectionsDelay: number;
+	LateGain: number;
+	LateDelay: number;
+	AirAbsorptionGainHF: number;
+	WetLevel: number;
+	DryLevel: number;
+	clone() : SubmixEffectReverbSettings;
+	static C(Other: UObject | any): SubmixEffectReverbSettings;
+}
+
+declare class SubmixEffectReverbPreset extends SoundEffectSubmixPreset { 
+	Settings: SubmixEffectReverbSettings;
+	static Load(ResourceName: string): SubmixEffectReverbPreset;
+	static Find(Outer: UObject, ResourceName: string): SubmixEffectReverbPreset;
+	static GetDefaultObject(): SubmixEffectReverbPreset;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectReverbPreset;
+	SetSettingsWithReverbEffect(InReverbEffect: ReverbEffect,WetLevel: number,DryLevel: number): void;
+	SetSettings(InSettings: SubmixEffectReverbSettings): void;
+	static C(Other: UObject | any): SubmixEffectReverbPreset;
+}
+
+declare class SoundWaveProcedural extends SoundWave { 
+	static Load(ResourceName: string): SoundWaveProcedural;
+	static Find(Outer: UObject, ResourceName: string): SoundWaveProcedural;
+	static GetDefaultObject(): SoundWaveProcedural;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundWaveProcedural;
+	static C(Other: UObject | any): SoundWaveProcedural;
+}
+
+declare class SynthSound extends SoundWaveProcedural { 
+	static Load(ResourceName: string): SynthSound;
+	static Find(Outer: UObject, ResourceName: string): SynthSound;
+	static GetDefaultObject(): SynthSound;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthSound;
+	static C(Other: UObject | any): SynthSound;
+}
+
+declare class SynthComponent extends SceneComponent { 
+	bAutoDestroy: boolean;
+	bStopWhenOwnerDestroyed: boolean;
+	bAllowSpatialization: boolean;
+	bOverrideAttenuation: boolean;
+	bOutputToBusOnly: boolean;
+	AttenuationSettings: SoundAttenuation;
+	AttenuationOverrides: SoundAttenuationSettings;
+	ConcurrencySettings: SoundConcurrency;
+	SoundClass: SoundClass;
+	SourceEffectChain: SoundEffectSourcePresetChain;
+	SoundSubmix: SoundSubmix;
+	SoundSubmixSends: SoundSubmixSendInfo[];
+	BusSends: SoundSourceBusSendInfo[];
+	PreEffectBusSends: SoundSourceBusSendInfo[];
+	bIsUISound: boolean;
+	bIsPreviewSound: boolean;
+	EnvelopeFollowerAttackTime: number;
+	EnvelopeFollowerReleaseTime: number;
+	OnAudioEnvelopeValue: UnrealEngineMulticastDelegate<(EnvelopeValue: number) => void>;
+	Synth: SynthSound;
+	AudioComponent: AudioComponent;
+	static Load(ResourceName: string): SynthComponent;
+	static Find(Outer: UObject, ResourceName: string): SynthComponent;
+	static GetDefaultObject(): SynthComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthComponent;
+	Stop(): void;
+	Start(): void;
+	SetVolumeMultiplier(VolumeMultiplier: number): void;
+	SetSubmixSend(Submix: SoundSubmix,SendLevel: number): void;
+	IsPlaying(): boolean;
+	static C(Other: UObject | any): SynthComponent;
+}
+
+declare type EHardwareClass = 'Unspecified' | 'Desktop' | 'Mobile' | 'EHardwareClass_MAX';
+declare var EHardwareClass : { Unspecified:'Unspecified',Desktop:'Desktop',Mobile:'Mobile',EHardwareClass_MAX:'EHardwareClass_MAX', };
+declare type EGraphicsPreset = 'Unspecified' | 'Maximum' | 'Scalable' | 'EGraphicsPreset_MAX';
+declare var EGraphicsPreset : { Unspecified:'Unspecified',Maximum:'Maximum',Scalable:'Scalable',EGraphicsPreset_MAX:'EGraphicsPreset_MAX', };
+declare class HardwareTargetingSettings extends UObject { 
+	TargetedHardwareClass: EHardwareClass;
+	AppliedTargetedHardwareClass: EHardwareClass;
+	DefaultGraphicsPerformance: EGraphicsPreset;
+	AppliedDefaultGraphicsPerformance: EGraphicsPreset;
+	static Load(ResourceName: string): HardwareTargetingSettings;
+	static Find(Outer: UObject, ResourceName: string): HardwareTargetingSettings;
+	static GetDefaultObject(): HardwareTargetingSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HardwareTargetingSettings;
+	static C(Other: UObject | any): HardwareTargetingSettings;
+}
+
+declare class ClassViewerProjectSettings extends UObject { 
+	InternalOnlyPaths: DirectoryPath[];
+	InternalOnlyClasses: SoftClassPath[];
+	static Load(ResourceName: string): ClassViewerProjectSettings;
+	static Find(Outer: UObject, ResourceName: string): ClassViewerProjectSettings;
+	static GetDefaultObject(): ClassViewerProjectSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClassViewerProjectSettings;
+	static C(Other: UObject | any): ClassViewerProjectSettings;
+}
+
+declare class LocalizedTemplateString { 
+	Language: string;
+	text: string;
+	clone() : LocalizedTemplateString;
+	static C(Other: UObject | any): LocalizedTemplateString;
+}
+
+declare class TemplateFolderRename { 
+	From: string;
+	To: string;
+	clone() : TemplateFolderRename;
+	static C(Other: UObject | any): TemplateFolderRename;
+}
+
+declare class TemplateReplacement { 
+	Extensions: string[];
+	From: string;
+	To: string;
+	bCaseSensitive: boolean;
+	clone() : TemplateReplacement;
+	static C(Other: UObject | any): TemplateReplacement;
+}
+
+declare type EFeaturePackDetailLevel = 'Standard' | 'High' | 'EFeaturePackDetailLevel_MAX';
+declare var EFeaturePackDetailLevel : { Standard:'Standard',High:'High',EFeaturePackDetailLevel_MAX:'EFeaturePackDetailLevel_MAX', };
+declare class FeaturePackLevelSet { 
+	DetailLevels: EFeaturePackDetailLevel[];
+	MountName: string;
+	clone() : FeaturePackLevelSet;
+	static C(Other: UObject | any): FeaturePackLevelSet;
+}
+
+declare class TemplateProjectDefs extends UObject { 
+	LocalizedDisplayNames: LocalizedTemplateString[];
+	LocalizedDescriptions: LocalizedTemplateString[];
+	FoldersToIgnore: string[];
+	FilesToIgnore: string[];
+	FolderRenames: TemplateFolderRename[];
+	FilenameReplacements: TemplateReplacement[];
+	ReplacementsInFiles: TemplateReplacement[];
+	SortKey: string;
+	Category: string;
+	ClassTypes: string;
+	AssetTypes: string;
+	bAllowProjectCreation: boolean;
+	PacksToInclude: string[];
+	EditDetailLevelPreference: EFeaturePackDetailLevel;
+	SharedContentPacks: FeaturePackLevelSet[];
+	static Load(ResourceName: string): TemplateProjectDefs;
+	static Find(Outer: UObject, ResourceName: string): TemplateProjectDefs;
+	static GetDefaultObject(): TemplateProjectDefs;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TemplateProjectDefs;
+	static C(Other: UObject | any): TemplateProjectDefs;
+}
+
+declare class DefaultTemplateProjectDefs extends TemplateProjectDefs { 
+	static Load(ResourceName: string): DefaultTemplateProjectDefs;
+	static Find(Outer: UObject, ResourceName: string): DefaultTemplateProjectDefs;
+	static GetDefaultObject(): DefaultTemplateProjectDefs;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DefaultTemplateProjectDefs;
+	static C(Other: UObject | any): DefaultTemplateProjectDefs;
 }
 
-declare class AnimNode_RotationOffsetBlendSpace extends AnimNode_BlendSpacePlayer { 
-	BasePose: PoseLink;
-	LODThreshold: number;
-	bIsLODEnabled: boolean;
-	Alpha: number;
-	AlphaScaleBias: InputScaleBias;
-	ActualAlpha: number;
-	clone() : AnimNode_RotationOffsetBlendSpace;
-	static C(Other: UObject | any): AnimNode_RotationOffsetBlendSpace;
+declare class Texture2DDynamic extends Texture { 
+	Format: EPixelFormat;
+	static Load(ResourceName: string): Texture2DDynamic;
+	static Find(Outer: UObject, ResourceName: string): Texture2DDynamic;
+	static GetDefaultObject(): Texture2DDynamic;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Texture2DDynamic;
+	static C(Other: UObject | any): Texture2DDynamic;
 }
 
-declare class AnimGraphNode_RotationOffsetBlendSpace extends AnimGraphNode_BlendSpaceBase { 
-	UNode: AnimNode_RotationOffsetBlendSpace;
-	static Load(ResourceName: string): AnimGraphNode_RotationOffsetBlendSpace;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RotationOffsetBlendSpace;
-	static GetDefaultObject(): AnimGraphNode_RotationOffsetBlendSpace;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RotationOffsetBlendSpace;
-	static C(Other: UObject | any): AnimGraphNode_RotationOffsetBlendSpace;
+declare class AsyncTaskDownloadImage extends BlueprintAsyncActionBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<(Texture: Texture2DDynamic) => void>;
+	OnFail: UnrealEngineMulticastDelegate<(Texture: Texture2DDynamic) => void>;
+	static Load(ResourceName: string): AsyncTaskDownloadImage;
+	static Find(Outer: UObject, ResourceName: string): AsyncTaskDownloadImage;
+	static GetDefaultObject(): AsyncTaskDownloadImage;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AsyncTaskDownloadImage;
+	static DownloadImage(URL: string): AsyncTaskDownloadImage;
+	static C(Other: UObject | any): AsyncTaskDownloadImage;
 }
 
-declare class AnimNode_SaveCachedPose extends AnimNode_Base { 
-	Pose: PoseLink;
-	CachePoseName: string;
-	GlobalWeight: number;
-	clone() : AnimNode_SaveCachedPose;
-	static C(Other: UObject | any): AnimNode_SaveCachedPose;
+declare class ContentWidget extends PanelWidget { 
+	static Load(ResourceName: string): ContentWidget;
+	static Find(Outer: UObject, ResourceName: string): ContentWidget;
+	static GetDefaultObject(): ContentWidget;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentWidget;
+	SetContent(Content: Widget): PanelSlot;
+	GetContentSlot(): PanelSlot;
+	GetContent(): Widget;
+	static C(Other: UObject | any): ContentWidget;
 }
 
-declare class AnimGraphNode_SaveCachedPose extends AnimGraphNode_Base { 
-	UNode: AnimNode_SaveCachedPose;
-	CacheName: string;
-	static Load(ResourceName: string): AnimGraphNode_SaveCachedPose;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SaveCachedPose;
-	static GetDefaultObject(): AnimGraphNode_SaveCachedPose;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SaveCachedPose;
-	static C(Other: UObject | any): AnimGraphNode_SaveCachedPose;
+declare class BackgroundBlur extends ContentWidget { 
+	Padding: Margin;
+	HorizontalAlignment: EHorizontalAlignment;
+	VerticalAlignment: EVerticalAlignment;
+	bApplyAlphaToBlur: boolean;
+	BlurStrength: number;
+	bOverrideAutoRadiusCalculation: boolean;
+	BlurRadius: number;
+	LowQualityFallbackBrush: SlateBrush;
+	static Load(ResourceName: string): BackgroundBlur;
+	static Find(Outer: UObject, ResourceName: string): BackgroundBlur;
+	static GetDefaultObject(): BackgroundBlur;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BackgroundBlur;
+	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
+	SetPadding(InPadding: Margin): void;
+	SetLowQualityFallbackBrush(InBrush: SlateBrush): void;
+	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
+	SetBlurStrength(InStrength: number): void;
+	SetBlurRadius(InBlurRadius: number): void;
+	SetApplyAlphaToBlur(bInApplyAlphaToBlur: boolean): void;
+	static C(Other: UObject | any): BackgroundBlur;
 }
 
-declare type EScaleChainInitialLength = 'FixedDefaultLengthValue' | 'Distance' | 'ChainLength';
-declare var EScaleChainInitialLength : { FixedDefaultLengthValue:'FixedDefaultLengthValue',Distance:'Distance',ChainLength:'ChainLength', };
-declare class AnimNode_ScaleChainLength extends AnimNode_Base { 
-	InputPose: PoseLink;
-	DefaultChainLength: number;
-	ChainStartBone: BoneReference;
-	ChainEndBone: BoneReference;
-	ChainInitialLength: ChainInitialLength;
-	TargetLocation: Vector;
-	Alpha: number;
-	ActualAlpha: number;
-	AlphaScaleBias: InputScaleBias;
-	bBoneIndicesCached: boolean;
-	clone() : AnimNode_ScaleChainLength;
-	static C(Other: UObject | any): AnimNode_ScaleChainLength;
+declare class BackgroundBlurSlot extends PanelSlot { 
+	Padding: Margin;
+	HorizontalAlignment: EHorizontalAlignment;
+	VerticalAlignment: EVerticalAlignment;
+	static Load(ResourceName: string): BackgroundBlurSlot;
+	static Find(Outer: UObject, ResourceName: string): BackgroundBlurSlot;
+	static GetDefaultObject(): BackgroundBlurSlot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BackgroundBlurSlot;
+	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
+	SetPadding(InPadding: Margin): void;
+	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
+	static C(Other: UObject | any): BackgroundBlurSlot;
 }
 
-declare class AnimGraphNode_ScaleChainLength extends AnimGraphNode_Base { 
-	UNode: AnimNode_ScaleChainLength;
-	static Load(ResourceName: string): AnimGraphNode_ScaleChainLength;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ScaleChainLength;
-	static GetDefaultObject(): AnimGraphNode_ScaleChainLength;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ScaleChainLength;
-	static C(Other: UObject | any): AnimGraphNode_ScaleChainLength;
+declare class BoolBinding extends PropertyBinding { 
+	static Load(ResourceName: string): BoolBinding;
+	static Find(Outer: UObject, ResourceName: string): BoolBinding;
+	static GetDefaultObject(): BoolBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BoolBinding;
+	GetValue(): boolean;
+	static C(Other: UObject | any): BoolBinding;
 }
 
-declare type ESequenceEvalReinit = 'NoReset' | 'StartPosition' | 'ExplicitTime';
-declare var ESequenceEvalReinit : { NoReset:'NoReset',StartPosition:'StartPosition',ExplicitTime:'ExplicitTime', };
-declare class AnimNode_SequenceEvaluator extends AnimNode_AssetPlayerBase { 
-	Sequence: AnimSequenceBase;
-	ExplicitTime: number;
-	bShouldLoop: boolean;
-	bTeleportToExplicitTime: boolean;
-	StartPosition: number;
-	ReinitializationBehavior: ESequenceEvalReinit;
-	bReinitialized: boolean;
-	clone() : AnimNode_SequenceEvaluator;
-	static C(Other: UObject | any): AnimNode_SequenceEvaluator;
+declare class Border extends ContentWidget { 
+	HorizontalAlignment: EHorizontalAlignment;
+	VerticalAlignment: EVerticalAlignment;
+	bShowEffectWhenDisabled: boolean;
+	ContentColorAndOpacity: LinearColor;
+	ContentColorAndOpacityDelegate: UnrealEngineDelegate<() => LinearColor>;
+	Padding: Margin;
+	Background: SlateBrush;
+	BackgroundDelegate: UnrealEngineDelegate<() => SlateBrush>;
+	BrushColor: LinearColor;
+	BrushColorDelegate: UnrealEngineDelegate<() => LinearColor>;
+	DesiredSizeScale: Vector2D;
+	OnMouseButtonDownEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) => EventReply>;
+	OnMouseButtonUpEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) => EventReply>;
+	OnMouseMoveEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) => EventReply>;
+	OnMouseDoubleClickEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) => EventReply>;
+	Brush: SlateBrushAsset;
+	static Load(ResourceName: string): Border;
+	static Find(Outer: UObject, ResourceName: string): Border;
+	static GetDefaultObject(): Border;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Border;
+	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
+	SetPadding(InPadding: Margin): void;
+	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
+	SetDesiredSizeScale(InScale: Vector2D): void;
+	SetContentColorAndOpacity(InContentColorAndOpacity: LinearColor): void;
+	SetBrushFromTexture(Texture: Texture2D): void;
+	SetBrushFromMaterial(Material: MaterialInterface): void;
+	SetBrushFromAsset(Asset: SlateBrushAsset): void;
+	SetBrushColor(InBrushColor: LinearColor): void;
+	SetBrush(InBrush: SlateBrush): void;
+	GetDynamicMaterial(): MaterialInstanceDynamic;
+	static C(Other: UObject | any): Border;
+}
+
+declare class BrushBinding extends PropertyBinding { 
+	static Load(ResourceName: string): BrushBinding;
+	static Find(Outer: UObject, ResourceName: string): BrushBinding;
+	static GetDefaultObject(): BrushBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BrushBinding;
+	GetValue(): SlateBrush;
+	static C(Other: UObject | any): BrushBinding;
+}
+
+declare type EButtonClickMethod = 'DownAndUp' | 'MouseDown' | 'MouseUp' | 'PreciseClick' | 'EButtonClickMethod_MAX';
+declare var EButtonClickMethod : { DownAndUp:'DownAndUp',MouseDown:'MouseDown',MouseUp:'MouseUp',PreciseClick:'PreciseClick',EButtonClickMethod_MAX:'EButtonClickMethod_MAX', };
+declare type EButtonTouchMethod = 'DownAndUp' | 'PreciseTap' | 'EButtonTouchMethod_MAX';
+declare var EButtonTouchMethod : { DownAndUp:'DownAndUp',PreciseTap:'PreciseTap',EButtonTouchMethod_MAX:'EButtonTouchMethod_MAX', };
+declare type EButtonPressMethod = 'DownAndUp' | 'ButtonPress' | 'ButtonRelease' | 'EButtonPressMethod_MAX';
+declare var EButtonPressMethod : { DownAndUp:'DownAndUp',ButtonPress:'ButtonPress',ButtonRelease:'ButtonRelease',EButtonPressMethod_MAX:'EButtonPressMethod_MAX', };
+declare class Button extends ContentWidget { 
+	Style: SlateWidgetStyleAsset;
+	WidgetStyle: ButtonStyle;
+	ColorAndOpacity: LinearColor;
+	BackgroundColor: LinearColor;
+	ClickMethod: EButtonClickMethod;
+	TouchMethod: EButtonTouchMethod;
+	PressMethod: EButtonPressMethod;
+	IsFocusable: boolean;
+	OnClicked: UnrealEngineMulticastDelegate<() => void>;
+	OnPressed: UnrealEngineMulticastDelegate<() => void>;
+	OnReleased: UnrealEngineMulticastDelegate<() => void>;
+	OnHovered: UnrealEngineMulticastDelegate<() => void>;
+	OnUnhovered: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): Button;
+	static Find(Outer: UObject, ResourceName: string): Button;
+	static GetDefaultObject(): Button;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Button;
+	SetTouchMethod(InTouchMethod: EButtonTouchMethod): void;
+	SetStyle(InStyle: ButtonStyle): void;
+	SetPressMethod(InPressMethod: EButtonPressMethod): void;
+	SetColorAndOpacity(InColorAndOpacity: LinearColor): void;
+	SetClickMethod(InClickMethod: EButtonClickMethod): void;
+	SetBackgroundColor(InBackgroundColor: LinearColor): void;
+	IsPressed(): boolean;
+	static C(Other: UObject | any): Button;
+}
+
+declare class ButtonSlot extends PanelSlot { 
+	Padding: Margin;
+	HorizontalAlignment: EHorizontalAlignment;
+	VerticalAlignment: EVerticalAlignment;
+	static Load(ResourceName: string): ButtonSlot;
+	static Find(Outer: UObject, ResourceName: string): ButtonSlot;
+	static GetDefaultObject(): ButtonSlot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ButtonSlot;
+	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
+	SetPadding(InPadding: Margin): void;
+	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
+	static C(Other: UObject | any): ButtonSlot;
+}
+
+declare class CanvasPanel extends PanelWidget { 
+	static Load(ResourceName: string): CanvasPanel;
+	static Find(Outer: UObject, ResourceName: string): CanvasPanel;
+	static GetDefaultObject(): CanvasPanel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CanvasPanel;
+	AddChildToCanvas(Content: Widget): CanvasPanelSlot;
+	static C(Other: UObject | any): CanvasPanel;
+}
+
+declare type ECheckBoxState = 'Unchecked' | 'Checked' | 'Undetermined' | 'ECheckBoxState_MAX';
+declare var ECheckBoxState : { Unchecked:'Unchecked',Checked:'Checked',Undetermined:'Undetermined',ECheckBoxState_MAX:'ECheckBoxState_MAX', };
+declare class CheckBox extends ContentWidget { 
+	CheckedState: ECheckBoxState;
+	CheckedStateDelegate: UnrealEngineDelegate<() => ECheckBoxState>;
+	WidgetStyle: CheckBoxStyle;
+	Style: SlateWidgetStyleAsset;
+	UncheckedImage: SlateBrushAsset;
+	UncheckedHoveredImage: SlateBrushAsset;
+	UncheckedPressedImage: SlateBrushAsset;
+	CheckedImage: SlateBrushAsset;
+	CheckedHoveredImage: SlateBrushAsset;
+	CheckedPressedImage: SlateBrushAsset;
+	UndeterminedImage: SlateBrushAsset;
+	UndeterminedHoveredImage: SlateBrushAsset;
+	UndeterminedPressedImage: SlateBrushAsset;
+	HorizontalAlignment: EHorizontalAlignment;
+	Padding: Margin;
+	BorderBackgroundColor: SlateColor;
+	IsFocusable: boolean;
+	OnCheckStateChanged: UnrealEngineMulticastDelegate<(bIsChecked: boolean) => void>;
+	static Load(ResourceName: string): CheckBox;
+	static Find(Outer: UObject, ResourceName: string): CheckBox;
+	static GetDefaultObject(): CheckBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CheckBox;
+	SetIsChecked(InIsChecked: boolean): void;
+	SetCheckedState(InCheckedState: ECheckBoxState): void;
+	IsPressed(): boolean;
+	IsChecked(): boolean;
+	GetCheckedState(): ECheckBoxState;
+	static C(Other: UObject | any): CheckBox;
+}
+
+declare class CheckedStateBinding extends PropertyBinding { 
+	static Load(ResourceName: string): CheckedStateBinding;
+	static Find(Outer: UObject, ResourceName: string): CheckedStateBinding;
+	static GetDefaultObject(): CheckedStateBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CheckedStateBinding;
+	GetValue(): ECheckBoxState;
+	static C(Other: UObject | any): CheckedStateBinding;
+}
+
+declare class CircularThrobber extends Widget { 
+	NumberOfPieces: number;
+	Period: number;
+	Radius: number;
+	PieceImage: SlateBrushAsset;
+	UImage: SlateBrush;
+	bEnableRadius: boolean;
+	static Load(ResourceName: string): CircularThrobber;
+	static Find(Outer: UObject, ResourceName: string): CircularThrobber;
+	static GetDefaultObject(): CircularThrobber;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CircularThrobber;
+	SetRadius(InRadius: number): void;
+	SetPeriod(InPeriod: number): void;
+	SetNumberOfPieces(InNumberOfPieces: number): void;
+	static C(Other: UObject | any): CircularThrobber;
+}
+
+declare class ColorBinding extends PropertyBinding { 
+	static Load(ResourceName: string): ColorBinding;
+	static Find(Outer: UObject, ResourceName: string): ColorBinding;
+	static GetDefaultObject(): ColorBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ColorBinding;
+	GetSlateValue(): SlateColor;
+	GetLinearValue(): LinearColor;
+	static C(Other: UObject | any): ColorBinding;
+}
+
+declare class ComboBox extends Widget { 
+	Items: UObject[];
+	OnGenerateWidgetEvent: UnrealEngineDelegate<(Item: UObject) => Widget>;
+	bIsFocusable: boolean;
+	static Load(ResourceName: string): ComboBox;
+	static Find(Outer: UObject, ResourceName: string): ComboBox;
+	static GetDefaultObject(): ComboBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComboBox;
+	static C(Other: UObject | any): ComboBox;
+}
+
+declare class TableRowStyle extends SlateWidgetStyle { 
+	SelectorFocusedBrush: SlateBrush;
+	ActiveHoveredBrush: SlateBrush;
+	ActiveBrush: SlateBrush;
+	InactiveHoveredBrush: SlateBrush;
+	InactiveBrush: SlateBrush;
+	EvenRowBackgroundHoveredBrush: SlateBrush;
+	EvenRowBackgroundBrush: SlateBrush;
+	OddRowBackgroundHoveredBrush: SlateBrush;
+	OddRowBackgroundBrush: SlateBrush;
+	TextColor: SlateColor;
+	SelectedTextColor: SlateColor;
+	DropIndicator_Above: SlateBrush;
+	DropIndicator_Onto: SlateBrush;
+	DropIndicator_Below: SlateBrush;
+	clone() : TableRowStyle;
+	static C(Other: UObject | any): TableRowStyle;
+}
+
+declare type ESelectInfo = 'OnKeyPress' | 'OnNavigation' | 'OnMouseClick' | 'Direct' | 'ESelectInfo_MAX';
+declare var ESelectInfo : { OnKeyPress:'OnKeyPress',OnNavigation:'OnNavigation',OnMouseClick:'OnMouseClick',Direct:'Direct',ESelectInfo_MAX:'ESelectInfo_MAX', };
+declare class ComboBoxString extends Widget { 
+	DefaultOptions: string[];
+	SelectedOption: string;
+	WidgetStyle: ComboBoxStyle;
+	ItemStyle: TableRowStyle;
+	ContentPadding: Margin;
+	MaxListHeight: number;
+	HasDownArrow: boolean;
+	EnableGamepadNavigationMode: boolean;
+	Font: SlateFontInfo;
+	ForegroundColor: SlateColor;
+	bIsFocusable: boolean;
+	OnGenerateWidgetEvent: UnrealEngineDelegate<(Item: string) => Widget>;
+	OnSelectionChanged: UnrealEngineMulticastDelegate<(SelectedItem: string, SelectionType: ESelectInfo) => void>;
+	OnOpening: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): ComboBoxString;
+	static Find(Outer: UObject, ResourceName: string): ComboBoxString;
+	static GetDefaultObject(): ComboBoxString;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComboBoxString;
+	SetSelectedOption(Option: string): void;
+	RemoveOption(Option: string): boolean;
+	RefreshOptions(): void;
+	GetSelectedOption(): string;
+	GetOptionCount(): number;
+	GetOptionAtIndex(index: number): string;
+	FindOptionIndex(Option: string): number;
+	ClearSelection(): void;
+	ClearOptions(): void;
+	AddOption(Option: string): void;
+	static C(Other: UObject | any): ComboBoxString;
+}
+
+declare type EDynamicBoxType = 'Horizontal' | 'Vertical' | 'Wrap' | 'Overlay' | 'EDynamicBoxType_MAX';
+declare var EDynamicBoxType : { Horizontal:'Horizontal',Vertical:'Vertical',Wrap:'Wrap',Overlay:'Overlay',EDynamicBoxType_MAX:'EDynamicBoxType_MAX', };
+declare class DynamicEntryBox extends Widget { 
+	NumDesignerPreviewEntries: number;
+	EntryBoxType: EDynamicBoxType;
+	EntrySpacing: Vector2D;
+	SpacingPattern: Vector2D[];
+	EntrySizeRule: SlateChildSize;
+	EntryHorizontalAlignment: EHorizontalAlignment;
+	EntryVerticalAlignment: EVerticalAlignment;
+	MaxElementSize: number;
+	EntryWidgetClass: UnrealEngineClass;
+	static Load(ResourceName: string): DynamicEntryBox;
+	static Find(Outer: UObject, ResourceName: string): DynamicEntryBox;
+	static GetDefaultObject(): DynamicEntryBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicEntryBox;
+	SetEntrySpacing(InEntrySpacing: Vector2D): void;
+	Reset(bDeleteWidgets: boolean): void;
+	RemoveEntry(EntryWidget: UserWidget): void;
+	GetNumEntries(): number;
+	GetAllEntries(): UserWidget[];
+	BP_CreateEntryOfClass(EntryClass: UnrealEngineClass): UserWidget;
+	BP_CreateEntry(): UserWidget;
+	static C(Other: UObject | any): DynamicEntryBox;
+}
+
+declare type EVirtualKeyboardType = 'Default' | 'Number' | 'Web' | 'Email' | 'Password' | 'AlphaNumeric' | 'EVirtualKeyboardType_MAX';
+declare var EVirtualKeyboardType : { Default:'Default',Number:'Number',Web:'Web',Email:'Email',Password:'Password',AlphaNumeric:'AlphaNumeric',EVirtualKeyboardType_MAX:'EVirtualKeyboardType_MAX', };
+declare class VirtualKeyboardOptions { 
+	bEnableAutocorrect: boolean;
+	clone() : VirtualKeyboardOptions;
+	static C(Other: UObject | any): VirtualKeyboardOptions;
+}
+
+declare type EVirtualKeyboardDismissAction = 'TextChangeOnDismiss' | 'TextCommitOnAccept' | 'TextCommitOnDismiss' | 'EVirtualKeyboardDismissAction_MAX';
+declare var EVirtualKeyboardDismissAction : { TextChangeOnDismiss:'TextChangeOnDismiss',TextCommitOnAccept:'TextCommitOnAccept',TextCommitOnDismiss:'TextCommitOnDismiss',EVirtualKeyboardDismissAction_MAX:'EVirtualKeyboardDismissAction_MAX', };
+declare type ETextJustify = 'Left' | 'Center' | 'Right' | 'ETextJustify_MAX';
+declare var ETextJustify : { Left:'Left',Center:'Center',Right:'Right',ETextJustify_MAX:'ETextJustify_MAX', };
+declare type ETextShapingMethod = 'Auto' | 'KerningOnly' | 'FullShaping' | 'ETextShapingMethod_MAX';
+declare var ETextShapingMethod : { Auto:'Auto',KerningOnly:'KerningOnly',FullShaping:'FullShaping',ETextShapingMethod_MAX:'ETextShapingMethod_MAX', };
+declare type ETextFlowDirection = 'Auto' | 'LeftToRight' | 'RightToLeft' | 'ETextFlowDirection_MAX';
+declare var ETextFlowDirection : { Auto:'Auto',LeftToRight:'LeftToRight',RightToLeft:'RightToLeft',ETextFlowDirection_MAX:'ETextFlowDirection_MAX', };
+declare class ShapedTextOptions { 
+	bOverride_TextShapingMethod: boolean;
+	bOverride_TextFlowDirection: boolean;
+	TextShapingMethod: ETextShapingMethod;
+	TextFlowDirection: ETextFlowDirection;
+	clone() : ShapedTextOptions;
+	static C(Other: UObject | any): ShapedTextOptions;
+}
+
+declare type ETextCommit = 'Default' | 'OnEnter' | 'OnUserMovedFocus' | 'OnCleared' | 'ETextCommit_MAX';
+declare var ETextCommit : { Default:'Default',OnEnter:'OnEnter',OnUserMovedFocus:'OnUserMovedFocus',OnCleared:'OnCleared',ETextCommit_MAX:'ETextCommit_MAX', };
+declare class EditableText extends Widget { 
+	text: string;
+	TextDelegate: UnrealEngineDelegate<() => string>;
+	HintText: string;
+	HintTextDelegate: UnrealEngineDelegate<() => string>;
+	WidgetStyle: EditableTextStyle;
+	Style: SlateWidgetStyleAsset;
+	BackgroundImageSelected: SlateBrushAsset;
+	BackgroundImageComposing: SlateBrushAsset;
+	CaretImage: SlateBrushAsset;
+	Font: SlateFontInfo;
+	ColorAndOpacity: SlateColor;
+	IsReadOnly: boolean;
+	IsPassword: boolean;
+	MinimumDesiredWidth: number;
+	IsCaretMovedWhenGainFocus: boolean;
+	SelectAllTextWhenFocused: boolean;
+	RevertTextOnEscape: boolean;
+	ClearKeyboardFocusOnCommit: boolean;
+	SelectAllTextOnCommit: boolean;
+	AllowContextMenu: boolean;
+	KeyboardType: EVirtualKeyboardType;
+	VirtualKeyboardOptions: VirtualKeyboardOptions;
+	VirtualKeyboardDismissAction: EVirtualKeyboardDismissAction;
+	Justification: ETextJustify;
+	ShapedTextOptions: ShapedTextOptions;
+	OnTextChanged: UnrealEngineMulticastDelegate<(text: string) => void>;
+	OnTextCommitted: UnrealEngineMulticastDelegate<(text: string, CommitMethod: ETextCommit) => void>;
+	static Load(ResourceName: string): EditableText;
+	static Find(Outer: UObject, ResourceName: string): EditableText;
+	static GetDefaultObject(): EditableText;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditableText;
+	SetText(InText: string): void;
+	SetIsReadOnly(InbIsReadyOnly: boolean): void;
+	SetIsPassword(InbIsPassword: boolean): void;
+	SetHintText(InHintText: string): void;
+	GetText(): string;
+	static C(Other: UObject | any): EditableText;
+}
+
+declare class EditableTextBox extends Widget { 
+	text: string;
+	TextDelegate: UnrealEngineDelegate<() => string>;
+	WidgetStyle: EditableTextBoxStyle;
+	Style: SlateWidgetStyleAsset;
+	HintText: string;
+	HintTextDelegate: UnrealEngineDelegate<() => string>;
+	Font: SlateFontInfo;
+	ForegroundColor: LinearColor;
+	BackgroundColor: LinearColor;
+	ReadOnlyForegroundColor: LinearColor;
+	IsReadOnly: boolean;
+	IsPassword: boolean;
+	MinimumDesiredWidth: number;
+	Padding: Margin;
+	IsCaretMovedWhenGainFocus: boolean;
+	SelectAllTextWhenFocused: boolean;
+	RevertTextOnEscape: boolean;
+	ClearKeyboardFocusOnCommit: boolean;
+	SelectAllTextOnCommit: boolean;
+	AllowContextMenu: boolean;
+	KeyboardType: EVirtualKeyboardType;
+	VirtualKeyboardOptions: VirtualKeyboardOptions;
+	VirtualKeyboardDismissAction: EVirtualKeyboardDismissAction;
+	Justification: ETextJustify;
+	ShapedTextOptions: ShapedTextOptions;
+	OnTextChanged: UnrealEngineMulticastDelegate<(text: string) => void>;
+	OnTextCommitted: UnrealEngineMulticastDelegate<(text: string, CommitMethod: ETextCommit) => void>;
+	static Load(ResourceName: string): EditableTextBox;
+	static Find(Outer: UObject, ResourceName: string): EditableTextBox;
+	static GetDefaultObject(): EditableTextBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditableTextBox;
+	SetText(InText: string): void;
+	SetIsReadOnly(bReadOnly: boolean): void;
+	SetIsPassword(bIsPassword: boolean): void;
+	SetHintText(InText: string): void;
+	SetError(InError: string): void;
+	HasError(): boolean;
+	GetText(): string;
+	ClearError(): void;
+	static C(Other: UObject | any): EditableTextBox;
+}
+
+declare class ExpandableAreaStyle extends SlateWidgetStyle { 
+	CollapsedImage: SlateBrush;
+	ExpandedImage: SlateBrush;
+	RolloutAnimationSeconds: number;
+	clone() : ExpandableAreaStyle;
+	static C(Other: UObject | any): ExpandableAreaStyle;
+}
+
+declare class ExpandableArea extends Widget { 
+	Style: ExpandableAreaStyle;
+	BorderBrush: SlateBrush;
+	BorderColor: SlateColor;
+	bIsExpanded: boolean;
+	MaxHeight: number;
+	HeaderPadding: Margin;
+	AreaPadding: Margin;
+	OnExpansionChanged: UnrealEngineMulticastDelegate<(Area: ExpandableArea, bIsExpanded: boolean) => void>;
+	HeaderContent: Widget;
+	BodyContent: Widget;
+	static Load(ResourceName: string): ExpandableArea;
+	static Find(Outer: UObject, ResourceName: string): ExpandableArea;
+	static GetDefaultObject(): ExpandableArea;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExpandableArea;
+	SetIsExpanded_Animated(IsExpanded: boolean): void;
+	SetIsExpanded(IsExpanded: boolean): void;
+	GetIsExpanded(): boolean;
+	static C(Other: UObject | any): ExpandableArea;
+}
+
+declare class FloatBinding extends PropertyBinding { 
+	static Load(ResourceName: string): FloatBinding;
+	static Find(Outer: UObject, ResourceName: string): FloatBinding;
+	static GetDefaultObject(): FloatBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FloatBinding;
+	GetValue(): number;
+	static C(Other: UObject | any): FloatBinding;
+}
+
+declare class GridPanel extends PanelWidget { 
+	ColumnFill: number[];
+	RowFill: number[];
+	static Load(ResourceName: string): GridPanel;
+	static Find(Outer: UObject, ResourceName: string): GridPanel;
+	static GetDefaultObject(): GridPanel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GridPanel;
+	SetRowFill(ColumnIndex: number,Coefficient: number): void;
+	SetColumnFill(ColumnIndex: number,Coefficient: number): void;
+	AddChildToGrid(Content: Widget): GridSlot;
+	static C(Other: UObject | any): GridPanel;
+}
+
+declare class HorizontalBox extends PanelWidget { 
+	static Load(ResourceName: string): HorizontalBox;
+	static Find(Outer: UObject, ResourceName: string): HorizontalBox;
+	static GetDefaultObject(): HorizontalBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HorizontalBox;
+	AddChildToHorizontalBox(Content: Widget): HorizontalBoxSlot;
+	static C(Other: UObject | any): HorizontalBox;
+}
+
+declare class UImage extends Widget { 
+	UImage: SlateBrushAsset;
+	Brush: SlateBrush;
+	BrushDelegate: UnrealEngineDelegate<() => SlateBrush>;
+	ColorAndOpacity: LinearColor;
+	ColorAndOpacityDelegate: UnrealEngineDelegate<() => LinearColor>;
+	OnMouseButtonDownEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) => EventReply>;
+	static Load(ResourceName: string): UImage;
+	static Find(Outer: UObject, ResourceName: string): UImage;
+	static GetDefaultObject(): UImage;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UImage;
+	SetOpacity(InOpacity: number): void;
+	SetColorAndOpacity(InColorAndOpacity: LinearColor): void;
+	SetBrushTintColor(TintColor: SlateColor): void;
+	SetBrushSize(DesiredSize: Vector2D): void;
+	SetBrushFromTextureDynamic(Texture: Texture2DDynamic,bMatchSize: boolean): void;
+	SetBrushFromTexture(Texture: Texture2D,bMatchSize: boolean): void;
+	SetBrushFromSoftTexture(SoftTexture: Texture2D,bMatchSize: boolean): void;
+	SetBrushFromMaterial(Material: MaterialInterface): void;
+	SetBrushFromAsset(Asset: SlateBrushAsset): void;
+	SetBrush(InBrush: SlateBrush): void;
+	GetDynamicMaterial(): MaterialInstanceDynamic;
+	static C(Other: UObject | any): UImage;
+}
+
+declare class InputChord { 
+	Key: Key;
+	bShift: boolean;
+	bCtrl: boolean;
+	bAlt: boolean;
+	bCmd: boolean;
+	clone() : InputChord;
+	static C(Other: UObject | any): InputChord;
+	EqualEqual_InputChordInputChord(B: InputChord): boolean;
+	static EqualEqual_InputChordInputChord(A: InputChord,B: InputChord): boolean;
+}
+
+declare class InputKeySelector extends Widget { 
+	WidgetStyle: ButtonStyle;
+	TextStyle: TextBlockStyle;
+	SelectedKey: InputChord;
+	Font: SlateFontInfo;
+	Margin: Margin;
+	ColorAndOpacity: LinearColor;
+	KeySelectionText: string;
+	NoKeySpecifiedText: string;
+	bAllowModifierKeys: boolean;
+	bAllowGamepadKeys: boolean;
+	EscapeKeys: Key[];
+	OnKeySelected: UnrealEngineMulticastDelegate<(SelectedKey: InputChord) => void>;
+	OnIsSelectingKeyChanged: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): InputKeySelector;
+	static Find(Outer: UObject, ResourceName: string): InputKeySelector;
+	static GetDefaultObject(): InputKeySelector;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InputKeySelector;
+	SetTextBlockVisibility(InVisibility: ESlateVisibility): void;
+	SetSelectedKey(InSelectedKey: InputChord): void;
+	SetNoKeySpecifiedText(InNoKeySpecifiedText: string): void;
+	SetKeySelectionText(InKeySelectionText: string): void;
+	SetEscapeKeys(InKeys: Key[]): void;
+	SetAllowModifierKeys(bInAllowModifierKeys: boolean): void;
+	SetAllowGamepadKeys(bInAllowGamepadKeys: boolean): void;
+	GetIsSelectingKey(): boolean;
+	static C(Other: UObject | any): InputKeySelector;
+}
+
+declare class Int32Binding extends PropertyBinding { 
+	static Load(ResourceName: string): Int32Binding;
+	static Find(Outer: UObject, ResourceName: string): Int32Binding;
+	static GetDefaultObject(): Int32Binding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Int32Binding;
+	GetValue(): number;
+	static C(Other: UObject | any): Int32Binding;
+}
+
+declare class InvalidationBox extends ContentWidget { 
+	bCanCache: boolean;
+	CacheRelativeTransforms: boolean;
+	static Load(ResourceName: string): InvalidationBox;
+	static Find(Outer: UObject, ResourceName: string): InvalidationBox;
+	static GetDefaultObject(): InvalidationBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InvalidationBox;
+	SetCanCache(CanCache: boolean): void;
+	InvalidateCache(): void;
+	GetCanCache(): boolean;
+	static C(Other: UObject | any): InvalidationBox;
+}
+
+declare class NativeUserListEntry extends Interface { 
+	static Load(ResourceName: string): NativeUserListEntry;
+	static Find(Outer: UObject, ResourceName: string): NativeUserListEntry;
+	static GetDefaultObject(): NativeUserListEntry;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NativeUserListEntry;
+	IsListItemSelected(): boolean;
+	IsListItemExpanded(): boolean;
+	static C(Other: UObject | any): NativeUserListEntry;
+}
+
+declare class UserListEntry extends NativeUserListEntry { 
+	static Load(ResourceName: string): UserListEntry;
+	static Find(Outer: UObject, ResourceName: string): UserListEntry;
+	static GetDefaultObject(): UserListEntry;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UserListEntry;
+	BP_OnItemSelectionChanged(bIsSelected: boolean): void;
+	BP_OnItemExpansionChanged(bIsExpanded: boolean): void;
+	BP_OnEntryReleased(): void;
+	static C(Other: UObject | any): UserListEntry;
+}
+
+declare class UserObjectListEntry extends UserListEntry { 
+	static Load(ResourceName: string): UserObjectListEntry;
+	static Find(Outer: UObject, ResourceName: string): UserObjectListEntry;
+	static GetDefaultObject(): UserObjectListEntry;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UserObjectListEntry;
+	OnListItemObjectSet(ListItemObject: UObject): void;
+	GetListItemObject(): UObject;
+	static C(Other: UObject | any): UserObjectListEntry;
+}
+
+declare class ListViewBase extends Widget { 
+	EntryWidgetClass: UnrealEngineClass;
+	BP_OnEntryGenerated: UnrealEngineMulticastDelegate<(Widget: UserWidget) => void>;
+	BP_OnEntryReleased: UnrealEngineMulticastDelegate<(Widget: UserWidget) => void>;
+	NumDesignerPreviewEntries: number;
+	static Load(ResourceName: string): ListViewBase;
+	static Find(Outer: UObject, ResourceName: string): ListViewBase;
+	static GetDefaultObject(): ListViewBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ListViewBase;
+	ScrollToTop(): void;
+	ScrollToBottom(): void;
+	RegenerateAllEntries(): void;
+	GetDisplayedEntryWidgets(): UserWidget[];
+	static C(Other: UObject | any): ListViewBase;
+}
+
+declare type ESelectionMode = 'None' | 'Single' | 'SingleToggle' | 'Multi' | 'ESelectionMode_MAX';
+declare var ESelectionMode : { None:'None',Single:'Single',SingleToggle:'SingleToggle',Multi:'Multi',ESelectionMode_MAX:'ESelectionMode_MAX', };
+declare type EConsumeMouseWheel = 'WhenScrollingPossible' | 'Always' | 'Never' | 'EConsumeMouseWheel_MAX';
+declare var EConsumeMouseWheel : { WhenScrollingPossible:'WhenScrollingPossible',Always:'Always',Never:'Never',EConsumeMouseWheel_MAX:'EConsumeMouseWheel_MAX', };
+declare class ListView extends ListViewBase { 
+	SelectionMode: ESelectionMode;
+	ConsumeMouseWheel: EConsumeMouseWheel;
+	bClearSelectionOnClick: boolean;
+	EntrySpacing: number;
+	ListItems: UObject[];
+	BP_OnItemClicked: UnrealEngineMulticastDelegate<(Item: UObject) => void>;
+	BP_OnItemDoubleClicked: UnrealEngineMulticastDelegate<(Item: UObject) => void>;
+	BP_OnItemIsHoveredChanged: UnrealEngineMulticastDelegate<(Item: UObject, bIsHovered: boolean) => void>;
+	BP_OnItemSelectionChanged: UnrealEngineMulticastDelegate<(Item: UObject, bIsSelected: boolean) => void>;
+	BP_OnItemScrolledIntoView: UnrealEngineMulticastDelegate<(Item: UObject, Widget: UserWidget) => void>;
+	static Load(ResourceName: string): ListView;
+	static Find(Outer: UObject, ResourceName: string): ListView;
+	static GetDefaultObject(): ListView;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ListView;
+	SetSelectionMode(SelectionMode: ESelectionMode): void;
+	SetSelectedIndex(index: number): void;
+	ScrollIndexIntoView(index: number): void;
+	NavigateToIndex(index: number): void;
+	IsRefreshPending(): boolean;
+	GetNumItems(): number;
+	GetListItems(): UObject[];
+	GetItemAt(index: number): UObject;
+	GetIndexForItem(Item: UObject): number;
+	ClearListItems(): void;
+	BP_SetSelectedItem(Item: UObject): void;
+	BP_SetListItems(InListItems: UObject[]): void;
+	BP_SetItemSelection(Item: UObject,bSelected: boolean): void;
+	BP_ScrollItemIntoView(Item: UObject): void;
+	BP_NavigateToItem(Item: UObject): void;
+	BP_IsItemVisible(Item: UObject): boolean;
+	BP_GetSelectedItems(Items?: UObject[]): {Items: UObject[], $: boolean};
+	BP_GetSelectedItem(): UObject;
+	BP_GetNumItemsSelected(): number;
+	BP_ClearSelection(): void;
+	BP_CancelScrollIntoView(): void;
+	AddItem(Item: UObject): void;
+	static C(Other: UObject | any): ListView;
+}
+
+declare class ListViewDesignerPreviewItem extends UObject { 
+	static Load(ResourceName: string): ListViewDesignerPreviewItem;
+	static Find(Outer: UObject, ResourceName: string): ListViewDesignerPreviewItem;
+	static GetDefaultObject(): ListViewDesignerPreviewItem;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ListViewDesignerPreviewItem;
+	static C(Other: UObject | any): ListViewDesignerPreviewItem;
+}
+
+declare type EMenuPlacement = 'MenuPlacement_BelowAnchor' | 'MenuPlacement_CenteredBelowAnchor' | 'MenuPlacement_BelowRightAnchor' | 'MenuPlacement_ComboBox' | 'MenuPlacement_ComboBoxRight' | 'MenuPlacement_MenuRight' | 'MenuPlacement_AboveAnchor' | 'MenuPlacement_CenteredAboveAnchor' | 'MenuPlacement_AboveRightAnchor' | 'MenuPlacement_MenuLeft' | 'MenuPlacement_Center' | 'MenuPlacement_RightLeftCenter' | 'MenuPlacement_MatchBottomLeft' | 'MenuPlacement_MAX';
+declare var EMenuPlacement : { MenuPlacement_BelowAnchor:'MenuPlacement_BelowAnchor',MenuPlacement_CenteredBelowAnchor:'MenuPlacement_CenteredBelowAnchor',MenuPlacement_BelowRightAnchor:'MenuPlacement_BelowRightAnchor',MenuPlacement_ComboBox:'MenuPlacement_ComboBox',MenuPlacement_ComboBoxRight:'MenuPlacement_ComboBoxRight',MenuPlacement_MenuRight:'MenuPlacement_MenuRight',MenuPlacement_AboveAnchor:'MenuPlacement_AboveAnchor',MenuPlacement_CenteredAboveAnchor:'MenuPlacement_CenteredAboveAnchor',MenuPlacement_AboveRightAnchor:'MenuPlacement_AboveRightAnchor',MenuPlacement_MenuLeft:'MenuPlacement_MenuLeft',MenuPlacement_Center:'MenuPlacement_Center',MenuPlacement_RightLeftCenter:'MenuPlacement_RightLeftCenter',MenuPlacement_MatchBottomLeft:'MenuPlacement_MatchBottomLeft',MenuPlacement_MAX:'MenuPlacement_MAX', };
+declare class MenuAnchor extends ContentWidget { 
+	MenuClass: UnrealEngineClass;
+	OnGetMenuContentEvent: UnrealEngineDelegate<() => Widget>;
+	PLACEMENT: EMenuPlacement;
+	ShouldDeferPaintingAfterWindowContent: boolean;
+	UseApplicationMenuStack: boolean;
+	OnMenuOpenChanged: UnrealEngineMulticastDelegate<(bIsOpen: boolean) => void>;
+	static Load(ResourceName: string): MenuAnchor;
+	static Find(Outer: UObject, ResourceName: string): MenuAnchor;
+	static GetDefaultObject(): MenuAnchor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MenuAnchor;
+	ToggleOpen(bFocusOnOpen: boolean): void;
+	ShouldOpenDueToClick(): boolean;
+	Open(bFocusMenu: boolean): void;
+	IsOpen(): boolean;
+	HasOpenSubMenus(): boolean;
+	GetMenuPosition(): Vector2D;
+	Close(): void;
+	static C(Other: UObject | any): MenuAnchor;
+}
+
+declare class MouseCursorBinding extends PropertyBinding { 
+	static Load(ResourceName: string): MouseCursorBinding;
+	static Find(Outer: UObject, ResourceName: string): MouseCursorBinding;
+	static GetDefaultObject(): MouseCursorBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MouseCursorBinding;
+	GetValue(): EMouseCursor;
+	static C(Other: UObject | any): MouseCursorBinding;
+}
+
+declare class MovieScene2DTransformMask { 
+	mask: any;
+	clone() : MovieScene2DTransformMask;
+	static C(Other: UObject | any): MovieScene2DTransformMask;
+}
+
+declare class MovieScene2DTransformSection extends MovieSceneSection { 
+	TransformMask: MovieScene2DTransformMask;
+	Translation: MovieSceneFloatChannel;
+	Rotation: MovieSceneFloatChannel;
+	Scale: MovieSceneFloatChannel;
+	Shear: MovieSceneFloatChannel;
+	static Load(ResourceName: string): MovieScene2DTransformSection;
+	static Find(Outer: UObject, ResourceName: string): MovieScene2DTransformSection;
+	static GetDefaultObject(): MovieScene2DTransformSection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene2DTransformSection;
+	static C(Other: UObject | any): MovieScene2DTransformSection;
+}
+
+declare class MovieSceneNameableTrack extends MovieSceneTrack { 
+	DisplayName: string;
+	static Load(ResourceName: string): MovieSceneNameableTrack;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneNameableTrack;
+	static GetDefaultObject(): MovieSceneNameableTrack;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneNameableTrack;
+	static C(Other: UObject | any): MovieSceneNameableTrack;
+}
+
+declare class MovieScenePropertyTrack extends MovieSceneNameableTrack { 
+	UniqueTrackName: string;
+	PropertyName: string;
+	PropertyPath: string;
+	Sections: MovieSceneSection[];
+	static Load(ResourceName: string): MovieScenePropertyTrack;
+	static Find(Outer: UObject, ResourceName: string): MovieScenePropertyTrack;
+	static GetDefaultObject(): MovieScenePropertyTrack;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePropertyTrack;
+	static C(Other: UObject | any): MovieScenePropertyTrack;
+}
+
+declare class MovieScene2DTransformTrack extends MovieScenePropertyTrack { 
+	static Load(ResourceName: string): MovieScene2DTransformTrack;
+	static Find(Outer: UObject, ResourceName: string): MovieScene2DTransformTrack;
+	static GetDefaultObject(): MovieScene2DTransformTrack;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene2DTransformTrack;
+	static C(Other: UObject | any): MovieScene2DTransformTrack;
+}
+
+declare class MovieSceneMarginSection extends MovieSceneSection { 
+	TopCurve: MovieSceneFloatChannel;
+	LeftCurve: MovieSceneFloatChannel;
+	RightCurve: MovieSceneFloatChannel;
+	BottomCurve: MovieSceneFloatChannel;
+	static Load(ResourceName: string): MovieSceneMarginSection;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneMarginSection;
+	static GetDefaultObject(): MovieSceneMarginSection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMarginSection;
+	static C(Other: UObject | any): MovieSceneMarginSection;
+}
+
+declare class MovieSceneMarginTrack extends MovieScenePropertyTrack { 
+	static Load(ResourceName: string): MovieSceneMarginTrack;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneMarginTrack;
+	static GetDefaultObject(): MovieSceneMarginTrack;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMarginTrack;
+	static C(Other: UObject | any): MovieSceneMarginTrack;
+}
+
+declare class MovieSceneMaterialTrack extends MovieSceneNameableTrack { 
+	Sections: MovieSceneSection[];
+	static Load(ResourceName: string): MovieSceneMaterialTrack;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneMaterialTrack;
+	static GetDefaultObject(): MovieSceneMaterialTrack;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMaterialTrack;
+	static C(Other: UObject | any): MovieSceneMaterialTrack;
+}
+
+declare class MovieSceneWidgetMaterialTrack extends MovieSceneMaterialTrack { 
+	BrushPropertyNamePath: string[];
+	TrackName: string;
+	static Load(ResourceName: string): MovieSceneWidgetMaterialTrack;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneWidgetMaterialTrack;
+	static GetDefaultObject(): MovieSceneWidgetMaterialTrack;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneWidgetMaterialTrack;
+	static C(Other: UObject | any): MovieSceneWidgetMaterialTrack;
+}
+
+declare type ETextWrappingPolicy = 'DefaultWrapping' | 'AllowPerCharacterWrapping' | 'ETextWrappingPolicy_MAX';
+declare var ETextWrappingPolicy : { DefaultWrapping:'DefaultWrapping',AllowPerCharacterWrapping:'AllowPerCharacterWrapping',ETextWrappingPolicy_MAX:'ETextWrappingPolicy_MAX', };
+declare class TextLayoutWidget extends Widget { 
+	ShapedTextOptions: ShapedTextOptions;
+	Justification: ETextJustify;
+	WrappingPolicy: ETextWrappingPolicy;
+	AutoWrapText: boolean;
+	WrapTextAt: number;
+	Margin: Margin;
+	LineHeightPercentage: number;
+	static Load(ResourceName: string): TextLayoutWidget;
+	static Find(Outer: UObject, ResourceName: string): TextLayoutWidget;
+	static GetDefaultObject(): TextLayoutWidget;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextLayoutWidget;
+	static C(Other: UObject | any): TextLayoutWidget;
+}
+
+declare class MultiLineEditableText extends TextLayoutWidget { 
+	text: string;
+	HintText: string;
+	HintTextDelegate: UnrealEngineDelegate<() => string>;
+	WidgetStyle: TextBlockStyle;
+	bIsReadOnly: boolean;
+	Font: SlateFontInfo;
+	SelectAllTextWhenFocused: boolean;
+	ClearTextSelectionOnFocusLoss: boolean;
+	RevertTextOnEscape: boolean;
+	ClearKeyboardFocusOnCommit: boolean;
+	AllowContextMenu: boolean;
+	VirtualKeyboardOptions: VirtualKeyboardOptions;
+	VirtualKeyboardDismissAction: EVirtualKeyboardDismissAction;
+	OnTextChanged: UnrealEngineMulticastDelegate<(text: string) => void>;
+	OnTextCommitted: UnrealEngineMulticastDelegate<(text: string, CommitMethod: ETextCommit) => void>;
+	static Load(ResourceName: string): MultiLineEditableText;
+	static Find(Outer: UObject, ResourceName: string): MultiLineEditableText;
+	static GetDefaultObject(): MultiLineEditableText;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MultiLineEditableText;
+	SetText(InText: string): void;
+	SetIsReadOnly(bReadOnly: boolean): void;
+	GetText(): string;
+	static C(Other: UObject | any): MultiLineEditableText;
+}
+
+declare class MultiLineEditableTextBox extends TextLayoutWidget { 
+	text: string;
+	HintText: string;
+	HintTextDelegate: UnrealEngineDelegate<() => string>;
+	WidgetStyle: EditableTextBoxStyle;
+	TextStyle: TextBlockStyle;
+	bIsReadOnly: boolean;
+	AllowContextMenu: boolean;
+	VirtualKeyboardOptions: VirtualKeyboardOptions;
+	VirtualKeyboardDismissAction: EVirtualKeyboardDismissAction;
+	Style: SlateWidgetStyleAsset;
+	Font: SlateFontInfo;
+	ForegroundColor: LinearColor;
+	BackgroundColor: LinearColor;
+	ReadOnlyForegroundColor: LinearColor;
+	OnTextChanged: UnrealEngineMulticastDelegate<(text: string) => void>;
+	OnTextCommitted: UnrealEngineMulticastDelegate<(text: string, CommitMethod: ETextCommit) => void>;
+	static Load(ResourceName: string): MultiLineEditableTextBox;
+	static Find(Outer: UObject, ResourceName: string): MultiLineEditableTextBox;
+	static GetDefaultObject(): MultiLineEditableTextBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MultiLineEditableTextBox;
+	SetText(InText: string): void;
+	SetIsReadOnly(bReadOnly: boolean): void;
+	SetError(InError: string): void;
+	GetText(): string;
+	static C(Other: UObject | any): MultiLineEditableTextBox;
+}
+
+declare class NamedSlot extends ContentWidget { 
+	static Load(ResourceName: string): NamedSlot;
+	static Find(Outer: UObject, ResourceName: string): NamedSlot;
+	static GetDefaultObject(): NamedSlot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NamedSlot;
+	static C(Other: UObject | any): NamedSlot;
+}
+
+declare class NamedSlotInterface extends Interface { 
+	static Load(ResourceName: string): NamedSlotInterface;
+	static Find(Outer: UObject, ResourceName: string): NamedSlotInterface;
+	static GetDefaultObject(): NamedSlotInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NamedSlotInterface;
+	static C(Other: UObject | any): NamedSlotInterface;
+}
+
+declare class NativeWidgetHost extends Widget { 
+	static Load(ResourceName: string): NativeWidgetHost;
+	static Find(Outer: UObject, ResourceName: string): NativeWidgetHost;
+	static GetDefaultObject(): NativeWidgetHost;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NativeWidgetHost;
+	static C(Other: UObject | any): NativeWidgetHost;
+	SetContent(SlateWidget: JavascriptSlateWidget): Widget;
+	static SetContent(TargetWidget: NativeWidgetHost,SlateWidget: JavascriptSlateWidget): Widget;
+}
+
+declare class Overlay extends PanelWidget { 
+	static Load(ResourceName: string): Overlay;
+	static Find(Outer: UObject, ResourceName: string): Overlay;
+	static GetDefaultObject(): Overlay;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Overlay;
+	AddChildToOverlay(Content: Widget): OverlaySlot;
+	static C(Other: UObject | any): Overlay;
+}
+
+declare type EProgressBarFillType = 'LeftToRight' | 'RightToLeft' | 'FillFromCenter' | 'TopToBottom' | 'BottomToTop' | 'EProgressBarFillType_MAX';
+declare var EProgressBarFillType : { LeftToRight:'LeftToRight',RightToLeft:'RightToLeft',FillFromCenter:'FillFromCenter',TopToBottom:'TopToBottom',BottomToTop:'BottomToTop',EProgressBarFillType_MAX:'EProgressBarFillType_MAX', };
+declare class ProgressBar extends Widget { 
+	WidgetStyle: ProgressBarStyle;
+	Style: SlateWidgetStyleAsset;
+	BackgroundImage: SlateBrushAsset;
+	FillImage: SlateBrushAsset;
+	MarqueeImage: SlateBrushAsset;
+	Percent: number;
+	BarFillType: EProgressBarFillType;
+	bIsMarquee: boolean;
+	BorderPadding: Vector2D;
+	PercentDelegate: UnrealEngineDelegate<() => number>;
+	FillColorAndOpacity: LinearColor;
+	FillColorAndOpacityDelegate: UnrealEngineDelegate<() => LinearColor>;
+	static Load(ResourceName: string): ProgressBar;
+	static Find(Outer: UObject, ResourceName: string): ProgressBar;
+	static GetDefaultObject(): ProgressBar;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProgressBar;
+	SetPercent(InPercent: number): void;
+	SetIsMarquee(InbIsMarquee: boolean): void;
+	SetFillColorAndOpacity(InColor: LinearColor): void;
+	static C(Other: UObject | any): ProgressBar;
+}
+
+declare class RetainerBox extends ContentWidget { 
+	RenderOnInvalidation: boolean;
+	RenderOnPhase: boolean;
+	Phase: number;
+	PhaseCount: number;
+	EffectMaterial: MaterialInterface;
+	TextureParameter: string;
+	static Load(ResourceName: string): RetainerBox;
+	static Find(Outer: UObject, ResourceName: string): RetainerBox;
+	static GetDefaultObject(): RetainerBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RetainerBox;
+	SetTextureParameter(TextureParameter: string): void;
+	SetRenderingPhase(RenderPhase: number,TotalPhases: number): void;
+	SetEffectMaterial(EffectMaterial: MaterialInterface): void;
+	RequestRender(): void;
+	GetEffectMaterial(): MaterialInstanceDynamic;
+	static C(Other: UObject | any): RetainerBox;
+}
+
+declare class RichTextBlockDecorator extends UObject { 
+	static Load(ResourceName: string): RichTextBlockDecorator;
+	static Find(Outer: UObject, ResourceName: string): RichTextBlockDecorator;
+	static GetDefaultObject(): RichTextBlockDecorator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RichTextBlockDecorator;
+	static C(Other: UObject | any): RichTextBlockDecorator;
+}
+
+declare class RichTextBlock extends TextLayoutWidget { 
+	text: string;
+	TextStyleSet: DataTable;
+	DecoratorClasses: UnrealEngineClass[];
+	InstanceDecorators: RichTextBlockDecorator[];
+	static Load(ResourceName: string): RichTextBlock;
+	static Find(Outer: UObject, ResourceName: string): RichTextBlock;
+	static GetDefaultObject(): RichTextBlock;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RichTextBlock;
+	SetText(InText: string): void;
+	GetDecoratorByClass(DecoratorClass: UnrealEngineClass): RichTextBlockDecorator;
+	static C(Other: UObject | any): RichTextBlock;
+}
+
+declare class RichTextBlockImageDecorator extends RichTextBlockDecorator { 
+	ImageSet: DataTable;
+	static Load(ResourceName: string): RichTextBlockImageDecorator;
+	static Find(Outer: UObject, ResourceName: string): RichTextBlockImageDecorator;
+	static GetDefaultObject(): RichTextBlockImageDecorator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RichTextBlockImageDecorator;
+	static C(Other: UObject | any): RichTextBlockImageDecorator;
+}
+
+declare class SafeZone extends ContentWidget { 
+	PadLeft: boolean;
+	PadRight: boolean;
+	PadTop: boolean;
+	PadBottom: boolean;
+	static Load(ResourceName: string): SafeZone;
+	static Find(Outer: UObject, ResourceName: string): SafeZone;
+	static GetDefaultObject(): SafeZone;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SafeZone;
+	SetSidesToPad(InPadLeft: boolean,InPadRight: boolean,InPadTop: boolean,InPadBottom: boolean): void;
+	static C(Other: UObject | any): SafeZone;
+}
+
+declare class SafeZoneSlot extends PanelSlot { 
+	bIsTitleSafe: boolean;
+	SafeAreaScale: Margin;
+	HAlign: EHorizontalAlignment;
+	VAlign: EVerticalAlignment;
+	Padding: Margin;
+	static Load(ResourceName: string): SafeZoneSlot;
+	static Find(Outer: UObject, ResourceName: string): SafeZoneSlot;
+	static GetDefaultObject(): SafeZoneSlot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SafeZoneSlot;
+	static C(Other: UObject | any): SafeZoneSlot;
+}
+
+declare type EStretch = 'None' | 'Fill' | 'ScaleToFit' | 'ScaleToFitX' | 'ScaleToFitY' | 'ScaleToFill' | 'ScaleBySafeZone' | 'UserSpecified' | 'EStretch_MAX';
+declare var EStretch : { None:'None',Fill:'Fill',ScaleToFit:'ScaleToFit',ScaleToFitX:'ScaleToFitX',ScaleToFitY:'ScaleToFitY',ScaleToFill:'ScaleToFill',ScaleBySafeZone:'ScaleBySafeZone',UserSpecified:'UserSpecified',EStretch_MAX:'EStretch_MAX', };
+declare type EStretchDirection = 'Both' | 'DownOnly' | 'UpOnly' | 'EStretchDirection_MAX';
+declare var EStretchDirection : { Both:'Both',DownOnly:'DownOnly',UpOnly:'UpOnly',EStretchDirection_MAX:'EStretchDirection_MAX', };
+declare class ScaleBox extends ContentWidget { 
+	Stretch: EStretch;
+	StretchDirection: EStretchDirection;
+	UserSpecifiedScale: number;
+	IgnoreInheritedScale: boolean;
+	bSingleLayoutPass: boolean;
+	static Load(ResourceName: string): ScaleBox;
+	static Find(Outer: UObject, ResourceName: string): ScaleBox;
+	static GetDefaultObject(): ScaleBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScaleBox;
+	SetUserSpecifiedScale(InUserSpecifiedScale: number): void;
+	SetStretchDirection(InStretchDirection: EStretchDirection): void;
+	SetStretch(InStretch: EStretch): void;
+	SetIgnoreInheritedScale(bInIgnoreInheritedScale: boolean): void;
+	static C(Other: UObject | any): ScaleBox;
+}
+
+declare class ScaleBoxSlot extends PanelSlot { 
+	Padding: Margin;
+	HorizontalAlignment: EHorizontalAlignment;
+	VerticalAlignment: EVerticalAlignment;
+	static Load(ResourceName: string): ScaleBoxSlot;
+	static Find(Outer: UObject, ResourceName: string): ScaleBoxSlot;
+	static GetDefaultObject(): ScaleBoxSlot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScaleBoxSlot;
+	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
+	SetPadding(InPadding: Margin): void;
+	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
+	static C(Other: UObject | any): ScaleBoxSlot;
+}
+
+declare type EOrientation = 'Orient_Horizontal' | 'Orient_Vertical' | 'Orient_MAX';
+declare var EOrientation : { Orient_Horizontal:'Orient_Horizontal',Orient_Vertical:'Orient_Vertical',Orient_MAX:'Orient_MAX', };
+declare class ScrollBar extends Widget { 
+	WidgetStyle: ScrollBarStyle;
+	Style: SlateWidgetStyleAsset;
+	bAlwaysShowScrollbar: boolean;
+	Orientation: EOrientation;
+	Thickness: Vector2D;
+	static Load(ResourceName: string): ScrollBar;
+	static Find(Outer: UObject, ResourceName: string): ScrollBar;
+	static GetDefaultObject(): ScrollBar;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScrollBar;
+	SetState(InOffsetFraction: number,InThumbSizeFraction: number): void;
+	static C(Other: UObject | any): ScrollBar;
+}
+
+declare type EDescendantScrollDestination = 'IntoView' | 'TopOrLeft' | 'Center' | 'EDescendantScrollDestination_MAX';
+declare var EDescendantScrollDestination : { IntoView:'IntoView',TopOrLeft:'TopOrLeft',Center:'Center',EDescendantScrollDestination_MAX:'EDescendantScrollDestination_MAX', };
+declare class ScrollBox extends PanelWidget { 
+	WidgetStyle: ScrollBoxStyle;
+	WidgetBarStyle: ScrollBarStyle;
+	Style: SlateWidgetStyleAsset;
+	BarStyle: SlateWidgetStyleAsset;
+	Orientation: EOrientation;
+	ScrollBarVisibility: ESlateVisibility;
+	ConsumeMouseWheel: EConsumeMouseWheel;
+	ScrollbarThickness: Vector2D;
+	AlwaysShowScrollbar: boolean;
+	AllowOverscroll: boolean;
+	NavigationDestination: EDescendantScrollDestination;
+	NavigationScrollPadding: number;
+	bAllowRightClickDragScrolling: boolean;
+	OnUserScrolled: UnrealEngineMulticastDelegate<(CurrentOffset: number) => void>;
+	static Load(ResourceName: string): ScrollBox;
+	static Find(Outer: UObject, ResourceName: string): ScrollBox;
+	static GetDefaultObject(): ScrollBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScrollBox;
+	SetScrollOffset(NewScrollOffset: number): void;
+	SetScrollBarVisibility(NewScrollBarVisibility: ESlateVisibility): void;
+	SetScrollbarThickness(NewScrollbarThickness: Vector2D): void;
+	SetOrientation(NewOrientation: EOrientation): void;
+	SetAlwaysShowScrollbar(NewAlwaysShowScrollbar: boolean): void;
+	SetAllowOverscroll(NewAllowOverscroll: boolean): void;
+	ScrollWidgetIntoView(WidgetToFind: Widget,AnimateScroll: boolean,ScrollDestination: EDescendantScrollDestination): void;
+	ScrollToStart(): void;
+	ScrollToEnd(): void;
+	GetViewOffsetFraction(): number;
+	GetScrollOffset(): number;
+	static C(Other: UObject | any): ScrollBox;
+}
+
+declare class ScrollBoxSlot extends PanelSlot { 
+	Padding: Margin;
+	HorizontalAlignment: EHorizontalAlignment;
+	VerticalAlignment: EVerticalAlignment;
+	static Load(ResourceName: string): ScrollBoxSlot;
+	static Find(Outer: UObject, ResourceName: string): ScrollBoxSlot;
+	static GetDefaultObject(): ScrollBoxSlot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScrollBoxSlot;
+	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
+	SetPadding(InPadding: Margin): void;
+	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
+	static C(Other: UObject | any): ScrollBoxSlot;
+}
+
+declare class SizeBox extends ContentWidget { 
+	bOverride_WidthOverride: boolean;
+	bOverride_HeightOverride: boolean;
+	bOverride_MinDesiredWidth: boolean;
+	bOverride_MinDesiredHeight: boolean;
+	bOverride_MaxDesiredWidth: boolean;
+	bOverride_MaxDesiredHeight: boolean;
+	bOverride_MaxAspectRatio: boolean;
+	WidthOverride: number;
+	HeightOverride: number;
+	MinDesiredWidth: number;
+	MinDesiredHeight: number;
+	MaxDesiredWidth: number;
+	MaxDesiredHeight: number;
+	MaxAspectRatio: number;
+	static Load(ResourceName: string): SizeBox;
+	static Find(Outer: UObject, ResourceName: string): SizeBox;
+	static GetDefaultObject(): SizeBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SizeBox;
+	SetWidthOverride(InWidthOverride: number): void;
+	SetMinDesiredWidth(InMinDesiredWidth: number): void;
+	SetMinDesiredHeight(InMinDesiredHeight: number): void;
+	SetMaxDesiredWidth(InMaxDesiredWidth: number): void;
+	SetMaxDesiredHeight(InMaxDesiredHeight: number): void;
+	SetMaxAspectRatio(InMaxAspectRatio: number): void;
+	SetHeightOverride(InHeightOverride: number): void;
+	ClearWidthOverride(): void;
+	ClearMinDesiredWidth(): void;
+	ClearMinDesiredHeight(): void;
+	ClearMaxDesiredWidth(): void;
+	ClearMaxDesiredHeight(): void;
+	ClearMaxAspectRatio(): void;
+	ClearHeightOverride(): void;
+	static C(Other: UObject | any): SizeBox;
+}
+
+declare class SizeBoxSlot extends PanelSlot { 
+	Padding: Margin;
+	HorizontalAlignment: EHorizontalAlignment;
+	VerticalAlignment: EVerticalAlignment;
+	static Load(ResourceName: string): SizeBoxSlot;
+	static Find(Outer: UObject, ResourceName: string): SizeBoxSlot;
+	static GetDefaultObject(): SizeBoxSlot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SizeBoxSlot;
+	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
+	SetPadding(InPadding: Margin): void;
+	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
+	static C(Other: UObject | any): SizeBoxSlot;
+}
+
+declare class SlateBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): SlateBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): SlateBlueprintLibrary;
+	static GetDefaultObject(): SlateBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateBlueprintLibrary;
+	static ScreenToWidgetLocal(WorldContextObject: UObject,Geometry: Geometry,ScreenPosition: Vector2D,LocalCoordinate?: Vector2D): {LocalCoordinate: Vector2D};
+	static ScreenToWidgetAbsolute(WorldContextObject: UObject,ScreenPosition: Vector2D,AbsoluteCoordinate?: Vector2D): {AbsoluteCoordinate: Vector2D};
+	static ScreenToViewport(WorldContextObject: UObject,ScreenPosition: Vector2D,ViewportPosition?: Vector2D): {ViewportPosition: Vector2D};
+	static LocalToViewport(WorldContextObject: UObject,Geometry: Geometry,LocalCoordinate: Vector2D,PixelPosition?: Vector2D,ViewportPosition?: Vector2D): {PixelPosition: Vector2D, ViewportPosition: Vector2D};
+	static LocalToAbsolute(Geometry: Geometry,LocalCoordinate: Vector2D): Vector2D;
+	static IsUnderLocation(Geometry: Geometry,AbsoluteCoordinate: Vector2D): boolean;
+	static GetLocalSize(Geometry: Geometry): Vector2D;
+	static GetAbsoluteSize(Geometry: Geometry): Vector2D;
+	static EqualEqual_SlateBrush(A: SlateBrush,B: SlateBrush): boolean;
+	static AbsoluteToViewport(WorldContextObject: UObject,AbsoluteDesktopCoordinate: Vector2D,PixelPosition?: Vector2D,ViewportPosition?: Vector2D): {PixelPosition: Vector2D, ViewportPosition: Vector2D};
+	static AbsoluteToLocal(Geometry: Geometry,AbsoluteCoordinate: Vector2D): Vector2D;
+	static C(Other: UObject | any): SlateBlueprintLibrary;
+}
+
+declare class SlateMeshVertex { 
+	Position: Vector2D;
+	Color: Color;
+	UV0: Vector2D;
+	UV1: Vector2D;
+	UV2: Vector2D;
+	UV3: Vector2D;
+	UV4: Vector2D;
+	UV5: Vector2D;
+	clone() : SlateMeshVertex;
+	static C(Other: UObject | any): SlateMeshVertex;
+}
+
+declare class SlateVectorArtData extends UObject { 
+	MeshAsset: StaticMesh;
+	SourceMaterial: MaterialInterface;
+	VertexData: SlateMeshVertex[];
+	IndexData: any[];
+	Material: MaterialInterface;
+	ExtentMin: Vector2D;
+	ExtentMax: Vector2D;
+	static Load(ResourceName: string): SlateVectorArtData;
+	static Find(Outer: UObject, ResourceName: string): SlateVectorArtData;
+	static GetDefaultObject(): SlateVectorArtData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateVectorArtData;
+	static C(Other: UObject | any): SlateVectorArtData;
+}
+
+declare class SliderStyle extends SlateWidgetStyle { 
+	NormalBarImage: SlateBrush;
+	HoveredBarImage: SlateBrush;
+	DisabledBarImage: SlateBrush;
+	NormalThumbImage: SlateBrush;
+	HoveredThumbImage: SlateBrush;
+	DisabledThumbImage: SlateBrush;
+	BarThickness: number;
+	clone() : SliderStyle;
+	static C(Other: UObject | any): SliderStyle;
+}
+
+declare class Slider extends Widget { 
+	Value: number;
+	ValueDelegate: UnrealEngineDelegate<() => number>;
+	WidgetStyle: SliderStyle;
+	Orientation: EOrientation;
+	SliderBarColor: LinearColor;
+	SliderHandleColor: LinearColor;
+	IndentHandle: boolean;
+	Locked: boolean;
+	MouseUsesStep: boolean;
+	RequiresControllerLock: boolean;
+	StepSize: number;
+	IsFocusable: boolean;
+	OnMouseCaptureBegin: UnrealEngineMulticastDelegate<() => void>;
+	OnMouseCaptureEnd: UnrealEngineMulticastDelegate<() => void>;
+	OnControllerCaptureBegin: UnrealEngineMulticastDelegate<() => void>;
+	OnControllerCaptureEnd: UnrealEngineMulticastDelegate<() => void>;
+	OnValueChanged: UnrealEngineMulticastDelegate<(Value: number) => void>;
+	static Load(ResourceName: string): Slider;
+	static Find(Outer: UObject, ResourceName: string): Slider;
+	static GetDefaultObject(): Slider;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Slider;
+	SetValue(InValue: number): void;
+	SetStepSize(InValue: number): void;
+	SetSliderHandleColor(InValue: LinearColor): void;
+	SetSliderBarColor(InValue: LinearColor): void;
+	SetLocked(InValue: boolean): void;
+	SetIndentHandle(InValue: boolean): void;
+	GetValue(): number;
+	static C(Other: UObject | any): Slider;
+}
+
+declare class Spacer extends Widget { 
+	Size: Vector2D;
+	static Load(ResourceName: string): Spacer;
+	static Find(Outer: UObject, ResourceName: string): Spacer;
+	static GetDefaultObject(): Spacer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Spacer;
+	SetSize(InSize: Vector2D): void;
+	static C(Other: UObject | any): Spacer;
+}
+
+declare class SpinBox extends Widget { 
+	Value: number;
+	ValueDelegate: UnrealEngineDelegate<() => number>;
+	WidgetStyle: SpinBoxStyle;
+	Style: SlateWidgetStyleAsset;
+	Delta: number;
+	SliderExponent: number;
+	Font: SlateFontInfo;
+	Justification: ETextJustify;
+	MinDesiredWidth: number;
+	ClearKeyboardFocusOnCommit: boolean;
+	SelectAllTextOnCommit: boolean;
+	ForegroundColor: SlateColor;
+	OnValueChanged: UnrealEngineMulticastDelegate<(InValue: number) => void>;
+	OnValueCommitted: UnrealEngineMulticastDelegate<(InValue: number, CommitMethod: ETextCommit) => void>;
+	OnBeginSliderMovement: UnrealEngineMulticastDelegate<() => void>;
+	OnEndSliderMovement: UnrealEngineMulticastDelegate<(InValue: number) => void>;
+	bOverride_MinValue: boolean;
+	bOverride_MaxValue: boolean;
+	bOverride_MinSliderValue: boolean;
+	bOverride_MaxSliderValue: boolean;
+	MinValue: number;
+	MaxValue: number;
+	MinSliderValue: number;
+	MaxSliderValue: number;
+	static Load(ResourceName: string): SpinBox;
+	static Find(Outer: UObject, ResourceName: string): SpinBox;
+	static GetDefaultObject(): SpinBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpinBox;
+	SetValue(NewValue: number): void;
+	SetMinValue(NewValue: number): void;
+	SetMinSliderValue(NewValue: number): void;
+	SetMaxValue(NewValue: number): void;
+	SetMaxSliderValue(NewValue: number): void;
+	SetForegroundColor(InForegroundColor: SlateColor): void;
+	GetValue(): number;
+	GetMinValue(): number;
+	GetMinSliderValue(): number;
+	GetMaxValue(): number;
+	GetMaxSliderValue(): number;
+	ClearMinValue(): void;
+	ClearMinSliderValue(): void;
+	ClearMaxValue(): void;
+	ClearMaxSliderValue(): void;
+	static C(Other: UObject | any): SpinBox;
+}
+
+declare class TextBinding extends PropertyBinding { 
+	static Load(ResourceName: string): TextBinding;
+	static Find(Outer: UObject, ResourceName: string): TextBinding;
+	static GetDefaultObject(): TextBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextBinding;
+	GetTextValue(): string;
+	GetStringValue(): string;
+	static C(Other: UObject | any): TextBinding;
+}
+
+declare class TextBlock extends TextLayoutWidget { 
+	text: string;
+	TextDelegate: UnrealEngineDelegate<() => string>;
+	ColorAndOpacity: SlateColor;
+	ColorAndOpacityDelegate: UnrealEngineDelegate<() => SlateColor>;
+	Font: SlateFontInfo;
+	ShadowOffset: Vector2D;
+	ShadowColorAndOpacity: LinearColor;
+	ShadowColorAndOpacityDelegate: UnrealEngineDelegate<() => LinearColor>;
+	MinDesiredWidth: number;
+	bWrapWithInvalidationPanel: boolean;
+	bAutoWrapText: boolean;
+	static Load(ResourceName: string): TextBlock;
+	static Find(Outer: UObject, ResourceName: string): TextBlock;
+	static GetDefaultObject(): TextBlock;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextBlock;
+	SetText(InText: string): void;
+	SetShadowOffset(InShadowOffset: Vector2D): void;
+	SetShadowColorAndOpacity(InShadowColorAndOpacity: LinearColor): void;
+	SetOpacity(InOpacity: number): void;
+	SetMinDesiredWidth(InMinDesiredWidth: number): void;
+	SetJustification(InJustification: ETextJustify): void;
+	SetFont(InFontInfo: SlateFontInfo): void;
+	SetColorAndOpacity(InColorAndOpacity: SlateColor): void;
+	SetAutoWrapText(InAutoTextWrap: boolean): void;
+	GetText(): string;
+	GetDynamicOutlineMaterial(): MaterialInstanceDynamic;
+	GetDynamicFontMaterial(): MaterialInstanceDynamic;
+	static C(Other: UObject | any): TextBlock;
+}
+
+declare class Throbber extends Widget { 
+	NumberOfPieces: number;
+	bAnimateHorizontally: boolean;
+	bAnimateVertically: boolean;
+	bAnimateOpacity: boolean;
+	PieceImage: SlateBrushAsset;
+	UImage: SlateBrush;
+	static Load(ResourceName: string): Throbber;
+	static Find(Outer: UObject, ResourceName: string): Throbber;
+	static GetDefaultObject(): Throbber;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Throbber;
+	SetNumberOfPieces(InNumberOfPieces: number): void;
+	SetAnimateVertically(bInAnimateVertically: boolean): void;
+	SetAnimateOpacity(bInAnimateOpacity: boolean): void;
+	SetAnimateHorizontally(bInAnimateHorizontally: boolean): void;
+	static C(Other: UObject | any): Throbber;
+}
+
+declare type EListItemAlignment = 'EvenlyDistributed' | 'EvenlySize' | 'EvenlyWide' | 'LeftAligned' | 'RightAligned' | 'CenterAligned' | 'Fill' | 'EListItemAlignment_MAX';
+declare var EListItemAlignment : { EvenlyDistributed:'EvenlyDistributed',EvenlySize:'EvenlySize',EvenlyWide:'EvenlyWide',LeftAligned:'LeftAligned',RightAligned:'RightAligned',CenterAligned:'CenterAligned',Fill:'Fill',EListItemAlignment_MAX:'EListItemAlignment_MAX', };
+declare class TileView extends ListView { 
+	EntryHeight: number;
+	EntryWidth: number;
+	TileAlignment: EListItemAlignment;
+	bWrapHorizontalNavigation: boolean;
+	static Load(ResourceName: string): TileView;
+	static Find(Outer: UObject, ResourceName: string): TileView;
+	static GetDefaultObject(): TileView;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileView;
+	SetEntryWidth(NewWidth: number): void;
+	SetEntryHeight(NewHeight: number): void;
+	static C(Other: UObject | any): TileView;
+}
+
+declare class TreeView extends ListView { 
+	BP_OnGetItemChildren: UnrealEngineDelegate<(Item: UObject, Children: UObject[]) => void>;
+	BP_OnItemExpansionChanged: UnrealEngineMulticastDelegate<(Item: UObject, bIsExpanded: boolean) => void>;
+	static Load(ResourceName: string): TreeView;
+	static Find(Outer: UObject, ResourceName: string): TreeView;
+	static GetDefaultObject(): TreeView;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TreeView;
+	SetItemExpansion(Item: UObject,bExpandItem: boolean): void;
+	ExpandAll(): void;
+	CollapseAll(): void;
+	static C(Other: UObject | any): TreeView;
+}
+
+declare class UniformGridPanel extends PanelWidget { 
+	SlotPadding: Margin;
+	MinDesiredSlotWidth: number;
+	MinDesiredSlotHeight: number;
+	static Load(ResourceName: string): UniformGridPanel;
+	static Find(Outer: UObject, ResourceName: string): UniformGridPanel;
+	static GetDefaultObject(): UniformGridPanel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UniformGridPanel;
+	SetSlotPadding(InSlotPadding: Margin): void;
+	SetMinDesiredSlotWidth(InMinDesiredSlotWidth: number): void;
+	SetMinDesiredSlotHeight(InMinDesiredSlotHeight: number): void;
+	AddChildToUniformGrid(Content: Widget): UniformGridSlot;
+	static C(Other: UObject | any): UniformGridPanel;
+}
+
+declare class VerticalBox extends PanelWidget { 
+	static Load(ResourceName: string): VerticalBox;
+	static Find(Outer: UObject, ResourceName: string): VerticalBox;
+	static GetDefaultObject(): VerticalBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VerticalBox;
+	AddChildToVerticalBox(Content: Widget): VerticalBoxSlot;
+	static C(Other: UObject | any): VerticalBox;
+}
+
+declare class Viewport extends ContentWidget { 
+	BackgroundColor: LinearColor;
+	static Load(ResourceName: string): Viewport;
+	static Find(Outer: UObject, ResourceName: string): Viewport;
+	static GetDefaultObject(): Viewport;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Viewport;
+	Spawn(ActorClass: UnrealEngineClass): Actor;
+	SetViewRotation(Rotation: Rotator): void;
+	SetViewLocation(Location: Vector): void;
+	GetViewRotation(): Rotator;
+	GetViewportWorld(): World;
+	GetViewLocation(): Vector;
+	static C(Other: UObject | any): Viewport;
+}
+
+declare class VisibilityBinding extends PropertyBinding { 
+	static Load(ResourceName: string): VisibilityBinding;
+	static Find(Outer: UObject, ResourceName: string): VisibilityBinding;
+	static GetDefaultObject(): VisibilityBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisibilityBinding;
+	GetValue(): ESlateVisibility;
+	static C(Other: UObject | any): VisibilityBinding;
+}
+
+declare class WidgetBinding extends PropertyBinding { 
+	static Load(ResourceName: string): WidgetBinding;
+	static Find(Outer: UObject, ResourceName: string): WidgetBinding;
+	static GetDefaultObject(): WidgetBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBinding;
+	GetValue(): Widget;
+	static C(Other: UObject | any): WidgetBinding;
+}
+
+declare class EventGraphFastCallPair { 
+	FunctionToPatch: UFunction;
+	EventGraphCallOffset: number;
+	clone() : EventGraphFastCallPair;
+	static C(Other: UObject | any): EventGraphFastCallPair;
+}
+
+declare class BlueprintGeneratedClass extends Class { 
+	NumReplicatedProperties: number;
+	bHasNativizedParent: boolean;
+	DynamicBindingObjects: DynamicBlueprintBinding[];
+	ComponentTemplates: ActorComponent[];
+	Timelines: TimelineTemplate[];
+	SimpleConstructionScript: SimpleConstructionScript;
+	InheritableComponentHandler: InheritableComponentHandler;
+	UberGraphFunction: UFunction;
+	FastCallPairs: EventGraphFastCallPair[];
+	OverridenArchetypeForCDO: UObject;
+	PropertyGuids: any;
+	CookedComponentInstancingData: any;
+	static Load(ResourceName: string): BlueprintGeneratedClass;
+	static Find(Outer: UObject, ResourceName: string): BlueprintGeneratedClass;
+	static GetDefaultObject(): BlueprintGeneratedClass;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintGeneratedClass;
+	static C(Other: UObject | any): BlueprintGeneratedClass;
+}
+
+declare class DelegateRuntimeBinding { 
+	ObjectName: string;
+	PropertyName: string;
+	FunctionName: string;
+	SourcePath: DynamicPropertyPath;
+	Kind: EBindingKind;
+	clone() : DelegateRuntimeBinding;
+	static C(Other: UObject | any): DelegateRuntimeBinding;
+}
+
+declare class WidgetBlueprintGeneratedClass extends BlueprintGeneratedClass { 
+	WidgetTree: WidgetTree;
+	bCookSlowConstructionWidgetTree: boolean;
+	bAllowTemplate: boolean;
+	bAllowDynamicCreation: boolean;
+	bValidTemplate: boolean;
+	bTemplateInitialized: boolean;
+	bCookedTemplate: boolean;
+	bClassRequiresNativeTick: boolean;
+	Bindings: DelegateRuntimeBinding[];
+	Animations: WidgetAnimation[];
+	NamedSlots: string[];
+	TemplateAsset: UserWidget;
+	Template: UserWidget;
+	EditorTemplate: UserWidget;
+	static Load(ResourceName: string): WidgetBlueprintGeneratedClass;
+	static Find(Outer: UObject, ResourceName: string): WidgetBlueprintGeneratedClass;
+	static GetDefaultObject(): WidgetBlueprintGeneratedClass;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBlueprintGeneratedClass;
+	static C(Other: UObject | any): WidgetBlueprintGeneratedClass;
+}
+
+declare class NavigationEvent extends InputEvent { 
+	clone() : NavigationEvent;
+	static C(Other: UObject | any): NavigationEvent;
+	GetInputEventFromNavigationEvent(): InputEvent;
+	static GetInputEventFromNavigationEvent(Event: NavigationEvent): InputEvent;
+}
+
+declare class WidgetBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): WidgetBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): WidgetBlueprintLibrary;
+	static GetDefaultObject(): WidgetBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBlueprintLibrary;
+	static UnlockMouse(Reply?: EventReply): {Reply: EventReply, $: EventReply};
+	static Unhandled(): EventReply;
+	static SetWindowTitleBarState(TitleBarContent: Widget,Mode: EWindowTitleBarMode,bTitleBarDragEnabled: boolean,bWindowButtonsVisible: boolean,bTitleBarVisible: boolean): void;
+	static SetWindowTitleBarCloseButtonActive(bActive: boolean): void;
+	static SetUserFocus(Reply?: EventReply,FocusWidget?: Widget,bInAllUsers?: boolean): {Reply: EventReply, $: EventReply};
+	static SetMousePosition(Reply?: EventReply,NewMousePosition?: Vector2D): {Reply: EventReply, $: EventReply};
+	static SetInputMode_UIOnlyEx(PlayerController: PlayerController,InWidgetToFocus: Widget,InMouseLockMode: EMouseLockMode): void;
+	static SetInputMode_UIOnly(Target: PlayerController,InWidgetToFocus: Widget,bLockMouseToViewport: boolean): void;
+	static SetInputMode_GameOnly(PlayerController: PlayerController): void;
+	static SetInputMode_GameAndUIEx(PlayerController: PlayerController,InWidgetToFocus: Widget,InMouseLockMode: EMouseLockMode,bHideCursorDuringCapture: boolean): void;
+	static SetInputMode_GameAndUI(Target: PlayerController,InWidgetToFocus: Widget,bLockMouseToViewport: boolean,bHideCursorDuringCapture: boolean): void;
+	static SetHardwareCursor(WorldContextObject: UObject,CursorShape: EMouseCursor,CursorName: string,HotSpot: Vector2D): boolean;
+	static SetFocusToGameViewport(): void;
+	static SetBrushResourceToTexture(Brush?: SlateBrush,Texture?: Texture2D): {Brush: SlateBrush};
+	static SetBrushResourceToMaterial(Brush?: SlateBrush,Material?: MaterialInterface): {Brush: SlateBrush};
+	static RestorePreviousWindowTitleBarState(): void;
+	static ReleaseMouseCapture(Reply?: EventReply): {Reply: EventReply, $: EventReply};
+	static ReleaseJoystickCapture(Reply?: EventReply,bInAllJoysticks?: boolean): {Reply: EventReply, $: EventReply};
+	static NoResourceBrush(): SlateBrush;
+	static MakeBrushFromTexture(Texture: Texture2D,Width: number,Height: number): SlateBrush;
+	static MakeBrushFromMaterial(Material: MaterialInterface,Width: number,Height: number): SlateBrush;
+	static MakeBrushFromAsset(BrushAsset: SlateBrushAsset): SlateBrush;
+	static LockMouse(Reply?: EventReply,CapturingWidget?: Widget): {Reply: EventReply, $: EventReply};
+	static IsDragDropping(): boolean;
+	static Handled(): EventReply;
+	static GetSafeZonePadding(WorldContextObject: UObject,SafePadding?: Vector4,SafePaddingScale?: Vector2D,SpillOverPadding?: Vector4): {SafePadding: Vector4, SafePaddingScale: Vector2D, SpillOverPadding: Vector4};
+	static GetKeyEventFromAnalogInputEvent(Event: AnalogInputEvent): KeyEvent;
+	static GetInputEventFromPointerEvent(Event: UPointerEvent): InputEvent;
+	static GetInputEventFromNavigationEvent(Event: NavigationEvent): InputEvent;
+	static GetInputEventFromKeyEvent(Event: KeyEvent): InputEvent;
+	static GetInputEventFromCharacterEvent(Event: CharacterEvent): InputEvent;
+	static GetDynamicMaterial(Brush?: SlateBrush): {Brush: SlateBrush, $: MaterialInstanceDynamic};
+	static GetDragDroppingContent(): DragDropOperation;
+	static GetBrushResourceAsTexture2D(Brush: SlateBrush): Texture2D;
+	static GetBrushResourceAsMaterial(Brush: SlateBrush): MaterialInterface;
+	static GetBrushResource(Brush: SlateBrush): UObject;
+	static GetAllWidgetsWithInterface(WorldContextObject: UObject,Interface: UnrealEngineClass,FoundWidgets?: UserWidget[],TopLevelOnly?: boolean): {FoundWidgets: UserWidget[]};
+	static GetAllWidgetsOfClass(WorldContextObject: UObject,FoundWidgets?: UserWidget[],WidgetClass?: UnrealEngineClass,TopLevelOnly?: boolean): {FoundWidgets: UserWidget[]};
+	static EndDragDrop(Reply?: EventReply): {Reply: EventReply, $: EventReply};
+	static DrawTextFormatted(Context?: PaintContext,text?: string,Position?: Vector2D,Font?: Font,FontSize?: number,FontTypeFace?: string,Tint?: LinearColor): {Context: PaintContext};
+	static DrawText(Context?: PaintContext,inString?: string,Position?: Vector2D,Tint?: LinearColor): {Context: PaintContext};
+	static DrawLines(Context?: PaintContext,Points?: Vector2D[],Tint?: LinearColor,bAntiAlias?: boolean): {Context: PaintContext};
+	static DrawLine(Context?: PaintContext,PositionA?: Vector2D,PositionB?: Vector2D,Tint?: LinearColor,bAntiAlias?: boolean): {Context: PaintContext};
+	static DrawBox(Context?: PaintContext,Position?: Vector2D,Size?: Vector2D,Brush?: SlateBrushAsset,Tint?: LinearColor): {Context: PaintContext};
+	static DismissAllMenus(): void;
+	static DetectDragIfPressed(UPointerEvent: UPointerEvent,WidgetDetectingDrag: Widget,DragKey: Key): EventReply;
+	static DetectDrag(Reply?: EventReply,WidgetDetectingDrag?: Widget,DragKey?: Key): {Reply: EventReply, $: EventReply};
+	static CreateDragDropOperation(OperationClass: UnrealEngineClass): DragDropOperation;
+	static Create(WorldContextObject: UObject,WidgetType: UnrealEngineClass,OwningPlayer: PlayerController): UserWidget;
+	static ClearUserFocus(Reply?: EventReply,bInAllUsers?: boolean): {Reply: EventReply, $: EventReply};
+	static CaptureMouse(Reply?: EventReply,CapturingWidget?: Widget): {Reply: EventReply, $: EventReply};
+	static CaptureJoystick(Reply?: EventReply,CapturingWidget?: Widget,bInAllJoysticks?: boolean): {Reply: EventReply, $: EventReply};
+	static CancelDragDrop(): void;
+	static C(Other: UObject | any): WidgetBlueprintLibrary;
+}
+
+declare type EWidgetInteractionSource = 'World' | 'Mouse' | 'CenterScreen' | 'Custom' | 'EWidgetInteractionSource_MAX';
+declare var EWidgetInteractionSource : { World:'World',Mouse:'Mouse',CenterScreen:'CenterScreen',Custom:'Custom',EWidgetInteractionSource_MAX:'EWidgetInteractionSource_MAX', };
+declare class WidgetInteractionComponent extends SceneComponent { 
+	OnHoveredWidgetChanged: UnrealEngineMulticastDelegate<(WidgetComponent: WidgetComponent, PreviousWidgetComponent: WidgetComponent) => void>;
+	VirtualUserIndex: number;
+	PointerIndex: number;
+	TraceChannel: ECollisionChannel;
+	InteractionDistance: number;
+	InteractionSource: EWidgetInteractionSource;
+	bEnableHitTesting: boolean;
+	bShowDebug: boolean;
+	DebugColor: LinearColor;
+	CustomHitResult: HitResult;
+	LocalHitLocation: Vector2D;
+	LastLocalHitLocation: Vector2D;
+	HoveredWidgetComponent: WidgetComponent;
+	LastHitResult: HitResult;
+	bIsHoveredWidgetInteractable: boolean;
+	bIsHoveredWidgetFocusable: boolean;
+	bIsHoveredWidgetHitTestVisible: boolean;
+	ArrowComponent: ArrowComponent;
+	static Load(ResourceName: string): WidgetInteractionComponent;
+	static Find(Outer: UObject, ResourceName: string): WidgetInteractionComponent;
+	static GetDefaultObject(): WidgetInteractionComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetInteractionComponent;
+	SetCustomHitResult(HitResult: HitResult): void;
+	SendKeyChar(Characters: string,bRepeat: boolean): boolean;
+	ScrollWheel(ScrollDelta: number): void;
+	ReleasePointerKey(Key: Key): void;
+	ReleaseKey(Key: Key): boolean;
+	PressPointerKey(Key: Key): void;
+	PressKey(Key: Key,bRepeat: boolean): boolean;
+	PressAndReleaseKey(Key: Key): boolean;
+	IsOverInteractableWidget(): boolean;
+	IsOverHitTestVisibleWidget(): boolean;
+	IsOverFocusableWidget(): boolean;
+	GetLastHitResult(): HitResult;
+	GetHoveredWidgetComponent(): WidgetComponent;
+	Get2DHitLocation(): Vector2D;
+	static C(Other: UObject | any): WidgetInteractionComponent;
+}
+
+declare class WidgetLayoutLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): WidgetLayoutLibrary;
+	static Find(Outer: UObject, ResourceName: string): WidgetLayoutLibrary;
+	static GetDefaultObject(): WidgetLayoutLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetLayoutLibrary;
+	static SlotAsVerticalBoxSlot(Widget: Widget): VerticalBoxSlot;
+	static SlotAsUniformGridSlot(Widget: Widget): UniformGridSlot;
+	static SlotAsOverlaySlot(Widget: Widget): OverlaySlot;
+	static SlotAsHorizontalBoxSlot(Widget: Widget): HorizontalBoxSlot;
+	static SlotAsGridSlot(Widget: Widget): GridSlot;
+	static SlotAsCanvasSlot(Widget: Widget): CanvasPanelSlot;
+	static SlotAsBorderSlot(Widget: Widget): BorderSlot;
+	static RemoveAllWidgets(WorldContextObject: UObject): void;
+	static ProjectWorldLocationToWidgetPosition(PlayerController: PlayerController,WorldLocation: Vector,ScreenPosition?: Vector2D): {ScreenPosition: Vector2D, $: boolean};
+	static GetViewportWidgetGeometry(WorldContextObject: UObject): Geometry;
+	static GetViewportSize(WorldContextObject: UObject): Vector2D;
+	static GetViewportScale(WorldContextObject: UObject): number;
+	static GetPlayerScreenWidgetGeometry(PlayerController: PlayerController): Geometry;
+	static GetMousePositionScaledByDPI(Player: PlayerController,LocationX?: number,LocationY?: number): {LocationX: number, LocationY: number, $: boolean};
+	static GetMousePositionOnViewport(WorldContextObject: UObject): Vector2D;
+	static GetMousePositionOnPlatform(): Vector2D;
+	static C(Other: UObject | any): WidgetLayoutLibrary;
+}
+
+declare class WidgetSwitcher extends PanelWidget { 
+	ActiveWidgetIndex: number;
+	static Load(ResourceName: string): WidgetSwitcher;
+	static Find(Outer: UObject, ResourceName: string): WidgetSwitcher;
+	static GetDefaultObject(): WidgetSwitcher;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetSwitcher;
+	SetActiveWidgetIndex(index: number): void;
+	SetActiveWidget(Widget: Widget): void;
+	GetWidgetAtIndex(index: number): Widget;
+	GetNumWidgets(): number;
+	GetActiveWidgetIndex(): number;
+	GetActiveWidget(): Widget;
+	static C(Other: UObject | any): WidgetSwitcher;
 }
 
-declare class AnimGraphNode_SequenceEvaluator extends AnimGraphNode_AssetPlayerBase { 
-	UNode: AnimNode_SequenceEvaluator;
-	static Load(ResourceName: string): AnimGraphNode_SequenceEvaluator;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SequenceEvaluator;
-	static GetDefaultObject(): AnimGraphNode_SequenceEvaluator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SequenceEvaluator;
-	static C(Other: UObject | any): AnimGraphNode_SequenceEvaluator;
+declare class WidgetSwitcherSlot extends PanelSlot { 
+	Padding: Margin;
+	HorizontalAlignment: EHorizontalAlignment;
+	VerticalAlignment: EVerticalAlignment;
+	static Load(ResourceName: string): WidgetSwitcherSlot;
+	static Find(Outer: UObject, ResourceName: string): WidgetSwitcherSlot;
+	static GetDefaultObject(): WidgetSwitcherSlot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetSwitcherSlot;
+	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
+	SetPadding(InPadding: Margin): void;
+	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
+	static C(Other: UObject | any): WidgetSwitcherSlot;
 }
 
-declare class AnimNode_SequencePlayer extends AnimNode_AssetPlayerBase { 
-	Sequence: AnimSequenceBase;
-	bLoopAnimation: boolean;
+declare class WindowTitleBarArea extends ContentWidget { 
+	bWindowButtonsEnabled: boolean;
+	bDoubleClickTogglesFullscreen: boolean;
+	static Load(ResourceName: string): WindowTitleBarArea;
+	static Find(Outer: UObject, ResourceName: string): WindowTitleBarArea;
+	static GetDefaultObject(): WindowTitleBarArea;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WindowTitleBarArea;
+	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
+	SetPadding(InPadding: Margin): void;
+	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
+	static C(Other: UObject | any): WindowTitleBarArea;
+}
+
+declare class WindowTitleBarAreaSlot extends PanelSlot { 
+	Padding: Margin;
+	HorizontalAlignment: EHorizontalAlignment;
+	VerticalAlignment: EVerticalAlignment;
+	static Load(ResourceName: string): WindowTitleBarAreaSlot;
+	static Find(Outer: UObject, ResourceName: string): WindowTitleBarAreaSlot;
+	static GetDefaultObject(): WindowTitleBarAreaSlot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WindowTitleBarAreaSlot;
+	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
+	SetPadding(InPadding: Margin): void;
+	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
+	static C(Other: UObject | any): WindowTitleBarAreaSlot;
+}
+
+declare class WrapBoxSlot extends PanelSlot { 
+	Padding: Margin;
+	bFillEmptySpace: boolean;
+	FillSpanWhenLessThan: number;
+	HorizontalAlignment: EHorizontalAlignment;
+	VerticalAlignment: EVerticalAlignment;
+	static Load(ResourceName: string): WrapBoxSlot;
+	static Find(Outer: UObject, ResourceName: string): WrapBoxSlot;
+	static GetDefaultObject(): WrapBoxSlot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WrapBoxSlot;
+	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
+	SetPadding(InPadding: Margin): void;
+	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
+	SetFillSpanWhenLessThan(InFillSpanWhenLessThan: number): void;
+	SetFillEmptySpace(InbFillEmptySpace: boolean): void;
+	static C(Other: UObject | any): WrapBoxSlot;
+}
+
+declare class WrapBox extends PanelWidget { 
+	InnerSlotPadding: Vector2D;
+	WrapWidth: number;
+	bExplicitWrapWidth: boolean;
+	static Load(ResourceName: string): WrapBox;
+	static Find(Outer: UObject, ResourceName: string): WrapBox;
+	static GetDefaultObject(): WrapBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WrapBox;
+	SetInnerSlotPadding(InPadding: Vector2D): void;
+	AddChildWrapBox(Content: Widget): WrapBoxSlot;
+	static C(Other: UObject | any): WrapBox;
+}
+
+declare class SourceControlState { 
+	Filename: string;
+	bIsValid: boolean;
+	bIsUnknown: boolean;
+	bCanCheckIn: boolean;
+	bCanCheckOut: boolean;
+	bIsCheckedOut: boolean;
+	bIsCurrent: boolean;
+	bIsSourceControlled: boolean;
+	bIsAdded: boolean;
+	bIsDeleted: boolean;
+	bIsIgnored: boolean;
+	bCanEdit: boolean;
+	bCanDelete: boolean;
+	bIsModified: boolean;
+	bCanAdd: boolean;
+	bIsConflicted: boolean;
+	bCanRevert: boolean;
+	bIsCheckedOutOther: boolean;
+	CheckedOutOther: string;
+	clone() : SourceControlState;
+	static C(Other: UObject | any): SourceControlState;
+}
+
+declare class SourceControlHelpers extends UObject { 
+	static Load(ResourceName: string): SourceControlHelpers;
+	static Find(Outer: UObject, ResourceName: string): SourceControlHelpers;
+	static GetDefaultObject(): SourceControlHelpers;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceControlHelpers;
+	static RevertUnchangedFiles(InFiles: string[],bSilent: boolean): boolean;
+	static RevertUnchangedFile(InFile: string,bSilent: boolean): boolean;
+	static RevertFiles(InFiles: string[],bSilent: boolean): boolean;
+	static RevertFile(InFile: string,bSilent: boolean): boolean;
+	static QueryFileState(InFile: string,bSilent: boolean): SourceControlState;
+	static MarkFilesForAdd(InFiles: string[],bSilent: boolean): boolean;
+	static MarkFileForDelete(InFile: string,bSilent: boolean): boolean;
+	static MarkFileForAdd(InFile: string,bSilent: boolean): boolean;
+	static LastErrorMsg(): string;
+	static IsEnabled(): boolean;
+	static IsAvailable(): boolean;
+	static CurrentProvider(): string;
+	static CopyFile(InSourceFile: string,InDestFile: string,bSilent: boolean): boolean;
+	static CheckOutOrAddFile(InFile: string,bSilent: boolean): boolean;
+	static CheckOutFiles(InFiles: string[],bSilent: boolean): boolean;
+	static CheckOutFile(InFile: string,bSilent: boolean): boolean;
+	static CheckInFiles(InFiles: string[],InDescription: string,bSilent: boolean): boolean;
+	static CheckInFile(InFile: string,InDescription: string,bSilent: boolean): boolean;
+	static C(Other: UObject | any): SourceControlHelpers;
+}
+
+declare class FavoritedBlueprintPaletteItem { 
+	clone() : FavoritedBlueprintPaletteItem;
+	static C(Other: UObject | any): FavoritedBlueprintPaletteItem;
+}
+
+declare class BlueprintPaletteFavorites extends UObject { 
+	CustomFavorites: string[];
+	CurrentFavorites: FavoritedBlueprintPaletteItem[];
+	CurrentProfile: string;
+	static Load(ResourceName: string): BlueprintPaletteFavorites;
+	static Find(Outer: UObject, ResourceName: string): BlueprintPaletteFavorites;
+	static GetDefaultObject(): BlueprintPaletteFavorites;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintPaletteFavorites;
+	static C(Other: UObject | any): BlueprintPaletteFavorites;
+}
+
+declare class K2Node_BaseAsyncTask extends K2Node { 
+	ProxyFactoryFunctionName: string;
+	ProxyFactoryClass: UnrealEngineClass;
+	ProxyClass: UnrealEngineClass;
+	ProxyActivateFunctionName: string;
+	static Load(ResourceName: string): K2Node_BaseAsyncTask;
+	static Find(Outer: UObject, ResourceName: string): K2Node_BaseAsyncTask;
+	static GetDefaultObject(): K2Node_BaseAsyncTask;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BaseAsyncTask;
+	static C(Other: UObject | any): K2Node_BaseAsyncTask;
+}
+
+declare class K2Node_AsyncAction extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_AsyncAction;
+	static Find(Outer: UObject, ResourceName: string): K2Node_AsyncAction;
+	static GetDefaultObject(): K2Node_AsyncAction;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AsyncAction;
+	static C(Other: UObject | any): K2Node_AsyncAction;
+}
+
+declare type EBlueprintPinStyleType = 'BPST_Original' | 'BPST_VariantA' | 'BPST_MAX';
+declare var EBlueprintPinStyleType : { BPST_Original:'BPST_Original',BPST_VariantA:'BPST_VariantA',BPST_MAX:'BPST_MAX', };
+declare type EGraphPanningMouseButton = 'Right' | 'Middle' | 'Both' | 'EGraphPanningMouseButton_MAX';
+declare var EGraphPanningMouseButton : { Right:'Right',Middle:'Middle',Both:'Both',EGraphPanningMouseButton_MAX:'EGraphPanningMouseButton_MAX', };
+declare class GraphEditorSettings extends UObject { 
+	DataPinStyle: EBlueprintPinStyleType;
+	PanningMouseButton: EGraphPanningMouseButton;
+	PaddingAbovePin: number;
+	PaddingBelowPin: number;
+	PaddingRightOfInput: number;
+	PaddingLeftOfOutput: number;
+	PaddingTowardsNodeEdge: number;
+	bTreatSplinesLikePins: boolean;
+	SplineHoverTolerance: number;
+	ForwardSplineHorizontalDeltaRange: number;
+	ForwardSplineVerticalDeltaRange: number;
+	ForwardSplineTangentFromHorizontalDelta: Vector2D;
+	ForwardSplineTangentFromVerticalDelta: Vector2D;
+	BackwardSplineHorizontalDeltaRange: number;
+	BackwardSplineVerticalDeltaRange: number;
+	BackwardSplineTangentFromHorizontalDelta: Vector2D;
+	BackwardSplineTangentFromVerticalDelta: Vector2D;
+	DefaultPinTypeColor: LinearColor;
+	ExecutionPinTypeColor: LinearColor;
+	BooleanPinTypeColor: LinearColor;
+	BytePinTypeColor: LinearColor;
+	ClassPinTypeColor: LinearColor;
+	IntPinTypeColor: LinearColor;
+	FloatPinTypeColor: LinearColor;
+	NamePinTypeColor: LinearColor;
+	SoftObjectPinTypeColor: LinearColor;
+	SoftClassPinTypeColor: LinearColor;
+	DelegatePinTypeColor: LinearColor;
+	ObjectPinTypeColor: LinearColor;
+	InterfacePinTypeColor: LinearColor;
+	StringPinTypeColor: LinearColor;
+	TextPinTypeColor: LinearColor;
+	StructPinTypeColor: LinearColor;
+	WildcardPinTypeColor: LinearColor;
+	VectorPinTypeColor: LinearColor;
+	RotatorPinTypeColor: LinearColor;
+	TransformPinTypeColor: LinearColor;
+	IndexPinTypeColor: LinearColor;
+	EventNodeTitleColor: LinearColor;
+	FunctionCallNodeTitleColor: LinearColor;
+	PureFunctionCallNodeTitleColor: LinearColor;
+	ParentFunctionCallNodeTitleColor: LinearColor;
+	FunctionTerminatorNodeTitleColor: LinearColor;
+	ExecBranchNodeTitleColor: LinearColor;
+	ExecSequenceNodeTitleColor: LinearColor;
+	ResultNodeTitleColor: LinearColor;
+	DefaultCommentNodeTitleColor: LinearColor;
+	PreviewNodeTitleColor: LinearColor;
+	DefaultDataWireThickness: number;
+	DefaultExecutionWireThickness: number;
+	TraceAttackColor: LinearColor;
+	TraceAttackWireThickness: number;
+	TraceAttackHoldPeriod: number;
+	TraceDecayPeriod: number;
+	TraceDecayExponent: number;
+	TraceSustainColor: LinearColor;
+	TraceSustainWireThickness: number;
+	TraceSustainHoldPeriod: number;
+	TraceReleaseColor: LinearColor;
+	TraceReleaseWireThickness: number;
+	TraceReleasePeriod: number;
+	TraceReleaseExponent: number;
+	TracePositionBonusPeriod: number;
+	TracePositionExponent: number;
+	static Load(ResourceName: string): GraphEditorSettings;
+	static Find(Outer: UObject, ResourceName: string): GraphEditorSettings;
+	static GetDefaultObject(): GraphEditorSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GraphEditorSettings;
+	static C(Other: UObject | any): GraphEditorSettings;
+}
+
+declare class AnimationConduitGraphSchema extends EdGraphSchema_K2 { 
+	static Load(ResourceName: string): AnimationConduitGraphSchema;
+	static Find(Outer: UObject, ResourceName: string): AnimationConduitGraphSchema;
+	static GetDefaultObject(): AnimationConduitGraphSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationConduitGraphSchema;
+	static C(Other: UObject | any): AnimationConduitGraphSchema;
+}
+
+declare class AnimationGraph extends EdGraph { 
+	static Load(ResourceName: string): AnimationGraph;
+	static Find(Outer: UObject, ResourceName: string): AnimationGraph;
+	static GetDefaultObject(): AnimationGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationGraph;
+	static C(Other: UObject | any): AnimationGraph;
+}
+
+declare class OptionalPinFromProperty { 
+	PropertyName: string;
+	PropertyFriendlyName: string;
+	PropertyTooltip: string;
+	CategoryName: string;
+	bShowPin: boolean;
+	bCanToggleVisibility: boolean;
+	bPropertyIsCustomized: boolean;
+	bHasOverridePin: boolean;
+	bIsMarkedForAdvancedDisplay: boolean;
+	bIsOverrideEnabled: boolean;
+	bIsSetValuePinVisible: boolean;
+	bIsOverridePinVisible: boolean;
+	clone() : OptionalPinFromProperty;
+	static C(Other: UObject | any): OptionalPinFromProperty;
+}
+
+declare type EBlueprintUsage = 'NoProperties' | 'DoesNotUseBlueprint' | 'UsesBlueprint' | 'EBlueprintUsage_MAX';
+declare var EBlueprintUsage : { NoProperties:'NoProperties',DoesNotUseBlueprint:'DoesNotUseBlueprint',UsesBlueprint:'UsesBlueprint',EBlueprintUsage_MAX:'EBlueprintUsage_MAX', };
+declare class AnimGraphNode_Base extends K2Node { 
+	ShowPinForProperties: OptionalPinFromProperty[];
+	BlueprintUsage: EBlueprintUsage;
+	static Load(ResourceName: string): AnimGraphNode_Base;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Base;
+	static GetDefaultObject(): AnimGraphNode_Base;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Base;
+	static C(Other: UObject | any): AnimGraphNode_Base;
+}
+
+declare type EPostCopyOperation = 'None' | 'LogicalNegateBool' | 'EPostCopyOperation_MAX';
+declare var EPostCopyOperation : { None:'None',LogicalNegateBool:'LogicalNegateBool',EPostCopyOperation_MAX:'EPostCopyOperation_MAX', };
+declare type ECopyType = 'MemCopy' | 'BoolProperty' | 'StructProperty' | 'ObjectProperty' | 'ECopyType_MAX';
+declare var ECopyType : { MemCopy:'MemCopy',BoolProperty:'BoolProperty',StructProperty:'StructProperty',ObjectProperty:'ObjectProperty',ECopyType_MAX:'ECopyType_MAX', };
+declare class ExposedValueCopyRecord { 
+	SourceProperty: Property;
+	SourcePropertyName: string;
+	SourceSubPropertyName: string;
+	SourceArrayIndex: number;
+	DestProperty: Property;
+	DestArrayIndex: number;
+	Size: number;
+	bInstanceIsTarget: boolean;
+	PostCopyOperation: EPostCopyOperation;
+	CopyType: ECopyType;
+	CachedSourceProperty: Property;
+	CachedSourceStructSubProperty: Property;
+	clone() : ExposedValueCopyRecord;
+	static C(Other: UObject | any): ExposedValueCopyRecord;
+}
+
+declare class ExposedValueHandler { 
+	BoundFunction: string;
+	CopyRecords: ExposedValueCopyRecord[];
+	UFunction: UFunction;
+	clone() : ExposedValueHandler;
+	static C(Other: UObject | any): ExposedValueHandler;
+}
+
+declare class AnimNode_Base { 
+	EvaluateGraphExposedInputs: ExposedValueHandler;
+	clone() : AnimNode_Base;
+	static C(Other: UObject | any): AnimNode_Base;
+}
+
+declare class PoseLinkBase { 
+	LinkID: number;
+	SourceLinkID: number;
+	clone() : PoseLinkBase;
+	static C(Other: UObject | any): PoseLinkBase;
+}
+
+declare class PoseLink extends PoseLinkBase { 
+	clone() : PoseLink;
+	static C(Other: UObject | any): PoseLink;
+}
+
+declare class AnimNode_Root extends AnimNode_Base { 
+	Result: PoseLink;
+	clone() : AnimNode_Root;
+	static C(Other: UObject | any): AnimNode_Root;
+}
+
+declare class AnimNode_StateResult extends AnimNode_Root { 
+	clone() : AnimNode_StateResult;
+	static C(Other: UObject | any): AnimNode_StateResult;
+}
+
+declare class AnimGraphNode_StateResult extends AnimGraphNode_Base { 
+	UNode: AnimNode_StateResult;
+	static Load(ResourceName: string): AnimGraphNode_StateResult;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_StateResult;
+	static GetDefaultObject(): AnimGraphNode_StateResult;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_StateResult;
+	static C(Other: UObject | any): AnimGraphNode_StateResult;
+}
+
+declare class AnimGraphNode_CustomTransitionResult extends AnimGraphNode_StateResult { 
+	static Load(ResourceName: string): AnimGraphNode_CustomTransitionResult;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CustomTransitionResult;
+	static GetDefaultObject(): AnimGraphNode_CustomTransitionResult;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CustomTransitionResult;
+	static C(Other: UObject | any): AnimGraphNode_CustomTransitionResult;
+}
+
+declare class AnimationCustomTransitionGraph extends AnimationGraph { 
+	MyResultNode: AnimGraphNode_CustomTransitionResult;
+	static Load(ResourceName: string): AnimationCustomTransitionGraph;
+	static Find(Outer: UObject, ResourceName: string): AnimationCustomTransitionGraph;
+	static GetDefaultObject(): AnimationCustomTransitionGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationCustomTransitionGraph;
+	static C(Other: UObject | any): AnimationCustomTransitionGraph;
+}
+
+declare class AnimationGraphSchema extends EdGraphSchema_K2 { 
+	PN_SequenceName: string;
+	NAME_NeverAsPin: string;
+	NAME_PinHiddenByDefault: string;
+	NAME_PinShownByDefault: string;
+	NAME_AlwaysAsPin: string;
+	NAME_CustomizeProperty: string;
+	NAME_OnEvaluate: string;
+	DefaultEvaluationHandlerName: string;
+	static Load(ResourceName: string): AnimationGraphSchema;
+	static Find(Outer: UObject, ResourceName: string): AnimationGraphSchema;
+	static GetDefaultObject(): AnimationGraphSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationGraphSchema;
+	static C(Other: UObject | any): AnimationGraphSchema;
+}
+
+declare class AnimationCustomTransitionSchema extends AnimationGraphSchema { 
+	static Load(ResourceName: string): AnimationCustomTransitionSchema;
+	static Find(Outer: UObject, ResourceName: string): AnimationCustomTransitionSchema;
+	static GetDefaultObject(): AnimationCustomTransitionSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationCustomTransitionSchema;
+	static C(Other: UObject | any): AnimationCustomTransitionSchema;
+}
+
+declare class AnimationStateGraph extends AnimationGraph { 
+	MyResultNode: AnimGraphNode_StateResult;
+	static Load(ResourceName: string): AnimationStateGraph;
+	static Find(Outer: UObject, ResourceName: string): AnimationStateGraph;
+	static GetDefaultObject(): AnimationStateGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateGraph;
+	static C(Other: UObject | any): AnimationStateGraph;
+}
+
+declare class AnimationStateGraphSchema extends AnimationGraphSchema { 
+	static Load(ResourceName: string): AnimationStateGraphSchema;
+	static Find(Outer: UObject, ResourceName: string): AnimationStateGraphSchema;
+	static GetDefaultObject(): AnimationStateGraphSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateGraphSchema;
+	static C(Other: UObject | any): AnimationStateGraphSchema;
+}
+
+declare class AnimStateEntryNode extends EdGraphNode { 
+	static Load(ResourceName: string): AnimStateEntryNode;
+	static Find(Outer: UObject, ResourceName: string): AnimStateEntryNode;
+	static GetDefaultObject(): AnimStateEntryNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateEntryNode;
+	static C(Other: UObject | any): AnimStateEntryNode;
+}
+
+declare class AnimGraphNode_StateMachineBase extends AnimGraphNode_Base { 
+	EditorStateMachineGraph: AnimationStateMachineGraph;
+	static Load(ResourceName: string): AnimGraphNode_StateMachineBase;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_StateMachineBase;
+	static GetDefaultObject(): AnimGraphNode_StateMachineBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_StateMachineBase;
+	static C(Other: UObject | any): AnimGraphNode_StateMachineBase;
+}
+
+declare class AnimationStateMachineGraph extends EdGraph { 
+	EntryNode: AnimStateEntryNode;
+	OwnerAnimGraphNode: AnimGraphNode_StateMachineBase;
+	static Load(ResourceName: string): AnimationStateMachineGraph;
+	static Find(Outer: UObject, ResourceName: string): AnimationStateMachineGraph;
+	static GetDefaultObject(): AnimationStateMachineGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateMachineGraph;
+	static C(Other: UObject | any): AnimationStateMachineGraph;
+}
+
+declare class AnimationStateMachineSchema extends EdGraphSchema { 
+	static Load(ResourceName: string): AnimationStateMachineSchema;
+	static Find(Outer: UObject, ResourceName: string): AnimationStateMachineSchema;
+	static GetDefaultObject(): AnimationStateMachineSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationStateMachineSchema;
+	static C(Other: UObject | any): AnimationStateMachineSchema;
+}
+
+declare class AnimNode_TransitionResult extends AnimNode_Base { 
+	bCanEnterTransition: boolean;
+	clone() : AnimNode_TransitionResult;
+	static C(Other: UObject | any): AnimNode_TransitionResult;
+}
+
+declare class AnimGraphNode_TransitionResult extends AnimGraphNode_Base { 
+	UNode: AnimNode_TransitionResult;
+	static Load(ResourceName: string): AnimGraphNode_TransitionResult;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TransitionResult;
+	static GetDefaultObject(): AnimGraphNode_TransitionResult;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TransitionResult;
+	static C(Other: UObject | any): AnimGraphNode_TransitionResult;
+}
+
+declare class AnimationTransitionGraph extends AnimationGraph { 
+	MyResultNode: AnimGraphNode_TransitionResult;
+	static Load(ResourceName: string): AnimationTransitionGraph;
+	static Find(Outer: UObject, ResourceName: string): AnimationTransitionGraph;
+	static GetDefaultObject(): AnimationTransitionGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationTransitionGraph;
+	static C(Other: UObject | any): AnimationTransitionGraph;
+}
+
+declare class AnimationTransitionSchema extends EdGraphSchema_K2 { 
+	static Load(ResourceName: string): AnimationTransitionSchema;
+	static Find(Outer: UObject, ResourceName: string): AnimationTransitionSchema;
+	static GetDefaultObject(): AnimationTransitionSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationTransitionSchema;
+	static C(Other: UObject | any): AnimationTransitionSchema;
+}
+
+declare class AnimBlueprintPostCompileValidation extends UObject { 
+	static Load(ResourceName: string): AnimBlueprintPostCompileValidation;
+	static Find(Outer: UObject, ResourceName: string): AnimBlueprintPostCompileValidation;
+	static GetDefaultObject(): AnimBlueprintPostCompileValidation;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimBlueprintPostCompileValidation;
+	static C(Other: UObject | any): AnimBlueprintPostCompileValidation;
+}
+
+declare type EAnimGroupRole = 'CanBeLeader' | 'AlwaysFollower' | 'AlwaysLeader' | 'TransitionLeader' | 'TransitionFollower' | 'EAnimGroupRole_MAX';
+declare var EAnimGroupRole : { CanBeLeader:'CanBeLeader',AlwaysFollower:'AlwaysFollower',AlwaysLeader:'AlwaysLeader',TransitionLeader:'TransitionLeader',TransitionFollower:'TransitionFollower',EAnimGroupRole_MAX:'EAnimGroupRole_MAX', };
+declare class AnimationGroupReference { 
+	GroupName: string;
+	GroupRole: EAnimGroupRole;
+	clone() : AnimationGroupReference;
+	static C(Other: UObject | any): AnimationGroupReference;
+}
+
+declare class AnimGraphNode_AssetPlayerBase extends AnimGraphNode_Base { 
+	SyncGroup: AnimationGroupReference;
+	static Load(ResourceName: string): AnimGraphNode_AssetPlayerBase;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_AssetPlayerBase;
+	static GetDefaultObject(): AnimGraphNode_AssetPlayerBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_AssetPlayerBase;
+	static C(Other: UObject | any): AnimGraphNode_AssetPlayerBase;
+}
+
+declare class AnimGraphNode_BlendSpaceBase extends AnimGraphNode_AssetPlayerBase { 
+	static Load(ResourceName: string): AnimGraphNode_BlendSpaceBase;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpaceBase;
+	static GetDefaultObject(): AnimGraphNode_BlendSpaceBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpaceBase;
+	static C(Other: UObject | any): AnimGraphNode_BlendSpaceBase;
+}
+
+declare class AnimNode_AssetPlayerBase extends AnimNode_Base { 
+	bIgnoreForRelevancyTest: boolean;
+	GroupIndex: number;
+	GroupRole: EAnimGroupRole;
+	BlendWeight: number;
+	InternalTimeAccumulator: number;
+	clone() : AnimNode_AssetPlayerBase;
+	static C(Other: UObject | any): AnimNode_AssetPlayerBase;
+}
+
+declare type EFilterInterpolationType = 'BSIT_Average' | 'BSIT_Linear' | 'BSIT_Cubic' | 'BSIT_MAX';
+declare var EFilterInterpolationType : { BSIT_Average:'BSIT_Average',BSIT_Linear:'BSIT_Linear',BSIT_Cubic:'BSIT_Cubic',BSIT_MAX:'BSIT_MAX', };
+declare class InterpolationParameter { 
+	InterpolationTime: number;
+	InterpolationType: EFilterInterpolationType;
+	clone() : InterpolationParameter;
+	static C(Other: UObject | any): InterpolationParameter;
+}
+
+declare type ENotifyTriggerMode = 'AllAnimations' | 'HighestWeightedAnimation' | 'None' | 'ENotifyTriggerMode_MAX';
+declare var ENotifyTriggerMode : { AllAnimations:'AllAnimations',HighestWeightedAnimation:'HighestWeightedAnimation',None:'None',ENotifyTriggerMode_MAX:'ENotifyTriggerMode_MAX', };
+declare class PerBoneInterpolation { 
+	BoneReference: BoneReference;
+	InterpolationSpeedPerSec: number;
+	clone() : PerBoneInterpolation;
+	static C(Other: UObject | any): PerBoneInterpolation;
+}
+
+declare class BlendSample { 
+	Animation: AnimSequence;
+	SampleValue: Vector;
+	RateScale: number;
+	bSnapToGrid: boolean;
+	bIsValid: boolean;
+	clone() : BlendSample;
+	static C(Other: UObject | any): BlendSample;
+}
+
+declare class EditorElement { 
+	Indices: number;
+	Weights: number;
+	clone() : EditorElement;
+	static C(Other: UObject | any): EditorElement;
+}
+
+declare class BlendParameter { 
+	DisplayName: string;
+	Min: number;
+	Max: number;
+	GridNum: number;
+	clone() : BlendParameter;
+	static C(Other: UObject | any): BlendParameter;
+}
+
+declare class BlendSpaceBase extends AnimationAsset { 
+	bRotationBlendInMeshSpace: boolean;
+	PreviewBasePose: AnimSequence;
+	AnimLength: number;
+	InterpolationParam: InterpolationParameter;
+	TargetWeightInterpolationSpeedPerSec: number;
+	NotifyTriggerMode: ENotifyTriggerMode;
+	PerBoneBlend: PerBoneInterpolation[];
+	SampleIndexWithMarkers: number;
+	SampleData: BlendSample[];
+	GridSamples: EditorElement[];
+	BlendParameters: BlendParameter;
+	static Load(ResourceName: string): BlendSpaceBase;
+	static Find(Outer: UObject, ResourceName: string): BlendSpaceBase;
+	static GetDefaultObject(): BlendSpaceBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlendSpaceBase;
+	static C(Other: UObject | any): BlendSpaceBase;
+}
+
+declare class BlendFilter { 
+	clone() : BlendFilter;
+	static C(Other: UObject | any): BlendFilter;
+}
+
+declare class BlendSampleData { 
+	SampleDataIndex: number;
+	Animation: AnimSequence;
+	TotalWeight: number;
+	Time: number;
+	PreviousTime: number;
+	SamplePlayRate: number;
+	clone() : BlendSampleData;
+	static C(Other: UObject | any): BlendSampleData;
+}
+
+declare class AnimNode_BlendSpacePlayer extends AnimNode_AssetPlayerBase { 
+	X: number;
+	Y: number;
+	Z: number;
 	PlayRate: number;
+	bLoop: boolean;
 	StartPosition: number;
-	clone() : AnimNode_SequencePlayer;
-	static C(Other: UObject | any): AnimNode_SequencePlayer;
+	BlendSpace: BlendSpaceBase;
+	bResetPlayTimeWhenBlendSpaceChanges: boolean;
+	BlendFilter: BlendFilter;
+	BlendSampleDataCache: BlendSampleData[];
+	PreviousBlendSpace: BlendSpaceBase;
+	clone() : AnimNode_BlendSpacePlayer;
+	static C(Other: UObject | any): AnimNode_BlendSpacePlayer;
 }
 
-declare class AnimGraphNode_SequencePlayer extends AnimGraphNode_AssetPlayerBase { 
-	UNode: AnimNode_SequencePlayer;
-	static Load(ResourceName: string): AnimGraphNode_SequencePlayer;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SequencePlayer;
-	static GetDefaultObject(): AnimGraphNode_SequencePlayer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SequencePlayer;
-	static C(Other: UObject | any): AnimGraphNode_SequencePlayer;
+declare class AnimNode_AimOffsetLookAt extends AnimNode_BlendSpacePlayer { 
+	BasePose: PoseLink;
+	LODThreshold: number;
+	bIsLODEnabled: boolean;
+	LookAtLocation: Vector;
+	SourceSocketName: string;
+	PivotSocketName: string;
+	SocketAxis: Vector;
+	Alpha: number;
+	SocketBoneReference: BoneReference;
+	SocketLocalTransform: Transform;
+	PivotSocketBoneReference: BoneReference;
+	PivotSocketLocalTransform: Transform;
+	clone() : AnimNode_AimOffsetLookAt;
+	static C(Other: UObject | any): AnimNode_AimOffsetLookAt;
 }
 
-declare class AnimNode_Slot extends AnimNode_Base { 
-	Source: PoseLink;
-	SlotName: string;
-	clone() : AnimNode_Slot;
-	static C(Other: UObject | any): AnimNode_Slot;
+declare class AnimGraphNode_AimOffsetLookAt extends AnimGraphNode_BlendSpaceBase { 
+	UNode: AnimNode_AimOffsetLookAt;
+	static Load(ResourceName: string): AnimGraphNode_AimOffsetLookAt;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_AimOffsetLookAt;
+	static GetDefaultObject(): AnimGraphNode_AimOffsetLookAt;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_AimOffsetLookAt;
+	static C(Other: UObject | any): AnimGraphNode_AimOffsetLookAt;
 }
 
-declare class AnimGraphNode_Slot extends AnimGraphNode_Base { 
-	UNode: AnimNode_Slot;
-	static Load(ResourceName: string): AnimGraphNode_Slot;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Slot;
-	static GetDefaultObject(): AnimGraphNode_Slot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Slot;
-	static C(Other: UObject | any): AnimGraphNode_Slot;
+declare class AnimGraphNode_SkeletalControlBase extends AnimGraphNode_Base { 
+	static Load(ResourceName: string): AnimGraphNode_SkeletalControlBase;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SkeletalControlBase;
+	static GetDefaultObject(): AnimGraphNode_SkeletalControlBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SkeletalControlBase;
+	static C(Other: UObject | any): AnimGraphNode_SkeletalControlBase;
 }
 
-declare type ESplineBoneAxis = 'X' | 'Y' | 'Z' | 'ESplineBoneAxis_MAX';
-declare var ESplineBoneAxis : { X:'X',Y:'Y',Z:'Z',ESplineBoneAxis_MAX:'ESplineBoneAxis_MAX', };
-declare class SplineIKCachedBoneData { 
+declare class ComponentSpacePoseLink extends PoseLinkBase { 
+	clone() : ComponentSpacePoseLink;
+	static C(Other: UObject | any): ComponentSpacePoseLink;
+}
+
+declare type EAnimAlphaInputType = 'Float' | 'Bool' | 'Curve' | 'EAnimAlphaInputType_MAX';
+declare var EAnimAlphaInputType : { Float:'Float',Bool:'Bool',Curve:'Curve',EAnimAlphaInputType_MAX:'EAnimAlphaInputType_MAX', };
+declare class InputScaleBias { 
+	Scale: number;
+	Bias: number;
+	clone() : InputScaleBias;
+	static C(Other: UObject | any): InputScaleBias;
+}
+
+declare class InputAlphaBoolBlend { 
+	BlendInTime: number;
+	BlendOutTime: number;
+	BlendOption: EAlphaBlendOption;
+	bInitialized: boolean;
+	CustomCurve: CurveFloat;
+	AlphaBlend: AlphaBlend;
+	clone() : InputAlphaBoolBlend;
+	static C(Other: UObject | any): InputAlphaBoolBlend;
+}
+
+declare class InputRange { 
+	Min: number;
+	Max: number;
+	clone() : InputRange;
+	static C(Other: UObject | any): InputRange;
+}
+
+declare class InputScaleBiasClamp { 
+	bMapRange: boolean;
+	bClampResult: boolean;
+	bInterpResult: boolean;
+	bInitialized: boolean;
+	InRange: InputRange;
+	OutRange: InputRange;
+	Scale: number;
+	Bias: number;
+	ClampMin: number;
+	ClampMax: number;
+	InterpSpeedIncreasing: number;
+	InterpSpeedDecreasing: number;
+	InterpolatedResult: number;
+	clone() : InputScaleBiasClamp;
+	static C(Other: UObject | any): InputScaleBiasClamp;
+}
+
+declare class AnimNode_SkeletalControlBase extends AnimNode_Base { 
+	ComponentPose: ComponentSpacePoseLink;
+	LODThreshold: number;
+	ActualAlpha: number;
+	AlphaInputType: EAnimAlphaInputType;
+	bAlphaBoolEnabled: boolean;
+	Alpha: number;
+	AlphaScaleBias: InputScaleBias;
+	AlphaBoolBlend: InputAlphaBoolBlend;
+	AlphaCurveName: string;
+	AlphaScaleBiasClamp: InputScaleBiasClamp;
+	clone() : AnimNode_SkeletalControlBase;
+	static C(Other: UObject | any): AnimNode_SkeletalControlBase;
+}
+
+declare type AnimPhysSimSpaceType = 'Component' | 'Actor' | 'World' | 'RootRelative' | 'BoneRelative' | 'AnimPhysSimSpaceType_MAX';
+declare var AnimPhysSimSpaceType : { Component:'Component',Actor:'Actor',World:'World',RootRelative:'RootRelative',BoneRelative:'BoneRelative',AnimPhysSimSpaceType_MAX:'AnimPhysSimSpaceType_MAX', };
+declare type AnimPhysLinearConstraintType = 'Free' | 'Limited' | 'AnimPhysLinearConstraintType_MAX';
+declare var AnimPhysLinearConstraintType : { Free:'Free',Limited:'Limited',AnimPhysLinearConstraintType_MAX:'AnimPhysLinearConstraintType_MAX', };
+declare type AnimPhysAngularConstraintType = 'Angular' | 'Cone' | 'AnimPhysAngularConstraintType_MAX';
+declare var AnimPhysAngularConstraintType : { Angular:'Angular',Cone:'Cone',AnimPhysAngularConstraintType_MAX:'AnimPhysAngularConstraintType_MAX', };
+declare type AnimPhysTwistAxis = 'AxisX' | 'AxisY' | 'AxisZ' | 'AnimPhysTwistAxis_MAX';
+declare var AnimPhysTwistAxis : { AxisX:'AxisX',AxisY:'AxisY',AxisZ:'AxisZ',AnimPhysTwistAxis_MAX:'AnimPhysTwistAxis_MAX', };
+declare class AnimPhysConstraintSetup { 
+	LinearXLimitType: AnimPhysLinearConstraintType;
+	LinearYLimitType: AnimPhysLinearConstraintType;
+	LinearZLimitType: AnimPhysLinearConstraintType;
+	LinearAxesMin: Vector;
+	LinearAxesMax: Vector;
+	AngularConstraintType: AnimPhysAngularConstraintType;
+	TwistAxis: AnimPhysTwistAxis;
+	ConeAngle: number;
+	AngularXAngle: number;
+	AngularYAngle: number;
+	AngularZAngle: number;
+	AngularLimitsMin: Vector;
+	AngularLimitsMax: Vector;
+	AngularTargetAxis: AnimPhysTwistAxis;
+	AngularTarget: Vector;
+	bLinearFullyLocked: boolean;
+	clone() : AnimPhysConstraintSetup;
+	static C(Other: UObject | any): AnimPhysConstraintSetup;
+}
+
+declare class AnimPhysPlanarLimit { 
+	DrivingBone: BoneReference;
+	PlaneTransform: Transform;
+	clone() : AnimPhysPlanarLimit;
+	static C(Other: UObject | any): AnimPhysPlanarLimit;
+}
+
+declare type ESphericalLimitType = 'Inner' | 'Outer' | 'ESphericalLimitType_MAX';
+declare var ESphericalLimitType : { Inner:'Inner',Outer:'Outer',ESphericalLimitType_MAX:'ESphericalLimitType_MAX', };
+declare class AnimPhysSphericalLimit { 
+	DrivingBone: BoneReference;
+	SphereLocalOffset: Vector;
+	LimitRadius: number;
+	LimitType: ESphericalLimitType;
+	clone() : AnimPhysSphericalLimit;
+	static C(Other: UObject | any): AnimPhysSphericalLimit;
+}
+
+declare type AnimPhysCollisionType = 'CoM' | 'CustomSphere' | 'InnerSphere' | 'OuterSphere' | 'AnimPhysCollisionType_MAX';
+declare var AnimPhysCollisionType : { CoM:'CoM',CustomSphere:'CustomSphere',InnerSphere:'InnerSphere',OuterSphere:'OuterSphere',AnimPhysCollisionType_MAX:'AnimPhysCollisionType_MAX', };
+declare class AnimNode_AnimDynamics extends AnimNode_SkeletalControlBase { 
+	SimulationSpace: AnimPhysSimSpaceType;
+	RelativeSpaceBone: BoneReference;
+	bChain: boolean;
+	BoundBone: BoneReference;
+	ChainEnd: BoneReference;
+	BoxExtents: Vector;
+	LocalJointOffset: Vector;
+	GravityScale: number;
+	GravityOverride: Vector;
+	bUseGravityOverride: boolean;
+	bLinearSpring: boolean;
+	bAngularSpring: boolean;
+	LinearSpringConstant: number;
+	AngularSpringConstant: number;
+	bEnableWind: boolean;
+	bWindWasEnabled: boolean;
+	WindScale: number;
+	ComponentLinearAccScale: Vector;
+	ComponentLinearVelScale: Vector;
+	ComponentAppliedLinearAccClamp: Vector;
+	bOverrideLinearDamping: boolean;
+	LinearDampingOverride: number;
+	bOverrideAngularDamping: boolean;
+	AngularDampingOverride: number;
+	bOverrideAngularBias: boolean;
+	AngularBiasOverride: number;
+	bDoUpdate: boolean;
+	bDoEval: boolean;
+	NumSolverIterationsPreUpdate: number;
+	NumSolverIterationsPostUpdate: number;
+	ConstraintSetup: AnimPhysConstraintSetup;
+	bUsePlanarLimit: boolean;
+	PlanarLimits: AnimPhysPlanarLimit[];
+	bUseSphericalLimits: boolean;
+	SphericalLimits: AnimPhysSphericalLimit[];
+	CollisionType: AnimPhysCollisionType;
+	SphereCollisionRadius: number;
+	ExternalForce: Vector;
+	clone() : AnimNode_AnimDynamics;
+	static C(Other: UObject | any): AnimNode_AnimDynamics;
+}
+
+declare class AnimGraphNode_AnimDynamics extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_AnimDynamics;
+	bPreviewLive: boolean;
+	bShowLinearLimits: boolean;
+	bShowAngularLimits: boolean;
+	bShowPlanarLimit: boolean;
+	bShowSphericalLimit: boolean;
+	bShowCollisionSpheres: boolean;
+	LastPreviewComponent: SkeletalMeshComponent;
+	static Load(ResourceName: string): AnimGraphNode_AnimDynamics;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_AnimDynamics;
+	static GetDefaultObject(): AnimGraphNode_AnimDynamics;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_AnimDynamics;
+	static C(Other: UObject | any): AnimGraphNode_AnimDynamics;
+}
+
+declare class AnimNode_ApplyAdditive extends AnimNode_Base { 
+	Base: PoseLink;
+	Additive: PoseLink;
+	Alpha: number;
+	AlphaScaleBias: InputScaleBias;
+	LODThreshold: number;
+	ActualAlpha: number;
+	AlphaInputType: EAnimAlphaInputType;
+	bAlphaBoolEnabled: boolean;
+	AlphaBoolBlend: InputAlphaBoolBlend;
+	AlphaCurveName: string;
+	AlphaScaleBiasClamp: InputScaleBiasClamp;
+	clone() : AnimNode_ApplyAdditive;
+	static C(Other: UObject | any): AnimNode_ApplyAdditive;
+}
+
+declare class AnimGraphNode_ApplyAdditive extends AnimGraphNode_Base { 
+	UNode: AnimNode_ApplyAdditive;
+	static Load(ResourceName: string): AnimGraphNode_ApplyAdditive;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ApplyAdditive;
+	static GetDefaultObject(): AnimGraphNode_ApplyAdditive;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ApplyAdditive;
+	static C(Other: UObject | any): AnimGraphNode_ApplyAdditive;
+}
+
+declare class AngularRangeLimit { 
+	LimitMin: Vector;
+	LimitMax: Vector;
 	Bone: BoneReference;
-	RefSkeletonIndex: number;
-	clone() : SplineIKCachedBoneData;
-	static C(Other: UObject | any): SplineIKCachedBoneData;
+	clone() : AngularRangeLimit;
+	static C(Other: UObject | any): AngularRangeLimit;
 }
 
-declare class AnimNode_SplineIK extends AnimNode_SkeletalControlBase { 
-	StartBone: BoneReference;
-	EndBone: BoneReference;
-	BoneAxis: BoneAxis;
-	bAutoCalculateSpline: boolean;
-	PointCount: number;
-	ControlPoints: Transform[];
-	Roll: number;
-	TwistStart: number;
-	TwistEnd: number;
-	TwistBlend: AlphaBlend;
-	Stretch: number;
-	Offset: number;
-	BoneSpline: SplineCurves;
-	OriginalSplineLength: number;
-	CachedBoneReferences: SplineIKCachedBoneData[];
-	CachedBoneLengths: number[];
-	CachedOffsetRotations: Quat[];
-	clone() : AnimNode_SplineIK;
-	static C(Other: UObject | any): AnimNode_SplineIK;
+declare class AnimNode_ApplyLimits extends AnimNode_SkeletalControlBase { 
+	AngularRangeLimits: AngularRangeLimit[];
+	AngularOffsets: Vector[];
+	clone() : AnimNode_ApplyLimits;
+	static C(Other: UObject | any): AnimNode_ApplyLimits;
 }
 
-declare class AnimGraphNode_SplineIK extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_SplineIK;
-	static Load(ResourceName: string): AnimGraphNode_SplineIK;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SplineIK;
-	static GetDefaultObject(): AnimGraphNode_SplineIK;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SplineIK;
-	static C(Other: UObject | any): AnimGraphNode_SplineIK;
+declare class AnimGraphNode_ApplyLimits extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_ApplyLimits;
+	static Load(ResourceName: string): AnimGraphNode_ApplyLimits;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ApplyLimits;
+	static GetDefaultObject(): AnimGraphNode_ApplyLimits;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ApplyLimits;
+	static C(Other: UObject | any): AnimGraphNode_ApplyLimits;
 }
 
-declare class AnimNode_SpringBone extends AnimNode_SkeletalControlBase { 
-	SpringBone: BoneReference;
-	bLimitDisplacement: boolean;
-	MaxDisplacement: number;
-	SpringStiffness: number;
-	SpringDamping: number;
-	ErrorResetThresh: number;
-	bNoZSpring: boolean;
-	bTranslateX: boolean;
-	bTranslateY: boolean;
-	bTranslateZ: boolean;
-	bRotateX: boolean;
-	bRotateY: boolean;
-	bRotateZ: boolean;
-	clone() : AnimNode_SpringBone;
-	static C(Other: UObject | any): AnimNode_SpringBone;
+declare class AnimNode_ApplyMeshSpaceAdditive extends AnimNode_Base { 
+	Base: PoseLink;
+	Additive: PoseLink;
+	Alpha: number;
+	AlphaScaleBias: InputScaleBias;
+	LODThreshold: number;
+	ActualAlpha: number;
+	clone() : AnimNode_ApplyMeshSpaceAdditive;
+	static C(Other: UObject | any): AnimNode_ApplyMeshSpaceAdditive;
+}
+
+declare class AnimGraphNode_ApplyMeshSpaceAdditive extends AnimGraphNode_Base { 
+	UNode: AnimNode_ApplyMeshSpaceAdditive;
+	static Load(ResourceName: string): AnimGraphNode_ApplyMeshSpaceAdditive;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ApplyMeshSpaceAdditive;
+	static GetDefaultObject(): AnimGraphNode_ApplyMeshSpaceAdditive;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ApplyMeshSpaceAdditive;
+	static C(Other: UObject | any): AnimGraphNode_ApplyMeshSpaceAdditive;
+}
+
+declare class BlendBoneByChannelEntry { 
+	SourceBone: BoneReference;
+	TargetBone: BoneReference;
+	bBlendTranslation: boolean;
+	bBlendRotation: boolean;
+	bBlendScale: boolean;
+	clone() : BlendBoneByChannelEntry;
+	static C(Other: UObject | any): BlendBoneByChannelEntry;
 }
 
-declare class AnimGraphNode_SpringBone extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_SpringBone;
-	static Load(ResourceName: string): AnimGraphNode_SpringBone;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SpringBone;
-	static GetDefaultObject(): AnimGraphNode_SpringBone;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SpringBone;
-	static C(Other: UObject | any): AnimGraphNode_SpringBone;
+declare type EBoneControlSpace = 'BCS_WorldSpace' | 'BCS_ComponentSpace' | 'BCS_ParentBoneSpace' | 'BCS_BoneSpace' | 'BCS_MAX';
+declare var EBoneControlSpace : { BCS_WorldSpace:'BCS_WorldSpace',BCS_ComponentSpace:'BCS_ComponentSpace',BCS_ParentBoneSpace:'BCS_ParentBoneSpace',BCS_BoneSpace:'BCS_BoneSpace',BCS_MAX:'BCS_MAX', };
+declare class AnimNode_BlendBoneByChannel extends AnimNode_Base { 
+	A: PoseLink;
+	B: PoseLink;
+	Alpha: number;
+	AlphaScaleBias: InputScaleBias;
+	BoneDefinitions: BlendBoneByChannelEntry[];
+	TransformsSpace: EBoneControlSpace;
+	InternalBlendAlpha: number;
+	bBIsRelevant: boolean;
+	ValidBoneEntries: BlendBoneByChannelEntry[];
+	clone() : AnimNode_BlendBoneByChannel;
+	static C(Other: UObject | any): AnimNode_BlendBoneByChannel;
 }
 
-declare class AnimNode_StateMachine extends AnimNode_Base { 
-	StateMachineIndexInClass: number;
-	MaxTransitionsPerFrame: number;
-	bSkipFirstUpdateTransition: boolean;
-	CurrentState: number;
-	ElapsedTime: number;
-	clone() : AnimNode_StateMachine;
-	static C(Other: UObject | any): AnimNode_StateMachine;
+declare class AnimGraphNode_BlendBoneByChannel extends AnimGraphNode_Base { 
+	BlendNode: AnimNode_BlendBoneByChannel;
+	static Load(ResourceName: string): AnimGraphNode_BlendBoneByChannel;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendBoneByChannel;
+	static GetDefaultObject(): AnimGraphNode_BlendBoneByChannel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendBoneByChannel;
+	static C(Other: UObject | any): AnimGraphNode_BlendBoneByChannel;
 }
 
-declare class AnimGraphNode_StateMachine extends AnimGraphNode_StateMachineBase { 
-	UNode: AnimNode_StateMachine;
-	static Load(ResourceName: string): AnimGraphNode_StateMachine;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_StateMachine;
-	static GetDefaultObject(): AnimGraphNode_StateMachine;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_StateMachine;
-	static C(Other: UObject | any): AnimGraphNode_StateMachine;
+declare class AnimGraphNode_BlendListBase extends AnimGraphNode_Base { 
+	static Load(ResourceName: string): AnimGraphNode_BlendListBase;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListBase;
+	static GetDefaultObject(): AnimGraphNode_BlendListBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListBase;
+	static C(Other: UObject | any): AnimGraphNode_BlendListBase;
 }
 
-declare class AnimNode_SubInput extends AnimNode_Base { 
-	clone() : AnimNode_SubInput;
-	static C(Other: UObject | any): AnimNode_SubInput;
+declare class AnimNode_BlendListBase extends AnimNode_Base { 
+	BlendPose: PoseLink[];
+	BlendTime: number[];
+	BlendType: EAlphaBlendOption;
+	CustomBlendCurve: CurveFloat;
+	BlendProfile: BlendProfile;
+	Blends: AlphaBlend[];
+	BlendWeights: number[];
+	RemainingBlendTimes: number[];
+	LastActiveChildIndex: number;
+	PerBoneSampleData: BlendSampleData[];
+	bResetChildOnActivation: boolean;
+	clone() : AnimNode_BlendListBase;
+	static C(Other: UObject | any): AnimNode_BlendListBase;
 }
 
-declare class AnimGraphNode_SubInput extends AnimGraphNode_Base { 
-	UNode: AnimNode_SubInput;
-	static Load(ResourceName: string): AnimGraphNode_SubInput;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SubInput;
-	static GetDefaultObject(): AnimGraphNode_SubInput;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SubInput;
-	static C(Other: UObject | any): AnimGraphNode_SubInput;
+declare class AnimNode_BlendListByBool extends AnimNode_BlendListBase { 
+	bActiveValue: boolean;
+	clone() : AnimNode_BlendListByBool;
+	static C(Other: UObject | any): AnimNode_BlendListByBool;
 }
 
-declare class AnimNode_SubInstance extends AnimNode_Base { 
-	InPose: PoseLink;
-	InstanceClass: UnrealEngineClass;
-	InstanceToRun: AnimInstance;
-	InstanceProperties: Property[];
-	SubInstanceProperties: Property[];
-	SourcePropertyNames: string[];
-	DestPropertyNames: string[];
-	clone() : AnimNode_SubInstance;
-	static C(Other: UObject | any): AnimNode_SubInstance;
+declare class AnimGraphNode_BlendListByBool extends AnimGraphNode_BlendListBase { 
+	UNode: AnimNode_BlendListByBool;
+	static Load(ResourceName: string): AnimGraphNode_BlendListByBool;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListByBool;
+	static GetDefaultObject(): AnimGraphNode_BlendListByBool;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListByBool;
+	static C(Other: UObject | any): AnimGraphNode_BlendListByBool;
 }
 
-declare class AnimGraphNode_SubInstance extends AnimGraphNode_Base { 
-	UNode: AnimNode_SubInstance;
-	KnownExposableProperties: string[];
-	ExposedPropertyNames: string[];
-	static Load(ResourceName: string): AnimGraphNode_SubInstance;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SubInstance;
-	static GetDefaultObject(): AnimGraphNode_SubInstance;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SubInstance;
-	static C(Other: UObject | any): AnimGraphNode_SubInstance;
+declare class AnimNode_BlendListByEnum extends AnimNode_BlendListBase { 
+	EnumToPoseIndex: number[];
+	ActiveEnumValue: number;
+	clone() : AnimNode_BlendListByEnum;
+	static C(Other: UObject | any): AnimNode_BlendListByEnum;
 }
 
-declare class AnimNode_Trail extends AnimNode_SkeletalControlBase { 
-	TrailBone: BoneReference;
-	ChainLength: number;
-	ChainBoneAxis: EAxis;
-	bInvertChainBoneAxis: boolean;
-	TrailRelaxation: number;
-	TrailRelaxationSpeed: RuntimeFloatCurve;
-	bLimitStretch: boolean;
-	StretchLimit: number;
-	FakeVelocity: Vector;
-	bActorSpaceFakeVel: boolean;
-	BaseJoint: BoneReference;
-	clone() : AnimNode_Trail;
-	static C(Other: UObject | any): AnimNode_Trail;
+declare class AnimGraphNode_BlendListByEnum extends AnimGraphNode_BlendListBase { 
+	UNode: AnimNode_BlendListByEnum;
+	BoundEnum: Enum;
+	VisibleEnumEntries: string[];
+	static Load(ResourceName: string): AnimGraphNode_BlendListByEnum;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListByEnum;
+	static GetDefaultObject(): AnimGraphNode_BlendListByEnum;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListByEnum;
+	static C(Other: UObject | any): AnimGraphNode_BlendListByEnum;
 }
 
-declare class AnimGraphNode_Trail extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_Trail;
-	static Load(ResourceName: string): AnimGraphNode_Trail;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Trail;
-	static GetDefaultObject(): AnimGraphNode_Trail;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Trail;
-	static C(Other: UObject | any): AnimGraphNode_Trail;
+declare class AnimNode_BlendListByInt extends AnimNode_BlendListBase { 
+	ActiveChildIndex: number;
+	clone() : AnimNode_BlendListByInt;
+	static C(Other: UObject | any): AnimNode_BlendListByInt;
 }
 
-declare type EEvaluatorDataSource = 'EDS_SourcePose' | 'EDS_DestinationPose';
-declare var EEvaluatorDataSource : { EDS_SourcePose:'EDS_SourcePose',EDS_DestinationPose:'EDS_DestinationPose', };
-declare type EEvaluatorMode = 'EM_Standard' | 'EM_Freeze' | 'EM_DelayedFreeze';
-declare var EEvaluatorMode : { EM_Standard:'EM_Standard',EM_Freeze:'EM_Freeze',EM_DelayedFreeze:'EM_DelayedFreeze', };
-declare class AnimNode_TransitionPoseEvaluator extends AnimNode_Base { 
-	DataSource: EEvaluatorDataSource;
-	EvaluatorMode: EEvaluatorMode;
-	FramesToCachePose: number;
-	CacheFramesRemaining: number;
-	clone() : AnimNode_TransitionPoseEvaluator;
-	static C(Other: UObject | any): AnimNode_TransitionPoseEvaluator;
+declare class AnimGraphNode_BlendListByInt extends AnimGraphNode_BlendListBase { 
+	UNode: AnimNode_BlendListByInt;
+	static Load(ResourceName: string): AnimGraphNode_BlendListByInt;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendListByInt;
+	static GetDefaultObject(): AnimGraphNode_BlendListByInt;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendListByInt;
+	static C(Other: UObject | any): AnimGraphNode_BlendListByInt;
 }
 
-declare class AnimGraphNode_TransitionPoseEvaluator extends AnimGraphNode_Base { 
-	UNode: AnimNode_TransitionPoseEvaluator;
-	static Load(ResourceName: string): AnimGraphNode_TransitionPoseEvaluator;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TransitionPoseEvaluator;
-	static GetDefaultObject(): AnimGraphNode_TransitionPoseEvaluator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TransitionPoseEvaluator;
-	static C(Other: UObject | any): AnimGraphNode_TransitionPoseEvaluator;
+declare class AnimNode_BlendSpaceEvaluator extends AnimNode_BlendSpacePlayer { 
+	NormalizedTime: number;
+	clone() : AnimNode_BlendSpaceEvaluator;
+	static C(Other: UObject | any): AnimNode_BlendSpaceEvaluator;
 }
 
-declare class ReferenceBoneFrame { 
-	Bone: BoneReference;
-	Axis: Axis;
-	clone() : ReferenceBoneFrame;
-	static C(Other: UObject | any): ReferenceBoneFrame;
+declare class AnimGraphNode_BlendSpaceEvaluator extends AnimGraphNode_BlendSpaceBase { 
+	UNode: AnimNode_BlendSpaceEvaluator;
+	static Load(ResourceName: string): AnimGraphNode_BlendSpaceEvaluator;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpaceEvaluator;
+	static GetDefaultObject(): AnimGraphNode_BlendSpaceEvaluator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpaceEvaluator;
+	static C(Other: UObject | any): AnimGraphNode_BlendSpaceEvaluator;
 }
 
-declare class AnimCurveParam { 
-	Name: string;
-	clone() : AnimCurveParam;
-	static C(Other: UObject | any): AnimCurveParam;
+declare class AnimGraphNode_BlendSpacePlayer extends AnimGraphNode_BlendSpaceBase { 
+	UNode: AnimNode_BlendSpacePlayer;
+	static Load(ResourceName: string): AnimGraphNode_BlendSpacePlayer;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BlendSpacePlayer;
+	static GetDefaultObject(): AnimGraphNode_BlendSpacePlayer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BlendSpacePlayer;
+	static C(Other: UObject | any): AnimGraphNode_BlendSpacePlayer;
 }
 
-declare class AnimNode_TwistCorrectiveNode extends AnimNode_SkeletalControlBase { 
-	BaseFrame: ReferenceBoneFrame;
-	TwistFrame: ReferenceBoneFrame;
-	TwistPlaneNormalAxis: Axis;
+declare type EComponentType = 'None' | 'TranslationX' | 'TranslationY' | 'TranslationZ' | 'RotationX' | 'RotationY' | 'RotationZ' | 'Scale' | 'ScaleX' | 'ScaleY' | 'ScaleZ' | 'EComponentType_MAX';
+declare var EComponentType : { None:'None',TranslationX:'TranslationX',TranslationY:'TranslationY',TranslationZ:'TranslationZ',RotationX:'RotationX',RotationY:'RotationY',RotationZ:'RotationZ',Scale:'Scale',ScaleX:'ScaleX',ScaleY:'ScaleY',ScaleZ:'ScaleZ',EComponentType_MAX:'EComponentType_MAX', };
+declare type EDrivenDestinationMode = 'Bone' | 'MorphTarget' | 'MaterialParameter' | 'EDrivenDestinationMode_MAX';
+declare var EDrivenDestinationMode : { Bone:'Bone',MorphTarget:'MorphTarget',MaterialParameter:'MaterialParameter',EDrivenDestinationMode_MAX:'EDrivenDestinationMode_MAX', };
+declare type EDrivenBoneModificationMode = 'AddToInput' | 'ReplaceComponent' | 'AddToRefPose' | 'EDrivenBoneModificationMode_MAX';
+declare var EDrivenBoneModificationMode : { AddToInput:'AddToInput',ReplaceComponent:'ReplaceComponent',AddToRefPose:'AddToRefPose',EDrivenBoneModificationMode_MAX:'EDrivenBoneModificationMode_MAX', };
+declare class AnimNode_BoneDrivenController extends AnimNode_SkeletalControlBase { 
+	SourceBone: BoneReference;
+	SourceComponent: EComponentType;
+	DrivingCurve: CurveFloat;
+	Multiplier: number;
+	bUseRange: boolean;
+	RangeMin: number;
 	RangeMax: number;
 	RemappedMin: number;
 	RemappedMax: number;
-	Curve: AnimCurveParam;
-	clone() : AnimNode_TwistCorrectiveNode;
-	static C(Other: UObject | any): AnimNode_TwistCorrectiveNode;
+	DestinationMode: EDrivenDestinationMode;
+	ParameterName: string;
+	TargetBone: BoneReference;
+	TargetComponent: EComponentType;
+	bAffectTargetTranslationX: boolean;
+	bAffectTargetTranslationY: boolean;
+	bAffectTargetTranslationZ: boolean;
+	bAffectTargetRotationX: boolean;
+	bAffectTargetRotationY: boolean;
+	bAffectTargetRotationZ: boolean;
+	bAffectTargetScaleX: boolean;
+	bAffectTargetScaleY: boolean;
+	bAffectTargetScaleZ: boolean;
+	ModificationMode: EDrivenBoneModificationMode;
+	clone() : AnimNode_BoneDrivenController;
+	static C(Other: UObject | any): AnimNode_BoneDrivenController;
+}
+
+declare class AnimGraphNode_BoneDrivenController extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_BoneDrivenController;
+	static Load(ResourceName: string): AnimGraphNode_BoneDrivenController;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_BoneDrivenController;
+	static GetDefaultObject(): AnimGraphNode_BoneDrivenController;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_BoneDrivenController;
+	static C(Other: UObject | any): AnimGraphNode_BoneDrivenController;
+}
+
+declare class SocketReference { 
+	SocketName: string;
+	clone() : SocketReference;
+	static C(Other: UObject | any): SocketReference;
 }
 
-declare class AnimGraphNode_TwistCorrectiveNode extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_TwistCorrectiveNode;
-	static Load(ResourceName: string): AnimGraphNode_TwistCorrectiveNode;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TwistCorrectiveNode;
-	static GetDefaultObject(): AnimGraphNode_TwistCorrectiveNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TwistCorrectiveNode;
-	static C(Other: UObject | any): AnimGraphNode_TwistCorrectiveNode;
+declare class BoneSocketTarget { 
+	bUseSocket: boolean;
+	BoneReference: BoneReference;
+	SocketReference: SocketReference;
+	clone() : BoneSocketTarget;
+	static C(Other: UObject | any): BoneSocketTarget;
 }
 
-declare class AnimNode_TwoBoneIK extends AnimNode_SkeletalControlBase { 
-	IKBone: BoneReference;
+declare class AnimNode_CCDIK extends AnimNode_SkeletalControlBase { 
 	EffectorLocation: Vector;
-	JointTargetLocation: Vector;
-	EffectorSpaceBoneName: string;
-	bTakeRotationFromEffectorSpace: boolean;
-	bMaintainEffectorRelRot: boolean;
-	bAllowStretching: boolean;
-	StretchLimits: Vector2D;
-	StartStretchRatio: number;
-	MaxStretchScale: number;
 	EffectorLocationSpace: EBoneControlSpace;
-	JointTargetLocationSpace: EBoneControlSpace;
-	JointTargetSpaceBoneName: string;
-	bAllowTwist: boolean;
-	TwistAxis: Axis;
-	bNoTwist: boolean;
-	clone() : AnimNode_TwoBoneIK;
-	static C(Other: UObject | any): AnimNode_TwoBoneIK;
+	EffectorTarget: BoneSocketTarget;
+	TipBone: BoneReference;
+	RootBone: BoneReference;
+	Precision: number;
+	MaxIterations: number;
+	bStartFromTail: boolean;
+	bEnableRotationLimit: boolean;
+	RotationLimitPerJoints: number[];
+	clone() : AnimNode_CCDIK;
+	static C(Other: UObject | any): AnimNode_CCDIK;
+}
+
+declare class AnimGraphNode_CCDIK extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_CCDIK;
+	static Load(ResourceName: string): AnimGraphNode_CCDIK;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CCDIK;
+	static GetDefaultObject(): AnimGraphNode_CCDIK;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CCDIK;
+	static C(Other: UObject | any): AnimGraphNode_CCDIK;
+}
+
+declare class AnimNode_ConvertComponentToLocalSpace extends AnimNode_Base { 
+	ComponentPose: ComponentSpacePoseLink;
+	clone() : AnimNode_ConvertComponentToLocalSpace;
+	static C(Other: UObject | any): AnimNode_ConvertComponentToLocalSpace;
+}
+
+declare class AnimGraphNode_ComponentToLocalSpace extends AnimGraphNode_Base { 
+	UNode: AnimNode_ConvertComponentToLocalSpace;
+	static Load(ResourceName: string): AnimGraphNode_ComponentToLocalSpace;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ComponentToLocalSpace;
+	static GetDefaultObject(): AnimGraphNode_ComponentToLocalSpace;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ComponentToLocalSpace;
+	static C(Other: UObject | any): AnimGraphNode_ComponentToLocalSpace;
+}
+
+declare type EConstraintOffsetOption = 'None' | 'Offset_RefPose' | 'EConstraintOffsetOption_MAX';
+declare var EConstraintOffsetOption : { None:'None',Offset_RefPose:'Offset_RefPose',EConstraintOffsetOption_MAX:'EConstraintOffsetOption_MAX', };
+declare type ETransformConstraintType = 'Translation' | 'Rotation' | 'Scale' | 'Parent' | 'ETransformConstraintType_MAX';
+declare var ETransformConstraintType : { Translation:'Translation',Rotation:'Rotation',Scale:'Scale',Parent:'Parent',ETransformConstraintType_MAX:'ETransformConstraintType_MAX', };
+declare class FilterOptionPerAxis { 
+	bX: boolean;
+	bY: boolean;
+	bZ: boolean;
+	clone() : FilterOptionPerAxis;
+	static C(Other: UObject | any): FilterOptionPerAxis;
+}
+
+declare class Constraint { 
+	TargetBone: BoneReference;
+	OffsetOption: EConstraintOffsetOption;
+	TransformType: ETransformConstraintType;
+	PerAxis: FilterOptionPerAxis;
+	clone() : Constraint;
+	static C(Other: UObject | any): Constraint;
 }
 
-declare class AnimGraphNode_TwoBoneIK extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_TwoBoneIK;
-	bEnableDebugDraw: boolean;
-	static Load(ResourceName: string): AnimGraphNode_TwoBoneIK;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TwoBoneIK;
-	static GetDefaultObject(): AnimGraphNode_TwoBoneIK;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TwoBoneIK;
-	static C(Other: UObject | any): AnimGraphNode_TwoBoneIK;
+declare class AnimNode_Constraint extends AnimNode_SkeletalControlBase { 
+	BoneToModify: BoneReference;
+	ConstraintSetup: Constraint[];
+	ConstraintWeights: number[];
+	clone() : AnimNode_Constraint;
+	static C(Other: UObject | any): AnimNode_Constraint;
 }
 
-declare class AnimNode_TwoWayBlend extends AnimNode_Base { 
-	A: PoseLink;
-	B: PoseLink;
-	Alpha: number;
-	AlphaScaleBias: InputScaleBias;
-	InternalBlendAlpha: number;
-	bAIsRelevant: boolean;
-	bBIsRelevant: boolean;
-	bResetChildOnActivation: boolean;
-	clone() : AnimNode_TwoWayBlend;
-	static C(Other: UObject | any): AnimNode_TwoWayBlend;
+declare class AnimGraphNode_Constraint extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_Constraint;
+	static Load(ResourceName: string): AnimGraphNode_Constraint;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Constraint;
+	static GetDefaultObject(): AnimGraphNode_Constraint;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Constraint;
+	static C(Other: UObject | any): AnimGraphNode_Constraint;
 }
 
-declare class AnimGraphNode_TwoWayBlend extends AnimGraphNode_Base { 
-	BlendNode: AnimNode_TwoWayBlend;
-	static Load(ResourceName: string): AnimGraphNode_TwoWayBlend;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TwoWayBlend;
-	static GetDefaultObject(): AnimGraphNode_TwoWayBlend;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TwoWayBlend;
-	static C(Other: UObject | any): AnimGraphNode_TwoWayBlend;
+declare class AnimNode_CopyBone extends AnimNode_SkeletalControlBase { 
+	SourceBone: BoneReference;
+	TargetBone: BoneReference;
+	bCopyTranslation: boolean;
+	bCopyRotation: boolean;
+	bCopyScale: boolean;
+	ControlSpace: EBoneControlSpace;
+	clone() : AnimNode_CopyBone;
+	static C(Other: UObject | any): AnimNode_CopyBone;
+}
+
+declare class AnimGraphNode_CopyBone extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_CopyBone;
+	static Load(ResourceName: string): AnimGraphNode_CopyBone;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CopyBone;
+	static GetDefaultObject(): AnimGraphNode_CopyBone;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CopyBone;
+	static C(Other: UObject | any): AnimGraphNode_CopyBone;
+}
+
+declare type CopyBoneDeltaMode = 'Accumulate' | 'Copy' | 'CopyBoneDeltaMode_MAX';
+declare var CopyBoneDeltaMode : { Accumulate:'Accumulate',Copy:'Copy',CopyBoneDeltaMode_MAX:'CopyBoneDeltaMode_MAX', };
+declare class AnimNode_CopyBoneDelta extends AnimNode_SkeletalControlBase { 
+	SourceBone: BoneReference;
+	TargetBone: BoneReference;
+	bCopyTranslation: boolean;
+	bCopyRotation: boolean;
+	bCopyScale: boolean;
+	CopyMode: CopyBoneDeltaMode;
+	TranslationMultiplier: number;
+	RotationMultiplier: number;
+	ScaleMultiplier: number;
+	clone() : AnimNode_CopyBoneDelta;
+	static C(Other: UObject | any): AnimNode_CopyBoneDelta;
+}
+
+declare class AnimGraphNode_CopyBoneDelta extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_CopyBoneDelta;
+	static Load(ResourceName: string): AnimGraphNode_CopyBoneDelta;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CopyBoneDelta;
+	static GetDefaultObject(): AnimGraphNode_CopyBoneDelta;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CopyBoneDelta;
+	static C(Other: UObject | any): AnimGraphNode_CopyBoneDelta;
+}
+
+declare class AnimNode_CopyPoseFromMesh extends AnimNode_Base { 
+	SourceMeshComponent: any;
+	bUseAttachedParent: boolean;
+	bCopyCurves: boolean;
+	clone() : AnimNode_CopyPoseFromMesh;
+	static C(Other: UObject | any): AnimNode_CopyPoseFromMesh;
+}
+
+declare class AnimGraphNode_CopyPoseFromMesh extends AnimGraphNode_Base { 
+	UNode: AnimNode_CopyPoseFromMesh;
+	static Load(ResourceName: string): AnimGraphNode_CopyPoseFromMesh;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CopyPoseFromMesh;
+	static GetDefaultObject(): AnimGraphNode_CopyPoseFromMesh;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CopyPoseFromMesh;
+	static C(Other: UObject | any): AnimGraphNode_CopyPoseFromMesh;
+}
+
+declare class AnimNode_CurveSource extends AnimNode_Base { 
+	SourcePose: PoseLink;
+	SourceBinding: string;
+	Alpha: number;
+	CurveSource: any;
+	clone() : AnimNode_CurveSource;
+	static C(Other: UObject | any): AnimNode_CurveSource;
+}
+
+declare class AnimGraphNode_CurveSource extends AnimGraphNode_Base { 
+	UNode: AnimNode_CurveSource;
+	static Load(ResourceName: string): AnimGraphNode_CurveSource;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_CurveSource;
+	static GetDefaultObject(): AnimGraphNode_CurveSource;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_CurveSource;
+	static C(Other: UObject | any): AnimGraphNode_CurveSource;
+}
+
+declare type EBoneRotationSource = 'BRS_KeepComponentSpaceRotation' | 'BRS_KeepLocalSpaceRotation' | 'BRS_CopyFromTarget' | 'BRS_MAX';
+declare var EBoneRotationSource : { BRS_KeepComponentSpaceRotation:'BRS_KeepComponentSpaceRotation',BRS_KeepLocalSpaceRotation:'BRS_KeepLocalSpaceRotation',BRS_CopyFromTarget:'BRS_CopyFromTarget',BRS_MAX:'BRS_MAX', };
+declare class AnimNode_Fabrik extends AnimNode_SkeletalControlBase { 
+	EffectorTransform: Transform;
+	EffectorTransformSpace: EBoneControlSpace;
+	EffectorTransformBone: BoneReference;
+	EffectorTarget: BoneSocketTarget;
+	EffectorRotationSource: EBoneRotationSource;
+	TipBone: BoneReference;
+	RootBone: BoneReference;
+	Precision: number;
+	MaxIterations: number;
+	bEnableDebugDraw: boolean;
+	clone() : AnimNode_Fabrik;
+	static C(Other: UObject | any): AnimNode_Fabrik;
 }
 
-declare class AnimNode_UseCachedPose extends AnimNode_Base { 
-	LinkToCachingNode: PoseLink;
-	CachePoseName: string;
-	clone() : AnimNode_UseCachedPose;
-	static C(Other: UObject | any): AnimNode_UseCachedPose;
+declare class AnimGraphNode_Fabrik extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_Fabrik;
+	static Load(ResourceName: string): AnimGraphNode_Fabrik;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Fabrik;
+	static GetDefaultObject(): AnimGraphNode_Fabrik;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Fabrik;
+	static C(Other: UObject | any): AnimGraphNode_Fabrik;
 }
 
-declare class AnimGraphNode_UseCachedPose extends AnimGraphNode_Base { 
-	UNode: AnimNode_UseCachedPose;
-	SaveCachedPoseNode: any;
-	NameOfCache: string;
-	static Load(ResourceName: string): AnimGraphNode_UseCachedPose;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_UseCachedPose;
-	static GetDefaultObject(): AnimGraphNode_UseCachedPose;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_UseCachedPose;
-	static C(Other: UObject | any): AnimGraphNode_UseCachedPose;
+declare class AnimNode_HandIKRetargeting extends AnimNode_SkeletalControlBase { 
+	RightHandFK: BoneReference;
+	LeftHandFK: BoneReference;
+	RightHandIK: BoneReference;
+	LeftHandIK: BoneReference;
+	IKBonesToMove: BoneReference[];
+	HandFKWeight: number;
+	clone() : AnimNode_HandIKRetargeting;
+	static C(Other: UObject | any): AnimNode_HandIKRetargeting;
 }
 
-declare class AnimCustomInstance extends AnimInstance { 
-	static Load(ResourceName: string): AnimCustomInstance;
-	static Find(Outer: UObject, ResourceName: string): AnimCustomInstance;
-	static GetDefaultObject(): AnimCustomInstance;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimCustomInstance;
-	static C(Other: UObject | any): AnimCustomInstance;
+declare class AnimGraphNode_HandIKRetargeting extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_HandIKRetargeting;
+	static Load(ResourceName: string): AnimGraphNode_HandIKRetargeting;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_HandIKRetargeting;
+	static GetDefaultObject(): AnimGraphNode_HandIKRetargeting;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_HandIKRetargeting;
+	static C(Other: UObject | any): AnimGraphNode_HandIKRetargeting;
 }
 
-declare class AnimPreviewAttacheInstance extends AnimCustomInstance { 
-	static Load(ResourceName: string): AnimPreviewAttacheInstance;
-	static Find(Outer: UObject, ResourceName: string): AnimPreviewAttacheInstance;
-	static GetDefaultObject(): AnimPreviewAttacheInstance;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimPreviewAttacheInstance;
-	static C(Other: UObject | any): AnimPreviewAttacheInstance;
+declare type ERefPoseType = 'EIT_LocalSpace' | 'EIT_Additive' | 'EIT_MAX';
+declare var ERefPoseType : { EIT_LocalSpace:'EIT_LocalSpace',EIT_Additive:'EIT_Additive',EIT_MAX:'EIT_MAX', };
+declare class AnimNode_RefPose extends AnimNode_Base { 
+	RefPoseType: ERefPoseType;
+	clone() : AnimNode_RefPose;
+	static C(Other: UObject | any): AnimNode_RefPose;
 }
 
-declare class AnimSingleNodeInstance extends AnimInstance { 
-	CurrentAsset: AnimationAsset;
-	PostEvaluateAnimEvent: UnrealEngineDelegate<() => void>;
-	static Load(ResourceName: string): AnimSingleNodeInstance;
-	static Find(Outer: UObject, ResourceName: string): AnimSingleNodeInstance;
-	static GetDefaultObject(): AnimSingleNodeInstance;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimSingleNodeInstance;
-	StopAnim(): void;
-	SetReverse(bInReverse: boolean): void;
-	SetPreviewCurveOverride(PoseName: string,Value: number,bRemoveIfZero: boolean): void;
-	SetPositionWithPreviousTime(InPosition: number,InPreviousTime: number,bFireNotifies: boolean): void;
-	SetPosition(InPosition: number,bFireNotifies: boolean): void;
-	SetPlayRate(InPlayRate: number): void;
-	SetPlaying(bIsPlaying: boolean): void;
-	SetLooping(bIsLooping: boolean): void;
-	SetBlendSpaceInput(InBlendInput: Vector): void;
-	SetAnimationAsset(NewAsset: AnimationAsset,bIsLooping: boolean,InPlayRate: number): void;
-	PlayAnim(bIsLooping: boolean,InPlayRate: number,InStartPosition: number): void;
-	GetLength(): number;
-	static C(Other: UObject | any): AnimSingleNodeInstance;
+declare class AnimGraphNode_RefPoseBase extends AnimGraphNode_Base { 
+	UNode: AnimNode_RefPose;
+	static Load(ResourceName: string): AnimGraphNode_RefPoseBase;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RefPoseBase;
+	static GetDefaultObject(): AnimGraphNode_RefPoseBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RefPoseBase;
+	static C(Other: UObject | any): AnimGraphNode_RefPoseBase;
 }
 
-declare type EMontagePreviewType = 'EMPT_Normal' | 'EMPT_AllSections';
-declare var EMontagePreviewType : { EMPT_Normal:'EMPT_Normal',EMPT_AllSections:'EMPT_AllSections', };
-declare class AnimPreviewInstance extends AnimSingleNodeInstance { 
-	MontagePreviewType: EMontagePreviewType;
-	MontagePreviewStartSectionIdx: number;
-	static Load(ResourceName: string): AnimPreviewInstance;
-	static Find(Outer: UObject, ResourceName: string): AnimPreviewInstance;
-	static GetDefaultObject(): AnimPreviewInstance;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimPreviewInstance;
-	static C(Other: UObject | any): AnimPreviewInstance;
+declare class AnimGraphNode_IdentityPose extends AnimGraphNode_RefPoseBase { 
+	static Load(ResourceName: string): AnimGraphNode_IdentityPose;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_IdentityPose;
+	static GetDefaultObject(): AnimGraphNode_IdentityPose;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_IdentityPose;
+	static C(Other: UObject | any): AnimGraphNode_IdentityPose;
 }
 
-declare class AnimStateNodeBase extends EdGraphNode { 
-	static Load(ResourceName: string): AnimStateNodeBase;
-	static Find(Outer: UObject, ResourceName: string): AnimStateNodeBase;
-	static GetDefaultObject(): AnimStateNodeBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateNodeBase;
-	static C(Other: UObject | any): AnimStateNodeBase;
+declare class BranchFilter { 
+	BoneName: string;
+	BlendDepth: number;
+	clone() : BranchFilter;
+	static C(Other: UObject | any): BranchFilter;
 }
 
-declare class AnimStateConduitNode extends AnimStateNodeBase { 
-	BoundGraph: EdGraph;
-	static Load(ResourceName: string): AnimStateConduitNode;
-	static Find(Outer: UObject, ResourceName: string): AnimStateConduitNode;
-	static GetDefaultObject(): AnimStateConduitNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateConduitNode;
-	static C(Other: UObject | any): AnimStateConduitNode;
+declare class InputBlendPose { 
+	BranchFilters: BranchFilter[];
+	clone() : InputBlendPose;
+	static C(Other: UObject | any): InputBlendPose;
 }
-
-declare type EAnimStateType = 'AST_SingleAnimation' | 'AST_BlendGraph';
-declare var EAnimStateType : { AST_SingleAnimation:'AST_SingleAnimation',AST_BlendGraph:'AST_BlendGraph', };
-declare class AnimStateNode extends AnimStateNodeBase { 
-	BoundGraph: EdGraph;
-	StateType: EAnimStateType;
-	StateEntered: AnimNotifyEvent;
-	StateLeft: AnimNotifyEvent;
-	StateFullyBlended: AnimNotifyEvent;
-	bAlwaysResetOnEntry: boolean;
-	static Load(ResourceName: string): AnimStateNode;
-	static Find(Outer: UObject, ResourceName: string): AnimStateNode;
-	static GetDefaultObject(): AnimStateNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateNode;
-	static C(Other: UObject | any): AnimStateNode;
+
+declare type ECurveBlendOption = 'MaxWeight' | 'NormalizeByWeight' | 'BlendByWeight' | 'ECurveBlendOption_MAX';
+declare var ECurveBlendOption : { MaxWeight:'MaxWeight',NormalizeByWeight:'NormalizeByWeight',BlendByWeight:'BlendByWeight',ECurveBlendOption_MAX:'ECurveBlendOption_MAX', };
+declare class PerBoneBlendWeight { 
+	SourceIndex: number;
+	BlendWeight: number;
+	clone() : PerBoneBlendWeight;
+	static C(Other: UObject | any): PerBoneBlendWeight;
 }
 
-declare type ETransitionBlendMode = 'TBM_Linear' | 'TBM_Cubic';
-declare var ETransitionBlendMode : { TBM_Linear:'TBM_Linear',TBM_Cubic:'TBM_Cubic', };
-declare type ETransitionLogicType = 'TLT_StandardBlend' | 'TLT_Custom';
-declare var ETransitionLogicType : { TLT_StandardBlend:'TLT_StandardBlend',TLT_Custom:'TLT_Custom', };
-declare class AnimStateTransitionNode extends AnimStateNodeBase { 
-	BoundGraph: EdGraph;
-	CustomTransitionGraph: EdGraph;
-	PriorityOrder: number;
-	CrossfadeDuration: number;
-	CrossfadeMode: ETransitionBlendMode;
-	BlendMode: BlendMode;
-	CustomBlendCurve: CurveFloat;
-	BlendProfile: BlendProfile;
-	bAutomaticRuleBasedOnSequencePlayerInState: boolean;
-	LogicType: ETransitionLogicType;
-	TransitionStart: AnimNotifyEvent;
-	TransitionEnd: AnimNotifyEvent;
-	TransitionInterrupt: AnimNotifyEvent;
-	Bidirectional: boolean;
-	bSharedRules: boolean;
-	bSharedCrossfade: boolean;
-	SharedRulesName: string;
-	SharedRulesGuid: Guid;
-	SharedColor: LinearColor;
-	SharedCrossfadeName: string;
-	SharedCrossfadeGuid: Guid;
-	SharedCrossfadeIdx: number;
-	static Load(ResourceName: string): AnimStateTransitionNode;
-	static Find(Outer: UObject, ResourceName: string): AnimStateTransitionNode;
-	static GetDefaultObject(): AnimStateTransitionNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateTransitionNode;
-	static C(Other: UObject | any): AnimStateTransitionNode;
+declare class AnimNode_LayeredBoneBlend extends AnimNode_Base { 
+	BasePose: PoseLink;
+	BlendPoses: PoseLink[];
+	LayerSetup: InputBlendPose[];
+	BlendWeights: number[];
+	bMeshSpaceRotationBlend: boolean;
+	CurveBlendOption: ECurveBlendOption;
+	bBlendRootMotionBasedOnRootBone: boolean;
+	bHasRelevantPoses: boolean;
+	LODThreshold: number;
+	PerBoneBlendWeights: PerBoneBlendWeight[];
+	SkeletonGuid: Guid;
+	VirtualBoneGuid: Guid;
+	clone() : AnimNode_LayeredBoneBlend;
+	static C(Other: UObject | any): AnimNode_LayeredBoneBlend;
+}
+
+declare class AnimGraphNode_LayeredBoneBlend extends AnimGraphNode_BlendListBase { 
+	UNode: AnimNode_LayeredBoneBlend;
+	static Load(ResourceName: string): AnimGraphNode_LayeredBoneBlend;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LayeredBoneBlend;
+	static GetDefaultObject(): AnimGraphNode_LayeredBoneBlend;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LayeredBoneBlend;
+	static C(Other: UObject | any): AnimGraphNode_LayeredBoneBlend;
+}
+
+declare class AnimLegIKDefinition { 
+	IKFootBone: BoneReference;
+	FKFootBone: BoneReference;
+	NumBonesInLimb: number;
+	FootBoneForwardAxis: EAxis;
+	HingeRotationAxis: EAxis;
+	bEnableRotationLimit: boolean;
+	MinRotationAngle: number;
+	bEnableKneeTwistCorrection: boolean;
+	clone() : AnimLegIKDefinition;
+	static C(Other: UObject | any): AnimLegIKDefinition;
+}
+
+declare class AnimLegIKData { 
+	clone() : AnimLegIKData;
+	static C(Other: UObject | any): AnimLegIKData;
+}
+
+declare class AnimNode_LegIK extends AnimNode_SkeletalControlBase { 
+	ReachPrecision: number;
+	MaxIterations: number;
+	LegsDefinition: AnimLegIKDefinition[];
+	LegsData: AnimLegIKData[];
+	clone() : AnimNode_LegIK;
+	static C(Other: UObject | any): AnimNode_LegIK;
+}
+
+declare class AnimGraphNode_LegIK extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_LegIK;
+	static Load(ResourceName: string): AnimGraphNode_LegIK;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LegIK;
+	static GetDefaultObject(): AnimGraphNode_LegIK;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LegIK;
+	static C(Other: UObject | any): AnimGraphNode_LegIK;
+}
+
+declare class AnimGraphNode_LocalRefPose extends AnimGraphNode_RefPoseBase { 
+	static Load(ResourceName: string): AnimGraphNode_LocalRefPose;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LocalRefPose;
+	static GetDefaultObject(): AnimGraphNode_LocalRefPose;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LocalRefPose;
+	static C(Other: UObject | any): AnimGraphNode_LocalRefPose;
+}
+
+declare class AnimNode_ConvertLocalToComponentSpace extends AnimNode_Base { 
+	LocalPose: PoseLink;
+	clone() : AnimNode_ConvertLocalToComponentSpace;
+	static C(Other: UObject | any): AnimNode_ConvertLocalToComponentSpace;
+}
+
+declare class AnimGraphNode_LocalToComponentSpace extends AnimGraphNode_Base { 
+	UNode: AnimNode_ConvertLocalToComponentSpace;
+	static Load(ResourceName: string): AnimGraphNode_LocalToComponentSpace;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LocalToComponentSpace;
+	static GetDefaultObject(): AnimGraphNode_LocalToComponentSpace;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LocalToComponentSpace;
+	static C(Other: UObject | any): AnimGraphNode_LocalToComponentSpace;
+}
+
+declare type EAxisOption = 'X' | 'Y' | 'Z' | 'X_Neg' | 'Y_Neg' | 'Z_Neg' | 'Custom' | 'EAxisOption_MAX';
+declare var EAxisOption : { X:'X',Y:'Y',Z:'Z',X_Neg:'X_Neg',Y_Neg:'Y_Neg',Z_Neg:'Z_Neg',Custom:'Custom',EAxisOption_MAX:'EAxisOption_MAX', };
+declare class Axis { 
+	Axis: Vector;
+	bInLocalSpace: boolean;
+	clone() : Axis;
+	static C(Other: UObject | any): Axis;
+}
+
+declare type EInterpolationBlend = 'Linear' | 'Cubic' | 'Sinusoidal' | 'EaseInOutExponent2' | 'EaseInOutExponent3' | 'EaseInOutExponent4' | 'EaseInOutExponent5' | 'MAX';
+declare var EInterpolationBlend : { Linear:'Linear',Cubic:'Cubic',Sinusoidal:'Sinusoidal',EaseInOutExponent2:'EaseInOutExponent2',EaseInOutExponent3:'EaseInOutExponent3',EaseInOutExponent4:'EaseInOutExponent4',EaseInOutExponent5:'EaseInOutExponent5',MAX:'MAX', };
+declare class AnimNode_LookAt extends AnimNode_SkeletalControlBase { 
+	BoneToModify: BoneReference;
+	LookAtBone: BoneReference;
+	LookAtSocket: string;
+	LookAtTarget: BoneSocketTarget;
+	LookAtLocation: Vector;
+	LookAtAxis: EAxisOption;
+	CustomLookAtAxis: Vector;
+	LookAt_Axis: Axis;
+	bUseLookUpAxis: boolean;
+	LookUpAxis: EAxisOption;
+	CustomLookUpAxis: Vector;
+	LookUp_Axis: Axis;
+	LookAtClamp: number;
+	InterpolationType: EInterpolationBlend;
+	InterpolationTime: number;
+	InterpolationTriggerThreashold: number;
+	clone() : AnimNode_LookAt;
+	static C(Other: UObject | any): AnimNode_LookAt;
+}
+
+declare class AnimGraphNode_LookAt extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_LookAt;
+	static Load(ResourceName: string): AnimGraphNode_LookAt;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_LookAt;
+	static GetDefaultObject(): AnimGraphNode_LookAt;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_LookAt;
+	static C(Other: UObject | any): AnimGraphNode_LookAt;
+}
+
+declare class AnimNode_MakeDynamicAdditive extends AnimNode_Base { 
+	Base: PoseLink;
+	Additive: PoseLink;
+	bMeshSpaceAdditive: boolean;
+	clone() : AnimNode_MakeDynamicAdditive;
+	static C(Other: UObject | any): AnimNode_MakeDynamicAdditive;
+}
+
+declare class AnimGraphNode_MakeDynamicAdditive extends AnimGraphNode_Base { 
+	UNode: AnimNode_MakeDynamicAdditive;
+	static Load(ResourceName: string): AnimGraphNode_MakeDynamicAdditive;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_MakeDynamicAdditive;
+	static GetDefaultObject(): AnimGraphNode_MakeDynamicAdditive;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_MakeDynamicAdditive;
+	static C(Other: UObject | any): AnimGraphNode_MakeDynamicAdditive;
+}
+
+declare class AnimNode_MeshSpaceRefPose extends AnimNode_Base { 
+	clone() : AnimNode_MeshSpaceRefPose;
+	static C(Other: UObject | any): AnimNode_MeshSpaceRefPose;
+}
+
+declare class AnimGraphNode_MeshRefPose extends AnimGraphNode_Base { 
+	UNode: AnimNode_MeshSpaceRefPose;
+	static Load(ResourceName: string): AnimGraphNode_MeshRefPose;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_MeshRefPose;
+	static GetDefaultObject(): AnimGraphNode_MeshRefPose;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_MeshRefPose;
+	static C(Other: UObject | any): AnimGraphNode_MeshRefPose;
+}
+
+declare type EBoneModificationMode = 'BMM_Ignore' | 'BMM_Replace' | 'BMM_Additive' | 'BMM_MAX';
+declare var EBoneModificationMode : { BMM_Ignore:'BMM_Ignore',BMM_Replace:'BMM_Replace',BMM_Additive:'BMM_Additive',BMM_MAX:'BMM_MAX', };
+declare class AnimNode_ModifyBone extends AnimNode_SkeletalControlBase { 
+	BoneToModify: BoneReference;
+	Translation: Vector;
+	Rotation: Rotator;
+	Scale: Vector;
+	TranslationMode: EBoneModificationMode;
+	RotationMode: EBoneModificationMode;
+	ScaleMode: EBoneModificationMode;
+	TranslationSpace: EBoneControlSpace;
+	RotationSpace: EBoneControlSpace;
+	ScaleSpace: EBoneControlSpace;
+	clone() : AnimNode_ModifyBone;
+	static C(Other: UObject | any): AnimNode_ModifyBone;
+}
+
+declare class AnimGraphNode_ModifyBone extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_ModifyBone;
+	static Load(ResourceName: string): AnimGraphNode_ModifyBone;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ModifyBone;
+	static GetDefaultObject(): AnimGraphNode_ModifyBone;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ModifyBone;
+	static C(Other: UObject | any): AnimGraphNode_ModifyBone;
+}
+
+declare type EModifyCurveApplyMode = 'Add' | 'Scale' | 'Blend' | 'WeightedMovingAverage' | 'RemapCurve' | 'EModifyCurveApplyMode_MAX';
+declare var EModifyCurveApplyMode : { Add:'Add',Scale:'Scale',Blend:'Blend',WeightedMovingAverage:'WeightedMovingAverage',RemapCurve:'RemapCurve',EModifyCurveApplyMode_MAX:'EModifyCurveApplyMode_MAX', };
+declare class AnimNode_ModifyCurve extends AnimNode_Base { 
+	SourcePose: PoseLink;
+	ApplyMode: EModifyCurveApplyMode;
+	CurveValues: number[];
+	LastCurveValues: number[];
+	CurveNames: string[];
+	Alpha: number;
+	clone() : AnimNode_ModifyCurve;
+	static C(Other: UObject | any): AnimNode_ModifyCurve;
 }
 
-declare class K2Node_AnimGetter extends K2Node_CallFunction { 
-	SourceNode: AnimGraphNode_Base;
-	SourceStateNode: AnimStateNodeBase;
-	GetterClass: UnrealEngineClass;
-	SourceAnimBlueprint: AnimBlueprint;
-	CachedTitle: string;
-	Contexts: string[];
-	static Load(ResourceName: string): K2Node_AnimGetter;
-	static Find(Outer: UObject, ResourceName: string): K2Node_AnimGetter;
-	static GetDefaultObject(): K2Node_AnimGetter;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AnimGetter;
-	static C(Other: UObject | any): K2Node_AnimGetter;
+declare class AnimGraphNode_ModifyCurve extends AnimGraphNode_Base { 
+	UNode: AnimNode_ModifyCurve;
+	static Load(ResourceName: string): AnimGraphNode_ModifyCurve;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ModifyCurve;
+	static GetDefaultObject(): AnimGraphNode_ModifyCurve;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ModifyCurve;
+	static C(Other: UObject | any): AnimGraphNode_ModifyCurve;
 }
 
-declare class K2Node_PlayMontage extends K2Node_BaseAsyncTask { 
-	static Load(ResourceName: string): K2Node_PlayMontage;
-	static Find(Outer: UObject, ResourceName: string): K2Node_PlayMontage;
-	static GetDefaultObject(): K2Node_PlayMontage;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_PlayMontage;
-	static C(Other: UObject | any): K2Node_PlayMontage;
+declare class AnimNode_MultiWayBlend extends AnimNode_Base { 
+	Poses: PoseLink[];
+	DesiredAlphas: number[];
+	bAdditiveNode: boolean;
+	bNormalizeAlpha: boolean;
+	AlphaScaleBias: InputScaleBias;
+	clone() : AnimNode_MultiWayBlend;
+	static C(Other: UObject | any): AnimNode_MultiWayBlend;
 }
 
-declare type ETransitionGetter = 'AnimationAsset_GetCurrentTime' | 'AnimationAsset_GetLength' | 'AnimationAsset_GetCurrentTimeFraction' | 'AnimationAsset_GetTimeFromEnd' | 'AnimationAsset_GetTimeFromEndFraction' | 'CurrentState_ElapsedTime' | 'CurrentState_GetBlendWeight' | 'CurrentTransitionDuration' | 'ArbitraryState_GetBlendWeight';
-declare var ETransitionGetter : { AnimationAsset_GetCurrentTime:'AnimationAsset_GetCurrentTime',AnimationAsset_GetLength:'AnimationAsset_GetLength',AnimationAsset_GetCurrentTimeFraction:'AnimationAsset_GetCurrentTimeFraction',AnimationAsset_GetTimeFromEnd:'AnimationAsset_GetTimeFromEnd',AnimationAsset_GetTimeFromEndFraction:'AnimationAsset_GetTimeFromEndFraction',CurrentState_ElapsedTime:'CurrentState_ElapsedTime',CurrentState_GetBlendWeight:'CurrentState_GetBlendWeight',CurrentTransitionDuration:'CurrentTransitionDuration',ArbitraryState_GetBlendWeight:'ArbitraryState_GetBlendWeight', };
-declare class K2Node_TransitionRuleGetter extends K2Node { 
-	GetterType: ETransitionGetter;
-	AssociatedAnimAssetPlayerNode: AnimGraphNode_Base;
-	AssociatedStateNode: AnimStateNode;
-	static Load(ResourceName: string): K2Node_TransitionRuleGetter;
-	static Find(Outer: UObject, ResourceName: string): K2Node_TransitionRuleGetter;
-	static GetDefaultObject(): K2Node_TransitionRuleGetter;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_TransitionRuleGetter;
-	static C(Other: UObject | any): K2Node_TransitionRuleGetter;
+declare class AnimGraphNode_MultiWayBlend extends AnimGraphNode_Base { 
+	UNode: AnimNode_MultiWayBlend;
+	static Load(ResourceName: string): AnimGraphNode_MultiWayBlend;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_MultiWayBlend;
+	static GetDefaultObject(): AnimGraphNode_MultiWayBlend;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_MultiWayBlend;
+	static C(Other: UObject | any): AnimGraphNode_MultiWayBlend;
 }
 
-declare class BlueprintAsyncActionBase extends UObject { 
-	static Load(ResourceName: string): BlueprintAsyncActionBase;
-	static Find(Outer: UObject, ResourceName: string): BlueprintAsyncActionBase;
-	static GetDefaultObject(): BlueprintAsyncActionBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintAsyncActionBase;
-	Activate(): void;
-	static C(Other: UObject | any): BlueprintAsyncActionBase;
+declare class AnimNode_ObserveBone extends AnimNode_SkeletalControlBase { 
+	BoneToObserve: BoneReference;
+	DisplaySpace: EBoneControlSpace;
+	bRelativeToRefPose: boolean;
+	Translation: Vector;
+	Rotation: Rotator;
+	Scale: Vector;
+	clone() : AnimNode_ObserveBone;
+	static C(Other: UObject | any): AnimNode_ObserveBone;
 }
 
-declare class Texture2DDynamic extends Texture { 
-	Format: EPixelFormat;
-	static Load(ResourceName: string): Texture2DDynamic;
-	static Find(Outer: UObject, ResourceName: string): Texture2DDynamic;
-	static GetDefaultObject(): Texture2DDynamic;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Texture2DDynamic;
-	static C(Other: UObject | any): Texture2DDynamic;
+declare class AnimGraphNode_ObserveBone extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_ObserveBone;
+	static Load(ResourceName: string): AnimGraphNode_ObserveBone;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ObserveBone;
+	static GetDefaultObject(): AnimGraphNode_ObserveBone;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ObserveBone;
+	static C(Other: UObject | any): AnimGraphNode_ObserveBone;
 }
 
-declare class AsyncTaskDownloadImage extends BlueprintAsyncActionBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<(Texture: Texture2DDynamic) => void>;
-	OnFail: UnrealEngineMulticastDelegate<(Texture: Texture2DDynamic) => void>;
-	static Load(ResourceName: string): AsyncTaskDownloadImage;
-	static Find(Outer: UObject, ResourceName: string): AsyncTaskDownloadImage;
-	static GetDefaultObject(): AsyncTaskDownloadImage;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AsyncTaskDownloadImage;
-	static DownloadImage(URL: string): AsyncTaskDownloadImage;
-	static C(Other: UObject | any): AsyncTaskDownloadImage;
+declare class AnimGraphNode_PoseHandler extends AnimGraphNode_AssetPlayerBase { 
+	static Load(ResourceName: string): AnimGraphNode_PoseHandler;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseHandler;
+	static GetDefaultObject(): AnimGraphNode_PoseHandler;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseHandler;
+	static C(Other: UObject | any): AnimGraphNode_PoseHandler;
 }
 
-declare class ContentWidget extends PanelWidget { 
-	static Load(ResourceName: string): ContentWidget;
-	static Find(Outer: UObject, ResourceName: string): ContentWidget;
-	static GetDefaultObject(): ContentWidget;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentWidget;
-	SetContent(Content: Widget): PanelSlot;
-	GetContentSlot(): PanelSlot;
-	GetContent(): Widget;
-	static C(Other: UObject | any): ContentWidget;
+declare class AnimNode_PoseHandler extends AnimNode_AssetPlayerBase { 
+	PoseAsset: PoseAsset;
+	clone() : AnimNode_PoseHandler;
+	static C(Other: UObject | any): AnimNode_PoseHandler;
 }
 
-declare class BackgroundBlur extends ContentWidget { 
-	Padding: Margin;
-	HorizontalAlignment: EHorizontalAlignment;
-	VerticalAlignment: EVerticalAlignment;
-	bApplyAlphaToBlur: boolean;
-	BlurStrength: number;
-	bOverrideAutoRadiusCalculation: boolean;
-	BlurRadius: number;
-	LowQualityFallbackBrush: SlateBrush;
-	static Load(ResourceName: string): BackgroundBlur;
-	static Find(Outer: UObject, ResourceName: string): BackgroundBlur;
-	static GetDefaultObject(): BackgroundBlur;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BackgroundBlur;
-	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
-	SetPadding(InPadding: Margin): void;
-	SetLowQualityFallbackBrush(InBrush: SlateBrush): void;
-	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
-	SetBlurStrength(InStrength: number): void;
-	SetBlurRadius(InBlurRadius: number): void;
-	SetApplyAlphaToBlur(bInApplyAlphaToBlur: boolean): void;
-	static C(Other: UObject | any): BackgroundBlur;
+declare class AnimNode_PoseBlendNode extends AnimNode_PoseHandler { 
+	SourcePose: PoseLink;
+	BlendOption: EAlphaBlendOption;
+	CustomCurve: CurveFloat;
+	clone() : AnimNode_PoseBlendNode;
+	static C(Other: UObject | any): AnimNode_PoseBlendNode;
 }
 
-declare class BackgroundBlurSlot extends PanelSlot { 
-	Padding: Margin;
-	HorizontalAlignment: EHorizontalAlignment;
-	VerticalAlignment: EVerticalAlignment;
-	static Load(ResourceName: string): BackgroundBlurSlot;
-	static Find(Outer: UObject, ResourceName: string): BackgroundBlurSlot;
-	static GetDefaultObject(): BackgroundBlurSlot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BackgroundBlurSlot;
-	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
-	SetPadding(InPadding: Margin): void;
-	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
-	static C(Other: UObject | any): BackgroundBlurSlot;
+declare class AnimGraphNode_PoseBlendNode extends AnimGraphNode_PoseHandler { 
+	UNode: AnimNode_PoseBlendNode;
+	static Load(ResourceName: string): AnimGraphNode_PoseBlendNode;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseBlendNode;
+	static GetDefaultObject(): AnimGraphNode_PoseBlendNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseBlendNode;
+	static C(Other: UObject | any): AnimGraphNode_PoseBlendNode;
 }
 
-declare class BoolBinding extends PropertyBinding { 
-	static Load(ResourceName: string): BoolBinding;
-	static Find(Outer: UObject, ResourceName: string): BoolBinding;
-	static GetDefaultObject(): BoolBinding;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BoolBinding;
-	GetValue(): boolean;
-	static C(Other: UObject | any): BoolBinding;
+declare class AnimNode_PoseByName extends AnimNode_PoseHandler { 
+	PoseName: string;
+	PoseWeight: number;
+	clone() : AnimNode_PoseByName;
+	static C(Other: UObject | any): AnimNode_PoseByName;
 }
 
-declare class Border extends ContentWidget { 
-	ContentColorAndOpacity: LinearColor;
-	ContentColorAndOpacityDelegate: UnrealEngineDelegate<() => LinearColor>;
-	Padding: Margin;
-	HorizontalAlignment: EHorizontalAlignment;
-	VerticalAlignment: EVerticalAlignment;
-	Background: SlateBrush;
-	BackgroundDelegate: UnrealEngineDelegate<() => SlateBrush>;
-	BrushColor: LinearColor;
-	BrushColorDelegate: UnrealEngineDelegate<() => LinearColor>;
-	DesiredSizeScale: Vector2D;
-	bShowEffectWhenDisabled: boolean;
-	OnMouseButtonDownEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) => EventReply>;
-	OnMouseButtonUpEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) => EventReply>;
-	OnMouseMoveEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) => EventReply>;
-	OnMouseDoubleClickEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) => EventReply>;
-	Brush: SlateBrushAsset;
-	static Load(ResourceName: string): Border;
-	static Find(Outer: UObject, ResourceName: string): Border;
-	static GetDefaultObject(): Border;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Border;
-	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
-	SetPadding(InPadding: Margin): void;
-	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
-	SetDesiredSizeScale(InScale: Vector2D): void;
-	SetContentColorAndOpacity(InContentColorAndOpacity: LinearColor): void;
-	SetBrushFromTexture(Texture: Texture2D): void;
-	SetBrushFromMaterial(Material: MaterialInterface): void;
-	SetBrushFromAsset(Asset: SlateBrushAsset): void;
-	SetBrushColor(InBrushColor: LinearColor): void;
-	SetBrush(InBrush: SlateBrush): void;
-	GetDynamicMaterial(): MaterialInstanceDynamic;
-	static C(Other: UObject | any): Border;
+declare class AnimGraphNode_PoseByName extends AnimGraphNode_AssetPlayerBase { 
+	UNode: AnimNode_PoseByName;
+	static Load(ResourceName: string): AnimGraphNode_PoseByName;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseByName;
+	static GetDefaultObject(): AnimGraphNode_PoseByName;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseByName;
+	static C(Other: UObject | any): AnimGraphNode_PoseByName;
 }
 
-declare class BrushBinding extends PropertyBinding { 
-	static Load(ResourceName: string): BrushBinding;
-	static Find(Outer: UObject, ResourceName: string): BrushBinding;
-	static GetDefaultObject(): BrushBinding;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BrushBinding;
-	GetValue(): SlateBrush;
-	static C(Other: UObject | any): BrushBinding;
+declare type ERBFFunctionType = 'Gaussian' | 'Exponential' | 'Linear' | 'Cubic' | 'Quintic' | 'ERBFFunctionType_MAX';
+declare var ERBFFunctionType : { Gaussian:'Gaussian',Exponential:'Exponential',Linear:'Linear',Cubic:'Cubic',Quintic:'Quintic',ERBFFunctionType_MAX:'ERBFFunctionType_MAX', };
+declare type ERBFDistanceMethod = 'Euclidean' | 'Quaternion' | 'SwingAngle' | 'ERBFDistanceMethod_MAX';
+declare var ERBFDistanceMethod : { Euclidean:'Euclidean',Quaternion:'Quaternion',SwingAngle:'SwingAngle',ERBFDistanceMethod_MAX:'ERBFDistanceMethod_MAX', };
+declare type EBoneAxis = 'BA_X' | 'BA_Y' | 'BA_Z' | 'BA_MAX';
+declare var EBoneAxis : { BA_X:'BA_X',BA_Y:'BA_Y',BA_Z:'BA_Z',BA_MAX:'BA_MAX', };
+declare class RBFParams { 
+	TargetDimensions: number;
+	Radius: number;
+	UFunction: ERBFFunctionType;
+	DistanceMethod: ERBFDistanceMethod;
+	TwistAxis: EBoneAxis;
+	WeightThreshold: number;
+	clone() : RBFParams;
+	static C(Other: UObject | any): RBFParams;
 }
 
-declare type EButtonClickMethod = 'DownAndUp' | 'MouseDown' | 'MouseUp' | 'PreciseClick';
-declare var EButtonClickMethod : { DownAndUp:'DownAndUp',MouseDown:'MouseDown',MouseUp:'MouseUp',PreciseClick:'PreciseClick', };
-declare type EButtonTouchMethod = 'DownAndUp' | 'PreciseTap';
-declare var EButtonTouchMethod : { DownAndUp:'DownAndUp',PreciseTap:'PreciseTap', };
-declare class Button extends ContentWidget { 
-	Style: SlateWidgetStyleAsset;
-	WidgetStyle: ButtonStyle;
-	ColorAndOpacity: LinearColor;
-	BackgroundColor: LinearColor;
-	ClickMethod: EButtonClickMethod;
-	TouchMethod: EButtonTouchMethod;
-	IsFocusable: boolean;
-	OnClicked: UnrealEngineMulticastDelegate<() => void>;
-	OnPressed: UnrealEngineMulticastDelegate<() => void>;
-	OnReleased: UnrealEngineMulticastDelegate<() => void>;
-	OnHovered: UnrealEngineMulticastDelegate<() => void>;
-	OnUnhovered: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): Button;
-	static Find(Outer: UObject, ResourceName: string): Button;
-	static GetDefaultObject(): Button;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Button;
-	SetTouchMethod(InTouchMethod: EButtonTouchMethod): void;
-	SetStyle(InStyle: ButtonStyle): void;
-	SetColorAndOpacity(InColorAndOpacity: LinearColor): void;
-	SetClickMethod(InClickMethod: EButtonClickMethod): void;
-	SetBackgroundColor(InBackgroundColor: LinearColor): void;
-	IsPressed(): boolean;
-	static C(Other: UObject | any): Button;
+declare type EPoseDriverSource = 'Rotation' | 'Translation' | 'EPoseDriverSource_MAX';
+declare var EPoseDriverSource : { Rotation:'Rotation',Translation:'Translation',EPoseDriverSource_MAX:'EPoseDriverSource_MAX', };
+declare type EPoseDriverOutput = 'DrivePoses' | 'DriveCurves' | 'EPoseDriverOutput_MAX';
+declare var EPoseDriverOutput : { DrivePoses:'DrivePoses',DriveCurves:'DriveCurves',EPoseDriverOutput_MAX:'EPoseDriverOutput_MAX', };
+declare class PoseDriverTransform { 
+	TargetTranslation: Vector;
+	TargetRotation: Rotator;
+	clone() : PoseDriverTransform;
+	static C(Other: UObject | any): PoseDriverTransform;
 }
 
-declare class ButtonSlot extends PanelSlot { 
-	Padding: Margin;
-	HorizontalAlignment: EHorizontalAlignment;
-	VerticalAlignment: EVerticalAlignment;
-	static Load(ResourceName: string): ButtonSlot;
-	static Find(Outer: UObject, ResourceName: string): ButtonSlot;
-	static GetDefaultObject(): ButtonSlot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ButtonSlot;
-	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
-	SetPadding(InPadding: Margin): void;
-	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
-	static C(Other: UObject | any): ButtonSlot;
+declare class PoseDriverTarget { 
+	BoneTransforms: PoseDriverTransform[];
+	TargetRotation: Rotator;
+	TargetScale: number;
+	bApplyCustomCurve: boolean;
+	CustomCurve: RichCurve;
+	DrivenName: string;
+	clone() : PoseDriverTarget;
+	static C(Other: UObject | any): PoseDriverTarget;
 }
 
-declare class CanvasPanel extends PanelWidget { 
-	static Load(ResourceName: string): CanvasPanel;
-	static Find(Outer: UObject, ResourceName: string): CanvasPanel;
-	static GetDefaultObject(): CanvasPanel;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CanvasPanel;
-	AddChildToCanvas(Content: Widget): CanvasPanelSlot;
-	static C(Other: UObject | any): CanvasPanel;
+declare type EPoseDriverType = 'SwingAndTwist' | 'SwingOnly' | 'Translation' | 'EPoseDriverType_MAX';
+declare var EPoseDriverType : { SwingAndTwist:'SwingAndTwist',SwingOnly:'SwingOnly',Translation:'Translation',EPoseDriverType_MAX:'EPoseDriverType_MAX', };
+declare class AnimNode_PoseDriver extends AnimNode_PoseHandler { 
+	SourcePose: PoseLink;
+	SourceBones: BoneReference[];
+	bOnlyDriveSelectedBones: boolean;
+	OnlyDriveBones: BoneReference[];
+	EvalSpaceBone: BoneReference;
+	RBFParams: RBFParams;
+	DriveSource: EPoseDriverSource;
+	DriveOutput: EPoseDriverOutput;
+	PoseTargets: PoseDriverTarget[];
+	SourceBone: BoneReference;
+	TwistAxis: EBoneAxis;
+	Type: EPoseDriverType;
+	RadialScaling: number;
+	clone() : AnimNode_PoseDriver;
+	static C(Other: UObject | any): AnimNode_PoseDriver;
+}
+
+declare class AnimGraphNode_PoseDriver extends AnimGraphNode_PoseHandler { 
+	UNode: AnimNode_PoseDriver;
+	LastPreviewComponent: SkeletalMeshComponent;
+	static Load(ResourceName: string): AnimGraphNode_PoseDriver;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseDriver;
+	static GetDefaultObject(): AnimGraphNode_PoseDriver;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseDriver;
+	static C(Other: UObject | any): AnimGraphNode_PoseDriver;
 }
 
-declare type ECheckBoxState = 'Unchecked' | 'Checked' | 'Undetermined';
-declare var ECheckBoxState : { Unchecked:'Unchecked',Checked:'Checked',Undetermined:'Undetermined', };
-declare class CheckBox extends ContentWidget { 
-	CheckedState: CheckedState;
-	CheckedStateDelegate: UnrealEngineDelegate<() => ReturnValue>;
-	WidgetStyle: CheckBoxStyle;
-	Style: SlateWidgetStyleAsset;
-	UncheckedImage: SlateBrushAsset;
-	UncheckedHoveredImage: SlateBrushAsset;
-	UncheckedPressedImage: SlateBrushAsset;
-	CheckedImage: SlateBrushAsset;
-	CheckedHoveredImage: SlateBrushAsset;
-	CheckedPressedImage: SlateBrushAsset;
-	UndeterminedImage: SlateBrushAsset;
-	UndeterminedHoveredImage: SlateBrushAsset;
-	UndeterminedPressedImage: SlateBrushAsset;
-	HorizontalAlignment: EHorizontalAlignment;
-	Padding: Margin;
-	BorderBackgroundColor: SlateColor;
-	IsFocusable: boolean;
-	OnCheckStateChanged: UnrealEngineMulticastDelegate<(bIsChecked: boolean) => void>;
-	static Load(ResourceName: string): CheckBox;
-	static Find(Outer: UObject, ResourceName: string): CheckBox;
-	static GetDefaultObject(): CheckBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CheckBox;
-	SetIsChecked(InIsChecked: boolean): void;
-	SetCheckedState(InCheckedState: InCheckedState): void;
-	IsPressed(): boolean;
-	IsChecked(): boolean;
-	GetCheckedState(): ReturnValue;
-	static C(Other: UObject | any): CheckBox;
+declare type ESnapshotSourceMode = 'NamedSnapshot' | 'SnapshotPin' | 'ESnapshotSourceMode_MAX';
+declare var ESnapshotSourceMode : { NamedSnapshot:'NamedSnapshot',SnapshotPin:'SnapshotPin',ESnapshotSourceMode_MAX:'ESnapshotSourceMode_MAX', };
+declare class AnimNode_PoseSnapshot extends AnimNode_Base { 
+	Mode: ESnapshotSourceMode;
+	SnapshotName: string;
+	Snapshot: PoseSnapshot;
+	clone() : AnimNode_PoseSnapshot;
+	static C(Other: UObject | any): AnimNode_PoseSnapshot;
 }
 
-declare class CheckedStateBinding extends PropertyBinding { 
-	static Load(ResourceName: string): CheckedStateBinding;
-	static Find(Outer: UObject, ResourceName: string): CheckedStateBinding;
-	static GetDefaultObject(): CheckedStateBinding;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CheckedStateBinding;
-	GetValue(): ReturnValue;
-	static C(Other: UObject | any): CheckedStateBinding;
+declare class AnimGraphNode_PoseSnapshot extends AnimGraphNode_Base { 
+	UNode: AnimNode_PoseSnapshot;
+	static Load(ResourceName: string): AnimGraphNode_PoseSnapshot;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_PoseSnapshot;
+	static GetDefaultObject(): AnimGraphNode_PoseSnapshot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_PoseSnapshot;
+	static C(Other: UObject | any): AnimGraphNode_PoseSnapshot;
 }
 
-declare class CircularThrobber extends Widget { 
-	NumberOfPieces: number;
-	Period: number;
-	Radius: number;
-	PieceImage: SlateBrushAsset;
-	UImage: SlateBrush;
-	bEnableRadius: boolean;
-	static Load(ResourceName: string): CircularThrobber;
-	static Find(Outer: UObject, ResourceName: string): CircularThrobber;
-	static GetDefaultObject(): CircularThrobber;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CircularThrobber;
-	SetRadius(InRadius: number): void;
-	SetPeriod(InPeriod: number): void;
-	SetNumberOfPieces(InNumberOfPieces: number): void;
-	static C(Other: UObject | any): CircularThrobber;
+declare class RandomPlayerSequenceEntry { 
+	Sequence: AnimSequence;
+	ChanceToPlay: number;
+	MinLoopCount: number;
+	MaxLoopCount: number;
+	MinPlayRate: number;
+	MaxPlayRate: number;
+	BlendIn: AlphaBlend;
+	clone() : RandomPlayerSequenceEntry;
+	static C(Other: UObject | any): RandomPlayerSequenceEntry;
 }
 
-declare class ColorBinding extends PropertyBinding { 
-	static Load(ResourceName: string): ColorBinding;
-	static Find(Outer: UObject, ResourceName: string): ColorBinding;
-	static GetDefaultObject(): ColorBinding;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ColorBinding;
-	GetSlateValue(): SlateColor;
-	GetLinearValue(): LinearColor;
-	static C(Other: UObject | any): ColorBinding;
+declare class AnimNode_RandomPlayer extends AnimNode_Base { 
+	bShuffleMode: boolean;
+	Entries: RandomPlayerSequenceEntry[];
+	clone() : AnimNode_RandomPlayer;
+	static C(Other: UObject | any): AnimNode_RandomPlayer;
 }
 
-declare class ComboBox extends Widget { 
-	Items: UObject[];
-	OnGenerateWidgetEvent: UnrealEngineDelegate<(Item: UObject) => Widget>;
-	bIsFocusable: boolean;
-	static Load(ResourceName: string): ComboBox;
-	static Find(Outer: UObject, ResourceName: string): ComboBox;
-	static GetDefaultObject(): ComboBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComboBox;
-	static C(Other: UObject | any): ComboBox;
+declare class AnimGraphNode_RandomPlayer extends AnimGraphNode_Base { 
+	UNode: AnimNode_RandomPlayer;
+	static Load(ResourceName: string): AnimGraphNode_RandomPlayer;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RandomPlayer;
+	static GetDefaultObject(): AnimGraphNode_RandomPlayer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RandomPlayer;
+	static C(Other: UObject | any): AnimGraphNode_RandomPlayer;
 }
 
-declare class TableRowStyle extends SlateWidgetStyle { 
-	SelectorFocusedBrush: SlateBrush;
-	ActiveHoveredBrush: SlateBrush;
-	ActiveBrush: SlateBrush;
-	InactiveHoveredBrush: SlateBrush;
-	InactiveBrush: SlateBrush;
-	EvenRowBackgroundHoveredBrush: SlateBrush;
-	EvenRowBackgroundBrush: SlateBrush;
-	OddRowBackgroundHoveredBrush: SlateBrush;
-	OddRowBackgroundBrush: SlateBrush;
-	TextColor: SlateColor;
-	SelectedTextColor: SlateColor;
-	DropIndicator_Above: SlateBrush;
-	DropIndicator_Onto: SlateBrush;
-	DropIndicator_Below: SlateBrush;
-	clone() : TableRowStyle;
-	static C(Other: UObject | any): TableRowStyle;
+declare class AnimNode_ResetRoot extends AnimNode_SkeletalControlBase { 
+	clone() : AnimNode_ResetRoot;
+	static C(Other: UObject | any): AnimNode_ResetRoot;
+}
+
+declare class AnimGraphNode_ResetRoot extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_ResetRoot;
+	static Load(ResourceName: string): AnimGraphNode_ResetRoot;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ResetRoot;
+	static GetDefaultObject(): AnimGraphNode_ResetRoot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ResetRoot;
+	static C(Other: UObject | any): AnimGraphNode_ResetRoot;
+}
+
+declare type ESimulationSpace = 'ComponentSpace' | 'WorldSpace' | 'BaseBoneSpace' | 'ESimulationSpace_MAX';
+declare var ESimulationSpace : { ComponentSpace:'ComponentSpace',WorldSpace:'WorldSpace',BaseBoneSpace:'BaseBoneSpace',ESimulationSpace_MAX:'ESimulationSpace_MAX', };
+declare class AnimNode_RigidBody extends AnimNode_SkeletalControlBase { 
+	OverridePhysicsAsset: PhysicsAsset;
+	OverrideWorldGravity: Vector;
+	ExternalForce: Vector;
+	ComponentLinearAccScale: Vector;
+	ComponentLinearVelScale: Vector;
+	ComponentAppliedLinearAccClamp: Vector;
+	OverlapChannel: ECollisionChannel;
+	bEnableWorldGeometry: boolean;
+	SimulationSpace: ESimulationSpace;
+	BaseBoneRef: BoneReference;
+	bOverrideWorldGravity: boolean;
+	CachedBoundsScale: number;
+	bTransferBoneVelocities: boolean;
+	bFreezeIncomingPoseOnStart: boolean;
+	bComponentSpaceSimulation: boolean;
+	clone() : AnimNode_RigidBody;
+	static C(Other: UObject | any): AnimNode_RigidBody;
+}
+
+declare class AnimGraphNode_RigidBody extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_RigidBody;
+	static Load(ResourceName: string): AnimGraphNode_RigidBody;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RigidBody;
+	static GetDefaultObject(): AnimGraphNode_RigidBody;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RigidBody;
+	static C(Other: UObject | any): AnimGraphNode_RigidBody;
+}
+
+declare class AnimGraphNode_Root extends AnimGraphNode_Base { 
+	UNode: AnimNode_Root;
+	static Load(ResourceName: string): AnimGraphNode_Root;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Root;
+	static GetDefaultObject(): AnimGraphNode_Root;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Root;
+	static C(Other: UObject | any): AnimGraphNode_Root;
 }
 
-declare type ESelectInfo = 'OnKeyPress' | 'OnNavigation' | 'OnMouseClick' | 'Direct';
-declare var ESelectInfo : { OnKeyPress:'OnKeyPress',OnNavigation:'OnNavigation',OnMouseClick:'OnMouseClick',Direct:'Direct', };
-declare class ComboBoxString extends Widget { 
-	DefaultOptions: string[];
-	SelectedOption: string;
-	WidgetStyle: ComboBoxStyle;
-	ItemStyle: TableRowStyle;
-	ContentPadding: Margin;
-	MaxListHeight: number;
-	HasDownArrow: boolean;
-	EnableGamepadNavigationMode: boolean;
-	Font: SlateFontInfo;
-	ForegroundColor: SlateColor;
-	bIsFocusable: boolean;
-	OnGenerateWidgetEvent: UnrealEngineDelegate<(Item: string) => Widget>;
-	OnSelectionChanged: UnrealEngineMulticastDelegate<(SelectedItem: string, SelectionType: ESelectInfo) => void>;
-	OnOpening: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): ComboBoxString;
-	static Find(Outer: UObject, ResourceName: string): ComboBoxString;
-	static GetDefaultObject(): ComboBoxString;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComboBoxString;
-	SetSelectedOption(Option: string): void;
-	RemoveOption(Option: string): boolean;
-	RefreshOptions(): void;
-	GetSelectedOption(): string;
-	GetOptionCount(): number;
-	GetOptionAtIndex(Index: number): string;
-	FindOptionIndex(Option: string): number;
-	ClearSelection(): void;
-	ClearOptions(): void;
-	AddOption(Option: string): void;
-	static C(Other: UObject | any): ComboBoxString;
+declare class AnimNode_RotateRootBone extends AnimNode_Base { 
+	BasePose: PoseLink;
+	Pitch: number;
+	Yaw: number;
+	PitchScaleBiasClamp: InputScaleBiasClamp;
+	YawScaleBiasClamp: InputScaleBiasClamp;
+	MeshToComponent: Rotator;
+	ActualPitch: number;
+	ActualYaw: number;
+	clone() : AnimNode_RotateRootBone;
+	static C(Other: UObject | any): AnimNode_RotateRootBone;
 }
 
-declare type EVirtualKeyboardType = 'Default' | 'Number' | 'Web' | 'Email' | 'Password' | 'AlphaNumeric';
-declare var EVirtualKeyboardType : { Default:'Default',Number:'Number',Web:'Web',Email:'Email',Password:'Password',AlphaNumeric:'AlphaNumeric', };
-declare type ETextShapingMethod = 'Auto' | 'KerningOnly' | 'FullShaping';
-declare var ETextShapingMethod : { Auto:'Auto',KerningOnly:'KerningOnly',FullShaping:'FullShaping', };
-declare type ETextFlowDirection = 'Auto' | 'LeftToRight' | 'RightToLeft';
-declare var ETextFlowDirection : { Auto:'Auto',LeftToRight:'LeftToRight',RightToLeft:'RightToLeft', };
-declare class ShapedTextOptions { 
-	bOverride_TextShapingMethod: boolean;
-	bOverride_TextFlowDirection: boolean;
-	TextShapingMethod: TextShapingMethod;
-	TextFlowDirection: TextFlowDirection;
-	clone() : ShapedTextOptions;
-	static C(Other: UObject | any): ShapedTextOptions;
+declare class AnimGraphNode_RotateRootBone extends AnimGraphNode_Base { 
+	UNode: AnimNode_RotateRootBone;
+	static Load(ResourceName: string): AnimGraphNode_RotateRootBone;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RotateRootBone;
+	static GetDefaultObject(): AnimGraphNode_RotateRootBone;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RotateRootBone;
+	static C(Other: UObject | any): AnimGraphNode_RotateRootBone;
 }
 
-declare type ETextCommit = 'Default' | 'OnEnter' | 'OnUserMovedFocus' | 'OnCleared';
-declare var ETextCommit : { Default:'Default',OnEnter:'OnEnter',OnUserMovedFocus:'OnUserMovedFocus',OnCleared:'OnCleared', };
-declare class EditableText extends Widget { 
-	Text: string;
-	TextDelegate: UnrealEngineDelegate<() => string>;
-	HintText: string;
-	HintTextDelegate: UnrealEngineDelegate<() => string>;
-	WidgetStyle: EditableTextStyle;
-	Style: SlateWidgetStyleAsset;
-	BackgroundImageSelected: SlateBrushAsset;
-	BackgroundImageComposing: SlateBrushAsset;
-	CaretImage: SlateBrushAsset;
-	Font: SlateFontInfo;
-	ColorAndOpacity: SlateColor;
-	IsReadOnly: boolean;
-	IsPassword: boolean;
-	MinimumDesiredWidth: number;
-	IsCaretMovedWhenGainFocus: boolean;
-	SelectAllTextWhenFocused: boolean;
-	RevertTextOnEscape: boolean;
-	ClearKeyboardFocusOnCommit: boolean;
-	SelectAllTextOnCommit: boolean;
-	AllowContextMenu: boolean;
-	KeyboardType: EVirtualKeyboardType;
-	ShapedTextOptions: ShapedTextOptions;
-	OnTextChanged: UnrealEngineMulticastDelegate<(Text: string) => void>;
-	OnTextCommitted: UnrealEngineMulticastDelegate<(Text: string, CommitMethod: ETextCommit) => void>;
-	static Load(ResourceName: string): EditableText;
-	static Find(Outer: UObject, ResourceName: string): EditableText;
-	static GetDefaultObject(): EditableText;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditableText;
-	SetText(InText: string): void;
-	SetIsReadOnly(InbIsReadyOnly: boolean): void;
-	SetIsPassword(InbIsPassword: boolean): void;
-	SetHintText(InHintText: string): void;
-	GetText(): string;
-	static C(Other: UObject | any): EditableText;
+declare class AnimNode_RotationMultiplier extends AnimNode_SkeletalControlBase { 
+	TargetBone: BoneReference;
+	SourceBone: BoneReference;
+	Multiplier: number;
+	RotationAxisToRefer: EBoneAxis;
+	bIsAdditive: boolean;
+	clone() : AnimNode_RotationMultiplier;
+	static C(Other: UObject | any): AnimNode_RotationMultiplier;
 }
 
-declare class EditableTextBox extends Widget { 
-	Text: string;
-	TextDelegate: UnrealEngineDelegate<() => string>;
-	WidgetStyle: EditableTextBoxStyle;
-	Style: SlateWidgetStyleAsset;
-	HintText: string;
-	HintTextDelegate: UnrealEngineDelegate<() => string>;
-	Font: SlateFontInfo;
-	ForegroundColor: LinearColor;
-	BackgroundColor: LinearColor;
-	ReadOnlyForegroundColor: LinearColor;
-	IsReadOnly: boolean;
-	IsPassword: boolean;
-	MinimumDesiredWidth: number;
-	Padding: Margin;
-	IsCaretMovedWhenGainFocus: boolean;
-	SelectAllTextWhenFocused: boolean;
-	RevertTextOnEscape: boolean;
-	ClearKeyboardFocusOnCommit: boolean;
-	SelectAllTextOnCommit: boolean;
-	AllowContextMenu: boolean;
-	KeyboardType: EVirtualKeyboardType;
-	ShapedTextOptions: ShapedTextOptions;
-	OnTextChanged: UnrealEngineMulticastDelegate<(Text: string) => void>;
-	OnTextCommitted: UnrealEngineMulticastDelegate<(Text: string, CommitMethod: ETextCommit) => void>;
-	static Load(ResourceName: string): EditableTextBox;
-	static Find(Outer: UObject, ResourceName: string): EditableTextBox;
-	static GetDefaultObject(): EditableTextBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditableTextBox;
-	SetText(InText: string): void;
-	SetIsReadOnly(bReadOnly: boolean): void;
-	SetHintText(InText: string): void;
-	SetError(InError: string): void;
-	HasError(): boolean;
-	GetText(): string;
-	ClearError(): void;
-	static C(Other: UObject | any): EditableTextBox;
+declare class AnimGraphNode_RotationMultiplier extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_RotationMultiplier;
+	static Load(ResourceName: string): AnimGraphNode_RotationMultiplier;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RotationMultiplier;
+	static GetDefaultObject(): AnimGraphNode_RotationMultiplier;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RotationMultiplier;
+	static C(Other: UObject | any): AnimGraphNode_RotationMultiplier;
+}
+
+declare class AnimNode_RotationOffsetBlendSpace extends AnimNode_BlendSpacePlayer { 
+	BasePose: PoseLink;
+	LODThreshold: number;
+	bIsLODEnabled: boolean;
+	AlphaInputType: EAnimAlphaInputType;
+	Alpha: number;
+	AlphaScaleBias: InputScaleBias;
+	ActualAlpha: number;
+	bAlphaBoolEnabled: boolean;
+	AlphaBoolBlend: InputAlphaBoolBlend;
+	AlphaCurveName: string;
+	AlphaScaleBiasClamp: InputScaleBiasClamp;
+	clone() : AnimNode_RotationOffsetBlendSpace;
+	static C(Other: UObject | any): AnimNode_RotationOffsetBlendSpace;
 }
 
-declare class ExpandableAreaStyle extends SlateWidgetStyle { 
-	CollapsedImage: SlateBrush;
-	ExpandedImage: SlateBrush;
-	RolloutAnimationSeconds: number;
-	clone() : ExpandableAreaStyle;
-	static C(Other: UObject | any): ExpandableAreaStyle;
+declare class AnimGraphNode_RotationOffsetBlendSpace extends AnimGraphNode_BlendSpaceBase { 
+	UNode: AnimNode_RotationOffsetBlendSpace;
+	static Load(ResourceName: string): AnimGraphNode_RotationOffsetBlendSpace;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RotationOffsetBlendSpace;
+	static GetDefaultObject(): AnimGraphNode_RotationOffsetBlendSpace;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RotationOffsetBlendSpace;
+	static C(Other: UObject | any): AnimGraphNode_RotationOffsetBlendSpace;
 }
 
-declare class ExpandableArea extends Widget { 
-	Style: ExpandableAreaStyle;
-	BorderBrush: SlateBrush;
-	BorderColor: SlateColor;
-	bIsExpanded: boolean;
-	MaxHeight: number;
-	HeaderPadding: Margin;
-	AreaPadding: Margin;
-	OnExpansionChanged: UnrealEngineMulticastDelegate<(Area: ExpandableArea, bIsExpanded: boolean) => void>;
-	HeaderContent: Widget;
-	BodyContent: Widget;
-	static Load(ResourceName: string): ExpandableArea;
-	static Find(Outer: UObject, ResourceName: string): ExpandableArea;
-	static GetDefaultObject(): ExpandableArea;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExpandableArea;
-	SetIsExpanded_Animated(IsExpanded: boolean): void;
-	SetIsExpanded(IsExpanded: boolean): void;
-	GetIsExpanded(): boolean;
-	static C(Other: UObject | any): ExpandableArea;
+declare class AnimNode_SaveCachedPose extends AnimNode_Base { 
+	Pose: PoseLink;
+	CachePoseName: string;
+	GlobalWeight: number;
+	clone() : AnimNode_SaveCachedPose;
+	static C(Other: UObject | any): AnimNode_SaveCachedPose;
 }
 
-declare class FloatBinding extends PropertyBinding { 
-	static Load(ResourceName: string): FloatBinding;
-	static Find(Outer: UObject, ResourceName: string): FloatBinding;
-	static GetDefaultObject(): FloatBinding;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FloatBinding;
-	GetValue(): number;
-	static C(Other: UObject | any): FloatBinding;
+declare class AnimGraphNode_SaveCachedPose extends AnimGraphNode_Base { 
+	UNode: AnimNode_SaveCachedPose;
+	CacheName: string;
+	static Load(ResourceName: string): AnimGraphNode_SaveCachedPose;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SaveCachedPose;
+	static GetDefaultObject(): AnimGraphNode_SaveCachedPose;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SaveCachedPose;
+	static C(Other: UObject | any): AnimGraphNode_SaveCachedPose;
 }
 
-declare class GridPanel extends PanelWidget { 
-	ColumnFill: number[];
-	RowFill: number[];
-	static Load(ResourceName: string): GridPanel;
-	static Find(Outer: UObject, ResourceName: string): GridPanel;
-	static GetDefaultObject(): GridPanel;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GridPanel;
-	AddChildToGrid(Content: Widget): GridSlot;
-	static C(Other: UObject | any): GridPanel;
+declare type EScaleChainInitialLength = 'FixedDefaultLengthValue' | 'Distance' | 'ChainLength' | 'EScaleChainInitialLength_MAX';
+declare var EScaleChainInitialLength : { FixedDefaultLengthValue:'FixedDefaultLengthValue',Distance:'Distance',ChainLength:'ChainLength',EScaleChainInitialLength_MAX:'EScaleChainInitialLength_MAX', };
+declare class AnimNode_ScaleChainLength extends AnimNode_Base { 
+	InputPose: PoseLink;
+	DefaultChainLength: number;
+	ChainStartBone: BoneReference;
+	ChainEndBone: BoneReference;
+	ChainInitialLength: EScaleChainInitialLength;
+	TargetLocation: Vector;
+	Alpha: number;
+	ActualAlpha: number;
+	AlphaScaleBias: InputScaleBias;
+	bBoneIndicesCached: boolean;
+	clone() : AnimNode_ScaleChainLength;
+	static C(Other: UObject | any): AnimNode_ScaleChainLength;
 }
 
-declare class HorizontalBox extends PanelWidget { 
-	static Load(ResourceName: string): HorizontalBox;
-	static Find(Outer: UObject, ResourceName: string): HorizontalBox;
-	static GetDefaultObject(): HorizontalBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HorizontalBox;
-	AddChildToHorizontalBox(Content: Widget): HorizontalBoxSlot;
-	static C(Other: UObject | any): HorizontalBox;
+declare class AnimGraphNode_ScaleChainLength extends AnimGraphNode_Base { 
+	UNode: AnimNode_ScaleChainLength;
+	static Load(ResourceName: string): AnimGraphNode_ScaleChainLength;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_ScaleChainLength;
+	static GetDefaultObject(): AnimGraphNode_ScaleChainLength;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_ScaleChainLength;
+	static C(Other: UObject | any): AnimGraphNode_ScaleChainLength;
 }
 
-declare class UImage extends Widget { 
-	UImage: SlateBrushAsset;
-	Brush: SlateBrush;
-	BrushDelegate: UnrealEngineDelegate<() => SlateBrush>;
-	ColorAndOpacity: LinearColor;
-	ColorAndOpacityDelegate: UnrealEngineDelegate<() => LinearColor>;
-	OnMouseButtonDownEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) => EventReply>;
-	static Load(ResourceName: string): UImage;
-	static Find(Outer: UObject, ResourceName: string): UImage;
-	static GetDefaultObject(): UImage;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UImage;
-	SetOpacity(InOpacity: number): void;
-	SetColorAndOpacity(InColorAndOpacity: LinearColor): void;
-	SetBrushFromTextureDynamic(Texture: Texture2DDynamic,bMatchSize: boolean): void;
-	SetBrushFromTexture(Texture: Texture2D,bMatchSize: boolean): void;
-	SetBrushFromMaterial(Material: MaterialInterface): void;
-	SetBrushFromAsset(Asset: SlateBrushAsset): void;
-	SetBrush(InBrush: SlateBrush): void;
-	GetDynamicMaterial(): MaterialInstanceDynamic;
-	static C(Other: UObject | any): UImage;
+declare type ESequenceEvalReinit = 'NoReset' | 'StartPosition' | 'ExplicitTime' | 'ESequenceEvalReinit_MAX';
+declare var ESequenceEvalReinit : { NoReset:'NoReset',StartPosition:'StartPosition',ExplicitTime:'ExplicitTime',ESequenceEvalReinit_MAX:'ESequenceEvalReinit_MAX', };
+declare class AnimNode_SequenceEvaluator extends AnimNode_AssetPlayerBase { 
+	Sequence: AnimSequenceBase;
+	ExplicitTime: number;
+	bShouldLoop: boolean;
+	bTeleportToExplicitTime: boolean;
+	StartPosition: number;
+	ReinitializationBehavior: ESequenceEvalReinit;
+	bReinitialized: boolean;
+	clone() : AnimNode_SequenceEvaluator;
+	static C(Other: UObject | any): AnimNode_SequenceEvaluator;
 }
 
-declare class InputKeySelector extends Widget { 
-	WidgetStyle: ButtonStyle;
-	TextStyle: TextBlockStyle;
-	SelectedKey: InputChord;
-	Font: SlateFontInfo;
-	Margin: Margin;
-	ColorAndOpacity: LinearColor;
-	KeySelectionText: string;
-	NoKeySpecifiedText: string;
-	bAllowModifierKeys: boolean;
-	bAllowGamepadKeys: boolean;
-	EscapeKeys: Key[];
-	OnKeySelected: UnrealEngineMulticastDelegate<(SelectedKey: InputChord) => void>;
-	OnIsSelectingKeyChanged: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): InputKeySelector;
-	static Find(Outer: UObject, ResourceName: string): InputKeySelector;
-	static GetDefaultObject(): InputKeySelector;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InputKeySelector;
-	SetTextBlockVisibility(InVisibility: InVisibility): void;
-	SetSelectedKey(InSelectedKey: InputChord): void;
-	SetNoKeySpecifiedText(InNoKeySpecifiedText: string): void;
-	SetKeySelectionText(InKeySelectionText: string): void;
-	SetAllowModifierKeys(bInAllowModifierKeys: boolean): void;
-	SetAllowGamepadKeys(bInAllowGamepadKeys: boolean): void;
-	GetIsSelectingKey(): boolean;
-	static C(Other: UObject | any): InputKeySelector;
+declare class AnimGraphNode_SequenceEvaluator extends AnimGraphNode_AssetPlayerBase { 
+	UNode: AnimNode_SequenceEvaluator;
+	static Load(ResourceName: string): AnimGraphNode_SequenceEvaluator;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SequenceEvaluator;
+	static GetDefaultObject(): AnimGraphNode_SequenceEvaluator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SequenceEvaluator;
+	static C(Other: UObject | any): AnimGraphNode_SequenceEvaluator;
 }
 
-declare class Int32Binding extends PropertyBinding { 
-	static Load(ResourceName: string): Int32Binding;
-	static Find(Outer: UObject, ResourceName: string): Int32Binding;
-	static GetDefaultObject(): Int32Binding;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Int32Binding;
-	GetValue(): number;
-	static C(Other: UObject | any): Int32Binding;
+declare class AnimNode_SequencePlayer extends AnimNode_AssetPlayerBase { 
+	Sequence: AnimSequenceBase;
+	bLoopAnimation: boolean;
+	PlayRateBasis: number;
+	PlayRate: number;
+	PlayRateScaleBiasClamp: InputScaleBiasClamp;
+	StartPosition: number;
+	clone() : AnimNode_SequencePlayer;
+	static C(Other: UObject | any): AnimNode_SequencePlayer;
 }
 
-declare class InvalidationBox extends ContentWidget { 
-	bCanCache: boolean;
-	CacheRelativeTransforms: boolean;
-	static Load(ResourceName: string): InvalidationBox;
-	static Find(Outer: UObject, ResourceName: string): InvalidationBox;
-	static GetDefaultObject(): InvalidationBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InvalidationBox;
-	SetCanCache(CanCache: boolean): void;
-	InvalidateCache(): void;
-	GetCanCache(): boolean;
-	static C(Other: UObject | any): InvalidationBox;
+declare class AnimGraphNode_SequencePlayer extends AnimGraphNode_AssetPlayerBase { 
+	UNode: AnimNode_SequencePlayer;
+	static Load(ResourceName: string): AnimGraphNode_SequencePlayer;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SequencePlayer;
+	static GetDefaultObject(): AnimGraphNode_SequencePlayer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SequencePlayer;
+	static C(Other: UObject | any): AnimGraphNode_SequencePlayer;
 }
 
-declare class TableViewBase extends Widget { 
-	static Load(ResourceName: string): TableViewBase;
-	static Find(Outer: UObject, ResourceName: string): TableViewBase;
-	static GetDefaultObject(): TableViewBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TableViewBase;
-	static C(Other: UObject | any): TableViewBase;
+declare class AnimNode_Slot extends AnimNode_Base { 
+	Source: PoseLink;
+	SlotName: string;
+	bAlwaysUpdateSourcePose: boolean;
+	clone() : AnimNode_Slot;
+	static C(Other: UObject | any): AnimNode_Slot;
 }
 
-declare type ESelectionMode = 'None' | 'Single' | 'SingleToggle' | 'Multi';
-declare var ESelectionMode : { None:'None',Single:'Single',SingleToggle:'SingleToggle',Multi:'Multi', };
-declare class ListView extends TableViewBase { 
-	ItemHeight: number;
-	Items: UObject[];
-	SelectionMode: ESelectionMode;
-	OnGenerateRowEvent: UnrealEngineDelegate<(Item: UObject) => Widget>;
-	static Load(ResourceName: string): ListView;
-	static Find(Outer: UObject, ResourceName: string): ListView;
-	static GetDefaultObject(): ListView;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ListView;
-	static C(Other: UObject | any): ListView;
+declare class AnimGraphNode_Slot extends AnimGraphNode_Base { 
+	UNode: AnimNode_Slot;
+	static Load(ResourceName: string): AnimGraphNode_Slot;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Slot;
+	static GetDefaultObject(): AnimGraphNode_Slot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Slot;
+	static C(Other: UObject | any): AnimGraphNode_Slot;
 }
 
-declare type EMenuPlacement = 'MenuPlacement_BelowAnchor' | 'MenuPlacement_CenteredBelowAnchor' | 'MenuPlacement_BelowRightAnchor' | 'MenuPlacement_ComboBox' | 'MenuPlacement_ComboBoxRight' | 'MenuPlacement_MenuRight' | 'MenuPlacement_AboveAnchor' | 'MenuPlacement_CenteredAboveAnchor' | 'MenuPlacement_AboveRightAnchor' | 'MenuPlacement_MenuLeft' | 'MenuPlacement_Center' | 'MenuPlacement_RightLeftCenter';
-declare var EMenuPlacement : { MenuPlacement_BelowAnchor:'MenuPlacement_BelowAnchor',MenuPlacement_CenteredBelowAnchor:'MenuPlacement_CenteredBelowAnchor',MenuPlacement_BelowRightAnchor:'MenuPlacement_BelowRightAnchor',MenuPlacement_ComboBox:'MenuPlacement_ComboBox',MenuPlacement_ComboBoxRight:'MenuPlacement_ComboBoxRight',MenuPlacement_MenuRight:'MenuPlacement_MenuRight',MenuPlacement_AboveAnchor:'MenuPlacement_AboveAnchor',MenuPlacement_CenteredAboveAnchor:'MenuPlacement_CenteredAboveAnchor',MenuPlacement_AboveRightAnchor:'MenuPlacement_AboveRightAnchor',MenuPlacement_MenuLeft:'MenuPlacement_MenuLeft',MenuPlacement_Center:'MenuPlacement_Center',MenuPlacement_RightLeftCenter:'MenuPlacement_RightLeftCenter', };
-declare class MenuAnchor extends ContentWidget { 
-	MenuClass: UnrealEngineClass;
-	OnGetMenuContentEvent: UnrealEngineDelegate<() => Widget>;
-	Placement: EMenuPlacement;
-	ShouldDeferPaintingAfterWindowContent: boolean;
-	UseApplicationMenuStack: boolean;
-	OnMenuOpenChanged: UnrealEngineMulticastDelegate<(bIsOpen: boolean) => void>;
-	static Load(ResourceName: string): MenuAnchor;
-	static Find(Outer: UObject, ResourceName: string): MenuAnchor;
-	static GetDefaultObject(): MenuAnchor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MenuAnchor;
-	ToggleOpen(bFocusOnOpen: boolean): void;
-	ShouldOpenDueToClick(): boolean;
-	Open(bFocusMenu: boolean): void;
-	IsOpen(): boolean;
-	HasOpenSubMenus(): boolean;
-	GetMenuPosition(): Vector2D;
-	Close(): void;
-	static C(Other: UObject | any): MenuAnchor;
+declare type ESplineBoneAxis = 'X' | 'Y' | 'Z' | 'ESplineBoneAxis_MAX';
+declare var ESplineBoneAxis : { X:'X',Y:'Y',Z:'Z',ESplineBoneAxis_MAX:'ESplineBoneAxis_MAX', };
+declare class SplineIKCachedBoneData { 
+	Bone: BoneReference;
+	RefSkeletonIndex: number;
+	clone() : SplineIKCachedBoneData;
+	static C(Other: UObject | any): SplineIKCachedBoneData;
+}
+
+declare class AnimNode_SplineIK extends AnimNode_SkeletalControlBase { 
+	StartBone: BoneReference;
+	EndBone: BoneReference;
+	BoneAxis: ESplineBoneAxis;
+	bAutoCalculateSpline: boolean;
+	PointCount: number;
+	ControlPoints: Transform[];
+	Roll: number;
+	TwistStart: number;
+	TwistEnd: number;
+	TwistBlend: AlphaBlend;
+	Stretch: number;
+	Offset: number;
+	BoneSpline: SplineCurves;
+	OriginalSplineLength: number;
+	CachedBoneReferences: SplineIKCachedBoneData[];
+	CachedBoneLengths: number[];
+	CachedOffsetRotations: Quat[];
+	clone() : AnimNode_SplineIK;
+	static C(Other: UObject | any): AnimNode_SplineIK;
+}
+
+declare class AnimGraphNode_SplineIK extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_SplineIK;
+	static Load(ResourceName: string): AnimGraphNode_SplineIK;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SplineIK;
+	static GetDefaultObject(): AnimGraphNode_SplineIK;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SplineIK;
+	static C(Other: UObject | any): AnimGraphNode_SplineIK;
 }
 
-declare class MouseCursorBinding extends PropertyBinding { 
-	static Load(ResourceName: string): MouseCursorBinding;
-	static Find(Outer: UObject, ResourceName: string): MouseCursorBinding;
-	static GetDefaultObject(): MouseCursorBinding;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MouseCursorBinding;
-	GetValue(): EMouseCursor;
-	static C(Other: UObject | any): MouseCursorBinding;
+declare class AnimNode_SpringBone extends AnimNode_SkeletalControlBase { 
+	SpringBone: BoneReference;
+	bLimitDisplacement: boolean;
+	MaxDisplacement: number;
+	SpringStiffness: number;
+	SpringDamping: number;
+	ErrorResetThresh: number;
+	bNoZSpring: boolean;
+	bTranslateX: boolean;
+	bTranslateY: boolean;
+	bTranslateZ: boolean;
+	bRotateX: boolean;
+	bRotateY: boolean;
+	bRotateZ: boolean;
+	clone() : AnimNode_SpringBone;
+	static C(Other: UObject | any): AnimNode_SpringBone;
 }
 
-declare class MovieScene2DTransformSection extends MovieSceneSection { 
-	Translation: RichCurve;
-	Rotation: RichCurve;
-	Scale: RichCurve;
-	Shear: RichCurve;
-	static Load(ResourceName: string): MovieScene2DTransformSection;
-	static Find(Outer: UObject, ResourceName: string): MovieScene2DTransformSection;
-	static GetDefaultObject(): MovieScene2DTransformSection;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene2DTransformSection;
-	static C(Other: UObject | any): MovieScene2DTransformSection;
+declare class AnimGraphNode_SpringBone extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_SpringBone;
+	static Load(ResourceName: string): AnimGraphNode_SpringBone;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SpringBone;
+	static GetDefaultObject(): AnimGraphNode_SpringBone;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SpringBone;
+	static C(Other: UObject | any): AnimGraphNode_SpringBone;
 }
 
-declare class MovieSceneNameableTrack extends MovieSceneTrack { 
-	DisplayName: string;
-	static Load(ResourceName: string): MovieSceneNameableTrack;
-	static Find(Outer: UObject, ResourceName: string): MovieSceneNameableTrack;
-	static GetDefaultObject(): MovieSceneNameableTrack;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneNameableTrack;
-	static C(Other: UObject | any): MovieSceneNameableTrack;
+declare class AnimNode_StateMachine extends AnimNode_Base { 
+	StateMachineIndexInClass: number;
+	MaxTransitionsPerFrame: number;
+	bSkipFirstUpdateTransition: boolean;
+	bReinitializeOnBecomingRelevant: boolean;
+	CurrentState: number;
+	ElapsedTime: number;
+	clone() : AnimNode_StateMachine;
+	static C(Other: UObject | any): AnimNode_StateMachine;
 }
 
-declare class MovieScenePropertyTrack extends MovieSceneNameableTrack { 
-	UniqueTrackName: string;
-	PropertyName: string;
-	PropertyPath: string;
-	Sections: MovieSceneSection[];
-	static Load(ResourceName: string): MovieScenePropertyTrack;
-	static Find(Outer: UObject, ResourceName: string): MovieScenePropertyTrack;
-	static GetDefaultObject(): MovieScenePropertyTrack;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePropertyTrack;
-	static C(Other: UObject | any): MovieScenePropertyTrack;
+declare class AnimGraphNode_StateMachine extends AnimGraphNode_StateMachineBase { 
+	UNode: AnimNode_StateMachine;
+	static Load(ResourceName: string): AnimGraphNode_StateMachine;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_StateMachine;
+	static GetDefaultObject(): AnimGraphNode_StateMachine;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_StateMachine;
+	static C(Other: UObject | any): AnimGraphNode_StateMachine;
 }
 
-declare class MovieScene2DTransformTrack extends MovieScenePropertyTrack { 
-	static Load(ResourceName: string): MovieScene2DTransformTrack;
-	static Find(Outer: UObject, ResourceName: string): MovieScene2DTransformTrack;
-	static GetDefaultObject(): MovieScene2DTransformTrack;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScene2DTransformTrack;
-	static C(Other: UObject | any): MovieScene2DTransformTrack;
+declare class AnimNode_SubInput extends AnimNode_Base { 
+	clone() : AnimNode_SubInput;
+	static C(Other: UObject | any): AnimNode_SubInput;
 }
 
-declare class MovieSceneMarginSection extends MovieSceneSection { 
-	TopCurve: RichCurve;
-	LeftCurve: RichCurve;
-	RightCurve: RichCurve;
-	BottomCurve: RichCurve;
-	static Load(ResourceName: string): MovieSceneMarginSection;
-	static Find(Outer: UObject, ResourceName: string): MovieSceneMarginSection;
-	static GetDefaultObject(): MovieSceneMarginSection;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMarginSection;
-	static C(Other: UObject | any): MovieSceneMarginSection;
+declare class AnimGraphNode_SubInput extends AnimGraphNode_Base { 
+	UNode: AnimNode_SubInput;
+	static Load(ResourceName: string): AnimGraphNode_SubInput;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SubInput;
+	static GetDefaultObject(): AnimGraphNode_SubInput;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SubInput;
+	static C(Other: UObject | any): AnimGraphNode_SubInput;
 }
 
-declare class MovieSceneMarginTrack extends MovieScenePropertyTrack { 
-	static Load(ResourceName: string): MovieSceneMarginTrack;
-	static Find(Outer: UObject, ResourceName: string): MovieSceneMarginTrack;
-	static GetDefaultObject(): MovieSceneMarginTrack;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMarginTrack;
-	static C(Other: UObject | any): MovieSceneMarginTrack;
+declare class AnimNode_SubInstance extends AnimNode_Base { 
+	InPose: PoseLink;
+	InstanceClass: UnrealEngineClass;
+	Tag: string;
+	InstanceToRun: AnimInstance;
+	InstanceProperties: Property[];
+	SubInstanceProperties: Property[];
+	SourcePropertyNames: string[];
+	DestPropertyNames: string[];
+	clone() : AnimNode_SubInstance;
+	static C(Other: UObject | any): AnimNode_SubInstance;
 }
 
-declare class MovieSceneMaterialTrack extends MovieSceneNameableTrack { 
-	Sections: MovieSceneSection[];
-	static Load(ResourceName: string): MovieSceneMaterialTrack;
-	static Find(Outer: UObject, ResourceName: string): MovieSceneMaterialTrack;
-	static GetDefaultObject(): MovieSceneMaterialTrack;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMaterialTrack;
-	static C(Other: UObject | any): MovieSceneMaterialTrack;
+declare class AnimGraphNode_SubInstance extends AnimGraphNode_Base { 
+	UNode: AnimNode_SubInstance;
+	KnownExposableProperties: string[];
+	ExposedPropertyNames: string[];
+	static Load(ResourceName: string): AnimGraphNode_SubInstance;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_SubInstance;
+	static GetDefaultObject(): AnimGraphNode_SubInstance;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_SubInstance;
+	static C(Other: UObject | any): AnimGraphNode_SubInstance;
 }
 
-declare class MovieSceneWidgetMaterialTrack extends MovieSceneMaterialTrack { 
-	BrushPropertyNamePath: string[];
-	TrackName: string;
-	static Load(ResourceName: string): MovieSceneWidgetMaterialTrack;
-	static Find(Outer: UObject, ResourceName: string): MovieSceneWidgetMaterialTrack;
-	static GetDefaultObject(): MovieSceneWidgetMaterialTrack;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneWidgetMaterialTrack;
-	static C(Other: UObject | any): MovieSceneWidgetMaterialTrack;
+declare class RotationLimit { 
+	LimitMin: Vector;
+	LimitMax: Vector;
+	clone() : RotationLimit;
+	static C(Other: UObject | any): RotationLimit;
 }
 
-declare type ETextJustify = 'Left' | 'Center' | 'Right';
-declare var ETextJustify : { Left:'Left',Center:'Center',Right:'Right', };
-declare type ETextWrappingPolicy = 'DefaultWrapping' | 'AllowPerCharacterWrapping';
-declare var ETextWrappingPolicy : { DefaultWrapping:'DefaultWrapping',AllowPerCharacterWrapping:'AllowPerCharacterWrapping', };
-declare class TextLayoutWidget extends Widget { 
-	ShapedTextOptions: ShapedTextOptions;
-	Justification: ETextJustify;
-	AutoWrapText: boolean;
-	WrapTextAt: number;
-	WrappingPolicy: WrappingPolicy;
-	Margin: Margin;
-	LineHeightPercentage: number;
-	static Load(ResourceName: string): TextLayoutWidget;
-	static Find(Outer: UObject, ResourceName: string): TextLayoutWidget;
-	static GetDefaultObject(): TextLayoutWidget;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextLayoutWidget;
-	static C(Other: UObject | any): TextLayoutWidget;
+declare class AnimNode_Trail extends AnimNode_SkeletalControlBase { 
+	TrailBone: BoneReference;
+	ChainLength: number;
+	ChainBoneAxis: EAxis;
+	bInvertChainBoneAxis: boolean;
+	bLimitStretch: boolean;
+	bLimitRotation: boolean;
+	bUsePlanarLimit: boolean;
+	bActorSpaceFakeVel: boolean;
+	bReorientParentToChild: boolean;
+	bEnableDebug: boolean;
+	bShowBaseMotion: boolean;
+	bShowTrailLocation: boolean;
+	bShowLimit: boolean;
+	DebugLifeTime: number;
+	TrailRelaxation: number;
+	UnwindingSize: any;
+	RelaxationSpeedScale: number;
+	TrailRelaxationSpeed: RuntimeFloatCurve;
+	RelaxationSpeedScaleInputProcessor: InputScaleBiasClamp;
+	RotationLimits: RotationLimit[];
+	RotationOffsets: Vector[];
+	PlanarLimits: AnimPhysPlanarLimit[];
+	StretchLimit: number;
+	FakeVelocity: Vector;
+	BaseJoint: BoneReference;
+	TrailBoneRotationBlendAlpha: number;
+	LastBoneRotationAnimAlphaBlend: number;
+	clone() : AnimNode_Trail;
+	static C(Other: UObject | any): AnimNode_Trail;
 }
 
-declare class MultiLineEditableText extends TextLayoutWidget { 
-	Text: string;
-	HintText: string;
-	HintTextDelegate: UnrealEngineDelegate<() => string>;
-	WidgetStyle: TextBlockStyle;
-	bIsReadOnly: boolean;
-	Font: SlateFontInfo;
-	AllowContextMenu: boolean;
-	OnTextChanged: UnrealEngineMulticastDelegate<(Text: string) => void>;
-	OnTextCommitted: UnrealEngineMulticastDelegate<(Text: string, CommitMethod: ETextCommit) => void>;
-	static Load(ResourceName: string): MultiLineEditableText;
-	static Find(Outer: UObject, ResourceName: string): MultiLineEditableText;
-	static GetDefaultObject(): MultiLineEditableText;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MultiLineEditableText;
-	SetText(InText: string): void;
-	SetIsReadOnly(bReadOnly: boolean): void;
-	GetText(): string;
-	static C(Other: UObject | any): MultiLineEditableText;
+declare class AnimGraphNode_Trail extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_Trail;
+	static Load(ResourceName: string): AnimGraphNode_Trail;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_Trail;
+	static GetDefaultObject(): AnimGraphNode_Trail;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_Trail;
+	static C(Other: UObject | any): AnimGraphNode_Trail;
 }
 
-declare class MultiLineEditableTextBox extends TextLayoutWidget { 
-	Text: string;
-	HintText: string;
-	HintTextDelegate: UnrealEngineDelegate<() => string>;
-	WidgetStyle: EditableTextBoxStyle;
-	TextStyle: TextBlockStyle;
-	bIsReadOnly: boolean;
-	AllowContextMenu: boolean;
-	Style: SlateWidgetStyleAsset;
-	Font: SlateFontInfo;
-	ForegroundColor: LinearColor;
-	BackgroundColor: LinearColor;
-	ReadOnlyForegroundColor: LinearColor;
-	OnTextChanged: UnrealEngineMulticastDelegate<(Text: string) => void>;
-	OnTextCommitted: UnrealEngineMulticastDelegate<(Text: string, CommitMethod: ETextCommit) => void>;
-	static Load(ResourceName: string): MultiLineEditableTextBox;
-	static Find(Outer: UObject, ResourceName: string): MultiLineEditableTextBox;
-	static GetDefaultObject(): MultiLineEditableTextBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MultiLineEditableTextBox;
-	SetText(InText: string): void;
-	SetIsReadOnly(bReadOnly: boolean): void;
-	SetError(InError: string): void;
-	GetText(): string;
-	static C(Other: UObject | any): MultiLineEditableTextBox;
+declare type EEvaluatorDataSource = 'EDS_SourcePose' | 'EDS_DestinationPose' | 'EDS_MAX';
+declare var EEvaluatorDataSource : { EDS_SourcePose:'EDS_SourcePose',EDS_DestinationPose:'EDS_DestinationPose',EDS_MAX:'EDS_MAX', };
+declare type EEvaluatorMode = 'EM_Standard' | 'EM_Freeze' | 'EM_DelayedFreeze' | 'EM_MAX';
+declare var EEvaluatorMode : { EM_Standard:'EM_Standard',EM_Freeze:'EM_Freeze',EM_DelayedFreeze:'EM_DelayedFreeze',EM_MAX:'EM_MAX', };
+declare class AnimNode_TransitionPoseEvaluator extends AnimNode_Base { 
+	DataSource: EEvaluatorDataSource;
+	EvaluatorMode: EEvaluatorMode;
+	FramesToCachePose: number;
+	CacheFramesRemaining: number;
+	clone() : AnimNode_TransitionPoseEvaluator;
+	static C(Other: UObject | any): AnimNode_TransitionPoseEvaluator;
 }
 
-declare class NamedSlot extends ContentWidget { 
-	static Load(ResourceName: string): NamedSlot;
-	static Find(Outer: UObject, ResourceName: string): NamedSlot;
-	static GetDefaultObject(): NamedSlot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NamedSlot;
-	static C(Other: UObject | any): NamedSlot;
+declare class AnimGraphNode_TransitionPoseEvaluator extends AnimGraphNode_Base { 
+	UNode: AnimNode_TransitionPoseEvaluator;
+	static Load(ResourceName: string): AnimGraphNode_TransitionPoseEvaluator;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TransitionPoseEvaluator;
+	static GetDefaultObject(): AnimGraphNode_TransitionPoseEvaluator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TransitionPoseEvaluator;
+	static C(Other: UObject | any): AnimGraphNode_TransitionPoseEvaluator;
 }
 
-declare class NamedSlotInterface extends Interface { 
-	static Load(ResourceName: string): NamedSlotInterface;
-	static Find(Outer: UObject, ResourceName: string): NamedSlotInterface;
-	static GetDefaultObject(): NamedSlotInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NamedSlotInterface;
-	static C(Other: UObject | any): NamedSlotInterface;
+declare class ReferenceBoneFrame { 
+	Bone: BoneReference;
+	Axis: Axis;
+	clone() : ReferenceBoneFrame;
+	static C(Other: UObject | any): ReferenceBoneFrame;
 }
 
-declare class NativeWidgetHost extends Widget { 
-	static Load(ResourceName: string): NativeWidgetHost;
-	static Find(Outer: UObject, ResourceName: string): NativeWidgetHost;
-	static GetDefaultObject(): NativeWidgetHost;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NativeWidgetHost;
-	static C(Other: UObject | any): NativeWidgetHost;
-	SetContent(SlateWidget: JavascriptSlateWidget): Widget;
-	static SetContent(TargetWidget: NativeWidgetHost,SlateWidget: JavascriptSlateWidget): Widget;
+declare class AnimCurveParam { 
+	Name: string;
+	clone() : AnimCurveParam;
+	static C(Other: UObject | any): AnimCurveParam;
 }
 
-declare class Overlay extends PanelWidget { 
-	static Load(ResourceName: string): Overlay;
-	static Find(Outer: UObject, ResourceName: string): Overlay;
-	static GetDefaultObject(): Overlay;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Overlay;
-	AddChildToOverlay(Content: Widget): OverlaySlot;
-	static C(Other: UObject | any): Overlay;
+declare class AnimNode_TwistCorrectiveNode extends AnimNode_SkeletalControlBase { 
+	BaseFrame: ReferenceBoneFrame;
+	TwistFrame: ReferenceBoneFrame;
+	TwistPlaneNormalAxis: Axis;
+	RangeMax: number;
+	RemappedMin: number;
+	RemappedMax: number;
+	Curve: AnimCurveParam;
+	clone() : AnimNode_TwistCorrectiveNode;
+	static C(Other: UObject | any): AnimNode_TwistCorrectiveNode;
 }
 
-declare type EProgressBarFillType = 'LeftToRight' | 'RightToLeft' | 'FillFromCenter' | 'TopToBottom' | 'BottomToTop';
-declare var EProgressBarFillType : { LeftToRight:'LeftToRight',RightToLeft:'RightToLeft',FillFromCenter:'FillFromCenter',TopToBottom:'TopToBottom',BottomToTop:'BottomToTop', };
-declare class ProgressBar extends Widget { 
-	WidgetStyle: ProgressBarStyle;
-	Style: SlateWidgetStyleAsset;
-	BackgroundImage: SlateBrushAsset;
-	FillImage: SlateBrushAsset;
-	MarqueeImage: SlateBrushAsset;
-	Percent: number;
-	BarFillType: EProgressBarFillType;
-	bIsMarquee: boolean;
-	BorderPadding: Vector2D;
-	PercentDelegate: UnrealEngineDelegate<() => number>;
-	FillColorAndOpacity: LinearColor;
-	FillColorAndOpacityDelegate: UnrealEngineDelegate<() => LinearColor>;
-	static Load(ResourceName: string): ProgressBar;
-	static Find(Outer: UObject, ResourceName: string): ProgressBar;
-	static GetDefaultObject(): ProgressBar;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProgressBar;
-	SetPercent(InPercent: number): void;
-	SetIsMarquee(InbIsMarquee: boolean): void;
-	SetFillColorAndOpacity(InColor: LinearColor): void;
-	static C(Other: UObject | any): ProgressBar;
+declare class AnimGraphNode_TwistCorrectiveNode extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_TwistCorrectiveNode;
+	static Load(ResourceName: string): AnimGraphNode_TwistCorrectiveNode;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TwistCorrectiveNode;
+	static GetDefaultObject(): AnimGraphNode_TwistCorrectiveNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TwistCorrectiveNode;
+	static C(Other: UObject | any): AnimGraphNode_TwistCorrectiveNode;
 }
 
-declare class RetainerBox extends ContentWidget { 
-	Phase: number;
-	PhaseCount: number;
-	EffectMaterial: MaterialInterface;
-	TextureParameter: string;
-	static Load(ResourceName: string): RetainerBox;
-	static Find(Outer: UObject, ResourceName: string): RetainerBox;
-	static GetDefaultObject(): RetainerBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RetainerBox;
-	SetTextureParameter(TextureParameter: string): void;
-	SetEffectMaterial(EffectMaterial: MaterialInterface): void;
-	GetEffectMaterial(): MaterialInstanceDynamic;
-	static C(Other: UObject | any): RetainerBox;
+declare class AnimNode_TwoBoneIK extends AnimNode_SkeletalControlBase { 
+	IKBone: BoneReference;
+	bAllowStretching: boolean;
+	StartStretchRatio: number;
+	MaxStretchScale: number;
+	StretchLimits: Vector2D;
+	bTakeRotationFromEffectorSpace: boolean;
+	bMaintainEffectorRelRot: boolean;
+	EffectorLocationSpace: EBoneControlSpace;
+	EffectorSpaceBoneName: string;
+	EffectorLocation: Vector;
+	EffectorTarget: BoneSocketTarget;
+	JointTargetLocationSpace: EBoneControlSpace;
+	JointTargetLocation: Vector;
+	JointTargetSpaceBoneName: string;
+	JointTarget: BoneSocketTarget;
+	bAllowTwist: boolean;
+	TwistAxis: Axis;
+	bNoTwist: boolean;
+	clone() : AnimNode_TwoBoneIK;
+	static C(Other: UObject | any): AnimNode_TwoBoneIK;
 }
 
-declare class RichTextBlockDecorator extends UObject { 
-	bReveal: boolean;
-	RevealedIndex: number;
-	static Load(ResourceName: string): RichTextBlockDecorator;
-	static Find(Outer: UObject, ResourceName: string): RichTextBlockDecorator;
-	static GetDefaultObject(): RichTextBlockDecorator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RichTextBlockDecorator;
-	static C(Other: UObject | any): RichTextBlockDecorator;
+declare class AnimGraphNode_TwoBoneIK extends AnimGraphNode_SkeletalControlBase { 
+	UNode: AnimNode_TwoBoneIK;
+	bEnableDebugDraw: boolean;
+	static Load(ResourceName: string): AnimGraphNode_TwoBoneIK;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TwoBoneIK;
+	static GetDefaultObject(): AnimGraphNode_TwoBoneIK;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TwoBoneIK;
+	static C(Other: UObject | any): AnimGraphNode_TwoBoneIK;
 }
 
-declare class RichTextBlock extends TextLayoutWidget { 
-	Text: string;
-	TextDelegate: UnrealEngineDelegate<() => string>;
-	Font: SlateFontInfo;
-	Color: LinearColor;
-	Decorators: RichTextBlockDecorator[];
-	static Load(ResourceName: string): RichTextBlock;
-	static Find(Outer: UObject, ResourceName: string): RichTextBlock;
-	static GetDefaultObject(): RichTextBlock;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RichTextBlock;
-	static C(Other: UObject | any): RichTextBlock;
+declare class AnimNode_TwoWayBlend extends AnimNode_Base { 
+	A: PoseLink;
+	B: PoseLink;
+	AlphaInputType: EAnimAlphaInputType;
+	Alpha: number;
+	AlphaScaleBias: InputScaleBias;
+	bAlphaBoolEnabled: boolean;
+	AlphaBoolBlend: InputAlphaBoolBlend;
+	AlphaCurveName: string;
+	AlphaScaleBiasClamp: InputScaleBiasClamp;
+	InternalBlendAlpha: number;
+	bAIsRelevant: boolean;
+	bBIsRelevant: boolean;
+	bResetChildOnActivation: boolean;
+	clone() : AnimNode_TwoWayBlend;
+	static C(Other: UObject | any): AnimNode_TwoWayBlend;
 }
 
-declare class SafeZone extends ContentWidget { 
-	PadLeft: boolean;
-	PadRight: boolean;
-	PadTop: boolean;
-	PadBottom: boolean;
-	static Load(ResourceName: string): SafeZone;
-	static Find(Outer: UObject, ResourceName: string): SafeZone;
-	static GetDefaultObject(): SafeZone;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SafeZone;
-	SetSidesToPad(InPadLeft: boolean,InPadRight: boolean,InPadTop: boolean,InPadBottom: boolean): void;
-	static C(Other: UObject | any): SafeZone;
+declare class AnimGraphNode_TwoWayBlend extends AnimGraphNode_Base { 
+	BlendNode: AnimNode_TwoWayBlend;
+	static Load(ResourceName: string): AnimGraphNode_TwoWayBlend;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_TwoWayBlend;
+	static GetDefaultObject(): AnimGraphNode_TwoWayBlend;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_TwoWayBlend;
+	static C(Other: UObject | any): AnimGraphNode_TwoWayBlend;
 }
 
-declare class SafeZoneSlot extends PanelSlot { 
-	bIsTitleSafe: boolean;
-	SafeAreaScale: Margin;
-	HAlign: EHorizontalAlignment;
-	VAlign: EVerticalAlignment;
-	Padding: Margin;
-	static Load(ResourceName: string): SafeZoneSlot;
-	static Find(Outer: UObject, ResourceName: string): SafeZoneSlot;
-	static GetDefaultObject(): SafeZoneSlot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SafeZoneSlot;
-	static C(Other: UObject | any): SafeZoneSlot;
+declare class AnimNode_UseCachedPose extends AnimNode_Base { 
+	LinkToCachingNode: PoseLink;
+	CachePoseName: string;
+	clone() : AnimNode_UseCachedPose;
+	static C(Other: UObject | any): AnimNode_UseCachedPose;
 }
 
-declare type EStretch = 'None' | 'Fill' | 'ScaleToFit' | 'ScaleToFitX' | 'ScaleToFitY' | 'ScaleToFill' | 'ScaleBySafeZone' | 'UserSpecified';
-declare var EStretch : { None:'None',Fill:'Fill',ScaleToFit:'ScaleToFit',ScaleToFitX:'ScaleToFitX',ScaleToFitY:'ScaleToFitY',ScaleToFill:'ScaleToFill',ScaleBySafeZone:'ScaleBySafeZone',UserSpecified:'UserSpecified', };
-declare type EStretchDirection = 'Both' | 'DownOnly' | 'UpOnly';
-declare var EStretchDirection : { Both:'Both',DownOnly:'DownOnly',UpOnly:'UpOnly', };
-declare class ScaleBox extends ContentWidget { 
-	Stretch: EStretch;
-	StretchDirection: EStretchDirection;
-	UserSpecifiedScale: number;
-	IgnoreInheritedScale: boolean;
-	bSingleLayoutPass: boolean;
-	static Load(ResourceName: string): ScaleBox;
-	static Find(Outer: UObject, ResourceName: string): ScaleBox;
-	static GetDefaultObject(): ScaleBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScaleBox;
-	SetUserSpecifiedScale(InUserSpecifiedScale: number): void;
-	SetStretchDirection(InStretchDirection: EStretchDirection): void;
-	SetStretch(InStretch: EStretch): void;
-	SetIgnoreInheritedScale(bInIgnoreInheritedScale: boolean): void;
-	static C(Other: UObject | any): ScaleBox;
+declare class AnimGraphNode_UseCachedPose extends AnimGraphNode_Base { 
+	UNode: AnimNode_UseCachedPose;
+	SaveCachedPoseNode: any;
+	NameOfCache: string;
+	static Load(ResourceName: string): AnimGraphNode_UseCachedPose;
+	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_UseCachedPose;
+	static GetDefaultObject(): AnimGraphNode_UseCachedPose;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_UseCachedPose;
+	static C(Other: UObject | any): AnimGraphNode_UseCachedPose;
 }
 
-declare class ScaleBoxSlot extends PanelSlot { 
-	Padding: Margin;
-	HorizontalAlignment: EHorizontalAlignment;
-	VerticalAlignment: EVerticalAlignment;
-	static Load(ResourceName: string): ScaleBoxSlot;
-	static Find(Outer: UObject, ResourceName: string): ScaleBoxSlot;
-	static GetDefaultObject(): ScaleBoxSlot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScaleBoxSlot;
-	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
-	SetPadding(InPadding: Margin): void;
-	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
-	static C(Other: UObject | any): ScaleBoxSlot;
+declare class AnimCustomInstance extends AnimInstance { 
+	static Load(ResourceName: string): AnimCustomInstance;
+	static Find(Outer: UObject, ResourceName: string): AnimCustomInstance;
+	static GetDefaultObject(): AnimCustomInstance;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimCustomInstance;
+	static C(Other: UObject | any): AnimCustomInstance;
 }
 
-declare type EOrientation = 'Orient_Horizontal' | 'Orient_Vertical';
-declare var EOrientation : { Orient_Horizontal:'Orient_Horizontal',Orient_Vertical:'Orient_Vertical', };
-declare class ScrollBar extends Widget { 
-	WidgetStyle: ScrollBarStyle;
-	Style: SlateWidgetStyleAsset;
-	bAlwaysShowScrollbar: boolean;
-	Orientation: EOrientation;
-	Thickness: Vector2D;
-	static Load(ResourceName: string): ScrollBar;
-	static Find(Outer: UObject, ResourceName: string): ScrollBar;
-	static GetDefaultObject(): ScrollBar;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScrollBar;
-	SetState(InOffsetFraction: number,InThumbSizeFraction: number): void;
-	static C(Other: UObject | any): ScrollBar;
+declare class AnimPreviewAttacheInstance extends AnimCustomInstance { 
+	static Load(ResourceName: string): AnimPreviewAttacheInstance;
+	static Find(Outer: UObject, ResourceName: string): AnimPreviewAttacheInstance;
+	static GetDefaultObject(): AnimPreviewAttacheInstance;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimPreviewAttacheInstance;
+	static C(Other: UObject | any): AnimPreviewAttacheInstance;
 }
 
-declare type EConsumeMouseWheel = 'WhenScrollingPossible' | 'Always' | 'Never';
-declare var EConsumeMouseWheel : { WhenScrollingPossible:'WhenScrollingPossible',Always:'Always',Never:'Never', };
-declare type EDescendantScrollDestination = 'IntoView' | 'TopOrLeft' | 'Center';
-declare var EDescendantScrollDestination : { IntoView:'IntoView',TopOrLeft:'TopOrLeft',Center:'Center', };
-declare class ScrollBox extends PanelWidget { 
-	WidgetStyle: ScrollBoxStyle;
-	WidgetBarStyle: ScrollBarStyle;
-	Style: SlateWidgetStyleAsset;
-	BarStyle: SlateWidgetStyleAsset;
-	Orientation: EOrientation;
-	ScrollBarVisibility: ScrollBarVisibility;
-	ConsumeMouseWheel: ConsumeMouseWheel;
-	ScrollbarThickness: Vector2D;
-	AlwaysShowScrollbar: boolean;
-	AllowOverscroll: boolean;
-	NavigationDestination: NavigationDestination;
-	NavigationScrollPadding: number;
-	OnUserScrolled: UnrealEngineMulticastDelegate<(CurrentOffset: number) => void>;
-	static Load(ResourceName: string): ScrollBox;
-	static Find(Outer: UObject, ResourceName: string): ScrollBox;
-	static GetDefaultObject(): ScrollBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScrollBox;
-	SetScrollOffset(NewScrollOffset: number): void;
-	SetScrollBarVisibility(NewScrollBarVisibility: NewScrollBarVisibility): void;
-	SetScrollbarThickness(NewScrollbarThickness: Vector2D): void;
-	SetOrientation(NewOrientation: EOrientation): void;
-	SetAlwaysShowScrollbar(NewAlwaysShowScrollbar: boolean): void;
-	SetAllowOverscroll(NewAllowOverscroll: boolean): void;
-	ScrollWidgetIntoView(WidgetToFind: Widget,AnimateScroll: boolean,ScrollDesintion: ScrollDesintion): void;
-	ScrollToStart(): void;
-	ScrollToEnd(): void;
-	GetScrollOffset(): number;
-	static C(Other: UObject | any): ScrollBox;
+declare class AnimSingleNodeInstance extends AnimInstance { 
+	CurrentAsset: AnimationAsset;
+	PostEvaluateAnimEvent: UnrealEngineDelegate<() => void>;
+	static Load(ResourceName: string): AnimSingleNodeInstance;
+	static Find(Outer: UObject, ResourceName: string): AnimSingleNodeInstance;
+	static GetDefaultObject(): AnimSingleNodeInstance;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimSingleNodeInstance;
+	StopAnim(): void;
+	SetReverse(bInReverse: boolean): void;
+	SetPreviewCurveOverride(PoseName: string,Value: number,bRemoveIfZero: boolean): void;
+	SetPositionWithPreviousTime(InPosition: number,InPreviousTime: number,bFireNotifies: boolean): void;
+	SetPosition(InPosition: number,bFireNotifies: boolean): void;
+	SetPlayRate(InPlayRate: number): void;
+	SetPlaying(bIsPlaying: boolean): void;
+	SetLooping(bIsLooping: boolean): void;
+	SetBlendSpaceInput(InBlendInput: Vector): void;
+	SetAnimationAsset(NewAsset: AnimationAsset,bIsLooping: boolean,InPlayRate: number): void;
+	PlayAnim(bIsLooping: boolean,InPlayRate: number,InStartPosition: number): void;
+	GetLength(): number;
+	GetAnimationAsset(): AnimationAsset;
+	static C(Other: UObject | any): AnimSingleNodeInstance;
 }
 
-declare class ScrollBoxSlot extends PanelSlot { 
-	Padding: Margin;
-	HorizontalAlignment: EHorizontalAlignment;
-	static Load(ResourceName: string): ScrollBoxSlot;
-	static Find(Outer: UObject, ResourceName: string): ScrollBoxSlot;
-	static GetDefaultObject(): ScrollBoxSlot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScrollBoxSlot;
-	SetPadding(InPadding: Margin): void;
-	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
-	static C(Other: UObject | any): ScrollBoxSlot;
+declare type EMontagePreviewType = 'EMPT_Normal' | 'EMPT_AllSections' | 'EMPT_MAX';
+declare var EMontagePreviewType : { EMPT_Normal:'EMPT_Normal',EMPT_AllSections:'EMPT_AllSections',EMPT_MAX:'EMPT_MAX', };
+declare class AnimPreviewInstance extends AnimSingleNodeInstance { 
+	MontagePreviewType: EMontagePreviewType;
+	MontagePreviewStartSectionIdx: number;
+	static Load(ResourceName: string): AnimPreviewInstance;
+	static Find(Outer: UObject, ResourceName: string): AnimPreviewInstance;
+	static GetDefaultObject(): AnimPreviewInstance;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimPreviewInstance;
+	static C(Other: UObject | any): AnimPreviewInstance;
+}
+
+declare class AnimStateNodeBase extends EdGraphNode { 
+	static Load(ResourceName: string): AnimStateNodeBase;
+	static Find(Outer: UObject, ResourceName: string): AnimStateNodeBase;
+	static GetDefaultObject(): AnimStateNodeBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateNodeBase;
+	static C(Other: UObject | any): AnimStateNodeBase;
 }
 
-declare class SizeBox extends ContentWidget { 
-	bOverride_WidthOverride: boolean;
-	bOverride_HeightOverride: boolean;
-	bOverride_MinDesiredWidth: boolean;
-	bOverride_MinDesiredHeight: boolean;
-	bOverride_MaxDesiredWidth: boolean;
-	bOverride_MaxDesiredHeight: boolean;
-	bOverride_MaxAspectRatio: boolean;
-	WidthOverride: number;
-	HeightOverride: number;
-	MinDesiredWidth: number;
-	MinDesiredHeight: number;
-	MaxDesiredWidth: number;
-	MaxDesiredHeight: number;
-	MaxAspectRatio: number;
-	static Load(ResourceName: string): SizeBox;
-	static Find(Outer: UObject, ResourceName: string): SizeBox;
-	static GetDefaultObject(): SizeBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SizeBox;
-	SetWidthOverride(InWidthOverride: number): void;
-	SetMinDesiredWidth(InMinDesiredWidth: number): void;
-	SetMinDesiredHeight(InMinDesiredHeight: number): void;
-	SetMaxDesiredWidth(InMaxDesiredWidth: number): void;
-	SetMaxDesiredHeight(InMaxDesiredHeight: number): void;
-	SetMaxAspectRatio(InMaxAspectRatio: number): void;
-	SetHeightOverride(InHeightOverride: number): void;
-	ClearWidthOverride(): void;
-	ClearMinDesiredWidth(): void;
-	ClearMinDesiredHeight(): void;
-	ClearMaxDesiredWidth(): void;
-	ClearMaxDesiredHeight(): void;
-	ClearMaxAspectRatio(): void;
-	ClearHeightOverride(): void;
-	static C(Other: UObject | any): SizeBox;
+declare class AnimStateConduitNode extends AnimStateNodeBase { 
+	BoundGraph: EdGraph;
+	static Load(ResourceName: string): AnimStateConduitNode;
+	static Find(Outer: UObject, ResourceName: string): AnimStateConduitNode;
+	static GetDefaultObject(): AnimStateConduitNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateConduitNode;
+	static C(Other: UObject | any): AnimStateConduitNode;
 }
 
-declare class SizeBoxSlot extends PanelSlot { 
-	Padding: Margin;
-	HorizontalAlignment: EHorizontalAlignment;
-	VerticalAlignment: EVerticalAlignment;
-	static Load(ResourceName: string): SizeBoxSlot;
-	static Find(Outer: UObject, ResourceName: string): SizeBoxSlot;
-	static GetDefaultObject(): SizeBoxSlot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SizeBoxSlot;
-	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
-	SetPadding(InPadding: Margin): void;
-	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
-	static C(Other: UObject | any): SizeBoxSlot;
+declare type EAnimStateType = 'AST_SingleAnimation' | 'AST_BlendGraph' | 'AST_MAX';
+declare var EAnimStateType : { AST_SingleAnimation:'AST_SingleAnimation',AST_BlendGraph:'AST_BlendGraph',AST_MAX:'AST_MAX', };
+declare class AnimStateNode extends AnimStateNodeBase { 
+	BoundGraph: EdGraph;
+	StateType: EAnimStateType;
+	StateEntered: AnimNotifyEvent;
+	StateLeft: AnimNotifyEvent;
+	StateFullyBlended: AnimNotifyEvent;
+	bAlwaysResetOnEntry: boolean;
+	static Load(ResourceName: string): AnimStateNode;
+	static Find(Outer: UObject, ResourceName: string): AnimStateNode;
+	static GetDefaultObject(): AnimStateNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateNode;
+	static C(Other: UObject | any): AnimStateNode;
 }
 
-declare class SlateBlueprintLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): SlateBlueprintLibrary;
-	static Find(Outer: UObject, ResourceName: string): SlateBlueprintLibrary;
-	static GetDefaultObject(): SlateBlueprintLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateBlueprintLibrary;
-	static ScreenToWidgetLocal(WorldContextObject: UObject,Geometry: Geometry,ScreenPosition: Vector2D,LocalCoordinate?: Vector2D): {LocalCoordinate: Vector2D};
-	static ScreenToWidgetAbsolute(WorldContextObject: UObject,ScreenPosition: Vector2D,AbsoluteCoordinate?: Vector2D): {AbsoluteCoordinate: Vector2D};
-	static ScreenToViewport(WorldContextObject: UObject,ScreenPosition: Vector2D,ViewportPosition?: Vector2D): {ViewportPosition: Vector2D};
-	static LocalToViewport(WorldContextObject: UObject,Geometry: Geometry,LocalCoordinate: Vector2D,PixelPosition?: Vector2D,ViewportPosition?: Vector2D): {PixelPosition: Vector2D, ViewportPosition: Vector2D};
-	static LocalToAbsolute(Geometry: Geometry,LocalCoordinate: Vector2D): Vector2D;
-	static IsUnderLocation(Geometry: Geometry,AbsoluteCoordinate: Vector2D): boolean;
-	static GetLocalSize(Geometry: Geometry): Vector2D;
-	static GetAbsoluteSize(Geometry: Geometry): Vector2D;
-	static EqualEqual_SlateBrush(A: SlateBrush,B: SlateBrush): boolean;
-	static AbsoluteToViewport(WorldContextObject: UObject,AbsoluteDesktopCoordinate: Vector2D,PixelPosition?: Vector2D,ViewportPosition?: Vector2D): {PixelPosition: Vector2D, ViewportPosition: Vector2D};
-	static AbsoluteToLocal(Geometry: Geometry,AbsoluteCoordinate: Vector2D): Vector2D;
-	static C(Other: UObject | any): SlateBlueprintLibrary;
+declare type ETransitionBlendMode = 'TBM_Linear' | 'TBM_Cubic' | 'TBM_MAX';
+declare var ETransitionBlendMode : { TBM_Linear:'TBM_Linear',TBM_Cubic:'TBM_Cubic',TBM_MAX:'TBM_MAX', };
+declare type ETransitionLogicType = 'TLT_StandardBlend' | 'TLT_Custom' | 'TLT_MAX';
+declare var ETransitionLogicType : { TLT_StandardBlend:'TLT_StandardBlend',TLT_Custom:'TLT_Custom',TLT_MAX:'TLT_MAX', };
+declare class AnimStateTransitionNode extends AnimStateNodeBase { 
+	BoundGraph: EdGraph;
+	CustomTransitionGraph: EdGraph;
+	PriorityOrder: number;
+	CrossfadeDuration: number;
+	CrossfadeMode: ETransitionBlendMode;
+	BlendMode: EAlphaBlendOption;
+	CustomBlendCurve: CurveFloat;
+	BlendProfile: BlendProfile;
+	bAutomaticRuleBasedOnSequencePlayerInState: boolean;
+	LogicType: ETransitionLogicType;
+	TransitionStart: AnimNotifyEvent;
+	TransitionEnd: AnimNotifyEvent;
+	TransitionInterrupt: AnimNotifyEvent;
+	Bidirectional: boolean;
+	bSharedRules: boolean;
+	bSharedCrossfade: boolean;
+	SharedRulesName: string;
+	SharedRulesGuid: Guid;
+	SharedColor: LinearColor;
+	SharedCrossfadeName: string;
+	SharedCrossfadeGuid: Guid;
+	SharedCrossfadeIdx: number;
+	static Load(ResourceName: string): AnimStateTransitionNode;
+	static Find(Outer: UObject, ResourceName: string): AnimStateTransitionNode;
+	static GetDefaultObject(): AnimStateTransitionNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimStateTransitionNode;
+	static C(Other: UObject | any): AnimStateTransitionNode;
 }
 
-declare class SlateDataSheet extends UObject { 
-	DataTexture: Texture2D;
-	static Load(ResourceName: string): SlateDataSheet;
-	static Find(Outer: UObject, ResourceName: string): SlateDataSheet;
-	static GetDefaultObject(): SlateDataSheet;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateDataSheet;
-	static C(Other: UObject | any): SlateDataSheet;
+declare class MemberReference { 
+	MemberParent: UObject;
+	MemberScope: string;
+	MemberName: string;
+	MemberGuid: Guid;
+	bSelfContext: boolean;
+	bWasDeprecated: boolean;
+	clone() : MemberReference;
+	static C(Other: UObject | any): MemberReference;
+}
+
+declare class K2Node_CallFunction extends K2Node { 
+	bIsPureFunc: boolean;
+	bIsConstFunc: boolean;
+	bWantsEnumToExecExpansion: boolean;
+	bIsInterfaceCall: boolean;
+	bIsFinalFunction: boolean;
+	bIsBeadFunction: boolean;
+	FunctionReference: MemberReference;
+	CallFunctionName: string;
+	CallFunctionClass: UnrealEngineClass;
+	static Load(ResourceName: string): K2Node_CallFunction;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CallFunction;
+	static GetDefaultObject(): K2Node_CallFunction;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallFunction;
+	static C(Other: UObject | any): K2Node_CallFunction;
 }
 
-declare class SlateMeshVertex { 
-	Position: Vector2D;
-	Color: Color;
-	UV0: Vector2D;
-	UV1: Vector2D;
-	UV2: Vector2D;
-	UV3: Vector2D;
-	UV4: Vector2D;
-	UV5: Vector2D;
-	clone() : SlateMeshVertex;
-	static C(Other: UObject | any): SlateMeshVertex;
+declare class K2Node_AnimGetter extends K2Node_CallFunction { 
+	SourceNode: AnimGraphNode_Base;
+	SourceStateNode: AnimStateNodeBase;
+	GetterClass: UnrealEngineClass;
+	SourceAnimBlueprint: AnimBlueprint;
+	CachedTitle: string;
+	Contexts: string[];
+	static Load(ResourceName: string): K2Node_AnimGetter;
+	static Find(Outer: UObject, ResourceName: string): K2Node_AnimGetter;
+	static GetDefaultObject(): K2Node_AnimGetter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AnimGetter;
+	static C(Other: UObject | any): K2Node_AnimGetter;
 }
 
-declare class SlateVectorArtData extends UObject { 
-	MeshAsset: StaticMesh;
-	SourceMaterial: MaterialInterface;
-	VertexData: SlateMeshVertex[];
-	IndexData: any[];
-	Material: MaterialInterface;
-	ExtentMin: Vector2D;
-	ExtentMax: Vector2D;
-	static Load(ResourceName: string): SlateVectorArtData;
-	static Find(Outer: UObject, ResourceName: string): SlateVectorArtData;
-	static GetDefaultObject(): SlateVectorArtData;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateVectorArtData;
-	static C(Other: UObject | any): SlateVectorArtData;
+declare class K2Node_PlayMontage extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_PlayMontage;
+	static Find(Outer: UObject, ResourceName: string): K2Node_PlayMontage;
+	static GetDefaultObject(): K2Node_PlayMontage;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_PlayMontage;
+	static C(Other: UObject | any): K2Node_PlayMontage;
 }
 
-declare class SliderStyle extends SlateWidgetStyle { 
-	NormalBarImage: SlateBrush;
-	DisabledBarImage: SlateBrush;
-	NormalThumbImage: SlateBrush;
-	DisabledThumbImage: SlateBrush;
-	BarThickness: number;
-	clone() : SliderStyle;
-	static C(Other: UObject | any): SliderStyle;
+declare type ETransitionGetter = 'AnimationAsset_GetCurrentTime' | 'AnimationAsset_GetLength' | 'AnimationAsset_GetCurrentTimeFraction' | 'AnimationAsset_GetTimeFromEnd' | 'AnimationAsset_GetTimeFromEndFraction' | 'CurrentState_ElapsedTime' | 'CurrentState_GetBlendWeight' | 'CurrentTransitionDuration' | 'ArbitraryState_GetBlendWeight' | 'ETransitionGetter_MAX';
+declare var ETransitionGetter : { AnimationAsset_GetCurrentTime:'AnimationAsset_GetCurrentTime',AnimationAsset_GetLength:'AnimationAsset_GetLength',AnimationAsset_GetCurrentTimeFraction:'AnimationAsset_GetCurrentTimeFraction',AnimationAsset_GetTimeFromEnd:'AnimationAsset_GetTimeFromEnd',AnimationAsset_GetTimeFromEndFraction:'AnimationAsset_GetTimeFromEndFraction',CurrentState_ElapsedTime:'CurrentState_ElapsedTime',CurrentState_GetBlendWeight:'CurrentState_GetBlendWeight',CurrentTransitionDuration:'CurrentTransitionDuration',ArbitraryState_GetBlendWeight:'ArbitraryState_GetBlendWeight',ETransitionGetter_MAX:'ETransitionGetter_MAX', };
+declare class K2Node_TransitionRuleGetter extends K2Node { 
+	GetterType: ETransitionGetter;
+	AssociatedAnimAssetPlayerNode: AnimGraphNode_Base;
+	AssociatedStateNode: AnimStateNode;
+	static Load(ResourceName: string): K2Node_TransitionRuleGetter;
+	static Find(Outer: UObject, ResourceName: string): K2Node_TransitionRuleGetter;
+	static GetDefaultObject(): K2Node_TransitionRuleGetter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_TransitionRuleGetter;
+	static C(Other: UObject | any): K2Node_TransitionRuleGetter;
 }
 
-declare class Slider extends Widget { 
-	Value: number;
-	ValueDelegate: UnrealEngineDelegate<() => number>;
-	WidgetStyle: SliderStyle;
-	Orientation: EOrientation;
-	SliderBarColor: LinearColor;
-	SliderHandleColor: LinearColor;
-	IndentHandle: boolean;
-	Locked: boolean;
-	StepSize: number;
-	IsFocusable: boolean;
-	OnMouseCaptureBegin: UnrealEngineMulticastDelegate<() => void>;
-	OnMouseCaptureEnd: UnrealEngineMulticastDelegate<() => void>;
-	OnControllerCaptureBegin: UnrealEngineMulticastDelegate<() => void>;
-	OnControllerCaptureEnd: UnrealEngineMulticastDelegate<() => void>;
-	OnValueChanged: UnrealEngineMulticastDelegate<(Value: number) => void>;
-	static Load(ResourceName: string): Slider;
-	static Find(Outer: UObject, ResourceName: string): Slider;
-	static GetDefaultObject(): Slider;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Slider;
-	SetValue(InValue: number): void;
-	SetStepSize(InValue: number): void;
-	SetSliderHandleColor(InValue: LinearColor): void;
-	SetSliderBarColor(InValue: LinearColor): void;
-	SetLocked(InValue: boolean): void;
-	SetIndentHandle(InValue: boolean): void;
-	GetValue(): number;
-	static C(Other: UObject | any): Slider;
+declare class BlueprintNodeSpawner extends UObject { 
+	NodeClass: UnrealEngineClass;
+	static Load(ResourceName: string): BlueprintNodeSpawner;
+	static Find(Outer: UObject, ResourceName: string): BlueprintNodeSpawner;
+	static GetDefaultObject(): BlueprintNodeSpawner;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintNodeSpawner;
+	static C(Other: UObject | any): BlueprintNodeSpawner;
 }
 
-declare class Spacer extends Widget { 
-	Size: Vector2D;
-	static Load(ResourceName: string): Spacer;
-	static Find(Outer: UObject, ResourceName: string): Spacer;
-	static GetDefaultObject(): Spacer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Spacer;
-	SetSize(InSize: Vector2D): void;
-	static C(Other: UObject | any): Spacer;
+declare class BlueprintEventNodeSpawner extends BlueprintNodeSpawner { 
+	EventFunc: UFunction;
+	CustomEventName: string;
+	static Load(ResourceName: string): BlueprintEventNodeSpawner;
+	static Find(Outer: UObject, ResourceName: string): BlueprintEventNodeSpawner;
+	static GetDefaultObject(): BlueprintEventNodeSpawner;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintEventNodeSpawner;
+	static C(Other: UObject | any): BlueprintEventNodeSpawner;
 }
 
-declare class SpinBox extends Widget { 
-	Value: number;
-	ValueDelegate: UnrealEngineDelegate<() => number>;
-	WidgetStyle: SpinBoxStyle;
-	Style: SlateWidgetStyleAsset;
-	Delta: number;
-	SliderExponent: number;
-	Font: SlateFontInfo;
-	MinDesiredWidth: number;
-	ClearKeyboardFocusOnCommit: boolean;
-	SelectAllTextOnCommit: boolean;
-	ForegroundColor: SlateColor;
-	OnValueChanged: UnrealEngineMulticastDelegate<(InValue: number) => void>;
-	OnValueCommitted: UnrealEngineMulticastDelegate<(InValue: number, CommitMethod: ETextCommit) => void>;
-	OnBeginSliderMovement: UnrealEngineMulticastDelegate<() => void>;
-	OnEndSliderMovement: UnrealEngineMulticastDelegate<(InValue: number) => void>;
-	bOverride_MinValue: boolean;
-	bOverride_MaxValue: boolean;
-	bOverride_MinSliderValue: boolean;
-	bOverride_MaxSliderValue: boolean;
-	MinValue: number;
-	MaxValue: number;
-	MinSliderValue: number;
-	MaxSliderValue: number;
-	static Load(ResourceName: string): SpinBox;
-	static Find(Outer: UObject, ResourceName: string): SpinBox;
-	static GetDefaultObject(): SpinBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpinBox;
-	SetValue(NewValue: number): void;
-	SetMinValue(NewValue: number): void;
-	SetMinSliderValue(NewValue: number): void;
-	SetMaxValue(NewValue: number): void;
-	SetMaxSliderValue(NewValue: number): void;
-	SetForegroundColor(InForegroundColor: SlateColor): void;
-	GetValue(): number;
-	GetMinValue(): number;
-	GetMinSliderValue(): number;
-	GetMaxValue(): number;
-	GetMaxSliderValue(): number;
-	ClearMinValue(): void;
-	ClearMinSliderValue(): void;
-	ClearMaxValue(): void;
-	ClearMaxSliderValue(): void;
-	static C(Other: UObject | any): SpinBox;
+declare class BlueprintBoundEventNodeSpawner extends BlueprintEventNodeSpawner { 
+	EventDelegate: MulticastDelegateProperty;
+	static Load(ResourceName: string): BlueprintBoundEventNodeSpawner;
+	static Find(Outer: UObject, ResourceName: string): BlueprintBoundEventNodeSpawner;
+	static GetDefaultObject(): BlueprintBoundEventNodeSpawner;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintBoundEventNodeSpawner;
+	static C(Other: UObject | any): BlueprintBoundEventNodeSpawner;
 }
 
-declare class TextBinding extends PropertyBinding { 
-	static Load(ResourceName: string): TextBinding;
-	static Find(Outer: UObject, ResourceName: string): TextBinding;
-	static GetDefaultObject(): TextBinding;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextBinding;
-	GetTextValue(): string;
-	GetStringValue(): string;
-	static C(Other: UObject | any): TextBinding;
+declare class BlueprintBoundNodeSpawner extends BlueprintNodeSpawner { 
+	static Load(ResourceName: string): BlueprintBoundNodeSpawner;
+	static Find(Outer: UObject, ResourceName: string): BlueprintBoundNodeSpawner;
+	static GetDefaultObject(): BlueprintBoundNodeSpawner;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintBoundNodeSpawner;
+	static C(Other: UObject | any): BlueprintBoundNodeSpawner;
 }
 
-declare class TextBlock extends TextLayoutWidget { 
-	Text: string;
-	TextDelegate: UnrealEngineDelegate<() => string>;
-	ColorAndOpacity: SlateColor;
-	ColorAndOpacityDelegate: UnrealEngineDelegate<() => SlateColor>;
-	Font: SlateFontInfo;
-	ShadowOffset: Vector2D;
-	ShadowColorAndOpacity: LinearColor;
-	ShadowColorAndOpacityDelegate: UnrealEngineDelegate<() => LinearColor>;
-	MinDesiredWidth: number;
-	bWrapWithInvalidationPanel: boolean;
-	static Load(ResourceName: string): TextBlock;
-	static Find(Outer: UObject, ResourceName: string): TextBlock;
-	static GetDefaultObject(): TextBlock;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextBlock;
-	SetText(InText: string): void;
-	SetShadowOffset(InShadowOffset: Vector2D): void;
-	SetShadowColorAndOpacity(InShadowColorAndOpacity: LinearColor): void;
-	SetOpacity(InOpacity: number): void;
-	SetMinDesiredWidth(InMinDesiredWidth: number): void;
-	SetJustification(InJustification: ETextJustify): void;
-	SetFont(InFontInfo: SlateFontInfo): void;
-	SetColorAndOpacity(InColorAndOpacity: SlateColor): void;
-	GetText(): string;
-	static C(Other: UObject | any): TextBlock;
+declare class BlueprintComponentNodeSpawner extends BlueprintNodeSpawner { 
+	ComponentClass: UnrealEngineClass;
+	ComponentName: string;
+	ComponentAssetName: string;
+	static Load(ResourceName: string): BlueprintComponentNodeSpawner;
+	static Find(Outer: UObject, ResourceName: string): BlueprintComponentNodeSpawner;
+	static GetDefaultObject(): BlueprintComponentNodeSpawner;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintComponentNodeSpawner;
+	static C(Other: UObject | any): BlueprintComponentNodeSpawner;
+}
+
+declare class BlueprintFieldNodeSpawner extends BlueprintNodeSpawner { 
+	Field: Field;
+	static Load(ResourceName: string): BlueprintFieldNodeSpawner;
+	static Find(Outer: UObject, ResourceName: string): BlueprintFieldNodeSpawner;
+	static GetDefaultObject(): BlueprintFieldNodeSpawner;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintFieldNodeSpawner;
+	static C(Other: UObject | any): BlueprintFieldNodeSpawner;
+}
+
+declare class BlueprintDelegateNodeSpawner extends BlueprintFieldNodeSpawner { 
+	static Load(ResourceName: string): BlueprintDelegateNodeSpawner;
+	static Find(Outer: UObject, ResourceName: string): BlueprintDelegateNodeSpawner;
+	static GetDefaultObject(): BlueprintDelegateNodeSpawner;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintDelegateNodeSpawner;
+	static C(Other: UObject | any): BlueprintDelegateNodeSpawner;
+}
+
+declare type ESaveOnCompile = 'SoC_Never' | 'SoC_SuccessOnly' | 'SoC_Always' | 'SoC_MAX';
+declare var ESaveOnCompile : { SoC_Never:'SoC_Never',SoC_SuccessOnly:'SoC_SuccessOnly',SoC_Always:'SoC_Always',SoC_MAX:'SoC_MAX', };
+declare class BlueprintEditorSettings extends UObject { 
+	bDrawMidpointArrowsInBlueprints: boolean;
+	bShowGraphInstructionText: boolean;
+	bSplitContextTargetSettings: boolean;
+	bExposeAllMemberComponentFunctions: boolean;
+	bShowContextualFavorites: boolean;
+	bCompactCallOnMemberNodes: boolean;
+	bFlattenFavoritesMenus: boolean;
+	bFavorPureCastNodes: boolean;
+	bAutoCastObjectConnections: boolean;
+	bShowViewportOnSimulate: boolean;
+	bShowInheritedVariables: boolean;
+	bShowEmptySections: boolean;
+	bSpawnDefaultBlueprintNodes: boolean;
+	bHideConstructionScriptComponentsInDetailsView: boolean;
+	bHostFindInBlueprintsInGlobalTab: boolean;
+	bNavigateToNativeFunctionsFromCallNodes: boolean;
+	Bookmarks: any;
+	BookmarkNodes: BPEditorBookmarkNode[];
+	bIncludeCommentNodesInBookmarksTab: boolean;
+	bShowBookmarksForCurrentDocumentOnlyInTab: boolean;
+	GraphEditorQuickJumps: any;
+	SaveOnCompile: ESaveOnCompile;
+	bJumpToNodeErrors: boolean;
+	bAllowExplicitImpureNodeDisabling: boolean;
+	bShowActionMenuItemSignatures: boolean;
+	bBlueprintNodeUniqueNames: boolean;
+	bShowDetailedCompileResults: boolean;
+	CompileEventDisplayThresholdMs: number;
+	NodeTemplateCacheCapMB: number;
+	static Load(ResourceName: string): BlueprintEditorSettings;
+	static Find(Outer: UObject, ResourceName: string): BlueprintEditorSettings;
+	static GetDefaultObject(): BlueprintEditorSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintEditorSettings;
+	static C(Other: UObject | any): BlueprintEditorSettings;
+}
+
+declare class BlueprintFunctionNodeSpawner extends BlueprintFieldNodeSpawner { 
+	static Load(ResourceName: string): BlueprintFunctionNodeSpawner;
+	static Find(Outer: UObject, ResourceName: string): BlueprintFunctionNodeSpawner;
+	static GetDefaultObject(): BlueprintFunctionNodeSpawner;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintFunctionNodeSpawner;
+	static C(Other: UObject | any): BlueprintFunctionNodeSpawner;
+}
+
+declare class BlueprintVariableNodeSpawner extends BlueprintFieldNodeSpawner { 
+	LocalVarOuter: EdGraph;
+	LocalVarDesc: BPVariableDescription;
+	static Load(ResourceName: string): BlueprintVariableNodeSpawner;
+	static Find(Outer: UObject, ResourceName: string): BlueprintVariableNodeSpawner;
+	static GetDefaultObject(): BlueprintVariableNodeSpawner;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintVariableNodeSpawner;
+	static C(Other: UObject | any): BlueprintVariableNodeSpawner;
+}
+
+declare class K2Node_EditablePinBase extends K2Node { 
+	bIsEditable: boolean;
+	static Load(ResourceName: string): K2Node_EditablePinBase;
+	static Find(Outer: UObject, ResourceName: string): K2Node_EditablePinBase;
+	static GetDefaultObject(): K2Node_EditablePinBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EditablePinBase;
+	static C(Other: UObject | any): K2Node_EditablePinBase;
+}
+
+declare class K2Node_Event extends K2Node_EditablePinBase { 
+	EventSignatureName: string;
+	EventSignatureClass: UnrealEngineClass;
+	EventReference: MemberReference;
+	bOverrideFunction: boolean;
+	bInternalEvent: boolean;
+	CustomFunctionName: string;
+	FunctionFlags: any;
+	static Load(ResourceName: string): K2Node_Event;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Event;
+	static GetDefaultObject(): K2Node_Event;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Event;
+	static C(Other: UObject | any): K2Node_Event;
+}
+
+declare class K2Node_ActorBoundEvent extends K2Node_Event { 
+	DelegatePropertyName: string;
+	DelegateOwnerClass: UnrealEngineClass;
+	EventOwner: Actor;
+	static Load(ResourceName: string): K2Node_ActorBoundEvent;
+	static Find(Outer: UObject, ResourceName: string): K2Node_ActorBoundEvent;
+	static GetDefaultObject(): K2Node_ActorBoundEvent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ActorBoundEvent;
+	static C(Other: UObject | any): K2Node_ActorBoundEvent;
+}
+
+declare class K2Node_AddComponent extends K2Node_CallFunction { 
+	bHasExposedVariable: boolean;
+	TemplateBlueprint: string;
+	TemplateType: UnrealEngineClass;
+	static Load(ResourceName: string): K2Node_AddComponent;
+	static Find(Outer: UObject, ResourceName: string): K2Node_AddComponent;
+	static GetDefaultObject(): K2Node_AddComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AddComponent;
+	static C(Other: UObject | any): K2Node_AddComponent;
+}
+
+declare class K2Node_BaseMCDelegate extends K2Node { 
+	DelegateReference: MemberReference;
+	static Load(ResourceName: string): K2Node_BaseMCDelegate;
+	static Find(Outer: UObject, ResourceName: string): K2Node_BaseMCDelegate;
+	static GetDefaultObject(): K2Node_BaseMCDelegate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BaseMCDelegate;
+	static C(Other: UObject | any): K2Node_BaseMCDelegate;
+}
+
+declare class K2Node_AddDelegate extends K2Node_BaseMCDelegate { 
+	static Load(ResourceName: string): K2Node_AddDelegate;
+	static Find(Outer: UObject, ResourceName: string): K2Node_AddDelegate;
+	static GetDefaultObject(): K2Node_AddDelegate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AddDelegate;
+	static C(Other: UObject | any): K2Node_AddDelegate;
+}
+
+declare class K2Node_AddPinInterface extends Interface { 
+	static Load(ResourceName: string): K2Node_AddPinInterface;
+	static Find(Outer: UObject, ResourceName: string): K2Node_AddPinInterface;
+	static GetDefaultObject(): K2Node_AddPinInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AddPinInterface;
+	static C(Other: UObject | any): K2Node_AddPinInterface;
+}
+
+declare class K2Node_AssignDelegate extends K2Node_AddDelegate { 
+	static Load(ResourceName: string): K2Node_AssignDelegate;
+	static Find(Outer: UObject, ResourceName: string): K2Node_AssignDelegate;
+	static GetDefaultObject(): K2Node_AssignDelegate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AssignDelegate;
+	static C(Other: UObject | any): K2Node_AssignDelegate;
+}
+
+declare class K2Node_AssignmentStatement extends K2Node { 
+	static Load(ResourceName: string): K2Node_AssignmentStatement;
+	static Find(Outer: UObject, ResourceName: string): K2Node_AssignmentStatement;
+	static GetDefaultObject(): K2Node_AssignmentStatement;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AssignmentStatement;
+	static C(Other: UObject | any): K2Node_AssignmentStatement;
+}
+
+declare class K2Node_BitmaskLiteral extends K2Node { 
+	BitflagsEnum: Enum;
+	static Load(ResourceName: string): K2Node_BitmaskLiteral;
+	static Find(Outer: UObject, ResourceName: string): K2Node_BitmaskLiteral;
+	static GetDefaultObject(): K2Node_BitmaskLiteral;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BitmaskLiteral;
+	static C(Other: UObject | any): K2Node_BitmaskLiteral;
+}
+
+declare type ESelfContextInfo = 'Unspecified' | 'NotSelfContext' | 'ESelfContextInfo_MAX';
+declare var ESelfContextInfo : { Unspecified:'Unspecified',NotSelfContext:'NotSelfContext',ESelfContextInfo_MAX:'ESelfContextInfo_MAX', };
+declare class K2Node_Variable extends K2Node { 
+	VariableReference: MemberReference;
+	SelfContextInfo: ESelfContextInfo;
+	VariableSourceClass: UnrealEngineClass;
+	VariableName: string;
+	bSelfContext: boolean;
+	static Load(ResourceName: string): K2Node_Variable;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Variable;
+	static GetDefaultObject(): K2Node_Variable;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Variable;
+	static C(Other: UObject | any): K2Node_Variable;
+}
+
+declare class K2Node_StructOperation extends K2Node_Variable { 
+	StructType: ScriptStruct;
+	static Load(ResourceName: string): K2Node_StructOperation;
+	static Find(Outer: UObject, ResourceName: string): K2Node_StructOperation;
+	static GetDefaultObject(): K2Node_StructOperation;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_StructOperation;
+	static C(Other: UObject | any): K2Node_StructOperation;
+}
+
+declare class K2Node_StructMemberGet extends K2Node_StructOperation { 
+	ShowPinForProperties: OptionalPinFromProperty[];
+	static Load(ResourceName: string): K2Node_StructMemberGet;
+	static Find(Outer: UObject, ResourceName: string): K2Node_StructMemberGet;
+	static GetDefaultObject(): K2Node_StructMemberGet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_StructMemberGet;
+	static C(Other: UObject | any): K2Node_StructMemberGet;
+}
+
+declare class K2Node_BreakStruct extends K2Node_StructMemberGet { 
+	bMadeAfterOverridePinRemoval: boolean;
+	static Load(ResourceName: string): K2Node_BreakStruct;
+	static Find(Outer: UObject, ResourceName: string): K2Node_BreakStruct;
+	static GetDefaultObject(): K2Node_BreakStruct;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_BreakStruct;
+	static C(Other: UObject | any): K2Node_BreakStruct;
+}
+
+declare class K2Node_CallArrayFunction extends K2Node_CallFunction { 
+	static Load(ResourceName: string): K2Node_CallArrayFunction;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CallArrayFunction;
+	static GetDefaultObject(): K2Node_CallArrayFunction;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallArrayFunction;
+	static C(Other: UObject | any): K2Node_CallArrayFunction;
+}
+
+declare class K2Node_CallDataTableFunction extends K2Node_CallFunction { 
+	static Load(ResourceName: string): K2Node_CallDataTableFunction;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CallDataTableFunction;
+	static GetDefaultObject(): K2Node_CallDataTableFunction;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallDataTableFunction;
+	static C(Other: UObject | any): K2Node_CallDataTableFunction;
+}
+
+declare class K2Node_CallDelegate extends K2Node_BaseMCDelegate { 
+	static Load(ResourceName: string): K2Node_CallDelegate;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CallDelegate;
+	static GetDefaultObject(): K2Node_CallDelegate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallDelegate;
+	static C(Other: UObject | any): K2Node_CallDelegate;
+}
+
+declare class K2Node_CallFunctionOnMember extends K2Node_CallFunction { 
+	MemberVariableToCallOn: MemberReference;
+	static Load(ResourceName: string): K2Node_CallFunctionOnMember;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CallFunctionOnMember;
+	static GetDefaultObject(): K2Node_CallFunctionOnMember;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallFunctionOnMember;
+	static C(Other: UObject | any): K2Node_CallFunctionOnMember;
+}
+
+declare class K2Node_CallMaterialParameterCollectionFunction extends K2Node_CallFunction { 
+	static Load(ResourceName: string): K2Node_CallMaterialParameterCollectionFunction;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CallMaterialParameterCollectionFunction;
+	static GetDefaultObject(): K2Node_CallMaterialParameterCollectionFunction;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallMaterialParameterCollectionFunction;
+	static C(Other: UObject | any): K2Node_CallMaterialParameterCollectionFunction;
+}
+
+declare class K2Node_CallParentFunction extends K2Node_CallFunction { 
+	static Load(ResourceName: string): K2Node_CallParentFunction;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CallParentFunction;
+	static GetDefaultObject(): K2Node_CallParentFunction;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CallParentFunction;
+	static C(Other: UObject | any): K2Node_CallParentFunction;
+}
+
+declare class K2Node_CastByteToEnum extends K2Node { 
+	Enum: Enum;
+	bSafe: boolean;
+	static Load(ResourceName: string): K2Node_CastByteToEnum;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CastByteToEnum;
+	static GetDefaultObject(): K2Node_CastByteToEnum;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CastByteToEnum;
+	static C(Other: UObject | any): K2Node_CastByteToEnum;
+}
+
+declare class K2Node_DynamicCast extends K2Node { 
+	TargetType: UnrealEngineClass;
+	bIsPureCast: boolean;
+	static Load(ResourceName: string): K2Node_DynamicCast;
+	static Find(Outer: UObject, ResourceName: string): K2Node_DynamicCast;
+	static GetDefaultObject(): K2Node_DynamicCast;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DynamicCast;
+	static C(Other: UObject | any): K2Node_DynamicCast;
+}
+
+declare class K2Node_ClassDynamicCast extends K2Node_DynamicCast { 
+	static Load(ResourceName: string): K2Node_ClassDynamicCast;
+	static Find(Outer: UObject, ResourceName: string): K2Node_ClassDynamicCast;
+	static GetDefaultObject(): K2Node_ClassDynamicCast;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ClassDynamicCast;
+	static C(Other: UObject | any): K2Node_ClassDynamicCast;
+}
+
+declare class K2Node_ClearDelegate extends K2Node_BaseMCDelegate { 
+	static Load(ResourceName: string): K2Node_ClearDelegate;
+	static Find(Outer: UObject, ResourceName: string): K2Node_ClearDelegate;
+	static GetDefaultObject(): K2Node_ClearDelegate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ClearDelegate;
+	static C(Other: UObject | any): K2Node_ClearDelegate;
+}
+
+declare class K2Node_CommutativeAssociativeBinaryOperator extends K2Node_CallFunction { 
+	NumAdditionalInputs: number;
+	static Load(ResourceName: string): K2Node_CommutativeAssociativeBinaryOperator;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CommutativeAssociativeBinaryOperator;
+	static GetDefaultObject(): K2Node_CommutativeAssociativeBinaryOperator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CommutativeAssociativeBinaryOperator;
+	static C(Other: UObject | any): K2Node_CommutativeAssociativeBinaryOperator;
+}
+
+declare class K2Node_ComponentBoundEvent extends K2Node_Event { 
+	DelegatePropertyName: string;
+	DelegateOwnerClass: UnrealEngineClass;
+	ComponentPropertyName: string;
+	DelegatePropertyDisplayName: string;
+	static Load(ResourceName: string): K2Node_ComponentBoundEvent;
+	static Find(Outer: UObject, ResourceName: string): K2Node_ComponentBoundEvent;
+	static GetDefaultObject(): K2Node_ComponentBoundEvent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ComponentBoundEvent;
+	static C(Other: UObject | any): K2Node_ComponentBoundEvent;
 }
 
-declare class Throbber extends Widget { 
-	NumberOfPieces: number;
-	bAnimateHorizontally: boolean;
-	bAnimateVertically: boolean;
-	bAnimateOpacity: boolean;
-	PieceImage: SlateBrushAsset;
-	UImage: SlateBrush;
-	static Load(ResourceName: string): Throbber;
-	static Find(Outer: UObject, ResourceName: string): Throbber;
-	static GetDefaultObject(): Throbber;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Throbber;
-	SetNumberOfPieces(InNumberOfPieces: number): void;
-	SetAnimateVertically(bInAnimateVertically: boolean): void;
-	SetAnimateOpacity(bInAnimateOpacity: boolean): void;
-	SetAnimateHorizontally(bInAnimateHorizontally: boolean): void;
-	static C(Other: UObject | any): Throbber;
+declare class KismetUserDeclaredFunctionMetadata { 
+	Tooltip: string;
+	Category: string;
+	Keywords: string;
+	CompactNodeTitle: string;
+	InstanceTitleColor: LinearColor;
+	bCallInEditor: boolean;
+	HasLatentFunctions: any;
+	clone() : KismetUserDeclaredFunctionMetadata;
+	static C(Other: UObject | any): KismetUserDeclaredFunctionMetadata;
+}
+
+declare class K2Node_Tunnel extends K2Node_EditablePinBase { 
+	OutputSourceNode: K2Node_Tunnel;
+	InputSinkNode: K2Node_Tunnel;
+	bCanHaveInputs: boolean;
+	bCanHaveOutputs: boolean;
+	MetaData: KismetUserDeclaredFunctionMetadata;
+	static Load(ResourceName: string): K2Node_Tunnel;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Tunnel;
+	static GetDefaultObject(): K2Node_Tunnel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Tunnel;
+	static C(Other: UObject | any): K2Node_Tunnel;
+}
+
+declare class K2Node_Composite extends K2Node_Tunnel { 
+	BoundGraph: EdGraph;
+	static Load(ResourceName: string): K2Node_Composite;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Composite;
+	static GetDefaultObject(): K2Node_Composite;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Composite;
+	static C(Other: UObject | any): K2Node_Composite;
 }
 
-declare class TileView extends TableViewBase { 
-	ItemWidth: number;
-	ItemHeight: number;
-	Items: UObject[];
-	SelectionMode: ESelectionMode;
-	OnGenerateTileEvent: UnrealEngineDelegate<(Item: UObject) => Widget>;
-	static Load(ResourceName: string): TileView;
-	static Find(Outer: UObject, ResourceName: string): TileView;
-	static GetDefaultObject(): TileView;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileView;
-	SetItemWidth(Width: number): void;
-	SetItemHeight(Height: number): void;
-	RequestListRefresh(): void;
-	static C(Other: UObject | any): TileView;
+declare class K2Node_ConvertAsset extends K2Node { 
+	static Load(ResourceName: string): K2Node_ConvertAsset;
+	static Find(Outer: UObject, ResourceName: string): K2Node_ConvertAsset;
+	static GetDefaultObject(): K2Node_ConvertAsset;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConvertAsset;
+	static C(Other: UObject | any): K2Node_ConvertAsset;
 }
 
-declare class UniformGridPanel extends PanelWidget { 
-	SlotPadding: Margin;
-	MinDesiredSlotWidth: number;
-	MinDesiredSlotHeight: number;
-	static Load(ResourceName: string): UniformGridPanel;
-	static Find(Outer: UObject, ResourceName: string): UniformGridPanel;
-	static GetDefaultObject(): UniformGridPanel;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UniformGridPanel;
-	SetSlotPadding(InSlotPadding: Margin): void;
-	SetMinDesiredSlotWidth(InMinDesiredSlotWidth: number): void;
-	SetMinDesiredSlotHeight(InMinDesiredSlotHeight: number): void;
-	AddChildToUniformGrid(Content: Widget): UniformGridSlot;
-	static C(Other: UObject | any): UniformGridPanel;
+declare class K2Node_Copy extends K2Node { 
+	static Load(ResourceName: string): K2Node_Copy;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Copy;
+	static GetDefaultObject(): K2Node_Copy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Copy;
+	static C(Other: UObject | any): K2Node_Copy;
 }
 
-declare class VerticalBox extends PanelWidget { 
-	static Load(ResourceName: string): VerticalBox;
-	static Find(Outer: UObject, ResourceName: string): VerticalBox;
-	static GetDefaultObject(): VerticalBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VerticalBox;
-	AddChildToVerticalBox(Content: Widget): VerticalBoxSlot;
-	static C(Other: UObject | any): VerticalBox;
+declare class K2Node_CreateDelegate extends K2Node { 
+	SelectedFunctionName: string;
+	SelectedFunctionGuid: Guid;
+	static Load(ResourceName: string): K2Node_CreateDelegate;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CreateDelegate;
+	static GetDefaultObject(): K2Node_CreateDelegate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CreateDelegate;
+	static C(Other: UObject | any): K2Node_CreateDelegate;
 }
 
-declare class Viewport extends ContentWidget { 
-	BackgroundColor: LinearColor;
-	static Load(ResourceName: string): Viewport;
-	static Find(Outer: UObject, ResourceName: string): Viewport;
-	static GetDefaultObject(): Viewport;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Viewport;
-	Spawn(ActorClass: UnrealEngineClass): Actor;
-	SetViewRotation(Rotation: Rotator): void;
-	SetViewLocation(Location: Vector): void;
-	GetViewRotation(): Rotator;
-	GetViewportWorld(): World;
-	GetViewLocation(): Vector;
-	static C(Other: UObject | any): Viewport;
+declare class K2Node_CustomEvent extends K2Node_Event { 
+	bCallInEditor: boolean;
+	static Load(ResourceName: string): K2Node_CustomEvent;
+	static Find(Outer: UObject, ResourceName: string): K2Node_CustomEvent;
+	static GetDefaultObject(): K2Node_CustomEvent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_CustomEvent;
+	static C(Other: UObject | any): K2Node_CustomEvent;
 }
 
-declare class VisibilityBinding extends PropertyBinding { 
-	static Load(ResourceName: string): VisibilityBinding;
-	static Find(Outer: UObject, ResourceName: string): VisibilityBinding;
-	static GetDefaultObject(): VisibilityBinding;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisibilityBinding;
-	GetValue(): ReturnValue;
-	static C(Other: UObject | any): VisibilityBinding;
+declare class K2Node_DeadClass extends K2Node { 
+	static Load(ResourceName: string): K2Node_DeadClass;
+	static Find(Outer: UObject, ResourceName: string): K2Node_DeadClass;
+	static GetDefaultObject(): K2Node_DeadClass;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DeadClass;
+	static C(Other: UObject | any): K2Node_DeadClass;
 }
 
-declare class WidgetBinding extends PropertyBinding { 
-	static Load(ResourceName: string): WidgetBinding;
-	static Find(Outer: UObject, ResourceName: string): WidgetBinding;
-	static GetDefaultObject(): WidgetBinding;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBinding;
-	GetValue(): Widget;
-	static C(Other: UObject | any): WidgetBinding;
+declare class K2Node_DelegateSet extends K2Node { 
+	DelegatePropertyName: string;
+	DelegatePropertyClass: UnrealEngineClass;
+	static Load(ResourceName: string): K2Node_DelegateSet;
+	static Find(Outer: UObject, ResourceName: string): K2Node_DelegateSet;
+	static GetDefaultObject(): K2Node_DelegateSet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DelegateSet;
+	static C(Other: UObject | any): K2Node_DelegateSet;
+}
+
+declare class K2Node_TemporaryVariable extends K2Node { 
+	VariableType: EdGraphPinType;
+	bIsPersistent: boolean;
+	static Load(ResourceName: string): K2Node_TemporaryVariable;
+	static Find(Outer: UObject, ResourceName: string): K2Node_TemporaryVariable;
+	static GetDefaultObject(): K2Node_TemporaryVariable;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_TemporaryVariable;
+	static C(Other: UObject | any): K2Node_TemporaryVariable;
+}
+
+declare class K2Node_DoOnceMultiInput extends K2Node { 
+	NumAdditionalInputs: number;
+	DataNode: K2Node_TemporaryVariable;
+	static Load(ResourceName: string): K2Node_DoOnceMultiInput;
+	static Find(Outer: UObject, ResourceName: string): K2Node_DoOnceMultiInput;
+	static GetDefaultObject(): K2Node_DoOnceMultiInput;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_DoOnceMultiInput;
+	static C(Other: UObject | any): K2Node_DoOnceMultiInput;
+}
+
+declare class K2Node_EaseFunction extends K2Node { 
+	EaseFunctionName: string;
+	static Load(ResourceName: string): K2Node_EaseFunction;
+	static Find(Outer: UObject, ResourceName: string): K2Node_EaseFunction;
+	static GetDefaultObject(): K2Node_EaseFunction;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EaseFunction;
+	static C(Other: UObject | any): K2Node_EaseFunction;
+}
+
+declare class K2Node_EnumEquality extends K2Node { 
+	static Load(ResourceName: string): K2Node_EnumEquality;
+	static Find(Outer: UObject, ResourceName: string): K2Node_EnumEquality;
+	static GetDefaultObject(): K2Node_EnumEquality;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EnumEquality;
+	static C(Other: UObject | any): K2Node_EnumEquality;
+}
+
+declare class K2Node_EnumInequality extends K2Node_EnumEquality { 
+	static Load(ResourceName: string): K2Node_EnumInequality;
+	static Find(Outer: UObject, ResourceName: string): K2Node_EnumInequality;
+	static GetDefaultObject(): K2Node_EnumInequality;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EnumInequality;
+	static C(Other: UObject | any): K2Node_EnumInequality;
+}
+
+declare class K2Node_EnumLiteral extends K2Node { 
+	Enum: Enum;
+	static Load(ResourceName: string): K2Node_EnumLiteral;
+	static Find(Outer: UObject, ResourceName: string): K2Node_EnumLiteral;
+	static GetDefaultObject(): K2Node_EnumLiteral;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EnumLiteral;
+	static C(Other: UObject | any): K2Node_EnumLiteral;
 }
 
-declare class EventGraphFastCallPair { 
-	FunctionToPatch: UFunction;
-	EventGraphCallOffset: number;
-	clone() : EventGraphFastCallPair;
-	static C(Other: UObject | any): EventGraphFastCallPair;
+declare class K2Node_EventNodeInterface extends Interface { 
+	static Load(ResourceName: string): K2Node_EventNodeInterface;
+	static Find(Outer: UObject, ResourceName: string): K2Node_EventNodeInterface;
+	static GetDefaultObject(): K2Node_EventNodeInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_EventNodeInterface;
+	static C(Other: UObject | any): K2Node_EventNodeInterface;
 }
 
-declare class BlueprintGeneratedClass extends Class { 
-	NumReplicatedProperties: number;
-	DynamicBindingObjects: DynamicBlueprintBinding[];
-	ComponentTemplates: ActorComponent[];
-	Timelines: TimelineTemplate[];
-	SimpleConstructionScript: SimpleConstructionScript;
-	InheritableComponentHandler: InheritableComponentHandler;
-	UberGraphFramePointerProperty: StructProperty;
-	UberGraphFunction: UFunction;
-	FastCallPairs: EventGraphFastCallPair[];
-	bHasInstrumentation: boolean;
-	OverridenArchetypeForCDO: UObject;
-	PropertyGuids: any;
-	CookedComponentInstancingData: any;
-	bHasNativizedParent: boolean;
-	static Load(ResourceName: string): BlueprintGeneratedClass;
-	static Find(Outer: UObject, ResourceName: string): BlueprintGeneratedClass;
-	static GetDefaultObject(): BlueprintGeneratedClass;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BlueprintGeneratedClass;
-	static C(Other: UObject | any): BlueprintGeneratedClass;
+declare class K2Node_ExecutionSequence extends K2Node { 
+	static Load(ResourceName: string): K2Node_ExecutionSequence;
+	static Find(Outer: UObject, ResourceName: string): K2Node_ExecutionSequence;
+	static GetDefaultObject(): K2Node_ExecutionSequence;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ExecutionSequence;
+	static C(Other: UObject | any): K2Node_ExecutionSequence;
 }
 
-declare class DelegateRuntimeBinding { 
-	ObjectName: string;
-	PropertyName: string;
-	FunctionName: string;
-	SourcePath: DynamicPropertyPath;
-	Kind: Kind;
-	clone() : DelegateRuntimeBinding;
-	static C(Other: UObject | any): DelegateRuntimeBinding;
+declare class K2Node_ForEachElementInEnum extends K2Node { 
+	Enum: Enum;
+	static Load(ResourceName: string): K2Node_ForEachElementInEnum;
+	static Find(Outer: UObject, ResourceName: string): K2Node_ForEachElementInEnum;
+	static GetDefaultObject(): K2Node_ForEachElementInEnum;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ForEachElementInEnum;
+	static C(Other: UObject | any): K2Node_ForEachElementInEnum;
+}
+
+declare class K2Node_FormatText extends K2Node { 
+	PinNames: string[];
+	static Load(ResourceName: string): K2Node_FormatText;
+	static Find(Outer: UObject, ResourceName: string): K2Node_FormatText;
+	static GetDefaultObject(): K2Node_FormatText;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FormatText;
+	static C(Other: UObject | any): K2Node_FormatText;
+}
+
+declare class K2Node_FunctionTerminator extends K2Node_EditablePinBase { 
+	FunctionReference: MemberReference;
+	SignatureClass: UnrealEngineClass;
+	SignatureName: string;
+	static Load(ResourceName: string): K2Node_FunctionTerminator;
+	static Find(Outer: UObject, ResourceName: string): K2Node_FunctionTerminator;
+	static GetDefaultObject(): K2Node_FunctionTerminator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FunctionTerminator;
+	static C(Other: UObject | any): K2Node_FunctionTerminator;
+}
+
+declare class K2Node_FunctionEntry extends K2Node_FunctionTerminator { 
+	CustomGeneratedFunctionName: string;
+	MetaData: KismetUserDeclaredFunctionMetadata;
+	LocalVariables: BPVariableDescription[];
+	bEnforceConstCorrectness: boolean;
+	ExtraFlags: number;
+	static Load(ResourceName: string): K2Node_FunctionEntry;
+	static Find(Outer: UObject, ResourceName: string): K2Node_FunctionEntry;
+	static GetDefaultObject(): K2Node_FunctionEntry;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FunctionEntry;
+	static C(Other: UObject | any): K2Node_FunctionEntry;
+}
+
+declare class K2Node_FunctionResult extends K2Node_FunctionTerminator { 
+	static Load(ResourceName: string): K2Node_FunctionResult;
+	static Find(Outer: UObject, ResourceName: string): K2Node_FunctionResult;
+	static GetDefaultObject(): K2Node_FunctionResult;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_FunctionResult;
+	static C(Other: UObject | any): K2Node_FunctionResult;
+}
+
+declare class K2Node_GenericCreateObject extends K2Node_ConstructObjectFromClass { 
+	static Load(ResourceName: string): K2Node_GenericCreateObject;
+	static Find(Outer: UObject, ResourceName: string): K2Node_GenericCreateObject;
+	static GetDefaultObject(): K2Node_GenericCreateObject;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GenericCreateObject;
+	static C(Other: UObject | any): K2Node_GenericCreateObject;
+}
+
+declare class K2Node_GetArrayItem extends K2Node { 
+	bReturnByRefDesired: boolean;
+	static Load(ResourceName: string): K2Node_GetArrayItem;
+	static Find(Outer: UObject, ResourceName: string): K2Node_GetArrayItem;
+	static GetDefaultObject(): K2Node_GetArrayItem;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetArrayItem;
+	static C(Other: UObject | any): K2Node_GetArrayItem;
+}
+
+declare class K2Node_GetClassDefaults extends K2Node { 
+	BlueprintSubscribedTo: Blueprint;
+	ShowPinForProperties: OptionalPinFromProperty[];
+	bExcludeObjectContainers: boolean;
+	bExcludeObjectArrays: boolean;
+	static Load(ResourceName: string): K2Node_GetClassDefaults;
+	static Find(Outer: UObject, ResourceName: string): K2Node_GetClassDefaults;
+	static GetDefaultObject(): K2Node_GetClassDefaults;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetClassDefaults;
+	static C(Other: UObject | any): K2Node_GetClassDefaults;
+}
+
+declare class K2Node_GetDataTableRow extends K2Node { 
+	static Load(ResourceName: string): K2Node_GetDataTableRow;
+	static Find(Outer: UObject, ResourceName: string): K2Node_GetDataTableRow;
+	static GetDefaultObject(): K2Node_GetDataTableRow;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetDataTableRow;
+	static C(Other: UObject | any): K2Node_GetDataTableRow;
+}
+
+declare class K2Node_GetEnumeratorName extends K2Node { 
+	static Load(ResourceName: string): K2Node_GetEnumeratorName;
+	static Find(Outer: UObject, ResourceName: string): K2Node_GetEnumeratorName;
+	static GetDefaultObject(): K2Node_GetEnumeratorName;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetEnumeratorName;
+	static C(Other: UObject | any): K2Node_GetEnumeratorName;
+}
+
+declare class K2Node_GetEnumeratorNameAsString extends K2Node_GetEnumeratorName { 
+	static Load(ResourceName: string): K2Node_GetEnumeratorNameAsString;
+	static Find(Outer: UObject, ResourceName: string): K2Node_GetEnumeratorNameAsString;
+	static GetDefaultObject(): K2Node_GetEnumeratorNameAsString;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetEnumeratorNameAsString;
+	static C(Other: UObject | any): K2Node_GetEnumeratorNameAsString;
+}
+
+declare class K2Node_GetInputAxisKeyValue extends K2Node_CallFunction { 
+	InputAxisKey: Key;
+	bConsumeInput: boolean;
+	bExecuteWhenPaused: boolean;
+	static Load(ResourceName: string): K2Node_GetInputAxisKeyValue;
+	static Find(Outer: UObject, ResourceName: string): K2Node_GetInputAxisKeyValue;
+	static GetDefaultObject(): K2Node_GetInputAxisKeyValue;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetInputAxisKeyValue;
+	static C(Other: UObject | any): K2Node_GetInputAxisKeyValue;
 }
 
-declare class WidgetBlueprintGeneratedClass extends BlueprintGeneratedClass { 
-	WidgetTree: WidgetTree;
-	bCookSlowConstructionWidgetTree: boolean;
-	bAllowTemplate: boolean;
-	Bindings: DelegateRuntimeBinding[];
-	Animations: WidgetAnimation[];
-	NamedSlots: string[];
-	bValidTemplate: boolean;
-	bTemplateInitialized: boolean;
-	TemplateAsset: any;
-	Template: UserWidget;
-	EditorTemplate: UserWidget;
-	static Load(ResourceName: string): WidgetBlueprintGeneratedClass;
-	static Find(Outer: UObject, ResourceName: string): WidgetBlueprintGeneratedClass;
-	static GetDefaultObject(): WidgetBlueprintGeneratedClass;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBlueprintGeneratedClass;
-	static C(Other: UObject | any): WidgetBlueprintGeneratedClass;
+declare class K2Node_GetInputAxisValue extends K2Node_CallFunction { 
+	InputAxisName: string;
+	bConsumeInput: boolean;
+	bExecuteWhenPaused: boolean;
+	static Load(ResourceName: string): K2Node_GetInputAxisValue;
+	static Find(Outer: UObject, ResourceName: string): K2Node_GetInputAxisValue;
+	static GetDefaultObject(): K2Node_GetInputAxisValue;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetInputAxisValue;
+	static C(Other: UObject | any): K2Node_GetInputAxisValue;
 }
 
-declare class NavigationEvent extends InputEvent { 
-	clone() : NavigationEvent;
-	static C(Other: UObject | any): NavigationEvent;
-	GetInputEventFromNavigationEvent(): InputEvent;
-	static GetInputEventFromNavigationEvent(Event: NavigationEvent): InputEvent;
+declare class K2Node_GetInputVectorAxisValue extends K2Node_GetInputAxisKeyValue { 
+	static Load(ResourceName: string): K2Node_GetInputVectorAxisValue;
+	static Find(Outer: UObject, ResourceName: string): K2Node_GetInputVectorAxisValue;
+	static GetDefaultObject(): K2Node_GetInputVectorAxisValue;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetInputVectorAxisValue;
+	static C(Other: UObject | any): K2Node_GetInputVectorAxisValue;
 }
 
-declare class WidgetBlueprintLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): WidgetBlueprintLibrary;
-	static Find(Outer: UObject, ResourceName: string): WidgetBlueprintLibrary;
-	static GetDefaultObject(): WidgetBlueprintLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetBlueprintLibrary;
-	static UnlockMouse(Reply?: EventReply): {Reply: EventReply, $: EventReply};
-	static Unhandled(): EventReply;
-	static SetUserFocus(Reply?: EventReply,FocusWidget?: Widget,bInAllUsers?: boolean): {Reply: EventReply, $: EventReply};
-	static SetMousePosition(Reply?: EventReply,NewMousePosition?: Vector2D): {Reply: EventReply, $: EventReply};
-	static SetInputMode_UIOnlyEx(Target: PlayerController,InWidgetToFocus: Widget,InMouseLockMode: InMouseLockMode): void;
-	static SetInputMode_UIOnly(Target: PlayerController,InWidgetToFocus: Widget,bLockMouseToViewport: boolean): void;
-	static SetInputMode_GameOnly(Target: PlayerController): void;
-	static SetInputMode_GameAndUIEx(Target: PlayerController,InWidgetToFocus: Widget,InMouseLockMode: InMouseLockMode,bHideCursorDuringCapture: boolean): void;
-	static SetInputMode_GameAndUI(Target: PlayerController,InWidgetToFocus: Widget,bLockMouseToViewport: boolean,bHideCursorDuringCapture: boolean): void;
-	static SetHardwareCursor(WorldContextObject: UObject,CursorShape: EMouseCursor,CursorName: string,HotSpot: Vector2D): boolean;
-	static SetFocusToGameViewport(): void;
-	static SetBrushResourceToTexture(Brush?: SlateBrush,Texture?: Texture2D): {Brush: SlateBrush};
-	static SetBrushResourceToMaterial(Brush?: SlateBrush,Material?: MaterialInterface): {Brush: SlateBrush};
-	static ReleaseMouseCapture(Reply?: EventReply): {Reply: EventReply, $: EventReply};
-	static ReleaseJoystickCapture(Reply?: EventReply,bInAllJoysticks?: boolean): {Reply: EventReply, $: EventReply};
-	static NoResourceBrush(): SlateBrush;
-	static MakeBrushFromTexture(Texture: Texture2D,Width: number,Height: number): SlateBrush;
-	static MakeBrushFromMaterial(Material: MaterialInterface,Width: number,Height: number): SlateBrush;
-	static MakeBrushFromAsset(BrushAsset: SlateBrushAsset): SlateBrush;
-	static LockMouse(Reply?: EventReply,CapturingWidget?: Widget): {Reply: EventReply, $: EventReply};
-	static IsDragDropping(): boolean;
-	static Handled(): EventReply;
-	static GetSafeZonePadding(WorldContextObject: UObject,SafePadding?: Vector2D,SafePaddingScale?: Vector2D,SpillOverPadding?: Vector2D): {SafePadding: Vector2D, SafePaddingScale: Vector2D, SpillOverPadding: Vector2D};
-	static GetKeyEventFromAnalogInputEvent(Event: AnalogInputEvent): KeyEvent;
-	static GetInputEventFromPointerEvent(Event: UPointerEvent): InputEvent;
-	static GetInputEventFromNavigationEvent(Event: NavigationEvent): InputEvent;
-	static GetInputEventFromKeyEvent(Event: KeyEvent): InputEvent;
-	static GetInputEventFromCharacterEvent(Event: CharacterEvent): InputEvent;
-	static GetDynamicMaterial(Brush?: SlateBrush): {Brush: SlateBrush, $: MaterialInstanceDynamic};
-	static GetDragDroppingContent(): DragDropOperation;
-	static GetBrushResourceAsTexture2D(Brush?: SlateBrush): {Brush: SlateBrush, $: Texture2D};
-	static GetBrushResourceAsMaterial(Brush?: SlateBrush): {Brush: SlateBrush, $: MaterialInterface};
-	static GetBrushResource(Brush?: SlateBrush): {Brush: SlateBrush, $: UObject};
-	static GetAllWidgetsWithInterface(WorldContextObject: UObject,Interface: UnrealEngineClass,FoundWidgets?: UserWidget[],TopLevelOnly?: boolean): {FoundWidgets: UserWidget[]};
-	static GetAllWidgetsOfClass(WorldContextObject: UObject,FoundWidgets?: UserWidget[],WidgetClass?: UnrealEngineClass,TopLevelOnly?: boolean): {FoundWidgets: UserWidget[]};
-	static EndDragDrop(Reply?: EventReply): {Reply: EventReply, $: EventReply};
-	static DrawTextFormatted(Context?: PaintContext,Text?: string,Position?: Vector2D,Font?: Font,FontSize?: number,FontTypeFace?: string,Tint?: LinearColor): {Context: PaintContext};
-	static DrawText(Context?: PaintContext,InString?: string,Position?: Vector2D,Tint?: LinearColor): {Context: PaintContext};
-	static DrawLines(Context?: PaintContext,Points?: Vector2D[],Tint?: LinearColor,bAntiAlias?: boolean): {Context: PaintContext};
-	static DrawLine(Context?: PaintContext,PositionA?: Vector2D,PositionB?: Vector2D,Tint?: LinearColor,bAntiAlias?: boolean): {Context: PaintContext};
-	static DrawBox(Context?: PaintContext,Position?: Vector2D,Size?: Vector2D,Brush?: SlateBrushAsset,Tint?: LinearColor): {Context: PaintContext};
-	static DismissAllMenus(): void;
-	static DetectDragIfPressed(UPointerEvent: UPointerEvent,WidgetDetectingDrag: Widget,DragKey: Key): EventReply;
-	static DetectDrag(Reply?: EventReply,WidgetDetectingDrag?: Widget,DragKey?: Key): {Reply: EventReply, $: EventReply};
-	static CreateDragDropOperation(OperationClass: UnrealEngineClass): DragDropOperation;
-	static Create(WorldContextObject: UObject,WidgetType: UnrealEngineClass,OwningPlayer: PlayerController): UserWidget;
-	static ClearUserFocus(Reply?: EventReply,bInAllUsers?: boolean): {Reply: EventReply, $: EventReply};
-	static CaptureMouse(Reply?: EventReply,CapturingWidget?: Widget): {Reply: EventReply, $: EventReply};
-	static CaptureJoystick(Reply?: EventReply,CapturingWidget?: Widget,bInAllJoysticks?: boolean): {Reply: EventReply, $: EventReply};
-	static CancelDragDrop(): void;
-	static C(Other: UObject | any): WidgetBlueprintLibrary;
+declare class K2Node_GetNumEnumEntries extends K2Node { 
+	Enum: Enum;
+	static Load(ResourceName: string): K2Node_GetNumEnumEntries;
+	static Find(Outer: UObject, ResourceName: string): K2Node_GetNumEnumEntries;
+	static GetDefaultObject(): K2Node_GetNumEnumEntries;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_GetNumEnumEntries;
+	static C(Other: UObject | any): K2Node_GetNumEnumEntries;
 }
 
-declare type EWidgetSpace = 'World' | 'Screen';
-declare var EWidgetSpace : { World:'World',Screen:'Screen', };
-declare type EWidgetTimingPolicy = 'RealTime' | 'GameTime';
-declare var EWidgetTimingPolicy : { RealTime:'RealTime',GameTime:'GameTime', };
-declare type EWidgetBlendMode = 'Opaque' | 'Masked' | 'Transparent';
-declare var EWidgetBlendMode : { Opaque:'Opaque',Masked:'Masked',Transparent:'Transparent', };
-declare type EWidgetGeometryMode = 'Plane' | 'Cylinder';
-declare var EWidgetGeometryMode : { Plane:'Plane',Cylinder:'Cylinder', };
-declare class WidgetComponent extends MeshComponent { 
-	Space: Space;
-	TimingPolicy: TimingPolicy;
-	WidgetClass: UnrealEngineClass;
-	DrawSize: IntPoint;
-	bManuallyRedraw: boolean;
-	bRedrawRequested: boolean;
-	RedrawTime: number;
-	CurrentDrawSize: IntPoint;
-	bDrawAtDesiredSize: boolean;
-	Pivot: Vector2D;
-	bReceiveHardwareInput: boolean;
-	bWindowFocusable: boolean;
-	OwnerPlayer: LocalPlayer;
-	BackgroundColor: LinearColor;
-	TintColorAndOpacity: LinearColor;
-	OpacityFromTexture: number;
-	BlendMode: BlendMode;
-	bIsTwoSided: boolean;
-	TickWhenOffscreen: boolean;
-	Widget: UserWidget;
-	BodySetup: BodySetup;
-	TranslucentMaterial: MaterialInterface;
-	TranslucentMaterial_OneSided: MaterialInterface;
-	OpaqueMaterial: MaterialInterface;
-	OpaqueMaterial_OneSided: MaterialInterface;
-	MaskedMaterial: MaterialInterface;
-	MaskedMaterial_OneSided: MaterialInterface;
-	RenderTarget: TextureRenderTarget2D;
-	MaterialInstance: MaterialInstanceDynamic;
-	bAddedToScreen: boolean;
-	bEditTimeUsable: boolean;
-	SharedLayerName: string;
-	LayerZOrder: number;
-	GeometryMode: GeometryMode;
-	CylinderArcAngle: number;
-	static Load(ResourceName: string): WidgetComponent;
-	static Find(Outer: UObject, ResourceName: string): WidgetComponent;
-	static GetDefaultObject(): WidgetComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetComponent;
-	SetWidget(Widget: UserWidget): void;
-	SetOwnerPlayer(LocalPlayer: LocalPlayer): void;
-	SetDrawSize(Size: Vector2D): void;
-	SetBackgroundColor(NewBackgroundColor: LinearColor): void;
-	RequestRedraw(): void;
-	GetUserWidgetObject(): UserWidget;
-	GetRenderTarget(): TextureRenderTarget2D;
-	GetOwnerPlayer(): LocalPlayer;
-	GetMaterialInstance(): MaterialInstanceDynamic;
-	GetDrawSize(): Vector2D;
-	static C(Other: UObject | any): WidgetComponent;
-}
-
-declare type EWidgetInteractionSource = 'World' | 'Mouse' | 'CenterScreen' | 'Custom';
-declare var EWidgetInteractionSource : { World:'World',Mouse:'Mouse',CenterScreen:'CenterScreen',Custom:'Custom', };
-declare class WidgetInteractionComponent extends SceneComponent { 
-	OnHoveredWidgetChanged: UnrealEngineMulticastDelegate<(WidgetComponent: WidgetComponent, PreviousWidgetComponent: WidgetComponent) => void>;
-	VirtualUserIndex: number;
-	PointerIndex: number;
-	TraceChannel: ECollisionChannel;
-	InteractionDistance: number;
-	InteractionSource: InteractionSource;
-	bEnableHitTesting: boolean;
-	bShowDebug: boolean;
-	DebugColor: LinearColor;
-	CustomHitResult: HitResult;
-	LocalHitLocation: Vector2D;
-	LastLocalHitLocation: Vector2D;
-	HoveredWidgetComponent: WidgetComponent;
-	LastHitResult: HitResult;
-	bIsHoveredWidgetInteractable: boolean;
-	bIsHoveredWidgetFocusable: boolean;
-	bIsHoveredWidgetHitTestVisible: boolean;
-	ArrowComponent: ArrowComponent;
-	static Load(ResourceName: string): WidgetInteractionComponent;
-	static Find(Outer: UObject, ResourceName: string): WidgetInteractionComponent;
-	static GetDefaultObject(): WidgetInteractionComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetInteractionComponent;
-	SetCustomHitResult(HitResult: HitResult): void;
-	SendKeyChar(Characters: string,bRepeat: boolean): boolean;
-	ScrollWheel(ScrollDelta: number): void;
-	ReleasePointerKey(Key: Key): void;
-	ReleaseKey(Key: Key): boolean;
-	PressPointerKey(Key: Key): void;
-	PressKey(Key: Key,bRepeat: boolean): boolean;
-	PressAndReleaseKey(Key: Key): boolean;
-	IsOverInteractableWidget(): boolean;
-	IsOverHitTestVisibleWidget(): boolean;
-	IsOverFocusableWidget(): boolean;
-	GetLastHitResult(): HitResult;
-	GetHoveredWidgetComponent(): WidgetComponent;
-	Get2DHitLocation(): Vector2D;
-	static C(Other: UObject | any): WidgetInteractionComponent;
+declare class K2Node_IfThenElse extends K2Node { 
+	static Load(ResourceName: string): K2Node_IfThenElse;
+	static Find(Outer: UObject, ResourceName: string): K2Node_IfThenElse;
+	static GetDefaultObject(): K2Node_IfThenElse;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_IfThenElse;
+	static C(Other: UObject | any): K2Node_IfThenElse;
+}
+
+declare class K2Node_InputAction extends K2Node { 
+	InputActionName: string;
+	bConsumeInput: boolean;
+	bExecuteWhenPaused: boolean;
+	bOverrideParentBinding: boolean;
+	static Load(ResourceName: string): K2Node_InputAction;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InputAction;
+	static GetDefaultObject(): K2Node_InputAction;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputAction;
+	static C(Other: UObject | any): K2Node_InputAction;
 }
 
-declare class WidgetLayoutLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): WidgetLayoutLibrary;
-	static Find(Outer: UObject, ResourceName: string): WidgetLayoutLibrary;
-	static GetDefaultObject(): WidgetLayoutLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetLayoutLibrary;
-	static SlotAsVerticalBoxSlot(Widget: Widget): VerticalBoxSlot;
-	static SlotAsUniformGridSlot(Widget: Widget): UniformGridSlot;
-	static SlotAsOverlaySlot(Widget: Widget): OverlaySlot;
-	static SlotAsHorizontalBoxSlot(Widget: Widget): HorizontalBoxSlot;
-	static SlotAsGridSlot(Widget: Widget): GridSlot;
-	static SlotAsCanvasSlot(Widget: Widget): CanvasPanelSlot;
-	static SlotAsBorderSlot(Widget: Widget): BorderSlot;
-	static RemoveAllWidgets(WorldContextObject: UObject): void;
-	static ProjectWorldLocationToWidgetPosition(PlayerController: PlayerController,WorldLocation: Vector,ScreenPosition?: Vector2D): {ScreenPosition: Vector2D, $: boolean};
-	static GetViewportWidgetGeometry(WorldContextObject: UObject): Geometry;
-	static GetViewportSize(WorldContextObject: UObject): Vector2D;
-	static GetViewportScale(WorldContextObject: UObject): number;
-	static GetPlayerScreenWidgetGeometry(PlayerController: PlayerController): Geometry;
-	static GetMousePositionScaledByDPI(Player: PlayerController,LocationX?: number,LocationY?: number): {LocationX: number, LocationY: number, $: boolean};
-	static GetMousePositionOnViewport(WorldContextObject: UObject): Vector2D;
-	static GetMousePositionOnPlatform(): Vector2D;
-	static C(Other: UObject | any): WidgetLayoutLibrary;
+declare class K2Node_InputActionEvent extends K2Node_Event { 
+	InputActionName: string;
+	InputKeyEvent: EInputEvent;
+	bConsumeInput: boolean;
+	bExecuteWhenPaused: boolean;
+	bOverrideParentBinding: boolean;
+	static Load(ResourceName: string): K2Node_InputActionEvent;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InputActionEvent;
+	static GetDefaultObject(): K2Node_InputActionEvent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputActionEvent;
+	static C(Other: UObject | any): K2Node_InputActionEvent;
 }
 
-declare class WidgetSwitcher extends PanelWidget { 
-	ActiveWidgetIndex: number;
-	static Load(ResourceName: string): WidgetSwitcher;
-	static Find(Outer: UObject, ResourceName: string): WidgetSwitcher;
-	static GetDefaultObject(): WidgetSwitcher;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetSwitcher;
-	SetActiveWidgetIndex(Index: number): void;
-	SetActiveWidget(Widget: Widget): void;
-	GetWidgetAtIndex(Index: number): Widget;
-	GetNumWidgets(): number;
-	GetActiveWidgetIndex(): number;
-	static C(Other: UObject | any): WidgetSwitcher;
+declare class K2Node_InputAxisEvent extends K2Node_Event { 
+	InputAxisName: string;
+	bConsumeInput: boolean;
+	bExecuteWhenPaused: boolean;
+	bOverrideParentBinding: boolean;
+	static Load(ResourceName: string): K2Node_InputAxisEvent;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InputAxisEvent;
+	static GetDefaultObject(): K2Node_InputAxisEvent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputAxisEvent;
+	static C(Other: UObject | any): K2Node_InputAxisEvent;
 }
 
-declare class WidgetSwitcherSlot extends PanelSlot { 
-	Padding: Margin;
-	HorizontalAlignment: EHorizontalAlignment;
-	VerticalAlignment: EVerticalAlignment;
-	static Load(ResourceName: string): WidgetSwitcherSlot;
-	static Find(Outer: UObject, ResourceName: string): WidgetSwitcherSlot;
-	static GetDefaultObject(): WidgetSwitcherSlot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WidgetSwitcherSlot;
-	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
-	SetPadding(InPadding: Margin): void;
-	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
-	static C(Other: UObject | any): WidgetSwitcherSlot;
+declare class K2Node_InputAxisKeyEvent extends K2Node_Event { 
+	AxisKey: Key;
+	bConsumeInput: boolean;
+	bExecuteWhenPaused: boolean;
+	bOverrideParentBinding: boolean;
+	static Load(ResourceName: string): K2Node_InputAxisKeyEvent;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InputAxisKeyEvent;
+	static GetDefaultObject(): K2Node_InputAxisKeyEvent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputAxisKeyEvent;
+	static C(Other: UObject | any): K2Node_InputAxisKeyEvent;
 }
 
-declare class WindowTitleBarArea extends ContentWidget { 
-	bDoubleClickTogglesFullscreen: boolean;
-	static Load(ResourceName: string): WindowTitleBarArea;
-	static Find(Outer: UObject, ResourceName: string): WindowTitleBarArea;
-	static GetDefaultObject(): WindowTitleBarArea;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WindowTitleBarArea;
-	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
-	SetPadding(InPadding: Margin): void;
-	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
-	static C(Other: UObject | any): WindowTitleBarArea;
+declare class K2Node_InputKey extends K2Node { 
+	InputKey: Key;
+	bConsumeInput: boolean;
+	bExecuteWhenPaused: boolean;
+	bOverrideParentBinding: boolean;
+	bControl: boolean;
+	bAlt: boolean;
+	bShift: boolean;
+	bCommand: boolean;
+	static Load(ResourceName: string): K2Node_InputKey;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InputKey;
+	static GetDefaultObject(): K2Node_InputKey;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputKey;
+	static C(Other: UObject | any): K2Node_InputKey;
 }
 
-declare class WindowTitleBarAreaSlot extends PanelSlot { 
-	Padding: Margin;
-	HorizontalAlignment: EHorizontalAlignment;
-	VerticalAlignment: EVerticalAlignment;
-	static Load(ResourceName: string): WindowTitleBarAreaSlot;
-	static Find(Outer: UObject, ResourceName: string): WindowTitleBarAreaSlot;
-	static GetDefaultObject(): WindowTitleBarAreaSlot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WindowTitleBarAreaSlot;
-	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
-	SetPadding(InPadding: Margin): void;
-	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
-	static C(Other: UObject | any): WindowTitleBarAreaSlot;
+declare class K2Node_InputKeyEvent extends K2Node_Event { 
+	InputChord: InputChord;
+	InputKeyEvent: EInputEvent;
+	bConsumeInput: boolean;
+	bExecuteWhenPaused: boolean;
+	bOverrideParentBinding: boolean;
+	static Load(ResourceName: string): K2Node_InputKeyEvent;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InputKeyEvent;
+	static GetDefaultObject(): K2Node_InputKeyEvent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputKeyEvent;
+	static C(Other: UObject | any): K2Node_InputKeyEvent;
 }
 
-declare class WrapBoxSlot extends PanelSlot { 
-	Padding: Margin;
-	bFillEmptySpace: boolean;
-	FillSpanWhenLessThan: number;
-	HorizontalAlignment: EHorizontalAlignment;
-	VerticalAlignment: EVerticalAlignment;
-	static Load(ResourceName: string): WrapBoxSlot;
-	static Find(Outer: UObject, ResourceName: string): WrapBoxSlot;
-	static GetDefaultObject(): WrapBoxSlot;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WrapBoxSlot;
-	SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): void;
-	SetPadding(InPadding: Margin): void;
-	SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): void;
-	SetFillSpanWhenLessThan(InFillSpanWhenLessThan: number): void;
-	SetFillEmptySpace(InbFillEmptySpace: boolean): void;
-	static C(Other: UObject | any): WrapBoxSlot;
+declare class K2Node_InputTouch extends K2Node { 
+	bConsumeInput: boolean;
+	bExecuteWhenPaused: boolean;
+	bOverrideParentBinding: boolean;
+	static Load(ResourceName: string): K2Node_InputTouch;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InputTouch;
+	static GetDefaultObject(): K2Node_InputTouch;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputTouch;
+	static C(Other: UObject | any): K2Node_InputTouch;
 }
 
-declare class WrapBox extends PanelWidget { 
-	InnerSlotPadding: Vector2D;
-	WrapWidth: number;
-	bExplicitWrapWidth: boolean;
-	static Load(ResourceName: string): WrapBox;
-	static Find(Outer: UObject, ResourceName: string): WrapBox;
-	static GetDefaultObject(): WrapBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WrapBox;
-	SetInnerSlotPadding(InPadding: Vector2D): void;
-	AddChildWrapBox(Content: Widget): WrapBoxSlot;
-	static C(Other: UObject | any): WrapBox;
+declare class K2Node_InputTouchEvent extends K2Node_Event { 
+	InputKeyEvent: EInputEvent;
+	bConsumeInput: boolean;
+	bExecuteWhenPaused: boolean;
+	bOverrideParentBinding: boolean;
+	static Load(ResourceName: string): K2Node_InputTouchEvent;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InputTouchEvent;
+	static GetDefaultObject(): K2Node_InputTouchEvent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputTouchEvent;
+	static C(Other: UObject | any): K2Node_InputTouchEvent;
+}
+
+declare class K2Node_InputVectorAxisEvent extends K2Node_InputAxisKeyEvent { 
+	static Load(ResourceName: string): K2Node_InputVectorAxisEvent;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InputVectorAxisEvent;
+	static GetDefaultObject(): K2Node_InputVectorAxisEvent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InputVectorAxisEvent;
+	static C(Other: UObject | any): K2Node_InputVectorAxisEvent;
+}
+
+declare class K2Node_Knot extends K2Node { 
+	static Load(ResourceName: string): K2Node_Knot;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Knot;
+	static GetDefaultObject(): K2Node_Knot;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Knot;
+	static C(Other: UObject | any): K2Node_Knot;
+}
+
+declare class K2Node_Literal extends K2Node { 
+	ObjectRef: UObject;
+	static Load(ResourceName: string): K2Node_Literal;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Literal;
+	static GetDefaultObject(): K2Node_Literal;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Literal;
+	static C(Other: UObject | any): K2Node_Literal;
+}
+
+declare class K2Node_LoadAsset extends K2Node { 
+	static Load(ResourceName: string): K2Node_LoadAsset;
+	static Find(Outer: UObject, ResourceName: string): K2Node_LoadAsset;
+	static GetDefaultObject(): K2Node_LoadAsset;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LoadAsset;
+	static C(Other: UObject | any): K2Node_LoadAsset;
+}
+
+declare class K2Node_LoadAssetClass extends K2Node_LoadAsset { 
+	static Load(ResourceName: string): K2Node_LoadAssetClass;
+	static Find(Outer: UObject, ResourceName: string): K2Node_LoadAssetClass;
+	static GetDefaultObject(): K2Node_LoadAssetClass;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LoadAssetClass;
+	static C(Other: UObject | any): K2Node_LoadAssetClass;
+}
+
+declare class K2Node_LocalVariable extends K2Node_TemporaryVariable { 
+	CustomVariableName: string;
+	VariableTooltip: string;
+	static Load(ResourceName: string): K2Node_LocalVariable;
+	static Find(Outer: UObject, ResourceName: string): K2Node_LocalVariable;
+	static GetDefaultObject(): K2Node_LocalVariable;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LocalVariable;
+	static C(Other: UObject | any): K2Node_LocalVariable;
+}
+
+declare class GraphReference { 
+	MacroGraph: EdGraph;
+	GraphBlueprint: Blueprint;
+	GraphGuid: Guid;
+	clone() : GraphReference;
+	static C(Other: UObject | any): GraphReference;
+}
+
+declare class K2Node_MacroInstance extends K2Node_Tunnel { 
+	MacroGraph: EdGraph;
+	MacroGraphReference: GraphReference;
+	ResolvedWildcardType: EdGraphPinType;
+	static Load(ResourceName: string): K2Node_MacroInstance;
+	static Find(Outer: UObject, ResourceName: string): K2Node_MacroInstance;
+	static GetDefaultObject(): K2Node_MacroInstance;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MacroInstance;
+	static C(Other: UObject | any): K2Node_MacroInstance;
+}
+
+declare class K2Node_MakeContainer extends K2Node { 
+	NumInputs: number;
+	static Load(ResourceName: string): K2Node_MakeContainer;
+	static Find(Outer: UObject, ResourceName: string): K2Node_MakeContainer;
+	static GetDefaultObject(): K2Node_MakeContainer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeContainer;
+	static C(Other: UObject | any): K2Node_MakeContainer;
+}
+
+declare class K2Node_MakeArray extends K2Node_MakeContainer { 
+	static Load(ResourceName: string): K2Node_MakeArray;
+	static Find(Outer: UObject, ResourceName: string): K2Node_MakeArray;
+	static GetDefaultObject(): K2Node_MakeArray;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeArray;
+	static C(Other: UObject | any): K2Node_MakeArray;
+}
+
+declare class K2Node_MakeMap extends K2Node_MakeContainer { 
+	static Load(ResourceName: string): K2Node_MakeMap;
+	static Find(Outer: UObject, ResourceName: string): K2Node_MakeMap;
+	static GetDefaultObject(): K2Node_MakeMap;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeMap;
+	static C(Other: UObject | any): K2Node_MakeMap;
+}
+
+declare class K2Node_MakeSet extends K2Node_MakeContainer { 
+	static Load(ResourceName: string): K2Node_MakeSet;
+	static Find(Outer: UObject, ResourceName: string): K2Node_MakeSet;
+	static GetDefaultObject(): K2Node_MakeSet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeSet;
+	static C(Other: UObject | any): K2Node_MakeSet;
+}
+
+declare class K2Node_StructMemberSet extends K2Node_StructOperation { 
+	ShowPinForProperties: OptionalPinFromProperty[];
+	static Load(ResourceName: string): K2Node_StructMemberSet;
+	static Find(Outer: UObject, ResourceName: string): K2Node_StructMemberSet;
+	static GetDefaultObject(): K2Node_StructMemberSet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_StructMemberSet;
+	static C(Other: UObject | any): K2Node_StructMemberSet;
+}
+
+declare class K2Node_MakeStruct extends K2Node_StructMemberSet { 
+	bMadeAfterOverridePinRemoval: boolean;
+	static Load(ResourceName: string): K2Node_MakeStruct;
+	static Find(Outer: UObject, ResourceName: string): K2Node_MakeStruct;
+	static GetDefaultObject(): K2Node_MakeStruct;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeStruct;
+	static C(Other: UObject | any): K2Node_MakeStruct;
+}
+
+declare class K2Node_MakeVariable extends K2Node { 
+	VariableType: BPVariableDescription;
+	static Load(ResourceName: string): K2Node_MakeVariable;
+	static Find(Outer: UObject, ResourceName: string): K2Node_MakeVariable;
+	static GetDefaultObject(): K2Node_MakeVariable;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MakeVariable;
+	static C(Other: UObject | any): K2Node_MakeVariable;
+}
+
+declare class K2Node_MathExpression extends K2Node_Composite { 
+	Expression: string;
+	bMadeAfterRotChange: boolean;
+	static Load(ResourceName: string): K2Node_MathExpression;
+	static Find(Outer: UObject, ResourceName: string): K2Node_MathExpression;
+	static GetDefaultObject(): K2Node_MathExpression;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MathExpression;
+	static C(Other: UObject | any): K2Node_MathExpression;
+}
+
+declare class K2Node_MatineeController extends K2Node { 
+	MatineeActor: MatineeActor;
+	static Load(ResourceName: string): K2Node_MatineeController;
+	static Find(Outer: UObject, ResourceName: string): K2Node_MatineeController;
+	static GetDefaultObject(): K2Node_MatineeController;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MatineeController;
+	static C(Other: UObject | any): K2Node_MatineeController;
+}
+
+declare class K2Node_Message extends K2Node_CallFunction { 
+	static Load(ResourceName: string): K2Node_Message;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Message;
+	static GetDefaultObject(): K2Node_Message;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Message;
+	static C(Other: UObject | any): K2Node_Message;
+}
+
+declare class K2Node_MultiGate extends K2Node_ExecutionSequence { 
+	DataNode: K2Node_TemporaryVariable;
+	static Load(ResourceName: string): K2Node_MultiGate;
+	static Find(Outer: UObject, ResourceName: string): K2Node_MultiGate;
+	static GetDefaultObject(): K2Node_MultiGate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_MultiGate;
+	static C(Other: UObject | any): K2Node_MultiGate;
+}
+
+declare class K2Node_PureAssignmentStatement extends K2Node { 
+	static Load(ResourceName: string): K2Node_PureAssignmentStatement;
+	static Find(Outer: UObject, ResourceName: string): K2Node_PureAssignmentStatement;
+	static GetDefaultObject(): K2Node_PureAssignmentStatement;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_PureAssignmentStatement;
+	static C(Other: UObject | any): K2Node_PureAssignmentStatement;
+}
+
+declare class K2Node_RemoveDelegate extends K2Node_BaseMCDelegate { 
+	static Load(ResourceName: string): K2Node_RemoveDelegate;
+	static Find(Outer: UObject, ResourceName: string): K2Node_RemoveDelegate;
+	static GetDefaultObject(): K2Node_RemoveDelegate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_RemoveDelegate;
+	static C(Other: UObject | any): K2Node_RemoveDelegate;
+}
+
+declare class K2Node_Select extends K2Node { 
+	NumOptionPins: number;
+	IndexPinType: EdGraphPinType;
+	Enum: Enum;
+	EnumEntries: string[];
+	EnumEntryFriendlyNames: string[];
+	bReconstructNode: boolean;
+	static Load(ResourceName: string): K2Node_Select;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Select;
+	static GetDefaultObject(): K2Node_Select;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Select;
+	static C(Other: UObject | any): K2Node_Select;
+}
+
+declare class K2Node_Self extends K2Node { 
+	static Load(ResourceName: string): K2Node_Self;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Self;
+	static GetDefaultObject(): K2Node_Self;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Self;
+	static C(Other: UObject | any): K2Node_Self;
+}
+
+declare class K2Node_SetFieldsInStruct extends K2Node_MakeStruct { 
+	static Load(ResourceName: string): K2Node_SetFieldsInStruct;
+	static Find(Outer: UObject, ResourceName: string): K2Node_SetFieldsInStruct;
+	static GetDefaultObject(): K2Node_SetFieldsInStruct;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SetFieldsInStruct;
+	static C(Other: UObject | any): K2Node_SetFieldsInStruct;
+}
+
+declare class K2Node_SetVariableOnPersistentFrame extends K2Node { 
+	static Load(ResourceName: string): K2Node_SetVariableOnPersistentFrame;
+	static Find(Outer: UObject, ResourceName: string): K2Node_SetVariableOnPersistentFrame;
+	static GetDefaultObject(): K2Node_SetVariableOnPersistentFrame;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SetVariableOnPersistentFrame;
+	static C(Other: UObject | any): K2Node_SetVariableOnPersistentFrame;
+}
+
+declare class K2Node_SpawnActor extends K2Node { 
+	static Load(ResourceName: string): K2Node_SpawnActor;
+	static Find(Outer: UObject, ResourceName: string): K2Node_SpawnActor;
+	static GetDefaultObject(): K2Node_SpawnActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SpawnActor;
+	static C(Other: UObject | any): K2Node_SpawnActor;
+}
+
+declare class K2Node_SpawnActorFromClass extends K2Node_ConstructObjectFromClass { 
+	static Load(ResourceName: string): K2Node_SpawnActorFromClass;
+	static Find(Outer: UObject, ResourceName: string): K2Node_SpawnActorFromClass;
+	static GetDefaultObject(): K2Node_SpawnActorFromClass;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SpawnActorFromClass;
+	static C(Other: UObject | any): K2Node_SpawnActorFromClass;
+}
+
+declare class K2Node_Switch extends K2Node { 
+	bHasDefaultPin: boolean;
+	FunctionName: string;
+	FunctionClass: UnrealEngineClass;
+	static Load(ResourceName: string): K2Node_Switch;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Switch;
+	static GetDefaultObject(): K2Node_Switch;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Switch;
+	static C(Other: UObject | any): K2Node_Switch;
+}
+
+declare class K2Node_SwitchEnum extends K2Node_Switch { 
+	Enum: Enum;
+	EnumEntries: string[];
+	EnumFriendlyNames: string[];
+	static Load(ResourceName: string): K2Node_SwitchEnum;
+	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchEnum;
+	static GetDefaultObject(): K2Node_SwitchEnum;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchEnum;
+	static C(Other: UObject | any): K2Node_SwitchEnum;
+}
+
+declare class K2Node_SwitchInteger extends K2Node_Switch { 
+	StartIndex: number;
+	static Load(ResourceName: string): K2Node_SwitchInteger;
+	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchInteger;
+	static GetDefaultObject(): K2Node_SwitchInteger;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchInteger;
+	static C(Other: UObject | any): K2Node_SwitchInteger;
+}
+
+declare class K2Node_SwitchName extends K2Node_Switch { 
+	PinNames: string[];
+	static Load(ResourceName: string): K2Node_SwitchName;
+	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchName;
+	static GetDefaultObject(): K2Node_SwitchName;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchName;
+	static C(Other: UObject | any): K2Node_SwitchName;
+}
+
+declare class K2Node_SwitchString extends K2Node_Switch { 
+	PinNames: string[];
+	bIsCaseSensitive: boolean;
+	static Load(ResourceName: string): K2Node_SwitchString;
+	static Find(Outer: UObject, ResourceName: string): K2Node_SwitchString;
+	static GetDefaultObject(): K2Node_SwitchString;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_SwitchString;
+	static C(Other: UObject | any): K2Node_SwitchString;
+}
+
+declare class K2Node_Timeline extends K2Node { 
+	TimelineName: string;
+	bAutoPlay: boolean;
+	TimelineGuid: Guid;
+	bLoop: boolean;
+	bReplicated: boolean;
+	bIgnoreTimeDilation: boolean;
+	static Load(ResourceName: string): K2Node_Timeline;
+	static Find(Outer: UObject, ResourceName: string): K2Node_Timeline;
+	static GetDefaultObject(): K2Node_Timeline;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_Timeline;
+	static C(Other: UObject | any): K2Node_Timeline;
+}
+
+declare type ETunnelBoundaryType = 'Unknown' | 'EntrySite' | 'InputSite' | 'OutputSite' | 'ETunnelBoundaryType_MAX';
+declare var ETunnelBoundaryType : { Unknown:'Unknown',EntrySite:'EntrySite',InputSite:'InputSite',OutputSite:'OutputSite',ETunnelBoundaryType_MAX:'ETunnelBoundaryType_MAX', };
+declare class K2Node_TunnelBoundary extends K2Node { 
+	BaseName: string;
+	TunnelBoundaryType: ETunnelBoundaryType;
+	static Load(ResourceName: string): K2Node_TunnelBoundary;
+	static Find(Outer: UObject, ResourceName: string): K2Node_TunnelBoundary;
+	static GetDefaultObject(): K2Node_TunnelBoundary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_TunnelBoundary;
+	static C(Other: UObject | any): K2Node_TunnelBoundary;
+}
+
+declare class K2Node_VariableGet extends K2Node_Variable { 
+	bIsPureGet: boolean;
+	static Load(ResourceName: string): K2Node_VariableGet;
+	static Find(Outer: UObject, ResourceName: string): K2Node_VariableGet;
+	static GetDefaultObject(): K2Node_VariableGet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_VariableGet;
+	static C(Other: UObject | any): K2Node_VariableGet;
+}
+
+declare class K2Node_VariableSet extends K2Node_Variable { 
+	static Load(ResourceName: string): K2Node_VariableSet;
+	static Find(Outer: UObject, ResourceName: string): K2Node_VariableSet;
+	static GetDefaultObject(): K2Node_VariableSet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_VariableSet;
+	static C(Other: UObject | any): K2Node_VariableSet;
+}
+
+declare class K2Node_VariableSetRef extends K2Node { 
+	static Load(ResourceName: string): K2Node_VariableSetRef;
+	static Find(Outer: UObject, ResourceName: string): K2Node_VariableSetRef;
+	static GetDefaultObject(): K2Node_VariableSetRef;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_VariableSetRef;
+	static C(Other: UObject | any): K2Node_VariableSetRef;
+}
+
+declare class NodeDependingOnEnumInterface extends Interface { 
+	static Load(ResourceName: string): NodeDependingOnEnumInterface;
+	static Find(Outer: UObject, ResourceName: string): NodeDependingOnEnumInterface;
+	static GetDefaultObject(): NodeDependingOnEnumInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NodeDependingOnEnumInterface;
+	static C(Other: UObject | any): NodeDependingOnEnumInterface;
 }
 
 declare class AnimNotify_PlayMontageNotify extends AnimNotify { 
@@ -2350,7 +5777,11 @@ declare class KismetAnimationLibrary extends BlueprintFunctionLibrary {
 	static GetDefaultObject(): KismetAnimationLibrary;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KismetAnimationLibrary;
 	static K2_TwoBoneIK(RootPos: Vector,JointPos: Vector,EndPos: Vector,JointTarget: Vector,Effector: Vector,OutJointPos?: Vector,OutEndPos?: Vector,bAllowStretching?: boolean,StartStretchRatio?: number,MaxStretchScale?: number): {OutJointPos: Vector, OutEndPos: Vector};
+	static K2_MakePerlinNoiseVectorAndRemap(X: number,Y: number,Z: number,RangeOutMinX: number,RangeOutMaxX: number,RangeOutMinY: number,RangeOutMaxY: number,RangeOutMinZ: number,RangeOutMaxZ: number): Vector;
+	static K2_MakePerlinNoiseAndRemap(Value: number,RangeOutMin: number,RangeOutMax: number): number;
 	static K2_LookAt(CurrentTransform: Transform,TargetPosition: Vector,LookAtVector: Vector,bUseUpVector: boolean,UpVector: Vector,ClampConeInDegree: number): Transform;
+	static K2_DistanceBetweenTwoSocketsAndMapRange(Component: SkeletalMeshComponent,SocketOrBoneNameA: string,SocketSpaceA: ERelativeTransformSpace,SocketOrBoneNameB: string,SocketSpaceB: ERelativeTransformSpace,bRemapRange: boolean,InRangeMin: number,InRangeMax: number,OutRangeMin: number,OutRangeMax: number): number;
+	static K2_DirectionBetweenSockets(Component: SkeletalMeshComponent,SocketOrBoneNameFrom: string,SocketOrBoneNameTo: string): Vector;
 	static C(Other: UObject | any): KismetAnimationLibrary;
 }
 
@@ -2377,8 +5808,18 @@ declare class PlayMontageCallbackProxy extends UObject {
 	static C(Other: UObject | any): PlayMontageCallbackProxy;
 }
 
+declare class MovieSceneTransformOrigin extends Interface { 
+	static Load(ResourceName: string): MovieSceneTransformOrigin;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneTransformOrigin;
+	static GetDefaultObject(): MovieSceneTransformOrigin;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneTransformOrigin;
+	BP_GetTransformOrigin(): Transform;
+	static C(Other: UObject | any): MovieSceneTransformOrigin;
+}
+
 declare class MovieScene3DConstraintSection extends MovieSceneSection { 
 	ConstraintId: Guid;
+	ConstraintBindingID: MovieSceneObjectBindingID;
 	static Load(ResourceName: string): MovieScene3DConstraintSection;
 	static Find(Outer: UObject, ResourceName: string): MovieScene3DConstraintSection;
 	static GetDefaultObject(): MovieScene3DConstraintSection;
@@ -2389,12 +5830,12 @@ declare class MovieScene3DConstraintSection extends MovieSceneSection {
 declare class MovieScene3DAttachSection extends MovieScene3DConstraintSection { 
 	AttachSocketName: string;
 	AttachComponentName: string;
-	AttachmentLocationRule: AttachmentLocationRule;
-	AttachmentRotationRule: AttachmentRotationRule;
-	AttachmentScaleRule: AttachmentScaleRule;
-	DetachmentLocationRule: DetachmentLocationRule;
-	DetachmentRotationRule: DetachmentRotationRule;
-	DetachmentScaleRule: DetachmentScaleRule;
+	AttachmentLocationRule: EAttachmentRule;
+	AttachmentRotationRule: EAttachmentRule;
+	AttachmentScaleRule: EAttachmentRule;
+	DetachmentLocationRule: EDetachmentRule;
+	DetachmentRotationRule: EDetachmentRule;
+	DetachmentScaleRule: EDetachmentRule;
 	static Load(ResourceName: string): MovieScene3DAttachSection;
 	static Find(Outer: UObject, ResourceName: string): MovieScene3DAttachSection;
 	static GetDefaultObject(): MovieScene3DAttachSection;
@@ -2419,12 +5860,12 @@ declare class MovieScene3DAttachTrack extends MovieScene3DConstraintTrack {
 	static C(Other: UObject | any): MovieScene3DAttachTrack;
 }
 
-declare type MovieScene3DPathSection_Axis = 'X' | 'Y' | 'Z' | 'NEG_X' | 'NEG_Y' | 'NEG_Z';
-declare var MovieScene3DPathSection_Axis : { X:'X',Y:'Y',Z:'Z',NEG_X:'NEG_X',NEG_Y:'NEG_Y',NEG_Z:'NEG_Z', };
+declare type MovieScene3DPathSection_Axis = 'X' | 'Y' | 'Z' | 'NEG_X' | 'NEG_Y' | 'NEG_Z' | 'MovieScene3DPathSection_MAX';
+declare var MovieScene3DPathSection_Axis : { X:'X',Y:'Y',Z:'Z',NEG_X:'NEG_X',NEG_Y:'NEG_Y',NEG_Z:'NEG_Z',MovieScene3DPathSection_MAX:'MovieScene3DPathSection_MAX', };
 declare class MovieScene3DPathSection extends MovieScene3DConstraintSection { 
-	TimingCurve: RichCurve;
-	FrontAxisEnum: FrontAxisEnum;
-	UpAxisEnum: UpAxisEnum;
+	TimingCurve: MovieSceneFloatChannel;
+	FrontAxisEnum: MovieScene3DPathSection_Axis;
+	UpAxisEnum: MovieScene3DPathSection_Axis;
 	bFollow: boolean;
 	bReverse: boolean;
 	bForceUpright: boolean;
@@ -2451,6 +5892,19 @@ declare class MovieScene3DTransformTrack extends MovieScenePropertyTrack {
 	static C(Other: UObject | any): MovieScene3DTransformTrack;
 }
 
+declare class MovieSceneActorReferenceKey { 
+	UObject: MovieSceneObjectBindingID;
+	clone() : MovieSceneActorReferenceKey;
+	static C(Other: UObject | any): MovieSceneActorReferenceKey;
+}
+
+declare class MovieSceneActorReferenceData extends MovieSceneChannel { 
+	KeyTimes: FrameNumber[];
+	KeyValues: MovieSceneActorReferenceKey[];
+	clone() : MovieSceneActorReferenceData;
+	static C(Other: UObject | any): MovieSceneActorReferenceData;
+}
+
 declare class IntegralKey { 
 	Time: number;
 	Value: number;
@@ -2467,6 +5921,7 @@ declare class IntegralCurve extends IndexedCurve {
 }
 
 declare class MovieSceneActorReferenceSection extends MovieSceneSection { 
+	ActorReferenceData: MovieSceneActorReferenceData;
 	ActorGuidIndexCurve: IntegralCurve;
 	ActorGuidStrings: string[];
 	static Load(ResourceName: string): MovieSceneActorReferenceSection;
@@ -2490,8 +5945,8 @@ declare class MovieSceneAudioSection extends MovieSceneSection {
 	AudioStartTime: number;
 	AudioDilationFactor: number;
 	AudioVolume: number;
-	SoundVolume: RichCurve;
-	PitchMultiplier: RichCurve;
+	SoundVolume: MovieSceneFloatChannel;
+	PitchMultiplier: MovieSceneFloatChannel;
 	bSuppressSubtitles: boolean;
 	bOverrideAttenuation: boolean;
 	AttenuationSettings: SoundAttenuation;
@@ -2515,9 +5970,19 @@ declare class MovieSceneAudioTrack extends MovieSceneNameableTrack {
 	static C(Other: UObject | any): MovieSceneAudioTrack;
 }
 
+declare class MovieSceneBoolChannel extends MovieSceneChannel { 
+	Times: FrameNumber[];
+	DefaultValue: boolean;
+	bHasDefaultValue: boolean;
+	Values: boolean[];
+	clone() : MovieSceneBoolChannel;
+	static C(Other: UObject | any): MovieSceneBoolChannel;
+}
+
 declare class MovieSceneBoolSection extends MovieSceneSection { 
 	DefaultValue: boolean;
-	BoolCurve: IntegralCurve;
+	BoolCurve: MovieSceneBoolChannel;
+	bIsExternallyInverted: boolean;
 	static Load(ResourceName: string): MovieSceneBoolSection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneBoolSection;
 	static GetDefaultObject(): MovieSceneBoolSection;
@@ -2533,8 +5998,18 @@ declare class MovieSceneBoolTrack extends MovieScenePropertyTrack {
 	static C(Other: UObject | any): MovieSceneBoolTrack;
 }
 
+declare class MovieSceneByteChannel extends MovieSceneChannel { 
+	Times: FrameNumber[];
+	DefaultValue: number;
+	bHasDefaultValue: boolean;
+	Values: number[];
+	Enum: Enum;
+	clone() : MovieSceneByteChannel;
+	static C(Other: UObject | any): MovieSceneByteChannel;
+}
+
 declare class MovieSceneByteSection extends MovieSceneSection { 
-	ByteCurve: IntegralCurve;
+	ByteCurve: MovieSceneByteChannel;
 	static Load(ResourceName: string): MovieSceneByteSection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneByteSection;
 	static GetDefaultObject(): MovieSceneByteSection;
@@ -2588,6 +6063,7 @@ declare class MovieSceneCameraAnimTrack extends MovieSceneNameableTrack {
 
 declare class MovieSceneCameraCutSection extends MovieSceneSection { 
 	CameraGuid: Guid;
+	CameraBindingID: MovieSceneObjectBindingID;
 	ThumbnailReferenceOffset: number;
 	static Load(ResourceName: string): MovieSceneCameraCutSection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneCameraCutSection;
@@ -2637,9 +6113,10 @@ declare class MovieSceneCameraShakeTrack extends MovieSceneNameableTrack {
 }
 
 declare class MovieSceneSectionParameters { 
-	StartOffset: number;
+	StartFrameOffset: FrameNumber;
 	TimeScale: number;
 	HierarchicalBias: number;
+	StartOffset: number;
 	PrerollTime: number;
 	PostrollTime: number;
 	clone() : MovieSceneSectionParameters;
@@ -2663,6 +6140,7 @@ declare class MovieSceneSubSection extends MovieSceneSection {
 }
 
 declare class MovieSceneCinematicShotSection extends MovieSceneSubSection { 
+	ShotDisplayName: string;
 	DisplayName: string;
 	ThumbnailReferenceOffset: number;
 	static Load(ResourceName: string): MovieSceneCinematicShotSection;
@@ -2690,10 +6168,10 @@ declare class MovieSceneCinematicShotTrack extends MovieSceneSubTrack {
 }
 
 declare class MovieSceneColorSection extends MovieSceneSection { 
-	RedCurve: RichCurve;
-	GreenCurve: RichCurve;
-	BlueCurve: RichCurve;
-	AlphaCurve: RichCurve;
+	RedCurve: MovieSceneFloatChannel;
+	GreenCurve: MovieSceneFloatChannel;
+	BlueCurve: MovieSceneFloatChannel;
+	AlphaCurve: MovieSceneFloatChannel;
 	static Load(ResourceName: string): MovieSceneColorSection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneColorSection;
 	static GetDefaultObject(): MovieSceneColorSection;
@@ -2711,7 +6189,7 @@ declare class MovieSceneColorTrack extends MovieScenePropertyTrack {
 }
 
 declare class MovieSceneEnumSection extends MovieSceneSection { 
-	EnumCurve: IntegralCurve;
+	EnumCurve: MovieSceneByteChannel;
 	static Load(ResourceName: string): MovieSceneEnumSection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneEnumSection;
 	static GetDefaultObject(): MovieSceneEnumSection;
@@ -2728,6 +6206,39 @@ declare class MovieSceneEnumTrack extends MovieScenePropertyTrack {
 	static C(Other: UObject | any): MovieSceneEnumTrack;
 }
 
+declare class MovieSceneEulerTransformTrack extends MovieScenePropertyTrack { 
+	static Load(ResourceName: string): MovieSceneEulerTransformTrack;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneEulerTransformTrack;
+	static GetDefaultObject(): MovieSceneEulerTransformTrack;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEulerTransformTrack;
+	static C(Other: UObject | any): MovieSceneEulerTransformTrack;
+}
+
+declare class MovieSceneEventSectionBase extends MovieSceneSection { 
+	DirectorBlueprint: any;
+	static Load(ResourceName: string): MovieSceneEventSectionBase;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneEventSectionBase;
+	static GetDefaultObject(): MovieSceneEventSectionBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEventSectionBase;
+	static C(Other: UObject | any): MovieSceneEventSectionBase;
+}
+
+declare class MovieSceneEvent { 
+	FunctionName: string;
+	FunctionEntry: any;
+	clone() : MovieSceneEvent;
+	static C(Other: UObject | any): MovieSceneEvent;
+}
+
+declare class MovieSceneEventRepeaterSection extends MovieSceneEventSectionBase { 
+	Event: MovieSceneEvent;
+	static Load(ResourceName: string): MovieSceneEventRepeaterSection;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneEventRepeaterSection;
+	static GetDefaultObject(): MovieSceneEventRepeaterSection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEventRepeaterSection;
+	static C(Other: UObject | any): MovieSceneEventRepeaterSection;
+}
+
 declare class NameCurveKey { 
 	Time: number;
 	Value: string;
@@ -2753,9 +6264,10 @@ declare class EventPayload {
 	static C(Other: UObject | any): EventPayload;
 }
 
-declare class MovieSceneEventSectionData { 
-	KeyTimes: number[];
+declare class MovieSceneEventSectionData extends MovieSceneChannel { 
+	Times: FrameNumber[];
 	KeyValues: EventPayload[];
+	KeyTimes: number[];
 	clone() : MovieSceneEventSectionData;
 	static C(Other: UObject | any): MovieSceneEventSectionData;
 }
@@ -2770,12 +6282,12 @@ declare class MovieSceneEventSection extends MovieSceneSection {
 	static C(Other: UObject | any): MovieSceneEventSection;
 }
 
-declare type EFireEventsAtPosition = 'AtStartOfEvaluation' | 'AtEndOfEvaluation' | 'AfterSpawn';
-declare var EFireEventsAtPosition : { AtStartOfEvaluation:'AtStartOfEvaluation',AtEndOfEvaluation:'AtEndOfEvaluation',AfterSpawn:'AfterSpawn', };
+declare type EFireEventsAtPosition = 'AtStartOfEvaluation' | 'AtEndOfEvaluation' | 'AfterSpawn' | 'EFireEventsAtPosition_MAX';
+declare var EFireEventsAtPosition : { AtStartOfEvaluation:'AtStartOfEvaluation',AtEndOfEvaluation:'AtEndOfEvaluation',AfterSpawn:'AfterSpawn',EFireEventsAtPosition_MAX:'EFireEventsAtPosition_MAX', };
 declare class MovieSceneEventTrack extends MovieSceneNameableTrack { 
 	bFireEventsWhenForwards: boolean;
 	bFireEventsWhenBackwards: boolean;
-	EventPosition: EventPosition;
+	EventPosition: EFireEventsAtPosition;
 	EventReceivers: MovieSceneObjectBindingID[];
 	Sections: MovieSceneSection[];
 	static Load(ResourceName: string): MovieSceneEventTrack;
@@ -2785,8 +6297,24 @@ declare class MovieSceneEventTrack extends MovieSceneNameableTrack {
 	static C(Other: UObject | any): MovieSceneEventTrack;
 }
 
+declare class MovieSceneEventChannel extends MovieSceneChannel { 
+	KeyTimes: FrameNumber[];
+	KeyValues: MovieSceneEvent[];
+	clone() : MovieSceneEventChannel;
+	static C(Other: UObject | any): MovieSceneEventChannel;
+}
+
+declare class MovieSceneEventTriggerSection extends MovieSceneEventSectionBase { 
+	EventChannel: MovieSceneEventChannel;
+	static Load(ResourceName: string): MovieSceneEventTriggerSection;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneEventTriggerSection;
+	static GetDefaultObject(): MovieSceneEventTriggerSection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEventTriggerSection;
+	static C(Other: UObject | any): MovieSceneEventTriggerSection;
+}
+
 declare class MovieSceneFloatSection extends MovieSceneSection { 
-	FloatCurve: RichCurve;
+	FloatCurve: MovieSceneFloatChannel;
 	static Load(ResourceName: string): MovieSceneFloatSection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneFloatSection;
 	static GetDefaultObject(): MovieSceneFloatSection;
@@ -2820,8 +6348,17 @@ declare class MovieSceneFadeTrack extends MovieSceneFloatTrack {
 	static C(Other: UObject | any): MovieSceneFadeTrack;
 }
 
+declare class MovieSceneIntegerChannel extends MovieSceneChannel { 
+	Times: FrameNumber[];
+	DefaultValue: number;
+	bHasDefaultValue: boolean;
+	Values: number[];
+	clone() : MovieSceneIntegerChannel;
+	static C(Other: UObject | any): MovieSceneIntegerChannel;
+}
+
 declare class MovieSceneIntegerSection extends MovieSceneSection { 
-	IntegerCurve: IntegralCurve;
+	IntegerCurve: MovieSceneIntegerChannel;
 	static Load(ResourceName: string): MovieSceneIntegerSection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneIntegerSection;
 	static GetDefaultObject(): MovieSceneIntegerSection;
@@ -2837,10 +6374,10 @@ declare class MovieSceneIntegerTrack extends MovieScenePropertyTrack {
 	static C(Other: UObject | any): MovieSceneIntegerTrack;
 }
 
-declare type ELevelVisibility = 'Visible' | 'Hidden';
-declare var ELevelVisibility : { Visible:'Visible',Hidden:'Hidden', };
+declare type ELevelVisibility = 'Visible' | 'Hidden' | 'ELevelVisibility_MAX';
+declare var ELevelVisibility : { Visible:'Visible',Hidden:'Hidden',ELevelVisibility_MAX:'ELevelVisibility_MAX', };
 declare class MovieSceneLevelVisibilitySection extends MovieSceneSection { 
-	Visibility: Visibility;
+	Visibility: ELevelVisibility;
 	LevelNames: string[];
 	static Load(ResourceName: string): MovieSceneLevelVisibilitySection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneLevelVisibilitySection;
@@ -2878,29 +6415,26 @@ declare class MovieSceneComponentMaterialTrack extends MovieSceneMaterialTrack {
 
 declare class ScalarParameterNameAndCurve { 
 	ParameterName: string;
-	Index: number;
-	ParameterCurve: RichCurve;
+	ParameterCurve: MovieSceneFloatChannel;
 	clone() : ScalarParameterNameAndCurve;
 	static C(Other: UObject | any): ScalarParameterNameAndCurve;
 }
 
 declare class VectorParameterNameAndCurves { 
 	ParameterName: string;
-	Index: number;
-	XCurve: RichCurve;
-	YCurve: RichCurve;
-	ZCurve: RichCurve;
+	XCurve: MovieSceneFloatChannel;
+	YCurve: MovieSceneFloatChannel;
+	ZCurve: MovieSceneFloatChannel;
 	clone() : VectorParameterNameAndCurves;
 	static C(Other: UObject | any): VectorParameterNameAndCurves;
 }
 
 declare class ColorParameterNameAndCurves { 
 	ParameterName: string;
-	Index: number;
-	RedCurve: RichCurve;
-	GreenCurve: RichCurve;
-	BlueCurve: RichCurve;
-	AlphaCurve: RichCurve;
+	RedCurve: MovieSceneFloatChannel;
+	GreenCurve: MovieSceneFloatChannel;
+	BlueCurve: MovieSceneFloatChannel;
+	AlphaCurve: MovieSceneFloatChannel;
 	clone() : ColorParameterNameAndCurves;
 	static C(Other: UObject | any): ColorParameterNameAndCurves;
 }
@@ -2925,8 +6459,13 @@ declare class MovieSceneParticleParameterTrack extends MovieSceneNameableTrack {
 	static C(Other: UObject | any): MovieSceneParticleParameterTrack;
 }
 
+declare class MovieSceneParticleChannel extends MovieSceneByteChannel { 
+	clone() : MovieSceneParticleChannel;
+	static C(Other: UObject | any): MovieSceneParticleChannel;
+}
+
 declare class MovieSceneParticleSection extends MovieSceneSection { 
-	ParticleKeys: IntegralCurve;
+	ParticleKeys: MovieSceneParticleChannel;
 	static Load(ResourceName: string): MovieSceneParticleSection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneParticleSection;
 	static GetDefaultObject(): MovieSceneParticleSection;
@@ -2950,7 +6489,8 @@ declare class MovieSceneSkeletalAnimationParams {
 	PlayRate: number;
 	bReverse: boolean;
 	SlotName: string;
-	Weight: RichCurve;
+	Weight: MovieSceneFloatChannel;
+	bSkipAnimNotifiers: boolean;
 	clone() : MovieSceneSkeletalAnimationParams;
 	static C(Other: UObject | any): MovieSceneSkeletalAnimationParams;
 }
@@ -3015,22 +6555,17 @@ declare class MovieSceneSpawnTrack extends MovieSceneTrack {
 	static C(Other: UObject | any): MovieSceneSpawnTrack;
 }
 
-declare class StringCurveKey { 
-	Time: number;
-	Value: string;
-	clone() : StringCurveKey;
-	static C(Other: UObject | any): StringCurveKey;
-}
-
-declare class StringCurve extends IndexedCurve { 
+declare class MovieSceneStringChannel extends MovieSceneChannel { 
+	Times: FrameNumber[];
+	Values: string[];
 	DefaultValue: string;
-	Keys: StringCurveKey[];
-	clone() : StringCurve;
-	static C(Other: UObject | any): StringCurve;
+	bHasDefaultValue: boolean;
+	clone() : MovieSceneStringChannel;
+	static C(Other: UObject | any): MovieSceneStringChannel;
 }
 
 declare class MovieSceneStringSection extends MovieSceneSection { 
-	StringCurve: StringCurve;
+	StringCurve: MovieSceneStringChannel;
 	static Load(ResourceName: string): MovieSceneStringSection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneStringSection;
 	static GetDefaultObject(): MovieSceneStringSection;
@@ -3055,7 +6590,7 @@ declare class MovieSceneTransformTrack extends MovieScenePropertyTrack {
 }
 
 declare class MovieSceneVectorSection extends MovieSceneSection { 
-	Curves: RichCurve;
+	Curves: MovieSceneFloatChannel;
 	ChannelsUsed: number;
 	static Load(ResourceName: string): MovieSceneVectorSection;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneVectorSection;
@@ -3081,6 +6616,57 @@ declare class MovieSceneVisibilityTrack extends MovieSceneBoolTrack {
 	static C(Other: UObject | any): MovieSceneVisibilityTrack;
 }
 
+declare class EngineCustomTimeStep extends UObject { 
+	static Load(ResourceName: string): EngineCustomTimeStep;
+	static Find(Outer: UObject, ResourceName: string): EngineCustomTimeStep;
+	static GetDefaultObject(): EngineCustomTimeStep;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EngineCustomTimeStep;
+	static C(Other: UObject | any): EngineCustomTimeStep;
+}
+
+declare class FixedFrameRateCustomTimeStep extends EngineCustomTimeStep { 
+	FixedFrameRate: FrameRate;
+	static Load(ResourceName: string): FixedFrameRateCustomTimeStep;
+	static Find(Outer: UObject, ResourceName: string): FixedFrameRateCustomTimeStep;
+	static GetDefaultObject(): FixedFrameRateCustomTimeStep;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FixedFrameRateCustomTimeStep;
+	static C(Other: UObject | any): FixedFrameRateCustomTimeStep;
+}
+
+declare class TimeManagementBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): TimeManagementBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): TimeManagementBlueprintLibrary;
+	static GetDefaultObject(): TimeManagementBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TimeManagementBlueprintLibrary;
+	static TransformTime(SourceTime: FrameTime,SourceRate: FrameRate,DestinationRate: FrameRate): FrameTime;
+	static Subtract_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
+	static Subtract_FrameNumberFrameNumber(A: FrameNumber,B: FrameNumber): FrameNumber;
+	static SnapFrameTimeToRate(SourceTime: FrameTime,SourceRate: FrameRate,SnapToRate: FrameRate): FrameTime;
+	static Multiply_SecondsFrameRate(TimeInSeconds: number,FrameRate: FrameRate): FrameTime;
+	static Multiply_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
+	static IsValid_MultipleOf(InFrameRate: FrameRate,OtherFramerate: FrameRate): boolean;
+	static IsValid_Framerate(InFrameRate: FrameRate): boolean;
+	static GetTimecode(): Timecode;
+	static Divide_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
+	static Conv_TimecodeToString(InTimecode: Timecode,bForceSignDisplay: boolean): string;
+	static Conv_QualifiedFrameTimeToSeconds(InFrameTime: QualifiedFrameTime): number;
+	static Conv_FrameRateToSeconds(InFrameRate: FrameRate): number;
+	static Conv_FrameNumberToInteger(InFrameNumber: FrameNumber): number;
+	static Add_FrameNumberInteger(A: FrameNumber,B: number): FrameNumber;
+	static Add_FrameNumberFrameNumber(A: FrameNumber,B: FrameNumber): FrameNumber;
+	static C(Other: UObject | any): TimeManagementBlueprintLibrary;
+}
+
+declare class TimeSynchronizationSource extends UObject { 
+	bUseForSynchronization: boolean;
+	FrameOffset: number;
+	static Load(ResourceName: string): TimeSynchronizationSource;
+	static Find(Outer: UObject, ResourceName: string): TimeSynchronizationSource;
+	static GetDefaultObject(): TimeSynchronizationSource;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TimeSynchronizationSource;
+	static C(Other: UObject | any): TimeSynchronizationSource;
+}
+
 declare class MovieSceneBindingOverrideData { 
 	ObjectBindingId: MovieSceneObjectBindingID;
 	UObject: any;
@@ -3114,10 +6700,10 @@ declare class MovieSceneBindingOwnerInterface extends Interface {
 	static C(Other: UObject | any): MovieSceneBindingOwnerInterface;
 }
 
-declare type EMovieSceneBuiltInEasing = 'Linear' | 'SinIn' | 'SinOut' | 'SinInOut' | 'QuadIn' | 'QuadOut' | 'QuadInOut' | 'CubicIn' | 'CubicOut' | 'CubicInOut' | 'QuartIn' | 'QuartOut' | 'QuartInOut' | 'QuintIn' | 'QuintOut' | 'QuintInOut' | 'ExpoIn' | 'ExpoOut' | 'ExpoInOut' | 'CircIn' | 'CircOut' | 'CircInOut';
-declare var EMovieSceneBuiltInEasing : { Linear:'Linear',SinIn:'SinIn',SinOut:'SinOut',SinInOut:'SinInOut',QuadIn:'QuadIn',QuadOut:'QuadOut',QuadInOut:'QuadInOut',CubicIn:'CubicIn',CubicOut:'CubicOut',CubicInOut:'CubicInOut',QuartIn:'QuartIn',QuartOut:'QuartOut',QuartInOut:'QuartInOut',QuintIn:'QuintIn',QuintOut:'QuintOut',QuintInOut:'QuintInOut',ExpoIn:'ExpoIn',ExpoOut:'ExpoOut',ExpoInOut:'ExpoInOut',CircIn:'CircIn',CircOut:'CircOut',CircInOut:'CircInOut', };
+declare type EMovieSceneBuiltInEasing = 'Linear' | 'SinIn' | 'SinOut' | 'SinInOut' | 'QuadIn' | 'QuadOut' | 'QuadInOut' | 'CubicIn' | 'CubicOut' | 'CubicInOut' | 'QuartIn' | 'QuartOut' | 'QuartInOut' | 'QuintIn' | 'QuintOut' | 'QuintInOut' | 'ExpoIn' | 'ExpoOut' | 'ExpoInOut' | 'CircIn' | 'CircOut' | 'CircInOut' | 'EMovieSceneBuiltInEasing_MAX';
+declare var EMovieSceneBuiltInEasing : { Linear:'Linear',SinIn:'SinIn',SinOut:'SinOut',SinInOut:'SinInOut',QuadIn:'QuadIn',QuadOut:'QuadOut',QuadInOut:'QuadInOut',CubicIn:'CubicIn',CubicOut:'CubicOut',CubicInOut:'CubicInOut',QuartIn:'QuartIn',QuartOut:'QuartOut',QuartInOut:'QuartInOut',QuintIn:'QuintIn',QuintOut:'QuintOut',QuintInOut:'QuintInOut',ExpoIn:'ExpoIn',ExpoOut:'ExpoOut',ExpoInOut:'ExpoInOut',CircIn:'CircIn',CircOut:'CircOut',CircInOut:'CircInOut',EMovieSceneBuiltInEasing_MAX:'EMovieSceneBuiltInEasing_MAX', };
 declare class MovieSceneBuiltInEasingFunction extends UObject { 
-	Type: Type;
+	Type: EMovieSceneBuiltInEasing;
 	static Load(ResourceName: string): MovieSceneBuiltInEasingFunction;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneBuiltInEasingFunction;
 	static GetDefaultObject(): MovieSceneBuiltInEasingFunction;
@@ -3143,26 +6729,16 @@ declare class MovieSceneEasingFunction extends Interface {
 	static C(Other: UObject | any): MovieSceneEasingFunction;
 }
 
-declare class MovieSceneSegmentCompilerTestTrack extends MovieSceneTrack { 
-	bHighPassFilter: boolean;
-	SectionArray: MovieSceneSection[];
-	static Load(ResourceName: string): MovieSceneSegmentCompilerTestTrack;
-	static Find(Outer: UObject, ResourceName: string): MovieSceneSegmentCompilerTestTrack;
-	static GetDefaultObject(): MovieSceneSegmentCompilerTestTrack;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSegmentCompilerTestTrack;
-	static C(Other: UObject | any): MovieSceneSegmentCompilerTestTrack;
-}
-
-declare class MovieSceneSegmentCompilerTestSection extends MovieSceneSection { 
-	static Load(ResourceName: string): MovieSceneSegmentCompilerTestSection;
-	static Find(Outer: UObject, ResourceName: string): MovieSceneSegmentCompilerTestSection;
-	static GetDefaultObject(): MovieSceneSegmentCompilerTestSection;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSegmentCompilerTestSection;
-	static C(Other: UObject | any): MovieSceneSegmentCompilerTestSection;
+declare class MovieSceneKeyProxy extends Interface { 
+	static Load(ResourceName: string): MovieSceneKeyProxy;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneKeyProxy;
+	static GetDefaultObject(): MovieSceneKeyProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneKeyProxy;
+	static C(Other: UObject | any): MovieSceneKeyProxy;
 }
 
-declare type EMovieScenePlayerStatus = 'Stopped' | 'Playing' | 'Recording' | 'Scrubbing' | 'Jumping' | 'Stepping' | 'MAX';
-declare var EMovieScenePlayerStatus : { Stopped:'Stopped',Playing:'Playing',Recording:'Recording',Scrubbing:'Scrubbing',Jumping:'Jumping',Stepping:'Stepping',MAX:'MAX', };
+declare type EMovieScenePlayerStatus = 'Stopped' | 'Playing' | 'Recording' | 'Scrubbing' | 'Jumping' | 'Stepping' | 'Paused' | 'MAX';
+declare var EMovieScenePlayerStatus : { Stopped:'Stopped',Playing:'Playing',Recording:'Recording',Scrubbing:'Scrubbing',Jumping:'Jumping',Stepping:'Stepping',Paused:'Paused',MAX:'MAX', };
 declare class MovieSceneSequencePlaybackSettings { 
 	LoopCount: number;
 	PlayRate: number;
@@ -3173,52 +6749,117 @@ declare class MovieSceneSequencePlaybackSettings {
 	bDisableLookAtInput: boolean;
 	bHidePlayer: boolean;
 	bHideHud: boolean;
+	bDisableCameraCuts: boolean;
+	bPauseAtEnd: boolean;
+	InstanceData: UObject;
 	BindingOverrides: any;
 	clone() : MovieSceneSequencePlaybackSettings;
 	static C(Other: UObject | any): MovieSceneSequencePlaybackSettings;
 }
 
+declare class MovieSceneRootEvaluationTemplateInstance { 
+	DirectorInstances: any;
+	clone() : MovieSceneRootEvaluationTemplateInstance;
+	static C(Other: UObject | any): MovieSceneRootEvaluationTemplateInstance;
+}
+
 declare class MovieSceneSequencePlayer extends UObject { 
 	OnPlay: UnrealEngineMulticastDelegate<() => void>;
+	OnPlayReverse: UnrealEngineMulticastDelegate<() => void>;
 	OnStop: UnrealEngineMulticastDelegate<() => void>;
 	OnPause: UnrealEngineMulticastDelegate<() => void>;
 	OnFinished: UnrealEngineMulticastDelegate<() => void>;
 	Status: EMovieScenePlayerStatus;
 	bReversePlayback: boolean;
-	bPendingFirstUpdate: boolean;
 	Sequence: MovieSceneSequence;
-	TimeCursorPosition: number;
-	StartTime: number;
-	EndTime: number;
+	StartTime: FrameNumber;
+	DurationFrames: number;
 	CurrentNumLoops: number;
 	PlaybackSettings: MovieSceneSequencePlaybackSettings;
+	RootTemplateInstance: MovieSceneRootEvaluationTemplateInstance;
 	static Load(ResourceName: string): MovieSceneSequencePlayer;
 	static Find(Outer: UObject, ResourceName: string): MovieSceneSequencePlayer;
 	static GetDefaultObject(): MovieSceneSequencePlayer;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSequencePlayer;
 	Stop(): void;
-	StartPlayingNextTick(): void;
+	SetTimeRange(StartTime: number,Duration: number): void;
 	SetPlayRate(PlayRate: number): void;
 	SetPlaybackRange(NewStartTime: number,NewEndTime: number): void;
 	SetPlaybackPosition(NewPlaybackPosition: number): void;
+	SetFrameRate(FrameRate: FrameRate): void;
+	SetFrameRange(StartFrame: number,Duration: number): void;
+	SetDisableCameraCuts(bInDisableCameraCuts: boolean): void;
+	ScrubToSeconds(TimeInSeconds: number): void;
+	ScrubToFrame(NewPosition: FrameTime): void;
 	Scrub(): void;
+	PlayToSeconds(TimeInSeconds: number): void;
+	PlayToFrame(NewPosition: FrameTime): void;
 	PlayReverse(): void;
 	PlayLooping(NumLoops: number): void;
 	Play(): void;
 	Pause(): void;
+	JumpToSeconds(TimeInSeconds: number): void;
 	JumpToPosition(NewPlaybackPosition: number): void;
+	JumpToFrame(NewPosition: FrameTime): void;
+	IsReversed(): boolean;
 	IsPlaying(): boolean;
+	IsPaused(): boolean;
 	GoToEndAndStop(): void;
+	GetStartTime(): QualifiedFrameTime;
 	GetPlayRate(): number;
 	GetPlaybackStart(): number;
 	GetPlaybackPosition(): number;
 	GetPlaybackEnd(): number;
+	GetObjectBindings(InObject: UObject): MovieSceneObjectBindingID[];
 	GetLength(): number;
+	GetFrameRate(): FrameRate;
+	GetFrameDuration(): number;
+	GetEndTime(): QualifiedFrameTime;
+	GetDuration(): QualifiedFrameTime;
+	GetDisableCameraCuts(): boolean;
+	GetCurrentTime(): QualifiedFrameTime;
 	GetBoundObjects(ObjectBinding: MovieSceneObjectBindingID): UObject[];
 	ChangePlaybackDirection(): void;
 	static C(Other: UObject | any): MovieSceneSequencePlayer;
 }
 
+declare class TestMovieSceneTrack extends MovieSceneTrack { 
+	bHighPassFilter: boolean;
+	SectionArray: MovieSceneSection[];
+	static Load(ResourceName: string): TestMovieSceneTrack;
+	static Find(Outer: UObject, ResourceName: string): TestMovieSceneTrack;
+	static GetDefaultObject(): TestMovieSceneTrack;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestMovieSceneTrack;
+	static C(Other: UObject | any): TestMovieSceneTrack;
+}
+
+declare class TestMovieSceneSection extends MovieSceneSection { 
+	static Load(ResourceName: string): TestMovieSceneSection;
+	static Find(Outer: UObject, ResourceName: string): TestMovieSceneSection;
+	static GetDefaultObject(): TestMovieSceneSection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestMovieSceneSection;
+	static C(Other: UObject | any): TestMovieSceneSection;
+}
+
+declare class TestMovieSceneSequence extends MovieSceneSequence { 
+	MovieScene: MovieScene;
+	static Load(ResourceName: string): TestMovieSceneSequence;
+	static Find(Outer: UObject, ResourceName: string): TestMovieSceneSequence;
+	static GetDefaultObject(): TestMovieSceneSequence;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestMovieSceneSequence;
+	static C(Other: UObject | any): TestMovieSceneSequence;
+}
+
+declare class DefaultLevelSequenceInstanceData extends UObject { 
+	TransformOriginActor: Actor;
+	TransformOrigin: Transform;
+	static Load(ResourceName: string): DefaultLevelSequenceInstanceData;
+	static Find(Outer: UObject, ResourceName: string): DefaultLevelSequenceInstanceData;
+	static GetDefaultObject(): DefaultLevelSequenceInstanceData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DefaultLevelSequenceInstanceData;
+	static C(Other: UObject | any): DefaultLevelSequenceInstanceData;
+}
+
 declare class LevelSequenceObjectReferenceMap { 
 	clone() : LevelSequenceObjectReferenceMap;
 	static C(Other: UObject | any): LevelSequenceObjectReferenceMap;
@@ -3226,12 +6867,15 @@ declare class LevelSequenceObjectReferenceMap {
 
 declare class LevelSequenceBindingReferences { 
 	BindingIdToReferences: any;
+	AnimSequenceInstances: any;
 	clone() : LevelSequenceBindingReferences;
 	static C(Other: UObject | any): LevelSequenceBindingReferences;
 }
 
 declare class LevelSequence extends MovieSceneSequence { 
 	MovieScene: MovieScene;
+	DirectorBlueprint: UObject;
+	DirectorClass: UnrealEngineClass;
 	ObjectReferences: LevelSequenceObjectReferenceMap;
 	BindingReferences: LevelSequenceBindingReferences;
 	PossessedObjects: any;
@@ -3255,18 +6899,22 @@ declare class LevelSequencePlayer extends MovieSceneSequencePlayer {
 
 declare class LevelSequenceSnapshotSettings { 
 	ZeroPadAmount: number;
-	FrameRate: number;
+	FrameRate: FrameRate;
 	clone() : LevelSequenceSnapshotSettings;
 	static C(Other: UObject | any): LevelSequenceSnapshotSettings;
 }
 
 declare class LevelSequencePlayerSnapshot { 
 	MasterName: string;
-	MasterTime: number;
+	MasterTime: QualifiedFrameTime;
+	SourceTime: QualifiedFrameTime;
 	CurrentShotName: string;
-	CurrentShotLocalTime: number;
+	CurrentShotLocalTime: QualifiedFrameTime;
+	CurrentShotSourceTime: QualifiedFrameTime;
+	SourceTimecode: string;
 	CameraComponent: CameraComponent;
 	Settings: LevelSequenceSnapshotSettings;
+	ShotID: MovieSceneSequenceID;
 	clone() : LevelSequencePlayerSnapshot;
 	static C(Other: UObject | any): LevelSequencePlayerSnapshot;
 }
@@ -3287,10 +6935,12 @@ declare class LevelSequenceActor extends Actor {
 	bAutoPlay: boolean;
 	PlaybackSettings: MovieSceneSequencePlaybackSettings;
 	SequencePlayer: LevelSequencePlayer;
-	LevelSequence: StringAssetReference;
+	LevelSequence: SoftObjectPath;
 	AdditionalEventReceivers: Actor[];
 	BurnInOptions: LevelSequenceBurnInOptions;
 	BindingOverrides: MovieSceneBindingOverrides;
+	bOverrideInstanceData: boolean;
+	DefaultInstanceData: UObject;
 	BurnInInstance: LevelSequenceBurnIn;
 	static GetDefaultObject(): LevelSequenceActor;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceActor;
@@ -3305,6 +6955,24 @@ declare class LevelSequenceActor extends Actor {
 	static C(Other: UObject | any): LevelSequenceActor;
 }
 
+declare class LevelSequenceDirector extends UObject { 
+	Player: LevelSequencePlayer;
+	static Load(ResourceName: string): LevelSequenceDirector;
+	static Find(Outer: UObject, ResourceName: string): LevelSequenceDirector;
+	static GetDefaultObject(): LevelSequenceDirector;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceDirector;
+	OnCreated(): void;
+	static C(Other: UObject | any): LevelSequenceDirector;
+}
+
+declare class LegacyLevelSequenceDirectorBlueprint extends Blueprint { 
+	static Load(ResourceName: string): LegacyLevelSequenceDirectorBlueprint;
+	static Find(Outer: UObject, ResourceName: string): LegacyLevelSequenceDirectorBlueprint;
+	static GetDefaultObject(): LegacyLevelSequenceDirectorBlueprint;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LegacyLevelSequenceDirectorBlueprint;
+	static C(Other: UObject | any): LegacyLevelSequenceDirectorBlueprint;
+}
+
 declare class ActorFactory extends UObject { 
 	DisplayName: string;
 	MenuPriority: number;
@@ -3440,14 +7108,6 @@ declare class ActorFactoryDeferredDecal extends ActorFactory {
 	static C(Other: UObject | any): ActorFactoryDeferredDecal;
 }
 
-declare class ActorFactoryDestructible extends ActorFactory { 
-	static Load(ResourceName: string): ActorFactoryDestructible;
-	static Find(Outer: UObject, ResourceName: string): ActorFactoryDestructible;
-	static GetDefaultObject(): ActorFactoryDestructible;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryDestructible;
-	static C(Other: UObject | any): ActorFactoryDestructible;
-}
-
 declare class ActorFactoryDirectionalLight extends ActorFactory { 
 	static Load(ResourceName: string): ActorFactoryDirectionalLight;
 	static Find(Outer: UObject, ResourceName: string): ActorFactoryDirectionalLight;
@@ -3561,6 +7221,14 @@ declare class ActorFactoryPointLight extends ActorFactory {
 	static C(Other: UObject | any): ActorFactoryPointLight;
 }
 
+declare class ActorFactoryRectLight extends ActorFactory { 
+	static Load(ResourceName: string): ActorFactoryRectLight;
+	static Find(Outer: UObject, ResourceName: string): ActorFactoryRectLight;
+	static GetDefaultObject(): ActorFactoryRectLight;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryRectLight;
+	static C(Other: UObject | any): ActorFactoryRectLight;
+}
+
 declare class ActorFactorySkyLight extends ActorFactory { 
 	static Load(ResourceName: string): ActorFactorySkyLight;
 	static Find(Outer: UObject, ResourceName: string): ActorFactorySkyLight;
@@ -3774,24 +7442,15 @@ declare class AnimMontageFactory extends Factory {
 	static C(Other: UObject | any): AnimMontageFactory;
 }
 
-declare class Exporter extends UObject { 
-	SupportedClass: UnrealEngineClass;
-	ExportRootScope: UObject;
-	FormatExtension: string[];
-	FormatDescription: string[];
-	PreferredFormatIndex: number;
-	TextIndent: number;
-	bText: boolean;
-	bSelectedOnly: boolean;
-	bForceFileOperations: boolean;
-	static Load(ResourceName: string): Exporter;
-	static Find(Outer: UObject, ResourceName: string): Exporter;
-	static GetDefaultObject(): Exporter;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Exporter;
-	static C(Other: UObject | any): Exporter;
+declare class ExporterFBX extends Exporter { 
+	static Load(ResourceName: string): ExporterFBX;
+	static Find(Outer: UObject, ResourceName: string): ExporterFBX;
+	static GetDefaultObject(): ExporterFBX;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExporterFBX;
+	static C(Other: UObject | any): ExporterFBX;
 }
 
-declare class AnimSequenceExporterFBX extends Exporter { 
+declare class AnimSequenceExporterFBX extends ExporterFBX { 
 	static Load(ResourceName: string): AnimSequenceExporterFBX;
 	static Find(Outer: UObject, ResourceName: string): AnimSequenceExporterFBX;
 	static GetDefaultObject(): AnimSequenceExporterFBX;
@@ -3828,6 +7487,7 @@ declare class Commandlet extends UObject {
 	IsEditor: boolean;
 	LogToConsole: boolean;
 	ShowErrorCount: boolean;
+	ShowProgress: boolean;
 	static Load(ResourceName: string): Commandlet;
 	static Find(Outer: UObject, ResourceName: string): Commandlet;
 	static GetDefaultObject(): Commandlet;
@@ -3835,6 +7495,14 @@ declare class Commandlet extends UObject {
 	static C(Other: UObject | any): Commandlet;
 }
 
+declare class AssetRegUtilCommandlet extends Commandlet { 
+	static Load(ResourceName: string): AssetRegUtilCommandlet;
+	static Find(Outer: UObject, ResourceName: string): AssetRegUtilCommandlet;
+	static GetDefaultObject(): AssetRegUtilCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetRegUtilCommandlet;
+	static C(Other: UObject | any): AssetRegUtilCommandlet;
+}
+
 declare class AudioMixerCommandlet extends Commandlet { 
 	static Load(ResourceName: string): AudioMixerCommandlet;
 	static Find(Outer: UObject, ResourceName: string): AudioMixerCommandlet;
@@ -4008,11 +7676,11 @@ declare class ClassThumbnailRenderer extends DefaultSizedThumbnailRenderer {
 	static C(Other: UObject | any): ClassThumbnailRenderer;
 }
 
-declare type EClassViewerDeveloperType = 'CVDT_None' | 'CVDT_CurrentUser' | 'CVDT_All';
-declare var EClassViewerDeveloperType : { CVDT_None:'CVDT_None',CVDT_CurrentUser:'CVDT_CurrentUser',CVDT_All:'CVDT_All', };
+declare type EClassViewerDeveloperType = 'CVDT_None' | 'CVDT_CurrentUser' | 'CVDT_All' | 'CVDT_Max';
+declare var EClassViewerDeveloperType : { CVDT_None:'CVDT_None',CVDT_CurrentUser:'CVDT_CurrentUser',CVDT_All:'CVDT_All',CVDT_Max:'CVDT_Max', };
 declare class ClassViewerSettings extends UObject { 
 	DisplayInternalClasses: boolean;
-	DeveloperFolderType: DeveloperFolderType;
+	DeveloperFolderType: EClassViewerDeveloperType;
 	static Load(ResourceName: string): ClassViewerSettings;
 	static Find(Outer: UObject, ResourceName: string): ClassViewerSettings;
 	static GetDefaultObject(): ClassViewerSettings;
@@ -4020,6 +7688,39 @@ declare class ClassViewerSettings extends UObject {
 	static C(Other: UObject | any): ClassViewerSettings;
 }
 
+declare class CompileAllBlueprintsCommandlet extends Commandlet { 
+	static Load(ResourceName: string): CompileAllBlueprintsCommandlet;
+	static Find(Outer: UObject, ResourceName: string): CompileAllBlueprintsCommandlet;
+	static GetDefaultObject(): CompileAllBlueprintsCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompileAllBlueprintsCommandlet;
+	static C(Other: UObject | any): CompileAllBlueprintsCommandlet;
+}
+
+declare class CompositeCurveTableFactory extends Factory { 
+	static Load(ResourceName: string): CompositeCurveTableFactory;
+	static Find(Outer: UObject, ResourceName: string): CompositeCurveTableFactory;
+	static GetDefaultObject(): CompositeCurveTableFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompositeCurveTableFactory;
+	static C(Other: UObject | any): CompositeCurveTableFactory;
+}
+
+declare class DataTableFactory extends Factory { 
+	struct: ScriptStruct;
+	static Load(ResourceName: string): DataTableFactory;
+	static Find(Outer: UObject, ResourceName: string): DataTableFactory;
+	static GetDefaultObject(): DataTableFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataTableFactory;
+	static C(Other: UObject | any): DataTableFactory;
+}
+
+declare class CompositeDataTableFactory extends DataTableFactory { 
+	static Load(ResourceName: string): CompositeDataTableFactory;
+	static Find(Outer: UObject, ResourceName: string): CompositeDataTableFactory;
+	static GetDefaultObject(): CompositeDataTableFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompositeDataTableFactory;
+	static C(Other: UObject | any): CompositeDataTableFactory;
+}
+
 declare class CompressAnimationsCommandlet extends Commandlet { 
 	static Load(ResourceName: string): CompressAnimationsCommandlet;
 	static Find(Outer: UObject, ResourceName: string): CompressAnimationsCommandlet;
@@ -4054,15 +7755,21 @@ declare class ConeBuilder extends EditorBrushBuilder {
 
 declare class ContentBrowserSettings extends UObject { 
 	NumObjectsToLoadBeforeWarning: number;
+	bOpenSourcesPanelByDefault: boolean;
 	RealTimeThumbnails: boolean;
 	DisplayFolders: boolean;
 	DisplayEmptyFolders: boolean;
+	NumObjectsInRecentList: number;
 	DisplayEngineFolder: boolean;
 	DisplayDevelopersFolder: boolean;
 	DisplayL10NFolder: boolean;
 	DisplayPluginFolders: boolean;
 	DisplayCollections: boolean;
+	DisplayFavorites: boolean;
 	DisplayCppFolders: boolean;
+	IncludeClassNames: boolean;
+	IncludeAssetPaths: boolean;
+	IncludeCollectionNames: boolean;
 	static Load(ResourceName: string): ContentBrowserSettings;
 	static Find(Outer: UObject, ResourceName: string): ContentBrowserSettings;
 	static GetDefaultObject(): ContentBrowserSettings;
@@ -4079,10 +7786,14 @@ declare class CookCommandlet extends Commandlet {
 	static C(Other: UObject | any): CookCommandlet;
 }
 
+declare type ECookProgressDisplayMode = 'Nothing' | 'RemainingPackages' | 'PackageNames' | 'NamesAndRemainingPackages' | 'Max' | 'ECookProgressDisplayMode_MAX';
+declare var ECookProgressDisplayMode : { Nothing:'Nothing',RemainingPackages:'RemainingPackages',PackageNames:'PackageNames',NamesAndRemainingPackages:'NamesAndRemainingPackages',Max:'Max',ECookProgressDisplayMode_MAX:'ECookProgressDisplayMode_MAX', };
 declare class CookerSettings extends DeveloperSettings { 
 	bEnableCookOnTheSide: boolean;
 	bEnableBuildDDCInBackground: boolean;
 	bIterativeCookingForLaunchOn: boolean;
+	bIterativeCookingForFileCookContent: boolean;
+	CookProgressDisplayMode: ECookProgressDisplayMode;
 	bIgnoreIniSettingsOutOfDateForIteration: boolean;
 	bIgnoreScriptPackagesOutOfDateForIteration: boolean;
 	bCompileBlueprintsInDevelopmentMode: boolean;
@@ -4120,11 +7831,11 @@ declare class CrashReporterSettings extends UObject {
 	static C(Other: UObject | any): CrashReporterSettings;
 }
 
-declare type ECSVImportType = 'ECSV_DataTable' | 'ECSV_CurveTable' | 'ECSV_CurveFloat' | 'ECSV_CurveVector' | 'ECSV_CurveLinearColor';
-declare var ECSVImportType : { ECSV_DataTable:'ECSV_DataTable',ECSV_CurveTable:'ECSV_CurveTable',ECSV_CurveFloat:'ECSV_CurveFloat',ECSV_CurveVector:'ECSV_CurveVector',ECSV_CurveLinearColor:'ECSV_CurveLinearColor', };
+declare type ECSVImportType = 'ECSV_DataTable' | 'ECSV_CurveTable' | 'ECSV_CurveFloat' | 'ECSV_CurveVector' | 'ECSV_CurveLinearColor' | 'ECSV_MAX';
+declare var ECSVImportType : { ECSV_DataTable:'ECSV_DataTable',ECSV_CurveTable:'ECSV_CurveTable',ECSV_CurveFloat:'ECSV_CurveFloat',ECSV_CurveVector:'ECSV_CurveVector',ECSV_CurveLinearColor:'ECSV_CurveLinearColor',ECSV_MAX:'ECSV_MAX', };
 declare class CSVImportSettings { 
 	ImportRowStruct: ScriptStruct;
-	ImportType: ImportType;
+	ImportType: ECSVImportType;
 	ImportCurveInterpMode: ERichCurveInterpMode;
 	clone() : CSVImportSettings;
 	static C(Other: UObject | any): CSVImportSettings;
@@ -4170,22 +7881,6 @@ declare class CurvedStairBuilder extends EditorBrushBuilder {
 	static C(Other: UObject | any): CurvedStairBuilder;
 }
 
-declare type ECurveEditorCurveVisibility = 'AllCurves' | 'SelectedCurves' | 'AnimatedCurves';
-declare var ECurveEditorCurveVisibility : { AllCurves:'AllCurves',SelectedCurves:'SelectedCurves',AnimatedCurves:'AnimatedCurves', };
-declare type ECurveEditorTangentVisibility = 'AllTangents' | 'SelectedKeys' | 'NoTangents';
-declare var ECurveEditorTangentVisibility : { AllTangents:'AllTangents',SelectedKeys:'SelectedKeys',NoTangents:'NoTangents', };
-declare class CurveEditorSettings extends UObject { 
-	bAutoFrameCurveEditor: boolean;
-	bShowCurveEditorCurveToolTips: boolean;
-	CurveVisibility: ECurveEditorCurveVisibility;
-	TangentVisibility: ECurveEditorTangentVisibility;
-	static Load(ResourceName: string): CurveEditorSettings;
-	static Find(Outer: UObject, ResourceName: string): CurveEditorSettings;
-	static GetDefaultObject(): CurveEditorSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveEditorSettings;
-	static C(Other: UObject | any): CurveEditorSettings;
-}
-
 declare class CurveEdOptions extends UObject { 
 	MinViewRange: number;
 	MaxViewRange: number;
@@ -4244,6 +7939,25 @@ declare class CurveImportFactory extends Factory {
 	static C(Other: UObject | any): CurveImportFactory;
 }
 
+declare class CurveLinearColorAtlasFactory extends Factory { 
+	Width: number;
+	Height: number;
+	Format: number;
+	static Load(ResourceName: string): CurveLinearColorAtlasFactory;
+	static Find(Outer: UObject, ResourceName: string): CurveLinearColorAtlasFactory;
+	static GetDefaultObject(): CurveLinearColorAtlasFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveLinearColorAtlasFactory;
+	static C(Other: UObject | any): CurveLinearColorAtlasFactory;
+}
+
+declare class CurveLinearColorThumbnailRenderer extends ThumbnailRenderer { 
+	static Load(ResourceName: string): CurveLinearColorThumbnailRenderer;
+	static Find(Outer: UObject, ResourceName: string): CurveLinearColorThumbnailRenderer;
+	static GetDefaultObject(): CurveLinearColorThumbnailRenderer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveLinearColorThumbnailRenderer;
+	static C(Other: UObject | any): CurveLinearColorThumbnailRenderer;
+}
+
 declare class CylinderBuilder extends EditorBrushBuilder { 
 	Z: number;
 	OuterRadius: number;
@@ -4268,15 +7982,6 @@ declare class DataAssetFactory extends Factory {
 	static C(Other: UObject | any): DataAssetFactory;
 }
 
-declare class DataTableFactory extends Factory { 
-	Struct: ScriptStruct;
-	static Load(ResourceName: string): DataTableFactory;
-	static Find(Outer: UObject, ResourceName: string): DataTableFactory;
-	static GetDefaultObject(): DataTableFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataTableFactory;
-	static C(Other: UObject | any): DataTableFactory;
-}
-
 declare class DebugSkelMeshComponent extends SkeletalMeshComponent { 
 	bRenderRawSkeleton: boolean;
 	bDrawMesh: boolean;
@@ -4320,7 +8025,7 @@ declare class DebugSkelMeshComponent extends SkeletalMeshComponent {
 
 declare class DEditorParameterValue extends UObject { 
 	bOverride: boolean;
-	ParameterName: string;
+	ParameterInfo: MaterialParameterInfo;
 	ExpressionId: Guid;
 	SortPriority: number;
 	static Load(ResourceName: string): DEditorParameterValue;
@@ -4346,8 +8051,26 @@ declare class DEditorFontParameterValue extends DEditorParameterValue {
 	static C(Other: UObject | any): DEditorFontParameterValue;
 }
 
+declare class DEditorMaterialLayersParameterValue extends DEditorParameterValue { 
+	ParameterValue: MaterialLayersFunctions;
+	static Load(ResourceName: string): DEditorMaterialLayersParameterValue;
+	static Find(Outer: UObject, ResourceName: string): DEditorMaterialLayersParameterValue;
+	static GetDefaultObject(): DEditorMaterialLayersParameterValue;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DEditorMaterialLayersParameterValue;
+	static C(Other: UObject | any): DEditorMaterialLayersParameterValue;
+}
+
+declare class ScalarParameterAtlasData { 
+	bIsUsedAsAtlasPosition: boolean;
+	Curve: CurveLinearColor;
+	Atlas: CurveLinearColorAtlas;
+	clone() : ScalarParameterAtlasData;
+	static C(Other: UObject | any): ScalarParameterAtlasData;
+}
+
 declare class DEditorScalarParameterValue extends DEditorParameterValue { 
 	ParameterValue: number;
+	AtlasData: ScalarParameterAtlasData;
 	static Load(ResourceName: string): DEditorScalarParameterValue;
 	static Find(Outer: UObject, ResourceName: string): DEditorScalarParameterValue;
 	static GetDefaultObject(): DEditorScalarParameterValue;
@@ -4393,6 +8116,7 @@ declare class DEditorTextureParameterValue extends DEditorParameterValue {
 
 declare class DEditorVectorParameterValue extends DEditorParameterValue { 
 	ParameterValue: LinearColor;
+	bIsUsedAsChannelMask: boolean;
 	static Load(ResourceName: string): DEditorVectorParameterValue;
 	static Find(Outer: UObject, ResourceName: string): DEditorVectorParameterValue;
 	static GetDefaultObject(): DEditorVectorParameterValue;
@@ -4408,34 +8132,13 @@ declare class DerivedDataCacheCommandlet extends Commandlet {
 	static C(Other: UObject | any): DerivedDataCacheCommandlet;
 }
 
-declare class DestructableMeshEditorSettings extends UObject { 
-	AnimPreviewFloorColor: Color;
-	AnimPreviewSkyColor: Color;
-	AnimPreviewSkyBrightness: number;
-	AnimPreviewLightBrightness: number;
-	AnimPreviewLightingDirection: Rotator;
-	AnimPreviewDirectionalColor: Color;
-	static Load(ResourceName: string): DestructableMeshEditorSettings;
-	static Find(Outer: UObject, ResourceName: string): DestructableMeshEditorSettings;
-	static GetDefaultObject(): DestructableMeshEditorSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DestructableMeshEditorSettings;
-	static C(Other: UObject | any): DestructableMeshEditorSettings;
-}
-
-declare class DestructibleMeshFactory extends Factory { 
-	static Load(ResourceName: string): DestructibleMeshFactory;
-	static Find(Outer: UObject, ResourceName: string): DestructibleMeshFactory;
-	static GetDefaultObject(): DestructibleMeshFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DestructibleMeshFactory;
-	static C(Other: UObject | any): DestructibleMeshFactory;
-}
-
-declare class DestructibleMeshThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
-	static Load(ResourceName: string): DestructibleMeshThumbnailRenderer;
-	static Find(Outer: UObject, ResourceName: string): DestructibleMeshThumbnailRenderer;
-	static GetDefaultObject(): DestructibleMeshThumbnailRenderer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DestructibleMeshThumbnailRenderer;
-	static C(Other: UObject | any): DestructibleMeshThumbnailRenderer;
+declare class DiffAssetRegistriesCommandlet extends Commandlet { 
+	AssetRegistrySearchPath: string[];
+	static Load(ResourceName: string): DiffAssetRegistriesCommandlet;
+	static Find(Outer: UObject, ResourceName: string): DiffAssetRegistriesCommandlet;
+	static GetDefaultObject(): DiffAssetRegistriesCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DiffAssetRegistriesCommandlet;
+	static C(Other: UObject | any): DiffAssetRegistriesCommandlet;
 }
 
 declare class DiffAssetsCommandlet extends Commandlet { 
@@ -4479,10 +8182,12 @@ declare class DumpHiddenCategoriesCommandlet extends Commandlet {
 	static C(Other: UObject | any): DumpHiddenCategoriesCommandlet;
 }
 
-declare type ECommentBoxMode = 'GroupMovement' | 'NoGroupMovement';
-declare var ECommentBoxMode : { GroupMovement:'GroupMovement',NoGroupMovement:'NoGroupMovement', };
+declare type ECommentBoxMode = 'GroupMovement' | 'NoGroupMovement' | 'ECommentBoxMode_MAX';
+declare var ECommentBoxMode : { GroupMovement:'GroupMovement',NoGroupMovement:'NoGroupMovement',ECommentBoxMode_MAX:'ECommentBoxMode_MAX', };
 declare class EdGraphNode_Comment extends EdGraphNode { 
 	CommentColor: LinearColor;
+	FontSize: number;
+	bCommentBubbleVisible_InDetailsPanel: boolean;
 	bColorCommentBubble: boolean;
 	MoveMode: ECommentBoxMode;
 	CommentDepth: number;
@@ -4521,6 +8226,7 @@ declare class EditorAnimCompositeSegment extends EditorAnimBaseObj {
 declare class EditorAnimCurveBoneLinks extends UObject { 
 	CurveName: SmartName;
 	ConnectedBones: BoneReference[];
+	MaxLOD: number;
 	static Load(ResourceName: string): EditorAnimCurveBoneLinks;
 	static Find(Outer: UObject, ResourceName: string): EditorAnimCurveBoneLinks;
 	static GetDefaultObject(): EditorAnimCurveBoneLinks;
@@ -4546,10 +8252,11 @@ declare class EditorCompositeSection extends EditorAnimBaseObj {
 	static C(Other: UObject | any): EditorCompositeSection;
 }
 
-declare type EWindowMode = 'Fullscreen' | 'WindowedFullscreen' | 'Windowed';
-declare var EWindowMode : { Fullscreen:'Fullscreen',WindowedFullscreen:'WindowedFullscreen',Windowed:'Windowed', };
+declare type EWindowMode = 'Fullscreen' | 'WindowedFullscreen' | 'Windowed' | 'EWindowMode_MAX';
+declare var EWindowMode : { Fullscreen:'Fullscreen',WindowedFullscreen:'WindowedFullscreen',Windowed:'Windowed',EWindowMode_MAX:'EWindowMode_MAX', };
 declare class GameUserSettings extends UObject { 
 	bUseVSync: boolean;
+	bUseDynamicResolution: boolean;
 	ResolutionSizeX: any;
 	ResolutionSizeY: any;
 	LastUserConfirmedResolutionSizeX: any;
@@ -4561,10 +8268,13 @@ declare class GameUserSettings extends UObject {
 	PreferredFullscreenMode: number;
 	Version: any;
 	AudioQualityLevel: number;
+	LastConfirmedAudioQualityLevel: number;
 	FrameRateLimit: number;
 	DesiredScreenWidth: number;
 	bUseDesiredScreenHeight: boolean;
 	DesiredScreenHeight: number;
+	LastUserConfirmedDesiredScreenWidth: number;
+	LastUserConfirmedDesiredScreenHeight: number;
 	LastRecommendedScreenWidth: number;
 	LastRecommendedScreenHeight: number;
 	LastCPUBenchmarkResult: number;
@@ -4596,6 +8306,7 @@ declare class GameUserSettings extends UObject {
 	SetFullscreenMode(InFullscreenMode: EWindowMode): void;
 	SetFrameRateLimit(NewLimit: number): void;
 	SetFoliageQuality(Value: number): void;
+	SetDynamicResolutionEnabled(bEnable: boolean): void;
 	SetBenchmarkFallbackValues(): void;
 	SetAudioQualityLevel(QualityLevel: number): void;
 	SetAntiAliasingQuality(Value: number): void;
@@ -4609,6 +8320,8 @@ declare class GameUserSettings extends UObject {
 	IsScreenResolutionDirty(): boolean;
 	IsHDREnabled(): boolean;
 	IsFullscreenModeDirty(): boolean;
+	IsDynamicResolutionEnabled(): boolean;
+	IsDynamicResolutionDirty(): boolean;
 	IsDirty(): boolean;
 	GetVisualEffectQuality(): number;
 	GetViewDistanceQuality(): number;
@@ -4649,9 +8362,14 @@ declare class AssetManager extends UObject {
 	bIsGlobalAsyncScanEnvironment: boolean;
 	bShouldGuessTypeAndName: boolean;
 	bShouldUseSynchronousLoad: boolean;
+	bIsLoadingFromPakFiles: boolean;
+	bShouldAcquireMissingChunksOnLoad: boolean;
+	bOnlyCookProductionAssets: boolean;
 	bIsBulkScanning: boolean;
+	bIsPrimaryAssetDirectoryCurrent: boolean;
 	bIsManagementDatabaseCurrent: boolean;
 	bUpdateManagementDatabaseAfterScan: boolean;
+	bIncludeOnlyOnDiskAssets: boolean;
 	NumberOfSpawnedNotifications: number;
 	static Load(ResourceName: string): AssetManager;
 	static Find(Outer: UObject, ResourceName: string): AssetManager;
@@ -4709,8 +8427,21 @@ declare class StructRedirect {
 	static C(Other: UObject | any): StructRedirect;
 }
 
-declare type ETransitionType = 'TT_None' | 'TT_Paused' | 'TT_Loading' | 'TT_Saving' | 'TT_Connecting' | 'TT_Precaching' | 'TT_WaitingToConnect';
-declare var ETransitionType : { TT_None:'TT_None',TT_Paused:'TT_Paused',TT_Loading:'TT_Loading',TT_Saving:'TT_Saving',TT_Connecting:'TT_Connecting',TT_Precaching:'TT_Precaching',TT_WaitingToConnect:'TT_WaitingToConnect', };
+declare type ETimecodeProviderSynchronizationState = 'Closed' | 'Error' | 'Synchronized' | 'Synchronizing' | 'ETimecodeProviderSynchronizationState_MAX';
+declare var ETimecodeProviderSynchronizationState : { Closed:'Closed',Error:'Error',Synchronized:'Synchronized',Synchronizing:'Synchronizing',ETimecodeProviderSynchronizationState_MAX:'ETimecodeProviderSynchronizationState_MAX', };
+declare class TimecodeProvider extends UObject { 
+	static Load(ResourceName: string): TimecodeProvider;
+	static Find(Outer: UObject, ResourceName: string): TimecodeProvider;
+	static GetDefaultObject(): TimecodeProvider;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TimecodeProvider;
+	GetTimecode(): Timecode;
+	GetSynchronizationState(): ETimecodeProviderSynchronizationState;
+	GetFrameRate(): FrameRate;
+	static C(Other: UObject | any): TimecodeProvider;
+}
+
+declare type ETransitionType = 'TT_None' | 'TT_Paused' | 'TT_Loading' | 'TT_Saving' | 'TT_Connecting' | 'TT_Precaching' | 'TT_WaitingToConnect' | 'TT_MAX';
+declare var ETransitionType : { TT_None:'TT_None',TT_Paused:'TT_Paused',TT_Loading:'TT_Loading',TT_Saving:'TT_Saving',TT_Connecting:'TT_Connecting',TT_Precaching:'TT_Precaching',TT_WaitingToConnect:'TT_WaitingToConnect',TT_MAX:'TT_MAX', };
 declare class DropNoteInfo { 
 	Location: Vector;
 	Rotation: Rotator;
@@ -4719,18 +8450,6 @@ declare class DropNoteInfo {
 	static C(Other: UObject | any): DropNoteInfo;
 }
 
-declare class RigidBodyErrorCorrection { 
-	LinearDeltaThresholdSq: number;
-	LinearInterpAlpha: number;
-	LinearRecipFixTime: number;
-	AngularDeltaThreshold: number;
-	AngularInterpAlpha: number;
-	AngularRecipFixTime: number;
-	BodySpeedThresholdSq: number;
-	clone() : RigidBodyErrorCorrection;
-	static C(Other: UObject | any): RigidBodyErrorCorrection;
-}
-
 declare class NetDriverDefinition { 
 	DefName: string;
 	DriverClassName: string;
@@ -4741,61 +8460,62 @@ declare class NetDriverDefinition {
 
 declare class Engine extends UObject { 
 	TinyFont: Font;
-	TinyFontName: StringAssetReference;
+	TinyFontName: SoftObjectPath;
 	SmallFont: Font;
-	SmallFontName: StringAssetReference;
+	SmallFontName: SoftObjectPath;
 	MediumFont: Font;
-	MediumFontName: StringAssetReference;
+	MediumFontName: SoftObjectPath;
 	LargeFont: Font;
-	LargeFontName: StringAssetReference;
+	LargeFontName: SoftObjectPath;
 	SubtitleFont: Font;
-	SubtitleFontName: StringAssetReference;
+	SubtitleFontName: SoftObjectPath;
 	AdditionalFonts: Font[];
 	AdditionalFontNames: string[];
 	ConsoleClass: UnrealEngineClass;
-	ConsoleClassName: StringClassReference;
+	ConsoleClassName: SoftClassPath;
 	GameViewportClientClass: UnrealEngineClass;
-	GameViewportClientClassName: StringClassReference;
+	GameViewportClientClassName: SoftClassPath;
 	LocalPlayerClass: UnrealEngineClass;
-	LocalPlayerClassName: StringClassReference;
+	LocalPlayerClassName: SoftClassPath;
 	WorldSettingsClass: UnrealEngineClass;
-	WorldSettingsClassName: StringClassReference;
-	NavigationSystemClassName: StringClassReference;
+	WorldSettingsClassName: SoftClassPath;
+	NavigationSystemClassName: SoftClassPath;
 	NavigationSystemClass: UnrealEngineClass;
-	AvoidanceManagerClassName: StringClassReference;
+	NavigationSystemConfigClassName: SoftClassPath;
+	NavigationSystemConfigClass: UnrealEngineClass;
+	AvoidanceManagerClassName: SoftClassPath;
 	AvoidanceManagerClass: UnrealEngineClass;
 	PhysicsCollisionHandlerClass: UnrealEngineClass;
-	PhysicsCollisionHandlerClassName: StringClassReference;
-	GameUserSettingsClassName: StringClassReference;
+	PhysicsCollisionHandlerClassName: SoftClassPath;
+	GameUserSettingsClassName: SoftClassPath;
 	GameUserSettingsClass: UnrealEngineClass;
-	AIControllerClassName: StringClassReference;
+	AIControllerClassName: SoftClassPath;
 	GameUserSettings: GameUserSettings;
 	LevelScriptActorClass: UnrealEngineClass;
-	LevelScriptActorClassName: StringClassReference;
-	DefaultBlueprintBaseClassName: StringClassReference;
-	GameSingletonClassName: StringClassReference;
+	LevelScriptActorClassName: SoftClassPath;
+	DefaultBlueprintBaseClassName: SoftClassPath;
+	GameSingletonClassName: SoftClassPath;
 	GameSingleton: UObject;
-	AssetManagerClassName: StringClassReference;
+	AssetManagerClassName: SoftClassPath;
 	AssetManager: AssetManager;
-	PlayOnConsoleSaveDir: string;
 	DefaultTexture: Texture2D;
-	DefaultTextureName: StringAssetReference;
+	DefaultTextureName: SoftObjectPath;
 	DefaultDiffuseTexture: Texture;
-	DefaultDiffuseTextureName: StringAssetReference;
+	DefaultDiffuseTextureName: SoftObjectPath;
 	DefaultBSPVertexTexture: Texture2D;
-	DefaultBSPVertexTextureName: StringAssetReference;
+	DefaultBSPVertexTextureName: SoftObjectPath;
 	HighFrequencyNoiseTexture: Texture2D;
-	HighFrequencyNoiseTextureName: StringAssetReference;
+	HighFrequencyNoiseTextureName: SoftObjectPath;
 	DefaultBokehTexture: Texture2D;
-	DefaultBokehTextureName: StringAssetReference;
+	DefaultBokehTextureName: SoftObjectPath;
 	DefaultBloomKernelTexture: Texture2D;
-	DefaultBloomKernelTextureName: StringAssetReference;
+	DefaultBloomKernelTextureName: SoftObjectPath;
 	WireframeMaterial: Material;
 	WireframeMaterialName: string;
 	GeomMaterial: Material;
-	GeomMaterialName: StringAssetReference;
+	GeomMaterialName: SoftObjectPath;
 	DebugMeshMaterial: Material;
-	DebugMeshMaterialName: StringAssetReference;
+	DebugMeshMaterialName: SoftObjectPath;
 	LevelColorationLitMaterial: Material;
 	LevelColorationLitMaterialName: string;
 	LevelColorationUnlitMaterial: Material;
@@ -4807,7 +8527,7 @@ declare class Engine extends UObject {
 	ShadedLevelColorationUnlitMaterial: Material;
 	ShadedLevelColorationUnlitMaterialName: string;
 	RemoveSurfaceMaterial: Material;
-	RemoveSurfaceMaterialName: StringAssetReference;
+	RemoveSurfaceMaterialName: SoftObjectPath;
 	VertexColorMaterial: Material;
 	VertexColorMaterialName: string;
 	VertexColorViewModeMaterial_ColorOnly: Material;
@@ -4821,15 +8541,15 @@ declare class Engine extends UObject {
 	VertexColorViewModeMaterial_BlueOnly: Material;
 	VertexColorViewModeMaterialName_BlueOnly: string;
 	BoneWeightMaterial: Material;
-	BoneWeightMaterialName: StringAssetReference;
+	BoneWeightMaterialName: SoftObjectPath;
 	ClothPaintMaterial: Material;
 	ClothPaintMaterialWireframe: Material;
 	ClothPaintMaterialInstance: MaterialInstanceDynamic;
 	ClothPaintMaterialWireframeInstance: MaterialInstanceDynamic;
-	ClothPaintMaterialName: StringAssetReference;
-	ClothPaintMaterialWireframeName: StringAssetReference;
+	ClothPaintMaterialName: SoftObjectPath;
+	ClothPaintMaterialWireframeName: SoftObjectPath;
 	DebugEditorMaterial: Material;
-	DebugEditorMaterialName: StringAssetReference;
+	DebugEditorMaterialName: SoftObjectPath;
 	ConstraintLimitMaterial: Material;
 	ConstraintLimitMaterialX: MaterialInstanceDynamic;
 	ConstraintLimitMaterialXAxis: MaterialInstanceDynamic;
@@ -4839,11 +8559,11 @@ declare class Engine extends UObject {
 	ConstraintLimitMaterialZAxis: MaterialInstanceDynamic;
 	ConstraintLimitMaterialPrismatic: MaterialInstanceDynamic;
 	InvalidLightmapSettingsMaterial: Material;
-	InvalidLightmapSettingsMaterialName: StringAssetReference;
+	InvalidLightmapSettingsMaterialName: SoftObjectPath;
 	PreviewShadowsIndicatorMaterial: Material;
-	PreviewShadowsIndicatorMaterialName: StringAssetReference;
+	PreviewShadowsIndicatorMaterialName: SoftObjectPath;
 	ArrowMaterial: Material;
-	ArrowMaterialName: StringAssetReference;
+	ArrowMaterialName: SoftObjectPath;
 	LightingOnlyBrightness: LinearColor;
 	ShaderComplexityColors: LinearColor[];
 	QuadComplexityColors: LinearColor[];
@@ -4854,6 +8574,7 @@ declare class Engine extends UObject {
 	StreamingAccuracyColors: LinearColor[];
 	MaxPixelShaderAdditiveComplexityCount: number;
 	MaxES2PixelShaderAdditiveComplexityCount: number;
+	MaxES3PixelShaderAdditiveComplexityCount: number;
 	MinLightMapDensity: number;
 	IdealLightMapDensity: number;
 	MaxLightMapDensity: number;
@@ -4864,21 +8585,21 @@ declare class Engine extends UObject {
 	LightMapDensitySelectedColor: LinearColor;
 	StatColorMappings: StatColorMapping[];
 	EditorBrushMaterial: Material;
-	EditorBrushMaterialName: StringAssetReference;
+	EditorBrushMaterialName: SoftObjectPath;
 	DefaultPhysMaterial: PhysicalMaterial;
-	DefaultPhysMaterialName: StringAssetReference;
+	DefaultPhysMaterialName: SoftObjectPath;
 	ActiveGameNameRedirects: GameNameRedirect[];
 	ActiveClassRedirects: ClassRedirect[];
 	ActivePluginRedirects: PluginRedirect[];
 	ActiveStructRedirects: StructRedirect[];
 	PreIntegratedSkinBRDFTexture: Texture2D;
-	PreIntegratedSkinBRDFTextureName: StringAssetReference;
+	PreIntegratedSkinBRDFTextureName: SoftObjectPath;
 	MiniFontTexture: Texture2D;
-	MiniFontTextureName: StringAssetReference;
+	MiniFontTextureName: SoftObjectPath;
 	WeightMapPlaceholderTexture: Texture;
-	WeightMapPlaceholderTextureName: StringAssetReference;
+	WeightMapPlaceholderTextureName: SoftObjectPath;
 	LightMapDensityTexture: Texture2D;
-	LightMapDensityTextureName: StringAssetReference;
+	LightMapDensityTextureName: SoftObjectPath;
 	GameViewport: GameViewportClient;
 	DeferredCommands: string[];
 	TickCycles: number;
@@ -4897,6 +8618,14 @@ declare class Engine extends UObject {
 	bUseFixedFrameRate: boolean;
 	FixedFrameRate: number;
 	SmoothedFrameRateRange: FloatRange;
+	DefaultCustomTimeStep: EngineCustomTimeStep;
+	CurrentCustomTimeStep: EngineCustomTimeStep;
+	CustomTimeStepClassName: SoftClassPath;
+	DefaultTimecodeProvider: TimecodeProvider;
+	CustomTimecodeProvider: TimecodeProvider;
+	DefaultTimecodeProviderClassName: SoftClassPath;
+	TimecodeProviderClassName: SoftClassPath;
+	DefaultTimecodeFrameRate: FrameRate;
 	bCheckForMultiplePawnsSpawnedInAFrame: boolean;
 	NumPawnsAllowedToBeSpawnedInAFrame: number;
 	bShouldGenerateLowQualityLightmaps: boolean;
@@ -4928,7 +8657,6 @@ declare class Engine extends UObject {
 	MaxParticleResize: number;
 	MaxParticleResizeWarn: number;
 	PendingDroppedNotes: DropNoteInfo[];
-	PhysicErrorCorrection: RigidBodyErrorCorrection;
 	NetClientTicksPerSecond: number;
 	DisplayGamma: number;
 	MinDesiredFrameRate: number;
@@ -5013,8 +8741,8 @@ declare class EditorWorldExtensionManager extends UObject {
 	static C(Other: UObject | any): EditorWorldExtensionManager;
 }
 
-declare type ECsgOper = 'CSG_Active' | 'CSG_Add' | 'CSG_Subtract' | 'CSG_Intersect' | 'CSG_Deintersect' | 'CSG_None';
-declare var ECsgOper : { CSG_Active:'CSG_Active',CSG_Add:'CSG_Add',CSG_Subtract:'CSG_Subtract',CSG_Intersect:'CSG_Intersect',CSG_Deintersect:'CSG_Deintersect',CSG_None:'CSG_None', };
+declare type ECsgOper = 'CSG_Active' | 'CSG_Add' | 'CSG_Subtract' | 'CSG_Intersect' | 'CSG_Deintersect' | 'CSG_None' | 'CSG_MAX';
+declare var ECsgOper : { CSG_Active:'CSG_Active',CSG_Add:'CSG_Add',CSG_Subtract:'CSG_Subtract',CSG_Intersect:'CSG_Intersect',CSG_Deintersect:'CSG_Deintersect',CSG_None:'CSG_None',CSG_MAX:'CSG_MAX', };
 declare class USelection extends UObject { 
 	static Load(ResourceName: string): USelection;
 	static Find(Outer: UObject, ResourceName: string): USelection;
@@ -5087,6 +8815,7 @@ declare class EditorEngine extends Engine {
 	bUseVRPreviewForPlayWorld: boolean;
 	bIsSimulatingInEditor: boolean;
 	bSquelchTransactionNotification: boolean;
+	bNotifyUndoRedoSelectionChange: boolean;
 	PlayFromHerePlayerStartClass: UnrealEngineClass;
 	EditorWorld: World;
 	ActorsThatWereSelected: any[];
@@ -5109,7 +8838,7 @@ declare class EditorEngine extends Engine {
 	bDrawParticleHelpers: boolean;
 	BrushBuilders: BrushBuilder[];
 	EditorWorldExtensionsManager: EditorWorldExtensionManager;
-	ActorGroupingUtilsClassName: StringClassReference;
+	ActorGroupingUtilsClassName: SoftClassPath;
 	ActorGroupingUtils: ActorGroupingUtils;
 	static Load(ResourceName: string): EditorEngine;
 	static Find(Outer: UObject, ResourceName: string): EditorEngine;
@@ -5148,8 +8877,8 @@ declare class EditorEngine extends Engine {
 	static SetMaterial(Engine: EditorEngine,InModel: Model,Material: MaterialInterface,Surfaces: number[]): void;
 }
 
-declare type EConsoleForGamepadLabels = 'None' | 'XBoxOne' | 'PS4';
-declare var EConsoleForGamepadLabels : { None:'None',XBoxOne:'XBoxOne',PS4:'PS4', };
+declare type EConsoleForGamepadLabels = 'None' | 'XBoxOne' | 'PS4' | 'EConsoleForGamepadLabels_MAX';
+declare var EConsoleForGamepadLabels : { None:'None',XBoxOne:'XBoxOne',PS4:'PS4',EConsoleForGamepadLabels_MAX:'EConsoleForGamepadLabels_MAX', };
 declare class EditorExperimentalSettings extends UObject { 
 	bProceduralFoliage: boolean;
 	bEnableLocalizationDashboard: boolean;
@@ -5160,7 +8889,6 @@ declare class EditorExperimentalSettings extends UObject {
 	ConsoleForGamepadLabels: EConsoleForGamepadLabels;
 	bToolbarCustomization: boolean;
 	bBreakOnExceptions: boolean;
-	bBlueprintPerformanceAnalysisTools: boolean;
 	bEnableFindAndReplaceReferences: boolean;
 	bDrawMidpointArrowsInBlueprints: boolean;
 	bContextMenuChunkAssignments: boolean;
@@ -5175,10 +8903,10 @@ declare class EditorExperimentalSettings extends UObject {
 	bUseOpenCLForConvexHullDecomp: boolean;
 	bAllowPotentiallyUnsafePropertyEditing: boolean;
 	bFacialAnimationImporter: boolean;
-	bClothingTools: boolean;
-	bEnableLiveRecompilationOfAnimationBlueprints: boolean;
 	bMobilePIEPreviewDeviceLaunch: boolean;
-	bAssetMaterialBaking: boolean;
+	bTextAssetFormatSupport: boolean;
+	bExampleLayersAndBlends: boolean;
+	bEnableLongPathsSupport: boolean;
 	static Load(ResourceName: string): EditorExperimentalSettings;
 	static Find(Outer: UObject, ResourceName: string): EditorExperimentalSettings;
 	static GetDefaultObject(): EditorExperimentalSettings;
@@ -5191,17 +8919,17 @@ declare class EditorLevelUtils extends UObject {
 	static Find(Outer: UObject, ResourceName: string): EditorLevelUtils;
 	static GetDefaultObject(): EditorLevelUtils;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorLevelUtils;
-	static MoveSelectedActorsToLevel(DestLevel: LevelStreaming): number;
-	static MoveActorsToLevel(ActorsToMove: Actor[],DestStreamingLevel: LevelStreaming): number;
+	static MoveSelectedActorsToLevel(DestLevel: LevelStreaming,bWarnAboutReferences: boolean): number;
+	static MoveActorsToLevel(ActorsToMove: Actor[],DestStreamingLevel: LevelStreaming,bWarnAboutReferences: boolean): number;
 	static MakeLevelCurrent(InStreamingLevel: LevelStreaming): void;
 	static CreateNewStreamingLevel(LevelStreamingClass: UnrealEngineClass,NewLevelPath: string,bMoveSelectedActorsIntoNewLevel: boolean): LevelStreaming;
 	static C(Other: UObject | any): EditorLevelUtils;
 }
 
-declare type ELoadLevelAtStartup = 'None' | 'ProjectDefault' | 'LastOpened';
-declare var ELoadLevelAtStartup : { None:'None',ProjectDefault:'ProjectDefault',LastOpened:'LastOpened', };
+declare type ELoadLevelAtStartup = 'None' | 'ProjectDefault' | 'LastOpened' | 'ELoadLevelAtStartup_MAX';
+declare var ELoadLevelAtStartup : { None:'None',ProjectDefault:'ProjectDefault',LastOpened:'LastOpened',ELoadLevelAtStartup_MAX:'ELoadLevelAtStartup_MAX', };
 declare class AutoReimportWildcard { 
-	Wildcard: string;
+	wildcard: string;
 	bInclude: boolean;
 	clone() : AutoReimportWildcard;
 	static C(Other: UObject | any): AutoReimportWildcard;
@@ -5275,10 +9003,12 @@ declare class EditorParentPlayerListObj extends UObject {
 	static C(Other: UObject | any): EditorParentPlayerListObj;
 }
 
-declare class EditorPerformanceSettings extends UObject { 
+declare class EditorPerformanceSettings extends DeveloperSettings { 
 	bShowFrameRateAndMemory: boolean;
 	bThrottleCPUWhenNotForeground: boolean;
 	bMonitorEditorPerformance: boolean;
+	bOverrideDPIBasedEditorViewportScaling: boolean;
+	bEnableSharedDDCPerformanceNotifications: boolean;
 	static Load(ResourceName: string): EditorPerformanceSettings;
 	static Find(Outer: UObject, ResourceName: string): EditorPerformanceSettings;
 	static GetDefaultObject(): EditorPerformanceSettings;
@@ -5286,8 +9016,6 @@ declare class EditorPerformanceSettings extends UObject {
 	static C(Other: UObject | any): EditorPerformanceSettings;
 }
 
-declare type EFbxExportCompatibility = 'FBX_2010' | 'FBX_2011' | 'FBX_2012' | 'FBX_2013' | 'FBX_2014' | 'FBX_2016';
-declare var EFbxExportCompatibility : { FBX_2010:'FBX_2010',FBX_2011:'FBX_2011',FBX_2012:'FBX_2012',FBX_2013:'FBX_2013',FBX_2014:'FBX_2014',FBX_2016:'FBX_2016', };
 declare class EditorPerProjectUserSettings extends UObject { 
 	bDisplayUIExtensionPoints: boolean;
 	bDisplayDocumentationLink: boolean;
@@ -5303,13 +9031,10 @@ declare class EditorPerProjectUserSettings extends UObject {
 	SwarmIntermediateFolder: string;
 	bAutomaticallyHotReloadNewClasses: boolean;
 	bShowCompilerLogOnCompileError: boolean;
+	bKeepFbxNamespace: boolean;
 	bShowImportDialogAtReimport: boolean;
 	DataSourceFolder: DirectoryPath;
 	bKeepAttachHierarchy: boolean;
-	bMapSkeletalMotionToRoot: boolean;
-	FbxExportCompatibility: FbxExportCompatibility;
-	bFbxExportCollisionMesh: boolean;
-	bForceFrontXAxis: boolean;
 	bAnimationReimportWarnings: boolean;
 	bUseCurvesForDistributions: boolean;
 	PropertyMatrix_NumberOfPasteOperationsBeforeWarning: number;
@@ -5323,6 +9048,8 @@ declare class EditorPerProjectUserSettings extends UObject {
 	AssetViewerProfileIndex: number;
 	AssetViewerProfileName: string;
 	MaterialQualityLevel: number;
+	PreviewShaderPlatformName: string;
+	bIsMaterialQualityOverridePlatform: boolean;
 	static Load(ResourceName: string): EditorPerProjectUserSettings;
 	static Find(Outer: UObject, ResourceName: string): EditorPerProjectUserSettings;
 	static GetDefaultObject(): EditorPerProjectUserSettings;
@@ -5330,24 +9057,24 @@ declare class EditorPerProjectUserSettings extends UObject {
 	static C(Other: UObject | any): EditorPerProjectUserSettings;
 }
 
-declare type EUnit = 'Micrometers' | 'Millimeters' | 'Centimeters' | 'Meters' | 'Kilometers' | 'Inches' | 'Feet' | 'Yards' | 'Miles' | 'Lightyears' | 'Degrees' | 'Radians' | 'MetersPerSecond' | 'KilometersPerHour' | 'MilesPerHour' | 'Celsius' | 'Farenheit' | 'Kelvin' | 'Micrograms' | 'Milligrams' | 'Grams' | 'Kilograms' | 'MetricTons' | 'Ounces' | 'Pounds' | 'Stones' | 'Newtons' | 'PoundsForce' | 'KilogramsForce' | 'Hertz' | 'Kilohertz' | 'Megahertz' | 'Gigahertz' | 'RevolutionsPerMinute' | 'Bytes' | 'Kilobytes' | 'Megabytes' | 'Gigabytes' | 'Terabytes' | 'Lumens' | 'Milliseconds' | 'Seconds' | 'Minutes' | 'Hours' | 'Days' | 'Months' | 'Years' | 'Multiplier' | 'Unspecified';
-declare var EUnit : { Micrometers:'Micrometers',Millimeters:'Millimeters',Centimeters:'Centimeters',Meters:'Meters',Kilometers:'Kilometers',Inches:'Inches',Feet:'Feet',Yards:'Yards',Miles:'Miles',Lightyears:'Lightyears',Degrees:'Degrees',Radians:'Radians',MetersPerSecond:'MetersPerSecond',KilometersPerHour:'KilometersPerHour',MilesPerHour:'MilesPerHour',Celsius:'Celsius',Farenheit:'Farenheit',Kelvin:'Kelvin',Micrograms:'Micrograms',Milligrams:'Milligrams',Grams:'Grams',Kilograms:'Kilograms',MetricTons:'MetricTons',Ounces:'Ounces',Pounds:'Pounds',Stones:'Stones',Newtons:'Newtons',PoundsForce:'PoundsForce',KilogramsForce:'KilogramsForce',Hertz:'Hertz',Kilohertz:'Kilohertz',Megahertz:'Megahertz',Gigahertz:'Gigahertz',RevolutionsPerMinute:'RevolutionsPerMinute',Bytes:'Bytes',Kilobytes:'Kilobytes',Megabytes:'Megabytes',Gigabytes:'Gigabytes',Terabytes:'Terabytes',Lumens:'Lumens',Milliseconds:'Milliseconds',Seconds:'Seconds',Minutes:'Minutes',Hours:'Hours',Days:'Days',Months:'Months',Years:'Years',Multiplier:'Multiplier',Unspecified:'Unspecified', };
-declare type EUnitDisplay = 'None' | 'Metric' | 'Imperial' | 'Invalid';
-declare var EUnitDisplay : { None:'None',Metric:'Metric',Imperial:'Imperial',Invalid:'Invalid', };
-declare type EDefaultLocationUnit = 'Micrometers' | 'Millimeters' | 'Centimeters' | 'Meters' | 'Kilometers' | 'Inches' | 'Feet' | 'Yards' | 'Miles' | 'Invalid';
-declare var EDefaultLocationUnit : { Micrometers:'Micrometers',Millimeters:'Millimeters',Centimeters:'Centimeters',Meters:'Meters',Kilometers:'Kilometers',Inches:'Inches',Feet:'Feet',Yards:'Yards',Miles:'Miles',Invalid:'Invalid', };
+declare type EUnit = 'Micrometers' | 'Millimeters' | 'Centimeters' | 'Meters' | 'Kilometers' | 'Inches' | 'Feet' | 'Yards' | 'Miles' | 'Lightyears' | 'Degrees' | 'Radians' | 'MetersPerSecond' | 'KilometersPerHour' | 'MilesPerHour' | 'Celsius' | 'Farenheit' | 'Kelvin' | 'Micrograms' | 'Milligrams' | 'Grams' | 'Kilograms' | 'MetricTons' | 'Ounces' | 'Pounds' | 'Stones' | 'Newtons' | 'PoundsForce' | 'KilogramsForce' | 'Hertz' | 'Kilohertz' | 'Megahertz' | 'Gigahertz' | 'RevolutionsPerMinute' | 'Bytes' | 'Kilobytes' | 'Megabytes' | 'Gigabytes' | 'Terabytes' | 'Lumens' | 'Milliseconds' | 'Seconds' | 'Minutes' | 'Hours' | 'Days' | 'Months' | 'Years' | 'Multiplier' | 'Percentage' | 'Unspecified' | 'EUnit_MAX';
+declare var EUnit : { Micrometers:'Micrometers',Millimeters:'Millimeters',Centimeters:'Centimeters',Meters:'Meters',Kilometers:'Kilometers',Inches:'Inches',Feet:'Feet',Yards:'Yards',Miles:'Miles',Lightyears:'Lightyears',Degrees:'Degrees',Radians:'Radians',MetersPerSecond:'MetersPerSecond',KilometersPerHour:'KilometersPerHour',MilesPerHour:'MilesPerHour',Celsius:'Celsius',Farenheit:'Farenheit',Kelvin:'Kelvin',Micrograms:'Micrograms',Milligrams:'Milligrams',Grams:'Grams',Kilograms:'Kilograms',MetricTons:'MetricTons',Ounces:'Ounces',Pounds:'Pounds',Stones:'Stones',Newtons:'Newtons',PoundsForce:'PoundsForce',KilogramsForce:'KilogramsForce',Hertz:'Hertz',Kilohertz:'Kilohertz',Megahertz:'Megahertz',Gigahertz:'Gigahertz',RevolutionsPerMinute:'RevolutionsPerMinute',Bytes:'Bytes',Kilobytes:'Kilobytes',Megabytes:'Megabytes',Gigabytes:'Gigabytes',Terabytes:'Terabytes',Lumens:'Lumens',Milliseconds:'Milliseconds',Seconds:'Seconds',Minutes:'Minutes',Hours:'Hours',Days:'Days',Months:'Months',Years:'Years',Multiplier:'Multiplier',Percentage:'Percentage',Unspecified:'Unspecified',EUnit_MAX:'EUnit_MAX', };
+declare type EUnitDisplay = 'None' | 'Metric' | 'Imperial' | 'Invalid' | 'EUnitDisplay_MAX';
+declare var EUnitDisplay : { None:'None',Metric:'Metric',Imperial:'Imperial',Invalid:'Invalid',EUnitDisplay_MAX:'EUnitDisplay_MAX', };
+declare type EDefaultLocationUnit = 'Micrometers' | 'Millimeters' | 'Centimeters' | 'Meters' | 'Kilometers' | 'Inches' | 'Feet' | 'Yards' | 'Miles' | 'Invalid' | 'EDefaultLocationUnit_MAX';
+declare var EDefaultLocationUnit : { Micrometers:'Micrometers',Millimeters:'Millimeters',Centimeters:'Centimeters',Meters:'Meters',Kilometers:'Kilometers',Inches:'Inches',Feet:'Feet',Yards:'Yards',Miles:'Miles',Invalid:'Invalid',EDefaultLocationUnit_MAX:'EDefaultLocationUnit_MAX', };
 declare class EditorProjectAppearanceSettings extends DeveloperSettings { 
 	bDisplayUnits: boolean;
 	bDisplayUnitsOnComponentTransforms: boolean;
-	DistanceUnits: DistanceUnits[];
-	MassUnits: MassUnits[];
-	TimeUnits: TimeUnits[];
-	AngleUnits: AngleUnits;
-	SpeedUnits: SpeedUnits;
-	TemperatureUnits: TemperatureUnits;
-	ForceUnits: ForceUnits;
-	UnitDisplay: UnitDisplay;
-	DefaultInputUnits: DefaultInputUnits;
+	DistanceUnits: EUnit[];
+	MassUnits: EUnit[];
+	TimeUnits: EUnit[];
+	AngleUnits: EUnit;
+	SpeedUnits: EUnit;
+	TemperatureUnits: EUnit;
+	ForceUnits: EUnit;
+	UnitDisplay: EUnitDisplay;
+	DefaultInputUnits: EDefaultLocationUnit;
 	static Load(ResourceName: string): EditorProjectAppearanceSettings;
 	static Find(Outer: UObject, ResourceName: string): EditorProjectAppearanceSettings;
 	static GetDefaultObject(): EditorProjectAppearanceSettings;
@@ -5355,8 +9082,8 @@ declare class EditorProjectAppearanceSettings extends DeveloperSettings {
 	static C(Other: UObject | any): EditorProjectAppearanceSettings;
 }
 
-declare type ELevelEditor2DAxis = 'X' | 'Y' | 'Z';
-declare var ELevelEditor2DAxis : { X:'X',Y:'Y',Z:'Z', };
+declare type ELevelEditor2DAxis = 'X' | 'Y' | 'Z' | 'ELevelEditor2DAxis_MAX';
+declare var ELevelEditor2DAxis : { X:'X',Y:'Y',Z:'Z',ELevelEditor2DAxis_MAX:'ELevelEditor2DAxis_MAX', };
 declare class Mode2DLayer { 
 	Name: string;
 	Depth: number;
@@ -5367,7 +9094,7 @@ declare class Mode2DLayer {
 declare class LevelEditor2DSettings extends DeveloperSettings { 
 	bEnable2DWidget: boolean;
 	bEnableSnapLayers: boolean;
-	SnapAxis: SnapAxis;
+	SnapAxis: ELevelEditor2DAxis;
 	SnapLayers: Mode2DLayer[];
 	static Load(ResourceName: string): LevelEditor2DSettings;
 	static Find(Outer: UObject, ResourceName: string): LevelEditor2DSettings;
@@ -5377,7 +9104,11 @@ declare class LevelEditor2DSettings extends DeveloperSettings {
 }
 
 declare class BlueprintEditorProjectSettings extends DeveloperSettings { 
-	bUseCompilationManager: boolean;
+	bDisableCompilationManager: boolean;
+	bForceAllDependenciesToRecompile: boolean;
+	bValidateUnloadedSoftActorReferences: boolean;
+	DisabledCompilerMessagesExceptEditor: string[];
+	DisabledCompilerMessages: string[];
 	static Load(ResourceName: string): BlueprintEditorProjectSettings;
 	static Find(Outer: UObject, ResourceName: string): BlueprintEditorProjectSettings;
 	static GetDefaultObject(): BlueprintEditorProjectSettings;
@@ -5388,7 +9119,8 @@ declare class BlueprintEditorProjectSettings extends DeveloperSettings {
 declare class EditorSettings extends UObject { 
 	bLoadTheMostRecentlyLoadedProjectAtStartup: boolean;
 	bEditorAnalyticsEnabled: boolean;
-	bOpenSourcesPanelByDefault: boolean;
+	LocalDerivedDataCache: DirectoryPath;
+	SharedDerivedDataCache: DirectoryPath;
 	RecentlyOpenedProjectFiles: string[];
 	CreatedProjectPaths: string[];
 	bCopyStarterContentPreference: boolean;
@@ -5435,6 +9167,14 @@ declare class ExportDialogueScriptCommandlet extends GatherTextCommandletBase {
 	static C(Other: UObject | any): ExportDialogueScriptCommandlet;
 }
 
+declare class ExportPakDependenciesCommandlet extends Commandlet { 
+	static Load(ResourceName: string): ExportPakDependenciesCommandlet;
+	static Find(Outer: UObject, ResourceName: string): ExportPakDependenciesCommandlet;
+	static GetDefaultObject(): ExportPakDependenciesCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExportPakDependenciesCommandlet;
+	static C(Other: UObject | any): ExportPakDependenciesCommandlet;
+}
+
 declare class ExportTextContainer extends UObject { 
 	ExportText: string;
 	static Load(ResourceName: string): ExportTextContainer;
@@ -5469,8 +9209,8 @@ declare class FbxAssetImportData extends AssetImportData {
 	static C(Other: UObject | any): FbxAssetImportData;
 }
 
-declare type EFBXAnimationLengthImportType = 'FBXALIT_ExportedTime' | 'FBXALIT_AnimatedKey' | 'FBXALIT_SetRange';
-declare var EFBXAnimationLengthImportType : { FBXALIT_ExportedTime:'FBXALIT_ExportedTime',FBXALIT_AnimatedKey:'FBXALIT_AnimatedKey',FBXALIT_SetRange:'FBXALIT_SetRange', };
+declare type EFBXAnimationLengthImportType = 'FBXALIT_ExportedTime' | 'FBXALIT_AnimatedKey' | 'FBXALIT_SetRange' | 'FBXALIT_MAX';
+declare var EFBXAnimationLengthImportType : { FBXALIT_ExportedTime:'FBXALIT_ExportedTime',FBXALIT_AnimatedKey:'FBXALIT_AnimatedKey',FBXALIT_SetRange:'FBXALIT_SetRange',FBXALIT_MAX:'FBXALIT_MAX', };
 declare class Int32Interval { 
 	Min: number;
 	Max: number;
@@ -5485,8 +9225,10 @@ declare class FbxAnimSequenceImportData extends FbxAssetImportData {
 	EndFrame: number;
 	FrameImportRange: Int32Interval;
 	bUseDefaultSampleRate: boolean;
+	CustomSampleRate: number;
 	SourceAnimationName: string;
 	bImportCustomAttribute: boolean;
+	bImportBoneTracks: boolean;
 	bSetMaterialDriveParameterOnCustomAttribute: boolean;
 	MaterialCurveSuffixes: string[];
 	bRemoveRedundantKeys: boolean;
@@ -5500,10 +9242,10 @@ declare class FbxAnimSequenceImportData extends FbxAssetImportData {
 	static C(Other: UObject | any): FbxAnimSequenceImportData;
 }
 
-declare type EFBXTestPlanActionType = 'Import' | 'Reimport' | 'AddLOD' | 'ReimportLOD' | 'ImportReload';
-declare var EFBXTestPlanActionType : { Import:'Import',Reimport:'Reimport',AddLOD:'AddLOD',ReimportLOD:'ReimportLOD',ImportReload:'ImportReload', };
-declare type EFBXExpectedResultPreset = 'Error_Number' | 'Warning_Number' | 'Created_Staticmesh_Number' | 'Created_Skeletalmesh_Number' | 'Materials_Created_Number' | 'Material_Slot_Imported_Name' | 'Vertex_Number' | 'Lod_Number' | 'Vertex_Number_Lod' | 'Mesh_Materials_Number' | 'Mesh_LOD_Section_Number' | 'Mesh_LOD_Section_Vertex_Number' | 'Mesh_LOD_Section_Triangle_Number' | 'Mesh_LOD_Section_Material_Name' | 'Mesh_LOD_Section_Material_Index' | 'Mesh_LOD_Section_Material_Imported_Name' | 'LOD_UV_Channel_Number' | 'Bone_Number' | 'Bone_Position';
-declare var EFBXExpectedResultPreset : { Error_Number:'Error_Number',Warning_Number:'Warning_Number',Created_Staticmesh_Number:'Created_Staticmesh_Number',Created_Skeletalmesh_Number:'Created_Skeletalmesh_Number',Materials_Created_Number:'Materials_Created_Number',Material_Slot_Imported_Name:'Material_Slot_Imported_Name',Vertex_Number:'Vertex_Number',Lod_Number:'Lod_Number',Vertex_Number_Lod:'Vertex_Number_Lod',Mesh_Materials_Number:'Mesh_Materials_Number',Mesh_LOD_Section_Number:'Mesh_LOD_Section_Number',Mesh_LOD_Section_Vertex_Number:'Mesh_LOD_Section_Vertex_Number',Mesh_LOD_Section_Triangle_Number:'Mesh_LOD_Section_Triangle_Number',Mesh_LOD_Section_Material_Name:'Mesh_LOD_Section_Material_Name',Mesh_LOD_Section_Material_Index:'Mesh_LOD_Section_Material_Index',Mesh_LOD_Section_Material_Imported_Name:'Mesh_LOD_Section_Material_Imported_Name',LOD_UV_Channel_Number:'LOD_UV_Channel_Number',Bone_Number:'Bone_Number',Bone_Position:'Bone_Position', };
+declare type EFBXTestPlanActionType = 'Import' | 'Reimport' | 'AddLOD' | 'ReimportLOD' | 'ImportReload' | 'EFBXTestPlanActionType_MAX';
+declare var EFBXTestPlanActionType : { Import:'Import',Reimport:'Reimport',AddLOD:'AddLOD',ReimportLOD:'ReimportLOD',ImportReload:'ImportReload',EFBXTestPlanActionType_MAX:'EFBXTestPlanActionType_MAX', };
+declare type EFBXExpectedResultPreset = 'Error_Number' | 'Warning_Number' | 'Created_Staticmesh_Number' | 'Created_Skeletalmesh_Number' | 'Materials_Created_Number' | 'Material_Slot_Imported_Name' | 'Vertex_Number' | 'Lod_Number' | 'Vertex_Number_Lod' | 'Mesh_Materials_Number' | 'Mesh_LOD_Section_Number' | 'Mesh_LOD_Section_Vertex_Number' | 'Mesh_LOD_Section_Triangle_Number' | 'Mesh_LOD_Section_Material_Name' | 'Mesh_LOD_Section_Material_Index' | 'Mesh_LOD_Section_Material_Imported_Name' | 'Mesh_LOD_Vertex_Position' | 'Mesh_LOD_Vertex_Normal' | 'LOD_UV_Channel_Number' | 'Bone_Number' | 'Bone_Position' | 'Animation_Frame_Number' | 'Animation_Length' | 'EFBXExpectedResultPreset_MAX';
+declare var EFBXExpectedResultPreset : { Error_Number:'Error_Number',Warning_Number:'Warning_Number',Created_Staticmesh_Number:'Created_Staticmesh_Number',Created_Skeletalmesh_Number:'Created_Skeletalmesh_Number',Materials_Created_Number:'Materials_Created_Number',Material_Slot_Imported_Name:'Material_Slot_Imported_Name',Vertex_Number:'Vertex_Number',Lod_Number:'Lod_Number',Vertex_Number_Lod:'Vertex_Number_Lod',Mesh_Materials_Number:'Mesh_Materials_Number',Mesh_LOD_Section_Number:'Mesh_LOD_Section_Number',Mesh_LOD_Section_Vertex_Number:'Mesh_LOD_Section_Vertex_Number',Mesh_LOD_Section_Triangle_Number:'Mesh_LOD_Section_Triangle_Number',Mesh_LOD_Section_Material_Name:'Mesh_LOD_Section_Material_Name',Mesh_LOD_Section_Material_Index:'Mesh_LOD_Section_Material_Index',Mesh_LOD_Section_Material_Imported_Name:'Mesh_LOD_Section_Material_Imported_Name',Mesh_LOD_Vertex_Position:'Mesh_LOD_Vertex_Position',Mesh_LOD_Vertex_Normal:'Mesh_LOD_Vertex_Normal',LOD_UV_Channel_Number:'LOD_UV_Channel_Number',Bone_Number:'Bone_Number',Bone_Position:'Bone_Position',Animation_Frame_Number:'Animation_Frame_Number',Animation_Length:'Animation_Length',EFBXExpectedResultPreset_MAX:'EFBXExpectedResultPreset_MAX', };
 declare class FbxTestPlanExpectedResult { 
 	ExpectedPresetsType: EFBXExpectedResultPreset;
 	ExpectedPresetsDataInteger: number[];
@@ -5514,12 +9256,12 @@ declare class FbxTestPlanExpectedResult {
 	static C(Other: UObject | any): FbxTestPlanExpectedResult;
 }
 
-declare type EFBXImportType = 'FBXIT_StaticMesh' | 'FBXIT_SkeletalMesh' | 'FBXIT_Animation';
-declare var EFBXImportType : { FBXIT_StaticMesh:'FBXIT_StaticMesh',FBXIT_SkeletalMesh:'FBXIT_SkeletalMesh',FBXIT_Animation:'FBXIT_Animation', };
-declare type EFBXNormalImportMethod = 'FBXNIM_ComputeNormals' | 'FBXNIM_ImportNormals' | 'FBXNIM_ImportNormalsAndTangents';
-declare var EFBXNormalImportMethod : { FBXNIM_ComputeNormals:'FBXNIM_ComputeNormals',FBXNIM_ImportNormals:'FBXNIM_ImportNormals',FBXNIM_ImportNormalsAndTangents:'FBXNIM_ImportNormalsAndTangents', };
-declare type EFBXNormalGenerationMethod = 'BuiltIn' | 'MikkTSpace';
-declare var EFBXNormalGenerationMethod : { BuiltIn:'BuiltIn',MikkTSpace:'MikkTSpace', };
+declare type EFBXImportType = 'FBXIT_StaticMesh' | 'FBXIT_SkeletalMesh' | 'FBXIT_Animation' | 'FBXIT_MAX';
+declare var EFBXImportType : { FBXIT_StaticMesh:'FBXIT_StaticMesh',FBXIT_SkeletalMesh:'FBXIT_SkeletalMesh',FBXIT_Animation:'FBXIT_Animation',FBXIT_MAX:'FBXIT_MAX', };
+declare type EFBXNormalImportMethod = 'FBXNIM_ComputeNormals' | 'FBXNIM_ImportNormals' | 'FBXNIM_ImportNormalsAndTangents' | 'FBXNIM_MAX';
+declare var EFBXNormalImportMethod : { FBXNIM_ComputeNormals:'FBXNIM_ComputeNormals',FBXNIM_ImportNormals:'FBXNIM_ImportNormals',FBXNIM_ImportNormalsAndTangents:'FBXNIM_ImportNormalsAndTangents',FBXNIM_MAX:'FBXNIM_MAX', };
+declare type EFBXNormalGenerationMethod = 'BuiltIn' | 'MikkTSpace' | 'EFBXNormalGenerationMethod_MAX';
+declare var EFBXNormalGenerationMethod : { BuiltIn:'BuiltIn',MikkTSpace:'MikkTSpace',EFBXNormalGenerationMethod_MAX:'EFBXNormalGenerationMethod_MAX', };
 declare class ImportMeshLodSectionsData { 
 	SectionOriginalMaterialName: string[];
 	clone() : ImportMeshLodSectionsData;
@@ -5541,8 +9283,8 @@ declare class FbxMeshImportData extends FbxAssetImportData {
 	static C(Other: UObject | any): FbxMeshImportData;
 }
 
-declare type EVertexColorImportOption = 'Replace' | 'Ignore' | 'Override';
-declare var EVertexColorImportOption : { Replace:'Replace',Ignore:'Ignore',Override:'Override', };
+declare type EVertexColorImportOption = 'Replace' | 'Ignore' | 'Override' | 'EVertexColorImportOption_MAX';
+declare var EVertexColorImportOption : { Replace:'Replace',Ignore:'Ignore',Override:'Override',EVertexColorImportOption_MAX:'EVertexColorImportOption_MAX', };
 declare class FbxStaticMeshImportData extends FbxMeshImportData { 
 	StaticMeshLODGroup: string;
 	VertexColorImportOption: EVertexColorImportOption;
@@ -5561,13 +9303,18 @@ declare class FbxStaticMeshImportData extends FbxMeshImportData {
 	static C(Other: UObject | any): FbxStaticMeshImportData;
 }
 
+declare type EFBXImportContentType = 'FBXICT_All' | 'FBXICT_Geometry' | 'FBXICT_SkinningWeights' | 'FBXICT_MAX';
+declare var EFBXImportContentType : { FBXICT_All:'FBXICT_All',FBXICT_Geometry:'FBXICT_Geometry',FBXICT_SkinningWeights:'FBXICT_SkinningWeights',FBXICT_MAX:'FBXICT_MAX', };
 declare class FbxSkeletalMeshImportData extends FbxMeshImportData { 
+	ImportContentType: EFBXImportContentType;
 	bUpdateSkeletonReferencePose: boolean;
 	bUseT0AsRefPose: boolean;
 	bPreserveSmoothingGroups: boolean;
 	bImportMeshesInBoneHierarchy: boolean;
 	bImportMorphTargets: boolean;
-	bKeepOverlappingVertices: boolean;
+	ThresholdPosition: number;
+	ThresholdTangentNormal: number;
+	ThresholdUV: number;
 	static Load(ResourceName: string): FbxSkeletalMeshImportData;
 	static Find(Outer: UObject, ResourceName: string): FbxSkeletalMeshImportData;
 	static GetDefaultObject(): FbxSkeletalMeshImportData;
@@ -5575,12 +9322,12 @@ declare class FbxSkeletalMeshImportData extends FbxMeshImportData {
 	static C(Other: UObject | any): FbxSkeletalMeshImportData;
 }
 
-declare type EMaterialSearchLocation = 'Local' | 'UnderParent' | 'UnderRoot' | 'AllAssets';
-declare var EMaterialSearchLocation : { Local:'Local',UnderParent:'UnderParent',UnderRoot:'UnderRoot',AllAssets:'AllAssets', };
+declare type EMaterialSearchLocation = 'Local' | 'UnderParent' | 'UnderRoot' | 'AllAssets' | 'EMaterialSearchLocation_MAX';
+declare var EMaterialSearchLocation : { Local:'Local',UnderParent:'UnderParent',UnderRoot:'UnderRoot',AllAssets:'AllAssets',EMaterialSearchLocation_MAX:'EMaterialSearchLocation_MAX', };
 declare class FbxTextureImportData extends FbxAssetImportData { 
 	bInvertNormalMaps: boolean;
-	MaterialSearchLocation: MaterialSearchLocation;
-	BaseMaterialName: StringAssetReference;
+	MaterialSearchLocation: EMaterialSearchLocation;
+	BaseMaterialName: SoftObjectPath;
 	BaseColorName: string;
 	BaseDiffuseTextureName: string;
 	BaseNormalTextureName: string;
@@ -5625,18 +9372,26 @@ declare class FbxImportUI extends UObject {
 	AnimSequenceImportData: FbxAnimSequenceImportData;
 	TextureImportData: FbxTextureImportData;
 	bAutomatedImportShouldDetectType: boolean;
-	bResetMaterialSlots: boolean;
+	FileVersion: string;
+	FileCreator: string;
+	FileCreatorApplication: string;
+	FileUnits: string;
+	FileAxisDirection: string;
+	FileSampleRate: string;
+	AnimStartFrame: string;
+	AnimEndFrame: string;
 	static Load(ResourceName: string): FbxImportUI;
 	static Find(Outer: UObject, ResourceName: string): FbxImportUI;
 	static GetDefaultObject(): FbxImportUI;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxImportUI;
+	ResetToDefault(): void;
 	static C(Other: UObject | any): FbxImportUI;
 }
 
 declare class FbxTestPlan extends UObject { 
 	TestPlanName: string;
 	Action: EFBXTestPlanActionType;
-	LodIndex: number;
+	LODIndex: number;
 	bDeleteFolderAssets: boolean;
 	ExpectedResult: FbxTestPlanExpectedResult[];
 	ImportUI: FbxImportUI;
@@ -5647,8 +9402,26 @@ declare class FbxTestPlan extends UObject {
 	static C(Other: UObject | any): FbxTestPlan;
 }
 
+declare type EFbxExportCompatibility = 'FBX_2011' | 'FBX_2012' | 'FBX_2013' | 'FBX_2014' | 'FBX_2016' | 'FBX_2018' | 'FBX_MAX';
+declare var EFbxExportCompatibility : { FBX_2011:'FBX_2011',FBX_2012:'FBX_2012',FBX_2013:'FBX_2013',FBX_2014:'FBX_2014',FBX_2016:'FBX_2016',FBX_2018:'FBX_2018',FBX_MAX:'FBX_MAX', };
+declare class FbxExportOption extends UObject { 
+	FbxExportCompatibility: EFbxExportCompatibility;
+	bASCII: boolean;
+	bForceFrontXAxis: boolean;
+	VertexColor: boolean;
+	LevelOfDetail: boolean;
+	Collision: boolean;
+	MapSkeletalMotionToRoot: boolean;
+	static Load(ResourceName: string): FbxExportOption;
+	static Find(Outer: UObject, ResourceName: string): FbxExportOption;
+	static GetDefaultObject(): FbxExportOption;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FbxExportOption;
+	static C(Other: UObject | any): FbxExportOption;
+}
+
 declare class FbxFactory extends Factory { 
 	ImportUI: FbxImportUI;
+	OriginalImportUI: FbxImportUI;
 	static Load(ResourceName: string): FbxFactory;
 	static Find(Outer: UObject, ResourceName: string): FbxFactory;
 	static GetDefaultObject(): FbxFactory;
@@ -5664,8 +9437,8 @@ declare class SceneImportFactory extends Factory {
 	static C(Other: UObject | any): SceneImportFactory;
 }
 
-declare type EFBXSceneOptionsCreateHierarchyType = 'FBXSOCHT_CreateLevelActors' | 'FBXSOCHT_CreateActorComponents' | 'FBXSOCHT_CreateBlueprint';
-declare var EFBXSceneOptionsCreateHierarchyType : { FBXSOCHT_CreateLevelActors:'FBXSOCHT_CreateLevelActors',FBXSOCHT_CreateActorComponents:'FBXSOCHT_CreateActorComponents',FBXSOCHT_CreateBlueprint:'FBXSOCHT_CreateBlueprint', };
+declare type EFBXSceneOptionsCreateHierarchyType = 'FBXSOCHT_CreateLevelActors' | 'FBXSOCHT_CreateActorComponents' | 'FBXSOCHT_CreateBlueprint' | 'FBXSOCHT_MAX';
+declare var EFBXSceneOptionsCreateHierarchyType : { FBXSOCHT_CreateLevelActors:'FBXSOCHT_CreateLevelActors',FBXSOCHT_CreateActorComponents:'FBXSOCHT_CreateActorComponents',FBXSOCHT_CreateBlueprint:'FBXSOCHT_CreateBlueprint',FBXSOCHT_MAX:'FBXSOCHT_MAX', };
 declare class FbxSceneImportOptions extends UObject { 
 	bCreateContentFolderHierarchy: boolean;
 	bImportAsDynamic: boolean;
@@ -5686,12 +9459,12 @@ declare class FbxSceneImportOptions extends UObject {
 	static C(Other: UObject | any): FbxSceneImportOptions;
 }
 
-declare type EFbxSceneVertexColorImportOption = 'Replace' | 'Ignore' | 'Override';
-declare var EFbxSceneVertexColorImportOption : { Replace:'Replace',Ignore:'Ignore',Override:'Override', };
-declare type EFBXSceneNormalImportMethod = 'FBXSceneNIM_ComputeNormals' | 'FBXSceneNIM_ImportNormals' | 'FBXSceneNIM_ImportNormalsAndTangents';
-declare var EFBXSceneNormalImportMethod : { FBXSceneNIM_ComputeNormals:'FBXSceneNIM_ComputeNormals',FBXSceneNIM_ImportNormals:'FBXSceneNIM_ImportNormals',FBXSceneNIM_ImportNormalsAndTangents:'FBXSceneNIM_ImportNormalsAndTangents', };
-declare type EFBXSceneNormalGenerationMethod = 'BuiltIn' | 'MikkTSpace';
-declare var EFBXSceneNormalGenerationMethod : { BuiltIn:'BuiltIn',MikkTSpace:'MikkTSpace', };
+declare type EFbxSceneVertexColorImportOption = 'Replace' | 'Ignore' | 'Override' | 'EFbxSceneVertexColorImportOption_MAX';
+declare var EFbxSceneVertexColorImportOption : { Replace:'Replace',Ignore:'Ignore',Override:'Override',EFbxSceneVertexColorImportOption_MAX:'EFbxSceneVertexColorImportOption_MAX', };
+declare type EFBXSceneNormalImportMethod = 'FBXSceneNIM_ComputeNormals' | 'FBXSceneNIM_ImportNormals' | 'FBXSceneNIM_ImportNormalsAndTangents' | 'FBXSceneNIM_MAX';
+declare var EFBXSceneNormalImportMethod : { FBXSceneNIM_ComputeNormals:'FBXSceneNIM_ComputeNormals',FBXSceneNIM_ImportNormals:'FBXSceneNIM_ImportNormals',FBXSceneNIM_ImportNormalsAndTangents:'FBXSceneNIM_ImportNormalsAndTangents',FBXSceneNIM_MAX:'FBXSceneNIM_MAX', };
+declare type EFBXSceneNormalGenerationMethod = 'BuiltIn' | 'MikkTSpace' | 'EFBXSceneNormalGenerationMethod_MAX';
+declare var EFBXSceneNormalGenerationMethod : { BuiltIn:'BuiltIn',MikkTSpace:'MikkTSpace',EFBXSceneNormalGenerationMethod_MAX:'EFBXSceneNormalGenerationMethod_MAX', };
 declare class FbxSceneImportOptionsStaticMesh extends UObject { 
 	StaticMeshLODGroup: string;
 	bAutoGenerateCollision: boolean;
@@ -5718,11 +9491,14 @@ declare class FbxSceneImportOptionsSkeletalMesh extends UObject {
 	bPreserveSmoothingGroups: boolean;
 	bImportMeshesInBoneHierarchy: boolean;
 	bImportMorphTargets: boolean;
-	bKeepOverlappingVertices: boolean;
+	ThresholdPosition: number;
+	ThresholdTangentNormal: number;
+	ThresholdUV: number;
 	bImportAnimations: boolean;
 	AnimationLength: EFBXAnimationLengthImportType;
 	FrameImportRange: Int32Interval;
 	bUseDefaultSampleRate: boolean;
+	CustomSampleRate: number;
 	bImportCustomAttribute: boolean;
 	bPreserveLocalTransform: boolean;
 	bDeleteExistingMorphTargetCurves: boolean;
@@ -5754,8 +9530,12 @@ declare class EditorLoadingAndSavingUtils extends UObject {
 	static Find(Outer: UObject, ResourceName: string): EditorLoadingAndSavingUtils;
 	static GetDefaultObject(): EditorLoadingAndSavingUtils;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorLoadingAndSavingUtils;
+	static UnloadPackages(PackagesToUnload: Package[],bOutAnyPackagesUnloaded?: boolean,OutErrorMessage?: string): {bOutAnyPackagesUnloaded: boolean, OutErrorMessage: string};
+	static SavePackagesWithDialog(PackagesToSave: Package[],bOnlyDirty: boolean): boolean;
+	static SavePackages(PackagesToSave: Package[],bOnlyDirty: boolean): boolean;
 	static SaveMap(World: World,AssetPath: string): boolean;
-	static SaveDirtyPackages(bSaveMapPackages: boolean,bSaveContentPackages: boolean,bPromptUser: boolean): boolean;
+	static SaveDirtyPackagesWithDialog(bSaveMapPackages: boolean,bSaveContentPackages: boolean): boolean;
+	static SaveDirtyPackages(bSaveMapPackages: boolean,bSaveContentPackages: boolean): boolean;
 	static SaveCurrentLevel(): boolean;
 	static NewMapFromTemplate(PathToTemplateLevel: string,bSaveExistingMap: boolean): World;
 	static NewBlankMap(bSaveExistingMap: boolean): World;
@@ -5960,7 +9740,23 @@ declare class HapticFeedbackEffectSoundWaveFactory extends Factory {
 	static C(Other: UObject | any): HapticFeedbackEffectSoundWaveFactory;
 }
 
+declare class HierarchicalLODSettings extends DeveloperSettings { 
+	bForceSettingsInAllMaps: boolean;
+	DefaultSetup: Class;
+	DirectoriesForHLODCommandlet: DirectoryPath[];
+	MapsToBuild: FilePath[];
+	bInvalidateHLODClusters: boolean;
+	bDeleteHLODAssets: boolean;
+	BaseMaterial: MaterialInterface;
+	static Load(ResourceName: string): HierarchicalLODSettings;
+	static Find(Outer: UObject, ResourceName: string): HierarchicalLODSettings;
+	static GetDefaultObject(): HierarchicalLODSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HierarchicalLODSettings;
+	static C(Other: UObject | any): HierarchicalLODSettings;
+}
+
 declare class HierarchicalLODVolume extends Volume { 
+	bIncludeOverlappingActors: boolean;
 	static GetDefaultObject(): HierarchicalLODVolume;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HierarchicalLODVolume;
 	static C(Other: UObject | any): HierarchicalLODVolume;
@@ -6035,25 +9831,27 @@ declare class LevelEditorMiscSettings extends DeveloperSettings {
 	static C(Other: UObject | any): LevelEditorMiscSettings;
 }
 
-declare type ELabelAnchorMode = 'LabelAnchorMode_TopLeft' | 'LabelAnchorMode_TopCenter' | 'LabelAnchorMode_TopRight' | 'LabelAnchorMode_CenterLeft' | 'LabelAnchorMode_Centered' | 'LabelAnchorMode_CenterRight' | 'LabelAnchorMode_BottomLeft' | 'LabelAnchorMode_BottomCenter' | 'LabelAnchorMode_BottomRight';
-declare var ELabelAnchorMode : { LabelAnchorMode_TopLeft:'LabelAnchorMode_TopLeft',LabelAnchorMode_TopCenter:'LabelAnchorMode_TopCenter',LabelAnchorMode_TopRight:'LabelAnchorMode_TopRight',LabelAnchorMode_CenterLeft:'LabelAnchorMode_CenterLeft',LabelAnchorMode_Centered:'LabelAnchorMode_Centered',LabelAnchorMode_CenterRight:'LabelAnchorMode_CenterRight',LabelAnchorMode_BottomLeft:'LabelAnchorMode_BottomLeft',LabelAnchorMode_BottomCenter:'LabelAnchorMode_BottomCenter',LabelAnchorMode_BottomRight:'LabelAnchorMode_BottomRight', };
-declare type EPlayOnBuildMode = 'PlayOnBuild_Always' | 'PlayOnBuild_Never' | 'PlayOnBuild_Default';
-declare var EPlayOnBuildMode : { PlayOnBuild_Always:'PlayOnBuild_Always',PlayOnBuild_Never:'PlayOnBuild_Never',PlayOnBuild_Default:'PlayOnBuild_Default', };
-declare type EPlayOnLaunchConfiguration = 'LaunchConfig_Default' | 'LaunchConfig_Debug' | 'LaunchConfig_Development' | 'LaunchConfig_Test' | 'LaunchConfig_Shipping';
-declare var EPlayOnLaunchConfiguration : { LaunchConfig_Default:'LaunchConfig_Default',LaunchConfig_Debug:'LaunchConfig_Debug',LaunchConfig_Development:'LaunchConfig_Development',LaunchConfig_Test:'LaunchConfig_Test',LaunchConfig_Shipping:'LaunchConfig_Shipping', };
-declare type EPlayNetMode = 'PIE_Standalone' | 'PIE_ListenServer' | 'PIE_Client';
-declare var EPlayNetMode : { PIE_Standalone:'PIE_Standalone',PIE_ListenServer:'PIE_ListenServer',PIE_Client:'PIE_Client', };
-declare type ELaunchModeType = 'LaunchMode_OnDevice';
-declare var ELaunchModeType : { LaunchMode_OnDevice:'LaunchMode_OnDevice', };
-declare type EPlayModeLocations = 'PlayLocation_CurrentCameraLocation' | 'PlayLocation_DefaultPlayerStart';
-declare var EPlayModeLocations : { PlayLocation_CurrentCameraLocation:'PlayLocation_CurrentCameraLocation',PlayLocation_DefaultPlayerStart:'PlayLocation_DefaultPlayerStart', };
-declare type EPlayModeType = 'PlayMode_InViewPort' | 'PlayMode_InEditorFloating' | 'PlayMode_InMobilePreview' | 'PlayMode_InTargetedMobilePreview' | 'PlayMode_InVulkanPreview' | 'PlayMode_InNewProcess' | 'PlayMode_InVR' | 'PlayMode_Simulate' | 'PlayMode_Count';
-declare var EPlayModeType : { PlayMode_InViewPort:'PlayMode_InViewPort',PlayMode_InEditorFloating:'PlayMode_InEditorFloating',PlayMode_InMobilePreview:'PlayMode_InMobilePreview',PlayMode_InTargetedMobilePreview:'PlayMode_InTargetedMobilePreview',PlayMode_InVulkanPreview:'PlayMode_InVulkanPreview',PlayMode_InNewProcess:'PlayMode_InNewProcess',PlayMode_InVR:'PlayMode_InVR',PlayMode_Simulate:'PlayMode_Simulate',PlayMode_Count:'PlayMode_Count', };
+declare type ELabelAnchorMode = 'LabelAnchorMode_TopLeft' | 'LabelAnchorMode_TopCenter' | 'LabelAnchorMode_TopRight' | 'LabelAnchorMode_CenterLeft' | 'LabelAnchorMode_Centered' | 'LabelAnchorMode_CenterRight' | 'LabelAnchorMode_BottomLeft' | 'LabelAnchorMode_BottomCenter' | 'LabelAnchorMode_BottomRight' | 'LabelAnchorMode_MAX';
+declare var ELabelAnchorMode : { LabelAnchorMode_TopLeft:'LabelAnchorMode_TopLeft',LabelAnchorMode_TopCenter:'LabelAnchorMode_TopCenter',LabelAnchorMode_TopRight:'LabelAnchorMode_TopRight',LabelAnchorMode_CenterLeft:'LabelAnchorMode_CenterLeft',LabelAnchorMode_Centered:'LabelAnchorMode_Centered',LabelAnchorMode_CenterRight:'LabelAnchorMode_CenterRight',LabelAnchorMode_BottomLeft:'LabelAnchorMode_BottomLeft',LabelAnchorMode_BottomCenter:'LabelAnchorMode_BottomCenter',LabelAnchorMode_BottomRight:'LabelAnchorMode_BottomRight',LabelAnchorMode_MAX:'LabelAnchorMode_MAX', };
+declare type EPlayOnBuildMode = 'PlayOnBuild_Always' | 'PlayOnBuild_Never' | 'PlayOnBuild_Default' | 'PlayOnBuild_IfEditorBuiltLocally' | 'PlayOnBuild_MAX';
+declare var EPlayOnBuildMode : { PlayOnBuild_Always:'PlayOnBuild_Always',PlayOnBuild_Never:'PlayOnBuild_Never',PlayOnBuild_Default:'PlayOnBuild_Default',PlayOnBuild_IfEditorBuiltLocally:'PlayOnBuild_IfEditorBuiltLocally',PlayOnBuild_MAX:'PlayOnBuild_MAX', };
+declare type EPlayOnLaunchConfiguration = 'LaunchConfig_Default' | 'LaunchConfig_Debug' | 'LaunchConfig_Development' | 'LaunchConfig_Test' | 'LaunchConfig_Shipping' | 'LaunchConfig_MAX';
+declare var EPlayOnLaunchConfiguration : { LaunchConfig_Default:'LaunchConfig_Default',LaunchConfig_Debug:'LaunchConfig_Debug',LaunchConfig_Development:'LaunchConfig_Development',LaunchConfig_Test:'LaunchConfig_Test',LaunchConfig_Shipping:'LaunchConfig_Shipping',LaunchConfig_MAX:'LaunchConfig_MAX', };
+declare type EPlayNetMode = 'PIE_Standalone' | 'PIE_ListenServer' | 'PIE_Client' | 'PIE_MAX';
+declare var EPlayNetMode : { PIE_Standalone:'PIE_Standalone',PIE_ListenServer:'PIE_ListenServer',PIE_Client:'PIE_Client',PIE_MAX:'PIE_MAX', };
+declare type ELaunchModeType = 'LaunchMode_OnDevice' | 'LaunchMode_MAX';
+declare var ELaunchModeType : { LaunchMode_OnDevice:'LaunchMode_OnDevice',LaunchMode_MAX:'LaunchMode_MAX', };
+declare type EPlayModeLocations = 'PlayLocation_CurrentCameraLocation' | 'PlayLocation_DefaultPlayerStart' | 'PlayLocation_MAX';
+declare var EPlayModeLocations : { PlayLocation_CurrentCameraLocation:'PlayLocation_CurrentCameraLocation',PlayLocation_DefaultPlayerStart:'PlayLocation_DefaultPlayerStart',PlayLocation_MAX:'PlayLocation_MAX', };
+declare type EPlayModeType = 'PlayMode_InViewPort' | 'PlayMode_InEditorFloating' | 'PlayMode_InMobilePreview' | 'PlayMode_InTargetedMobilePreview' | 'PlayMode_InVulkanPreview' | 'PlayMode_InNewProcess' | 'PlayMode_InVR' | 'PlayMode_Simulate' | 'PlayMode_Count' | 'PlayMode_MAX';
+declare var EPlayModeType : { PlayMode_InViewPort:'PlayMode_InViewPort',PlayMode_InEditorFloating:'PlayMode_InEditorFloating',PlayMode_InMobilePreview:'PlayMode_InMobilePreview',PlayMode_InTargetedMobilePreview:'PlayMode_InTargetedMobilePreview',PlayMode_InVulkanPreview:'PlayMode_InVulkanPreview',PlayMode_InNewProcess:'PlayMode_InNewProcess',PlayMode_InVR:'PlayMode_InVR',PlayMode_Simulate:'PlayMode_Simulate',PlayMode_Count:'PlayMode_Count',PlayMode_MAX:'PlayMode_MAX', };
 declare class PlayScreenResolution { 
 	Description: string;
 	Width: number;
 	Height: number;
 	AspectRatio: string;
+	bCanSwapAspectRatio: boolean;
+	ProfileName: string;
 	clone() : PlayScreenResolution;
 	static C(Other: UObject | any): PlayScreenResolution;
 }
@@ -6061,6 +9859,7 @@ declare class PlayScreenResolution {
 declare class LevelEditorPlaySettings extends UObject { 
 	PlayFromHerePlayerStartClassName: string;
 	GameGetsMouseControl: boolean;
+	UseMouseForTouch: boolean;
 	ShowMouseControlLabel: boolean;
 	MouseControlLabelPosition: ELabelAnchorMode;
 	ViewportGetsHMDControl: boolean;
@@ -6071,17 +9870,13 @@ declare class LevelEditorPlaySettings extends UObject {
 	PlayInEditorSoundQualityLevel: number;
 	bOnlyLoadVisibleLevelsInPIE: boolean;
 	bPreferToStreamLevelsInPIE: boolean;
-	bBindSequencerToPIE: boolean;
-	bBindSequencerToSimulate: boolean;
-	PIEAlwaysOnTop: boolean;
 	NewWindowWidth: number;
 	NewWindowHeight: number;
 	NewWindowPosition: IntPoint;
 	CenterNewWindow: boolean;
-	StandaloneWindowWidth: number;
-	StandaloneWindowHeight: number;
-	StandaloneWindowPosition: IntPoint;
-	CenterStandaloneWindow: boolean;
+	bBindSequencerToPIE: boolean;
+	bBindSequencerToSimulate: boolean;
+	PIEAlwaysOnTop: boolean;
 	DisableStandaloneSound: boolean;
 	AdditionalLaunchParameters: string;
 	BuildGameBeforeLaunch: EPlayOnBuildMode;
@@ -6091,6 +9886,7 @@ declare class LevelEditorPlaySettings extends UObject {
 	RunUnderOneProcess: boolean;
 	PlayNetDedicated: boolean;
 	PlayNumberOfClients: number;
+	ServerPort: any;
 	ClientWindowWidth: number;
 	AutoConnectToServer: boolean;
 	RouteGamepadToSecondWindow: boolean;
@@ -6112,6 +9908,10 @@ declare class LevelEditorPlaySettings extends UObject {
 	PhoneScreenResolutions: PlayScreenResolution[];
 	TabletScreenResolutions: PlayScreenResolution[];
 	TelevisionScreenResolutions: PlayScreenResolution[];
+	DeviceToEmulate: string;
+	PIESafeZoneOverride: Margin;
+	CustomUnsafeZoneStarts: Vector2D[];
+	CustomUnsafeZoneDimensions: Vector2D[];
 	static Load(ResourceName: string): LevelEditorPlaySettings;
 	static Find(Outer: UObject, ResourceName: string): LevelEditorPlaySettings;
 	static GetDefaultObject(): LevelEditorPlaySettings;
@@ -6119,12 +9919,12 @@ declare class LevelEditorPlaySettings extends UObject {
 	static C(Other: UObject | any): LevelEditorPlaySettings;
 }
 
-declare type EWASDType = 'WASD_Always' | 'WASD_RMBOnly' | 'WASD_Never';
-declare var EWASDType : { WASD_Always:'WASD_Always',WASD_RMBOnly:'WASD_RMBOnly',WASD_Never:'WASD_Never', };
-declare type ELandscapeFoliageEditorControlType = 'IgnoreCtrl' | 'RequireCtrl' | 'RequireNoCtrl';
-declare var ELandscapeFoliageEditorControlType : { IgnoreCtrl:'IgnoreCtrl',RequireCtrl:'RequireCtrl',RequireNoCtrl:'RequireNoCtrl', };
-declare type EScrollGestureDirection = 'UseSystemSetting' | 'Standard' | 'Natural';
-declare var EScrollGestureDirection : { UseSystemSetting:'UseSystemSetting',Standard:'Standard',Natural:'Natural', };
+declare type EWASDType = 'WASD_Always' | 'WASD_RMBOnly' | 'WASD_Never' | 'WASD_MAX';
+declare var EWASDType : { WASD_Always:'WASD_Always',WASD_RMBOnly:'WASD_RMBOnly',WASD_Never:'WASD_Never',WASD_MAX:'WASD_MAX', };
+declare type ELandscapeFoliageEditorControlType = 'IgnoreCtrl' | 'RequireCtrl' | 'RequireNoCtrl' | 'ELandscapeFoliageEditorControlType_MAX';
+declare var ELandscapeFoliageEditorControlType : { IgnoreCtrl:'IgnoreCtrl',RequireCtrl:'RequireCtrl',RequireNoCtrl:'RequireNoCtrl',ELandscapeFoliageEditorControlType_MAX:'ELandscapeFoliageEditorControlType_MAX', };
+declare type EScrollGestureDirection = 'UseSystemSetting' | 'Standard' | 'Natural' | 'EScrollGestureDirection_MAX';
+declare var EScrollGestureDirection : { UseSystemSetting:'UseSystemSetting',Standard:'Standard',Natural:'Natural',EScrollGestureDirection_MAX:'EScrollGestureDirection_MAX', };
 declare class SnapToSurfaceSettings { 
 	bEnabled: boolean;
 	SnapOffsetExtent: number;
@@ -6133,16 +9933,16 @@ declare class SnapToSurfaceSettings {
 	static C(Other: UObject | any): SnapToSurfaceSettings;
 }
 
-declare type ERotationGridMode = 'GridMode_DivisionsOf360' | 'GridMode_Common';
-declare var ERotationGridMode : { GridMode_DivisionsOf360:'GridMode_DivisionsOf360',GridMode_Common:'GridMode_Common', };
-declare type EMeasuringToolUnits = 'MeasureUnits_Centimeters' | 'MeasureUnits_Meters' | 'MeasureUnits_Kilometers';
-declare var EMeasuringToolUnits : { MeasureUnits_Centimeters:'MeasureUnits_Centimeters',MeasureUnits_Meters:'MeasureUnits_Meters',MeasureUnits_Kilometers:'MeasureUnits_Kilometers', };
-declare type ELevelViewportType = 'LVT_OrthoXY' | 'LVT_OrthoXZ' | 'LVT_OrthoYZ' | 'LVT_Perspective' | 'LVT_OrthoFreelook' | 'LVT_OrthoNegativeXY' | 'LVT_OrthoNegativeXZ' | 'LVT_OrthoNegativeYZ' | 'LVT_MAX' | 'LVT_None' | '';
-declare var ELevelViewportType : { LVT_OrthoXY:'LVT_OrthoXY',LVT_OrthoXZ:'LVT_OrthoXZ',LVT_OrthoYZ:'LVT_OrthoYZ',LVT_Perspective:'LVT_Perspective',LVT_OrthoFreelook:'LVT_OrthoFreelook',LVT_OrthoNegativeXY:'LVT_OrthoNegativeXY',LVT_OrthoNegativeXZ:'LVT_OrthoNegativeXZ',LVT_OrthoNegativeYZ:'LVT_OrthoNegativeYZ',LVT_MAX:'LVT_MAX',LVT_None:'LVT_None',:'', };
-declare type EViewModeIndex = 'VMI_BrushWireframe' | 'VMI_Wireframe' | 'VMI_Unlit' | 'VMI_Lit' | 'VMI_Lit_DetailLighting' | 'VMI_LightingOnly' | 'VMI_LightComplexity' | 'VMI_ShaderComplexity' | 'VMI_LightmapDensity' | 'VMI_LitLightmapDensity' | 'VMI_ReflectionOverride' | 'VMI_VisualizeBuffer' | 'VMI_StationaryLightOverlap' | 'VMI_CollisionPawn' | 'VMI_CollisionVisibility' | 'VMI_LODColoration' | 'VMI_QuadOverdraw' | 'VMI_PrimitiveDistanceAccuracy' | 'VMI_MeshUVDensityAccuracy' | 'VMI_ShaderComplexityWithQuadOverdraw' | 'VMI_HLODColoration' | 'VMI_GroupLODColoration' | 'VMI_MaterialTextureScaleAccuracy' | 'VMI_RequiredTextureResolution' | 'VMI_Max' | 'VMI_Unknown' | '';
-declare var EViewModeIndex : { VMI_BrushWireframe:'VMI_BrushWireframe',VMI_Wireframe:'VMI_Wireframe',VMI_Unlit:'VMI_Unlit',VMI_Lit:'VMI_Lit',VMI_Lit_DetailLighting:'VMI_Lit_DetailLighting',VMI_LightingOnly:'VMI_LightingOnly',VMI_LightComplexity:'VMI_LightComplexity',VMI_ShaderComplexity:'VMI_ShaderComplexity',VMI_LightmapDensity:'VMI_LightmapDensity',VMI_LitLightmapDensity:'VMI_LitLightmapDensity',VMI_ReflectionOverride:'VMI_ReflectionOverride',VMI_VisualizeBuffer:'VMI_VisualizeBuffer',VMI_StationaryLightOverlap:'VMI_StationaryLightOverlap',VMI_CollisionPawn:'VMI_CollisionPawn',VMI_CollisionVisibility:'VMI_CollisionVisibility',VMI_LODColoration:'VMI_LODColoration',VMI_QuadOverdraw:'VMI_QuadOverdraw',VMI_PrimitiveDistanceAccuracy:'VMI_PrimitiveDistanceAccuracy',VMI_MeshUVDensityAccuracy:'VMI_MeshUVDensityAccuracy',VMI_ShaderComplexityWithQuadOverdraw:'VMI_ShaderComplexityWithQuadOverdraw',VMI_HLODColoration:'VMI_HLODColoration',VMI_GroupLODColoration:'VMI_GroupLODColoration',VMI_MaterialTextureScaleAccuracy:'VMI_MaterialTextureScaleAccuracy',VMI_RequiredTextureResolution:'VMI_RequiredTextureResolution',VMI_Max:'VMI_Max',VMI_Unknown:'VMI_Unknown',:'', };
+declare type ERotationGridMode = 'GridMode_DivisionsOf360' | 'GridMode_Common' | 'GridMode_MAX';
+declare var ERotationGridMode : { GridMode_DivisionsOf360:'GridMode_DivisionsOf360',GridMode_Common:'GridMode_Common',GridMode_MAX:'GridMode_MAX', };
+declare type EMeasuringToolUnits = 'MeasureUnits_Centimeters' | 'MeasureUnits_Meters' | 'MeasureUnits_Kilometers' | 'MeasureUnits_MAX';
+declare var EMeasuringToolUnits : { MeasureUnits_Centimeters:'MeasureUnits_Centimeters',MeasureUnits_Meters:'MeasureUnits_Meters',MeasureUnits_Kilometers:'MeasureUnits_Kilometers',MeasureUnits_MAX:'MeasureUnits_MAX', };
+declare type ELevelViewportType = 'LVT_OrthoXY' | 'LVT_OrthoXZ' | 'LVT_OrthoYZ' | 'LVT_Perspective' | 'LVT_OrthoFreelook' | 'LVT_OrthoNegativeXY' | 'LVT_OrthoNegativeXZ' | 'LVT_OrthoNegativeYZ' | 'LVT_MAX' | 'LVT_None';
+declare var ELevelViewportType : { LVT_OrthoXY:'LVT_OrthoXY',LVT_OrthoXZ:'LVT_OrthoXZ',LVT_OrthoYZ:'LVT_OrthoYZ',LVT_Perspective:'LVT_Perspective',LVT_OrthoFreelook:'LVT_OrthoFreelook',LVT_OrthoNegativeXY:'LVT_OrthoNegativeXY',LVT_OrthoNegativeXZ:'LVT_OrthoNegativeXZ',LVT_OrthoNegativeYZ:'LVT_OrthoNegativeYZ',LVT_MAX:'LVT_MAX',LVT_None:'LVT_None', };
+declare type EViewModeIndex = 'VMI_BrushWireframe' | 'VMI_Wireframe' | 'VMI_Unlit' | 'VMI_Lit' | 'VMI_Lit_DetailLighting' | 'VMI_LightingOnly' | 'VMI_LightComplexity' | 'VMI_ShaderComplexity' | 'VMI_LightmapDensity' | 'VMI_LitLightmapDensity' | 'VMI_ReflectionOverride' | 'VMI_VisualizeBuffer' | 'VMI_StationaryLightOverlap' | 'VMI_CollisionPawn' | 'VMI_CollisionVisibility' | 'VMI_LODColoration' | 'VMI_QuadOverdraw' | 'VMI_PrimitiveDistanceAccuracy' | 'VMI_MeshUVDensityAccuracy' | 'VMI_ShaderComplexityWithQuadOverdraw' | 'VMI_HLODColoration' | 'VMI_GroupLODColoration' | 'VMI_MaterialTextureScaleAccuracy' | 'VMI_RequiredTextureResolution' | 'VMI_Max' | 'VMI_Unknown';
+declare var EViewModeIndex : { VMI_BrushWireframe:'VMI_BrushWireframe',VMI_Wireframe:'VMI_Wireframe',VMI_Unlit:'VMI_Unlit',VMI_Lit:'VMI_Lit',VMI_Lit_DetailLighting:'VMI_Lit_DetailLighting',VMI_LightingOnly:'VMI_LightingOnly',VMI_LightComplexity:'VMI_LightComplexity',VMI_ShaderComplexity:'VMI_ShaderComplexity',VMI_LightmapDensity:'VMI_LightmapDensity',VMI_LitLightmapDensity:'VMI_LitLightmapDensity',VMI_ReflectionOverride:'VMI_ReflectionOverride',VMI_VisualizeBuffer:'VMI_VisualizeBuffer',VMI_StationaryLightOverlap:'VMI_StationaryLightOverlap',VMI_CollisionPawn:'VMI_CollisionPawn',VMI_CollisionVisibility:'VMI_CollisionVisibility',VMI_LODColoration:'VMI_LODColoration',VMI_QuadOverdraw:'VMI_QuadOverdraw',VMI_PrimitiveDistanceAccuracy:'VMI_PrimitiveDistanceAccuracy',VMI_MeshUVDensityAccuracy:'VMI_MeshUVDensityAccuracy',VMI_ShaderComplexityWithQuadOverdraw:'VMI_ShaderComplexityWithQuadOverdraw',VMI_HLODColoration:'VMI_HLODColoration',VMI_GroupLODColoration:'VMI_GroupLODColoration',VMI_MaterialTextureScaleAccuracy:'VMI_MaterialTextureScaleAccuracy',VMI_RequiredTextureResolution:'VMI_RequiredTextureResolution',VMI_Max:'VMI_Max',VMI_Unknown:'VMI_Unknown', };
 declare class ExposureSettings { 
-	LogOffset: number;
+	FixedEV100: number;
 	bFixed: boolean;
 	clone() : ExposureSettings;
 	static C(Other: UObject | any): ExposureSettings;
@@ -6176,13 +9976,14 @@ declare class LevelEditorViewportInstanceSettingsKeyValuePair {
 
 declare class LevelEditorViewportSettings extends UObject { 
 	FlightCameraControlType: EWASDType;
-	LandscapeEditorControlType: LandscapeEditorControlType;
-	FoliageEditorControlType: FoliageEditorControlType;
+	LandscapeEditorControlType: ELandscapeFoliageEditorControlType;
+	FoliageEditorControlType: ELandscapeFoliageEditorControlType;
 	bPanMovesCanvas: boolean;
 	bCenterZoomAroundCursor: boolean;
 	bAllowTranslateRotateZWidget: boolean;
 	bClickBSPSelectsBrush: boolean;
 	CameraSpeed: number;
+	CameraSpeedScalar: number;
 	MouseScrollCameraSpeed: number;
 	MouseSensitivty: number;
 	bInvertMouseLookYAxis: boolean;
@@ -6191,8 +9992,8 @@ declare class LevelEditorViewportSettings extends UObject {
 	bUseAbsoluteTranslation: boolean;
 	bLevelStreamingVolumePrevis: boolean;
 	bUseUE3OrbitControls: boolean;
-	ScrollGestureDirectionFor3DViewports: ScrollGestureDirectionFor3DViewports;
-	ScrollGestureDirectionForOrthoViewports: ScrollGestureDirectionForOrthoViewports;
+	ScrollGestureDirectionFor3DViewports: EScrollGestureDirection;
+	ScrollGestureDirectionForOrthoViewports: EScrollGestureDirection;
 	bLevelEditorJoystickControls: boolean;
 	bUsePowerOf2SnapSize: boolean;
 	DecimalGridSizes: number[];
@@ -6233,7 +10034,7 @@ declare class LevelEditorViewportSettings extends UObject {
 	bPreviewSelectedCameras: boolean;
 	CameraPreviewSize: number;
 	BackgroundDropDistance: number;
-	PreviewMeshes: StringAssetReference[];
+	PreviewMeshes: SoftObjectPath[];
 	BillboardScale: number;
 	TransformWidgetSizeAdjustment: number;
 	bSaveEngineStats: boolean;
@@ -6246,7 +10047,7 @@ declare class LevelEditorViewportSettings extends UObject {
 	static C(Other: UObject | any): LevelEditorViewportSettings;
 }
 
-declare class LevelExporterFBX extends Exporter { 
+declare class LevelExporterFBX extends ExporterFBX { 
 	static Load(ResourceName: string): LevelExporterFBX;
 	static Find(Outer: UObject, ResourceName: string): LevelExporterFBX;
 	static GetDefaultObject(): LevelExporterFBX;
@@ -6381,12 +10182,30 @@ declare class LoadPackageCommandlet extends Commandlet {
 
 declare class EditorParameterGroup { 
 	GroupName: string;
+	GroupAssociation: EMaterialParameterAssociation;
 	Parameters: DEditorParameterValue[];
 	GroupSortPriority: number;
 	clone() : EditorParameterGroup;
 	static C(Other: UObject | any): EditorParameterGroup;
 }
 
+declare class MaterialFunctionInstance extends MaterialFunctionInterface { 
+	Parent: MaterialFunctionInterface;
+	Base: MaterialFunctionInterface;
+	ScalarParameterValues: ScalarParameterValue[];
+	VectorParameterValues: VectorParameterValue[];
+	TextureParameterValues: TextureParameterValue[];
+	FontParameterValues: FontParameterValue[];
+	StaticSwitchParameterValues: StaticSwitchParameter[];
+	StaticComponentMaskParameterValues: StaticComponentMaskParameter[];
+	PreviewMaterial: MaterialInstanceConstant;
+	static Load(ResourceName: string): MaterialFunctionInstance;
+	static Find(Outer: UObject, ResourceName: string): MaterialFunctionInstance;
+	static GetDefaultObject(): MaterialFunctionInstance;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionInstance;
+	static C(Other: UObject | any): MaterialFunctionInstance;
+}
+
 declare class LightmassParameterValue { 
 	bOverride: boolean;
 	clone() : LightmassParameterValue;
@@ -6422,11 +10241,16 @@ declare class MaterialEditorInstanceConstant extends UObject {
 	SubsurfaceProfile: SubsurfaceProfile;
 	bOverrideSubsurfaceProfile: boolean;
 	bOverrideBaseProperties: boolean;
+	bIsFunctionPreviewMaterial: boolean;
+	bIsFunctionInstanceDirty: boolean;
 	BasePropertyOverrides: MaterialInstanceBasePropertyOverrides;
 	SourceInstance: MaterialInstanceConstant;
-	VisibleExpressions: Guid[];
+	SourceFunction: MaterialFunctionInstance;
+	VisibleExpressions: MaterialParameterInfo[];
 	LightmassSettings: LightmassParameterizedMaterialSettings;
 	bUseOldStyleMICEditorGroups: boolean;
+	StoredLayerPreviews: MaterialInstanceConstant[];
+	StoredBlendPreviews: MaterialInstanceConstant[];
 	static Load(ResourceName: string): MaterialEditorInstanceConstant;
 	static Find(Outer: UObject, ResourceName: string): MaterialEditorInstanceConstant;
 	static GetDefaultObject(): MaterialEditorInstanceConstant;
@@ -6444,14 +10268,12 @@ declare class MaterialEditorMeshComponent extends StaticMeshComponent {
 
 declare class MaterialEditorOptions extends UObject { 
 	bShowGrid: boolean;
-	bShowBackground: boolean;
 	bHideUnusedConnectors: boolean;
 	bRealtimeMaterialViewport: boolean;
 	bRealtimeExpressionViewport: boolean;
 	bLivePreviewUpdate: boolean;
 	bAlwaysRefreshAllPreviews: boolean;
 	bUseUnsortedMenus: boolean;
-	bShowMobileStats: boolean;
 	FavoriteExpressions: string[];
 	static Load(ResourceName: string): MaterialEditorOptions;
 	static Find(Outer: UObject, ResourceName: string): MaterialEditorOptions;
@@ -6460,6 +10282,18 @@ declare class MaterialEditorOptions extends UObject {
 	static C(Other: UObject | any): MaterialEditorOptions;
 }
 
+declare class MaterialEditorPreviewParameters extends UObject { 
+	ParameterGroups: EditorParameterGroup[];
+	PreviewMaterial: Material;
+	OriginalFunction: MaterialFunction;
+	OriginalMaterial: Material;
+	static Load(ResourceName: string): MaterialEditorPreviewParameters;
+	static Find(Outer: UObject, ResourceName: string): MaterialEditorPreviewParameters;
+	static GetDefaultObject(): MaterialEditorPreviewParameters;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialEditorPreviewParameters;
+	static C(Other: UObject | any): MaterialEditorPreviewParameters;
+}
+
 declare class MaterialFactoryNew extends Factory { 
 	InitialTexture: Texture;
 	static Load(ResourceName: string): MaterialFactoryNew;
@@ -6477,6 +10311,47 @@ declare class MaterialFunctionFactoryNew extends Factory {
 	static C(Other: UObject | any): MaterialFunctionFactoryNew;
 }
 
+declare class MaterialFunctionInstanceFactory extends Factory { 
+	InitialParent: MaterialFunctionInterface;
+	static Load(ResourceName: string): MaterialFunctionInstanceFactory;
+	static Find(Outer: UObject, ResourceName: string): MaterialFunctionInstanceFactory;
+	static GetDefaultObject(): MaterialFunctionInstanceFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionInstanceFactory;
+	static C(Other: UObject | any): MaterialFunctionInstanceFactory;
+}
+
+declare class MaterialFunctionMaterialLayerInstanceFactory extends MaterialFunctionInstanceFactory { 
+	static Load(ResourceName: string): MaterialFunctionMaterialLayerInstanceFactory;
+	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayerInstanceFactory;
+	static GetDefaultObject(): MaterialFunctionMaterialLayerInstanceFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayerInstanceFactory;
+	static C(Other: UObject | any): MaterialFunctionMaterialLayerInstanceFactory;
+}
+
+declare class MaterialFunctionMaterialLayerBlendInstanceFactory extends MaterialFunctionInstanceFactory { 
+	static Load(ResourceName: string): MaterialFunctionMaterialLayerBlendInstanceFactory;
+	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayerBlendInstanceFactory;
+	static GetDefaultObject(): MaterialFunctionMaterialLayerBlendInstanceFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayerBlendInstanceFactory;
+	static C(Other: UObject | any): MaterialFunctionMaterialLayerBlendInstanceFactory;
+}
+
+declare class MaterialFunctionMaterialLayerBlendFactory extends Factory { 
+	static Load(ResourceName: string): MaterialFunctionMaterialLayerBlendFactory;
+	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayerBlendFactory;
+	static GetDefaultObject(): MaterialFunctionMaterialLayerBlendFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayerBlendFactory;
+	static C(Other: UObject | any): MaterialFunctionMaterialLayerBlendFactory;
+}
+
+declare class MaterialFunctionMaterialLayerFactory extends Factory { 
+	static Load(ResourceName: string): MaterialFunctionMaterialLayerFactory;
+	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayerFactory;
+	static GetDefaultObject(): MaterialFunctionMaterialLayerFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayerFactory;
+	static C(Other: UObject | any): MaterialFunctionMaterialLayerFactory;
+}
+
 declare class MaterialFunctionThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
 	static Load(ResourceName: string): MaterialFunctionThumbnailRenderer;
 	static Find(Outer: UObject, ResourceName: string): MaterialFunctionThumbnailRenderer;
@@ -6541,17 +10416,6 @@ declare class MaterialGraphNode_Knot extends MaterialGraphNode {
 }
 
 declare class MaterialGraphSchema extends EdGraphSchema { 
-	PC_Mask: string;
-	PC_Required: string;
-	PC_Optional: string;
-	PC_MaterialInput: string;
-	PSC_Red: string;
-	PSC_Green: string;
-	PSC_Blue: string;
-	PSC_Alpha: string;
-	ActivePinColor: LinearColor;
-	InactivePinColor: LinearColor;
-	AlphaPinColor: LinearColor;
 	static Load(ResourceName: string): MaterialGraphSchema;
 	static Find(Outer: UObject, ResourceName: string): MaterialGraphSchema;
 	static GetDefaultObject(): MaterialGraphSchema;
@@ -6564,8 +10428,8 @@ declare class MaterialImportHelpers extends UObject {
 	static Find(Outer: UObject, ResourceName: string): MaterialImportHelpers;
 	static GetDefaultObject(): MaterialImportHelpers;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialImportHelpers;
-	static FindExistingMaterialFromSearchLocation(MaterialFullName: string,BasePackagePath: string,SearchLocation: SearchLocation,OutError?: string): {OutError: string, $: MaterialInterface};
-	static FindExistingMaterial(BasePath: string,MaterialFullName: string,OutError?: string): {OutError: string, $: MaterialInterface};
+	static FindExistingMaterialFromSearchLocation(MaterialFullName: string,BasePackagePath: string,SearchLocation: EMaterialSearchLocation,OutError?: string): {OutError: string, $: MaterialInterface};
+	static FindExistingMaterial(BasePath: string,MaterialFullName: string,bRecursivePaths: boolean,OutError?: string): {OutError: string, $: MaterialInterface};
 	static C(Other: UObject | any): MaterialImportHelpers;
 }
 
@@ -6594,6 +10458,24 @@ declare class MaterialParameterCollectionFactoryNew extends Factory {
 	static C(Other: UObject | any): MaterialParameterCollectionFactoryNew;
 }
 
+declare class MaterialStatsOptions extends UObject { 
+	bPlatformUsed: number;
+	bMaterialQualityUsed: number;
+	static Load(ResourceName: string): MaterialStatsOptions;
+	static Find(Outer: UObject, ResourceName: string): MaterialStatsOptions;
+	static GetDefaultObject(): MaterialStatsOptions;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialStatsOptions;
+	static C(Other: UObject | any): MaterialStatsOptions;
+}
+
+declare class MergeShaderPipelineCachesCommandlet extends Commandlet { 
+	static Load(ResourceName: string): MergeShaderPipelineCachesCommandlet;
+	static Find(Outer: UObject, ResourceName: string): MergeShaderPipelineCachesCommandlet;
+	static GetDefaultObject(): MergeShaderPipelineCachesCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MergeShaderPipelineCachesCommandlet;
+	static C(Other: UObject | any): MergeShaderPipelineCachesCommandlet;
+}
+
 declare class ModelExporterT3D extends Exporter { 
 	static Load(ResourceName: string): ModelExporterT3D;
 	static Find(Outer: UObject, ResourceName: string): ModelExporterT3D;
@@ -6642,6 +10524,15 @@ declare class PackageFactory extends Factory {
 	static C(Other: UObject | any): PackageFactory;
 }
 
+declare class PackageTools extends UObject { 
+	static Load(ResourceName: string): PackageTools;
+	static Find(Outer: UObject, ResourceName: string): PackageTools;
+	static GetDefaultObject(): PackageTools;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PackageTools;
+	static SanitizePackageName(InPackageName: string): string;
+	static C(Other: UObject | any): PackageTools;
+}
+
 declare class PackFactory extends Factory { 
 	static Load(ResourceName: string): PackFactory;
 	static Find(Outer: UObject, ResourceName: string): PackFactory;
@@ -6678,19 +10569,31 @@ declare class ParticleSystemThumbnailRenderer extends TextureThumbnailRenderer {
 	static C(Other: UObject | any): ParticleSystemThumbnailRenderer;
 }
 
+declare type EAnimationViewportCameraFollowMode = 'None' | 'Bounds' | 'Bone' | 'EAnimationViewportCameraFollowMode_MAX';
+declare var EAnimationViewportCameraFollowMode : { None:'None',Bounds:'Bounds',Bone:'Bone',EAnimationViewportCameraFollowMode_MAX:'EAnimationViewportCameraFollowMode_MAX', };
+declare class ViewportConfigOptions { 
+	ViewModeIndex: EViewModeIndex;
+	ViewFOV: number;
+	CameraFollowMode: EAnimationViewportCameraFollowMode;
+	CameraFollowBoneName: string;
+	clone() : ViewportConfigOptions;
+	static C(Other: UObject | any): ViewportConfigOptions;
+}
+
+declare class AssetEditorOptions { 
+	Context: string;
+	ViewportConfigs: ViewportConfigOptions;
+	clone() : AssetEditorOptions;
+	static C(Other: UObject | any): AssetEditorOptions;
+}
+
 declare class PersonaOptions extends UObject { 
-	bShowFloor: boolean;
-	bShowSky: boolean;
 	bAutoAlignFloorToMesh: boolean;
 	bShowGrid: boolean;
 	bHighlightOrigin: boolean;
 	bMuteAudio: boolean;
 	bUseAudioAttenuation: boolean;
 	ShowMeshStats: number;
-	GridSize: number;
-	ViewModeIndex: EViewModeIndex;
-	ViewportBackgroundColor: LinearColor;
-	ViewFOV: number;
 	DefaultLocalAxesSelection: any;
 	DefaultBoneDrawSelection: any;
 	SectionTimingNodeColor: LinearColor;
@@ -6698,9 +10601,12 @@ declare class PersonaOptions extends UObject {
 	BranchingPointTimingNodeColor: LinearColor;
 	bUseInlineSocketEditor: boolean;
 	bFlattenSkeletonHierarchyWhenFiltering: boolean;
+	bHideParentsWhenFiltering: boolean;
 	bAllowPreviewMeshCollectionsToSelectFromDifferentSkeletons: boolean;
+	bAllowPreviewMeshCollectionsToUseCustomAnimBP: boolean;
 	bAllowMeshSectionSelection: boolean;
 	NumFolderFiltersInAssetBrowser: any;
+	AssetEditorOptions: AssetEditorOptions[];
 	static Load(ResourceName: string): PersonaOptions;
 	static Find(Outer: UObject, ResourceName: string): PersonaOptions;
 	static GetDefaultObject(): PersonaOptions;
@@ -6708,16 +10614,29 @@ declare class PersonaOptions extends UObject {
 	static C(Other: UObject | any): PersonaOptions;
 }
 
-declare class PhATSimOptions extends UObject { 
+declare class PhysicalMaterialFactoryNew extends Factory { 
+	PhysicalMaterialClass: UnrealEngineClass;
+	static Load(ResourceName: string): PhysicalMaterialFactoryNew;
+	static Find(Outer: UObject, ResourceName: string): PhysicalMaterialFactoryNew;
+	static GetDefaultObject(): PhysicalMaterialFactoryNew;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicalMaterialFactoryNew;
+	static C(Other: UObject | any): PhysicalMaterialFactoryNew;
+}
+
+declare type EPhysicsAssetEditorRenderMode = 'Solid' | 'Wireframe' | 'None' | 'EPhysicsAssetEditorRenderMode_MAX';
+declare var EPhysicsAssetEditorRenderMode : { Solid:'Solid',Wireframe:'Wireframe',None:'None',EPhysicsAssetEditorRenderMode_MAX:'EPhysicsAssetEditorRenderMode_MAX', };
+declare type EPhysicsAssetEditorConstraintViewMode = 'None' | 'AllPositions' | 'AllLimits' | 'EPhysicsAssetEditorConstraintViewMode_MAX';
+declare var EPhysicsAssetEditorConstraintViewMode : { None:'None',AllPositions:'AllPositions',AllLimits:'AllLimits',EPhysicsAssetEditorConstraintViewMode_MAX:'EPhysicsAssetEditorConstraintViewMode_MAX', };
+declare class PhysicsAssetEditorOptions extends UObject { 
 	PhysicsBlend: number;
 	bUpdateJointsFromAnimation: boolean;
 	PhysicsUpdateMode: EPhysicsTransformUpdateMode;
 	PokePauseTime: number;
 	PokeBlendTime: number;
-	FloorGap: number;
 	GravScale: number;
+	GravityOverrideZ: number;
+	bUseGravityOverride: boolean;
 	MaxFPS: number;
-	TimeDilation: number;
 	HandleLinearDamping: number;
 	HandleLinearStiffness: number;
 	HandleAngularDamping: number;
@@ -6725,22 +10644,68 @@ declare class PhATSimOptions extends UObject {
 	InterpolationSpeed: number;
 	PokeStrength: number;
 	bShowConstraintsAsPoints: boolean;
-	bShowNamesInHierarchy: boolean;
+	bRenderOnlySelectedConstraints: boolean;
 	ConstraintDrawSize: number;
-	static Load(ResourceName: string): PhATSimOptions;
-	static Find(Outer: UObject, ResourceName: string): PhATSimOptions;
-	static GetDefaultObject(): PhATSimOptions;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhATSimOptions;
-	static C(Other: UObject | any): PhATSimOptions;
-}
-
-declare class PhysicalMaterialFactoryNew extends Factory { 
-	PhysicalMaterialClass: UnrealEngineClass;
-	static Load(ResourceName: string): PhysicalMaterialFactoryNew;
-	static Find(Outer: UObject, ResourceName: string): PhysicalMaterialFactoryNew;
-	static GetDefaultObject(): PhysicalMaterialFactoryNew;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicalMaterialFactoryNew;
-	static C(Other: UObject | any): PhysicalMaterialFactoryNew;
+	MeshViewMode: EPhysicsAssetEditorRenderMode;
+	CollisionViewMode: EPhysicsAssetEditorRenderMode;
+	ConstraintViewMode: EPhysicsAssetEditorConstraintViewMode;
+	SimulationMeshViewMode: EPhysicsAssetEditorRenderMode;
+	SimulationCollisionViewMode: EPhysicsAssetEditorRenderMode;
+	SimulationConstraintViewMode: EPhysicsAssetEditorConstraintViewMode;
+	CollisionOpacity: number;
+	bSolidRenderingForSelectedOnly: boolean;
+	bResetClothWhenSimulating: boolean;
+	static Load(ResourceName: string): PhysicsAssetEditorOptions;
+	static Find(Outer: UObject, ResourceName: string): PhysicsAssetEditorOptions;
+	static GetDefaultObject(): PhysicsAssetEditorOptions;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsAssetEditorOptions;
+	static C(Other: UObject | any): PhysicsAssetEditorOptions;
+}
+
+declare class PhysicsAssetFactory extends Factory { 
+	TargetSkeletalMesh: SkeletalMesh;
+	static Load(ResourceName: string): PhysicsAssetFactory;
+	static Find(Outer: UObject, ResourceName: string): PhysicsAssetFactory;
+	static GetDefaultObject(): PhysicsAssetFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsAssetFactory;
+	static C(Other: UObject | any): PhysicsAssetFactory;
+}
+
+declare type EPhysAssetFitGeomType = 'EFG_Box' | 'EFG_Sphyl' | 'EFG_Sphere' | 'EFG_TaperedCapsule' | 'EFG_SingleConvexHull' | 'EFG_MultiConvexHull' | 'EFG_MAX';
+declare var EPhysAssetFitGeomType : { EFG_Box:'EFG_Box',EFG_Sphyl:'EFG_Sphyl',EFG_Sphere:'EFG_Sphere',EFG_TaperedCapsule:'EFG_TaperedCapsule',EFG_SingleConvexHull:'EFG_SingleConvexHull',EFG_MultiConvexHull:'EFG_MultiConvexHull',EFG_MAX:'EFG_MAX', };
+declare type EPhysAssetFitVertWeight = 'EVW_AnyWeight' | 'EVW_DominantWeight' | 'EVW_MAX';
+declare var EPhysAssetFitVertWeight : { EVW_AnyWeight:'EVW_AnyWeight',EVW_DominantWeight:'EVW_DominantWeight',EVW_MAX:'EVW_MAX', };
+declare class PhysAssetCreateParams { 
+	MinBoneSize: number;
+	MinWeldSize: number;
+	GeomType: EPhysAssetFitGeomType;
+	VertWeight: EPhysAssetFitVertWeight;
+	bAutoOrientToBone: boolean;
+	bCreateConstraints: boolean;
+	bWalkPastSmall: boolean;
+	bBodyForAll: boolean;
+	AngularConstraintMode: EAngularConstraintMotion;
+	HullCount: number;
+	MaxHullVerts: number;
+	clone() : PhysAssetCreateParams;
+	static C(Other: UObject | any): PhysAssetCreateParams;
+}
+
+declare class PhysicsAssetGenerationSettings extends UObject { 
+	CreateParams: PhysAssetCreateParams;
+	static Load(ResourceName: string): PhysicsAssetGenerationSettings;
+	static Find(Outer: UObject, ResourceName: string): PhysicsAssetGenerationSettings;
+	static GetDefaultObject(): PhysicsAssetGenerationSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsAssetGenerationSettings;
+	static C(Other: UObject | any): PhysicsAssetGenerationSettings;
+}
+
+declare class PhysicsAssetThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
+	static Load(ResourceName: string): PhysicsAssetThumbnailRenderer;
+	static Find(Outer: UObject, ResourceName: string): PhysicsAssetThumbnailRenderer;
+	static GetDefaultObject(): PhysicsAssetThumbnailRenderer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsAssetThumbnailRenderer;
+	static C(Other: UObject | any): PhysicsAssetThumbnailRenderer;
 }
 
 declare class PkgInfoCommandlet extends Commandlet { 
@@ -6785,8 +10750,8 @@ declare class PopulateDialogueWaveFromCharacterSheetCommandlet extends Commandle
 
 declare class PoseAssetFactory extends Factory { 
 	TargetSkeleton: Skeleton;
-	SourceAnimation: AnimSequence;
 	PreviewSkeletalMesh: SkeletalMesh;
+	SourceAnimation: AnimSequence;
 	static Load(ResourceName: string): PoseAssetFactory;
 	static Find(Outer: UObject, ResourceName: string): PoseAssetFactory;
 	static GetDefaultObject(): PoseAssetFactory;
@@ -6811,21 +10776,25 @@ declare class PreviewMeshCollectionFactory extends Factory {
 	static C(Other: UObject | any): PreviewMeshCollectionFactory;
 }
 
-declare type EProjectPackagingBuildConfigurations = 'PPBC_DebugGame' | 'PPBC_Development' | 'PPBC_Shipping';
-declare var EProjectPackagingBuildConfigurations : { PPBC_DebugGame:'PPBC_DebugGame',PPBC_Development:'PPBC_Development',PPBC_Shipping:'PPBC_Shipping', };
-declare type EProjectPackagingBlueprintNativizationMethod = 'Disabled' | 'Inclusive' | 'Exclusive';
-declare var EProjectPackagingBlueprintNativizationMethod : { Disabled:'Disabled',Inclusive:'Inclusive',Exclusive:'Exclusive', };
-declare type EProjectPackagingInternationalizationPresets = 'English' | 'EFIGS' | 'EFIGSCJK' | 'CJK' | 'All';
-declare var EProjectPackagingInternationalizationPresets : { English:'English',EFIGS:'EFIGS',EFIGSCJK:'EFIGSCJK',CJK:'CJK',All:'All', };
+declare type EProjectPackagingBuild = 'Always' | 'Never' | 'IfProjectHasCode' | 'IfEditorWasBuiltLocally' | 'EProjectPackagingBuild_MAX';
+declare var EProjectPackagingBuild : { Always:'Always',Never:'Never',IfProjectHasCode:'IfProjectHasCode',IfEditorWasBuiltLocally:'IfEditorWasBuiltLocally',EProjectPackagingBuild_MAX:'EProjectPackagingBuild_MAX', };
+declare type EProjectPackagingBuildConfigurations = 'PPBC_DebugGame' | 'PPBC_DebugGameClient' | 'PPBC_Development' | 'PPBC_DevelopmentClient' | 'PPBC_Shipping' | 'PPBC_ShippingClient' | 'PPBC_MAX';
+declare var EProjectPackagingBuildConfigurations : { PPBC_DebugGame:'PPBC_DebugGame',PPBC_DebugGameClient:'PPBC_DebugGameClient',PPBC_Development:'PPBC_Development',PPBC_DevelopmentClient:'PPBC_DevelopmentClient',PPBC_Shipping:'PPBC_Shipping',PPBC_ShippingClient:'PPBC_ShippingClient',PPBC_MAX:'PPBC_MAX', };
+declare type EProjectPackagingBlueprintNativizationMethod = 'Disabled' | 'Inclusive' | 'Exclusive' | 'EProjectPackagingBlueprintNativizationMethod_MAX';
+declare var EProjectPackagingBlueprintNativizationMethod : { Disabled:'Disabled',Inclusive:'Inclusive',Exclusive:'Exclusive',EProjectPackagingBlueprintNativizationMethod_MAX:'EProjectPackagingBlueprintNativizationMethod_MAX', };
+declare type EProjectPackagingInternationalizationPresets = 'English' | 'EFIGS' | 'EFIGSCJK' | 'CJK' | 'All' | 'EProjectPackagingInternationalizationPresets_MAX';
+declare var EProjectPackagingInternationalizationPresets : { English:'English',EFIGS:'EFIGS',EFIGSCJK:'EFIGSCJK',CJK:'CJK',All:'All',EProjectPackagingInternationalizationPresets_MAX:'EProjectPackagingInternationalizationPresets_MAX', };
 declare class ProjectPackagingSettings extends UObject { 
+	Build: EProjectPackagingBuild;
 	BuildConfiguration: EProjectPackagingBuildConfigurations;
 	StagingDirectory: DirectoryPath;
 	FullRebuild: boolean;
 	ForDistribution: boolean;
 	IncludeDebugFiles: boolean;
-	BlueprintNativizationMethod: BlueprintNativizationMethod;
+	BlueprintNativizationMethod: EProjectPackagingBlueprintNativizationMethod;
 	NativizeBlueprintAssets: FilePath[];
-	bWarnIfPackagedWithoutNativizationFlag: boolean;
+	bIncludeNativizedAssetsInProjectGeneration: boolean;
+	bExcludeMonolithicEngineHeadersInNativizedCode: boolean;
 	UsePakFile: boolean;
 	bGenerateChunks: boolean;
 	bGenerateNoChunks: boolean;
@@ -6839,20 +10808,22 @@ declare class ProjectPackagingSettings extends UObject {
 	bSharedMaterialNativeLibraries: boolean;
 	ApplocalPrerequisitesDirectory: DirectoryPath;
 	IncludeCrashReporter: boolean;
-	InternationalizationPreset: InternationalizationPreset;
+	InternationalizationPreset: EProjectPackagingInternationalizationPresets;
 	CulturesToStage: string[];
-	DefaultCulture: string;
 	bCookAll: boolean;
 	bCookMapsOnly: boolean;
 	bCompressed: boolean;
 	bEncryptIniFiles: boolean;
 	bEncryptPakIndex: boolean;
 	bSkipEditorContent: boolean;
+	bSkipMovies: boolean;
 	MapsToCook: FilePath[];
 	DirectoriesToAlwaysCook: DirectoryPath[];
 	DirectoriesToNeverCook: DirectoryPath[];
 	DirectoriesToAlwaysStageAsUFS: DirectoryPath[];
 	DirectoriesToAlwaysStageAsNonUFS: DirectoryPath[];
+	DirectoriesToAlwaysStageAsUFSServer: DirectoryPath[];
+	DirectoriesToAlwaysStageAsNonUFSServer: DirectoryPath[];
 	bNativizeBlueprintAssets: boolean;
 	bNativizeOnlySelectedBlueprints: boolean;
 	static Load(ResourceName: string): ProjectPackagingSettings;
@@ -6862,13 +10833,13 @@ declare class ProjectPackagingSettings extends UObject {
 	static C(Other: UObject | any): ProjectPackagingSettings;
 }
 
-declare type PropertEditorTestEnum = 'PropertyEditorTest_Enum1' | 'PropertyEditorTest_Enum2' | 'PropertyEditorTest_Enum3' | 'PropertyEditorTest_Enum4' | 'PropertyEditorTest_Enum5' | 'PropertyEditorTest_Enum6';
-declare var PropertEditorTestEnum : { PropertyEditorTest_Enum1:'PropertyEditorTest_Enum1',PropertyEditorTest_Enum2:'PropertyEditorTest_Enum2',PropertyEditorTest_Enum3:'PropertyEditorTest_Enum3',PropertyEditorTest_Enum4:'PropertyEditorTest_Enum4',PropertyEditorTest_Enum5:'PropertyEditorTest_Enum5',PropertyEditorTest_Enum6:'PropertyEditorTest_Enum6', };
+declare type PropertEditorTestEnum = 'PropertyEditorTest_Enum1' | 'PropertyEditorTest_Enum2' | 'PropertyEditorTest_Enum3' | 'PropertyEditorTest_Enum4' | 'PropertyEditorTest_Enum5' | 'PropertyEditorTest_Enum6' | 'PropertyEditorTest_MAX';
+declare var PropertEditorTestEnum : { PropertyEditorTest_Enum1:'PropertyEditorTest_Enum1',PropertyEditorTest_Enum2:'PropertyEditorTest_Enum2',PropertyEditorTest_Enum3:'PropertyEditorTest_Enum3',PropertyEditorTest_Enum4:'PropertyEditorTest_Enum4',PropertyEditorTest_Enum5:'PropertyEditorTest_Enum5',PropertyEditorTest_Enum6:'PropertyEditorTest_Enum6',PropertyEditorTest_MAX:'PropertyEditorTest_MAX', };
 declare class PropertyEditorTestSubStruct { 
 	FirstProperty: number;
 	SecondProperty: number;
 	CustomizedStructInsideUncustomizedStruct: LinearColor;
-	CustomizedStructInsideUncustomizedStruct2: StringAssetReference;
+	CustomizedStructInsideUncustomizedStruct2: SoftObjectPath;
 	clone() : PropertyEditorTestSubStruct;
 	static C(Other: UObject | any): PropertyEditorTestSubStruct;
 }
@@ -6897,6 +10868,7 @@ declare class PropertyEditorTestObject extends UObject {
 	BoolProperty: boolean;
 	StringProperty: string;
 	TextProperty: string;
+	IntPointProperty: IntPoint;
 	Vector3Property: Vector;
 	Vector2Property: Vector2D;
 	Vector4Property: Vector4;
@@ -6906,6 +10878,8 @@ declare class PropertyEditorTestObject extends UObject {
 	LinearColorProperty: LinearColor;
 	ColorProperty: Color;
 	EnumProperty: PropertEditorTestEnum;
+	MatrixProperty: Matrix;
+	TransformProperty: Transform;
 	IntProperty32Array: number[];
 	BytePropertyArray: number[];
 	FloatPropertyArray: number[];
@@ -6937,12 +10911,12 @@ declare class PropertyEditorTestObject extends UObject {
 	StructWithMultipleInstances1: PropertyEditorTestBasicStruct;
 	bEditConditionStructWithMultipleInstances2: boolean;
 	StructWithMultipleInstances2: PropertyEditorTestBasicStruct;
-	AssetReferenceCustomStruct: StringAssetReference;
-	AssetReferenceCustomStructWithThumbnail: StringAssetReference;
+	AssetReferenceCustomStruct: SoftObjectPath;
+	AssetReferenceCustomStructWithThumbnail: SoftObjectPath;
 	bEditCondition: boolean;
 	SimplePropertyWithEditCondition: number;
 	bEditConditionAssetReferenceCustomStructWithEditCondition: boolean;
-	AssetReferenceCustomStructWithEditCondition: StringAssetReference;
+	AssetReferenceCustomStructWithEditCondition: SoftObjectPath;
 	ArrayOfStructs: PropertyEditorTestBasicStruct[];
 	EditInlineNewStaticMeshComponent: StaticMeshComponent;
 	ArrayOfEditInlineNewSMCs: StaticMeshComponent[];
@@ -7007,14 +10981,6 @@ declare class ReimportDataTableFactory extends CSVImportFactory {
 	static C(Other: UObject | any): ReimportDataTableFactory;
 }
 
-declare class ReimportDestructibleMeshFactory extends DestructibleMeshFactory { 
-	static Load(ResourceName: string): ReimportDestructibleMeshFactory;
-	static Find(Outer: UObject, ResourceName: string): ReimportDestructibleMeshFactory;
-	static GetDefaultObject(): ReimportDestructibleMeshFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportDestructibleMeshFactory;
-	static C(Other: UObject | any): ReimportDestructibleMeshFactory;
-}
-
 declare class ReimportFbxAnimSequenceFactory extends FbxFactory { 
 	static Load(ResourceName: string): ReimportFbxAnimSequenceFactory;
 	static Find(Outer: UObject, ResourceName: string): ReimportFbxAnimSequenceFactory;
@@ -7136,11 +11102,11 @@ declare class SceneThumbnailInfo extends ThumbnailInfo {
 	static C(Other: UObject | any): SceneThumbnailInfo;
 }
 
-declare type EThumbnailPrimType = 'TPT_None' | 'TPT_Sphere' | 'TPT_Cube' | 'TPT_Plane' | 'TPT_Cylinder';
-declare var EThumbnailPrimType : { TPT_None:'TPT_None',TPT_Sphere:'TPT_Sphere',TPT_Cube:'TPT_Cube',TPT_Plane:'TPT_Plane',TPT_Cylinder:'TPT_Cylinder', };
+declare type EThumbnailPrimType = 'TPT_None' | 'TPT_Sphere' | 'TPT_Cube' | 'TPT_Plane' | 'TPT_Cylinder' | 'TPT_MAX';
+declare var EThumbnailPrimType : { TPT_None:'TPT_None',TPT_Sphere:'TPT_Sphere',TPT_Cube:'TPT_Cube',TPT_Plane:'TPT_Plane',TPT_Cylinder:'TPT_Cylinder',TPT_MAX:'TPT_MAX', };
 declare class SceneThumbnailInfoWithPrimitive extends SceneThumbnailInfo { 
 	PrimitiveType: EThumbnailPrimType;
-	PreviewMesh: StringAssetReference;
+	PreviewMesh: SoftObjectPath;
 	bUserModifiedShape: boolean;
 	static Load(ResourceName: string): SceneThumbnailInfoWithPrimitive;
 	static Find(Outer: UObject, ResourceName: string): SceneThumbnailInfoWithPrimitive;
@@ -7157,8 +11123,16 @@ declare class SequenceExporterT3D extends Exporter {
 	static C(Other: UObject | any): SequenceExporterT3D;
 }
 
-declare type ESheetAxis = 'AX_Horizontal' | 'AX_XAxis' | 'AX_YAxis';
-declare var ESheetAxis : { AX_Horizontal:'AX_Horizontal',AX_XAxis:'AX_XAxis',AX_YAxis:'AX_YAxis', };
+declare class ShaderPipelineCacheToolsCommandlet extends Commandlet { 
+	static Load(ResourceName: string): ShaderPipelineCacheToolsCommandlet;
+	static Find(Outer: UObject, ResourceName: string): ShaderPipelineCacheToolsCommandlet;
+	static GetDefaultObject(): ShaderPipelineCacheToolsCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ShaderPipelineCacheToolsCommandlet;
+	static C(Other: UObject | any): ShaderPipelineCacheToolsCommandlet;
+}
+
+declare type ESheetAxis = 'AX_Horizontal' | 'AX_XAxis' | 'AX_YAxis' | 'AX_MAX';
+declare var ESheetAxis : { AX_Horizontal:'AX_Horizontal',AX_XAxis:'AX_XAxis',AX_YAxis:'AX_YAxis',AX_MAX:'AX_MAX', };
 declare class SheetBuilder extends EditorBrushBuilder { 
 	X: number;
 	Y: number;
@@ -7173,7 +11147,21 @@ declare class SheetBuilder extends EditorBrushBuilder {
 	static C(Other: UObject | any): SheetBuilder;
 }
 
-declare class SkeletalMeshExporterFBX extends Exporter { 
+declare class SkeletalMeshEditorSettings extends UObject { 
+	AnimPreviewFloorColor: Color;
+	AnimPreviewSkyColor: Color;
+	AnimPreviewSkyBrightness: number;
+	AnimPreviewLightBrightness: number;
+	AnimPreviewLightingDirection: Rotator;
+	AnimPreviewDirectionalColor: Color;
+	static Load(ResourceName: string): SkeletalMeshEditorSettings;
+	static Find(Outer: UObject, ResourceName: string): SkeletalMeshEditorSettings;
+	static GetDefaultObject(): SkeletalMeshEditorSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshEditorSettings;
+	static C(Other: UObject | any): SkeletalMeshEditorSettings;
+}
+
+declare class SkeletalMeshExporterFBX extends ExporterFBX { 
 	static Load(ResourceName: string): SkeletalMeshExporterFBX;
 	static Find(Outer: UObject, ResourceName: string): SkeletalMeshExporterFBX;
 	static GetDefaultObject(): SkeletalMeshExporterFBX;
@@ -7282,7 +11270,7 @@ declare class StabilizeLocalizationKeysCommandlet extends Commandlet {
 	static C(Other: UObject | any): StabilizeLocalizationKeysCommandlet;
 }
 
-declare class StaticMeshExporterFBX extends Exporter { 
+declare class StaticMeshExporterFBX extends ExporterFBX { 
 	static Load(ResourceName: string): StaticMeshExporterFBX;
 	static Find(Outer: UObject, ResourceName: string): StaticMeshExporterFBX;
 	static GetDefaultObject(): StaticMeshExporterFBX;
@@ -7374,8 +11362,8 @@ declare class TetrahedronBuilder extends EditorBrushBuilder {
 	static C(Other: UObject | any): TetrahedronBuilder;
 }
 
-declare type ETexAlign = 'TEXALIGN_None' | 'TEXALIGN_Default' | 'TEXALIGN_Box' | 'TEXALIGN_Planar' | 'TEXALIGN_Fit' | 'TEXALIGN_PlanarAuto' | 'TEXALIGN_PlanarWall' | 'TEXALIGN_PlanarFloor';
-declare var ETexAlign : { TEXALIGN_None:'TEXALIGN_None',TEXALIGN_Default:'TEXALIGN_Default',TEXALIGN_Box:'TEXALIGN_Box',TEXALIGN_Planar:'TEXALIGN_Planar',TEXALIGN_Fit:'TEXALIGN_Fit',TEXALIGN_PlanarAuto:'TEXALIGN_PlanarAuto',TEXALIGN_PlanarWall:'TEXALIGN_PlanarWall',TEXALIGN_PlanarFloor:'TEXALIGN_PlanarFloor', };
+declare type ETexAlign = 'TEXALIGN_None' | 'TEXALIGN_Default' | 'TEXALIGN_Box' | 'TEXALIGN_Planar' | 'TEXALIGN_Fit' | 'TEXALIGN_PlanarAuto' | 'TEXALIGN_PlanarWall' | 'TEXALIGN_PlanarFloor' | 'TEXALIGN_MAX';
+declare var ETexAlign : { TEXALIGN_None:'TEXALIGN_None',TEXALIGN_Default:'TEXALIGN_Default',TEXALIGN_Box:'TEXALIGN_Box',TEXALIGN_Planar:'TEXALIGN_Planar',TEXALIGN_Fit:'TEXALIGN_Fit',TEXALIGN_PlanarAuto:'TEXALIGN_PlanarAuto',TEXALIGN_PlanarWall:'TEXALIGN_PlanarWall',TEXALIGN_PlanarFloor:'TEXALIGN_PlanarFloor',TEXALIGN_MAX:'TEXALIGN_MAX', };
 declare class TexAligner extends UObject { 
 	DefTexAlign: ETexAlign;
 	TAxis: number;
@@ -7421,6 +11409,14 @@ declare class TexAlignerPlanar extends TexAligner {
 	static C(Other: UObject | any): TexAlignerPlanar;
 }
 
+declare class TextAssetCommandlet extends Commandlet { 
+	static Load(ResourceName: string): TextAssetCommandlet;
+	static Find(Outer: UObject, ResourceName: string): TextAssetCommandlet;
+	static GetDefaultObject(): TextAssetCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextAssetCommandlet;
+	static C(Other: UObject | any): TextAssetCommandlet;
+}
+
 declare class TextBufferExporterTXT extends Exporter { 
 	static Load(ResourceName: string): TextBufferExporterTXT;
 	static Find(Outer: UObject, ResourceName: string): TextBufferExporterTXT;
@@ -7686,6 +11682,14 @@ declare class UnrealEdTypes extends UObject {
 	static C(Other: UObject | any): UnrealEdTypes;
 }
 
+declare class UnrealPakCommandlet extends Commandlet { 
+	static Load(ResourceName: string): UnrealPakCommandlet;
+	static Find(Outer: UObject, ResourceName: string): UnrealPakCommandlet;
+	static GetDefaultObject(): UnrealPakCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnrealPakCommandlet;
+	static C(Other: UObject | any): UnrealPakCommandlet;
+}
+
 declare class UpdateGameProjectCommandlet extends Commandlet { 
 	static Load(ResourceName: string): UpdateGameProjectCommandlet;
 	static Find(Outer: UObject, ResourceName: string): UpdateGameProjectCommandlet;
@@ -7701,9 +11705,9 @@ declare class StructVariableDescription {
 	DefaultValue: string;
 	Category: string;
 	SubCategory: string;
-	SubCategoryObject: any;
+	SubCategoryObject: UObject;
 	PinValueType: EdGraphTerminalType;
-	ContainerType: ContainerType;
+	ContainerType: EPinContainerType;
 	bIsArray: boolean;
 	bIsSet: boolean;
 	bIsMap: boolean;
@@ -7712,7 +11716,7 @@ declare class StructVariableDescription {
 	bEnableMultiLineText: boolean;
 	bEnable3dWidget: boolean;
 	CurrentDefaultValue: string;
-	ToolTip: string;
+	Tooltip: string;
 	clone() : StructVariableDescription;
 	static C(Other: UObject | any): StructVariableDescription;
 }
@@ -7720,8 +11724,7 @@ declare class StructVariableDescription {
 declare class UserDefinedStructEditorData extends UObject { 
 	UniqueNameId: any;
 	VariablesDescriptions: StructVariableDescription[];
-	ToolTip: string;
-	NativeBase: ScriptStruct;
+	Tooltip: string;
 	static Load(ResourceName: string): UserDefinedStructEditorData;
 	static Find(Outer: UObject, ResourceName: string): UserDefinedStructEditorData;
 	static GetDefaultObject(): UserDefinedStructEditorData;
@@ -7729,6 +11732,24 @@ declare class UserDefinedStructEditorData extends UObject {
 	static C(Other: UObject | any): UserDefinedStructEditorData;
 }
 
+declare class VolumeTextureFactory extends Factory { 
+	InitialTexture: Texture2D;
+	static Load(ResourceName: string): VolumeTextureFactory;
+	static Find(Outer: UObject, ResourceName: string): VolumeTextureFactory;
+	static GetDefaultObject(): VolumeTextureFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumeTextureFactory;
+	static C(Other: UObject | any): VolumeTextureFactory;
+}
+
+declare class VolumeTextureThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
+	MaterialInstance: MaterialInstanceConstant;
+	static Load(ResourceName: string): VolumeTextureThumbnailRenderer;
+	static Find(Outer: UObject, ResourceName: string): VolumeTextureThumbnailRenderer;
+	static GetDefaultObject(): VolumeTextureThumbnailRenderer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumeTextureThumbnailRenderer;
+	static C(Other: UObject | any): VolumeTextureThumbnailRenderer;
+}
+
 declare class VolumetricBuilder extends EditorBrushBuilder { 
 	Z: number;
 	Radius: number;
@@ -7749,8 +11770,8 @@ declare class WorldFactory extends Factory {
 	static C(Other: UObject | any): WorldFactory;
 }
 
-declare type EOrthoThumbnailDirection = 'Top' | 'Bottom' | 'Left' | 'Right' | 'Front' | 'Back';
-declare var EOrthoThumbnailDirection : { Top:'Top',Bottom:'Bottom',Left:'Left',Right:'Right',Front:'Front',Back:'Back', };
+declare type EOrthoThumbnailDirection = 'Top' | 'Bottom' | 'Left' | 'Right' | 'Front' | 'Back' | 'EOrthoThumbnailDirection_MAX';
+declare var EOrthoThumbnailDirection : { Top:'Top',Bottom:'Bottom',Left:'Left',Right:'Right',Front:'Front',Back:'Back',EOrthoThumbnailDirection_MAX:'EOrthoThumbnailDirection_MAX', };
 declare class WorldThumbnailInfo extends SceneThumbnailInfo { 
 	CameraMode: ECameraProjectionMode;
 	OrthoDirection: EOrthoThumbnailDirection;
@@ -7783,20 +11804,10 @@ declare class WrangleContentCommandlet extends Commandlet {
 
 declare class InstancedStaticMeshInstanceData { 
 	Transform: Matrix;
-	LightmapUVBias: Vector2D;
-	ShadowmapUVBias: Vector2D;
 	clone() : InstancedStaticMeshInstanceData;
 	static C(Other: UObject | any): InstancedStaticMeshInstanceData;
 }
 
-declare class PhysicsSerializer extends UObject { 
-	static Load(ResourceName: string): PhysicsSerializer;
-	static Find(Outer: UObject, ResourceName: string): PhysicsSerializer;
-	static GetDefaultObject(): PhysicsSerializer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsSerializer;
-	static C(Other: UObject | any): PhysicsSerializer;
-}
-
 declare class InstancedStaticMeshMappingInfo { 
 	clone() : InstancedStaticMeshMappingInfo;
 	static C(Other: UObject | any): InstancedStaticMeshMappingInfo;
@@ -7808,9 +11819,6 @@ declare class InstancedStaticMeshComponent extends StaticMeshComponent {
 	InstanceStartCullDistance: number;
 	InstanceEndCullDistance: number;
 	InstanceReorderTable: number[];
-	RemovedInstances: number[];
-	UseDynamicInstanceBuffer: boolean;
-	PhysicsSerializer: PhysicsSerializer;
 	NumPendingLightmaps: number;
 	CachedMappings: InstancedStaticMeshMappingInfo[];
 	static Load(ResourceName: string): InstancedStaticMeshComponent;
@@ -7840,6 +11848,7 @@ declare class HierarchicalInstancedStaticMeshComponent extends InstancedStaticMe
 	OcclusionLayerNumNodes: number;
 	CacheMeshExtendedBounds: BoxSphereBounds;
 	bDisableCollision: boolean;
+	InstanceCountToRender: number;
 	static Load(ResourceName: string): HierarchicalInstancedStaticMeshComponent;
 	static Find(Outer: UObject, ResourceName: string): HierarchicalInstancedStaticMeshComponent;
 	static GetDefaultObject(): HierarchicalInstancedStaticMeshComponent;
@@ -7869,8 +11878,8 @@ declare class FoliageStatistics extends BlueprintFunctionLibrary {
 	static C(Other: UObject | any): FoliageStatistics;
 }
 
-declare type EFoliageScaling = 'Uniform' | 'Free' | 'LockXY' | 'LockXZ' | 'LockYZ';
-declare var EFoliageScaling : { Uniform:'Uniform',Free:'Free',LockXY:'LockXY',LockXZ:'LockXZ',LockYZ:'LockYZ', };
+declare type EFoliageScaling = 'Uniform' | 'Free' | 'LockXY' | 'LockXZ' | 'LockYZ' | 'EFoliageScaling_MAX';
+declare var EFoliageScaling : { Uniform:'Uniform',Free:'Free',LockXY:'LockXY',LockXZ:'LockXZ',LockYZ:'LockYZ',EFoliageScaling_MAX:'EFoliageScaling_MAX', };
 declare class FloatInterval { 
 	Min: number;
 	Max: number;
@@ -7886,14 +11895,14 @@ declare class FoliageVertexColorChannelMask {
 	static C(Other: UObject | any): FoliageVertexColorChannelMask;
 }
 
-declare type FoliageVertexColorMask = 'FOLIAGEVERTEXCOLORMASK_Disabled' | 'FOLIAGEVERTEXCOLORMASK_Red' | 'FOLIAGEVERTEXCOLORMASK_Green' | 'FOLIAGEVERTEXCOLORMASK_Blue' | 'FOLIAGEVERTEXCOLORMASK_Alpha';
-declare var FoliageVertexColorMask : { FOLIAGEVERTEXCOLORMASK_Disabled:'FOLIAGEVERTEXCOLORMASK_Disabled',FOLIAGEVERTEXCOLORMASK_Red:'FOLIAGEVERTEXCOLORMASK_Red',FOLIAGEVERTEXCOLORMASK_Green:'FOLIAGEVERTEXCOLORMASK_Green',FOLIAGEVERTEXCOLORMASK_Blue:'FOLIAGEVERTEXCOLORMASK_Blue',FOLIAGEVERTEXCOLORMASK_Alpha:'FOLIAGEVERTEXCOLORMASK_Alpha', };
+declare type FoliageVertexColorMask = 'FOLIAGEVERTEXCOLORMASK_Disabled' | 'FOLIAGEVERTEXCOLORMASK_Red' | 'FOLIAGEVERTEXCOLORMASK_Green' | 'FOLIAGEVERTEXCOLORMASK_Blue' | 'FOLIAGEVERTEXCOLORMASK_Alpha' | 'FOLIAGEVERTEXCOLORMASK_MAX';
+declare var FoliageVertexColorMask : { FOLIAGEVERTEXCOLORMASK_Disabled:'FOLIAGEVERTEXCOLORMASK_Disabled',FOLIAGEVERTEXCOLORMASK_Red:'FOLIAGEVERTEXCOLORMASK_Red',FOLIAGEVERTEXCOLORMASK_Green:'FOLIAGEVERTEXCOLORMASK_Green',FOLIAGEVERTEXCOLORMASK_Blue:'FOLIAGEVERTEXCOLORMASK_Blue',FOLIAGEVERTEXCOLORMASK_Alpha:'FOLIAGEVERTEXCOLORMASK_Alpha',FOLIAGEVERTEXCOLORMASK_MAX:'FOLIAGEVERTEXCOLORMASK_MAX', };
 declare class FoliageType extends UObject { 
 	UpdateGuid: Guid;
 	Density: number;
 	DensityAdjustmentFactor: number;
 	Radius: number;
-	Scaling: Scaling;
+	Scaling: EFoliageScaling;
 	ScaleX: FloatInterval;
 	ScaleY: FloatInterval;
 	ScaleZ: FloatInterval;
@@ -7927,6 +11936,7 @@ declare class FoliageType extends UObject {
 	bReceivesDecals: boolean;
 	bOverrideLightMapRes: boolean;
 	OverriddenLightMapRes: number;
+	LightmapType: ELightmapType;
 	bUseAsOccluder: boolean;
 	BodyInstance: BodyInstance;
 	CustomNavigableGeometry: EHasCustomNavigableGeometry;
@@ -8012,14 +12022,15 @@ declare class InstancedFoliageActor extends Actor {
 	static C(Other: UObject | any): InstancedFoliageActor;
 }
 
-declare type ENavDataGatheringMode = 'Default' | 'Instant' | 'Lazy';
-declare var ENavDataGatheringMode : { Default:'Default',Instant:'Instant',Lazy:'Lazy', };
+declare type ENavDataGatheringMode = 'Default' | 'Instant' | 'Lazy' | 'ENavDataGatheringMode_MAX';
+declare var ENavDataGatheringMode : { Default:'Default',Instant:'Instant',Lazy:'Lazy',ENavDataGatheringMode_MAX:'ENavDataGatheringMode_MAX', };
 declare class StaticMeshActor extends Actor { 
 	StaticMeshComponent: StaticMeshComponent;
 	bStaticMeshReplicateMovement: boolean;
-	NavigationGeometryGatheringMode: NavigationGeometryGatheringMode;
+	NavigationGeometryGatheringMode: ENavDataGatheringMode;
 	static GetDefaultObject(): StaticMeshActor;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshActor;
+	SetMobility(InMobility: EComponentMobility): void;
 	static C(Other: UObject | any): StaticMeshActor;
 }
 
@@ -8129,6 +12140,15 @@ declare class ProceduralFoliageTile extends UObject {
 	static C(Other: UObject | any): ProceduralFoliageTile;
 }
 
+declare class ImageWriteBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): ImageWriteBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): ImageWriteBlueprintLibrary;
+	static GetDefaultObject(): ImageWriteBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImageWriteBlueprintLibrary;
+	static ExportToDisk(Texture: Texture,Filename: string,Options: ImageWriteOptions): void;
+	static C(Other: UObject | any): ImageWriteBlueprintLibrary;
+}
+
 declare class ControlPointMeshComponent extends StaticMeshComponent { 
 	bSelected: boolean;
 	static Load(ResourceName: string): ControlPointMeshComponent;
@@ -8146,8 +12166,8 @@ declare class LandscapeSplineSegmentConnection {
 	static C(Other: UObject | any): LandscapeSplineSegmentConnection;
 }
 
-declare type LandscapeSplineMeshOrientation = 'LSMO_XUp' | 'LSMO_YUp';
-declare var LandscapeSplineMeshOrientation : { LSMO_XUp:'LSMO_XUp',LSMO_YUp:'LSMO_YUp', };
+declare type LandscapeSplineMeshOrientation = 'LSMO_XUp' | 'LSMO_YUp' | 'LSMO_MAX';
+declare var LandscapeSplineMeshOrientation : { LSMO_XUp:'LSMO_XUp',LSMO_YUp:'LSMO_YUp',LSMO_MAX:'LSMO_MAX', };
 declare class LandscapeSplineMeshEntry { 
 	Mesh: StaticMesh;
 	MaterialOverrides: MaterialInterface[];
@@ -8180,18 +12200,21 @@ declare class LandscapeSplineSegment extends UObject {
 	bLowerTerrain: boolean;
 	SplineMeshes: LandscapeSplineMeshEntry[];
 	bEnableCollision: boolean;
+	CollisionProfileName: string;
 	bCastShadow: boolean;
 	RandomSeed: number;
 	LDMaxDrawDistance: number;
 	TranslucencySortPriority: number;
+	bHiddenInGame: boolean;
 	bPlaceSplineMeshesInStreamingLevels: boolean;
+	BodyInstance: BodyInstance;
 	bSelected: boolean;
 	bNavDirty: boolean;
 	SplineInfo: InterpCurveVector;
 	Points: LandscapeSplineInterpPoint[];
 	Bounds: Box;
 	LocalMeshComponents: SplineMeshComponent[];
-	ForeignWorlds: any[];
+	ForeignWorlds: World[];
 	ModificationKey: Guid;
 	static Load(ResourceName: string): LandscapeSplineSegment;
 	static Find(Outer: UObject, ResourceName: string): LandscapeSplineSegment;
@@ -8220,18 +12243,21 @@ declare class LandscapeSplineControlPoint extends UObject {
 	Mesh: StaticMesh;
 	MaterialOverrides: MaterialInterface[];
 	MeshScale: Vector;
+	bHiddenInGame: boolean;
 	bEnableCollision: boolean;
+	CollisionProfileName: string;
 	bCastShadow: boolean;
 	LDMaxDrawDistance: number;
 	TranslucencySortPriority: number;
 	bPlaceSplineMeshesInStreamingLevels: boolean;
+	BodyInstance: BodyInstance;
 	bSelected: boolean;
 	bNavDirty: boolean;
 	ConnectedSegments: LandscapeSplineConnection[];
 	Points: LandscapeSplineInterpPoint[];
 	Bounds: Box;
 	LocalMeshComponent: ControlPointMeshComponent;
-	ForeignWorld: any;
+	ForeignWorld: World;
 	ModificationKey: Guid;
 	static Load(ResourceName: string): LandscapeSplineControlPoint;
 	static Find(Outer: UObject, ResourceName: string): LandscapeSplineControlPoint;
@@ -8254,13 +12280,28 @@ declare class LandscapeSplinesComponent extends PrimitiveComponent {
 	static Find(Outer: UObject, ResourceName: string): LandscapeSplinesComponent;
 	static GetDefaultObject(): LandscapeSplinesComponent;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeSplinesComponent;
+	GetSplineMeshComponents(): SplineMeshComponent[];
 	static C(Other: UObject | any): LandscapeSplinesComponent;
 }
 
-declare type ELandscapeLODFalloff = 'Linear' | 'SquareRoot';
-declare var ELandscapeLODFalloff : { Linear:'Linear',SquareRoot:'SquareRoot', };
-declare type ELandscapeLayerDisplayMode = 'Default' | 'Alphabetical' | 'UserSpecific';
-declare var ELandscapeLayerDisplayMode : { Default:'Default',Alphabetical:'Alphabetical',UserSpecific:'UserSpecific', };
+declare type ELandscapeLODFalloff = 'Linear' | 'SquareRoot' | 'ELandscapeLODFalloff_MAX';
+declare var ELandscapeLODFalloff : { Linear:'Linear',SquareRoot:'SquareRoot',ELandscapeLODFalloff_MAX:'ELandscapeLODFalloff_MAX', };
+declare type ELandscapeLayerDisplayMode = 'Default' | 'Alphabetical' | 'UserSpecific' | 'ELandscapeLayerDisplayMode_MAX';
+declare var ELandscapeLayerDisplayMode : { Default:'Default',Alphabetical:'Alphabetical',UserSpecific:'UserSpecific',ELandscapeLayerDisplayMode_MAX:'ELandscapeLayerDisplayMode_MAX', };
+declare class LandscapeProxyMaterialOverride { 
+	LODIndex: PerPlatformInt;
+	Material: MaterialInterface;
+	clone() : LandscapeProxyMaterialOverride;
+	static C(Other: UObject | any): LandscapeProxyMaterialOverride;
+}
+
+declare class LandscapeComponentMaterialOverride { 
+	LODIndex: PerPlatformInt;
+	Material: MaterialInterface;
+	clone() : LandscapeComponentMaterialOverride;
+	static C(Other: UObject | any): LandscapeComponentMaterialOverride;
+}
+
 declare class LandscapeLayerInfoObject extends UObject { 
 	LayerName: string;
 	PhysMaterial: PhysicalMaterial;
@@ -8303,8 +12344,12 @@ declare class LandscapeComponent extends PrimitiveComponent {
 	NumSubsections: number;
 	OverrideMaterial: MaterialInterface;
 	OverrideHoleMaterial: MaterialInterface;
+	OverrideMaterials: LandscapeComponentMaterialOverride[];
 	MaterialInstance: MaterialInstanceConstant;
 	MaterialInstances: MaterialInstanceConstant[];
+	MaterialInstancesDynamic: MaterialInstanceDynamic[];
+	LODIndexToMaterialIndex: any[];
+	MaterialIndexToDisabledTessellationMaterial: any[];
 	WeightmapLayerAllocations: WeightmapLayerAllocationInfo[];
 	WeightmapTextures: Texture2D[];
 	XYOffsetmapTexture: Texture2D;
@@ -8331,13 +12376,18 @@ declare class LandscapeComponent extends PrimitiveComponent {
 	LayerWhitelist: LandscapeLayerInfoObject[];
 	EditToolRenderData: LandscapeEditToolRenderData;
 	MobileDataSourceHash: Guid;
+	MaterialPerLOD: any;
 	MobileBlendableLayerMask: number;
 	MobileMaterialInterface: MaterialInterface;
-	MobileWeightNormalmapTexture: Texture2D;
+	MobileMaterialInterfaces: MaterialInterface[];
+	MobileWeightmapTextures: Texture2D[];
+	MobileCombinationMaterialInstances: MaterialInstanceConstant[];
+	MobileCombinationMaterialInstance: MaterialInstanceConstant;
 	static Load(ResourceName: string): LandscapeComponent;
 	static Find(Outer: UObject, ResourceName: string): LandscapeComponent;
 	static GetDefaultObject(): LandscapeComponent;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeComponent;
+	GetMaterialInstanceDynamic(InIndex: number): MaterialInstanceDynamic;
 	static C(Other: UObject | any): LandscapeComponent;
 }
 
@@ -8374,14 +12424,22 @@ declare class LandscapeProxy extends Actor {
 	MaxLODLevel: number;
 	LODDistanceFactor: number;
 	LODFalloff: ELandscapeLODFalloff;
+	ComponentScreenSizeToUseSubSections: number;
+	LOD0DistributionSetting: number;
+	LODDistributionSetting: number;
+	TessellationComponentScreenSize: number;
+	UseTessellationComponentScreenSizeFalloff: boolean;
+	TessellationComponentScreenSizeFalloff: number;
+	OccluderGeometryLOD: number;
 	ExportLOD: number;
 	TargetDisplayOrderList: string[];
-	TargetDisplayOrder: TargetDisplayOrder;
+	TargetDisplayOrder: ELandscapeLayerDisplayMode;
 	StaticLightingLOD: number;
 	DefaultPhysMaterial: PhysicalMaterial;
 	StreamingDistanceMultiplier: number;
 	LandscapeMaterial: MaterialInterface;
 	LandscapeHoleMaterial: MaterialInterface;
+	LandscapeMaterialsOverride: LandscapeProxyMaterialOverride[];
 	NegativeZBoundsExtension: number;
 	PositiveZBoundsExtension: number;
 	LandscapeComponents: LandscapeComponent[];
@@ -8392,10 +12450,12 @@ declare class LandscapeProxy extends Actor {
 	bCastStaticShadow: boolean;
 	bCastShadowAsTwoSided: boolean;
 	bCastFarShadow: boolean;
+	bAffectDistanceFieldLighting: boolean;
 	LightingChannels: LightingChannels;
 	bUseMaterialPositionOffsetInStaticLighting: boolean;
 	bRenderCustomDepth: boolean;
 	CustomDepthStencilValue: number;
+	LDMaxDrawDistance: number;
 	bIsMovingToLevel: boolean;
 	LightmassSettings: LightmassPrimitiveSettings;
 	CollisionMipLevel: number;
@@ -8411,13 +12471,26 @@ declare class LandscapeProxy extends Actor {
 	SubsectionSizeQuads: number;
 	NumSubsections: number;
 	bUsedForNavigation: boolean;
-	NavigationGeometryGatheringMode: NavigationGeometryGatheringMode;
+	bUseDynamicMaterialInstance: boolean;
+	NavigationGeometryGatheringMode: ENavDataGatheringMode;
 	MaxPaintedLayersPerComponent: number;
 	bUseLandscapeForCullingInvisibleHLODVertices: boolean;
 	static GetDefaultObject(): LandscapeProxy;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LandscapeProxy;
+	SetLandscapeMaterialVectorParameterValue(ParameterName: string,Value: LinearColor): void;
+	SetLandscapeMaterialTextureParameterValue(ParameterName: string,Value: Texture): void;
+	SetLandscapeMaterialScalarParameterValue(ParameterName: string,Value: number): void;
+	LandscapeImportWeightmapFromRenderTarget(InRenderTarget: TextureRenderTarget2D,InLayerName: string): boolean;
+	LandscapeImportHeightmapFromRenderTarget(InRenderTarget: TextureRenderTarget2D,InImportHeightFromRGChannel: boolean): boolean;
+	LandscapeExportWeightmapToRenderTarget(InRenderTarget: TextureRenderTarget2D,InLayerName: string): boolean;
+	LandscapeExportHeightmapToRenderTarget(InRenderTarget: TextureRenderTarget2D,InExportHeightIntoRGChannel: boolean): boolean;
+	EditorSetLandscapeMaterial(NewLandscapeMaterial: MaterialInterface): void;
 	EditorApplySpline(InSplineComponent: SplineComponent,StartWidth: number,EndWidth: number,StartSideFalloff: number,EndSideFalloff: number,StartRoll: number,EndRoll: number,NumSubdivisions: number,bRaiseHeights: boolean,bLowerHeights: boolean,PaintLayer: LandscapeLayerInfoObject): void;
+	ChangeUseTessellationComponentScreenSizeFalloff(InComponentScreenSizeToUseSubSections: boolean): void;
+	ChangeTessellationComponentScreenSizeFalloff(InUseTessellationComponentScreenSizeFalloff: number): void;
+	ChangeTessellationComponentScreenSize(InTessellationComponentScreenSize: number): void;
 	ChangeLODDistanceFactor(InLODDistanceFactor: number): void;
+	ChangeComponentScreenSizeToUseSubSections(InComponentScreenSizeToUseSubSections: number): void;
 	static C(Other: UObject | any): LandscapeProxy;
 }
 
@@ -8432,8 +12505,8 @@ declare class LandscapeInfoLayerSettings {
 	static C(Other: UObject | any): LandscapeInfoLayerSettings;
 }
 
-declare type ELandscapeLayerPaintingRestriction = 'None' | 'UseMaxLayers' | 'ExistingOnly' | 'UseComponentWhitelist';
-declare var ELandscapeLayerPaintingRestriction : { None:'None',UseMaxLayers:'UseMaxLayers',ExistingOnly:'ExistingOnly',UseComponentWhitelist:'UseComponentWhitelist', };
+declare type ELandscapeLayerPaintingRestriction = 'None' | 'UseMaxLayers' | 'ExistingOnly' | 'UseComponentWhitelist' | 'ELandscapeLayerPaintingRestriction_MAX';
+declare var ELandscapeLayerPaintingRestriction : { None:'None',UseMaxLayers:'UseMaxLayers',ExistingOnly:'ExistingOnly',UseComponentWhitelist:'UseComponentWhitelist',ELandscapeLayerPaintingRestriction_MAX:'ELandscapeLayerPaintingRestriction_MAX', };
 declare class LandscapeInfo extends UObject { 
 	LandscapeActor: any;
 	LandscapeGuid: Guid;
@@ -8452,13 +12525,13 @@ declare class LandscapeInfo extends UObject {
 	GetHeightmapDataToMemory(MinX: number,MinY: number,MaxX: number,MaxY: number): void;
 	GetLandscapeExtent(MinX?: number,MinY?: number,MaxX?: number,MaxY?: number): {MinX: number, MinY: number, MaxX: number, MaxY: number, $: boolean};
 	GetLayerInfoByName(LayerName: string,Owner: LandscapeProxy): LandscapeLayerInfoObject;
-	SetAlphamapDataFromMemory(LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number,PaintingRestriction: PaintingRestriction): void;
+	SetAlphamapDataFromMemory(LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number,PaintingRestriction: ELandscapeLayerPaintingRestriction): void;
 	SetHeightmapDataFromMemory(MinX: number,MinY: number,MaxX: number,MaxY: number): void;
 	static GetAlphamapDataToMemory(LandscapeInfo: LandscapeInfo,LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
 	static GetHeightmapDataToMemory(LandscapeInfo: LandscapeInfo,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
 	static GetLandscapeExtent(LandscapeInfo: LandscapeInfo,MinX?: number,MinY?: number,MaxX?: number,MaxY?: number): {MinX: number, MinY: number, MaxX: number, MaxY: number, $: boolean};
 	static GetLayerInfoByName(LandscapeInfo: LandscapeInfo,LayerName: string,Owner: LandscapeProxy): LandscapeLayerInfoObject;
-	static SetAlphamapDataFromMemory(LandscapeInfo: LandscapeInfo,LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number,PaintingRestriction: PaintingRestriction): void;
+	static SetAlphamapDataFromMemory(LandscapeInfo: LandscapeInfo,LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number,PaintingRestriction: ELandscapeLayerPaintingRestriction): void;
 	static SetHeightmapDataFromMemory(LandscapeInfo: LandscapeInfo,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
 }
 
@@ -8484,8 +12557,8 @@ declare class LandscapeGizmoActor extends Actor {
 	static C(Other: UObject | any): LandscapeGizmoActor;
 }
 
-declare type ELandscapeGizmoType = 'LGT_None' | 'LGT_Height' | 'LGT_Weight';
-declare var ELandscapeGizmoType : { LGT_None:'LGT_None',LGT_Height:'LGT_Height',LGT_Weight:'LGT_Weight', };
+declare type ELandscapeGizmoType = 'LGT_None' | 'LGT_Height' | 'LGT_Weight' | 'LGT_MAX';
+declare var ELandscapeGizmoType : { LGT_None:'LGT_None',LGT_Height:'LGT_Height',LGT_Weight:'LGT_Weight',LGT_MAX:'LGT_MAX', };
 declare class LandscapeGizmoActiveActor extends LandscapeGizmoActor { 
 	DataType: ELandscapeGizmoType;
 	GizmoTexture: Texture2D;
@@ -8517,17 +12590,17 @@ declare class LandscapeGizmoRenderComponent extends PrimitiveComponent {
 	static C(Other: UObject | any): LandscapeGizmoRenderComponent;
 }
 
-declare type EGrassScaling = 'Uniform' | 'Free' | 'LockXY';
-declare var EGrassScaling : { Uniform:'Uniform',Free:'Free',LockXY:'LockXY', };
+declare type EGrassScaling = 'Uniform' | 'Free' | 'LockXY' | 'EGrassScaling_MAX';
+declare var EGrassScaling : { Uniform:'Uniform',Free:'Free',LockXY:'LockXY',EGrassScaling_MAX:'EGrassScaling_MAX', };
 declare class GrassVariety { 
 	GrassMesh: StaticMesh;
-	GrassDensity: number;
+	GrassDensity: PerPlatformFloat;
 	bUseGrid: boolean;
 	PlacementJitter: number;
-	StartCullDistance: number;
-	EndCullDistance: number;
+	StartCullDistance: PerPlatformInt;
+	EndCullDistance: PerPlatformInt;
 	MinLOD: number;
-	Scaling: Scaling;
+	Scaling: EGrassScaling;
 	ScaleX: FloatInterval;
 	ScaleY: FloatInterval;
 	ScaleZ: FloatInterval;
@@ -8536,12 +12609,15 @@ declare class GrassVariety {
 	bUseLandscapeLightmap: boolean;
 	LightingChannels: LightingChannels;
 	bReceivesDecals: boolean;
+	bCastDynamicShadow: boolean;
+	bKeepInstanceBufferCPUCopy: boolean;
 	clone() : GrassVariety;
 	static C(Other: UObject | any): GrassVariety;
 }
 
 declare class LandscapeGrassType extends UObject { 
 	GrassVarieties: GrassVariety[];
+	bEnableDensityScaling: boolean;
 	GrassMesh: StaticMesh;
 	GrassDensity: number;
 	PlacementJitter: number;
@@ -8567,6 +12643,8 @@ declare class LandscapeInfoMap extends UObject {
 declare class LandscapeMaterialInstanceConstant extends MaterialInstanceConstant { 
 	bIsLayerThumbnail: boolean;
 	bDisableTessellation: boolean;
+	bMobile: boolean;
+	bEditorToolUsage: boolean;
 	static Load(ResourceName: string): LandscapeMaterialInstanceConstant;
 	static Find(Outer: UObject, ResourceName: string): LandscapeMaterialInstanceConstant;
 	static GetDefaultObject(): LandscapeMaterialInstanceConstant;
@@ -8633,8 +12711,8 @@ declare class MaterialExpressionLandscapeGrassOutput extends MaterialExpressionC
 	static C(Other: UObject | any): MaterialExpressionLandscapeGrassOutput;
 }
 
-declare type ELandscapeLayerBlendType = 'LB_WeightBlend' | 'LB_AlphaBlend' | 'LB_HeightBlend';
-declare var ELandscapeLayerBlendType : { LB_WeightBlend:'LB_WeightBlend',LB_AlphaBlend:'LB_AlphaBlend',LB_HeightBlend:'LB_HeightBlend', };
+declare type ELandscapeLayerBlendType = 'LB_WeightBlend' | 'LB_AlphaBlend' | 'LB_HeightBlend' | 'LB_MAX';
+declare var ELandscapeLayerBlendType : { LB_WeightBlend:'LB_WeightBlend',LB_AlphaBlend:'LB_AlphaBlend',LB_HeightBlend:'LB_HeightBlend',LB_MAX:'LB_MAX', };
 declare class LayerBlendInput { 
 	LayerName: string;
 	BlendType: ELandscapeLayerBlendType;
@@ -8657,10 +12735,10 @@ declare class MaterialExpressionLandscapeLayerBlend extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionLandscapeLayerBlend;
 }
 
-declare type ETerrainCoordMappingType = 'TCMT_Auto' | 'TCMT_XY' | 'TCMT_XZ' | 'TCMT_YZ';
-declare var ETerrainCoordMappingType : { TCMT_Auto:'TCMT_Auto',TCMT_XY:'TCMT_XY',TCMT_XZ:'TCMT_XZ',TCMT_YZ:'TCMT_YZ', };
-declare type ELandscapeCustomizedCoordType = 'LCCT_None' | 'LCCT_CustomUV0' | 'LCCT_CustomUV1' | 'LCCT_CustomUV2' | 'LCCT_WeightMapUV';
-declare var ELandscapeCustomizedCoordType : { LCCT_None:'LCCT_None',LCCT_CustomUV0:'LCCT_CustomUV0',LCCT_CustomUV1:'LCCT_CustomUV1',LCCT_CustomUV2:'LCCT_CustomUV2',LCCT_WeightMapUV:'LCCT_WeightMapUV', };
+declare type ETerrainCoordMappingType = 'TCMT_Auto' | 'TCMT_XY' | 'TCMT_XZ' | 'TCMT_YZ' | 'TCMT_MAX';
+declare var ETerrainCoordMappingType : { TCMT_Auto:'TCMT_Auto',TCMT_XY:'TCMT_XY',TCMT_XZ:'TCMT_XZ',TCMT_YZ:'TCMT_YZ',TCMT_MAX:'TCMT_MAX', };
+declare type ELandscapeCustomizedCoordType = 'LCCT_None' | 'LCCT_CustomUV0' | 'LCCT_CustomUV1' | 'LCCT_CustomUV2' | 'LCCT_WeightMapUV' | 'LCCT_MAX';
+declare var ELandscapeCustomizedCoordType : { LCCT_None:'LCCT_None',LCCT_CustomUV0:'LCCT_CustomUV0',LCCT_CustomUV1:'LCCT_CustomUV1',LCCT_CustomUV2:'LCCT_CustomUV2',LCCT_WeightMapUV:'LCCT_WeightMapUV',LCCT_MAX:'LCCT_MAX', };
 declare class MaterialExpressionLandscapeLayerCoords extends MaterialExpression { 
 	MappingType: ETerrainCoordMappingType;
 	CustomUVType: ELandscapeCustomizedCoordType;
@@ -8722,14 +12800,9 @@ declare class MaterialExpressionLandscapeVisibilityMask extends MaterialExpressi
 	static C(Other: UObject | any): MaterialExpressionLandscapeVisibilityMask;
 }
 
-declare class AbstractNavData extends NavigationData { 
-	static GetDefaultObject(): AbstractNavData;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AbstractNavData;
-	static C(Other: UObject | any): AbstractNavData;
-}
-
 declare class ActorChannel extends Channel { 
 	Actor: Actor;
+	CreateSubObjects: UObject[];
 	static Load(ResourceName: string): ActorChannel;
 	static Find(Outer: UObject, ResourceName: string): ActorChannel;
 	static GetDefaultObject(): ActorChannel;
@@ -8737,8 +12810,8 @@ declare class ActorChannel extends Channel {
 	static C(Other: UObject | any): ActorChannel;
 }
 
-declare type EBlendSpaceAxis = 'BSA_None' | 'BSA_X' | 'BSA_Y';
-declare var EBlendSpaceAxis : { BSA_None:'BSA_None',BSA_X:'BSA_X',BSA_Y:'BSA_Y', };
+declare type EBlendSpaceAxis = 'BSA_None' | 'BSA_X' | 'BSA_Y' | 'BSA_Max';
+declare var EBlendSpaceAxis : { BSA_None:'BSA_None',BSA_X:'BSA_X',BSA_Y:'BSA_Y',BSA_Max:'BSA_Max', };
 declare class BlendSpace extends BlendSpaceBase { 
 	AxisToScaleAnimation: EBlendSpaceAxis;
 	static Load(ResourceName: string): BlendSpace;
@@ -8799,12 +12872,11 @@ declare class AnimationSettings extends DeveloperSettings {
 	bForceBelowThreshold: boolean;
 	bFirstRecompressUsingCurrentOrDefault: boolean;
 	bRaiseMaxErrorToExisting: boolean;
-	bTryFixedBitwiseCompression: boolean;
-	bTryPerTrackBitwiseCompression: boolean;
-	bTryLinearKeyRemovalCompression: boolean;
-	bTryIntervalKeyRemoval: boolean;
+	bTryExhaustiveSearch: boolean;
+	bEnableSegmenting: boolean;
 	bEnablePerformanceLog: boolean;
 	bStripAnimationDataOnDedicatedServer: boolean;
+	bTickAnimationOnSkeletalMeshInit: boolean;
 	static Load(ResourceName: string): AnimationSettings;
 	static Find(Outer: UObject, ResourceName: string): AnimationSettings;
 	static GetDefaultObject(): AnimationSettings;
@@ -8851,7 +12923,7 @@ declare class AnimationTransitionBetweenStates extends AnimationStateBase {
 	StartNotify: number;
 	EndNotify: number;
 	InterruptNotify: number;
-	BlendMode: BlendMode;
+	BlendMode: EAlphaBlendOption;
 	CustomCurve: CurveFloat;
 	BlendProfile: BlendProfile;
 	LogicType: ETransitionLogicType;
@@ -8872,7 +12944,6 @@ declare class AnimBlueprintGeneratedClass extends BlueprintGeneratedClass {
 	BakedStateMachines: BakedAnimationStateMachine[];
 	TargetSkeleton: Skeleton;
 	AnimNotifies: AnimNotifyEvent[];
-	RootAnimNodeIndex: number;
 	OrderedSavedPoseIndices: number[];
 	SyncGroupNames: string[];
 	static Load(ResourceName: string): AnimBlueprintGeneratedClass;
@@ -8918,13 +12989,10 @@ declare class AnimComposite extends AnimCompositeBase {
 
 declare class AnimCompress_Automatic extends AnimCompress { 
 	MaxEndEffectorError: number;
-	bTryFixedBitwiseCompression: boolean;
-	bTryPerTrackBitwiseCompression: boolean;
-	bTryLinearKeyRemovalCompression: boolean;
-	bTryIntervalKeyRemoval: boolean;
 	bRunCurrentDefaultCompressor: boolean;
 	bAutoReplaceIfExistingErrorTooGreat: boolean;
 	bRaiseMaxErrorToExisting: boolean;
+	bTryExhaustiveSearch: boolean;
 	static Load(ResourceName: string): AnimCompress_Automatic;
 	static Find(Outer: UObject, ResourceName: string): AnimCompress_Automatic;
 	static GetDefaultObject(): AnimCompress_Automatic;
@@ -8958,6 +13026,9 @@ declare class AnimCompress_RemoveLinearKeys extends AnimCompress {
 	ParentKeyScale: number;
 	bRetarget: boolean;
 	bActuallyFilterLinearKeys: boolean;
+	bOptimizeForForwardPlayback: boolean;
+	bUseDecompression: boolean;
+	bUseMultithreading: boolean;
 	static Load(ResourceName: string): AnimCompress_RemoveLinearKeys;
 	static Find(Outer: UObject, ResourceName: string): AnimCompress_RemoveLinearKeys;
 	static GetDefaultObject(): AnimCompress_RemoveLinearKeys;
@@ -9015,10 +13086,19 @@ declare class AnimCompress_RemoveTrivialKeys extends AnimCompress {
 	static C(Other: UObject | any): AnimCompress_RemoveTrivialKeys;
 }
 
+declare class AnimNotify_PauseClothingSimulation extends AnimNotify { 
+	static Load(ResourceName: string): AnimNotify_PauseClothingSimulation;
+	static Find(Outer: UObject, ResourceName: string): AnimNotify_PauseClothingSimulation;
+	static GetDefaultObject(): AnimNotify_PauseClothingSimulation;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimNotify_PauseClothingSimulation;
+	static C(Other: UObject | any): AnimNotify_PauseClothingSimulation;
+}
+
 declare class AnimNotify_PlayParticleEffect extends AnimNotify { 
 	PSTemplate: ParticleSystem;
 	LocationOffset: Vector;
 	RotationOffset: Rotator;
+	Scale: Vector;
 	Attached: boolean;
 	SocketName: string;
 	static Load(ResourceName: string): AnimNotify_PlayParticleEffect;
@@ -9049,6 +13129,22 @@ declare class AnimNotify_ResetClothingSimulation extends AnimNotify {
 	static C(Other: UObject | any): AnimNotify_ResetClothingSimulation;
 }
 
+declare class AnimNotify_ResetDynamics extends AnimNotify { 
+	static Load(ResourceName: string): AnimNotify_ResetDynamics;
+	static Find(Outer: UObject, ResourceName: string): AnimNotify_ResetDynamics;
+	static GetDefaultObject(): AnimNotify_ResetDynamics;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimNotify_ResetDynamics;
+	static C(Other: UObject | any): AnimNotify_ResetDynamics;
+}
+
+declare class AnimNotify_ResumeClothingSimulation extends AnimNotify { 
+	static Load(ResourceName: string): AnimNotify_ResumeClothingSimulation;
+	static Find(Outer: UObject, ResourceName: string): AnimNotify_ResumeClothingSimulation;
+	static GetDefaultObject(): AnimNotify_ResumeClothingSimulation;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimNotify_ResumeClothingSimulation;
+	static C(Other: UObject | any): AnimNotify_ResumeClothingSimulation;
+}
+
 declare class AnimNotifyState_DisableRootMotion extends AnimNotifyState { 
 	static Load(ResourceName: string): AnimNotifyState_DisableRootMotion;
 	static Find(Outer: UObject, ResourceName: string): AnimNotifyState_DisableRootMotion;
@@ -9123,12 +13219,18 @@ declare class AnimStateMachineTypes extends UObject {
 	static C(Other: UObject | any): AnimStateMachineTypes;
 }
 
+declare type ETemperatureSeverityType = 'Unknown' | 'Good' | 'Bad' | 'Serious' | 'Critical' | 'NumSeverities' | 'ETemperatureSeverityType_MAX';
+declare var ETemperatureSeverityType : { Unknown:'Unknown',Good:'Good',Bad:'Bad',Serious:'Serious',Critical:'Critical',NumSeverities:'NumSeverities',ETemperatureSeverityType_MAX:'ETemperatureSeverityType_MAX', };
 declare class ApplicationLifecycleComponent extends ActorComponent { 
 	ApplicationWillDeactivateDelegate: UnrealEngineMulticastDelegate<() => void>;
 	ApplicationHasReactivatedDelegate: UnrealEngineMulticastDelegate<() => void>;
 	ApplicationWillEnterBackgroundDelegate: UnrealEngineMulticastDelegate<() => void>;
 	ApplicationHasEnteredForegroundDelegate: UnrealEngineMulticastDelegate<() => void>;
 	ApplicationWillTerminateDelegate: UnrealEngineMulticastDelegate<() => void>;
+	ApplicationShouldUnloadResourcesDelegate: UnrealEngineMulticastDelegate<() => void>;
+	ApplicationReceivedStartupArgumentsDelegate: UnrealEngineMulticastDelegate<(StartupArguments: string[]) => void>;
+	OnTemperatureChangeDelegate: UnrealEngineMulticastDelegate<(Severity: ETemperatureSeverityType) => void>;
+	OnLowPowerModeDelegate: UnrealEngineMulticastDelegate<(bInLowPowerMode: boolean) => void>;
 	static Load(ResourceName: string): ApplicationLifecycleComponent;
 	static Find(Outer: UObject, ResourceName: string): ApplicationLifecycleComponent;
 	static GetDefaultObject(): ApplicationLifecycleComponent;
@@ -9136,25 +13238,25 @@ declare class ApplicationLifecycleComponent extends ActorComponent {
 	static C(Other: UObject | any): ApplicationLifecycleComponent;
 }
 
-declare type EPrimaryAssetCookRule = 'Unknown' | 'NeverCook' | 'DevelopmentCook' | 'AlwaysCook';
-declare var EPrimaryAssetCookRule : { Unknown:'Unknown',NeverCook:'NeverCook',DevelopmentCook:'DevelopmentCook',AlwaysCook:'AlwaysCook', };
+declare type EPrimaryAssetCookRule = 'Unknown' | 'NeverCook' | 'DevelopmentCook' | 'DevelopmentAlwaysCook' | 'AlwaysCook' | 'EPrimaryAssetCookRule_MAX';
+declare var EPrimaryAssetCookRule : { Unknown:'Unknown',NeverCook:'NeverCook',DevelopmentCook:'DevelopmentCook',DevelopmentAlwaysCook:'DevelopmentAlwaysCook',AlwaysCook:'AlwaysCook',EPrimaryAssetCookRule_MAX:'EPrimaryAssetCookRule_MAX', };
 declare class PrimaryAssetRules { 
 	Priority: number;
 	bApplyRecursively: boolean;
-	ChunkId: number;
-	CookRule: CookRule;
+	ChunkID: number;
+	CookRule: EPrimaryAssetCookRule;
 	clone() : PrimaryAssetRules;
 	static C(Other: UObject | any): PrimaryAssetRules;
 }
 
 declare class PrimaryAssetTypeInfo { 
 	PrimaryAssetType: string;
-	AssetBaseClass: any;
+	AssetBaseClass: Class;
 	AssetBaseClassLoaded: UnrealEngineClass;
 	bHasBlueprintClasses: boolean;
 	bIsEditorOnly: boolean;
 	Directories: DirectoryPath[];
-	SpecificAssets: StringAssetReference[];
+	SpecificAssets: SoftObjectPath[];
 	Rules: PrimaryAssetRules;
 	AssetScanPaths: string[];
 	bIsDynamicAsset: boolean;
@@ -9182,10 +13284,13 @@ declare class AssetManagerSettings extends DeveloperSettings {
 	DirectoriesToExclude: DirectoryPath[];
 	PrimaryAssetRules: PrimaryAssetRulesOverride[];
 	bOnlyCookProductionAssets: boolean;
+	bShouldManagerDetermineTypeAndName: boolean;
 	bShouldGuessTypeAndNameInEditor: boolean;
+	bShouldAcquireMissingChunksOnLoad: boolean;
 	PrimaryAssetIdRedirects: AssetManagerRedirect[];
 	PrimaryAssetTypeRedirects: AssetManagerRedirect[];
 	AssetPathRedirects: AssetManagerRedirect[];
+	MetaDataTagsForAssetRegistry: any;
 	static Load(ResourceName: string): AssetManagerSettings;
 	static Find(Outer: UObject, ResourceName: string): AssetManagerSettings;
 	static GetDefaultObject(): AssetManagerSettings;
@@ -9207,7 +13312,7 @@ declare class AsyncActionLoadPrimaryAsset extends AsyncActionLoadPrimaryAssetBas
 	static Find(Outer: UObject, ResourceName: string): AsyncActionLoadPrimaryAsset;
 	static GetDefaultObject(): AsyncActionLoadPrimaryAsset;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AsyncActionLoadPrimaryAsset;
-	static AsyncLoadPrimaryAsset(PrimaryAsset: PrimaryAssetId,LoadBundles: string[]): AsyncActionLoadPrimaryAsset;
+	static AsyncLoadPrimaryAsset(WorldContextObject: UObject,PrimaryAsset: PrimaryAssetId,LoadBundles: string[]): AsyncActionLoadPrimaryAsset;
 	static C(Other: UObject | any): AsyncActionLoadPrimaryAsset;
 }
 
@@ -9217,7 +13322,7 @@ declare class AsyncActionLoadPrimaryAssetClass extends AsyncActionLoadPrimaryAss
 	static Find(Outer: UObject, ResourceName: string): AsyncActionLoadPrimaryAssetClass;
 	static GetDefaultObject(): AsyncActionLoadPrimaryAssetClass;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AsyncActionLoadPrimaryAssetClass;
-	static AsyncLoadPrimaryAssetClass(PrimaryAsset: PrimaryAssetId,LoadBundles: string[]): AsyncActionLoadPrimaryAssetClass;
+	static AsyncLoadPrimaryAssetClass(WorldContextObject: UObject,PrimaryAsset: PrimaryAssetId,LoadBundles: string[]): AsyncActionLoadPrimaryAssetClass;
 	static C(Other: UObject | any): AsyncActionLoadPrimaryAssetClass;
 }
 
@@ -9227,7 +13332,7 @@ declare class AsyncActionLoadPrimaryAssetList extends AsyncActionLoadPrimaryAsse
 	static Find(Outer: UObject, ResourceName: string): AsyncActionLoadPrimaryAssetList;
 	static GetDefaultObject(): AsyncActionLoadPrimaryAssetList;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AsyncActionLoadPrimaryAssetList;
-	static AsyncLoadPrimaryAssetList(PrimaryAssetList: PrimaryAssetId[],LoadBundles: string[]): AsyncActionLoadPrimaryAssetList;
+	static AsyncLoadPrimaryAssetList(WorldContextObject: UObject,PrimaryAssetList: PrimaryAssetId[],LoadBundles: string[]): AsyncActionLoadPrimaryAssetList;
 	static C(Other: UObject | any): AsyncActionLoadPrimaryAssetList;
 }
 
@@ -9237,7 +13342,7 @@ declare class AsyncActionLoadPrimaryAssetClassList extends AsyncActionLoadPrimar
 	static Find(Outer: UObject, ResourceName: string): AsyncActionLoadPrimaryAssetClassList;
 	static GetDefaultObject(): AsyncActionLoadPrimaryAssetClassList;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AsyncActionLoadPrimaryAssetClassList;
-	static AsyncLoadPrimaryAssetClassList(PrimaryAssetList: PrimaryAssetId[],LoadBundles: string[]): AsyncActionLoadPrimaryAssetClassList;
+	static AsyncLoadPrimaryAssetClassList(WorldContextObject: UObject,PrimaryAssetList: PrimaryAssetId[],LoadBundles: string[]): AsyncActionLoadPrimaryAssetClassList;
 	static C(Other: UObject | any): AsyncActionLoadPrimaryAssetClassList;
 }
 
@@ -9247,8 +13352,8 @@ declare class AsyncActionChangePrimaryAssetBundles extends AsyncActionLoadPrimar
 	static Find(Outer: UObject, ResourceName: string): AsyncActionChangePrimaryAssetBundles;
 	static GetDefaultObject(): AsyncActionChangePrimaryAssetBundles;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AsyncActionChangePrimaryAssetBundles;
-	static AsyncChangeBundleStateForPrimaryAssetList(PrimaryAssetList: PrimaryAssetId[],AddBundles: string[],RemoveBundles: string[]): AsyncActionChangePrimaryAssetBundles;
-	static AsyncChangeBundleStateForMatchingPrimaryAssets(NewBundles: string[],OldBundles: string[]): AsyncActionChangePrimaryAssetBundles;
+	static AsyncChangeBundleStateForPrimaryAssetList(WorldContextObject: UObject,PrimaryAssetList: PrimaryAssetId[],AddBundles: string[],RemoveBundles: string[]): AsyncActionChangePrimaryAssetBundles;
+	static AsyncChangeBundleStateForMatchingPrimaryAssets(WorldContextObject: UObject,NewBundles: string[],OldBundles: string[]): AsyncActionChangePrimaryAssetBundles;
 	static C(Other: UObject | any): AsyncActionChangePrimaryAssetBundles;
 }
 
@@ -9315,6 +13420,8 @@ declare class AtmosphericFog extends Info {
 	static C(Other: UObject | any): AtmosphericFog;
 }
 
+declare type EVoiceSampleRate = 'Low16000Hz' | 'Normal24000Hz' | 'EVoiceSampleRate_MAX';
+declare var EVoiceSampleRate : { Low16000Hz:'Low16000Hz',Normal24000Hz:'Normal24000Hz',EVoiceSampleRate_MAX:'EVoiceSampleRate_MAX', };
 declare class AudioQualitySettings { 
 	DisplayName: string;
 	MaxChannels: number;
@@ -9322,18 +13429,28 @@ declare class AudioQualitySettings {
 	static C(Other: UObject | any): AudioQualitySettings;
 }
 
+declare type EPanningMethod = 'Linear' | 'EqualPower' | 'EPanningMethod_MAX';
+declare var EPanningMethod : { Linear:'Linear',EqualPower:'EqualPower',EPanningMethod_MAX:'EPanningMethod_MAX', };
+declare type EMonoChannelUpmixMethod = 'Linear' | 'EqualPower' | 'FullVolume' | 'EMonoChannelUpmixMethod_MAX';
+declare var EMonoChannelUpmixMethod : { Linear:'Linear',EqualPower:'EqualPower',FullVolume:'FullVolume',EMonoChannelUpmixMethod_MAX:'EMonoChannelUpmixMethod_MAX', };
 declare class AudioSettings extends DeveloperSettings { 
-	DefaultSoundClassName: StringAssetReference;
-	DefaultSoundConcurrencyName: StringAssetReference;
-	DefaultBaseSoundMix: StringAssetReference;
-	VoiPSoundClass: StringAssetReference;
-	LowPassFilterResonance: number;
+	DefaultSoundClassName: SoftObjectPath;
+	DefaultMediaSoundClassName: SoftObjectPath;
+	DefaultSoundConcurrencyName: SoftObjectPath;
+	DefaultBaseSoundMix: SoftObjectPath;
+	VoiPSoundClass: SoftObjectPath;
+	VoiPSampleRate: EVoiceSampleRate;
+	VoipBufferingDelay: number;
+	DefaultReverbSendLevel: number;
 	MaximumConcurrentStreams: number;
 	QualityLevels: AudioQualitySettings[];
 	bAllowVirtualizedSounds: boolean;
 	bDisableMasterEQ: boolean;
-	bDisableMasterReverb: boolean;
 	bAllowCenterChannel3DPanning: boolean;
+	MaxWaveInstances: any;
+	NumStoppingSources: any;
+	PanningMethod: EPanningMethod;
+	MonoChannelUpmixMethod: EMonoChannelUpmixMethod;
 	DialogueFilenameFormat: string;
 	static Load(ResourceName: string): AudioSettings;
 	static Find(Outer: UObject, ResourceName: string): AudioSettings;
@@ -9358,7 +13475,7 @@ declare class AudioVolume extends Volume {
 }
 
 declare class EditorMapPerformanceTestDefinition { 
-	PerformanceTestmap: StringAssetReference;
+	PerformanceTestmap: SoftObjectPath;
 	TestTimer: number;
 	clone() : EditorMapPerformanceTestDefinition;
 	static C(Other: UObject | any): EditorMapPerformanceTestDefinition;
@@ -9474,9 +13591,9 @@ declare class LaunchOnTestSettings {
 declare class AutomationTestSettings extends UObject { 
 	EngineTestModules: string[];
 	EditorTestModules: string[];
-	AutomationTestmap: StringAssetReference;
+	AutomationTestmap: SoftObjectPath;
 	EditorPerformanceTestMaps: EditorMapPerformanceTestDefinition[];
-	AssetsToOpen: StringAssetReference[];
+	AssetsToOpen: SoftObjectPath[];
 	BuildPromotionTest: BuildPromotionTestSettings;
 	MaterialEditorPromotionTest: MaterialEditorPromotionSettings;
 	ParticleEditorPromotionTest: ParticleEditorPromotionSettings;
@@ -9520,20 +13637,22 @@ declare class BlueprintMapLibrary extends BlueprintFunctionLibrary {
 	static Map_Find(TargetMap: any,Key: number,Value?: number): {Value: number, $: boolean};
 	static Map_Contains(TargetMap: any,Key: number): boolean;
 	static Map_Clear(TargetMap: any): void;
-	static Map_Add(TargetMap: any,Key: number,Value: number): boolean;
+	static Map_Add(TargetMap: any,Key: number,Value: number): void;
 	static C(Other: UObject | any): BlueprintMapLibrary;
 }
 
-declare type EApplicationState = 'Unknown' | 'Inactive' | 'Background' | 'Active';
-declare var EApplicationState : { Unknown:'Unknown',Inactive:'Inactive',Background:'Background',Active:'Active', };
-declare type EScreenOrientation = 'Unknown' | 'Portrait' | 'PortraitUpsideDown' | 'LandscapeLeft' | 'LandscapeRight' | 'FaceUp' | 'FaceDown';
-declare var EScreenOrientation : { Unknown:'Unknown',Portrait:'Portrait',PortraitUpsideDown:'PortraitUpsideDown',LandscapeLeft:'LandscapeLeft',LandscapeRight:'LandscapeRight',FaceUp:'FaceUp',FaceDown:'FaceDown', };
+declare type EApplicationState = 'Unknown' | 'Inactive' | 'Background' | 'Active' | 'EApplicationState_MAX';
+declare var EApplicationState : { Unknown:'Unknown',Inactive:'Inactive',Background:'Background',Active:'Active',EApplicationState_MAX:'EApplicationState_MAX', };
+declare type EScreenOrientation = 'Unknown' | 'Portrait' | 'PortraitUpsideDown' | 'LandscapeLeft' | 'LandscapeRight' | 'FaceUp' | 'FaceDown' | 'EScreenOrientation_MAX';
+declare var EScreenOrientation : { Unknown:'Unknown',Portrait:'Portrait',PortraitUpsideDown:'PortraitUpsideDown',LandscapeLeft:'LandscapeLeft',LandscapeRight:'LandscapeRight',FaceUp:'FaceUp',FaceDown:'FaceDown',EScreenOrientation_MAX:'EScreenOrientation_MAX', };
 declare class PlatformGameInstance extends GameInstance { 
 	ApplicationWillDeactivateDelegate: UnrealEngineMulticastDelegate<() => void>;
 	ApplicationHasReactivatedDelegate: UnrealEngineMulticastDelegate<() => void>;
 	ApplicationWillEnterBackgroundDelegate: UnrealEngineMulticastDelegate<() => void>;
 	ApplicationHasEnteredForegroundDelegate: UnrealEngineMulticastDelegate<() => void>;
 	ApplicationWillTerminateDelegate: UnrealEngineMulticastDelegate<() => void>;
+	ApplicationShouldUnloadResourcesDelegate: UnrealEngineMulticastDelegate<() => void>;
+	ApplicationReceivedStartupArgumentsDelegate: UnrealEngineMulticastDelegate<(StartupArguments: string[]) => void>;
 	ApplicationRegisteredForRemoteNotificationsDelegate: UnrealEngineMulticastDelegate<(inArray: number[]) => void>;
 	ApplicationRegisteredForUserNotificationsDelegate: UnrealEngineMulticastDelegate<(inInt: number) => void>;
 	ApplicationFailedToRegisterForRemoteNotificationsDelegate: UnrealEngineMulticastDelegate<(inString: string) => void>;
@@ -9553,6 +13672,8 @@ declare class Timespan {
 	AsTimespan_Timespan(): string;
 	Add_TimespanTimespan(B: Timespan): Timespan;
 	BreakTimespan(Days?: number,Hours?: number,Minutes?: number,Seconds?: number,Milliseconds?: number): {Days: number, Hours: number, Minutes: number, Seconds: number, Milliseconds: number};
+	BreakTimespan2(Days?: number,Hours?: number,Minutes?: number,Seconds?: number,FractionNano?: number): {Days: number, Hours: number, Minutes: number, Seconds: number, FractionNano: number};
+	Divide_TimespanFloat(Scalar: number): Timespan;
 	EqualEqual_TimespanTimespan(B: Timespan): boolean;
 	GetDays(): number;
 	GetDuration(): Timespan;
@@ -9576,6 +13697,8 @@ declare class Timespan {
 	static AsTimespan_Timespan(InTimespan: Timespan): string;
 	static Add_TimespanTimespan(A: Timespan,B: Timespan): Timespan;
 	static BreakTimespan(InTimespan: Timespan,Days?: number,Hours?: number,Minutes?: number,Seconds?: number,Milliseconds?: number): {Days: number, Hours: number, Minutes: number, Seconds: number, Milliseconds: number};
+	static BreakTimespan2(InTimespan: Timespan,Days?: number,Hours?: number,Minutes?: number,Seconds?: number,FractionNano?: number): {Days: number, Hours: number, Minutes: number, Seconds: number, FractionNano: number};
+	static Divide_TimespanFloat(A: Timespan,Scalar: number): Timespan;
 	static EqualEqual_TimespanTimespan(A: Timespan,B: Timespan): boolean;
 	static GetDays(A: Timespan): number;
 	static GetDuration(A: Timespan): Timespan;
@@ -9602,6 +13725,7 @@ declare class Timespan {
 	static FromMinutes(Minutes: number): Timespan;
 	static FromSeconds(Seconds: number): Timespan;
 	static MakeTimespan(Days: number,Hours: number,Minutes: number,Seconds: number,Milliseconds: number): Timespan;
+	static MakeTimespan2(Days: number,Hours: number,Minutes: number,Seconds: number,FractionNano: number): Timespan;
 	static TimespanMaxValue(): Timespan;
 	static TimespanMinValue(): Timespan;
 	static TimespanZeroValue(): Timespan;
@@ -9690,6 +13814,7 @@ declare class BlueprintPlatformLibrary extends BlueprintFunctionLibrary {
 	static ScheduleLocalNotificationBadgeAtTime(FireDateTime: DateTime,LocalTime: boolean,ActivationEvent: string): void;
 	static ScheduleLocalNotificationAtTime(FireDateTime: DateTime,LocalTime: boolean,Title: string,Body: string,Action: string,ActivationEvent: string): void;
 	static GetLaunchNotification(NotificationLaunchedApp?: boolean,ActivationEvent?: string,FireDate?: number): {NotificationLaunchedApp: boolean, ActivationEvent: string, FireDate: number};
+	static GetDeviceOrientation(): EScreenOrientation;
 	static ClearAllLocalNotifications(): void;
 	static CancelLocalNotification(ActivationEvent: string): void;
 	static C(Other: UObject | any): BlueprintPlatformLibrary;
@@ -9711,49 +13836,10 @@ declare class BlueprintSetLibrary extends BlueprintFunctionLibrary {
 	static Set_Contains(TargetSet: any,ItemToFind: number): boolean;
 	static Set_Clear(TargetSet: any): void;
 	static Set_AddItems(TargetSet: any,NewItems: number[]): void;
-	static Set_Add(TargetSet: any,NewItem: number): boolean;
+	static Set_Add(TargetSet: any,NewItem: number): void;
 	static C(Other: UObject | any): BlueprintSetLibrary;
 }
 
-declare class CircleElement2D { 
-	Center: Vector2D;
-	Radius: number;
-	clone() : CircleElement2D;
-	static C(Other: UObject | any): CircleElement2D;
-}
-
-declare class BoxElement2D { 
-	Center: Vector2D;
-	Width: number;
-	Height: number;
-	Angle: number;
-	clone() : BoxElement2D;
-	static C(Other: UObject | any): BoxElement2D;
-}
-
-declare class ConvexElement2D { 
-	VertexData: Vector2D[];
-	clone() : ConvexElement2D;
-	static C(Other: UObject | any): ConvexElement2D;
-}
-
-declare class AggregateGeometry2D { 
-	CircleElements: CircleElement2D[];
-	BoxElements: BoxElement2D[];
-	ConvexElements: ConvexElement2D[];
-	clone() : AggregateGeometry2D;
-	static C(Other: UObject | any): AggregateGeometry2D;
-}
-
-declare class BodySetup2D extends BodySetup { 
-	AggGeom2D: AggregateGeometry2D;
-	static Load(ResourceName: string): BodySetup2D;
-	static Find(Outer: UObject, ResourceName: string): BodySetup2D;
-	static GetDefaultObject(): BodySetup2D;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BodySetup2D;
-	static C(Other: UObject | any): BodySetup2D;
-}
-
 declare class BoneMaskFilter extends UObject { 
 	BlendPoses: InputBlendPose[];
 	static Load(ResourceName: string): BoneMaskFilter;
@@ -9763,7 +13849,7 @@ declare class BoneMaskFilter extends UObject {
 	static C(Other: UObject | any): BoneMaskFilter;
 }
 
-declare class BookMark2D extends UObject { 
+declare class BookMark2D extends BookmarkBase { 
 	Zoom2D: number;
 	Location: IntPoint;
 	static Load(ResourceName: string): BookMark2D;
@@ -9775,6 +13861,7 @@ declare class BookMark2D extends UObject {
 
 declare class BoxComponent extends ShapeComponent { 
 	BoxExtent: Vector;
+	LineThickness: number;
 	static Load(ResourceName: string): BoxComponent;
 	static Find(Outer: UObject, ResourceName: string): BoxComponent;
 	static GetDefaultObject(): BoxComponent;
@@ -9785,16 +13872,16 @@ declare class BoxComponent extends ShapeComponent {
 	static C(Other: UObject | any): BoxComponent;
 }
 
-declare type EReflectionSourceType = 'CapturedScene' | 'SpecifiedCubemap';
-declare var EReflectionSourceType : { CapturedScene:'CapturedScene',SpecifiedCubemap:'SpecifiedCubemap', };
+declare type EReflectionSourceType = 'CapturedScene' | 'SpecifiedCubemap' | 'EReflectionSourceType_MAX';
+declare var EReflectionSourceType : { CapturedScene:'CapturedScene',SpecifiedCubemap:'SpecifiedCubemap',EReflectionSourceType_MAX:'EReflectionSourceType_MAX', };
 declare class ReflectionCaptureComponent extends SceneComponent { 
 	CaptureOffsetComponent: BillboardComponent;
-	ReflectionSourceType: ReflectionSourceType;
+	ReflectionSourceType: EReflectionSourceType;
 	Cubemap: TextureCube;
 	SourceCubemapAngle: number;
 	Brightness: number;
 	CaptureOffset: Vector;
-	StateId: Guid;
+	MapBuildDataId: Guid;
 	static Load(ResourceName: string): ReflectionCaptureComponent;
 	static Find(Outer: UObject, ResourceName: string): ReflectionCaptureComponent;
 	static GetDefaultObject(): ReflectionCaptureComponent;
@@ -9873,8 +13960,8 @@ declare class CheckBoxStyleAsset extends UObject {
 	static C(Other: UObject | any): CheckBoxStyleAsset;
 }
 
-declare type EPlatformInterfaceDataType = 'PIDT_None' | 'PIDT_Int' | 'PIDT_Float' | 'PIDT_String' | 'PIDT_Object' | 'PIDT_Custom';
-declare var EPlatformInterfaceDataType : { PIDT_None:'PIDT_None',PIDT_Int:'PIDT_Int',PIDT_Float:'PIDT_Float',PIDT_String:'PIDT_String',PIDT_Object:'PIDT_Object',PIDT_Custom:'PIDT_Custom', };
+declare type EPlatformInterfaceDataType = 'PIDT_None' | 'PIDT_Int' | 'PIDT_Float' | 'PIDT_String' | 'PIDT_Object' | 'PIDT_Custom' | 'PIDT_MAX';
+declare var EPlatformInterfaceDataType : { PIDT_None:'PIDT_None',PIDT_Int:'PIDT_Int',PIDT_Float:'PIDT_Float',PIDT_String:'PIDT_String',PIDT_Object:'PIDT_Object',PIDT_Custom:'PIDT_Custom',PIDT_MAX:'PIDT_MAX', };
 declare class PlatformInterfaceData { 
 	DataName: string;
 	Type: EPlatformInterfaceDataType;
@@ -9983,6 +14070,26 @@ declare class ComponentDelegateBinding extends DynamicBlueprintBinding {
 	static C(Other: UObject | any): ComponentDelegateBinding;
 }
 
+declare class CompositeCurveTable extends CurveTable { 
+	ParentTables: CurveTable[];
+	OldParentTables: CurveTable[];
+	static Load(ResourceName: string): CompositeCurveTable;
+	static Find(Outer: UObject, ResourceName: string): CompositeCurveTable;
+	static GetDefaultObject(): CompositeCurveTable;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompositeCurveTable;
+	static C(Other: UObject | any): CompositeCurveTable;
+}
+
+declare class CompositeDataTable extends DataTable { 
+	ParentTables: DataTable[];
+	OldParentTables: DataTable[];
+	static Load(ResourceName: string): CompositeDataTable;
+	static Find(Outer: UObject, ResourceName: string): CompositeDataTable;
+	static GetDefaultObject(): CompositeDataTable;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CompositeDataTable;
+	static C(Other: UObject | any): CompositeDataTable;
+}
+
 declare class ControlChannel extends Channel { 
 	static Load(ResourceName: string): ControlChannel;
 	static Find(Outer: UObject, ResourceName: string): ControlChannel;
@@ -10010,6 +14117,7 @@ declare class StreamingSettings extends DeveloperSettings {
 	AsyncLoadingTimeLimit: number;
 	PriorityAsyncLoadingExtraTime: number;
 	LevelStreamingActorsUpdateTimeLimit: number;
+	PriorityLevelStreamingActorsUpdateExtraTime: number;
 	LevelStreamingComponentsRegistrationGranularity: number;
 	LevelStreamingUnregisterComponentsTimeLimit: number;
 	LevelStreamingComponentsUnregistrationGranularity: number;
@@ -10025,11 +14133,13 @@ declare class GarbageCollectionSettings extends DeveloperSettings {
 	TimeBetweenPurgingPendingKillObjects: number;
 	FlushStreamingOnGC: boolean;
 	AllowParallelGC: boolean;
+	IncrementalBeginDestroyEnabled: boolean;
 	CreateGCClusters: boolean;
 	MergeGCClusters: boolean;
 	ActorClusteringEnabled: boolean;
 	BlueprintClusteringEnabled: boolean;
 	UseDisregardForGCOnDedicatedServers: boolean;
+	MinGCClusterSize: number;
 	NumRetriesBeforeForcingGC: number;
 	MaxObjectsNotConsideredByGC: number;
 	SizeOfPermanentObjectPool: number;
@@ -10086,7 +14196,7 @@ declare class CurveSourceInterface extends Interface {
 declare class AssetBundleEntry { 
 	BundleScope: PrimaryAssetId;
 	BundleName: string;
-	BundleAssets: StringAssetReference[];
+	BundleAssets: SoftObjectPath[];
 	clone() : AssetBundleEntry;
 	static C(Other: UObject | any): AssetBundleEntry;
 }
@@ -10113,7 +14223,13 @@ declare class DataTableFunctionLibrary extends BlueprintFunctionLibrary {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataTableFunctionLibrary;
 	static GetDataTableRowNames(Table: DataTable,OutRowNames?: string[]): {OutRowNames: string[]};
 	static GetDataTableRowFromName(Table: DataTable,RowName: string,OutRow?: TableRowBase): {OutRow: TableRowBase, $: boolean};
+	static GetDataTableColumnAsString(DataTable: DataTable,PropertyName: string): string[];
+	static FillDataTableFromJSONString(DataTable: DataTable,JsonString: string): boolean;
+	static FillDataTableFromJSONFile(DataTable: DataTable,JSONFilePath: string): boolean;
+	static FillDataTableFromCSVString(DataTable: DataTable,CSVString: string): boolean;
+	static FillDataTableFromCSVFile(DataTable: DataTable,CSVFilePath: string): boolean;
 	static EvaluateCurveTableRow(CurveTable: CurveTable,RowName: string,InXY: number,OutResult?: EEvaluateCurveTableResult,OutXY?: number,ContextString?: string): {OutResult: EEvaluateCurveTableResult, OutXY: number};
+	static DoesDataTableRowExist(Table: DataTable,RowName: string): boolean;
 	static C(Other: UObject | any): DataTableFunctionLibrary;
 }
 
@@ -10170,169 +14286,27 @@ declare class DemoPendingNetGame extends PendingNetGame {
 	static C(Other: UObject | any): DemoPendingNetGame;
 }
 
-declare class FractureEffect { 
-	ParticleSystem: ParticleSystem;
-	Sound: SoundBase;
-	clone() : FractureEffect;
-	static C(Other: UObject | any): FractureEffect;
-}
-
-declare class DestructibleDamageParameters { 
-	DamageThreshold: number;
-	DamageSpread: number;
-	bEnableImpactDamage: boolean;
-	ImpactDamage: number;
-	DefaultImpactDamageDepth: number;
-	bCustomImpactResistance: boolean;
-	ImpactResistance: number;
-	clone() : DestructibleDamageParameters;
-	static C(Other: UObject | any): DestructibleDamageParameters;
-}
-
-declare class DestructibleDebrisParameters { 
-	DebrisLifetimeMin: number;
-	DebrisLifetimeMax: number;
-	DebrisMaxSeparationMin: number;
-	DebrisMaxSeparationMax: number;
-	ValidBounds: Box;
-	clone() : DestructibleDebrisParameters;
-	static C(Other: UObject | any): DestructibleDebrisParameters;
-}
-
-declare class DestructibleAdvancedParameters { 
-	DamageCap: number;
-	ImpactVelocityThreshold: number;
-	MaxChunkSpeed: number;
-	FractureImpulseScale: number;
-	clone() : DestructibleAdvancedParameters;
-	static C(Other: UObject | any): DestructibleAdvancedParameters;
-}
-
-declare class DestructibleSpecialHierarchyDepths { 
-	SupportDepth: number;
-	MinimumFractureDepth: number;
-	bEnableDebris: boolean;
-	DebrisDepth: number;
-	EssentialDepth: number;
-	clone() : DestructibleSpecialHierarchyDepths;
-	static C(Other: UObject | any): DestructibleSpecialHierarchyDepths;
-}
-
-declare type EImpactDamageOverride = 'IDO_None' | 'IDO_On' | 'IDO_Off';
-declare var EImpactDamageOverride : { IDO_None:'IDO_None',IDO_On:'IDO_On',IDO_Off:'IDO_Off', };
-declare class DestructibleDepthParameters { 
-	ImpactDamageOverride: EImpactDamageOverride;
-	clone() : DestructibleDepthParameters;
-	static C(Other: UObject | any): DestructibleDepthParameters;
-}
-
-declare class DestructibleParametersFlag { 
-	bAccumulateDamage: boolean;
-	bAssetDefinedSupport: boolean;
-	bWorldSupport: boolean;
-	bDebrisTimeout: boolean;
-	bDebrisMaxSeparation: boolean;
-	bCrumbleSmallestChunks: boolean;
-	bAccurateRaycasts: boolean;
-	bUseValidBounds: boolean;
-	bFormExtendedStructures: boolean;
-	clone() : DestructibleParametersFlag;
-	static C(Other: UObject | any): DestructibleParametersFlag;
-}
-
-declare class DestructibleParameters { 
-	DamageParameters: DestructibleDamageParameters;
-	DebrisParameters: DestructibleDebrisParameters;
-	AdvancedParameters: DestructibleAdvancedParameters;
-	SpecialHierarchyDepths: DestructibleSpecialHierarchyDepths;
-	DepthParameters: DestructibleDepthParameters[];
-	Flags: DestructibleParametersFlag;
-	clone() : DestructibleParameters;
-	static C(Other: UObject | any): DestructibleParameters;
-}
-
-declare class FractureMaterial { 
-	UVScale: Vector2D;
-	UVOffset: Vector2D;
-	Tangent: Vector;
-	UAngle: number;
-	InteriorElementIndex: number;
-	clone() : FractureMaterial;
-	static C(Other: UObject | any): FractureMaterial;
-}
-
-declare class DestructibleChunkParameters { 
-	bIsSupportChunk: boolean;
-	bDoNotFracture: boolean;
-	bDoNotDamage: boolean;
-	bDoNotCrumble: boolean;
-	clone() : DestructibleChunkParameters;
-	static C(Other: UObject | any): DestructibleChunkParameters;
-}
-
-declare class DestructibleFractureSettings extends UObject { 
-	CellSiteCount: number;
-	FractureMaterialDesc: FractureMaterial;
-	RandomSeed: number;
-	VoronoiSites: Vector[];
-	OriginalSubmeshCount: number;
-	Materials: MaterialInterface[];
-	ChunkParameters: DestructibleChunkParameters[];
-	static Load(ResourceName: string): DestructibleFractureSettings;
-	static Find(Outer: UObject, ResourceName: string): DestructibleFractureSettings;
-	static GetDefaultObject(): DestructibleFractureSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DestructibleFractureSettings;
-	static C(Other: UObject | any): DestructibleFractureSettings;
-}
-
-declare class DestructibleMesh extends SkeletalMesh { 
-	DefaultDestructibleParameters: DestructibleParameters;
-	FractureEffects: FractureEffect[];
-	FractureSettings: DestructibleFractureSettings;
-	SourceStaticMesh: StaticMesh;
-	SourceSMImportTimestamp: DateTime;
-	FractureChunkMeshes: StaticMesh[];
-	static Load(ResourceName: string): DestructibleMesh;
-	static Find(Outer: UObject, ResourceName: string): DestructibleMesh;
-	static GetDefaultObject(): DestructibleMesh;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DestructibleMesh;
-	static C(Other: UObject | any): DestructibleMesh;
-}
-
-declare class DestructibleComponent extends SkinnedMeshComponent { 
-	bFractureEffectOverride: boolean;
-	FractureEffects: FractureEffect[];
-	bEnableHardSleeping: boolean;
-	LargeChunkThreshold: number;
-	DestructibleMesh: DestructibleMesh;
-	OnComponentFracture: UnrealEngineMulticastDelegate<(HitPoint: Vector, HitDirection: Vector) => void>;
-	static Load(ResourceName: string): DestructibleComponent;
-	static Find(Outer: UObject, ResourceName: string): DestructibleComponent;
-	static GetDefaultObject(): DestructibleComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DestructibleComponent;
-	SetDestructibleMesh(NewMesh: DestructibleMesh): void;
-	GetDestructibleMesh(): DestructibleMesh;
-	ApplyRadiusDamage(BaseDamage: number,HurtOrigin: Vector,DamageRadius: number,ImpulseStrength: number,bFullDamage: boolean): void;
-	ApplyDamage(DamageAmount: number,HitLocation: Vector,ImpulseDir: Vector,ImpulseStrength: number): void;
-	static C(Other: UObject | any): DestructibleComponent;
-}
-
-declare class DestructibleActor extends Actor { 
-	DestructibleComponent: DestructibleComponent;
-	bAffectNavigation: boolean;
-	OnActorFracture: UnrealEngineMulticastDelegate<(HitPoint: Vector, HitDirection: Vector) => void>;
-	static GetDefaultObject(): DestructibleActor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DestructibleActor;
-	static C(Other: UObject | any): DestructibleActor;
+declare class DestructibleInterface extends Interface { 
+	static Load(ResourceName: string): DestructibleInterface;
+	static Find(Outer: UObject, ResourceName: string): DestructibleInterface;
+	static GetDefaultObject(): DestructibleInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DestructibleInterface;
+	static C(Other: UObject | any): DestructibleInterface;
 }
 
 declare class TextureLODGroup { 
 	Group: TextureGroup;
 	LODBias: number;
+	LODBias_Smaller: number;
+	LODBias_Smallest: number;
 	NumStreamedMips: number;
 	MipGenSettings: TextureMipGenSettings;
 	MinLODSize: number;
 	MaxLODSize: number;
+	MaxLODSize_Smaller: number;
+	MaxLODSize_Smallest: number;
+	OptionalLODBias: number;
+	OptionalMaxLODSize: number;
 	MinMagFilter: string;
 	MipFilter: string;
 	clone() : TextureLODGroup;
@@ -10369,96 +14343,6 @@ declare class DeviceProfileManager extends UObject {
 	static C(Other: UObject | any): DeviceProfileManager;
 }
 
-declare class LightComponentBase extends SceneComponent { 
-	LightGuid: Guid;
-	Brightness: number;
-	Intensity: number;
-	LightColor: Color;
-	bAffectsWorld: boolean;
-	CastShadows: boolean;
-	CastStaticShadows: boolean;
-	CastDynamicShadows: boolean;
-	bAffectTranslucentLighting: boolean;
-	bCastVolumetricShadow: boolean;
-	IndirectLightingIntensity: number;
-	VolumetricScatteringIntensity: number;
-	StaticEditorTexture: Texture2D;
-	StaticEditorTextureScale: number;
-	DynamicEditorTexture: Texture2D;
-	DynamicEditorTextureScale: number;
-	static Load(ResourceName: string): LightComponentBase;
-	static Find(Outer: UObject, ResourceName: string): LightComponentBase;
-	static GetDefaultObject(): LightComponentBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightComponentBase;
-	SetCastVolumetricShadow(bNewValue: boolean): void;
-	SetCastShadows(bNewValue: boolean): void;
-	GetLightColor(): LinearColor;
-	static C(Other: UObject | any): LightComponentBase;
-}
-
-declare class TextureLightProfile extends Texture2D { 
-	Brightness: number;
-	TextureMultiplier: number;
-	static Load(ResourceName: string): TextureLightProfile;
-	static Find(Outer: UObject, ResourceName: string): TextureLightProfile;
-	static GetDefaultObject(): TextureLightProfile;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureLightProfile;
-	static C(Other: UObject | any): TextureLightProfile;
-}
-
-declare class LightComponent extends LightComponentBase { 
-	Temperature: number;
-	MaxDrawDistance: number;
-	MaxDistanceFadeRange: number;
-	bUseTemperature: boolean;
-	ShadowMapChannel: number;
-	MinRoughness: number;
-	ShadowResolutionScale: number;
-	ShadowBias: number;
-	ShadowSharpen: number;
-	ContactShadowLength: number;
-	InverseSquaredFalloff: boolean;
-	CastTranslucentShadows: boolean;
-	bCastShadowsFromCinematicObjectsOnly: boolean;
-	bAffectDynamicIndirectLighting: boolean;
-	LightingChannels: LightingChannels;
-	LightFunctionMaterial: MaterialInterface;
-	LightFunctionScale: Vector;
-	IESTexture: TextureLightProfile;
-	bUseIESBrightness: boolean;
-	IESBrightnessScale: number;
-	LightFunctionFadeDistance: number;
-	DisabledBrightness: number;
-	bEnableLightShaftBloom: boolean;
-	BloomScale: number;
-	BloomThreshold: number;
-	BloomTint: Color;
-	bUseRayTracedDistanceFieldShadows: boolean;
-	RayStartOffsetDepthScale: number;
-	static Load(ResourceName: string): LightComponent;
-	static Find(Outer: UObject, ResourceName: string): LightComponent;
-	static GetDefaultObject(): LightComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightComponent;
-	SetVolumetricScatteringIntensity(NewIntensity: number): void;
-	SetTemperature(NewTemperature: number): void;
-	SetShadowBias(NewValue: number): void;
-	SetLightFunctionScale(NewLightFunctionScale: Vector): void;
-	SetLightFunctionMaterial(NewLightFunctionMaterial: MaterialInterface): void;
-	SetLightFunctionFadeDistance(NewLightFunctionFadeDistance: number): void;
-	SetLightFunctionDisabledBrightness(NewValue: number): void;
-	SetLightColor(NewLightColor: LinearColor,bSRGB: boolean): void;
-	SetIntensity(NewIntensity: number): void;
-	SetIndirectLightingIntensity(NewIntensity: number): void;
-	SetIESTexture(NewValue: TextureLightProfile): void;
-	SetEnableLightShaftBloom(bNewValue: boolean): void;
-	SetBloomTint(NewValue: Color): void;
-	SetBloomThreshold(NewValue: number): void;
-	SetBloomScale(NewValue: number): void;
-	SetAffectTranslucentLighting(bNewValue: boolean): void;
-	SetAffectDynamicIndirectLighting(bNewValue: boolean): void;
-	static C(Other: UObject | any): LightComponent;
-}
-
 declare class Light extends Actor { 
 	LightComponent: LightComponent;
 	bEnabled: boolean;
@@ -10487,14 +14371,6 @@ declare class DirectionalLight extends Light {
 	static C(Other: UObject | any): DirectionalLight;
 }
 
-declare class LightmassLightSettings { 
-	IndirectLightingSaturation: number;
-	ShadowExponent: number;
-	bUseAreaShadowsForStationaryLight: boolean;
-	clone() : LightmassLightSettings;
-	static C(Other: UObject | any): LightmassLightSettings;
-}
-
 declare class LightmassDirectionalLightSettings extends LightmassLightSettings { 
 	LightSourceAngle: number;
 	clone() : LightmassDirectionalLightSettings;
@@ -10518,6 +14394,7 @@ declare class DirectionalLightComponent extends LightComponent {
 	FarShadowDistance: number;
 	DistanceFieldShadowDistance: number;
 	LightSourceAngle: number;
+	LightSourceSoftAngle: number;
 	TraceDistance: number;
 	LightmassSettings: LightmassDirectionalLightSettings;
 	bCastModulatedShadows: boolean;
@@ -10557,8 +14434,8 @@ declare class DistributionFloatConstantCurve extends DistributionFloat {
 	static C(Other: UObject | any): DistributionFloatConstantCurve;
 }
 
-declare type DistributionParamMode = 'DPM_Normal' | 'DPM_Abs' | 'DPM_Direct';
-declare var DistributionParamMode : { DPM_Normal:'DPM_Normal',DPM_Abs:'DPM_Abs',DPM_Direct:'DPM_Direct', };
+declare type DistributionParamMode = 'DPM_Normal' | 'DPM_Abs' | 'DPM_Direct' | 'DPM_MAX';
+declare var DistributionParamMode : { DPM_Normal:'DPM_Normal',DPM_Abs:'DPM_Abs',DPM_Direct:'DPM_Direct',DPM_MAX:'DPM_MAX', };
 declare class DistributionFloatParameterBase extends DistributionFloatConstant { 
 	ParameterName: string;
 	MinInput: number;
@@ -10618,8 +14495,8 @@ declare class DistributionFloatUniformCurve extends DistributionFloat {
 	static C(Other: UObject | any): DistributionFloatUniformCurve;
 }
 
-declare type EDistributionVectorLockFlags = 'EDVLF_None' | 'EDVLF_XY' | 'EDVLF_XZ' | 'EDVLF_YZ' | 'EDVLF_XYZ';
-declare var EDistributionVectorLockFlags : { EDVLF_None:'EDVLF_None',EDVLF_XY:'EDVLF_XY',EDVLF_XZ:'EDVLF_XZ',EDVLF_YZ:'EDVLF_YZ',EDVLF_XYZ:'EDVLF_XYZ', };
+declare type EDistributionVectorLockFlags = 'EDVLF_None' | 'EDVLF_XY' | 'EDVLF_XZ' | 'EDVLF_YZ' | 'EDVLF_XYZ' | 'EDVLF_MAX';
+declare var EDistributionVectorLockFlags : { EDVLF_None:'EDVLF_None',EDVLF_XY:'EDVLF_XY',EDVLF_XZ:'EDVLF_XZ',EDVLF_YZ:'EDVLF_YZ',EDVLF_XYZ:'EDVLF_XYZ',EDVLF_MAX:'EDVLF_MAX', };
 declare class DistributionVectorConstant extends DistributionVector { 
 	Constant: Vector;
 	bLockAxes: boolean;
@@ -10664,8 +14541,8 @@ declare class DistributionVectorParticleParameter extends DistributionVectorPara
 	static C(Other: UObject | any): DistributionVectorParticleParameter;
 }
 
-declare type EDistributionVectorMirrorFlags = 'EDVMF_Same' | 'EDVMF_Different' | 'EDVMF_Mirror';
-declare var EDistributionVectorMirrorFlags : { EDVMF_Same:'EDVMF_Same',EDVMF_Different:'EDVMF_Different',EDVMF_Mirror:'EDVMF_Mirror', };
+declare type EDistributionVectorMirrorFlags = 'EDVMF_Same' | 'EDVMF_Different' | 'EDVMF_Mirror' | 'EDVMF_MAX';
+declare var EDistributionVectorMirrorFlags : { EDVMF_Same:'EDVMF_Same',EDVMF_Different:'EDVMF_Different',EDVMF_Mirror:'EDVMF_Mirror',EDVMF_MAX:'EDVMF_MAX', };
 declare class DistributionVectorUniform extends DistributionVector { 
 	Max: Vector;
 	Min: Vector;
@@ -10775,17 +14652,6 @@ declare class EdGraphNode_Documentation extends EdGraphNode {
 	static C(Other: UObject | any): EdGraphNode_Documentation;
 }
 
-declare class EndUserSettings extends UObject { 
-	bSendAnonymousUsageDataToEpic: boolean;
-	bSendMeanTimeBetweenFailureDataToEpic: boolean;
-	bAllowUserIdInUsageData: boolean;
-	static Load(ResourceName: string): EndUserSettings;
-	static Find(Outer: UObject, ResourceName: string): EndUserSettings;
-	static GetDefaultObject(): EndUserSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EndUserSettings;
-	static C(Other: UObject | any): EndUserSettings;
-}
-
 declare class EngineBaseTypes extends UObject { 
 	static Load(ResourceName: string): EngineBaseTypes;
 	static Find(Outer: UObject, ResourceName: string): EngineBaseTypes;
@@ -10847,6 +14713,7 @@ declare class ExponentialHeightFogComponent extends SceneComponent {
 	VolumetricFogEmissive: LinearColor;
 	VolumetricFogExtinctionScale: number;
 	VolumetricFogDistance: number;
+	VolumetricFogStaticLightingScatteringIntensity: number;
 	bOverrideLightColorsWithFogInscatteringColors: boolean;
 	static Load(ResourceName: string): ExponentialHeightFogComponent;
 	static Find(Outer: UObject, ResourceName: string): ExponentialHeightFogComponent;
@@ -10897,14 +14764,15 @@ declare class FloatingPawnMovement extends PawnMovementComponent {
 	static C(Other: UObject | any): FloatingPawnMovement;
 }
 
-declare type EFontLayoutMethod = 'Metrics' | 'BoundingBox';
-declare var EFontLayoutMethod : { Metrics:'Metrics',BoundingBox:'BoundingBox', };
+declare type EFontLayoutMethod = 'Metrics' | 'BoundingBox' | 'EFontLayoutMethod_MAX';
+declare var EFontLayoutMethod : { Metrics:'Metrics',BoundingBox:'BoundingBox',EFontLayoutMethod_MAX:'EFontLayoutMethod_MAX', };
 declare class FontFace extends UObject { 
 	SourceFilename: string;
-	Hinting: Hinting;
-	LoadingPolicy: LoadingPolicy;
-	LayoutMethod: LayoutMethod;
+	Hinting: EFontHinting;
+	LoadingPolicy: EFontLoadingPolicy;
+	LayoutMethod: EFontLayoutMethod;
 	FontFaceData: number[];
+	SubFaces: string[];
 	static Load(ResourceName: string): FontFace;
 	static Find(Outer: UObject, ResourceName: string): FontFace;
 	static GetDefaultObject(): FontFace;
@@ -10934,6 +14802,7 @@ declare class GameMode extends GameModeBase {
 	EngineMessageClass: UnrealEngineClass;
 	InactivePlayerArray: PlayerState[];
 	InactivePlayerStateLifeSpan: number;
+	MaxInactivePlayers: number;
 	bHandleDedicatedServerReplays: boolean;
 	static GetDefaultObject(): GameMode;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GameMode;
@@ -10957,7 +14826,7 @@ declare class GameplayStatics extends BlueprintFunctionLibrary {
 	static Find(Outer: UObject, ResourceName: string): GameplayStatics;
 	static GetDefaultObject(): GameplayStatics;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GameplayStatics;
-	static UnloadStreamLevel(WorldContextObject: UObject,LevelName: string,LatentInfo: LatentActionInfo): void;
+	static UnloadStreamLevel(WorldContextObject: UObject,LevelName: string,LatentInfo: LatentActionInfo,bShouldBlockOnUnload: boolean): void;
 	static SuggestProjectileVelocity_CustomArc(WorldContextObject: UObject,OutLaunchVelocity?: Vector,StartPos?: Vector,EndPos?: Vector,OverrideGravityZ?: number,ArcParam?: number): {OutLaunchVelocity: Vector, $: boolean};
 	static SpawnSoundAttached(Sound: SoundBase,AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,LocationType: EAttachLocation,bStopWhenAttachedToDestroyed: boolean,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,ConcurrencySettings: SoundConcurrency,bAutoDestroy: boolean): AudioComponent;
 	static SpawnSoundAtLocation(WorldContextObject: UObject,Sound: SoundBase,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,ConcurrencySettings: SoundConcurrency,bAutoDestroy: boolean): AudioComponent;
@@ -10965,8 +14834,8 @@ declare class GameplayStatics extends BlueprintFunctionLibrary {
 	static SpawnObject(ObjectClass: UnrealEngineClass,Outer: UObject): UObject;
 	static SpawnForceFeedbackAttached(ForceFeedbackEffect: ForceFeedbackEffect,AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,LocationType: EAttachLocation,bStopWhenAttachedToDestroyed: boolean,bLooping: boolean,IntensityMultiplier: number,StartTime: number,AttenuationSettings: ForceFeedbackAttenuation,bAutoDestroy: boolean): ForceFeedbackComponent;
 	static SpawnForceFeedbackAtLocation(WorldContextObject: UObject,ForceFeedbackEffect: ForceFeedbackEffect,Location: Vector,Rotation: Rotator,bLooping: boolean,IntensityMultiplier: number,StartTime: number,AttenuationSettings: ForceFeedbackAttenuation,bAutoDestroy: boolean): ForceFeedbackComponent;
-	static SpawnEmitterAttached(EmitterTemplate: ParticleSystem,AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,LocationType: EAttachLocation,bAutoDestroy: boolean): ParticleSystemComponent;
-	static SpawnEmitterAtLocation(WorldContextObject: UObject,EmitterTemplate: ParticleSystem,Location: Vector,Rotation: Rotator,bAutoDestroy: boolean): ParticleSystemComponent;
+	static SpawnEmitterAttached(EmitterTemplate: ParticleSystem,AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,Scale: Vector,LocationType: EAttachLocation,bAutoDestroy: boolean,PoolingMethod: EPSCPoolMethod): ParticleSystemComponent;
+	static SpawnEmitterAtLocation(WorldContextObject: UObject,EmitterTemplate: ParticleSystem,Location: Vector,Rotation: Rotator,Scale: Vector,bAutoDestroy: boolean,PoolingMethod: EPSCPoolMethod): ParticleSystemComponent;
 	static SpawnDialogueAttached(Dialogue: DialogueWave,Context: DialogueContext,AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,LocationType: EAttachLocation,bStopWhenAttachedToDestroyed: boolean,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,bAutoDestroy: boolean): AudioComponent;
 	static SpawnDialogueAtLocation(WorldContextObject: UObject,Dialogue: DialogueWave,Context: DialogueContext,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,bAutoDestroy: boolean): AudioComponent;
 	static SpawnDialogue2D(WorldContextObject: UObject,Dialogue: DialogueWave,Context: DialogueContext,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,bAutoDestroy: boolean): AudioComponent;
@@ -10980,6 +14849,7 @@ declare class GameplayStatics extends BlueprintFunctionLibrary {
 	static SetGlobalPitchModulation(WorldContextObject: UObject,PitchModulation: number,TimeSec: number): void;
 	static SetGlobalListenerFocusParameters(WorldContextObject: UObject,FocusAzimuthScale: number,NonFocusAzimuthScale: number,FocusDistanceScale: number,NonFocusDistanceScale: number,FocusVolumeScale: number,NonFocusVolumeScale: number,FocusPriorityScale: number,NonFocusPriorityScale: number): void;
 	static SetGamePaused(WorldContextObject: UObject,bPaused: boolean): boolean;
+	static SetEnableWorldRendering(WorldContextObject: UObject,bEnable: boolean): void;
 	static SetBaseSoundMix(WorldContextObject: UObject,InSoundMix: SoundMix): void;
 	static SaveGameToSlot(SaveGameObject: SaveGame,SlotName: string,UserIndex: number): boolean;
 	static RemovePlayer(Player: PlayerController,bDestroyPawn: boolean): void;
@@ -10989,13 +14859,13 @@ declare class GameplayStatics extends BlueprintFunctionLibrary {
 	static ProjectWorldToScreen(Player: PlayerController,WorldPosition: Vector,ScreenPosition?: Vector2D,bPlayerViewportRelative?: boolean): {ScreenPosition: Vector2D, $: boolean};
 	static PopSoundMixModifier(WorldContextObject: UObject,InSoundMixModifier: SoundMix): void;
 	static PlayWorldCameraShake(WorldContextObject: UObject,Shake: UnrealEngineClass,Epicenter: Vector,InnerRadius: number,OuterRadius: number,Falloff: number,bOrientShakeTowardsEpicenter: boolean): void;
-	static PlaySoundAtLocation(WorldContextObject: UObject,Sound: SoundBase,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,ConcurrencySettings: SoundConcurrency): void;
-	static PlaySound2D(WorldContextObject: UObject,Sound: SoundBase,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,ConcurrencySettings: SoundConcurrency): void;
+	static PlaySoundAtLocation(WorldContextObject: UObject,Sound: SoundBase,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation,ConcurrencySettings: SoundConcurrency,OwningActor: Actor): void;
+	static PlaySound2D(WorldContextObject: UObject,Sound: SoundBase,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,ConcurrencySettings: SoundConcurrency,OwningActor: Actor): void;
 	static PlayDialogueAtLocation(WorldContextObject: UObject,Dialogue: DialogueWave,Context: DialogueContext,Location: Vector,Rotation: Rotator,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number,AttenuationSettings: SoundAttenuation): void;
 	static PlayDialogue2D(WorldContextObject: UObject,Dialogue: DialogueWave,Context: DialogueContext,VolumeMultiplier: number,PitchMultiplier: number,StartTime: number): void;
 	static ParseOption(Options: string,Key: string): string;
 	static OpenLevel(WorldContextObject: UObject,LevelName: string,bAbsolute: boolean,Options: string): void;
-	static MakeHitResult(bBlockingHit: boolean,bInitialOverlap: boolean,Time: number,Location: Vector,ImpactPoint: Vector,Normal: Vector,ImpactNormal: Vector,PhysMat: PhysicalMaterial,HitActor: Actor,HitComponent: PrimitiveComponent,HitBoneName: string,HitItem: number,FaceIndex: number,TraceStart: Vector,TraceEnd: Vector): HitResult;
+	static MakeHitResult(bBlockingHit: boolean,bInitialOverlap: boolean,Time: number,Distance: number,Location: Vector,ImpactPoint: Vector,Normal: Vector,ImpactNormal: Vector,PhysMat: PhysicalMaterial,HitActor: Actor,HitComponent: PrimitiveComponent,HitBoneName: string,HitItem: number,FaceIndex: number,TraceStart: Vector,TraceEnd: Vector): HitResult;
 	static LoadStreamLevel(WorldContextObject: UObject,LevelName: string,bMakeVisibleAfterLoad: boolean,bShouldBlockOnLoad: boolean,LatentInfo: LatentActionInfo): void;
 	static LoadGameFromSlot(SlotName: string,UserIndex: number): SaveGame;
 	static IsGamePaused(WorldContextObject: UObject): boolean;
@@ -11022,6 +14892,7 @@ declare class GameplayStatics extends BlueprintFunctionLibrary {
 	static GetGameState(WorldContextObject: UObject): GameStateBase;
 	static GetGameMode(WorldContextObject: UObject): GameModeBase;
 	static GetGameInstance(WorldContextObject: UObject): GameInstance;
+	static GetEnableWorldRendering(WorldContextObject: UObject): boolean;
 	static GetCurrentReverbEffect(WorldContextObject: UObject): ReverbEffect;
 	static GetCurrentLevelName(WorldContextObject: UObject,bRemovePrefixString: boolean): string;
 	static GetAudioTimeSeconds(WorldContextObject: UObject): number;
@@ -11046,14 +14917,14 @@ declare class GameplayStatics extends BlueprintFunctionLibrary {
 	static ClearSoundMixModifiers(WorldContextObject: UObject): void;
 	static ClearSoundMixClassOverride(WorldContextObject: UObject,InSoundMixModifier: SoundMix,InSoundClass: SoundClass,FadeOutTime: number): void;
 	static CancelAsyncLoading(): void;
-	static BreakHitResult(Hit: HitResult,bBlockingHit?: boolean,bInitialOverlap?: boolean,Time?: number,Location?: Vector,ImpactPoint?: Vector,Normal?: Vector,ImpactNormal?: Vector,PhysMat?: PhysicalMaterial,HitActor?: Actor,HitComponent?: PrimitiveComponent,HitBoneName?: string,HitItem?: number,FaceIndex?: number,TraceStart?: Vector,TraceEnd?: Vector): {bBlockingHit: boolean, bInitialOverlap: boolean, Time: number, Location: Vector, ImpactPoint: Vector, Normal: Vector, ImpactNormal: Vector, PhysMat: PhysicalMaterial, HitActor: Actor, HitComponent: PrimitiveComponent, HitBoneName: string, HitItem: number, FaceIndex: number, TraceStart: Vector, TraceEnd: Vector};
+	static BreakHitResult(Hit: HitResult,bBlockingHit?: boolean,bInitialOverlap?: boolean,Time?: number,Distance?: number,Location?: Vector,ImpactPoint?: Vector,Normal?: Vector,ImpactNormal?: Vector,PhysMat?: PhysicalMaterial,HitActor?: Actor,HitComponent?: PrimitiveComponent,HitBoneName?: string,HitItem?: number,FaceIndex?: number,TraceStart?: Vector,TraceEnd?: Vector): {bBlockingHit: boolean, bInitialOverlap: boolean, Time: number, Distance: number, Location: Vector, ImpactPoint: Vector, Normal: Vector, ImpactNormal: Vector, PhysMat: PhysicalMaterial, HitActor: Actor, HitComponent: PrimitiveComponent, HitBoneName: string, HitItem: number, FaceIndex: number, TraceStart: Vector, TraceEnd: Vector};
 	static BlueprintSuggestProjectileVelocity(WorldContextObject: UObject,TossVelocity?: Vector,StartLocation?: Vector,EndLocation?: Vector,LaunchSpeed?: number,OverrideGravityZ?: number,TraceOption?: ESuggestProjVelocityTraceOption,CollisionRadius?: number,bFavorHighArc?: boolean,bDrawDebug?: boolean): {TossVelocity: Vector, $: boolean};
 	static Blueprint_PredictProjectilePath_ByTraceChannel(WorldContextObject: UObject,OutHit?: HitResult,OutPathPositions?: Vector[],OutLastTraceDestination?: Vector,StartPos?: Vector,LaunchVelocity?: Vector,bTracePath?: boolean,ProjectileRadius?: number,TraceChannel?: ECollisionChannel,bTraceComplex?: boolean,ActorsToIgnore?: Actor[],DrawDebugType?: EDrawDebugTrace,DrawDebugTime?: number,SimFrequency?: number,MaxSimTime?: number,OverrideGravityZ?: number): {OutHit: HitResult, OutPathPositions: Vector[], OutLastTraceDestination: Vector, $: boolean};
 	static Blueprint_PredictProjectilePath_ByObjectType(WorldContextObject: UObject,OutHit?: HitResult,OutPathPositions?: Vector[],OutLastTraceDestination?: Vector,StartPos?: Vector,LaunchVelocity?: Vector,bTracePath?: boolean,ProjectileRadius?: number,ObjectTypes?: EObjectTypeQuery[],bTraceComplex?: boolean,ActorsToIgnore?: Actor[],DrawDebugType?: EDrawDebugTrace,DrawDebugTime?: number,SimFrequency?: number,MaxSimTime?: number,OverrideGravityZ?: number): {OutHit: HitResult, OutPathPositions: Vector[], OutLastTraceDestination: Vector, $: boolean};
 	static Blueprint_PredictProjectilePath_Advanced(WorldContextObject: UObject,PredictParams: PredictProjectilePathParams,PredictResult?: PredictProjectilePathResult): {PredictResult: PredictProjectilePathResult, $: boolean};
 	static BeginSpawningActorFromClass(WorldContextObject: UObject,ActorClass: UnrealEngineClass,SpawnTransform: Transform,bNoCollisionFail: boolean,Owner: Actor): Actor;
 	static BeginSpawningActorFromBlueprint(WorldContextObject: UObject,Blueprint: Blueprint,SpawnTransform: Transform,bNoCollisionFail: boolean): Actor;
-	static BeginDeferredActorSpawnFromClass(WorldContextObject: UObject,ActorClass: UnrealEngineClass,SpawnTransform: Transform,CollisionHandlingOverride: CollisionHandlingOverride,Owner: Actor): Actor;
+	static BeginDeferredActorSpawnFromClass(WorldContextObject: UObject,ActorClass: UnrealEngineClass,SpawnTransform: Transform,CollisionHandlingOverride: ESpawnActorCollisionHandlingMethod,Owner: Actor): Actor;
 	static AreSubtitlesEnabled(): boolean;
 	static AreAnyListenersWithinRange(WorldContextObject: UObject,Location: Vector,MaximumRange: number): boolean;
 	static ApplyRadialDamageWithFalloff(WorldContextObject: UObject,BaseDamage: number,MinimumDamage: number,Origin: Vector,DamageInnerRadius: number,DamageOuterRadius: number,DamageFalloff: number,DamageTypeClass: UnrealEngineClass,IgnoreActors: Actor[],DamageCauser: Actor,InstigatedByController: Controller,DamagePreventionChannel: ECollisionChannel): boolean;
@@ -11075,30 +14946,6 @@ declare class GameState extends GameStateBase {
 	static C(Other: UObject | any): GameState;
 }
 
-declare class LightmassPointLightSettings extends LightmassLightSettings { 
-	clone() : LightmassPointLightSettings;
-	static C(Other: UObject | any): LightmassPointLightSettings;
-}
-
-declare class PointLightComponent extends LightComponent { 
-	Radius: number;
-	AttenuationRadius: number;
-	bUseInverseSquaredFalloff: boolean;
-	LightFalloffExponent: number;
-	SourceRadius: number;
-	SourceLength: number;
-	LightmassSettings: LightmassPointLightSettings;
-	static Load(ResourceName: string): PointLightComponent;
-	static Find(Outer: UObject, ResourceName: string): PointLightComponent;
-	static GetDefaultObject(): PointLightComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PointLightComponent;
-	SetSourceRadius(bNewValue: number): void;
-	SetSourceLength(NewValue: number): void;
-	SetLightFalloffExponent(NewLightFalloffExponent: number): void;
-	SetAttenuationRadius(NewRadius: number): void;
-	static C(Other: UObject | any): PointLightComponent;
-}
-
 declare class SpotLightComponent extends PointLightComponent { 
 	InnerConeAngle: number;
 	OuterConeAngle: number;
@@ -11163,17 +15010,46 @@ declare class HapticFeedbackEffect_SoundWave extends HapticFeedbackEffect_Base {
 	static C(Other: UObject | any): HapticFeedbackEffect_SoundWave;
 }
 
+declare class HealthSnapshotBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): HealthSnapshotBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): HealthSnapshotBlueprintLibrary;
+	static GetDefaultObject(): HealthSnapshotBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HealthSnapshotBlueprintLibrary;
+	static StopPerformanceSnapshots(): void;
+	static StartPerformanceSnapshots(): void;
+	static LogPerformanceSnapshot(SnapshotTitle: string,bResetStats: boolean): void;
+	static C(Other: UObject | any): HealthSnapshotBlueprintLibrary;
+}
+
+declare class HLODProxyMesh { 
+	LODActor: any;
+	StaticMesh: StaticMesh;
+	Key: string;
+	clone() : HLODProxyMesh;
+	static C(Other: UObject | any): HLODProxyMesh;
+}
+
+declare class HLODProxy extends UObject { 
+	OwningMap: World;
+	ProxyMeshes: HLODProxyMesh[];
+	static Load(ResourceName: string): HLODProxy;
+	static Find(Outer: UObject, ResourceName: string): HLODProxy;
+	static GetDefaultObject(): HLODProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HLODProxy;
+	static C(Other: UObject | any): HLODProxy;
+}
+
 declare class ImportanceSamplingLibrary extends BlueprintFunctionLibrary { 
 	static Load(ResourceName: string): ImportanceSamplingLibrary;
 	static Find(Outer: UObject, ResourceName: string): ImportanceSamplingLibrary;
 	static GetDefaultObject(): ImportanceSamplingLibrary;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImportanceSamplingLibrary;
-	static RandomSobolFloat(Index: number,Dimension: number,Seed: number): number;
-	static RandomSobolCell3D(Index: number,NumCells: number,Cell: Vector,Seed: Vector): Vector;
-	static RandomSobolCell2D(Index: number,NumCells: number,Cell: Vector2D,Seed: Vector2D): Vector2D;
-	static NextSobolFloat(Index: number,Dimension: number,PreviousValue: number): number;
-	static NextSobolCell3D(Index: number,NumCells: number,PreviousValue: Vector): Vector;
-	static NextSobolCell2D(Index: number,NumCells: number,PreviousValue: Vector2D): Vector2D;
+	static RandomSobolFloat(index: number,Dimension: number,Seed: number): number;
+	static RandomSobolCell3D(index: number,NumCells: number,Cell: Vector,Seed: Vector): Vector;
+	static RandomSobolCell2D(index: number,NumCells: number,Cell: Vector2D,Seed: Vector2D): Vector2D;
+	static NextSobolFloat(index: number,Dimension: number,PreviousValue: number): number;
+	static NextSobolCell3D(index: number,NumCells: number,PreviousValue: Vector): Vector;
+	static NextSobolCell2D(index: number,NumCells: number,PreviousValue: Vector2D): Vector2D;
 	static MakeImportanceTexture(Texture: Texture2D,WeightingFunc: EImportanceWeight): ImportanceTexture;
 	static ImportanceSample(Texture: ImportanceTexture,Rand: Vector2D,Samples: number,Intensity: number,SamplePosition?: Vector2D,SampleColor?: LinearColor,SampleIntensity?: number,SampleSize?: number): {SamplePosition: Vector2D, SampleColor: LinearColor, SampleIntensity: number, SampleSize: number};
 	static BreakImportanceTexture(ImportanceTexture: ImportanceTexture,Texture?: Texture2D,WeightingFunc?: EImportanceWeight): {Texture: Texture2D, WeightingFunc: EImportanceWeight};
@@ -11297,23 +15173,23 @@ declare class InputAxisConfigEntry {
 	static C(Other: UObject | any): InputAxisConfigEntry;
 }
 
-declare type EMouseCaptureMode = 'NoCapture' | 'CapturePermanently' | 'CapturePermanently_IncludingInitialMouseDown' | 'CaptureDuringMouseDown' | 'CaptureDuringRightMouseDown';
-declare var EMouseCaptureMode : { NoCapture:'NoCapture',CapturePermanently:'CapturePermanently',CapturePermanently_IncludingInitialMouseDown:'CapturePermanently_IncludingInitialMouseDown',CaptureDuringMouseDown:'CaptureDuringMouseDown',CaptureDuringRightMouseDown:'CaptureDuringRightMouseDown', };
+declare type EMouseCaptureMode = 'NoCapture' | 'CapturePermanently' | 'CapturePermanently_IncludingInitialMouseDown' | 'CaptureDuringMouseDown' | 'CaptureDuringRightMouseDown' | 'EMouseCaptureMode_MAX';
+declare var EMouseCaptureMode : { NoCapture:'NoCapture',CapturePermanently:'CapturePermanently',CapturePermanently_IncludingInitialMouseDown:'CapturePermanently_IncludingInitialMouseDown',CaptureDuringMouseDown:'CaptureDuringMouseDown',CaptureDuringRightMouseDown:'CaptureDuringRightMouseDown',EMouseCaptureMode_MAX:'EMouseCaptureMode_MAX', };
 declare class InputActionKeyMapping { 
 	ActionName: string;
-	Key: Key;
 	bShift: boolean;
 	bCtrl: boolean;
 	bAlt: boolean;
 	bCmd: boolean;
+	Key: Key;
 	clone() : InputActionKeyMapping;
 	static C(Other: UObject | any): InputActionKeyMapping;
 }
 
 declare class InputAxisKeyMapping { 
 	AxisName: string;
-	Key: Key;
 	Scale: number;
+	Key: Key;
 	clone() : InputAxisKeyMapping;
 	static C(Other: UObject | any): InputAxisKeyMapping;
 }
@@ -11325,17 +15201,22 @@ declare class InputSettings extends UObject {
 	bUseMouseForTouch: boolean;
 	bEnableMouseSmoothing: boolean;
 	bEnableFOVScaling: boolean;
-	FOVScale: number;
-	DoubleClickTime: number;
 	bCaptureMouseOnLaunch: boolean;
-	DefaultViewportMouseCaptureMode: DefaultViewportMouseCaptureMode;
 	bDefaultViewportMouseLock: boolean;
-	DefaultViewportMouseLockMode: DefaultViewportMouseLockMode;
-	ActionMappings: InputActionKeyMapping[];
-	AxisMappings: InputAxisKeyMapping[];
 	bAlwaysShowTouchInterface: boolean;
 	bShowConsoleOnFourFingerTap: boolean;
-	DefaultTouchInterface: StringAssetReference;
+	bEnableGestureRecognizer: boolean;
+	bUseAutocorrect: boolean;
+	ExcludedAutocorrectOS: string[];
+	ExcludedAutocorrectCultures: string[];
+	ExcludedAutocorrectDeviceModels: string[];
+	DefaultViewportMouseCaptureMode: EMouseCaptureMode;
+	DefaultViewportMouseLockMode: EMouseLockMode;
+	FOVScale: number;
+	DoubleClickTime: number;
+	ActionMappings: InputActionKeyMapping[];
+	AxisMappings: InputAxisKeyMapping[];
+	DefaultTouchInterface: SoftObjectPath;
 	ConsoleKey: Key;
 	ConsoleKeys: Key[];
 	static Load(ResourceName: string): InputSettings;
@@ -11404,6 +15285,14 @@ declare class Interface_PostProcessVolume extends Interface {
 	static C(Other: UObject | any): Interface_PostProcessVolume;
 }
 
+declare class Interface_PreviewMeshProvider extends Interface { 
+	static Load(ResourceName: string): Interface_PreviewMeshProvider;
+	static Find(Outer: UObject, ResourceName: string): Interface_PreviewMeshProvider;
+	static GetDefaultObject(): Interface_PreviewMeshProvider;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Interface_PreviewMeshProvider;
+	static C(Other: UObject | any): Interface_PreviewMeshProvider;
+}
+
 declare class InterpFilter_Classes extends InterpFilter { 
 	ClassToFilterBy: UnrealEngineClass;
 	TrackClasses: UnrealEngineClass[];
@@ -11460,8 +15349,8 @@ declare class InterpGroupInstDirector extends InterpGroupInst {
 	static C(Other: UObject | any): InterpGroupInstDirector;
 }
 
-declare type EInterpToBehaviourType = 'OneShot' | 'OneShot_Reverse' | 'Loop_Reset' | 'PingPong';
-declare var EInterpToBehaviourType : { OneShot:'OneShot',OneShot_Reverse:'OneShot_Reverse',Loop_Reset:'Loop_Reset',PingPong:'PingPong', };
+declare type EInterpToBehaviourType = 'OneShot' | 'OneShot_Reverse' | 'Loop_Reset' | 'PingPong' | 'EInterpToBehaviourType_MAX';
+declare var EInterpToBehaviourType : { OneShot:'OneShot',OneShot_Reverse:'OneShot_Reverse',Loop_Reset:'Loop_Reset',PingPong:'PingPong',EInterpToBehaviourType_MAX:'EInterpToBehaviourType_MAX', };
 declare class InterpControlPoint { 
 	PositionControlPoint: Vector;
 	bPositionIsRelative: boolean;
@@ -11472,7 +15361,7 @@ declare class InterpControlPoint {
 declare class InterpToMovementComponent extends MovementComponent { 
 	Duration: number;
 	bPauseOnImpact: boolean;
-	BehaviourType: BehaviourType;
+	BehaviourType: EInterpToBehaviourType;
 	bForceSubStepping: boolean;
 	OnInterpToReverse: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: number) => void>;
 	OnInterpToStop: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: number) => void>;
@@ -11825,8 +15714,8 @@ declare class InterpTrackInstSound extends InterpTrackInst {
 	static C(Other: UObject | any): InterpTrackInstSound;
 }
 
-declare type ETrackToggleAction = 'ETTA_Off' | 'ETTA_On' | 'ETTA_Toggle' | 'ETTA_Trigger';
-declare var ETrackToggleAction : { ETTA_Off:'ETTA_Off',ETTA_On:'ETTA_On',ETTA_Toggle:'ETTA_Toggle',ETTA_Trigger:'ETTA_Trigger', };
+declare type ETrackToggleAction = 'ETTA_Off' | 'ETTA_On' | 'ETTA_Toggle' | 'ETTA_Trigger' | 'ETTA_MAX';
+declare var ETrackToggleAction : { ETTA_Off:'ETTA_Off',ETTA_On:'ETTA_On',ETTA_Toggle:'ETTA_Toggle',ETTA_Trigger:'ETTA_Trigger',ETTA_MAX:'ETTA_MAX', };
 declare class InterpTrackInstToggle extends InterpTrackInst { 
 	Action: ETrackToggleAction;
 	LastUpdatePosition: number;
@@ -11869,8 +15758,8 @@ declare class InterpTrackInstVectorProp extends InterpTrackInstProperty {
 	static C(Other: UObject | any): InterpTrackInstVectorProp;
 }
 
-declare type EVisibilityTrackAction = 'EVTA_Hide' | 'EVTA_Show' | 'EVTA_Toggle';
-declare var EVisibilityTrackAction : { EVTA_Hide:'EVTA_Hide',EVTA_Show:'EVTA_Show',EVTA_Toggle:'EVTA_Toggle', };
+declare type EVisibilityTrackAction = 'EVTA_Hide' | 'EVTA_Show' | 'EVTA_Toggle' | 'EVTA_MAX';
+declare var EVisibilityTrackAction : { EVTA_Hide:'EVTA_Hide',EVTA_Show:'EVTA_Show',EVTA_Toggle:'EVTA_Toggle',EVTA_MAX:'EVTA_MAX', };
 declare class InterpTrackInstVisibility extends InterpTrackInst { 
 	Action: EVisibilityTrackAction;
 	LastUpdatePosition: number;
@@ -11918,8 +15807,8 @@ declare class InterpTrackLinearColorProp extends InterpTrackLinearColorBase {
 	static C(Other: UObject | any): InterpTrackLinearColorProp;
 }
 
-declare type EInterpMoveAxis = 'AXIS_TranslationX' | 'AXIS_TranslationY' | 'AXIS_TranslationZ' | 'AXIS_RotationX' | 'AXIS_RotationY' | 'AXIS_RotationZ';
-declare var EInterpMoveAxis : { AXIS_TranslationX:'AXIS_TranslationX',AXIS_TranslationY:'AXIS_TranslationY',AXIS_TranslationZ:'AXIS_TranslationZ',AXIS_RotationX:'AXIS_RotationX',AXIS_RotationY:'AXIS_RotationY',AXIS_RotationZ:'AXIS_RotationZ', };
+declare type EInterpMoveAxis = 'AXIS_TranslationX' | 'AXIS_TranslationY' | 'AXIS_TranslationZ' | 'AXIS_RotationX' | 'AXIS_RotationY' | 'AXIS_RotationZ' | 'AXIS_MAX';
+declare var EInterpMoveAxis : { AXIS_TranslationX:'AXIS_TranslationX',AXIS_TranslationY:'AXIS_TranslationY',AXIS_TranslationZ:'AXIS_TranslationZ',AXIS_RotationX:'AXIS_RotationX',AXIS_RotationY:'AXIS_RotationY',AXIS_RotationZ:'AXIS_RotationZ',AXIS_MAX:'AXIS_MAX', };
 declare class InterpTrackMoveAxis extends InterpTrackFloatBase { 
 	MoveAxis: EInterpMoveAxis;
 	LookupTrack: InterpLookupTrack;
@@ -12010,8 +15899,8 @@ declare class InterpTrackVectorProp extends InterpTrackVectorBase {
 	static C(Other: UObject | any): InterpTrackVectorProp;
 }
 
-declare type EVisibilityTrackCondition = 'EVTC_Always' | 'EVTC_GoreEnabled' | 'EVTC_GoreDisabled';
-declare var EVisibilityTrackCondition : { EVTC_Always:'EVTC_Always',EVTC_GoreEnabled:'EVTC_GoreEnabled',EVTC_GoreDisabled:'EVTC_GoreDisabled', };
+declare type EVisibilityTrackCondition = 'EVTC_Always' | 'EVTC_GoreEnabled' | 'EVTC_GoreDisabled' | 'EVTC_MAX';
+declare var EVisibilityTrackCondition : { EVTC_Always:'EVTC_Always',EVTC_GoreEnabled:'EVTC_GoreEnabled',EVTC_GoreDisabled:'EVTC_GoreDisabled',EVTC_MAX:'EVTC_MAX', };
 declare class VisibilityTrackKey { 
 	Time: number;
 	Action: EVisibilityTrackAction;
@@ -12061,16 +15950,17 @@ declare class KismetArrayLibrary extends BlueprintFunctionLibrary {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KismetArrayLibrary;
 	static SetArrayPropertyByName(UObject: UObject,PropertyName: string,Value: number[]): void;
 	static FilterArray(TargetArray: Actor[],FilterClass: UnrealEngineClass,FilteredArray?: Actor[]): {FilteredArray: Actor[]};
+	static Array_Swap(TargetArray: number[],FirstIndex: number,SecondIndex: number): void;
 	static Array_Shuffle(TargetArray: number[]): void;
-	static Array_Set(TargetArray: number[],Index: number,Item: number,bSizeToFit: boolean): void;
+	static Array_Set(TargetArray: number[],index: number,Item: number,bSizeToFit: boolean): void;
 	static Array_Resize(TargetArray: number[],Size: number): void;
 	static Array_RemoveItem(TargetArray: number[],Item: number): boolean;
 	static Array_Remove(TargetArray: number[],IndexToRemove: number): void;
 	static Array_Length(TargetArray: number[]): number;
 	static Array_LastIndex(TargetArray: number[]): number;
 	static Array_IsValidIndex(TargetArray: number[],IndexToTest: number): boolean;
-	static Array_Insert(TargetArray: number[],NewItem: number,Index: number): void;
-	static Array_Get(TargetArray: number[],Index: number,Item?: number): {Item: number};
+	static Array_Insert(TargetArray: number[],NewItem: number,index: number): void;
+	static Array_Get(TargetArray: number[],index: number,Item?: number): {Item: number};
 	static Array_Find(TargetArray: number[],ItemToFind: number): number;
 	static Array_Contains(TargetArray: number[],ItemToFind: number): boolean;
 	static Array_Clear(TargetArray: number[]): void;
@@ -12108,11 +15998,12 @@ declare class KismetInputLibrary extends BlueprintFunctionLibrary {
 	static PointerEvent_GetScreenSpacePosition(Input: UPointerEvent): Vector2D;
 	static PointerEvent_GetPointerIndex(Input: UPointerEvent): number;
 	static PointerEvent_GetLastScreenSpacePosition(Input: UPointerEvent): Vector2D;
-	static PointerEvent_GetGestureType(Input: UPointerEvent): ReturnValue;
+	static PointerEvent_GetGestureType(Input: UPointerEvent): ESlateGesture;
 	static PointerEvent_GetGestureDelta(Input: UPointerEvent): Vector2D;
 	static PointerEvent_GetEffectingButton(Input: UPointerEvent): Key;
 	static PointerEvent_GetCursorDelta(Input: UPointerEvent): Vector2D;
 	static Key_IsVectorAxis(Key: Key): boolean;
+	static Key_IsValid(Key: Key): boolean;
 	static Key_IsMouseButton(Key: Key): boolean;
 	static Key_IsModifierKey(Key: Key): boolean;
 	static Key_IsKeyboardKey(Key: Key): boolean;
@@ -12168,7 +16059,7 @@ declare class KismetMaterialLibrary extends BlueprintFunctionLibrary {
 	static SetScalarParameterValue(WorldContextObject: UObject,Collection: MaterialParameterCollection,ParameterName: string,ParameterValue: number): void;
 	static GetVectorParameterValue(WorldContextObject: UObject,Collection: MaterialParameterCollection,ParameterName: string): LinearColor;
 	static GetScalarParameterValue(WorldContextObject: UObject,Collection: MaterialParameterCollection,ParameterName: string): number;
-	static CreateDynamicMaterialInstance(WorldContextObject: UObject,Parent: MaterialInterface): MaterialInstanceDynamic;
+	static CreateDynamicMaterialInstance(WorldContextObject: UObject,Parent: MaterialInterface,OptionalName: string): MaterialInstanceDynamic;
 	static C(Other: UObject | any): KismetMaterialLibrary;
 }
 
@@ -12185,6 +16076,7 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static GetDefaultObject(): KismetMathLibrary;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KismetMathLibrary;
 	static Xor_IntInt(A: number,B: number): number;
+	static VSizeXY(A: Vector): number;
 	static VSizeSquared(A: Vector): number;
 	static VSize2DSquared(A: Vector2D): number;
 	static VSize2D(A: Vector2D): number;
@@ -12197,8 +16089,10 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static Vector2DInterpTo(Current: Vector2D,Target: Vector2D,DeltaTime: number,InterpSpeed: number): Vector2D;
 	static VEase(A: Vector,B: Vector,Alpha: number,EasingFunc: EEasingFunc,BlendExp: number,Steps: number): Vector;
 	static UtcNow(): DateTime;
+	static TransformRotation(T: Transform,Rotation: Rotator): Rotator;
 	static TransformLocation(T: Transform,Location: Vector): Vector;
 	static TransformDirection(T: Transform,Direction: Vector): Vector;
+	static Transform_Determinant(Transform: Transform): number;
 	static Today(): DateTime;
 	static TLerp(A: Transform,B: Transform,Alpha: number,InterpMode: ELerpInterpolationMode): Transform;
 	static TInterpTo(Current: Transform,Target: Transform,DeltaTime: number,InterpSpeed: number): Transform;
@@ -12248,8 +16142,14 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static ResetRandomStream(Stream: RandomStream): void;
 	static ResetFloatSpringState(SpringState?: FloatSpringState): {SpringState: FloatSpringState};
 	static REase(A: Rotator,B: Rotator,Alpha: number,bShortestPath: boolean,EasingFunc: EEasingFunc,BlendExp: number,Steps: number): Rotator;
-	static RandomUnitVectorInConeWithYawAndPitch(ConeDir: Vector,MaxYawInDegrees: number,MaxPitchInDegrees: number): Vector;
-	static RandomUnitVectorInCone(ConeDir: Vector,ConeHalfAngle: number): Vector;
+	static RandomUnitVectorInEllipticalConeInRadiansFromStream(ConeDir: Vector,MaxYawInRadians: number,MaxPitchInRadians: number,Stream: RandomStream): Vector;
+	static RandomUnitVectorInEllipticalConeInRadians(ConeDir: Vector,MaxYawInRadians: number,MaxPitchInRadians: number): Vector;
+	static RandomUnitVectorInEllipticalConeInDegreesFromStream(ConeDir: Vector,MaxYawInDegrees: number,MaxPitchInDegrees: number,Stream: RandomStream): Vector;
+	static RandomUnitVectorInEllipticalConeInDegrees(ConeDir: Vector,MaxYawInDegrees: number,MaxPitchInDegrees: number): Vector;
+	static RandomUnitVectorInConeInRadiansFromStream(ConeDir: Vector,ConeHalfAngleInRadians: number,Stream: RandomStream): Vector;
+	static RandomUnitVectorInConeInRadians(ConeDir: Vector,ConeHalfAngleInRadians: number): Vector;
+	static RandomUnitVectorInConeInDegreesFromStream(ConeDir: Vector,ConeHalfAngleInDegrees: number,Stream: RandomStream): Vector;
+	static RandomUnitVectorInConeInDegrees(ConeDir: Vector,ConeHalfAngleInDegrees: number): Vector;
 	static RandomUnitVectorFromStream(Stream: RandomStream): Vector;
 	static RandomUnitVector(): Vector;
 	static RandomRotatorFromStream(bRoll: boolean,Stream: RandomStream): Rotator;
@@ -12272,6 +16172,7 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static ProjectVectorOnToPlane(V: Vector,PlaneNormal: Vector): Vector;
 	static ProjectPointOnToPlane(Point: Vector,PlaneBase: Vector,PlaneNormal: Vector): Vector;
 	static PointsAreCoplanar(Points: Vector[],Tolerance: number): boolean;
+	static PerlinNoise1D(Value: number): number;
 	static Percent_IntInt(A: number,B: number): number;
 	static Percent_FloatFloat(A: number,B: number): number;
 	static Percent_ByteByte(A: number,B: number): number;
@@ -12326,11 +16227,13 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static MaxOfFloatArray(FloatArray: number[],IndexOfMaxValue?: number,MaxValue?: number): {IndexOfMaxValue: number, MaxValue: number};
 	static MaxOfByteArray(ByteArray: number[],IndexOfMaxValue?: number,MaxValue?: number): {IndexOfMaxValue: number, MaxValue: number};
 	static Max(A: number,B: number): number;
+	static Matrix_GetOrigin(InMatrix: Matrix): Vector;
 	static MapRangeUnclamped(Value: number,InRangeA: number,InRangeB: number,OutRangeA: number,OutRangeB: number): number;
 	static MapRangeClamped(Value: number,InRangeA: number,InRangeB: number,OutRangeA: number,OutRangeB: number): number;
 	static MakeVector2D(X: number,Y: number): Vector2D;
 	static MakeVector(X: number,Y: number,Z: number): Vector;
 	static MakeTransform(Location: Vector,Rotation: Rotator,Scale: Vector): Transform;
+	static MakeTimespan2(Days: number,Hours: number,Minutes: number,Seconds: number,FractionNano: number): Timespan;
 	static MakeTimespan(Days: number,Hours: number,Minutes: number,Seconds: number,Milliseconds: number): Timespan;
 	static MakeRotFromZY(Z: Vector,Y: Vector): Rotator;
 	static MakeRotFromZX(Z: Vector,X: Vector): Rotator;
@@ -12344,8 +16247,10 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static MakeRotator(Roll: number,Pitch: number,Yaw: number): Rotator;
 	static MakeRotationFromAxes(Forward: Vector,Right: Vector,Up: Vector): Rotator;
 	static MakeRandomStream(InitialSeed: number): RandomStream;
+	static MakeQualifiedFrameTime(Frame: FrameNumber,FrameRate: FrameRate,SubFrame: number): QualifiedFrameTime;
 	static MakePulsatingValue(InCurrentTime: number,InPulsesPerSecond: number,InPhase: number): number;
 	static MakePlaneFromPointAndNormal(Point: Vector,Normal: Vector): Plane;
+	static MakeFrameRate(Numerator: number,Denominator: number): FrameRate;
 	static MakeDateTime(Year: number,Month: number,Day: number,Hour: number,Minute: number,Second: number,Millisecond: number): DateTime;
 	static MakeColor(R: number,G: number,B: number,A: number): LinearColor;
 	static MakeBox2D(Min: Vector2D,Max: Vector2D): Box2D;
@@ -12374,9 +16279,10 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static IsLeapYear(Year: number): boolean;
 	static IsAfternoon(A: DateTime): boolean;
 	static InvertTransform(T: Transform): Transform;
+	static InverseTransformRotation(T: Transform,Rotation: Rotator): Rotator;
 	static InverseTransformLocation(T: Transform,Location: Vector): Vector;
 	static InverseTransformDirection(T: Transform,Direction: Vector): Vector;
-	static InverseLerp(A: number,B: number,Value: number): number;
+	static InRange_IntInt(Value: number,Min: number,Max: number,InclusiveMin: boolean,InclusiveMax: boolean): boolean;
 	static InRange_FloatFloat(Value: number,Min: number,Max: number,InclusiveMin: boolean,InclusiveMax: boolean): boolean;
 	static Hypotenuse(Width: number,Height: number): number;
 	static HSVToRGB_Vector(HSV: LinearColor,RGB?: LinearColor): {RGB: LinearColor};
@@ -12404,6 +16310,7 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static GetTotalDays(A: Timespan): number;
 	static GetTimeOfDay(A: DateTime): Timespan;
 	static GetTAU(): number;
+	static GetSlopeDegreeAngles(MyRightYAxis: Vector,FloorNormal: Vector,UpVector: Vector,OutSlopePitchDegreeAngle?: number,OutSlopeRollDegreeAngle?: number): {OutSlopePitchDegreeAngle: number, OutSlopeRollDegreeAngle: number};
 	static GetSeconds(A: Timespan): number;
 	static GetSecond(A: DateTime): number;
 	static GetRightVector(InRot: Rotator): Vector;
@@ -12428,6 +16335,7 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static GetDayOfYear(A: DateTime): number;
 	static GetDay(A: DateTime): number;
 	static GetDate(A: DateTime): DateTime;
+	static GetAzimuthAndElevation(InDirection: Vector,ReferenceFrame: Transform,Azimuth?: number,Elevation?: number): {Azimuth: number, Elevation: number};
 	static GetAxes(A: Rotator,X?: Vector,Y?: Vector,Z?: Vector): {X: Vector, Y: Vector, Z: Vector};
 	static FTruncVector(InVector: Vector): IntVector;
 	static FTrunc(A: number): number;
@@ -12474,6 +16382,7 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static Divide_VectorFloat(A: Vector,B: number): Vector;
 	static Divide_Vector2DVector2D(A: Vector2D,B: Vector2D): Vector2D;
 	static Divide_Vector2DFloat(A: Vector2D,B: number): Vector2D;
+	static Divide_TimespanFloat(A: Timespan,Scalar: number): Timespan;
 	static Divide_IntInt(A: number,B: number): number;
 	static Divide_FloatFloat(A: number,B: number): number;
 	static Divide_ByteByte(A: number,B: number): number;
@@ -12502,13 +16411,16 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static Conv_VectorToLinearColor(InVec: Vector): LinearColor;
 	static Conv_Vector2DToVector(InVector2D: Vector2D,Z: number): Vector;
 	static Conv_RotatorToVector(InRot: Rotator): Vector;
+	static Conv_RotatorToTransform(InRotator: Rotator): Transform;
+	static Conv_MatrixToTransform(InMatrix: Matrix): Transform;
+	static Conv_MatrixToRotator(InMatrix: Matrix): Rotator;
 	static Conv_LinearColorToVector(InLinearColor: LinearColor): Vector;
 	static Conv_LinearColorToColor(InLinearColor: LinearColor): Color;
 	static Conv_IntVectorToVector(InIntVector: IntVector): Vector;
-	static Conv_IntToIntVector(InInt: number): IntVector;
-	static Conv_IntToFloat(InInt: number): number;
-	static Conv_IntToByte(InInt: number): number;
-	static Conv_IntToBool(InInt: number): boolean;
+	static Conv_IntToIntVector(inInt: number): IntVector;
+	static Conv_IntToFloat(inInt: number): number;
+	static Conv_IntToByte(inInt: number): number;
+	static Conv_IntToBool(inInt: number): boolean;
 	static Conv_FloatToVector(InFloat: number): Vector;
 	static Conv_FloatToLinearColor(InFloat: number): LinearColor;
 	static Conv_ColorToLinearColor(InColor: Color): LinearColor;
@@ -12528,10 +16440,13 @@ declare class KismetMathLibrary extends BlueprintFunctionLibrary {
 	static BreakVector2D(InVec: Vector2D,X?: number,Y?: number): {X: number, Y: number};
 	static BreakVector(InVec: Vector,X?: number,Y?: number,Z?: number): {X: number, Y: number, Z: number};
 	static BreakTransform(InTransform: Transform,Location?: Vector,Rotation?: Rotator,Scale?: Vector): {Location: Vector, Rotation: Rotator, Scale: Vector};
+	static BreakTimespan2(InTimespan: Timespan,Days?: number,Hours?: number,Minutes?: number,Seconds?: number,FractionNano?: number): {Days: number, Hours: number, Minutes: number, Seconds: number, FractionNano: number};
 	static BreakTimespan(InTimespan: Timespan,Days?: number,Hours?: number,Minutes?: number,Seconds?: number,Milliseconds?: number): {Days: number, Hours: number, Minutes: number, Seconds: number, Milliseconds: number};
 	static BreakRotIntoAxes(InRot: Rotator,X?: Vector,Y?: Vector,Z?: Vector): {X: Vector, Y: Vector, Z: Vector};
 	static BreakRotator(InRot: Rotator,Roll?: number,Pitch?: number,Yaw?: number): {Roll: number, Pitch: number, Yaw: number};
 	static BreakRandomStream(InRandomStream: RandomStream,InitialSeed?: number): {InitialSeed: number};
+	static BreakQualifiedFrameTime(InFrameTime: QualifiedFrameTime,Frame?: FrameNumber,FrameRate?: FrameRate,SubFrame?: number): {Frame: FrameNumber, FrameRate: FrameRate, SubFrame: number};
+	static BreakFrameRate(InFrameRate: FrameRate,Numerator?: number,Denominator?: number): {Numerator: number, Denominator: number};
 	static BreakDateTime(InDateTime: DateTime,Year?: number,Month?: number,Day?: number,Hour?: number,Minute?: number,Second?: number,Millisecond?: number): {Year: number, Month: number, Day: number, Hour: number, Minute: number, Second: number, Millisecond: number};
 	static BreakColor(InColor: LinearColor,R?: number,G?: number,B?: number,A?: number): {R: number, G: number, B: number, A: number};
 	static BooleanXOR(A: boolean,B: boolean): boolean;
@@ -12566,7 +16481,7 @@ declare class KismetNodeHelperLibrary extends BlueprintFunctionLibrary {
 	static Find(Outer: UObject, ResourceName: string): KismetNodeHelperLibrary;
 	static GetDefaultObject(): KismetNodeHelperLibrary;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KismetNodeHelperLibrary;
-	static MarkBit(Data?: number,Index?: number): {Data: number};
+	static MarkBit(Data?: number,index?: number): {Data: number};
 	static HasUnmarkedBit(Data: number,NumBits: number): boolean;
 	static HasMarkedBit(Data: number,NumBits: number): boolean;
 	static GetValidValue(Enum: Enum,EnumeratorValue: number): number;
@@ -12576,9 +16491,9 @@ declare class KismetNodeHelperLibrary extends BlueprintFunctionLibrary {
 	static GetEnumeratorValueFromIndex(Enum: Enum,EnumeratorIndex: number): number;
 	static GetEnumeratorUserFriendlyName(Enum: Enum,EnumeratorValue: number): string;
 	static GetEnumeratorName(Enum: Enum,EnumeratorValue: number): string;
-	static ClearBit(Data?: number,Index?: number): {Data: number};
+	static ClearBit(Data?: number,index?: number): {Data: number};
 	static ClearAllBits(Data?: number): {Data: number};
-	static BitIsMarked(Data: number,Index: number): boolean;
+	static BitIsMarked(Data: number,index: number): boolean;
 	static C(Other: UObject | any): KismetNodeHelperLibrary;
 }
 
@@ -12587,13 +16502,20 @@ declare class KismetRenderingLibrary extends BlueprintFunctionLibrary {
 	static Find(Outer: UObject, ResourceName: string): KismetRenderingLibrary;
 	static GetDefaultObject(): KismetRenderingLibrary;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KismetRenderingLibrary;
+	static RenderTargetCreateStaticTexture2DEditorOnly(RenderTarget: TextureRenderTarget2D,Name: string,CompressionSettings: TextureCompressionSettings,MipSettings: TextureMipGenSettings): Texture2D;
 	static ReleaseRenderTarget2D(TextureRenderTarget: TextureRenderTarget2D): void;
+	static ReadRenderTargetUV(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,U: number,V: number): Color;
+	static ReadRenderTargetRawUV(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,U: number,V: number): LinearColor;
+	static ReadRenderTargetRawPixel(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,X: number,Y: number): LinearColor;
+	static ReadRenderTargetPixel(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,X: number,Y: number): Color;
 	static MakeSkinWeightInfo(Bone0: number,Weight0: number,Bone1: number,Weight1: number,Bone2: number,Weight2: number,Bone3: number,Weight3: number): SkelMeshSkinWeightInfo;
-	static ExportTexture2D(WorldContextObject: UObject,Texture: Texture2D,FilePath: string,FileName: string): void;
-	static ExportRenderTarget(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,FilePath: string,FileName: string): void;
+	static ImportFileAsTexture2D(WorldContextObject: UObject,Filename: string): Texture2D;
+	static ImportBufferAsTexture2D(WorldContextObject: UObject,Buffer: number[]): Texture2D;
+	static ExportTexture2D(WorldContextObject: UObject,Texture: Texture2D,FilePath: string,Filename: string): void;
+	static ExportRenderTarget(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,FilePath: string,Filename: string): void;
 	static EndDrawCanvasToRenderTarget(WorldContextObject: UObject,Context: DrawToRenderTargetContext): void;
 	static DrawMaterialToRenderTarget(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,Material: MaterialInterface): void;
-	static CreateRenderTarget2D(WorldContextObject: UObject,Width: number,Height: number): TextureRenderTarget2D;
+	static CreateRenderTarget2D(WorldContextObject: UObject,Width: number,Height: number,Format: ETextureRenderTargetFormat): TextureRenderTarget2D;
 	static ConvertRenderTargetToTexture2DEditorOnly(WorldContextObject: UObject,RenderTarget: TextureRenderTarget2D,Texture: Texture2D): void;
 	static ClearRenderTarget2D(WorldContextObject: UObject,TextureRenderTarget: TextureRenderTarget2D,ClearColor: LinearColor): void;
 	static BreakSkinWeightInfo(InWeight: SkelMeshSkinWeightInfo,Bone0?: number,Weight0?: number,Bone1?: number,Weight1?: number,Bone2?: number,Weight2?: number,Bone3?: number,Weight3?: number): {Bone0: number, Weight0: number, Bone1: number, Weight1: number, Bone2: number, Weight2: number, Bone3: number, Weight3: number};
@@ -12601,10 +16523,10 @@ declare class KismetRenderingLibrary extends BlueprintFunctionLibrary {
 	static C(Other: UObject | any): KismetRenderingLibrary;
 }
 
-declare type ESearchCase = 'CaseSensitive' | 'IgnoreCase';
-declare var ESearchCase : { CaseSensitive:'CaseSensitive',IgnoreCase:'IgnoreCase', };
-declare type ESearchDir = 'FromStart' | 'FromEnd';
-declare var ESearchDir : { FromStart:'FromStart',FromEnd:'FromEnd', };
+declare type ESearchCase = 'CaseSensitive' | 'IgnoreCase' | 'ESearchCase_MAX';
+declare var ESearchCase : { CaseSensitive:'CaseSensitive',IgnoreCase:'IgnoreCase',ESearchCase_MAX:'ESearchCase_MAX', };
+declare type ESearchDir = 'FromStart' | 'FromEnd' | 'ESearchDir_MAX';
+declare var ESearchDir : { FromStart:'FromStart',FromEnd:'FromEnd',ESearchDir_MAX:'ESearchDir_MAX', };
 declare class KismetStringLibrary extends BlueprintFunctionLibrary { 
 	static Load(ResourceName: string): KismetStringLibrary;
 	static Find(Outer: UObject, ResourceName: string): KismetStringLibrary;
@@ -12627,7 +16549,7 @@ declare class KismetStringLibrary extends BlueprintFunctionLibrary {
 	static NotEqual_StrStr(A: string,B: string): boolean;
 	static NotEqual_StriStri(A: string,B: string): boolean;
 	static Mid(SourceString: string,Start: number,Count: number): string;
-	static MatchesWildcard(SourceString: string,Wildcard: string,SearchCase: ESearchCase): boolean;
+	static MatchesWildcard(SourceString: string,wildcard: string,SearchCase: ESearchCase): boolean;
 	static Len(S: string): number;
 	static LeftPad(SourceString: string,ChCount: number): string;
 	static LeftChop(SourceString: string,Count: number): string;
@@ -12635,41 +16557,41 @@ declare class KismetStringLibrary extends BlueprintFunctionLibrary {
 	static JoinStringArray(SourceArray: string[],Separator: string): string;
 	static IsNumeric(SourceString: string): boolean;
 	static GetSubstring(SourceString: string,StartIndex: number,Length: number): string;
-	static GetCharacterAsNumber(SourceString: string,Index: number): number;
+	static GetCharacterAsNumber(SourceString: string,index: number): number;
 	static GetCharacterArrayFromString(SourceString: string): string[];
 	static FindSubstring(SearchIn: string,Substring: string,bUseCase: boolean,bSearchFromEnd: boolean,StartPosition: number): number;
 	static EqualEqual_StrStr(A: string,B: string): boolean;
 	static EqualEqual_StriStri(A: string,B: string): boolean;
 	static EndsWith(SourceString: string,InSuffix: string,SearchCase: ESearchCase): boolean;
-	static CullArray(SourceString: string,InArray?: string[]): {InArray: string[], $: number};
+	static CullArray(SourceString: string,inArray?: string[]): {inArray: string[], $: number};
 	static Conv_VectorToString(InVec: Vector): string;
 	static Conv_Vector2dToString(InVec: Vector2D): string;
 	static Conv_TransformToString(InTrans: Transform): string;
-	static Conv_StringToVector2D(InString: string,OutConvertedVector2D?: Vector2D,OutIsValid?: boolean): {OutConvertedVector2D: Vector2D, OutIsValid: boolean};
-	static Conv_StringToVector(InString: string,OutConvertedVector?: Vector,OutIsValid?: boolean): {OutConvertedVector: Vector, OutIsValid: boolean};
-	static Conv_StringToRotator(InString: string,OutConvertedRotator?: Rotator,OutIsValid?: boolean): {OutConvertedRotator: Rotator, OutIsValid: boolean};
-	static Conv_StringToName(InString: string): string;
-	static Conv_StringToInt(InString: string): number;
-	static Conv_StringToFloat(InString: string): number;
-	static Conv_StringToColor(InString: string,OutConvertedColor?: LinearColor,OutIsValid?: boolean): {OutConvertedColor: LinearColor, OutIsValid: boolean};
+	static Conv_StringToVector2D(inString: string,OutConvertedVector2D?: Vector2D,OutIsValid?: boolean): {OutConvertedVector2D: Vector2D, OutIsValid: boolean};
+	static Conv_StringToVector(inString: string,OutConvertedVector?: Vector,OutIsValid?: boolean): {OutConvertedVector: Vector, OutIsValid: boolean};
+	static Conv_StringToRotator(inString: string,OutConvertedRotator?: Rotator,OutIsValid?: boolean): {OutConvertedRotator: Rotator, OutIsValid: boolean};
+	static Conv_StringToName(inString: string): string;
+	static Conv_StringToInt(inString: string): number;
+	static Conv_StringToFloat(inString: string): number;
+	static Conv_StringToColor(inString: string,OutConvertedColor?: LinearColor,OutIsValid?: boolean): {OutConvertedColor: LinearColor, OutIsValid: boolean};
 	static Conv_RotatorToString(InRot: Rotator): string;
 	static Conv_ObjectToString(InObj: UObject): string;
 	static Conv_NameToString(InName: string): string;
 	static Conv_IntVectorToString(InIntVec: IntVector): string;
-	static Conv_IntToString(InInt: number): string;
+	static Conv_IntToString(inInt: number): string;
 	static Conv_FloatToString(InFloat: number): string;
 	static Conv_ColorToString(InColor: LinearColor): string;
 	static Conv_ByteToString(InByte: number): string;
 	static Conv_BoolToString(InBool: boolean): string;
 	static Contains(SearchIn: string,Substring: string,bUseCase: boolean,bSearchFromEnd: boolean): boolean;
 	static Concat_StrStr(A: string,B: string): string;
-	static BuildString_Vector2d(AppendTo: string,Prefix: string,InVector2d: Vector2D,Suffix: string): string;
+	static BuildString_Vector2d(AppendTo: string,Prefix: string,InVector2D: Vector2D,Suffix: string): string;
 	static BuildString_Vector(AppendTo: string,Prefix: string,InVector: Vector,Suffix: string): string;
 	static BuildString_Rotator(AppendTo: string,Prefix: string,InRot: Rotator,Suffix: string): string;
 	static BuildString_Object(AppendTo: string,Prefix: string,InObj: UObject,Suffix: string): string;
 	static BuildString_Name(AppendTo: string,Prefix: string,InName: string,Suffix: string): string;
 	static BuildString_IntVector(AppendTo: string,Prefix: string,InIntVector: IntVector,Suffix: string): string;
-	static BuildString_Int(AppendTo: string,Prefix: string,InInt: number,Suffix: string): string;
+	static BuildString_Int(AppendTo: string,Prefix: string,inInt: number,Suffix: string): string;
 	static BuildString_Float(AppendTo: string,Prefix: string,InFloat: number,Suffix: string): string;
 	static BuildString_Color(AppendTo: string,Prefix: string,InColor: LinearColor,Suffix: string): string;
 	static BuildString_Bool(AppendTo: string,Prefix: string,InBool: boolean,Suffix: string): string;
@@ -12708,6 +16630,7 @@ declare class KismetSystemLibrary extends BlueprintFunctionLibrary {
 	static UnregisterForRemoteNotifications(): void;
 	static UnloadPrimaryAssetList(PrimaryAssetIdList: PrimaryAssetId[]): void;
 	static UnloadPrimaryAsset(PrimaryAssetId: PrimaryAssetId): void;
+	static TransactObject(UObject: UObject): void;
 	static StackTrace(): void;
 	static SphereTraceSingleForObjects(WorldContextObject: UObject,Start: Vector,End: Vector,Radius: number,ObjectTypes: EObjectTypeQuery[],bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHit?: HitResult,bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHit: HitResult, $: boolean};
 	static SphereTraceSingleByProfile(WorldContextObject: UObject,Start: Vector,End: Vector,Radius: number,ProfileName: string,bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHit?: HitResult,bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHit: HitResult, $: boolean};
@@ -12730,6 +16653,8 @@ declare class KismetSystemLibrary extends BlueprintFunctionLibrary {
 	static SetSuppressViewportTransitionMessage(WorldContextObject: UObject,bState: boolean): void;
 	static SetStructurePropertyByName(UObject: UObject,PropertyName: string,Value: GenericStruct): void;
 	static SetStringPropertyByName(UObject: UObject,PropertyName: string,Value: string): void;
+	static SetSoftObjectPropertyByName(UObject: UObject,PropertyName: string,Value: UObject): void;
+	static SetSoftClassPropertyByName(UObject: UObject,PropertyName: string,Value: Class): void;
 	static SetRotatorPropertyByName(UObject: UObject,PropertyName: string,Value: Rotator): void;
 	static SetObjectPropertyByName(UObject: UObject,PropertyName: string,Value: UObject): void;
 	static SetNamePropertyByName(UObject: UObject,PropertyName: string,Value: string): void;
@@ -12740,21 +16665,22 @@ declare class KismetSystemLibrary extends BlueprintFunctionLibrary {
 	static SetClassPropertyByName(UObject: UObject,PropertyName: string,Value: UnrealEngineClass): void;
 	static SetBytePropertyByName(UObject: UObject,PropertyName: string,Value: number): void;
 	static SetBoolPropertyByName(UObject: UObject,PropertyName: string,Value: boolean): void;
-	static SetAssetPropertyByName(UObject: UObject,PropertyName: string,Value: any): void;
-	static SetAssetClassPropertyByName(UObject: UObject,PropertyName: string,Value: any): void;
 	static RetriggerableDelay(WorldContextObject: UObject,Duration: number,LatentInfo: LatentActionInfo): void;
 	static ResetGamepadAssignmentToController(ControllerId: number): void;
 	static ResetGamepadAssignments(): void;
 	static RegisterForRemoteNotifications(): void;
-	static QuitGame(WorldContextObject: UObject,SpecificPlayer: PlayerController,QuitPreference: EQuitPreference): void;
-	static PrintWarning(InString: string): void;
+	static QuitGame(WorldContextObject: UObject,SpecificPlayer: PlayerController,QuitPreference: EQuitPreference,bIgnorePlatformRestrictions: boolean): void;
+	static PrintWarning(inString: string): void;
 	static PrintText(WorldContextObject: UObject,InText: string,bPrintToScreen: boolean,bPrintToLog: boolean,TextColor: LinearColor,Duration: number): void;
-	static PrintString(WorldContextObject: UObject,InString: string,bPrintToScreen: boolean,bPrintToLog: boolean,TextColor: LinearColor,Duration: number): void;
-	static NotEqual_SoftObjectReference(A: any,B: any): boolean;
-	static NotEqual_SoftClassReference(A: any,B: any): boolean;
+	static PrintString(WorldContextObject: UObject,inString: string,bPrintToScreen: boolean,bPrintToLog: boolean,TextColor: LinearColor,Duration: number): void;
+	static NotEqual_SoftObjectReference(A: UObject,B: UObject): boolean;
+	static NotEqual_SoftClassReference(A: Class,B: Class): boolean;
 	static NotEqual_PrimaryAssetType(A: PrimaryAssetType,B: PrimaryAssetType): boolean;
 	static NotEqual_PrimaryAssetId(A: PrimaryAssetId,B: PrimaryAssetId): boolean;
+	static NormalizeFilename(InFilename: string): string;
 	static MoveComponentTo(Component: SceneComponent,TargetRelativeLocation: Vector,TargetRelativeRotation: Rotator,bEaseOut: boolean,bEaseIn: boolean,OverTime: number,bForceShortestRotationPath: boolean,MoveAction: EMoveComponentAction,LatentInfo: LatentActionInfo): void;
+	static MakeSoftObjectPath(PathString: string): SoftObjectPath;
+	static MakeSoftClassPath(PathString: string): SoftClassPath;
 	static MakeLiteralText(Value: string): string;
 	static MakeLiteralString(Value: string): string;
 	static MakeLiteralName(Value: string): string;
@@ -12790,14 +16716,16 @@ declare class KismetSystemLibrary extends BlueprintFunctionLibrary {
 	static K2_ClearTimerHandle(WorldContextObject: UObject,Handle: TimerHandle): void;
 	static K2_ClearTimer(UObject: UObject,FunctionName: string): void;
 	static K2_ClearAndInvalidateTimerHandle(WorldContextObject: UObject,Handle?: TimerHandle): {Handle: TimerHandle};
-	static IsValidSoftObjectReference(SoftObjectReference: any): boolean;
-	static IsValidSoftClassReference(SoftClassReference: any): boolean;
+	static IsValidSoftObjectReference(SoftObjectReference: UObject): boolean;
+	static IsValidSoftClassReference(SoftClassReference: Class): boolean;
 	static IsValidPrimaryAssetType(PrimaryAssetType: PrimaryAssetType): boolean;
 	static IsValidPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): boolean;
 	static IsValidClass(Class: UnrealEngineClass): boolean;
 	static IsValid(UObject: UObject): boolean;
+	static IsUnattended(): boolean;
 	static IsStandalone(WorldContextObject: UObject): boolean;
 	static IsServer(WorldContextObject: UObject): boolean;
+	static IsScreensaverEnabled(): boolean;
 	static IsPackagedForDistribution(): boolean;
 	static IsLoggedIn(SpecificPlayer: PlayerController): boolean;
 	static IsInterstitialAdRequested(): boolean;
@@ -12808,14 +16736,17 @@ declare class KismetSystemLibrary extends BlueprintFunctionLibrary {
 	static GetVolumeButtonsHandledBySystem(): boolean;
 	static GetUniqueDeviceId(): string;
 	static GetSupportedFullscreenResolutions(Resolutions?: IntPoint[]): {Resolutions: IntPoint[], $: boolean};
-	static GetSoftObjectReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): any;
-	static GetSoftClassReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): any;
+	static GetSoftObjectReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UObject;
+	static GetSoftClassReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): Class;
 	static GetRenderingMaterialQualityLevel(): number;
 	static GetRenderingDetailMode(): number;
+	static GetProjectSavedDirectory(): string;
+	static GetProjectDirectory(): string;
+	static GetProjectContentDirectory(): string;
 	static GetPrimaryAssetsWithBundleState(RequiredBundles: string[],ExcludedBundles: string[],ValidTypes: PrimaryAssetType[],bForceCurrentState: boolean,OutPrimaryAssetIdList?: PrimaryAssetId[]): {OutPrimaryAssetIdList: PrimaryAssetId[]};
 	static GetPrimaryAssetIdList(PrimaryAssetType: PrimaryAssetType,OutPrimaryAssetIdList?: PrimaryAssetId[]): {OutPrimaryAssetIdList: PrimaryAssetId[]};
-	static GetPrimaryAssetIdFromSoftObjectReference(SoftObjectReference: any): PrimaryAssetId;
-	static GetPrimaryAssetIdFromSoftClassReference(SoftClassReference: any): PrimaryAssetId;
+	static GetPrimaryAssetIdFromSoftObjectReference(SoftObjectReference: UObject): PrimaryAssetId;
+	static GetPrimaryAssetIdFromSoftClassReference(SoftClassReference: Class): PrimaryAssetId;
 	static GetPrimaryAssetIdFromObject(UObject: UObject): PrimaryAssetId;
 	static GetPrimaryAssetIdFromClass(Class: UnrealEngineClass): PrimaryAssetId;
 	static GetPreferredLanguages(): string[];
@@ -12837,6 +16768,8 @@ declare class KismetSystemLibrary extends BlueprintFunctionLibrary {
 	static GetDefaultLanguage(): string;
 	static GetCurrentBundleState(PrimaryAssetId: PrimaryAssetId,bForceCurrentState: boolean,OutBundles?: string[]): {OutBundles: string[], $: boolean};
 	static GetConvenientWindowedResolutions(Resolutions?: IntPoint[]): {Resolutions: IntPoint[], $: boolean};
+	static GetConsoleVariableIntValue(WorldContextObject: UObject,VariableName: string): number;
+	static GetConsoleVariableFloatValue(WorldContextObject: UObject,VariableName: string): number;
 	static GetComponentBounds(Component: SceneComponent,Origin?: Vector,BoxExtent?: Vector,SphereRadius?: number): {Origin: Vector, BoxExtent: Vector, SphereRadius: number};
 	static GetCommandLine(): string;
 	static GetClassFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UnrealEngineClass;
@@ -12848,11 +16781,12 @@ declare class KismetSystemLibrary extends BlueprintFunctionLibrary {
 	static FlushPersistentDebugLines(WorldContextObject: UObject): void;
 	static FlushDebugStrings(WorldContextObject: UObject): void;
 	static ExecuteConsoleCommand(WorldContextObject: UObject,Command: string,SpecificPlayer: PlayerController): void;
-	static EqualEqual_SoftObjectReference(A: any,B: any): boolean;
-	static EqualEqual_SoftClassReference(A: any,B: any): boolean;
+	static EqualEqual_SoftObjectReference(A: UObject,B: UObject): boolean;
+	static EqualEqual_SoftClassReference(A: Class,B: Class): boolean;
 	static EqualEqual_PrimaryAssetType(A: PrimaryAssetType,B: PrimaryAssetType): boolean;
 	static EqualEqual_PrimaryAssetId(A: PrimaryAssetId,B: PrimaryAssetId): boolean;
-	static DrawDebugString(WorldContextObject: UObject,TextLocation: Vector,Text: string,TestBaseActor: Actor,TextColor: LinearColor,Duration: number): void;
+	static EndTransaction(): number;
+	static DrawDebugString(WorldContextObject: UObject,TextLocation: Vector,text: string,TestBaseActor: Actor,TextColor: LinearColor,Duration: number): void;
 	static DrawDebugSphere(WorldContextObject: UObject,Center: Vector,Radius: number,Segments: number,LineColor: LinearColor,Duration: number,Thickness: number): void;
 	static DrawDebugPoint(WorldContextObject: UObject,Position: Vector,Size: number,PointColor: LinearColor,Duration: number): void;
 	static DrawDebugPlane(WorldContextObject: UObject,PlaneCoordinates: Plane,Location: Vector,Size: number,PlaneColor: LinearColor,Duration: number): void;
@@ -12872,10 +16806,16 @@ declare class KismetSystemLibrary extends BlueprintFunctionLibrary {
 	static DoesImplementInterface(TestObject: UObject,Interface: UnrealEngineClass): boolean;
 	static Delay(WorldContextObject: UObject,Duration: number,LatentInfo: LatentActionInfo): void;
 	static CreateCopyForUndoBuffer(ObjectToModify: UObject): void;
-	static Conv_SoftObjectReferenceToObject(Asset: any): UObject;
-	static Conv_SoftClassReferenceToClass(AssetClass: any): UnrealEngineClass;
-	static Conv_ObjectToSoftObjectReference(UObject: UObject): any;
-	static Conv_ClassToSoftClassReference(Class: UnrealEngineClass): any;
+	static ConvertToRelativePath(Filename: string): string;
+	static ConvertToAbsolutePath(Filename: string): string;
+	static Conv_SoftObjectReferenceToString(SoftObjectReference: UObject): string;
+	static Conv_SoftObjectReferenceToObject(softobject: UObject): UObject;
+	static Conv_SoftClassReferenceToString(SoftClassReference: Class): string;
+	static Conv_SoftClassReferenceToClass(softclass: Class): UnrealEngineClass;
+	static Conv_PrimaryAssetTypeToString(PrimaryAssetType: PrimaryAssetType): string;
+	static Conv_PrimaryAssetIdToString(PrimaryAssetId: PrimaryAssetId): string;
+	static Conv_ObjectToSoftObjectReference(UObject: UObject): UObject;
+	static Conv_ClassToSoftClassReference(Class: UnrealEngineClass): Class;
 	static ControlScreensaver(bAllowScreenSaver: boolean): void;
 	static ComponentOverlapComponents(Component: PrimitiveComponent,ComponentTransform: Transform,ObjectTypes: EObjectTypeQuery[],ComponentClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutComponents?: PrimitiveComponent[]): {OutComponents: PrimitiveComponent[], $: boolean};
 	static ComponentOverlapActors(Component: PrimitiveComponent,ComponentTransform: Transform,ObjectTypes: EObjectTypeQuery[],ActorClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutActors?: Actor[]): {OutActors: Actor[], $: boolean};
@@ -12889,6 +16829,9 @@ declare class KismetSystemLibrary extends BlueprintFunctionLibrary {
 	static CapsuleOverlapComponents(WorldContextObject: UObject,CapsulePos: Vector,Radius: number,HalfHeight: number,ObjectTypes: EObjectTypeQuery[],ComponentClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutComponents?: PrimitiveComponent[]): {OutComponents: PrimitiveComponent[], $: boolean};
 	static CapsuleOverlapActors(WorldContextObject: UObject,CapsulePos: Vector,Radius: number,HalfHeight: number,ObjectTypes: EObjectTypeQuery[],ActorClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutActors?: Actor[]): {OutActors: Actor[], $: boolean};
 	static CanLaunchURL(URL: string): boolean;
+	static CancelTransaction(index: number): void;
+	static BreakSoftObjectPath(InSoftObjectPath: SoftObjectPath,PathString?: string): {PathString: string};
+	static BreakSoftClassPath(InSoftClassPath: SoftClassPath,PathString?: string): {PathString: string};
 	static BoxTraceSingleForObjects(WorldContextObject: UObject,Start: Vector,End: Vector,HalfSize: Vector,Orientation: Rotator,ObjectTypes: EObjectTypeQuery[],bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHit?: HitResult,bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHit: HitResult, $: boolean};
 	static BoxTraceSingleByProfile(WorldContextObject: UObject,Start: Vector,End: Vector,HalfSize: Vector,Orientation: Rotator,ProfileName: string,bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHit?: HitResult,bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHit: HitResult, $: boolean};
 	static BoxTraceSingle(WorldContextObject: UObject,Start: Vector,End: Vector,HalfSize: Vector,Orientation: Rotator,TraceChannel: ETraceTypeQuery,bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHit?: HitResult,bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHit: HitResult, $: boolean};
@@ -12897,27 +16840,46 @@ declare class KismetSystemLibrary extends BlueprintFunctionLibrary {
 	static BoxTraceMulti(WorldContextObject: UObject,Start: Vector,End: Vector,HalfSize: Vector,Orientation: Rotator,TraceChannel: ETraceTypeQuery,bTraceComplex: boolean,ActorsToIgnore: Actor[],DrawDebugType: EDrawDebugTrace,OutHits?: HitResult[],bIgnoreSelf?: boolean,TraceColor?: LinearColor,TraceHitColor?: LinearColor,DrawTime?: number): {OutHits: HitResult[], $: boolean};
 	static BoxOverlapComponents(WorldContextObject: UObject,BoxPos: Vector,Extent: Vector,ObjectTypes: EObjectTypeQuery[],ComponentClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutComponents?: PrimitiveComponent[]): {OutComponents: PrimitiveComponent[], $: boolean};
 	static BoxOverlapActors(WorldContextObject: UObject,BoxPos: Vector,BoxExtent: Vector,ObjectTypes: EObjectTypeQuery[],ActorClassFilter: UnrealEngineClass,ActorsToIgnore: Actor[],OutActors?: Actor[]): {OutActors: Actor[], $: boolean};
+	static BeginTransaction(Context: string,Description: string,PrimaryObject: UObject): number;
 	static AddFloatHistorySample(Value: number,FloatHistory: DebugFloatHistory): DebugFloatHistory;
 	static C(Other: UObject | any): KismetSystemLibrary;
 }
 
-declare type EFormatArgumentType = 'Int' | 'UInt' | 'Float' | 'Double' | 'Text' | 'Gender';
-declare var EFormatArgumentType : { Int:'Int',UInt:'UInt',Float:'Float',Double:'Double',Text:'Text',Gender:'Gender', };
-declare type ETextGender = 'Masculine' | 'Feminine' | 'Neuter';
-declare var ETextGender : { Masculine:'Masculine',Feminine:'Feminine',Neuter:'Neuter', };
+declare type ELocalizedTextSourceCategory = 'Game' | 'Engine' | 'Editor' | 'ELocalizedTextSourceCategory_MAX';
+declare var ELocalizedTextSourceCategory : { Game:'Game',Engine:'Engine',Editor:'Editor',ELocalizedTextSourceCategory_MAX:'ELocalizedTextSourceCategory_MAX', };
+declare class PolyglotTextData { 
+	Category: ELocalizedTextSourceCategory;
+	NativeCulture: string;
+	Namespace: string;
+	Key: string;
+	NativeString: string;
+	LocalizedStrings: any;
+	CachedText: string;
+	clone() : PolyglotTextData;
+	static C(Other: UObject | any): PolyglotTextData;
+	IsPolyglotDataValid(IsValid?: boolean,ErrorMessage?: string): {IsValid: boolean, ErrorMessage: string};
+	PolyglotDataToText(): string;
+	static IsPolyglotDataValid(PolyglotData: PolyglotTextData,IsValid?: boolean,ErrorMessage?: string): {IsValid: boolean, ErrorMessage: string};
+	static PolyglotDataToText(PolyglotData: PolyglotTextData): string;
+}
+
+declare type EFormatArgumentType = 'Int' | 'UInt' | 'Float' | 'Double' | 'Text' | 'Gender' | 'EFormatArgumentType_MAX';
+declare var EFormatArgumentType : { Int:'Int',UInt:'UInt',Float:'Float',Double:'Double',Text:'Text',Gender:'Gender',EFormatArgumentType_MAX:'EFormatArgumentType_MAX', };
+declare type ETextGender = 'Masculine' | 'Feminine' | 'Neuter' | 'ETextGender_MAX';
+declare var ETextGender : { Masculine:'Masculine',Feminine:'Feminine',Neuter:'Neuter',ETextGender_MAX:'ETextGender_MAX', };
 declare class FormatArgumentData { 
 	ArgumentName: string;
 	ArgumentValueType: EFormatArgumentType;
 	ArgumentValue: string;
 	ArgumentValueInt: number;
 	ArgumentValueFloat: number;
-	ArgumentValueGender: ArgumentValueGender;
+	ArgumentValueGender: ETextGender;
 	clone() : FormatArgumentData;
 	static C(Other: UObject | any): FormatArgumentData;
 }
 
-declare type ERoundingMode = 'HalfToEven' | 'HalfFromZero' | 'HalfToZero' | 'FromZero' | 'ToZero' | 'ToNegativeInfinity' | 'ToPositiveInfinity';
-declare var ERoundingMode : { HalfToEven:'HalfToEven',HalfFromZero:'HalfFromZero',HalfToZero:'HalfToZero',FromZero:'FromZero',ToZero:'ToZero',ToNegativeInfinity:'ToNegativeInfinity',ToPositiveInfinity:'ToPositiveInfinity', };
+declare type ERoundingMode = 'HalfToEven' | 'HalfFromZero' | 'HalfToZero' | 'FromZero' | 'ToZero' | 'ToNegativeInfinity' | 'ToPositiveInfinity' | 'ERoundingMode_MAX';
+declare var ERoundingMode : { HalfToEven:'HalfToEven',HalfFromZero:'HalfFromZero',HalfToZero:'HalfToZero',FromZero:'FromZero',ToZero:'ToZero',ToNegativeInfinity:'ToNegativeInfinity',ToPositiveInfinity:'ToPositiveInfinity',ERoundingMode_MAX:'ERoundingMode_MAX', };
 declare class KismetTextLibrary extends BlueprintFunctionLibrary { 
 	static Load(ResourceName: string): KismetTextLibrary;
 	static Find(Outer: UObject, ResourceName: string): KismetTextLibrary;
@@ -12929,13 +16891,15 @@ declare class KismetTextLibrary extends BlueprintFunctionLibrary {
 	static TextToUpper(InText: string): string;
 	static TextToLower(InText: string): string;
 	static TextIsTransient(InText: string): boolean;
-	static TextIsFromStringTable(Text: string): boolean;
+	static TextIsFromStringTable(text: string): boolean;
 	static TextIsEmpty(InText: string): boolean;
 	static TextIsCultureInvariant(InText: string): boolean;
 	static TextFromStringTable(TableId: string,Key: string): string;
-	static StringTableIdAndKeyFromText(Text: string,OutTableId?: string,OutKey?: string): {OutTableId: string, OutKey: string, $: boolean};
+	static StringTableIdAndKeyFromText(text: string,OutTableId?: string,OutKey?: string): {OutTableId: string, OutKey: string, $: boolean};
+	static PolyglotDataToText(PolyglotData: PolyglotTextData): string;
 	static NotEqual_TextText(A: string,B: string): boolean;
 	static NotEqual_IgnoreCase_TextText(A: string,B: string): boolean;
+	static IsPolyglotDataValid(PolyglotData: PolyglotTextData,IsValid?: boolean,ErrorMessage?: string): {IsValid: boolean, ErrorMessage: string};
 	static GetEmptyText(): string;
 	static Format(InPattern: string,InArgs: FormatArgumentData[]): string;
 	static FindTextInLocalizationTable(Namespace: string,Key: string,OutText?: string): {OutText: string, $: boolean};
@@ -12945,12 +16909,12 @@ declare class KismetTextLibrary extends BlueprintFunctionLibrary {
 	static Conv_Vector2dToText(InVec: Vector2D): string;
 	static Conv_TransformToText(InTrans: Transform): string;
 	static Conv_TextToString(InText: string): string;
-	static Conv_StringToText(InString: string): string;
+	static Conv_StringToText(inString: string): string;
 	static Conv_RotatorToText(InRot: Rotator): string;
 	static Conv_ObjectToText(InObj: UObject): string;
 	static Conv_NameToText(InName: string): string;
-	static Conv_IntToText(Value: number,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number): string;
-	static Conv_FloatToText(Value: number,RoundingMode: ERoundingMode,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number): string;
+	static Conv_IntToText(Value: number,bAlwaysSign: boolean,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number): string;
+	static Conv_FloatToText(Value: number,RoundingMode: ERoundingMode,bAlwaysSign: boolean,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number): string;
 	static Conv_ColorToText(InColor: LinearColor): string;
 	static Conv_ByteToText(Value: number): string;
 	static Conv_BoolToText(InBool: boolean): string;
@@ -12959,12 +16923,12 @@ declare class KismetTextLibrary extends BlueprintFunctionLibrary {
 	static AsTimeZoneDate_DateTime(InDateTime: DateTime,InTimeZone: string): string;
 	static AsTimespan_Timespan(InTimespan: Timespan): string;
 	static AsTime_DateTime(In: DateTime): string;
-	static AsPercent_Float(Value: number,RoundingMode: ERoundingMode,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number): string;
+	static AsPercent_Float(Value: number,RoundingMode: ERoundingMode,bAlwaysSign: boolean,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number): string;
 	static AsDateTime_DateTime(In: DateTime): string;
 	static AsDate_DateTime(InDateTime: DateTime): string;
 	static AsCurrencyBase(BaseValue: number,CurrencyCode: string): string;
-	static AsCurrency_Integer(Value: number,RoundingMode: ERoundingMode,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number,CurrencyCode: string): string;
-	static AsCurrency_Float(Value: number,RoundingMode: ERoundingMode,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number,CurrencyCode: string): string;
+	static AsCurrency_Integer(Value: number,RoundingMode: ERoundingMode,bAlwaysSign: boolean,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number,CurrencyCode: string): string;
+	static AsCurrency_Float(Value: number,RoundingMode: ERoundingMode,bAlwaysSign: boolean,bUseGrouping: boolean,MinimumIntegralDigits: number,MaximumIntegralDigits: number,MinimumFractionalDigits: number,MaximumFractionalDigits: number,CurrencyCode: string): string;
 	static C(Other: UObject | any): KismetTextLibrary;
 }
 
@@ -12983,15 +16947,16 @@ declare class LevelStreamingAlwaysLoaded extends LevelStreaming {
 	static C(Other: UObject | any): LevelStreamingAlwaysLoaded;
 }
 
-declare class LevelStreamingKismet extends LevelStreaming { 
+declare class LevelStreamingDynamic extends LevelStreaming { 
 	bInitiallyLoaded: boolean;
 	bInitiallyVisible: boolean;
-	static Load(ResourceName: string): LevelStreamingKismet;
-	static Find(Outer: UObject, ResourceName: string): LevelStreamingKismet;
-	static GetDefaultObject(): LevelStreamingKismet;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelStreamingKismet;
-	static LoadLevelInstance(WorldContextObject: UObject,LevelName: string,Location: Vector,Rotation: Rotator,bOutSuccess?: boolean): {bOutSuccess: boolean, $: LevelStreamingKismet};
-	static C(Other: UObject | any): LevelStreamingKismet;
+	static Load(ResourceName: string): LevelStreamingDynamic;
+	static Find(Outer: UObject, ResourceName: string): LevelStreamingDynamic;
+	static GetDefaultObject(): LevelStreamingDynamic;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelStreamingDynamic;
+	static LoadLevelInstanceBySoftObjectPtr(WorldContextObject: UObject,Level: World,Location: Vector,Rotation: Rotator,bOutSuccess?: boolean): {bOutSuccess: boolean, $: LevelStreamingDynamic};
+	static LoadLevelInstance(WorldContextObject: UObject,LevelName: string,Location: Vector,Rotation: Rotator,bOutSuccess?: boolean): {bOutSuccess: boolean, $: LevelStreamingDynamic};
+	static C(Other: UObject | any): LevelStreamingDynamic;
 }
 
 declare class LevelStreamingPersistent extends LevelStreaming { 
@@ -13060,11 +17025,12 @@ declare class LightmassPrimitiveSettingsObject extends UObject {
 
 declare class LODActor extends Actor { 
 	StaticMeshComponent: StaticMeshComponent;
-	SubActors: Actor[];
+	Proxy: HLODProxy;
+	Key: string;
 	LODDrawDistance: number;
+	SubActors: Actor[];
 	LODLevel: number;
-	SubObjects: UObject[];
-	bDirty: boolean;
+	CachedNumHLODLevels: number;
 	NumTrianglesInSubActors: any;
 	NumTrianglesInMergedMesh: any;
 	bOverrideMaterialMergeSettings: boolean;
@@ -13107,8 +17073,8 @@ declare class MaterialExpressionAdd extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionAdd;
 }
 
-declare type EMaterialSamplerType = 'SAMPLERTYPE_Color' | 'SAMPLERTYPE_Grayscale' | 'SAMPLERTYPE_Alpha' | 'SAMPLERTYPE_Normal' | 'SAMPLERTYPE_Masks' | 'SAMPLERTYPE_DistanceFieldFont' | 'SAMPLERTYPE_LinearColor' | 'SAMPLERTYPE_LinearGrayscale';
-declare var EMaterialSamplerType : { SAMPLERTYPE_Color:'SAMPLERTYPE_Color',SAMPLERTYPE_Grayscale:'SAMPLERTYPE_Grayscale',SAMPLERTYPE_Alpha:'SAMPLERTYPE_Alpha',SAMPLERTYPE_Normal:'SAMPLERTYPE_Normal',SAMPLERTYPE_Masks:'SAMPLERTYPE_Masks',SAMPLERTYPE_DistanceFieldFont:'SAMPLERTYPE_DistanceFieldFont',SAMPLERTYPE_LinearColor:'SAMPLERTYPE_LinearColor',SAMPLERTYPE_LinearGrayscale:'SAMPLERTYPE_LinearGrayscale', };
+declare type EMaterialSamplerType = 'SAMPLERTYPE_Color' | 'SAMPLERTYPE_Grayscale' | 'SAMPLERTYPE_Alpha' | 'SAMPLERTYPE_Normal' | 'SAMPLERTYPE_Masks' | 'SAMPLERTYPE_DistanceFieldFont' | 'SAMPLERTYPE_LinearColor' | 'SAMPLERTYPE_LinearGrayscale' | 'SAMPLERTYPE_External' | 'SAMPLERTYPE_MAX';
+declare var EMaterialSamplerType : { SAMPLERTYPE_Color:'SAMPLERTYPE_Color',SAMPLERTYPE_Grayscale:'SAMPLERTYPE_Grayscale',SAMPLERTYPE_Alpha:'SAMPLERTYPE_Alpha',SAMPLERTYPE_Normal:'SAMPLERTYPE_Normal',SAMPLERTYPE_Masks:'SAMPLERTYPE_Masks',SAMPLERTYPE_DistanceFieldFont:'SAMPLERTYPE_DistanceFieldFont',SAMPLERTYPE_LinearColor:'SAMPLERTYPE_LinearColor',SAMPLERTYPE_LinearGrayscale:'SAMPLERTYPE_LinearGrayscale',SAMPLERTYPE_External:'SAMPLERTYPE_External',SAMPLERTYPE_MAX:'SAMPLERTYPE_MAX', };
 declare class MaterialExpressionTextureBase extends MaterialExpression { 
 	Texture: Texture;
 	SamplerType: EMaterialSamplerType;
@@ -13120,20 +17086,22 @@ declare class MaterialExpressionTextureBase extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionTextureBase;
 }
 
-declare type ETextureMipValueMode = 'TMVM_None' | 'TMVM_MipLevel' | 'TMVM_MipBias' | 'TMVM_Derivative';
-declare var ETextureMipValueMode : { TMVM_None:'TMVM_None',TMVM_MipLevel:'TMVM_MipLevel',TMVM_MipBias:'TMVM_MipBias',TMVM_Derivative:'TMVM_Derivative', };
-declare type ESamplerSourceMode = 'SSM_FromTextureAsset' | 'SSM_Wrap_WorldGroupSettings' | 'SSM_Clamp_WorldGroupSettings';
-declare var ESamplerSourceMode : { SSM_FromTextureAsset:'SSM_FromTextureAsset',SSM_Wrap_WorldGroupSettings:'SSM_Wrap_WorldGroupSettings',SSM_Clamp_WorldGroupSettings:'SSM_Clamp_WorldGroupSettings', };
+declare type ETextureMipValueMode = 'TMVM_None' | 'TMVM_MipLevel' | 'TMVM_MipBias' | 'TMVM_Derivative' | 'TMVM_MAX';
+declare var ETextureMipValueMode : { TMVM_None:'TMVM_None',TMVM_MipLevel:'TMVM_MipLevel',TMVM_MipBias:'TMVM_MipBias',TMVM_Derivative:'TMVM_Derivative',TMVM_MAX:'TMVM_MAX', };
+declare type ESamplerSourceMode = 'SSM_FromTextureAsset' | 'SSM_Wrap_WorldGroupSettings' | 'SSM_Clamp_WorldGroupSettings' | 'SSM_MAX';
+declare var ESamplerSourceMode : { SSM_FromTextureAsset:'SSM_FromTextureAsset',SSM_Wrap_WorldGroupSettings:'SSM_Wrap_WorldGroupSettings',SSM_Clamp_WorldGroupSettings:'SSM_Clamp_WorldGroupSettings',SSM_MAX:'SSM_MAX', };
 declare class MaterialExpressionTextureSample extends MaterialExpressionTextureBase { 
 	Coordinates: ExpressionInput;
 	TextureObject: ExpressionInput;
 	MipValue: ExpressionInput;
 	CoordinatesDX: ExpressionInput;
 	CoordinatesDY: ExpressionInput;
+	AutomaticViewMipBiasValue: ExpressionInput;
 	MipValueMode: ETextureMipValueMode;
 	SamplerSource: ESamplerSourceMode;
 	ConstCoordinate: any;
 	ConstMipValue: number;
+	AutomaticViewMipBias: boolean;
 	static Load(ResourceName: string): MaterialExpressionTextureSample;
 	static Find(Outer: UObject, ResourceName: string): MaterialExpressionTextureSample;
 	static GetDefaultObject(): MaterialExpressionTextureSample;
@@ -13161,8 +17129,8 @@ declare class MaterialExpressionTextureSampleParameter2D extends MaterialExpress
 	static C(Other: UObject | any): MaterialExpressionTextureSampleParameter2D;
 }
 
-declare type ETextureColorChannel = 'TCC_Red' | 'TCC_Green' | 'TCC_Blue' | 'TCC_Alpha';
-declare var ETextureColorChannel : { TCC_Red:'TCC_Red',TCC_Green:'TCC_Green',TCC_Blue:'TCC_Blue',TCC_Alpha:'TCC_Alpha', };
+declare type ETextureColorChannel = 'TCC_Red' | 'TCC_Green' | 'TCC_Blue' | 'TCC_Alpha' | 'TCC_MAX';
+declare var ETextureColorChannel : { TCC_Red:'TCC_Red',TCC_Green:'TCC_Green',TCC_Blue:'TCC_Blue',TCC_Alpha:'TCC_Alpha',TCC_MAX:'TCC_MAX', };
 declare class MaterialExpressionAntialiasedTextureMask extends MaterialExpressionTextureSampleParameter2D { 
 	Threshold: number;
 	Channel: ETextureColorChannel;
@@ -13300,8 +17268,8 @@ declare class MaterialExpressionBlackBody extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionBlackBody;
 }
 
-declare type EMaterialAttributeBlend = 'Blend' | 'UseA' | 'UseB';
-declare var EMaterialAttributeBlend : { Blend:'Blend',UseA:'UseA',UseB:'UseB', };
+declare type EMaterialAttributeBlend = 'Blend' | 'UseA' | 'UseB' | 'EMaterialAttributeBlend_MAX';
+declare var EMaterialAttributeBlend : { Blend:'Blend',UseA:'UseA',UseB:'UseB',EMaterialAttributeBlend_MAX:'EMaterialAttributeBlend_MAX', };
 declare class MaterialExpressionBlendMaterialAttributes extends MaterialExpression { 
 	A: MaterialAttributesInput;
 	B: MaterialAttributesInput;
@@ -13363,8 +17331,41 @@ declare class MaterialExpressionCeil extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionCeil;
 }
 
-declare type EClampMode = 'CMODE_Clamp' | 'CMODE_ClampMin' | 'CMODE_ClampMax';
-declare var EClampMode : { CMODE_Clamp:'CMODE_Clamp',CMODE_ClampMin:'CMODE_ClampMin',CMODE_ClampMax:'CMODE_ClampMax', };
+declare class MaterialExpressionParameter extends MaterialExpression { 
+	ParameterName: string;
+	ExpressionGUID: Guid;
+	Group: string;
+	SortPriority: number;
+	static Load(ResourceName: string): MaterialExpressionParameter;
+	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParameter;
+	static GetDefaultObject(): MaterialExpressionParameter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParameter;
+	static C(Other: UObject | any): MaterialExpressionParameter;
+}
+
+declare class MaterialExpressionVectorParameter extends MaterialExpressionParameter { 
+	DefaultValue: LinearColor;
+	static Load(ResourceName: string): MaterialExpressionVectorParameter;
+	static Find(Outer: UObject, ResourceName: string): MaterialExpressionVectorParameter;
+	static GetDefaultObject(): MaterialExpressionVectorParameter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionVectorParameter;
+	static C(Other: UObject | any): MaterialExpressionVectorParameter;
+}
+
+declare type EChannelMaskParameterColor = 'Red' | 'Green' | 'Blue' | 'Alpha' | 'EChannelMaskParameterColor_MAX';
+declare var EChannelMaskParameterColor : { Red:'Red',Green:'Green',Blue:'Blue',Alpha:'Alpha',EChannelMaskParameterColor_MAX:'EChannelMaskParameterColor_MAX', };
+declare class MaterialExpressionChannelMaskParameter extends MaterialExpressionVectorParameter { 
+	MaskChannel: EChannelMaskParameterColor;
+	Input: ExpressionInput;
+	static Load(ResourceName: string): MaterialExpressionChannelMaskParameter;
+	static Find(Outer: UObject, ResourceName: string): MaterialExpressionChannelMaskParameter;
+	static GetDefaultObject(): MaterialExpressionChannelMaskParameter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionChannelMaskParameter;
+	static C(Other: UObject | any): MaterialExpressionChannelMaskParameter;
+}
+
+declare type EClampMode = 'CMODE_Clamp' | 'CMODE_ClampMin' | 'CMODE_ClampMax' | 'CMODE_MAX';
+declare var EClampMode : { CMODE_Clamp:'CMODE_Clamp',CMODE_ClampMin:'CMODE_ClampMin',CMODE_ClampMax:'CMODE_ClampMax',CMODE_MAX:'CMODE_MAX', };
 declare class MaterialExpressionClamp extends MaterialExpression { 
 	Input: ExpressionInput;
 	Min: ExpressionInput;
@@ -13480,8 +17481,30 @@ declare class MaterialExpressionCrossProduct extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionCrossProduct;
 }
 
-declare type ECustomMaterialOutputType = 'CMOT_Float1' | 'CMOT_Float2' | 'CMOT_Float3' | 'CMOT_Float4';
-declare var ECustomMaterialOutputType : { CMOT_Float1:'CMOT_Float1',CMOT_Float2:'CMOT_Float2',CMOT_Float3:'CMOT_Float3',CMOT_Float4:'CMOT_Float4', };
+declare class MaterialExpressionScalarParameter extends MaterialExpressionParameter { 
+	DefaultValue: number;
+	SliderMin: number;
+	SliderMax: number;
+	static Load(ResourceName: string): MaterialExpressionScalarParameter;
+	static Find(Outer: UObject, ResourceName: string): MaterialExpressionScalarParameter;
+	static GetDefaultObject(): MaterialExpressionScalarParameter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionScalarParameter;
+	static C(Other: UObject | any): MaterialExpressionScalarParameter;
+}
+
+declare class MaterialExpressionCurveAtlasRowParameter extends MaterialExpressionScalarParameter { 
+	Curve: CurveLinearColor;
+	Atlas: CurveLinearColorAtlas;
+	InputTime: ExpressionInput;
+	static Load(ResourceName: string): MaterialExpressionCurveAtlasRowParameter;
+	static Find(Outer: UObject, ResourceName: string): MaterialExpressionCurveAtlasRowParameter;
+	static GetDefaultObject(): MaterialExpressionCurveAtlasRowParameter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionCurveAtlasRowParameter;
+	static C(Other: UObject | any): MaterialExpressionCurveAtlasRowParameter;
+}
+
+declare type ECustomMaterialOutputType = 'CMOT_Float1' | 'CMOT_Float2' | 'CMOT_Float3' | 'CMOT_Float4' | 'CMOT_MAX';
+declare var ECustomMaterialOutputType : { CMOT_Float1:'CMOT_Float1',CMOT_Float2:'CMOT_Float2',CMOT_Float3:'CMOT_Float3',CMOT_Float4:'CMOT_Float4',CMOT_MAX:'CMOT_MAX', };
 declare class CustomInput { 
 	InputName: string;
 	Input: ExpressionInput;
@@ -13558,8 +17581,8 @@ declare class MaterialExpressionDepthFade extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionDepthFade;
 }
 
-declare type EDepthOfFieldFunctionValue = 'TDOF_NearAndFarMask' | 'TDOF_NearMask' | 'TDOF_FarMask' | 'TDOF_CircleOfConfusionRadius';
-declare var EDepthOfFieldFunctionValue : { TDOF_NearAndFarMask:'TDOF_NearAndFarMask',TDOF_NearMask:'TDOF_NearMask',TDOF_FarMask:'TDOF_FarMask',TDOF_CircleOfConfusionRadius:'TDOF_CircleOfConfusionRadius', };
+declare type EDepthOfFieldFunctionValue = 'TDOF_NearAndFarMask' | 'TDOF_NearMask' | 'TDOF_FarMask' | 'TDOF_CircleOfConfusionRadius' | 'TDOF_MAX';
+declare var EDepthOfFieldFunctionValue : { TDOF_NearAndFarMask:'TDOF_NearAndFarMask',TDOF_NearMask:'TDOF_NearMask',TDOF_FarMask:'TDOF_FarMask',TDOF_CircleOfConfusionRadius:'TDOF_CircleOfConfusionRadius',TDOF_MAX:'TDOF_MAX', };
 declare class MaterialExpressionDepthOfFieldFunction extends MaterialExpression { 
 	FunctionValue: EDepthOfFieldFunctionValue;
 	Depth: ExpressionInput;
@@ -13651,6 +17674,7 @@ declare class MaterialExpressionDotProduct extends MaterialExpression {
 declare class MaterialExpressionDynamicParameter extends MaterialExpression { 
 	ParamNames: string[];
 	DefaultValue: LinearColor;
+	ParameterIndex: any;
 	static Load(ResourceName: string): MaterialExpressionDynamicParameter;
 	static Find(Outer: UObject, ResourceName: string): MaterialExpressionDynamicParameter;
 	static GetDefaultObject(): MaterialExpressionDynamicParameter;
@@ -13709,6 +17733,7 @@ declare class MaterialExpressionFontSampleParameter extends MaterialExpressionFo
 	ParameterName: string;
 	ExpressionGUID: Guid;
 	Group: string;
+	SortPriority: number;
 	static Load(ResourceName: string): MaterialExpressionFontSampleParameter;
 	static Find(Outer: UObject, ResourceName: string): MaterialExpressionFontSampleParameter;
 	static GetDefaultObject(): MaterialExpressionFontSampleParameter;
@@ -13738,13 +17763,13 @@ declare class MaterialExpressionFresnel extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionFresnel;
 }
 
-declare type EFunctionInputType = 'FunctionInput_Scalar' | 'FunctionInput_Vector2' | 'FunctionInput_Vector3' | 'FunctionInput_Vector4' | 'FunctionInput_Texture2D' | 'FunctionInput_TextureCube' | 'FunctionInput_StaticBool' | 'FunctionInput_MaterialAttributes';
-declare var EFunctionInputType : { FunctionInput_Scalar:'FunctionInput_Scalar',FunctionInput_Vector2:'FunctionInput_Vector2',FunctionInput_Vector3:'FunctionInput_Vector3',FunctionInput_Vector4:'FunctionInput_Vector4',FunctionInput_Texture2D:'FunctionInput_Texture2D',FunctionInput_TextureCube:'FunctionInput_TextureCube',FunctionInput_StaticBool:'FunctionInput_StaticBool',FunctionInput_MaterialAttributes:'FunctionInput_MaterialAttributes', };
+declare type EFunctionInputType = 'FunctionInput_Scalar' | 'FunctionInput_Vector2' | 'FunctionInput_Vector3' | 'FunctionInput_Vector4' | 'FunctionInput_Texture2D' | 'FunctionInput_TextureCube' | 'FunctionInput_VolumeTexture' | 'FunctionInput_StaticBool' | 'FunctionInput_MaterialAttributes' | 'FunctionInput_TextureExternal' | 'FunctionInput_MAX';
+declare var EFunctionInputType : { FunctionInput_Scalar:'FunctionInput_Scalar',FunctionInput_Vector2:'FunctionInput_Vector2',FunctionInput_Vector3:'FunctionInput_Vector3',FunctionInput_Vector4:'FunctionInput_Vector4',FunctionInput_Texture2D:'FunctionInput_Texture2D',FunctionInput_TextureCube:'FunctionInput_TextureCube',FunctionInput_VolumeTexture:'FunctionInput_VolumeTexture',FunctionInput_StaticBool:'FunctionInput_StaticBool',FunctionInput_MaterialAttributes:'FunctionInput_MaterialAttributes',FunctionInput_TextureExternal:'FunctionInput_TextureExternal',FunctionInput_MAX:'FunctionInput_MAX', };
 declare class MaterialExpressionFunctionInput extends MaterialExpression { 
 	Preview: ExpressionInput;
 	InputName: string;
 	Description: string;
-	Id: Guid;
+	ID: Guid;
 	InputType: EFunctionInputType;
 	PreviewValue: Vector4;
 	bUsePreviewValueAsDefault: boolean;
@@ -13763,7 +17788,7 @@ declare class MaterialExpressionFunctionOutput extends MaterialExpression {
 	SortPriority: number;
 	A: ExpressionInput;
 	bLastPreviewed: boolean;
-	Id: Guid;
+	ID: Guid;
 	static Load(ResourceName: string): MaterialExpressionFunctionOutput;
 	static Find(Outer: UObject, ResourceName: string): MaterialExpressionFunctionOutput;
 	static GetDefaultObject(): MaterialExpressionFunctionOutput;
@@ -13879,7 +17904,7 @@ declare class MaterialExpressionMakeMaterialAttributes extends MaterialExpressio
 	WorldDisplacement: ExpressionInput;
 	TessellationMultiplier: ExpressionInput;
 	SubsurfaceColor: ExpressionInput;
-	ClearCoat: ExpressionInput;
+	Clearcoat: ExpressionInput;
 	ClearCoatRoughness: ExpressionInput;
 	AmbientOcclusion: ExpressionInput;
 	Refraction: ExpressionInput;
@@ -13909,17 +17934,43 @@ declare class FunctionExpressionOutput {
 }
 
 declare class MaterialExpressionMaterialFunctionCall extends MaterialExpression { 
-	MaterialFunction: MaterialFunction;
+	MaterialFunction: MaterialFunctionInterface;
 	FunctionInputs: FunctionExpressionInput[];
 	FunctionOutputs: FunctionExpressionOutput[];
+	FunctionParameterInfo: MaterialParameterInfo;
 	static Load(ResourceName: string): MaterialExpressionMaterialFunctionCall;
 	static Find(Outer: UObject, ResourceName: string): MaterialExpressionMaterialFunctionCall;
 	static GetDefaultObject(): MaterialExpressionMaterialFunctionCall;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionMaterialFunctionCall;
-	SetMaterialFunction(NewMaterialFunction: MaterialFunction): boolean;
+	SetMaterialFunction(NewMaterialFunction: MaterialFunctionInterface): boolean;
 	static C(Other: UObject | any): MaterialExpressionMaterialFunctionCall;
 }
 
+declare class MaterialExpressionMaterialAttributeLayers extends MaterialExpression { 
+	ParameterName: string;
+	ExpressionGUID: Guid;
+	Input: MaterialAttributesInput;
+	DefaultLayers: MaterialLayersFunctions;
+	LayerCallers: MaterialExpressionMaterialFunctionCall[];
+	NumActiveLayerCallers: number;
+	BlendCallers: MaterialExpressionMaterialFunctionCall[];
+	NumActiveBlendCallers: number;
+	bIsLayerGraphBuilt: boolean;
+	static Load(ResourceName: string): MaterialExpressionMaterialAttributeLayers;
+	static Find(Outer: UObject, ResourceName: string): MaterialExpressionMaterialAttributeLayers;
+	static GetDefaultObject(): MaterialExpressionMaterialAttributeLayers;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionMaterialAttributeLayers;
+	static C(Other: UObject | any): MaterialExpressionMaterialAttributeLayers;
+}
+
+declare class MaterialExpressionMaterialLayerOutput extends MaterialExpressionFunctionOutput { 
+	static Load(ResourceName: string): MaterialExpressionMaterialLayerOutput;
+	static Find(Outer: UObject, ResourceName: string): MaterialExpressionMaterialLayerOutput;
+	static GetDefaultObject(): MaterialExpressionMaterialLayerOutput;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionMaterialLayerOutput;
+	static C(Other: UObject | any): MaterialExpressionMaterialLayerOutput;
+}
+
 declare class MaterialExpressionMaterialProxyReplace extends MaterialExpression { 
 	Realtime: ExpressionInput;
 	MaterialProxy: ExpressionInput;
@@ -13966,8 +18017,8 @@ declare class MaterialExpressionMultiply extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionMultiply;
 }
 
-declare type ENoiseFunction = 'NOISEFUNCTION_SimplexTex' | 'NOISEFUNCTION_GradientTex' | 'NOISEFUNCTION_GradientTex3D' | 'NOISEFUNCTION_GradientALU' | 'NOISEFUNCTION_ValueALU' | 'NOISEFUNCTION_VoronoiALU';
-declare var ENoiseFunction : { NOISEFUNCTION_SimplexTex:'NOISEFUNCTION_SimplexTex',NOISEFUNCTION_GradientTex:'NOISEFUNCTION_GradientTex',NOISEFUNCTION_GradientTex3D:'NOISEFUNCTION_GradientTex3D',NOISEFUNCTION_GradientALU:'NOISEFUNCTION_GradientALU',NOISEFUNCTION_ValueALU:'NOISEFUNCTION_ValueALU',NOISEFUNCTION_VoronoiALU:'NOISEFUNCTION_VoronoiALU', };
+declare type ENoiseFunction = 'NOISEFUNCTION_SimplexTex' | 'NOISEFUNCTION_GradientTex' | 'NOISEFUNCTION_GradientTex3D' | 'NOISEFUNCTION_GradientALU' | 'NOISEFUNCTION_ValueALU' | 'NOISEFUNCTION_VoronoiALU' | 'NOISEFUNCTION_MAX';
+declare var ENoiseFunction : { NOISEFUNCTION_SimplexTex:'NOISEFUNCTION_SimplexTex',NOISEFUNCTION_GradientTex:'NOISEFUNCTION_GradientTex',NOISEFUNCTION_GradientTex3D:'NOISEFUNCTION_GradientTex3D',NOISEFUNCTION_GradientALU:'NOISEFUNCTION_GradientALU',NOISEFUNCTION_ValueALU:'NOISEFUNCTION_ValueALU',NOISEFUNCTION_VoronoiALU:'NOISEFUNCTION_VoronoiALU',NOISEFUNCTION_MAX:'NOISEFUNCTION_MAX', };
 declare class MaterialExpressionNoise extends MaterialExpression { 
 	Position: ExpressionInput;
 	FilterWidth: ExpressionInput;
@@ -14041,28 +18092,16 @@ declare class MaterialExpressionOneMinus extends MaterialExpression {
 declare class MaterialExpressionPanner extends MaterialExpression { 
 	Coordinate: ExpressionInput;
 	Time: ExpressionInput;
-	Speed: ExpressionInput;
-	SpeedX: number;
-	SpeedY: number;
-	ConstCoordinate: any;
-	bFractionalPart: boolean;
-	static Load(ResourceName: string): MaterialExpressionPanner;
-	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPanner;
-	static GetDefaultObject(): MaterialExpressionPanner;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPanner;
-	static C(Other: UObject | any): MaterialExpressionPanner;
-}
-
-declare class MaterialExpressionParameter extends MaterialExpression { 
-	ParameterName: string;
-	ExpressionGUID: Guid;
-	Group: string;
-	SortPriority: number;
-	static Load(ResourceName: string): MaterialExpressionParameter;
-	static Find(Outer: UObject, ResourceName: string): MaterialExpressionParameter;
-	static GetDefaultObject(): MaterialExpressionParameter;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionParameter;
-	static C(Other: UObject | any): MaterialExpressionParameter;
+	Speed: ExpressionInput;
+	SpeedX: number;
+	SpeedY: number;
+	ConstCoordinate: any;
+	bFractionalPart: boolean;
+	static Load(ResourceName: string): MaterialExpressionPanner;
+	static Find(Outer: UObject, ResourceName: string): MaterialExpressionPanner;
+	static GetDefaultObject(): MaterialExpressionPanner;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionPanner;
+	static C(Other: UObject | any): MaterialExpressionPanner;
 }
 
 declare class MaterialExpressionParticleColor extends MaterialExpression { 
@@ -14305,19 +18344,8 @@ declare class MaterialExpressionSaturate extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionSaturate;
 }
 
-declare class MaterialExpressionScalarParameter extends MaterialExpressionParameter { 
-	DefaultValue: number;
-	SliderMin: number;
-	SliderMax: number;
-	static Load(ResourceName: string): MaterialExpressionScalarParameter;
-	static Find(Outer: UObject, ResourceName: string): MaterialExpressionScalarParameter;
-	static GetDefaultObject(): MaterialExpressionScalarParameter;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionScalarParameter;
-	static C(Other: UObject | any): MaterialExpressionScalarParameter;
-}
-
-declare type EMaterialSceneAttributeInputMode = 'Coordinates' | 'OffsetFraction';
-declare var EMaterialSceneAttributeInputMode : { Coordinates:'Coordinates',OffsetFraction:'OffsetFraction', };
+declare type EMaterialSceneAttributeInputMode = 'Coordinates' | 'OffsetFraction' | 'EMaterialSceneAttributeInputMode_MAX';
+declare var EMaterialSceneAttributeInputMode : { Coordinates:'Coordinates',OffsetFraction:'OffsetFraction',EMaterialSceneAttributeInputMode_MAX:'EMaterialSceneAttributeInputMode_MAX', };
 declare class MaterialExpressionSceneColor extends MaterialExpression { 
 	InputMode: EMaterialSceneAttributeInputMode;
 	Input: ExpressionInput;
@@ -14350,12 +18378,11 @@ declare class MaterialExpressionSceneTexelSize extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionSceneTexelSize;
 }
 
-declare type ESceneTextureId = 'PPI_SceneColor' | 'PPI_SceneDepth' | 'PPI_DiffuseColor' | 'PPI_SpecularColor' | 'PPI_SubsurfaceColor' | 'PPI_BaseColor' | 'PPI_Specular' | 'PPI_Metallic' | 'PPI_WorldNormal' | 'PPI_SeparateTranslucency' | 'PPI_Opacity' | 'PPI_Roughness' | 'PPI_MaterialAO' | 'PPI_CustomDepth' | 'PPI_PostProcessInput0' | 'PPI_PostProcessInput1' | 'PPI_PostProcessInput2' | 'PPI_PostProcessInput3' | 'PPI_PostProcessInput4' | 'PPI_PostProcessInput5' | 'PPI_PostProcessInput6' | 'PPI_DecalMask' | 'PPI_ShadingModel' | 'PPI_AmbientOcclusion' | 'PPI_CustomStencil' | 'PPI_StoredBaseColor' | 'PPI_StoredSpecular';
-declare var ESceneTextureId : { PPI_SceneColor:'PPI_SceneColor',PPI_SceneDepth:'PPI_SceneDepth',PPI_DiffuseColor:'PPI_DiffuseColor',PPI_SpecularColor:'PPI_SpecularColor',PPI_SubsurfaceColor:'PPI_SubsurfaceColor',PPI_BaseColor:'PPI_BaseColor',PPI_Specular:'PPI_Specular',PPI_Metallic:'PPI_Metallic',PPI_WorldNormal:'PPI_WorldNormal',PPI_SeparateTranslucency:'PPI_SeparateTranslucency',PPI_Opacity:'PPI_Opacity',PPI_Roughness:'PPI_Roughness',PPI_MaterialAO:'PPI_MaterialAO',PPI_CustomDepth:'PPI_CustomDepth',PPI_PostProcessInput0:'PPI_PostProcessInput0',PPI_PostProcessInput1:'PPI_PostProcessInput1',PPI_PostProcessInput2:'PPI_PostProcessInput2',PPI_PostProcessInput3:'PPI_PostProcessInput3',PPI_PostProcessInput4:'PPI_PostProcessInput4',PPI_PostProcessInput5:'PPI_PostProcessInput5',PPI_PostProcessInput6:'PPI_PostProcessInput6',PPI_DecalMask:'PPI_DecalMask',PPI_ShadingModel:'PPI_ShadingModel',PPI_AmbientOcclusion:'PPI_AmbientOcclusion',PPI_CustomStencil:'PPI_CustomStencil',PPI_StoredBaseColor:'PPI_StoredBaseColor',PPI_StoredSpecular:'PPI_StoredSpecular', };
+declare type ESceneTextureId = 'PPI_SceneColor' | 'PPI_SceneDepth' | 'PPI_DiffuseColor' | 'PPI_SpecularColor' | 'PPI_SubsurfaceColor' | 'PPI_BaseColor' | 'PPI_Specular' | 'PPI_Metallic' | 'PPI_WorldNormal' | 'PPI_SeparateTranslucency' | 'PPI_Opacity' | 'PPI_Roughness' | 'PPI_MaterialAO' | 'PPI_CustomDepth' | 'PPI_PostProcessInput0' | 'PPI_PostProcessInput1' | 'PPI_PostProcessInput2' | 'PPI_PostProcessInput3' | 'PPI_PostProcessInput4' | 'PPI_PostProcessInput5' | 'PPI_PostProcessInput6' | 'PPI_DecalMask' | 'PPI_ShadingModelColor' | 'PPI_ShadingModelID' | 'PPI_AmbientOcclusion' | 'PPI_CustomStencil' | 'PPI_StoredBaseColor' | 'PPI_StoredSpecular' | 'PPI_MAX';
+declare var ESceneTextureId : { PPI_SceneColor:'PPI_SceneColor',PPI_SceneDepth:'PPI_SceneDepth',PPI_DiffuseColor:'PPI_DiffuseColor',PPI_SpecularColor:'PPI_SpecularColor',PPI_SubsurfaceColor:'PPI_SubsurfaceColor',PPI_BaseColor:'PPI_BaseColor',PPI_Specular:'PPI_Specular',PPI_Metallic:'PPI_Metallic',PPI_WorldNormal:'PPI_WorldNormal',PPI_SeparateTranslucency:'PPI_SeparateTranslucency',PPI_Opacity:'PPI_Opacity',PPI_Roughness:'PPI_Roughness',PPI_MaterialAO:'PPI_MaterialAO',PPI_CustomDepth:'PPI_CustomDepth',PPI_PostProcessInput0:'PPI_PostProcessInput0',PPI_PostProcessInput1:'PPI_PostProcessInput1',PPI_PostProcessInput2:'PPI_PostProcessInput2',PPI_PostProcessInput3:'PPI_PostProcessInput3',PPI_PostProcessInput4:'PPI_PostProcessInput4',PPI_PostProcessInput5:'PPI_PostProcessInput5',PPI_PostProcessInput6:'PPI_PostProcessInput6',PPI_DecalMask:'PPI_DecalMask',PPI_ShadingModelColor:'PPI_ShadingModelColor',PPI_ShadingModelID:'PPI_ShadingModelID',PPI_AmbientOcclusion:'PPI_AmbientOcclusion',PPI_CustomStencil:'PPI_CustomStencil',PPI_StoredBaseColor:'PPI_StoredBaseColor',PPI_StoredSpecular:'PPI_StoredSpecular',PPI_MAX:'PPI_MAX', };
 declare class MaterialExpressionSceneTexture extends MaterialExpression { 
 	Coordinates: ExpressionInput;
 	SceneTextureId: ESceneTextureId;
-	bClampUVs: boolean;
 	bFiltered: boolean;
 	static Load(ResourceName: string): MaterialExpressionSceneTexture;
 	static Find(Outer: UObject, ResourceName: string): MaterialExpressionSceneTexture;
@@ -14364,10 +18391,7 @@ declare class MaterialExpressionSceneTexture extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionSceneTexture;
 }
 
-declare type EMaterialExpressionScreenPositionMapping = 'MESP_SceneTextureUV' | 'MESP_ViewportUV';
-declare var EMaterialExpressionScreenPositionMapping : { MESP_SceneTextureUV:'MESP_SceneTextureUV',MESP_ViewportUV:'MESP_ViewportUV', };
 declare class MaterialExpressionScreenPosition extends MaterialExpression { 
-	Mapping: EMaterialExpressionScreenPositionMapping;
 	static Load(ResourceName: string): MaterialExpressionScreenPosition;
 	static Find(Outer: UObject, ResourceName: string): MaterialExpressionScreenPosition;
 	static GetDefaultObject(): MaterialExpressionScreenPosition;
@@ -14385,6 +18409,16 @@ declare class MaterialExpressionSetMaterialAttributes extends MaterialExpression
 	static C(Other: UObject | any): MaterialExpressionSetMaterialAttributes;
 }
 
+declare class MaterialExpressionShadingPathSwitch extends MaterialExpression { 
+	Default: ExpressionInput;
+	Inputs: ExpressionInput;
+	static Load(ResourceName: string): MaterialExpressionShadingPathSwitch;
+	static Find(Outer: UObject, ResourceName: string): MaterialExpressionShadingPathSwitch;
+	static GetDefaultObject(): MaterialExpressionShadingPathSwitch;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionShadingPathSwitch;
+	static C(Other: UObject | any): MaterialExpressionShadingPathSwitch;
+}
+
 declare class MaterialExpressionSign extends MaterialExpression { 
 	Input: ExpressionInput;
 	static Load(ResourceName: string): MaterialExpressionSign;
@@ -14406,7 +18440,7 @@ declare class MaterialExpressionSine extends MaterialExpression {
 
 declare class MaterialExpressionSobol extends MaterialExpression { 
 	Cell: ExpressionInput;
-	Index: ExpressionInput;
+	index: ExpressionInput;
 	Seed: ExpressionInput;
 	ConstIndex: any;
 	ConstSeed: Vector2D;
@@ -14417,13 +18451,17 @@ declare class MaterialExpressionSobol extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionSobol;
 }
 
-declare type ESpeedTreeGeometryType = 'STG_Branch' | 'STG_Frond' | 'STG_Leaf' | 'STG_FacingLeaf' | 'STG_Billboard';
-declare var ESpeedTreeGeometryType : { STG_Branch:'STG_Branch',STG_Frond:'STG_Frond',STG_Leaf:'STG_Leaf',STG_FacingLeaf:'STG_FacingLeaf',STG_Billboard:'STG_Billboard', };
-declare type ESpeedTreeWindType = 'STW_None' | 'STW_Fastest' | 'STW_Fast' | 'STW_Better' | 'STW_Best' | 'STW_Palm' | 'STW_BestPlus';
-declare var ESpeedTreeWindType : { STW_None:'STW_None',STW_Fastest:'STW_Fastest',STW_Fast:'STW_Fast',STW_Better:'STW_Better',STW_Best:'STW_Best',STW_Palm:'STW_Palm',STW_BestPlus:'STW_BestPlus', };
-declare type ESpeedTreeLODType = 'STLOD_Pop' | 'STLOD_Smooth';
-declare var ESpeedTreeLODType : { STLOD_Pop:'STLOD_Pop',STLOD_Smooth:'STLOD_Smooth', };
+declare type ESpeedTreeGeometryType = 'STG_Branch' | 'STG_Frond' | 'STG_Leaf' | 'STG_FacingLeaf' | 'STG_Billboard' | 'STG_MAX';
+declare var ESpeedTreeGeometryType : { STG_Branch:'STG_Branch',STG_Frond:'STG_Frond',STG_Leaf:'STG_Leaf',STG_FacingLeaf:'STG_FacingLeaf',STG_Billboard:'STG_Billboard',STG_MAX:'STG_MAX', };
+declare type ESpeedTreeWindType = 'STW_None' | 'STW_Fastest' | 'STW_Fast' | 'STW_Better' | 'STW_Best' | 'STW_Palm' | 'STW_BestPlus' | 'STW_MAX';
+declare var ESpeedTreeWindType : { STW_None:'STW_None',STW_Fastest:'STW_Fastest',STW_Fast:'STW_Fast',STW_Better:'STW_Better',STW_Best:'STW_Best',STW_Palm:'STW_Palm',STW_BestPlus:'STW_BestPlus',STW_MAX:'STW_MAX', };
+declare type ESpeedTreeLODType = 'STLOD_Pop' | 'STLOD_Smooth' | 'STLOD_MAX';
+declare var ESpeedTreeLODType : { STLOD_Pop:'STLOD_Pop',STLOD_Smooth:'STLOD_Smooth',STLOD_MAX:'STLOD_MAX', };
 declare class MaterialExpressionSpeedTree extends MaterialExpression { 
+	GeometryInput: ExpressionInput;
+	WindInput: ExpressionInput;
+	LODInput: ExpressionInput;
+	ExtraBendWS: ExpressionInput;
 	GeometryType: ESpeedTreeGeometryType;
 	WindType: ESpeedTreeWindType;
 	LODType: ESpeedTreeLODType;
@@ -14554,7 +18592,7 @@ declare class MaterialExpressionTangentOutput extends MaterialExpressionCustomOu
 }
 
 declare class MaterialExpressionTemporalSobol extends MaterialExpression { 
-	Index: ExpressionInput;
+	index: ExpressionInput;
 	Seed: ExpressionInput;
 	ConstIndex: any;
 	ConstSeed: Vector2D;
@@ -14594,8 +18632,8 @@ declare class MaterialExpressionTextureObjectParameter extends MaterialExpressio
 	static C(Other: UObject | any): MaterialExpressionTextureObjectParameter;
 }
 
-declare type EMaterialExposedTextureProperty = 'TMTM_TextureSize' | 'TMTM_TexelSize';
-declare var EMaterialExposedTextureProperty : { TMTM_TextureSize:'TMTM_TextureSize',TMTM_TexelSize:'TMTM_TexelSize', };
+declare type EMaterialExposedTextureProperty = 'TMTM_TextureSize' | 'TMTM_TexelSize' | 'TMTM_MAX';
+declare var EMaterialExposedTextureProperty : { TMTM_TextureSize:'TMTM_TextureSize',TMTM_TexelSize:'TMTM_TexelSize',TMTM_MAX:'TMTM_MAX', };
 declare class MaterialExpressionTextureProperty extends MaterialExpression { 
 	TextureObject: ExpressionInput;
 	Property: EMaterialExposedTextureProperty;
@@ -14623,6 +18661,14 @@ declare class MaterialExpressionTextureSampleParameterSubUV extends MaterialExpr
 	static C(Other: UObject | any): MaterialExpressionTextureSampleParameterSubUV;
 }
 
+declare class MaterialExpressionTextureSampleParameterVolume extends MaterialExpressionTextureSampleParameter { 
+	static Load(ResourceName: string): MaterialExpressionTextureSampleParameterVolume;
+	static Find(Outer: UObject, ResourceName: string): MaterialExpressionTextureSampleParameterVolume;
+	static GetDefaultObject(): MaterialExpressionTextureSampleParameterVolume;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionTextureSampleParameterVolume;
+	static C(Other: UObject | any): MaterialExpressionTextureSampleParameterVolume;
+}
+
 declare class MaterialExpressionTime extends MaterialExpression { 
 	bIgnorePause: boolean;
 	bOverride_Period: boolean;
@@ -14634,10 +18680,10 @@ declare class MaterialExpressionTime extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionTime;
 }
 
-declare type EMaterialVectorCoordTransformSource = 'TRANSFORMSOURCE_Tangent' | 'TRANSFORMSOURCE_Local' | 'TRANSFORMSOURCE_World' | 'TRANSFORMSOURCE_View' | 'TRANSFORMSOURCE_Camera' | 'TRANSFORMSOURCE_ParticleWorld';
-declare var EMaterialVectorCoordTransformSource : { TRANSFORMSOURCE_Tangent:'TRANSFORMSOURCE_Tangent',TRANSFORMSOURCE_Local:'TRANSFORMSOURCE_Local',TRANSFORMSOURCE_World:'TRANSFORMSOURCE_World',TRANSFORMSOURCE_View:'TRANSFORMSOURCE_View',TRANSFORMSOURCE_Camera:'TRANSFORMSOURCE_Camera',TRANSFORMSOURCE_ParticleWorld:'TRANSFORMSOURCE_ParticleWorld', };
-declare type EMaterialVectorCoordTransform = 'TRANSFORM_Tangent' | 'TRANSFORM_Local' | 'TRANSFORM_World' | 'TRANSFORM_View' | 'TRANSFORM_Camera' | 'TRANSFORM_ParticleWorld';
-declare var EMaterialVectorCoordTransform : { TRANSFORM_Tangent:'TRANSFORM_Tangent',TRANSFORM_Local:'TRANSFORM_Local',TRANSFORM_World:'TRANSFORM_World',TRANSFORM_View:'TRANSFORM_View',TRANSFORM_Camera:'TRANSFORM_Camera',TRANSFORM_ParticleWorld:'TRANSFORM_ParticleWorld', };
+declare type EMaterialVectorCoordTransformSource = 'TRANSFORMSOURCE_Tangent' | 'TRANSFORMSOURCE_Local' | 'TRANSFORMSOURCE_World' | 'TRANSFORMSOURCE_View' | 'TRANSFORMSOURCE_Camera' | 'TRANSFORMSOURCE_ParticleWorld' | 'TRANSFORMSOURCE_MAX';
+declare var EMaterialVectorCoordTransformSource : { TRANSFORMSOURCE_Tangent:'TRANSFORMSOURCE_Tangent',TRANSFORMSOURCE_Local:'TRANSFORMSOURCE_Local',TRANSFORMSOURCE_World:'TRANSFORMSOURCE_World',TRANSFORMSOURCE_View:'TRANSFORMSOURCE_View',TRANSFORMSOURCE_Camera:'TRANSFORMSOURCE_Camera',TRANSFORMSOURCE_ParticleWorld:'TRANSFORMSOURCE_ParticleWorld',TRANSFORMSOURCE_MAX:'TRANSFORMSOURCE_MAX', };
+declare type EMaterialVectorCoordTransform = 'TRANSFORM_Tangent' | 'TRANSFORM_Local' | 'TRANSFORM_World' | 'TRANSFORM_View' | 'TRANSFORM_Camera' | 'TRANSFORM_ParticleWorld' | 'TRANSFORM_MAX';
+declare var EMaterialVectorCoordTransform : { TRANSFORM_Tangent:'TRANSFORM_Tangent',TRANSFORM_Local:'TRANSFORM_Local',TRANSFORM_World:'TRANSFORM_World',TRANSFORM_View:'TRANSFORM_View',TRANSFORM_Camera:'TRANSFORM_Camera',TRANSFORM_ParticleWorld:'TRANSFORM_ParticleWorld',TRANSFORM_MAX:'TRANSFORM_MAX', };
 declare class MaterialExpressionTransform extends MaterialExpression { 
 	Input: ExpressionInput;
 	TransformSourceType: EMaterialVectorCoordTransformSource;
@@ -14649,8 +18695,8 @@ declare class MaterialExpressionTransform extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionTransform;
 }
 
-declare type EMaterialPositionTransformSource = 'TRANSFORMPOSSOURCE_Local' | 'TRANSFORMPOSSOURCE_World' | 'TRANSFORMPOSSOURCE_TranslatedWorld' | 'TRANSFORMPOSSOURCE_View' | 'TRANSFORMPOSSOURCE_Camera' | 'TRANSFORMPOSSOURCE_Particle';
-declare var EMaterialPositionTransformSource : { TRANSFORMPOSSOURCE_Local:'TRANSFORMPOSSOURCE_Local',TRANSFORMPOSSOURCE_World:'TRANSFORMPOSSOURCE_World',TRANSFORMPOSSOURCE_TranslatedWorld:'TRANSFORMPOSSOURCE_TranslatedWorld',TRANSFORMPOSSOURCE_View:'TRANSFORMPOSSOURCE_View',TRANSFORMPOSSOURCE_Camera:'TRANSFORMPOSSOURCE_Camera',TRANSFORMPOSSOURCE_Particle:'TRANSFORMPOSSOURCE_Particle', };
+declare type EMaterialPositionTransformSource = 'TRANSFORMPOSSOURCE_Local' | 'TRANSFORMPOSSOURCE_World' | 'TRANSFORMPOSSOURCE_TranslatedWorld' | 'TRANSFORMPOSSOURCE_View' | 'TRANSFORMPOSSOURCE_Camera' | 'TRANSFORMPOSSOURCE_Particle' | 'TRANSFORMPOSSOURCE_MAX';
+declare var EMaterialPositionTransformSource : { TRANSFORMPOSSOURCE_Local:'TRANSFORMPOSSOURCE_Local',TRANSFORMPOSSOURCE_World:'TRANSFORMPOSSOURCE_World',TRANSFORMPOSSOURCE_TranslatedWorld:'TRANSFORMPOSSOURCE_TranslatedWorld',TRANSFORMPOSSOURCE_View:'TRANSFORMPOSSOURCE_View',TRANSFORMPOSSOURCE_Camera:'TRANSFORMPOSSOURCE_Camera',TRANSFORMPOSSOURCE_Particle:'TRANSFORMPOSSOURCE_Particle',TRANSFORMPOSSOURCE_MAX:'TRANSFORMPOSSOURCE_MAX', };
 declare class MaterialExpressionTransformPosition extends MaterialExpression { 
 	Input: ExpressionInput;
 	TransformSourceType: EMaterialPositionTransformSource;
@@ -14679,8 +18725,8 @@ declare class MaterialExpressionTwoSidedSign extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionTwoSidedSign;
 }
 
-declare type EVectorNoiseFunction = 'VNF_CellnoiseALU' | 'VNF_VectorALU' | 'VNF_GradientALU' | 'VNF_CurlALU' | 'VNF_VoronoiALU';
-declare var EVectorNoiseFunction : { VNF_CellnoiseALU:'VNF_CellnoiseALU',VNF_VectorALU:'VNF_VectorALU',VNF_GradientALU:'VNF_GradientALU',VNF_CurlALU:'VNF_CurlALU',VNF_VoronoiALU:'VNF_VoronoiALU', };
+declare type EVectorNoiseFunction = 'VNF_CellnoiseALU' | 'VNF_VectorALU' | 'VNF_GradientALU' | 'VNF_CurlALU' | 'VNF_VoronoiALU' | 'VNF_MAX';
+declare var EVectorNoiseFunction : { VNF_CellnoiseALU:'VNF_CellnoiseALU',VNF_VectorALU:'VNF_VectorALU',VNF_GradientALU:'VNF_GradientALU',VNF_CurlALU:'VNF_CurlALU',VNF_VoronoiALU:'VNF_VoronoiALU',VNF_MAX:'VNF_MAX', };
 declare class MaterialExpressionVectorNoise extends MaterialExpression { 
 	Position: ExpressionInput;
 	NoiseFunction: EVectorNoiseFunction;
@@ -14694,15 +18740,6 @@ declare class MaterialExpressionVectorNoise extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionVectorNoise;
 }
 
-declare class MaterialExpressionVectorParameter extends MaterialExpressionParameter { 
-	DefaultValue: LinearColor;
-	static Load(ResourceName: string): MaterialExpressionVectorParameter;
-	static Find(Outer: UObject, ResourceName: string): MaterialExpressionVectorParameter;
-	static GetDefaultObject(): MaterialExpressionVectorParameter;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialExpressionVectorParameter;
-	static C(Other: UObject | any): MaterialExpressionVectorParameter;
-}
-
 declare class MaterialExpressionVertexColor extends MaterialExpression { 
 	static Load(ResourceName: string): MaterialExpressionVertexColor;
 	static Find(Outer: UObject, ResourceName: string): MaterialExpressionVertexColor;
@@ -14728,8 +18765,8 @@ declare class MaterialExpressionVertexNormalWS extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionVertexNormalWS;
 }
 
-declare type EMaterialExposedViewProperty = 'MEVP_BufferSize' | 'MEVP_FieldOfView' | 'MEVP_TanHalfFieldOfView' | 'MEVP_ViewSize' | 'MEVP_WorldSpaceViewPosition' | 'MEVP_WorldSpaceCameraPosition' | 'MEVP_ViewportOffset';
-declare var EMaterialExposedViewProperty : { MEVP_BufferSize:'MEVP_BufferSize',MEVP_FieldOfView:'MEVP_FieldOfView',MEVP_TanHalfFieldOfView:'MEVP_TanHalfFieldOfView',MEVP_ViewSize:'MEVP_ViewSize',MEVP_WorldSpaceViewPosition:'MEVP_WorldSpaceViewPosition',MEVP_WorldSpaceCameraPosition:'MEVP_WorldSpaceCameraPosition',MEVP_ViewportOffset:'MEVP_ViewportOffset', };
+declare type EMaterialExposedViewProperty = 'MEVP_BufferSize' | 'MEVP_FieldOfView' | 'MEVP_TanHalfFieldOfView' | 'MEVP_ViewSize' | 'MEVP_WorldSpaceViewPosition' | 'MEVP_WorldSpaceCameraPosition' | 'MEVP_ViewportOffset' | 'MEVP_MAX';
+declare var EMaterialExposedViewProperty : { MEVP_BufferSize:'MEVP_BufferSize',MEVP_FieldOfView:'MEVP_FieldOfView',MEVP_TanHalfFieldOfView:'MEVP_TanHalfFieldOfView',MEVP_ViewSize:'MEVP_ViewSize',MEVP_WorldSpaceViewPosition:'MEVP_WorldSpaceViewPosition',MEVP_WorldSpaceCameraPosition:'MEVP_WorldSpaceCameraPosition',MEVP_ViewportOffset:'MEVP_ViewportOffset',MEVP_MAX:'MEVP_MAX', };
 declare class MaterialExpressionViewProperty extends MaterialExpression { 
 	Property: EMaterialExposedViewProperty;
 	static Load(ResourceName: string): MaterialExpressionViewProperty;
@@ -14747,8 +18784,8 @@ declare class MaterialExpressionViewSize extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionViewSize;
 }
 
-declare type EWorldPositionIncludedOffsets = 'WPT_Default' | 'WPT_ExcludeAllShaderOffsets' | 'WPT_CameraRelative' | 'WPT_CameraRelativeNoOffsets';
-declare var EWorldPositionIncludedOffsets : { WPT_Default:'WPT_Default',WPT_ExcludeAllShaderOffsets:'WPT_ExcludeAllShaderOffsets',WPT_CameraRelative:'WPT_CameraRelative',WPT_CameraRelativeNoOffsets:'WPT_CameraRelativeNoOffsets', };
+declare type EWorldPositionIncludedOffsets = 'WPT_Default' | 'WPT_ExcludeAllShaderOffsets' | 'WPT_CameraRelative' | 'WPT_CameraRelativeNoOffsets' | 'WPT_MAX';
+declare var EWorldPositionIncludedOffsets : { WPT_Default:'WPT_Default',WPT_ExcludeAllShaderOffsets:'WPT_ExcludeAllShaderOffsets',WPT_CameraRelative:'WPT_CameraRelative',WPT_CameraRelativeNoOffsets:'WPT_CameraRelativeNoOffsets',WPT_MAX:'WPT_MAX', };
 declare class MaterialExpressionWorldPosition extends MaterialExpression { 
 	WorldPositionShaderOffset: EWorldPositionIncludedOffsets;
 	static Load(ResourceName: string): MaterialExpressionWorldPosition;
@@ -14758,6 +18795,38 @@ declare class MaterialExpressionWorldPosition extends MaterialExpression {
 	static C(Other: UObject | any): MaterialExpressionWorldPosition;
 }
 
+declare class MaterialFunctionMaterialLayer extends MaterialFunction { 
+	static Load(ResourceName: string): MaterialFunctionMaterialLayer;
+	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayer;
+	static GetDefaultObject(): MaterialFunctionMaterialLayer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayer;
+	static C(Other: UObject | any): MaterialFunctionMaterialLayer;
+}
+
+declare class MaterialFunctionMaterialLayerInstance extends MaterialFunctionInstance { 
+	static Load(ResourceName: string): MaterialFunctionMaterialLayerInstance;
+	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayerInstance;
+	static GetDefaultObject(): MaterialFunctionMaterialLayerInstance;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayerInstance;
+	static C(Other: UObject | any): MaterialFunctionMaterialLayerInstance;
+}
+
+declare class MaterialFunctionMaterialLayerBlend extends MaterialFunction { 
+	static Load(ResourceName: string): MaterialFunctionMaterialLayerBlend;
+	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayerBlend;
+	static GetDefaultObject(): MaterialFunctionMaterialLayerBlend;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayerBlend;
+	static C(Other: UObject | any): MaterialFunctionMaterialLayerBlend;
+}
+
+declare class MaterialFunctionMaterialLayerBlendInstance extends MaterialFunctionInstance { 
+	static Load(ResourceName: string): MaterialFunctionMaterialLayerBlendInstance;
+	static Find(Outer: UObject, ResourceName: string): MaterialFunctionMaterialLayerBlendInstance;
+	static GetDefaultObject(): MaterialFunctionMaterialLayerBlendInstance;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialFunctionMaterialLayerBlendInstance;
+	static C(Other: UObject | any): MaterialFunctionMaterialLayerBlendInstance;
+}
+
 declare class MaterialInstanceActor extends Actor { 
 	TargetActors: Actor[];
 	static GetDefaultObject(): MaterialInstanceActor;
@@ -14810,7 +18879,7 @@ declare class MeshVertexPainterKismetLibrary extends BlueprintFunctionLibrary {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshVertexPainterKismetLibrary;
 	static RemovePaintedVertices(StaticMeshComponent: StaticMeshComponent): void;
 	static PaintVerticesSingleColor(StaticMeshComponent: StaticMeshComponent,FillColor: LinearColor,bConvertToSRGB: boolean): void;
-	static PaintVerticesLerpAlongAxis(StaticMeshComponent: StaticMeshComponent,StartColor: LinearColor,EndColor: LinearColor,Axis: Axis,bConvertToSRGB: boolean): void;
+	static PaintVerticesLerpAlongAxis(StaticMeshComponent: StaticMeshComponent,StartColor: LinearColor,EndColor: LinearColor,Axis: EVertexPaintAxis,bConvertToSRGB: boolean): void;
 	static C(Other: UObject | any): MeshVertexPainterKismetLibrary;
 }
 
@@ -14842,70 +18911,6 @@ declare class NavAgentInterface extends Interface {
 	static C(Other: UObject | any): NavAgentInterface;
 }
 
-declare class NavArea_Default extends NavArea { 
-	static Load(ResourceName: string): NavArea_Default;
-	static Find(Outer: UObject, ResourceName: string): NavArea_Default;
-	static GetDefaultObject(): NavArea_Default;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavArea_Default;
-	static C(Other: UObject | any): NavArea_Default;
-}
-
-declare class NavArea_LowHeight extends NavArea { 
-	static Load(ResourceName: string): NavArea_LowHeight;
-	static Find(Outer: UObject, ResourceName: string): NavArea_LowHeight;
-	static GetDefaultObject(): NavArea_LowHeight;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavArea_LowHeight;
-	static C(Other: UObject | any): NavArea_LowHeight;
-}
-
-declare class NavArea_Null extends NavArea { 
-	static Load(ResourceName: string): NavArea_Null;
-	static Find(Outer: UObject, ResourceName: string): NavArea_Null;
-	static GetDefaultObject(): NavArea_Null;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavArea_Null;
-	static C(Other: UObject | any): NavArea_Null;
-}
-
-declare class NavArea_Obstacle extends NavArea { 
-	static Load(ResourceName: string): NavArea_Obstacle;
-	static Find(Outer: UObject, ResourceName: string): NavArea_Obstacle;
-	static GetDefaultObject(): NavArea_Obstacle;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavArea_Obstacle;
-	static C(Other: UObject | any): NavArea_Obstacle;
-}
-
-declare class NavAreaMeta extends NavArea { 
-	static Load(ResourceName: string): NavAreaMeta;
-	static Find(Outer: UObject, ResourceName: string): NavAreaMeta;
-	static GetDefaultObject(): NavAreaMeta;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavAreaMeta;
-	static C(Other: UObject | any): NavAreaMeta;
-}
-
-declare class NavAreaMeta_SwitchByAgent extends NavAreaMeta { 
-	Agent0Area: UnrealEngineClass;
-	Agent1Area: UnrealEngineClass;
-	Agent2Area: UnrealEngineClass;
-	Agent3Area: UnrealEngineClass;
-	Agent4Area: UnrealEngineClass;
-	Agent5Area: UnrealEngineClass;
-	Agent6Area: UnrealEngineClass;
-	Agent7Area: UnrealEngineClass;
-	Agent8Area: UnrealEngineClass;
-	Agent9Area: UnrealEngineClass;
-	Agent10Area: UnrealEngineClass;
-	Agent11Area: UnrealEngineClass;
-	Agent12Area: UnrealEngineClass;
-	Agent13Area: UnrealEngineClass;
-	Agent14Area: UnrealEngineClass;
-	Agent15Area: UnrealEngineClass;
-	static Load(ResourceName: string): NavAreaMeta_SwitchByAgent;
-	static Find(Outer: UObject, ResourceName: string): NavAreaMeta_SwitchByAgent;
-	static GetDefaultObject(): NavAreaMeta_SwitchByAgent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavAreaMeta_SwitchByAgent;
-	static C(Other: UObject | any): NavAreaMeta_SwitchByAgent;
-}
-
 declare class NavEdgeProviderInterface extends Interface { 
 	static Load(ResourceName: string): NavEdgeProviderInterface;
 	static Find(Outer: UObject, ResourceName: string): NavEdgeProviderInterface;
@@ -14914,300 +18919,30 @@ declare class NavEdgeProviderInterface extends Interface {
 	static C(Other: UObject | any): NavEdgeProviderInterface;
 }
 
-declare class NavigationGraph extends NavigationData { 
-	static GetDefaultObject(): NavigationGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationGraph;
-	static C(Other: UObject | any): NavigationGraph;
-}
-
-declare class NavigationGraphNode extends Actor { 
-	static GetDefaultObject(): NavigationGraphNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationGraphNode;
-	static C(Other: UObject | any): NavigationGraphNode;
+declare class NavigationDataInterface extends Interface { 
+	static Load(ResourceName: string): NavigationDataInterface;
+	static Find(Outer: UObject, ResourceName: string): NavigationDataInterface;
+	static GetDefaultObject(): NavigationDataInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationDataInterface;
+	static C(Other: UObject | any): NavigationDataInterface;
 }
 
-declare class NavGraphNode { 
-	Owner: UObject;
-	clone() : NavGraphNode;
-	static C(Other: UObject | any): NavGraphNode;
+declare class NavigationSystem extends UObject { 
+	static Load(ResourceName: string): NavigationSystem;
+	static Find(Outer: UObject, ResourceName: string): NavigationSystem;
+	static GetDefaultObject(): NavigationSystem;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationSystem;
+	static SimpleMoveToLocation(Controller: Controller,Goal: Vector): void;
+	static SimpleMoveToActor(Controller: Controller,Goal: Actor): void;
+	static C(Other: UObject | any): NavigationSystem;
 }
 
-declare class NavigationGraphNodeComponent extends SceneComponent { 
-	UNode: NavGraphNode;
-	NextNodeComponent: NavigationGraphNodeComponent;
-	PrevNodeComponent: NavigationGraphNodeComponent;
-	static Load(ResourceName: string): NavigationGraphNodeComponent;
-	static Find(Outer: UObject, ResourceName: string): NavigationGraphNodeComponent;
-	static GetDefaultObject(): NavigationGraphNodeComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationGraphNodeComponent;
-	static C(Other: UObject | any): NavigationGraphNodeComponent;
-}
-
-declare class NavigationInvokerComponent extends ActorComponent { 
-	TileGenerationRadius: number;
-	TileRemovalRadius: number;
-	static Load(ResourceName: string): NavigationInvokerComponent;
-	static Find(Outer: UObject, ResourceName: string): NavigationInvokerComponent;
-	static GetDefaultObject(): NavigationInvokerComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationInvokerComponent;
-	static C(Other: UObject | any): NavigationInvokerComponent;
-}
-
-declare class NavigationPathGenerator extends Interface { 
-	static Load(ResourceName: string): NavigationPathGenerator;
-	static Find(Outer: UObject, ResourceName: string): NavigationPathGenerator;
-	static GetDefaultObject(): NavigationPathGenerator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationPathGenerator;
-	static C(Other: UObject | any): NavigationPathGenerator;
-}
-
-declare class NavTestRenderingComponent extends PrimitiveComponent { 
-	static Load(ResourceName: string): NavTestRenderingComponent;
-	static Find(Outer: UObject, ResourceName: string): NavTestRenderingComponent;
-	static GetDefaultObject(): NavTestRenderingComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavTestRenderingComponent;
-	static C(Other: UObject | any): NavTestRenderingComponent;
-}
-
-declare type ENavCostDisplay = 'TotalCost' | 'HeuristicOnly' | 'RealCostOnly';
-declare var ENavCostDisplay : { TotalCost:'TotalCost',HeuristicOnly:'HeuristicOnly',RealCostOnly:'RealCostOnly', };
-declare class NavigationTestingActor extends Actor { 
-	CapsuleComponent: CapsuleComponent;
-	EdRenderComp: NavTestRenderingComponent;
-	InvokerComponent: NavigationInvokerComponent;
-	bActAsNavigationInvoker: boolean;
-	NavAgentProps: NavAgentProperties;
-	QueryingExtent: Vector;
-	MyNavData: NavigationData;
-	ProjectedLocation: Vector;
-	bProjectedLocationValid: boolean;
-	bSearchStart: boolean;
-	bUseHierarchicalPathfinding: boolean;
-	bGatherDetailedInfo: boolean;
-	bDrawDistanceToWall: boolean;
-	bShowNodePool: boolean;
-	bShowBestPath: boolean;
-	bShowDiffWithPreviousStep: boolean;
-	bShouldBeVisibleInGame: boolean;
-	CostDisplayMode: ENavCostDisplay;
-	TextCanvasOffset: Vector2D;
-	bPathExist: boolean;
-	bPathIsPartial: boolean;
-	bPathSearchOutOfNodes: boolean;
-	PathfindingTime: number;
-	PathCost: number;
-	PathfindingSteps: number;
-	OtherActor: NavigationTestingActor;
-	FilterClass: UnrealEngineClass;
-	ShowStepIndex: number;
-	OffsetFromCornersDistance: number;
-	static GetDefaultObject(): NavigationTestingActor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationTestingActor;
-	static C(Other: UObject | any): NavigationTestingActor;
-}
-
-declare class NavigationTypes extends UObject { 
-	static Load(ResourceName: string): NavigationTypes;
-	static Find(Outer: UObject, ResourceName: string): NavigationTypes;
-	static GetDefaultObject(): NavigationTypes;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavigationTypes;
-	static C(Other: UObject | any): NavigationTypes;
-}
-
-declare type ENavLinkDirection = 'BothWays' | 'LeftToRight' | 'RightToLeft';
-declare var ENavLinkDirection : { BothWays:'BothWays',LeftToRight:'LeftToRight',RightToLeft:'RightToLeft', };
-declare class NavigationLinkBase { 
-	LeftProjectHeight: number;
-	MaxFallDownLength: number;
-	Direction: ENavLinkDirection;
-	SnapRadius: number;
-	SnapHeight: number;
-	SupportedAgents: NavAgentSelector;
-	bSupportsAgent0: boolean;
-	bSupportsAgent1: boolean;
-	bSupportsAgent2: boolean;
-	bSupportsAgent3: boolean;
-	bSupportsAgent4: boolean;
-	bSupportsAgent5: boolean;
-	bSupportsAgent6: boolean;
-	bSupportsAgent7: boolean;
-	bSupportsAgent8: boolean;
-	bSupportsAgent9: boolean;
-	bSupportsAgent10: boolean;
-	bSupportsAgent11: boolean;
-	bSupportsAgent12: boolean;
-	bSupportsAgent13: boolean;
-	bSupportsAgent14: boolean;
-	bSupportsAgent15: boolean;
-	Description: string;
-	bUseSnapHeight: boolean;
-	bSnapToCheapestArea: boolean;
-	bCustomFlag0: boolean;
-	bCustomFlag1: boolean;
-	bCustomFlag2: boolean;
-	bCustomFlag3: boolean;
-	bCustomFlag4: boolean;
-	bCustomFlag5: boolean;
-	bCustomFlag6: boolean;
-	bCustomFlag7: boolean;
-	AreaClass: UnrealEngineClass;
-	clone() : NavigationLinkBase;
-	static C(Other: UObject | any): NavigationLinkBase;
-}
-
-declare class NavigationLink extends NavigationLinkBase { 
-	Left: Vector;
-	Right: Vector;
-	clone() : NavigationLink;
-	static C(Other: UObject | any): NavigationLink;
-}
-
-declare class NavLinkComponent extends PrimitiveComponent { 
-	Links: NavigationLink[];
-	static Load(ResourceName: string): NavLinkComponent;
-	static Find(Outer: UObject, ResourceName: string): NavLinkComponent;
-	static GetDefaultObject(): NavLinkComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkComponent;
-	static C(Other: UObject | any): NavLinkComponent;
-}
-
-declare class NavRelevantComponent extends ActorComponent { 
-	bAttachToOwnersRoot: boolean;
-	CachedNavParent: UObject;
-	static Load(ResourceName: string): NavRelevantComponent;
-	static Find(Outer: UObject, ResourceName: string): NavRelevantComponent;
-	static GetDefaultObject(): NavRelevantComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavRelevantComponent;
-	SetNavigationRelevancy(bRelevant: boolean): void;
-	static C(Other: UObject | any): NavRelevantComponent;
-}
-
-declare class NavLinkCustomComponent extends NavRelevantComponent { 
-	NavLinkUserId: any;
-	EnabledAreaClass: UnrealEngineClass;
-	DisabledAreaClass: UnrealEngineClass;
-	LinkRelativeStart: Vector;
-	LinkRelativeEnd: Vector;
-	LinkDirection: ENavLinkDirection;
-	bLinkEnabled: boolean;
-	bNotifyWhenEnabled: boolean;
-	bNotifyWhenDisabled: boolean;
-	bCreateBoxObstacle: boolean;
-	ObstacleOffset: Vector;
-	ObstacleExtent: Vector;
-	ObstacleAreaClass: UnrealEngineClass;
-	BroadcastRadius: number;
-	BroadcastInterval: number;
-	BroadcastChannel: ECollisionChannel;
-	static Load(ResourceName: string): NavLinkCustomComponent;
-	static Find(Outer: UObject, ResourceName: string): NavLinkCustomComponent;
-	static GetDefaultObject(): NavLinkCustomComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkCustomComponent;
-	static C(Other: UObject | any): NavLinkCustomComponent;
-}
-
-declare class NavLinkCustomInterface extends Interface { 
-	static Load(ResourceName: string): NavLinkCustomInterface;
-	static Find(Outer: UObject, ResourceName: string): NavLinkCustomInterface;
-	static GetDefaultObject(): NavLinkCustomInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkCustomInterface;
-	static C(Other: UObject | any): NavLinkCustomInterface;
-}
-
-declare class NavigationSegmentLink extends NavigationLinkBase { 
-	LeftStart: Vector;
-	LeftEnd: Vector;
-	RightStart: Vector;
-	RightEnd: Vector;
-	clone() : NavigationSegmentLink;
-	static C(Other: UObject | any): NavigationSegmentLink;
-}
-
-declare class NavLinkDefinition extends UObject { 
-	Links: NavigationLink[];
-	SegmentLinks: NavigationSegmentLink[];
-	static Load(ResourceName: string): NavLinkDefinition;
-	static Find(Outer: UObject, ResourceName: string): NavLinkDefinition;
-	static GetDefaultObject(): NavLinkDefinition;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkDefinition;
-	static C(Other: UObject | any): NavLinkDefinition;
-}
-
-declare class NavLinkHostInterface extends Interface { 
-	static Load(ResourceName: string): NavLinkHostInterface;
-	static Find(Outer: UObject, ResourceName: string): NavLinkHostInterface;
-	static GetDefaultObject(): NavLinkHostInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkHostInterface;
-	static C(Other: UObject | any): NavLinkHostInterface;
-}
-
-declare class NavLinkRenderingComponent extends PrimitiveComponent { 
-	static Load(ResourceName: string): NavLinkRenderingComponent;
-	static Find(Outer: UObject, ResourceName: string): NavLinkRenderingComponent;
-	static GetDefaultObject(): NavLinkRenderingComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkRenderingComponent;
-	static C(Other: UObject | any): NavLinkRenderingComponent;
-}
-
-declare class NavLinkProxy extends Actor { 
-	PointLinks: NavigationLink[];
-	SegmentLinks: NavigationSegmentLink[];
-	SmartLinkComp: NavLinkCustomComponent;
-	bSmartLinkIsRelevant: boolean;
-	EdRenderComp: NavLinkRenderingComponent;
-	SpriteComponent: BillboardComponent;
-	OnSmartLinkReached: UnrealEngineMulticastDelegate<(MovingActor: Actor, DestinationPoint: Vector) => void>;
-	static GetDefaultObject(): NavLinkProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkProxy;
-	SetSmartLinkEnabled(bEnabled: boolean): void;
-	ResumePathFollowing(Agent: Actor): void;
-	ReceiveSmartLinkReached(Agent: Actor,Destination: Vector): void;
-	IsSmartLinkEnabled(): boolean;
-	HasMovingAgents(): boolean;
-	static C(Other: UObject | any): NavLinkProxy;
-}
-
-declare class NavLinkTrivial extends NavLinkDefinition { 
-	static Load(ResourceName: string): NavLinkTrivial;
-	static Find(Outer: UObject, ResourceName: string): NavLinkTrivial;
-	static GetDefaultObject(): NavLinkTrivial;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavLinkTrivial;
-	static C(Other: UObject | any): NavLinkTrivial;
-}
-
-declare class NavMeshRenderingComponent extends PrimitiveComponent { 
-	static Load(ResourceName: string): NavMeshRenderingComponent;
-	static Find(Outer: UObject, ResourceName: string): NavMeshRenderingComponent;
-	static GetDefaultObject(): NavMeshRenderingComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavMeshRenderingComponent;
-	static C(Other: UObject | any): NavMeshRenderingComponent;
-}
-
-declare class NavModifierComponent extends NavRelevantComponent { 
-	AreaClass: UnrealEngineClass;
-	FailsafeExtent: Vector;
-	static Load(ResourceName: string): NavModifierComponent;
-	static Find(Outer: UObject, ResourceName: string): NavModifierComponent;
-	static GetDefaultObject(): NavModifierComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavModifierComponent;
-	SetAreaClass(NewAreaClass: UnrealEngineClass): void;
-	static C(Other: UObject | any): NavModifierComponent;
-}
-
-declare class NavModifierVolume extends Volume { 
-	AreaClass: UnrealEngineClass;
-	static GetDefaultObject(): NavModifierVolume;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavModifierVolume;
-	SetAreaClass(NewAreaClass: UnrealEngineClass): void;
-	static C(Other: UObject | any): NavModifierVolume;
-}
-
-declare class NavNodeInterface extends Interface { 
-	static Load(ResourceName: string): NavNodeInterface;
-	static Find(Outer: UObject, ResourceName: string): NavNodeInterface;
-	static GetDefaultObject(): NavNodeInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NavNodeInterface;
-	static C(Other: UObject | any): NavNodeInterface;
+declare class NullNavSysConfig extends NavigationSystemConfig { 
+	static Load(ResourceName: string): NullNavSysConfig;
+	static Find(Outer: UObject, ResourceName: string): NullNavSysConfig;
+	static GetDefaultObject(): NullNavSysConfig;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NullNavSysConfig;
+	static C(Other: UObject | any): NullNavSysConfig;
 }
 
 declare class NavPathObserverInterface extends Interface { 
@@ -15226,6 +18961,14 @@ declare class NavRelevantInterface extends Interface {
 	static C(Other: UObject | any): NavRelevantInterface;
 }
 
+declare class SimulatedClientNetConnection extends NetConnection { 
+	static Load(ResourceName: string): SimulatedClientNetConnection;
+	static Find(Outer: UObject, ResourceName: string): SimulatedClientNetConnection;
+	static GetDefaultObject(): SimulatedClientNetConnection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SimulatedClientNetConnection;
+	static C(Other: UObject | any): SimulatedClientNetConnection;
+}
+
 declare class NetworkPredictionInterface extends Interface { 
 	static Load(ResourceName: string): NetworkPredictionInterface;
 	static Find(Outer: UObject, ResourceName: string): NetworkPredictionInterface;
@@ -15255,7 +18998,7 @@ declare class NodeMappingProviderInterface extends Interface {
 }
 
 declare class Note extends Actor { 
-	Text: string;
+	text: string;
 	SpriteComponent: BillboardComponent;
 	ArrowComponent: ArrowComponent;
 	static GetDefaultObject(): Note;
@@ -15401,8 +19144,8 @@ declare class ParticleModuleAttractorLine extends ParticleModuleAttractorBase {
 	static C(Other: UObject | any): ParticleModuleAttractorLine;
 }
 
-declare type EAttractorParticleSelectionMethod = 'EAPSM_Random' | 'EAPSM_Sequential';
-declare var EAttractorParticleSelectionMethod : { EAPSM_Random:'EAPSM_Random',EAPSM_Sequential:'EAPSM_Sequential', };
+declare type EAttractorParticleSelectionMethod = 'EAPSM_Random' | 'EAPSM_Sequential' | 'EAPSM_MAX';
+declare var EAttractorParticleSelectionMethod : { EAPSM_Random:'EAPSM_Random',EAPSM_Sequential:'EAPSM_Sequential',EAPSM_MAX:'EAPSM_MAX', };
 declare class ParticleModuleAttractorParticle extends ParticleModuleAttractorBase { 
 	EmitterName: string;
 	Range: RawDistributionFloat;
@@ -15461,8 +19204,8 @@ declare class ParticleModuleBeamBase extends ParticleModule {
 	static C(Other: UObject | any): ParticleModuleBeamBase;
 }
 
-declare type BeamModifierType = 'PEB2MT_Source' | 'PEB2MT_Target';
-declare var BeamModifierType : { PEB2MT_Source:'PEB2MT_Source',PEB2MT_Target:'PEB2MT_Target', };
+declare type BeamModifierType = 'PEB2MT_Source' | 'PEB2MT_Target' | 'PEB2MT_MAX';
+declare var BeamModifierType : { PEB2MT_Source:'PEB2MT_Source',PEB2MT_Target:'PEB2MT_Target',PEB2MT_MAX:'PEB2MT_MAX', };
 declare class BeamModifierOptions { 
 	bModify: boolean;
 	bScale: boolean;
@@ -15515,10 +19258,10 @@ declare class ParticleModuleBeamNoise extends ParticleModuleBeamBase {
 	static C(Other: UObject | any): ParticleModuleBeamNoise;
 }
 
-declare type Beam2SourceTargetMethod = 'PEB2STM_Default' | 'PEB2STM_UserSet' | 'PEB2STM_Emitter' | 'PEB2STM_Particle' | 'PEB2STM_Actor';
-declare var Beam2SourceTargetMethod : { PEB2STM_Default:'PEB2STM_Default',PEB2STM_UserSet:'PEB2STM_UserSet',PEB2STM_Emitter:'PEB2STM_Emitter',PEB2STM_Particle:'PEB2STM_Particle',PEB2STM_Actor:'PEB2STM_Actor', };
-declare type Beam2SourceTargetTangentMethod = 'PEB2STTM_Direct' | 'PEB2STTM_UserSet' | 'PEB2STTM_Distribution' | 'PEB2STTM_Emitter';
-declare var Beam2SourceTargetTangentMethod : { PEB2STTM_Direct:'PEB2STTM_Direct',PEB2STTM_UserSet:'PEB2STTM_UserSet',PEB2STTM_Distribution:'PEB2STTM_Distribution',PEB2STTM_Emitter:'PEB2STTM_Emitter', };
+declare type Beam2SourceTargetMethod = 'PEB2STM_Default' | 'PEB2STM_UserSet' | 'PEB2STM_Emitter' | 'PEB2STM_Particle' | 'PEB2STM_Actor' | 'PEB2STM_MAX';
+declare var Beam2SourceTargetMethod : { PEB2STM_Default:'PEB2STM_Default',PEB2STM_UserSet:'PEB2STM_UserSet',PEB2STM_Emitter:'PEB2STM_Emitter',PEB2STM_Particle:'PEB2STM_Particle',PEB2STM_Actor:'PEB2STM_Actor',PEB2STM_MAX:'PEB2STM_MAX', };
+declare type Beam2SourceTargetTangentMethod = 'PEB2STTM_Direct' | 'PEB2STTM_UserSet' | 'PEB2STTM_Distribution' | 'PEB2STTM_Emitter' | 'PEB2STTM_MAX';
+declare var Beam2SourceTargetTangentMethod : { PEB2STTM_Direct:'PEB2STTM_Direct',PEB2STTM_UserSet:'PEB2STTM_UserSet',PEB2STTM_Distribution:'PEB2STTM_Distribution',PEB2STTM_Emitter:'PEB2STTM_Emitter',PEB2STTM_MAX:'PEB2STTM_MAX', };
 declare class ParticleModuleBeamSource extends ParticleModuleBeamBase { 
 	SourceMethod: Beam2SourceTargetMethod;
 	SourceName: string;
@@ -15564,8 +19307,8 @@ declare class ParticleModuleCameraBase extends ParticleModule {
 	static C(Other: UObject | any): ParticleModuleCameraBase;
 }
 
-declare type EParticleCameraOffsetUpdateMethod = 'EPCOUM_DirectSet' | 'EPCOUM_Additive' | 'EPCOUM_Scalar';
-declare var EParticleCameraOffsetUpdateMethod : { EPCOUM_DirectSet:'EPCOUM_DirectSet',EPCOUM_Additive:'EPCOUM_Additive',EPCOUM_Scalar:'EPCOUM_Scalar', };
+declare type EParticleCameraOffsetUpdateMethod = 'EPCOUM_DirectSet' | 'EPCOUM_Additive' | 'EPCOUM_Scalar' | 'EPCOUM_MAX';
+declare var EParticleCameraOffsetUpdateMethod : { EPCOUM_DirectSet:'EPCOUM_DirectSet',EPCOUM_Additive:'EPCOUM_Additive',EPCOUM_Scalar:'EPCOUM_Scalar',EPCOUM_MAX:'EPCOUM_MAX', };
 declare class ParticleModuleCameraOffset extends ParticleModuleCameraBase { 
 	CameraOffset: RawDistributionFloat;
 	bSpawnTimeOnly: boolean;
@@ -15585,8 +19328,8 @@ declare class ParticleModuleCollisionBase extends ParticleModule {
 	static C(Other: UObject | any): ParticleModuleCollisionBase;
 }
 
-declare type EParticleCollisionComplete = 'EPCC_Kill' | 'EPCC_Freeze' | 'EPCC_HaltCollisions' | 'EPCC_FreezeTranslation' | 'EPCC_FreezeRotation' | 'EPCC_FreezeMovement';
-declare var EParticleCollisionComplete : { EPCC_Kill:'EPCC_Kill',EPCC_Freeze:'EPCC_Freeze',EPCC_HaltCollisions:'EPCC_HaltCollisions',EPCC_FreezeTranslation:'EPCC_FreezeTranslation',EPCC_FreezeRotation:'EPCC_FreezeRotation',EPCC_FreezeMovement:'EPCC_FreezeMovement', };
+declare type EParticleCollisionComplete = 'EPCC_Kill' | 'EPCC_Freeze' | 'EPCC_HaltCollisions' | 'EPCC_FreezeTranslation' | 'EPCC_FreezeRotation' | 'EPCC_FreezeMovement' | 'EPCC_MAX';
+declare var EParticleCollisionComplete : { EPCC_Kill:'EPCC_Kill',EPCC_Freeze:'EPCC_Freeze',EPCC_HaltCollisions:'EPCC_HaltCollisions',EPCC_FreezeTranslation:'EPCC_FreezeTranslation',EPCC_FreezeRotation:'EPCC_FreezeRotation',EPCC_FreezeMovement:'EPCC_FreezeMovement',EPCC_MAX:'EPCC_MAX', };
 declare class ParticleModuleCollision extends ParticleModuleCollisionBase { 
 	DampingFactor: RawDistributionVector;
 	DampingFactorRotation: RawDistributionVector;
@@ -15612,10 +19355,10 @@ declare class ParticleModuleCollision extends ParticleModuleCollisionBase {
 	static C(Other: UObject | any): ParticleModuleCollision;
 }
 
-declare type EParticleCollisionResponse = 'Bounce' | 'Stop' | 'Kill';
-declare var EParticleCollisionResponse : { Bounce:'Bounce',Stop:'Stop',Kill:'Kill', };
-declare type EParticleCollisionMode = 'SceneDepth' | 'DistanceField';
-declare var EParticleCollisionMode : { SceneDepth:'SceneDepth',DistanceField:'DistanceField', };
+declare type EParticleCollisionResponse = 'Bounce' | 'Stop' | 'Kill' | 'EParticleCollisionResponse_MAX';
+declare var EParticleCollisionResponse : { Bounce:'Bounce',Stop:'Stop',Kill:'Kill',EParticleCollisionResponse_MAX:'EParticleCollisionResponse_MAX', };
+declare type EParticleCollisionMode = 'SceneDepth' | 'DistanceField' | 'EParticleCollisionMode_MAX';
+declare var EParticleCollisionMode : { SceneDepth:'SceneDepth',DistanceField:'DistanceField',EParticleCollisionMode_MAX:'EParticleCollisionMode_MAX', };
 declare class ParticleModuleCollisionGPU extends ParticleModuleCollisionBase { 
 	Resilience: RawDistributionFloat;
 	ResilienceScaleOverLife: RawDistributionFloat;
@@ -15760,7 +19503,7 @@ declare class ParticleModuleLifetimeBase extends ParticleModule {
 }
 
 declare class ParticleModuleLifetime extends ParticleModuleLifetimeBase { 
-	Lifetime: RawDistributionFloat;
+	LifeTime: RawDistributionFloat;
 	static Load(ResourceName: string): ParticleModuleLifetime;
 	static Find(Outer: UObject, ResourceName: string): ParticleModuleLifetime;
 	static GetDefaultObject(): ParticleModuleLifetime;
@@ -15842,8 +19585,8 @@ declare class ParticleModuleLocation_Seeded extends ParticleModuleLocation {
 	static C(Other: UObject | any): ParticleModuleLocation_Seeded;
 }
 
-declare type ELocationBoneSocketSource = 'BONESOCKETSOURCE_Bones' | 'BONESOCKETSOURCE_Sockets';
-declare var ELocationBoneSocketSource : { BONESOCKETSOURCE_Bones:'BONESOCKETSOURCE_Bones',BONESOCKETSOURCE_Sockets:'BONESOCKETSOURCE_Sockets', };
+declare type ELocationBoneSocketSource = 'BONESOCKETSOURCE_Bones' | 'BONESOCKETSOURCE_Sockets' | 'BONESOCKETSOURCE_MAX';
+declare var ELocationBoneSocketSource : { BONESOCKETSOURCE_Bones:'BONESOCKETSOURCE_Bones',BONESOCKETSOURCE_Sockets:'BONESOCKETSOURCE_Sockets',BONESOCKETSOURCE_MAX:'BONESOCKETSOURCE_MAX', };
 declare class LocationBoneSocketInfo { 
 	BoneSocketName: string;
 	Offset: Vector;
@@ -15851,8 +19594,8 @@ declare class LocationBoneSocketInfo {
 	static C(Other: UObject | any): LocationBoneSocketInfo;
 }
 
-declare type ELocationBoneSocketSelectionMethod = 'BONESOCKETSEL_Sequential' | 'BONESOCKETSEL_Random';
-declare var ELocationBoneSocketSelectionMethod : { BONESOCKETSEL_Sequential:'BONESOCKETSEL_Sequential',BONESOCKETSEL_Random:'BONESOCKETSEL_Random', };
+declare type ELocationBoneSocketSelectionMethod = 'BONESOCKETSEL_Sequential' | 'BONESOCKETSEL_Random' | 'BONESOCKETSEL_MAX';
+declare var ELocationBoneSocketSelectionMethod : { BONESOCKETSEL_Sequential:'BONESOCKETSEL_Sequential',BONESOCKETSEL_Random:'BONESOCKETSEL_Random',BONESOCKETSEL_MAX:'BONESOCKETSEL_MAX', };
 declare class ParticleModuleLocationBoneSocket extends ParticleModuleLocationBase { 
 	SourceType: ELocationBoneSocketSource;
 	UniversalOffset: Vector;
@@ -15884,8 +19627,8 @@ declare class ParticleModuleLocationDirect extends ParticleModuleLocationBase {
 	static C(Other: UObject | any): ParticleModuleLocationDirect;
 }
 
-declare type ELocationEmitterSelectionMethod = 'ELESM_Random' | 'ELESM_Sequential';
-declare var ELocationEmitterSelectionMethod : { ELESM_Random:'ELESM_Random',ELESM_Sequential:'ELESM_Sequential', };
+declare type ELocationEmitterSelectionMethod = 'ELESM_Random' | 'ELESM_Sequential' | 'ELESM_MAX';
+declare var ELocationEmitterSelectionMethod : { ELESM_Random:'ELESM_Random',ELESM_Sequential:'ELESM_Sequential',ELESM_MAX:'ELESM_MAX', };
 declare class ParticleModuleLocationEmitter extends ParticleModuleLocationBase { 
 	EmitterName: string;
 	SelectionMethod: ELocationEmitterSelectionMethod;
@@ -15927,8 +19670,8 @@ declare class ParticleModuleLocationPrimitiveBase extends ParticleModuleLocation
 	static C(Other: UObject | any): ParticleModuleLocationPrimitiveBase;
 }
 
-declare type CylinderHeightAxis = 'PMLPC_HEIGHTAXIS_X' | 'PMLPC_HEIGHTAXIS_Y' | 'PMLPC_HEIGHTAXIS_Z';
-declare var CylinderHeightAxis : { PMLPC_HEIGHTAXIS_X:'PMLPC_HEIGHTAXIS_X',PMLPC_HEIGHTAXIS_Y:'PMLPC_HEIGHTAXIS_Y',PMLPC_HEIGHTAXIS_Z:'PMLPC_HEIGHTAXIS_Z', };
+declare type CylinderHeightAxis = 'PMLPC_HEIGHTAXIS_X' | 'PMLPC_HEIGHTAXIS_Y' | 'PMLPC_HEIGHTAXIS_Z' | 'PMLPC_HEIGHTAXIS_MAX';
+declare var CylinderHeightAxis : { PMLPC_HEIGHTAXIS_X:'PMLPC_HEIGHTAXIS_X',PMLPC_HEIGHTAXIS_Y:'PMLPC_HEIGHTAXIS_Y',PMLPC_HEIGHTAXIS_Z:'PMLPC_HEIGHTAXIS_Z',PMLPC_HEIGHTAXIS_MAX:'PMLPC_HEIGHTAXIS_MAX', };
 declare class ParticleModuleLocationPrimitiveCylinder extends ParticleModuleLocationPrimitiveBase { 
 	RadialVelocity: boolean;
 	StartRadius: RawDistributionFloat;
@@ -15980,8 +19723,8 @@ declare class ParticleModuleLocationPrimitiveTriangle extends ParticleModuleLoca
 	static C(Other: UObject | any): ParticleModuleLocationPrimitiveTriangle;
 }
 
-declare type ELocationSkelVertSurfaceSource = 'VERTSURFACESOURCE_Vert' | 'VERTSURFACESOURCE_Surface';
-declare var ELocationSkelVertSurfaceSource : { VERTSURFACESOURCE_Vert:'VERTSURFACESOURCE_Vert',VERTSURFACESOURCE_Surface:'VERTSURFACESOURCE_Surface', };
+declare type ELocationSkelVertSurfaceSource = 'VERTSURFACESOURCE_Vert' | 'VERTSURFACESOURCE_Surface' | 'VERTSURFACESOURCE_MAX';
+declare var ELocationSkelVertSurfaceSource : { VERTSURFACESOURCE_Vert:'VERTSURFACESOURCE_Vert',VERTSURFACESOURCE_Surface:'VERTSURFACESOURCE_Surface',VERTSURFACESOURCE_MAX:'VERTSURFACESOURCE_MAX', };
 declare class ParticleModuleLocationSkelVertSurface extends ParticleModuleLocationBase { 
 	SourceType: ELocationSkelVertSurfaceSource;
 	UniversalOffset: Vector;
@@ -16121,8 +19864,8 @@ declare class ParticleModuleOrientationBase extends ParticleModule {
 	static C(Other: UObject | any): ParticleModuleOrientationBase;
 }
 
-declare type EParticleAxisLock = 'EPAL_NONE' | 'EPAL_X' | 'EPAL_Y' | 'EPAL_Z' | 'EPAL_NEGATIVE_X' | 'EPAL_NEGATIVE_Y' | 'EPAL_NEGATIVE_Z' | 'EPAL_ROTATE_X' | 'EPAL_ROTATE_Y' | 'EPAL_ROTATE_Z';
-declare var EParticleAxisLock : { EPAL_NONE:'EPAL_NONE',EPAL_X:'EPAL_X',EPAL_Y:'EPAL_Y',EPAL_Z:'EPAL_Z',EPAL_NEGATIVE_X:'EPAL_NEGATIVE_X',EPAL_NEGATIVE_Y:'EPAL_NEGATIVE_Y',EPAL_NEGATIVE_Z:'EPAL_NEGATIVE_Z',EPAL_ROTATE_X:'EPAL_ROTATE_X',EPAL_ROTATE_Y:'EPAL_ROTATE_Y',EPAL_ROTATE_Z:'EPAL_ROTATE_Z', };
+declare type EParticleAxisLock = 'EPAL_NONE' | 'EPAL_X' | 'EPAL_Y' | 'EPAL_Z' | 'EPAL_NEGATIVE_X' | 'EPAL_NEGATIVE_Y' | 'EPAL_NEGATIVE_Z' | 'EPAL_ROTATE_X' | 'EPAL_ROTATE_Y' | 'EPAL_ROTATE_Z' | 'EPAL_MAX';
+declare var EParticleAxisLock : { EPAL_NONE:'EPAL_NONE',EPAL_X:'EPAL_X',EPAL_Y:'EPAL_Y',EPAL_Z:'EPAL_Z',EPAL_NEGATIVE_X:'EPAL_NEGATIVE_X',EPAL_NEGATIVE_Y:'EPAL_NEGATIVE_Y',EPAL_NEGATIVE_Z:'EPAL_NEGATIVE_Z',EPAL_ROTATE_X:'EPAL_ROTATE_X',EPAL_ROTATE_Y:'EPAL_ROTATE_Y',EPAL_ROTATE_Z:'EPAL_ROTATE_Z',EPAL_MAX:'EPAL_MAX', };
 declare class ParticleModuleOrientationAxisLock extends ParticleModuleOrientationBase { 
 	LockAxisFlags: EParticleAxisLock;
 	static Load(ResourceName: string): ParticleModuleOrientationAxisLock;
@@ -16140,8 +19883,8 @@ declare class ParticleModuleParameterBase extends ParticleModule {
 	static C(Other: UObject | any): ParticleModuleParameterBase;
 }
 
-declare type EEmitterDynamicParameterValue = 'EDPV_UserSet' | 'EDPV_AutoSet' | 'EDPV_VelocityX' | 'EDPV_VelocityY' | 'EDPV_VelocityZ' | 'EDPV_VelocityMag';
-declare var EEmitterDynamicParameterValue : { EDPV_UserSet:'EDPV_UserSet',EDPV_AutoSet:'EDPV_AutoSet',EDPV_VelocityX:'EDPV_VelocityX',EDPV_VelocityY:'EDPV_VelocityY',EDPV_VelocityZ:'EDPV_VelocityZ',EDPV_VelocityMag:'EDPV_VelocityMag', };
+declare type EEmitterDynamicParameterValue = 'EDPV_UserSet' | 'EDPV_AutoSet' | 'EDPV_VelocityX' | 'EDPV_VelocityY' | 'EDPV_VelocityZ' | 'EDPV_VelocityMag' | 'EDPV_MAX';
+declare var EEmitterDynamicParameterValue : { EDPV_UserSet:'EDPV_UserSet',EDPV_AutoSet:'EDPV_AutoSet',EDPV_VelocityX:'EDPV_VelocityX',EDPV_VelocityY:'EDPV_VelocityY',EDPV_VelocityZ:'EDPV_VelocityZ',EDPV_VelocityMag:'EDPV_VelocityMag',EDPV_MAX:'EDPV_MAX', };
 declare class EmitterDynamicParameter { 
 	ParamName: string;
 	bUseEmitterTime: boolean;
@@ -16355,3832 +20098,3 @@ declare class ParticleModuleSubUV extends ParticleModuleSubUVBase {
 	static C(Other: UObject | any): ParticleModuleSubUV;
 }
 
-declare class ParticleModuleSubUVMovie extends ParticleModuleSubUV { 
-	bUseEmitterTime: boolean;
-	FrameRate: RawDistributionFloat;
-	StartingFrame: number;
-	static Load(ResourceName: string): ParticleModuleSubUVMovie;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleSubUVMovie;
-	static GetDefaultObject(): ParticleModuleSubUVMovie;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleSubUVMovie;
-	static C(Other: UObject | any): ParticleModuleSubUVMovie;
-}
-
-declare class ParticleModuleTrailBase extends ParticleModule { 
-	static Load(ResourceName: string): ParticleModuleTrailBase;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleTrailBase;
-	static GetDefaultObject(): ParticleModuleTrailBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTrailBase;
-	static C(Other: UObject | any): ParticleModuleTrailBase;
-}
-
-declare type ETrail2SourceMethod = 'PET2SRCM_Default' | 'PET2SRCM_Particle' | 'PET2SRCM_Actor';
-declare var ETrail2SourceMethod : { PET2SRCM_Default:'PET2SRCM_Default',PET2SRCM_Particle:'PET2SRCM_Particle',PET2SRCM_Actor:'PET2SRCM_Actor', };
-declare type EParticleSourceSelectionMethod = 'EPSSM_Random' | 'EPSSM_Sequential';
-declare var EParticleSourceSelectionMethod : { EPSSM_Random:'EPSSM_Random',EPSSM_Sequential:'EPSSM_Sequential', };
-declare class ParticleModuleTrailSource extends ParticleModuleTrailBase { 
-	SourceMethod: ETrail2SourceMethod;
-	SourceName: string;
-	SourceStrength: RawDistributionFloat;
-	bLockSourceStength: boolean;
-	SourceOffsetCount: number;
-	SourceOffsetDefaults: Vector[];
-	SelectionMethod: EParticleSourceSelectionMethod;
-	bInheritRotation: boolean;
-	static Load(ResourceName: string): ParticleModuleTrailSource;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleTrailSource;
-	static GetDefaultObject(): ParticleModuleTrailSource;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTrailSource;
-	static C(Other: UObject | any): ParticleModuleTrailSource;
-}
-
-declare class ParticleModuleTypeDataAnimTrail extends ParticleModuleTypeDataBase { 
-	bDeadTrailsOnDeactivate: boolean;
-	bEnablePreviousTangentRecalculation: boolean;
-	bTangentRecalculationEveryFrame: boolean;
-	TilingDistance: number;
-	DistanceTessellationStepSize: number;
-	TangentTessellationStepSize: number;
-	WidthTessellationStepSize: number;
-	static Load(ResourceName: string): ParticleModuleTypeDataAnimTrail;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleTypeDataAnimTrail;
-	static GetDefaultObject(): ParticleModuleTypeDataAnimTrail;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTypeDataAnimTrail;
-	static C(Other: UObject | any): ParticleModuleTypeDataAnimTrail;
-}
-
-declare type EBeam2Method = 'PEB2M_Distance' | 'PEB2M_Target' | 'PEB2M_Branch';
-declare var EBeam2Method : { PEB2M_Distance:'PEB2M_Distance',PEB2M_Target:'PEB2M_Target',PEB2M_Branch:'PEB2M_Branch', };
-declare type EBeamTaperMethod = 'PEBTM_None' | 'PEBTM_Full' | 'PEBTM_Partial';
-declare var EBeamTaperMethod : { PEBTM_None:'PEBTM_None',PEBTM_Full:'PEBTM_Full',PEBTM_Partial:'PEBTM_Partial', };
-declare class ParticleModuleTypeDataBeam2 extends ParticleModuleTypeDataBase { 
-	BeamMethod: EBeam2Method;
-	TextureTile: number;
-	TextureTileDistance: number;
-	Sheets: number;
-	MaxBeamCount: number;
-	Speed: number;
-	InterpolationPoints: number;
-	bAlwaysOn: boolean;
-	UpVectorStepSize: number;
-	BranchParentName: string;
-	Distance: RawDistributionFloat;
-	TaperMethod: EBeamTaperMethod;
-	TaperFactor: RawDistributionFloat;
-	TaperScale: RawDistributionFloat;
-	RenderGeometry: boolean;
-	RenderDirectLine: boolean;
-	RenderLines: boolean;
-	RenderTessellation: boolean;
-	static Load(ResourceName: string): ParticleModuleTypeDataBeam2;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleTypeDataBeam2;
-	static GetDefaultObject(): ParticleModuleTypeDataBeam2;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTypeDataBeam2;
-	static C(Other: UObject | any): ParticleModuleTypeDataBeam2;
-}
-
-declare class VectorField extends UObject { 
-	Bounds: Box;
-	Intensity: number;
-	static Load(ResourceName: string): VectorField;
-	static Find(Outer: UObject, ResourceName: string): VectorField;
-	static GetDefaultObject(): VectorField;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorField;
-	static C(Other: UObject | any): VectorField;
-}
-
-declare class GPUSpriteLocalVectorFieldInfo { 
-	Field: VectorField;
-	Transform: Transform;
-	MinInitialRotation: Rotator;
-	MaxInitialRotation: Rotator;
-	RotationRate: Rotator;
-	Intensity: number;
-	Tightness: number;
-	bIgnoreComponentTransform: boolean;
-	bTileX: boolean;
-	bTileY: boolean;
-	bTileZ: boolean;
-	bUseFixDT: boolean;
-	clone() : GPUSpriteLocalVectorFieldInfo;
-	static C(Other: UObject | any): GPUSpriteLocalVectorFieldInfo;
-}
-
-declare class FloatDistribution { 
-	Table: DistributionLookupTable;
-	clone() : FloatDistribution;
-	static C(Other: UObject | any): FloatDistribution;
-}
-
-declare class GPUSpriteEmitterInfo { 
-	RequiredModule: ParticleModuleRequired;
-	SpawnModule: ParticleModuleSpawn;
-	SpawnPerUnitModule: ParticleModuleSpawnPerUnit;
-	SpawnModules: ParticleModule[];
-	LocalVectorField: GPUSpriteLocalVectorFieldInfo;
-	VectorFieldScale: FloatDistribution;
-	DragCoefficient: FloatDistribution;
-	PointAttractorStrength: FloatDistribution;
-	Resilience: FloatDistribution;
-	ConstantAcceleration: Vector;
-	PointAttractorPosition: Vector;
-	PointAttractorRadiusSq: number;
-	OrbitOffsetBase: Vector;
-	OrbitOffsetRange: Vector;
-	InvMaxSize: Vector2D;
-	InvRotationRateScale: number;
-	MaxLifetime: number;
-	MaxParticleCount: number;
-	ScreenAlignment: EParticleScreenAlignment;
-	LockAxisFlag: EParticleAxisLock;
-	bEnableCollision: boolean;
-	CollisionMode: EParticleCollisionMode;
-	bRemoveHMDRoll: boolean;
-	MinFacingCameraBlendDistance: number;
-	MaxFacingCameraBlendDistance: number;
-	DynamicColor: RawDistributionVector;
-	DynamicAlpha: RawDistributionFloat;
-	DynamicColorScale: RawDistributionVector;
-	DynamicAlphaScale: RawDistributionFloat;
-	clone() : GPUSpriteEmitterInfo;
-	static C(Other: UObject | any): GPUSpriteEmitterInfo;
-}
-
-declare class GPUSpriteResourceData { 
-	QuantizedColorSamples: Color[];
-	QuantizedMiscSamples: Color[];
-	QuantizedSimulationAttrSamples: Color[];
-	ColorScale: Vector4;
-	ColorBias: Vector4;
-	MiscScale: Vector4;
-	MiscBias: Vector4;
-	SimulationAttrCurveScale: Vector4;
-	SimulationAttrCurveBias: Vector4;
-	SubImageSize: Vector4;
-	SizeBySpeed: Vector4;
-	ConstantAcceleration: Vector;
-	OrbitOffsetBase: Vector;
-	OrbitOffsetRange: Vector;
-	OrbitFrequencyBase: Vector;
-	OrbitFrequencyRange: Vector;
-	OrbitPhaseBase: Vector;
-	OrbitPhaseRange: Vector;
-	GlobalVectorFieldScale: number;
-	GlobalVectorFieldTightness: number;
-	PerParticleVectorFieldScale: number;
-	PerParticleVectorFieldBias: number;
-	DragCoefficientScale: number;
-	DragCoefficientBias: number;
-	ResilienceScale: number;
-	ResilienceBias: number;
-	CollisionRadiusScale: number;
-	CollisionRadiusBias: number;
-	CollisionTimeBias: number;
-	CollisionRandomSpread: number;
-	CollisionRandomDistribution: number;
-	OneMinusFriction: number;
-	RotationRateScale: number;
-	CameraMotionBlurAmount: number;
-	ScreenAlignment: EParticleScreenAlignment;
-	LockAxisFlag: EParticleAxisLock;
-	PivotOffset: Vector2D;
-	bRemoveHMDRoll: boolean;
-	MinFacingCameraBlendDistance: number;
-	MaxFacingCameraBlendDistance: number;
-	clone() : GPUSpriteResourceData;
-	static C(Other: UObject | any): GPUSpriteResourceData;
-}
-
-declare class ParticleModuleTypeDataGpu extends ParticleModuleTypeDataBase { 
-	EmitterInfo: GPUSpriteEmitterInfo;
-	ResourceData: GPUSpriteResourceData;
-	CameraMotionBlurAmount: number;
-	bClearExistingParticlesOnInit: boolean;
-	static Load(ResourceName: string): ParticleModuleTypeDataGpu;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleTypeDataGpu;
-	static GetDefaultObject(): ParticleModuleTypeDataGpu;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTypeDataGpu;
-	static C(Other: UObject | any): ParticleModuleTypeDataGpu;
-}
-
-declare type EMeshScreenAlignment = 'PSMA_MeshFaceCameraWithRoll' | 'PSMA_MeshFaceCameraWithSpin' | 'PSMA_MeshFaceCameraWithLockedAxis';
-declare var EMeshScreenAlignment : { PSMA_MeshFaceCameraWithRoll:'PSMA_MeshFaceCameraWithRoll',PSMA_MeshFaceCameraWithSpin:'PSMA_MeshFaceCameraWithSpin',PSMA_MeshFaceCameraWithLockedAxis:'PSMA_MeshFaceCameraWithLockedAxis', };
-declare type EMeshCameraFacingUpAxis = 'CameraFacing_NoneUP' | 'CameraFacing_ZUp' | 'CameraFacing_NegativeZUp' | 'CameraFacing_YUp' | 'CameraFacing_NegativeYUp';
-declare var EMeshCameraFacingUpAxis : { CameraFacing_NoneUP:'CameraFacing_NoneUP',CameraFacing_ZUp:'CameraFacing_ZUp',CameraFacing_NegativeZUp:'CameraFacing_NegativeZUp',CameraFacing_YUp:'CameraFacing_YUp',CameraFacing_NegativeYUp:'CameraFacing_NegativeYUp', };
-declare type EMeshCameraFacingOptions = 'XAxisFacing_NoUp' | 'XAxisFacing_ZUp' | 'XAxisFacing_NegativeZUp' | 'XAxisFacing_YUp' | 'XAxisFacing_NegativeYUp' | 'LockedAxis_ZAxisFacing' | 'LockedAxis_NegativeZAxisFacing' | 'LockedAxis_YAxisFacing' | 'LockedAxis_NegativeYAxisFacing' | 'VelocityAligned_ZAxisFacing' | 'VelocityAligned_NegativeZAxisFacing' | 'VelocityAligned_YAxisFacing' | 'VelocityAligned_NegativeYAxisFacing';
-declare var EMeshCameraFacingOptions : { XAxisFacing_NoUp:'XAxisFacing_NoUp',XAxisFacing_ZUp:'XAxisFacing_ZUp',XAxisFacing_NegativeZUp:'XAxisFacing_NegativeZUp',XAxisFacing_YUp:'XAxisFacing_YUp',XAxisFacing_NegativeYUp:'XAxisFacing_NegativeYUp',LockedAxis_ZAxisFacing:'LockedAxis_ZAxisFacing',LockedAxis_NegativeZAxisFacing:'LockedAxis_NegativeZAxisFacing',LockedAxis_YAxisFacing:'LockedAxis_YAxisFacing',LockedAxis_NegativeYAxisFacing:'LockedAxis_NegativeYAxisFacing',VelocityAligned_ZAxisFacing:'VelocityAligned_ZAxisFacing',VelocityAligned_NegativeZAxisFacing:'VelocityAligned_NegativeZAxisFacing',VelocityAligned_YAxisFacing:'VelocityAligned_YAxisFacing',VelocityAligned_NegativeYAxisFacing:'VelocityAligned_NegativeYAxisFacing', };
-declare class ParticleModuleTypeDataMesh extends ParticleModuleTypeDataBase { 
-	Mesh: StaticMesh;
-	CastShadows: boolean;
-	DoCollisions: boolean;
-	MeshAlignment: EMeshScreenAlignment;
-	bOverrideMaterial: boolean;
-	bOverrideDefaultMotionBlurSettings: boolean;
-	bEnableMotionBlur: boolean;
-	Pitch: number;
-	Roll: number;
-	Yaw: number;
-	RollPitchYawRange: RawDistributionVector;
-	AxisLockOption: EParticleAxisLock;
-	bCameraFacing: boolean;
-	CameraFacingUpAxisOption: EMeshCameraFacingUpAxis;
-	CameraFacingOption: EMeshCameraFacingOptions;
-	bApplyParticleRotationAsSpin: boolean;
-	bFaceCameraDirectionRatherThanPosition: boolean;
-	bCollisionsConsiderPartilceSize: boolean;
-	static Load(ResourceName: string): ParticleModuleTypeDataMesh;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleTypeDataMesh;
-	static GetDefaultObject(): ParticleModuleTypeDataMesh;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTypeDataMesh;
-	static C(Other: UObject | any): ParticleModuleTypeDataMesh;
-}
-
-declare type ETrailsRenderAxisOption = 'Trails_CameraUp' | 'Trails_SourceUp' | 'Trails_WorldUp';
-declare var ETrailsRenderAxisOption : { Trails_CameraUp:'Trails_CameraUp',Trails_SourceUp:'Trails_SourceUp',Trails_WorldUp:'Trails_WorldUp', };
-declare class ParticleModuleTypeDataRibbon extends ParticleModuleTypeDataBase { 
-	MaxTessellationBetweenParticles: number;
-	SheetsPerTrail: number;
-	MaxTrailCount: number;
-	MaxParticleInTrailCount: number;
-	bDeadTrailsOnDeactivate: boolean;
-	bDeadTrailsOnSourceLoss: boolean;
-	bClipSourceSegement: boolean;
-	bEnablePreviousTangentRecalculation: boolean;
-	bTangentRecalculationEveryFrame: boolean;
-	bSpawnInitialParticle: boolean;
-	RenderAxis: ETrailsRenderAxisOption;
-	TangentSpawningScalar: number;
-	bRenderGeometry: boolean;
-	bRenderSpawnPoints: boolean;
-	bRenderTangents: boolean;
-	bRenderTessellation: boolean;
-	TilingDistance: number;
-	DistanceTessellationStepSize: number;
-	bEnableTangentDiffInterpScale: boolean;
-	TangentTessellationScalar: number;
-	static Load(ResourceName: string): ParticleModuleTypeDataRibbon;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleTypeDataRibbon;
-	static GetDefaultObject(): ParticleModuleTypeDataRibbon;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTypeDataRibbon;
-	static C(Other: UObject | any): ParticleModuleTypeDataRibbon;
-}
-
-declare class ParticleModuleVectorFieldBase extends ParticleModule { 
-	static Load(ResourceName: string): ParticleModuleVectorFieldBase;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldBase;
-	static GetDefaultObject(): ParticleModuleVectorFieldBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldBase;
-	static C(Other: UObject | any): ParticleModuleVectorFieldBase;
-}
-
-declare class ParticleModuleVectorFieldGlobal extends ParticleModuleVectorFieldBase { 
-	bOverrideGlobalVectorFieldTightness: boolean;
-	GlobalVectorFieldScale: number;
-	GlobalVectorFieldTightness: number;
-	static Load(ResourceName: string): ParticleModuleVectorFieldGlobal;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldGlobal;
-	static GetDefaultObject(): ParticleModuleVectorFieldGlobal;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldGlobal;
-	static C(Other: UObject | any): ParticleModuleVectorFieldGlobal;
-}
-
-declare class ParticleModuleVectorFieldLocal extends ParticleModuleVectorFieldBase { 
-	VectorField: VectorField;
-	RelativeTranslation: Vector;
-	RelativeRotation: Rotator;
-	RelativeScale3D: Vector;
-	Intensity: number;
-	Tightness: number;
-	bIgnoreComponentTransform: boolean;
-	bTileX: boolean;
-	bTileY: boolean;
-	bTileZ: boolean;
-	bUseFixDT: boolean;
-	static Load(ResourceName: string): ParticleModuleVectorFieldLocal;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldLocal;
-	static GetDefaultObject(): ParticleModuleVectorFieldLocal;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldLocal;
-	static C(Other: UObject | any): ParticleModuleVectorFieldLocal;
-}
-
-declare class ParticleModuleVectorFieldRotation extends ParticleModuleVectorFieldBase { 
-	MinInitialRotation: Vector;
-	MaxInitialRotation: Vector;
-	static Load(ResourceName: string): ParticleModuleVectorFieldRotation;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldRotation;
-	static GetDefaultObject(): ParticleModuleVectorFieldRotation;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldRotation;
-	static C(Other: UObject | any): ParticleModuleVectorFieldRotation;
-}
-
-declare class ParticleModuleVectorFieldRotationRate extends ParticleModuleVectorFieldBase { 
-	RotationRate: Vector;
-	static Load(ResourceName: string): ParticleModuleVectorFieldRotationRate;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldRotationRate;
-	static GetDefaultObject(): ParticleModuleVectorFieldRotationRate;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldRotationRate;
-	static C(Other: UObject | any): ParticleModuleVectorFieldRotationRate;
-}
-
-declare class ParticleModuleVectorFieldScale extends ParticleModuleVectorFieldBase { 
-	VectorFieldScale: DistributionFloat;
-	VectorFieldScaleRaw: RawDistributionFloat;
-	static Load(ResourceName: string): ParticleModuleVectorFieldScale;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldScale;
-	static GetDefaultObject(): ParticleModuleVectorFieldScale;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldScale;
-	static C(Other: UObject | any): ParticleModuleVectorFieldScale;
-}
-
-declare class ParticleModuleVectorFieldScaleOverLife extends ParticleModuleVectorFieldBase { 
-	VectorFieldScaleOverLife: DistributionFloat;
-	VectorFieldScaleOverLifeRaw: RawDistributionFloat;
-	static Load(ResourceName: string): ParticleModuleVectorFieldScaleOverLife;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldScaleOverLife;
-	static GetDefaultObject(): ParticleModuleVectorFieldScaleOverLife;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldScaleOverLife;
-	static C(Other: UObject | any): ParticleModuleVectorFieldScaleOverLife;
-}
-
-declare class ParticleModuleVelocityBase extends ParticleModule { 
-	bInWorldSpace: boolean;
-	bApplyOwnerScale: boolean;
-	static Load(ResourceName: string): ParticleModuleVelocityBase;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocityBase;
-	static GetDefaultObject(): ParticleModuleVelocityBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocityBase;
-	static C(Other: UObject | any): ParticleModuleVelocityBase;
-}
-
-declare class ParticleModuleVelocity extends ParticleModuleVelocityBase { 
-	StartVelocity: RawDistributionVector;
-	StartVelocityRadial: RawDistributionFloat;
-	static Load(ResourceName: string): ParticleModuleVelocity;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocity;
-	static GetDefaultObject(): ParticleModuleVelocity;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocity;
-	static C(Other: UObject | any): ParticleModuleVelocity;
-}
-
-declare class ParticleModuleVelocity_Seeded extends ParticleModuleVelocity { 
-	RandomSeedInfo: ParticleRandomSeedInfo;
-	static Load(ResourceName: string): ParticleModuleVelocity_Seeded;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocity_Seeded;
-	static GetDefaultObject(): ParticleModuleVelocity_Seeded;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocity_Seeded;
-	static C(Other: UObject | any): ParticleModuleVelocity_Seeded;
-}
-
-declare class ParticleModuleVelocityCone extends ParticleModuleVelocityBase { 
-	Angle: RawDistributionFloat;
-	Velocity: RawDistributionFloat;
-	Direction: Vector;
-	static Load(ResourceName: string): ParticleModuleVelocityCone;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocityCone;
-	static GetDefaultObject(): ParticleModuleVelocityCone;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocityCone;
-	static C(Other: UObject | any): ParticleModuleVelocityCone;
-}
-
-declare class ParticleModuleVelocityInheritParent extends ParticleModuleVelocityBase { 
-	Scale: RawDistributionVector;
-	static Load(ResourceName: string): ParticleModuleVelocityInheritParent;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocityInheritParent;
-	static GetDefaultObject(): ParticleModuleVelocityInheritParent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocityInheritParent;
-	static C(Other: UObject | any): ParticleModuleVelocityInheritParent;
-}
-
-declare class ParticleModuleVelocityOverLifetime extends ParticleModuleVelocityBase { 
-	VelOverLife: RawDistributionVector;
-	Absolute: boolean;
-	static Load(ResourceName: string): ParticleModuleVelocityOverLifetime;
-	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocityOverLifetime;
-	static GetDefaultObject(): ParticleModuleVelocityOverLifetime;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocityOverLifetime;
-	static C(Other: UObject | any): ParticleModuleVelocityOverLifetime;
-}
-
-declare class ParticleSpriteEmitter extends ParticleEmitter { 
-	static Load(ResourceName: string): ParticleSpriteEmitter;
-	static Find(Outer: UObject, ResourceName: string): ParticleSpriteEmitter;
-	static GetDefaultObject(): ParticleSpriteEmitter;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleSpriteEmitter;
-	static C(Other: UObject | any): ParticleSpriteEmitter;
-}
-
-declare class PawnNoiseEmitterComponent extends ActorComponent { 
-	bAIPerceptionSystemCompatibilityMode: boolean;
-	LastRemoteNoisePosition: Vector;
-	NoiseLifetime: number;
-	LastRemoteNoiseVolume: number;
-	LastRemoteNoiseTime: number;
-	LastLocalNoiseVolume: number;
-	LastLocalNoiseTime: number;
-	static Load(ResourceName: string): PawnNoiseEmitterComponent;
-	static Find(Outer: UObject, ResourceName: string): PawnNoiseEmitterComponent;
-	static GetDefaultObject(): PawnNoiseEmitterComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PawnNoiseEmitterComponent;
-	MakeNoise(NoiseMaker: Actor,Loudness: number,NoiseLocation: Vector): void;
-	static C(Other: UObject | any): PawnNoiseEmitterComponent;
-}
-
-declare class PhysicalAnimationComponent extends ActorComponent { 
-	StrengthMultiplyer: number;
-	SkeletalMeshComponent: SkeletalMeshComponent;
-	static Load(ResourceName: string): PhysicalAnimationComponent;
-	static Find(Outer: UObject, ResourceName: string): PhysicalAnimationComponent;
-	static GetDefaultObject(): PhysicalAnimationComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicalAnimationComponent;
-	SetStrengthMultiplyer(InStrengthMultiplyer: number): void;
-	SetSkeletalMeshComponent(InSkeletalMeshComponent: SkeletalMeshComponent): void;
-	GetBodyTargetTransform(BodyName: string): Transform;
-	ApplyPhysicalAnimationSettingsBelow(BodyName: string,PhysicalAnimationData: PhysicalAnimationData,bIncludeSelf: boolean): void;
-	ApplyPhysicalAnimationSettings(BodyName: string,PhysicalAnimationData: PhysicalAnimationData): void;
-	ApplyPhysicalAnimationProfileBelow(BodyName: string,ProfileName: string,bIncludeSelf: boolean,bClearNotFound: boolean): void;
-	static C(Other: UObject | any): PhysicalAnimationComponent;
-}
-
-declare class RigidBodyBase extends Actor { 
-	static GetDefaultObject(): RigidBodyBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RigidBodyBase;
-	static C(Other: UObject | any): RigidBodyBase;
-}
-
-declare class ConstrainComponentPropName { 
-	ComponentName: string;
-	clone() : ConstrainComponentPropName;
-	static C(Other: UObject | any): ConstrainComponentPropName;
-}
-
-declare type EConstraintFrame = 'Frame1' | 'Frame2';
-declare var EConstraintFrame : { Frame1:'Frame1',Frame2:'Frame2', };
-declare class PhysicsConstraintComponent extends SceneComponent { 
-	ConstraintActor1: Actor;
-	ComponentName1: ConstrainComponentPropName;
-	ConstraintActor2: Actor;
-	ComponentName2: ConstrainComponentPropName;
-	ConstraintSetup: PhysicsConstraintTemplate;
-	OnConstraintBroken: UnrealEngineMulticastDelegate<(ConstraintIndex: number) => void>;
-	ConstraintInstance: ConstraintInstance;
-	static Load(ResourceName: string): PhysicsConstraintComponent;
-	static Find(Outer: UObject, ResourceName: string): PhysicsConstraintComponent;
-	static GetDefaultObject(): PhysicsConstraintComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsConstraintComponent;
-	SetOrientationDriveTwistAndSwing(bEnableTwistDrive: boolean,bEnableSwingDrive: boolean): void;
-	SetOrientationDriveSLERP(bEnableSLERP: boolean): void;
-	SetLinearZLimit(ConstraintType: ELinearConstraintMotion,LimitSize: number): void;
-	SetLinearYLimit(ConstraintType: ELinearConstraintMotion,LimitSize: number): void;
-	SetLinearXLimit(ConstraintType: ELinearConstraintMotion,LimitSize: number): void;
-	SetLinearVelocityTarget(InVelTarget: Vector): void;
-	SetLinearVelocityDrive(bEnableDriveX: boolean,bEnableDriveY: boolean,bEnableDriveZ: boolean): void;
-	SetLinearPositionTarget(InPosTarget: Vector): void;
-	SetLinearPositionDrive(bEnableDriveX: boolean,bEnableDriveY: boolean,bEnableDriveZ: boolean): void;
-	SetLinearDriveParams(PositionStrength: number,VelocityStrength: number,InForceLimit: number): void;
-	SetLinearBreakable(bLinearBreakable: boolean,LinearBreakThreshold: number): void;
-	SetDisableCollision(bDisableCollision: boolean): void;
-	SetConstraintReferencePosition(Frame: EConstraintFrame,RefPosition: Vector): void;
-	SetConstraintReferenceOrientation(Frame: EConstraintFrame,PriAxis: Vector,SecAxis: Vector): void;
-	SetConstraintReferenceFrame(Frame: EConstraintFrame,RefFrame: Transform): void;
-	SetConstrainedComponents(Component1: PrimitiveComponent,BoneName1: string,Component2: PrimitiveComponent,BoneName2: string): void;
-	SetAngularVelocityTarget(InVelTarget: Vector): void;
-	SetAngularVelocityDriveTwistAndSwing(bEnableTwistDrive: boolean,bEnableSwingDrive: boolean): void;
-	SetAngularVelocityDriveSLERP(bEnableSLERP: boolean): void;
-	SetAngularVelocityDrive(bEnableSwingDrive: boolean,bEnableTwistDrive: boolean): void;
-	SetAngularTwistLimit(ConstraintType: EAngularConstraintMotion,TwistLimitAngle: number): void;
-	SetAngularSwing2Limit(MotionType: EAngularConstraintMotion,Swing2LimitAngle: number): void;
-	SetAngularSwing1Limit(MotionType: EAngularConstraintMotion,Swing1LimitAngle: number): void;
-	SetAngularOrientationTarget(InPosTarget: Rotator): void;
-	SetAngularOrientationDrive(bEnableSwingDrive: boolean,bEnableTwistDrive: boolean): void;
-	SetAngularDriveParams(PositionStrength: number,VelocityStrength: number,InForceLimit: number): void;
-	SetAngularDriveMode(DriveMode: EAngularDriveMode): void;
-	SetAngularBreakable(bAngularBreakable: boolean,AngularBreakThreshold: number): void;
-	IsBroken(): boolean;
-	GetCurrentTwist(): number;
-	GetCurrentSwing2(): number;
-	GetCurrentSwing1(): number;
-	GetConstraintForce(OutLinearForce?: Vector,OutAngularForce?: Vector): {OutLinearForce: Vector, OutAngularForce: Vector};
-	BreakConstraint(): void;
-	static C(Other: UObject | any): PhysicsConstraintComponent;
-}
-
-declare class PhysicsConstraintActor extends RigidBodyBase { 
-	ConstraintComp: PhysicsConstraintComponent;
-	ConstraintActor1: Actor;
-	ConstraintActor2: Actor;
-	bDisableCollision: boolean;
-	static GetDefaultObject(): PhysicsConstraintActor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsConstraintActor;
-	static C(Other: UObject | any): PhysicsConstraintActor;
-}
-
-declare class PhysicsHandleComponent extends ActorComponent { 
-	GrabbedComponent: PrimitiveComponent;
-	bSoftAngularConstraint: boolean;
-	bSoftLinearConstraint: boolean;
-	bInterpolateTarget: boolean;
-	LinearDamping: number;
-	LinearStiffness: number;
-	AngularDamping: number;
-	AngularStiffness: number;
-	InterpolationSpeed: number;
-	static Load(ResourceName: string): PhysicsHandleComponent;
-	static Find(Outer: UObject, ResourceName: string): PhysicsHandleComponent;
-	static GetDefaultObject(): PhysicsHandleComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsHandleComponent;
-	SetTargetRotation(NewRotation: Rotator): void;
-	SetTargetLocationAndRotation(NewLocation: Vector,NewRotation: Rotator): void;
-	SetTargetLocation(NewLocation: Vector): void;
-	SetLinearStiffness(NewLinearStiffness: number): void;
-	SetLinearDamping(NewLinearDamping: number): void;
-	SetInterpolationSpeed(NewInterpolationSpeed: number): void;
-	SetAngularStiffness(NewAngularStiffness: number): void;
-	SetAngularDamping(NewAngularDamping: number): void;
-	ReleaseComponent(): void;
-	GrabComponentAtLocationWithRotation(Component: PrimitiveComponent,InBoneName: string,Location: Vector,Rotation: Rotator): void;
-	GrabComponentAtLocation(Component: PrimitiveComponent,InBoneName: string,GrabLocation: Vector): void;
-	GrabComponent(Component: PrimitiveComponent,InBoneName: string,GrabLocation: Vector,bConstrainRotation: boolean): void;
-	GetTargetLocationAndRotation(TargetLocation?: Vector,TargetRotation?: Rotator): {TargetLocation: Vector, TargetRotation: Rotator};
-	GetGrabbedComponent(): PrimitiveComponent;
-	static C(Other: UObject | any): PhysicsHandleComponent;
-}
-
-declare type ESettingsLockedAxis = 'None' | 'X' | 'Y' | 'Z' | 'Invalid';
-declare var ESettingsLockedAxis : { None:'None',X:'X',Y:'Y',Z:'Z',Invalid:'Invalid', };
-declare type ESettingsDOF = 'Full3D' | 'YZPlane' | 'XZPlane' | 'XYPlane';
-declare var ESettingsDOF : { Full3D:'Full3D',YZPlane:'YZPlane',XZPlane:'XZPlane',XYPlane:'XYPlane', };
-declare class PhysicalSurfaceName { 
-	Type: EPhysicalSurface;
-	Name: string;
-	clone() : PhysicalSurfaceName;
-	static C(Other: UObject | any): PhysicalSurfaceName;
-}
-
-declare class PhysicsSettings extends DeveloperSettings { 
-	DefaultGravityZ: number;
-	DefaultTerminalVelocity: number;
-	DefaultFluidFriction: number;
-	SimulateScratchMemorySize: number;
-	RagdollAggregateThreshold: number;
-	TriangleMeshTriangleMinAreaThreshold: number;
-	bEnableAsyncScene: boolean;
-	bEnableShapeSharing: boolean;
-	bEnablePCM: boolean;
-	bEnableStabilization: boolean;
-	bWarnMissingLocks: boolean;
-	bEnable2DPhysics: boolean;
-	LockedAxis: ESettingsLockedAxis;
-	DefaultDegreesOfFreedom: ESettingsDOF;
-	BounceThresholdVelocity: number;
-	FrictionCombineMode: EFrictionCombineMode;
-	RestitutionCombineMode: EFrictionCombineMode;
-	MaxAngularVelocity: number;
-	MaxDepenetrationVelocity: number;
-	ContactOffsetMultiplier: number;
-	MinContactOffset: number;
-	MaxContactOffset: number;
-	bSimulateSkeletalMeshOnDedicatedServer: boolean;
-	DefaultShapeComplexity: ECollisionTraceFlag;
-	bDefaultHasComplexCollision: boolean;
-	bSuppressFaceRemapTable: boolean;
-	bSupportUVFromHitResults: boolean;
-	bDisableActiveActors: boolean;
-	bDisableCCD: boolean;
-	bEnableEnhancedDeterminism: boolean;
-	MaxPhysicsDeltaTime: number;
-	bSubstepping: boolean;
-	bSubsteppingAsync: boolean;
-	MaxSubstepDeltaTime: number;
-	MaxSubsteps: number;
-	SyncSceneSmoothingFactor: number;
-	AsyncSceneSmoothingFactor: number;
-	InitialAverageFrameRate: number;
-	PhysXTreeRebuildRate: number;
-	PhysicalSurfaces: PhysicalSurfaceName[];
-	static Load(ResourceName: string): PhysicsSettings;
-	static Find(Outer: UObject, ResourceName: string): PhysicsSettings;
-	static GetDefaultObject(): PhysicsSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsSettings;
-	static C(Other: UObject | any): PhysicsSettings;
-}
-
-declare class PhysicsSpringComponent extends SceneComponent { 
-	SpringStiffness: number;
-	SpringDamping: number;
-	SpringLengthAtRest: number;
-	SpringRadius: number;
-	SpringChannel: ECollisionChannel;
-	bIgnoreSelf: boolean;
-	SpringCompression: number;
-	static Load(ResourceName: string): PhysicsSpringComponent;
-	static Find(Outer: UObject, ResourceName: string): PhysicsSpringComponent;
-	static GetDefaultObject(): PhysicsSpringComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsSpringComponent;
-	GetSpringRestingPoint(): Vector;
-	GetSpringDirection(): Vector;
-	GetSpringCurrentEndPoint(): Vector;
-	GetNormalizedCompressionScalar(): number;
-	static C(Other: UObject | any): PhysicsSpringComponent;
-}
-
-declare class PhysicsThrusterComponent extends SceneComponent { 
-	ThrustStrength: number;
-	static Load(ResourceName: string): PhysicsThrusterComponent;
-	static Find(Outer: UObject, ResourceName: string): PhysicsThrusterComponent;
-	static GetDefaultObject(): PhysicsThrusterComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsThrusterComponent;
-	static C(Other: UObject | any): PhysicsThrusterComponent;
-}
-
-declare class PhysicsThruster extends RigidBodyBase { 
-	ThrusterComponent: PhysicsThrusterComponent;
-	ArrowComponent: ArrowComponent;
-	static GetDefaultObject(): PhysicsThruster;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsThruster;
-	static C(Other: UObject | any): PhysicsThruster;
-}
-
-declare class SceneCapture extends Actor { 
-	MeshComp: StaticMeshComponent;
-	static GetDefaultObject(): SceneCapture;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCapture;
-	static C(Other: UObject | any): SceneCapture;
-}
-
-declare type ESceneCapturePrimitiveRenderMode = 'PRM_LegacySceneCapture' | 'PRM_RenderScenePrimitives' | 'PRM_UseShowOnlyList';
-declare var ESceneCapturePrimitiveRenderMode : { PRM_LegacySceneCapture:'PRM_LegacySceneCapture',PRM_RenderScenePrimitives:'PRM_RenderScenePrimitives',PRM_UseShowOnlyList:'PRM_UseShowOnlyList', };
-declare class EngineShowFlagsSetting { 
-	ShowFlagName: string;
-	Enabled: boolean;
-	clone() : EngineShowFlagsSetting;
-	static C(Other: UObject | any): EngineShowFlagsSetting;
-}
-
-declare class SceneCaptureComponent extends SceneComponent { 
-	PrimitiveRenderMode: ESceneCapturePrimitiveRenderMode;
-	HiddenComponents: any[];
-	HiddenActors: Actor[];
-	ShowOnlyComponents: any[];
-	ShowOnlyActors: Actor[];
-	bCaptureEveryFrame: boolean;
-	bCaptureOnMovement: boolean;
-	bAlwaysPersistRenderingState: boolean;
-	LODDistanceFactor: number;
-	MaxViewDistanceOverride: number;
-	CaptureSortPriority: number;
-	ShowFlagSettings: EngineShowFlagsSetting[];
-	static Load(ResourceName: string): SceneCaptureComponent;
-	static Find(Outer: UObject, ResourceName: string): SceneCaptureComponent;
-	static GetDefaultObject(): SceneCaptureComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCaptureComponent;
-	ShowOnlyComponent(InComponent: PrimitiveComponent): void;
-	ShowOnlyActorComponents(InActor: Actor): void;
-	SetCaptureSortPriority(NewCaptureSortPriority: number): void;
-	RemoveShowOnlyComponent(InComponent: PrimitiveComponent): void;
-	RemoveShowOnlyActorComponents(InActor: Actor): void;
-	HideComponent(InComponent: PrimitiveComponent): void;
-	HideActorComponents(InActor: Actor): void;
-	ClearShowOnlyComponents(InComponent: PrimitiveComponent): void;
-	ClearHiddenComponents(): void;
-	static C(Other: UObject | any): SceneCaptureComponent;
-}
-
-declare class PlanarReflectionComponent extends SceneCaptureComponent { 
-	PreviewBox: BoxComponent;
-	NormalDistortionStrength: number;
-	PrefilterRoughness: number;
-	PrefilterRoughnessDistance: number;
-	ScreenPercentage: number;
-	ExtraFOV: number;
-	DistanceFromPlaneFadeStart: number;
-	DistanceFromPlaneFadeEnd: number;
-	DistanceFromPlaneFadeoutStart: number;
-	DistanceFromPlaneFadeoutEnd: number;
-	AngleFromPlaneFadeStart: number;
-	AngleFromPlaneFadeEnd: number;
-	bRenderSceneTwoSided: boolean;
-	static Load(ResourceName: string): PlanarReflectionComponent;
-	static Find(Outer: UObject, ResourceName: string): PlanarReflectionComponent;
-	static GetDefaultObject(): PlanarReflectionComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlanarReflectionComponent;
-	static C(Other: UObject | any): PlanarReflectionComponent;
-}
-
-declare class PlanarReflection extends SceneCapture { 
-	PlanarReflectionComponent: PlanarReflectionComponent;
-	SpriteComponent: BillboardComponent;
-	bShowPreviewPlane: boolean;
-	static GetDefaultObject(): PlanarReflection;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlanarReflection;
-	OnInterpToggle(bEnable: boolean): void;
-	static C(Other: UObject | any): PlanarReflection;
-}
-
-declare class PlaneReflectionCapture extends ReflectionCapture { 
-	static GetDefaultObject(): PlaneReflectionCapture;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlaneReflectionCapture;
-	static C(Other: UObject | any): PlaneReflectionCapture;
-}
-
-declare class PlaneReflectionCaptureComponent extends ReflectionCaptureComponent { 
-	InfluenceRadiusScale: number;
-	PreviewInfluenceRadius: DrawSphereComponent;
-	PreviewCaptureBox: BoxComponent;
-	static Load(ResourceName: string): PlaneReflectionCaptureComponent;
-	static Find(Outer: UObject, ResourceName: string): PlaneReflectionCaptureComponent;
-	static GetDefaultObject(): PlaneReflectionCaptureComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlaneReflectionCaptureComponent;
-	static C(Other: UObject | any): PlaneReflectionCaptureComponent;
-}
-
-declare class PlatformEventsComponent extends ActorComponent { 
-	PlatformChangedToLaptopModeDelegate: UnrealEngineMulticastDelegate<() => void>;
-	PlatformChangedToTabletModeDelegate: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): PlatformEventsComponent;
-	static Find(Outer: UObject, ResourceName: string): PlatformEventsComponent;
-	static GetDefaultObject(): PlatformEventsComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlatformEventsComponent;
-	SupportsConvertibleLaptops(): boolean;
-	IsInTabletMode(): boolean;
-	IsInLaptopMode(): boolean;
-	static C(Other: UObject | any): PlatformEventsComponent;
-}
-
-declare class PlatformInterfaceWebResponse extends UObject { 
-	OriginalURL: string;
-	ResponseCode: number;
-	Tag: number;
-	StringResponse: string;
-	BinaryResponse: number[];
-	static Load(ResourceName: string): PlatformInterfaceWebResponse;
-	static Find(Outer: UObject, ResourceName: string): PlatformInterfaceWebResponse;
-	static GetDefaultObject(): PlatformInterfaceWebResponse;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlatformInterfaceWebResponse;
-	GetNumHeaders(): number;
-	GetHeaderValue(HeaderName: string): string;
-	GetHeader(HeaderIndex: number,Header?: string,Value?: string): {Header: string, Value: string};
-	static C(Other: UObject | any): PlatformInterfaceWebResponse;
-}
-
-declare class PlayerStart extends NavigationObjectBase { 
-	PlayerStartTag: string;
-	ArrowComponent: ArrowComponent;
-	static GetDefaultObject(): PlayerStart;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlayerStart;
-	static C(Other: UObject | any): PlayerStart;
-}
-
-declare class PlayerStartPIE extends PlayerStart { 
-	static GetDefaultObject(): PlayerStartPIE;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlayerStartPIE;
-	static C(Other: UObject | any): PlayerStartPIE;
-}
-
-declare class PluginCommandlet extends Commandlet { 
-	static Load(ResourceName: string): PluginCommandlet;
-	static Find(Outer: UObject, ResourceName: string): PluginCommandlet;
-	static GetDefaultObject(): PluginCommandlet;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PluginCommandlet;
-	static C(Other: UObject | any): PluginCommandlet;
-}
-
-declare class PointLight extends Light { 
-	PointLightComponent: PointLightComponent;
-	static GetDefaultObject(): PointLight;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PointLight;
-	SetRadius(NewRadius: number): void;
-	SetLightFalloffExponent(NewLightFalloffExponent: number): void;
-	static C(Other: UObject | any): PointLight;
-}
-
-declare class Polys extends UObject { 
-	static Load(ResourceName: string): Polys;
-	static Find(Outer: UObject, ResourceName: string): Polys;
-	static GetDefaultObject(): Polys;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Polys;
-	static C(Other: UObject | any): Polys;
-}
-
-declare type EBoneSpaces = 'WorldSpace' | 'ComponentSpace';
-declare var EBoneSpaces : { WorldSpace:'WorldSpace',ComponentSpace:'ComponentSpace', };
-declare class PoseableMeshComponent extends SkinnedMeshComponent { 
-	static Load(ResourceName: string): PoseableMeshComponent;
-	static Find(Outer: UObject, ResourceName: string): PoseableMeshComponent;
-	static GetDefaultObject(): PoseableMeshComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PoseableMeshComponent;
-	SetBoneTransformByName(BoneName: string,InTransform: Transform,BoneSpace: EBoneSpaces): void;
-	SetBoneScaleByName(BoneName: string,InScale3D: Vector,BoneSpace: EBoneSpaces): void;
-	SetBoneRotationByName(BoneName: string,InRotation: Rotator,BoneSpace: EBoneSpaces): void;
-	SetBoneLocationByName(BoneName: string,InLocation: Vector,BoneSpace: EBoneSpaces): void;
-	ResetBoneTransformByName(BoneName: string): void;
-	GetBoneTransformByName(BoneName: string,BoneSpace: EBoneSpaces): Transform;
-	GetBoneScaleByName(BoneName: string,BoneSpace: EBoneSpaces): Vector;
-	GetBoneRotationByName(BoneName: string,BoneSpace: EBoneSpaces): Rotator;
-	GetBoneLocationByName(BoneName: string,BoneSpace: EBoneSpaces): Vector;
-	CopyPoseFromSkeletalComponent(InComponentToCopy: SkeletalMeshComponent): void;
-	static C(Other: UObject | any): PoseableMeshComponent;
-}
-
-declare class PostProcessComponent extends SceneComponent { 
-	Settings: PostProcessSettings;
-	Priority: number;
-	BlendRadius: number;
-	BlendWeight: number;
-	bEnabled: boolean;
-	bUnbound: boolean;
-	static Load(ResourceName: string): PostProcessComponent;
-	static Find(Outer: UObject, ResourceName: string): PostProcessComponent;
-	static GetDefaultObject(): PostProcessComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PostProcessComponent;
-	static C(Other: UObject | any): PostProcessComponent;
-}
-
-declare class PostProcessVolume extends Volume { 
-	Settings: PostProcessSettings;
-	Priority: number;
-	BlendRadius: number;
-	BlendWeight: number;
-	bEnabled: boolean;
-	bUnbound: boolean;
-	static GetDefaultObject(): PostProcessVolume;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PostProcessVolume;
-	static C(Other: UObject | any): PostProcessVolume;
-}
-
-declare class PrecomputedVisibilityOverrideVolume extends Volume { 
-	OverrideVisibleActors: Actor[];
-	OverrideInvisibleActors: Actor[];
-	OverrideInvisibleLevels: string[];
-	static GetDefaultObject(): PrecomputedVisibilityOverrideVolume;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PrecomputedVisibilityOverrideVolume;
-	static C(Other: UObject | any): PrecomputedVisibilityOverrideVolume;
-}
-
-declare class PrecomputedVisibilityVolume extends Volume { 
-	static GetDefaultObject(): PrecomputedVisibilityVolume;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PrecomputedVisibilityVolume;
-	static C(Other: UObject | any): PrecomputedVisibilityVolume;
-}
-
-declare class PreviewCollectionInterface extends Interface { 
-	static Load(ResourceName: string): PreviewCollectionInterface;
-	static Find(Outer: UObject, ResourceName: string): PreviewCollectionInterface;
-	static GetDefaultObject(): PreviewCollectionInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PreviewCollectionInterface;
-	static C(Other: UObject | any): PreviewCollectionInterface;
-}
-
-declare class PreviewMeshCollectionEntry { 
-	SkeletalMesh: any;
-	clone() : PreviewMeshCollectionEntry;
-	static C(Other: UObject | any): PreviewMeshCollectionEntry;
-}
-
-declare class PreviewMeshCollection extends DataAsset { 
-	Skeleton: Skeleton;
-	SkeletalMeshes: PreviewMeshCollectionEntry[];
-	static Load(ResourceName: string): PreviewMeshCollection;
-	static Find(Outer: UObject, ResourceName: string): PreviewMeshCollection;
-	static GetDefaultObject(): PreviewMeshCollection;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PreviewMeshCollection;
-	static C(Other: UObject | any): PreviewMeshCollection;
-}
-
-declare class PrimaryAssetLabel extends PrimaryDataAsset { 
-	Rules: PrimaryAssetRules;
-	bLabelAssetsInMyDirectory: boolean;
-	bIsRuntimeLabel: boolean;
-	ExplicitAssets: any[];
-	ExplicitBlueprints: any[];
-	static Load(ResourceName: string): PrimaryAssetLabel;
-	static Find(Outer: UObject, ResourceName: string): PrimaryAssetLabel;
-	static GetDefaultObject(): PrimaryAssetLabel;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PrimaryAssetLabel;
-	static C(Other: UObject | any): PrimaryAssetLabel;
-}
-
-declare class ProjectileMovementComponent extends MovementComponent { 
-	InitialSpeed: number;
-	MaxSpeed: number;
-	bRotationFollowsVelocity: boolean;
-	bShouldBounce: boolean;
-	bInitialVelocityInLocalSpace: boolean;
-	bForceSubStepping: boolean;
-	bIsHomingProjectile: boolean;
-	bBounceAngleAffectsFriction: boolean;
-	bIsSliding: boolean;
-	PreviousHitTime: number;
-	PreviousHitNormal: Vector;
-	ProjectileGravityScale: number;
-	Buoyancy: number;
-	Bounciness: number;
-	Friction: number;
-	BounceVelocityStopSimulatingThreshold: number;
-	OnProjectileBounce: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, ImpactVelocity: Vector) => void>;
-	OnProjectileStop: UnrealEngineMulticastDelegate<(ImpactResult: HitResult) => void>;
-	HomingAccelerationMagnitude: number;
-	HomingTargetComponent: any;
-	MaxSimulationTimeStep: number;
-	MaxSimulationIterations: number;
-	static Load(ResourceName: string): ProjectileMovementComponent;
-	static Find(Outer: UObject, ResourceName: string): ProjectileMovementComponent;
-	static GetDefaultObject(): ProjectileMovementComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProjectileMovementComponent;
-	StopSimulating(HitResult: HitResult): void;
-	SetVelocityInLocalSpace(NewVelocity: Vector): void;
-	LimitVelocity(NewVelocity: Vector): Vector;
-	static C(Other: UObject | any): ProjectileMovementComponent;
-}
-
-declare class RadialForceComponent extends SceneComponent { 
-	Radius: number;
-	Falloff: ERadialImpulseFalloff;
-	ImpulseStrength: number;
-	bImpulseVelChange: boolean;
-	bIgnoreOwningActor: boolean;
-	ForceStrength: number;
-	DestructibleDamage: number;
-	ObjectTypesToAffect: EObjectTypeQuery[];
-	static Load(ResourceName: string): RadialForceComponent;
-	static Find(Outer: UObject, ResourceName: string): RadialForceComponent;
-	static GetDefaultObject(): RadialForceComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RadialForceComponent;
-	RemoveObjectTypeToAffect(ObjectType: EObjectTypeQuery): void;
-	FireImpulse(): void;
-	AddObjectTypeToAffect(ObjectType: EObjectTypeQuery): void;
-	static C(Other: UObject | any): RadialForceComponent;
-}
-
-declare class RadialForceActor extends RigidBodyBase { 
-	ForceComponent: RadialForceComponent;
-	SpriteComponent: BillboardComponent;
-	static GetDefaultObject(): RadialForceActor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RadialForceActor;
-	ToggleForce(): void;
-	FireImpulse(): void;
-	EnableForce(): void;
-	DisableForce(): void;
-	static C(Other: UObject | any): RadialForceActor;
-}
-
-declare class RecastFilter_UseDefaultArea extends NavigationQueryFilter { 
-	static Load(ResourceName: string): RecastFilter_UseDefaultArea;
-	static Find(Outer: UObject, ResourceName: string): RecastFilter_UseDefaultArea;
-	static GetDefaultObject(): RecastFilter_UseDefaultArea;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RecastFilter_UseDefaultArea;
-	static C(Other: UObject | any): RecastFilter_UseDefaultArea;
-}
-
-declare class RecastNavMeshDataChunk extends NavigationDataChunk { 
-	static Load(ResourceName: string): RecastNavMeshDataChunk;
-	static Find(Outer: UObject, ResourceName: string): RecastNavMeshDataChunk;
-	static GetDefaultObject(): RecastNavMeshDataChunk;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RecastNavMeshDataChunk;
-	static C(Other: UObject | any): RecastNavMeshDataChunk;
-}
-
-declare type EMobileMSAASampleCount = 'One' | 'Two' | 'Four' | 'Eight' | 'EMobileMSAASampleCount_MAX' | '';
-declare var EMobileMSAASampleCount : { One:'One',Two:'Two',Four:'Four',Eight:'Eight',EMobileMSAASampleCount_MAX:'EMobileMSAASampleCount_MAX',:'', };
-declare type ETranslucentSortPolicy = 'SortByDistance' | 'SortByProjectedZ' | 'SortAlongAxis';
-declare var ETranslucentSortPolicy : { SortByDistance:'SortByDistance',SortByProjectedZ:'SortByProjectedZ',SortAlongAxis:'SortAlongAxis', };
-declare type ECustomDepthStencil = 'Disabled' | 'Enabled' | 'EnabledOnDemand' | 'EnabledWithStencil';
-declare var ECustomDepthStencil : { Disabled:'Disabled',Enabled:'Enabled',EnabledOnDemand:'EnabledOnDemand',EnabledWithStencil:'EnabledWithStencil', };
-declare type EAutoExposureMethodUI = 'AEM_Histogram' | 'AEM_Basic';
-declare var EAutoExposureMethodUI : { AEM_Histogram:'AEM_Histogram',AEM_Basic:'AEM_Basic', };
-declare type EAntiAliasingMethod = 'AAM_None' | 'AAM_FXAA' | 'AAM_TemporalAA' | 'AAM_MSAA';
-declare var EAntiAliasingMethod : { AAM_None:'AAM_None',AAM_FXAA:'AAM_FXAA',AAM_TemporalAA:'AAM_TemporalAA',AAM_MSAA:'AAM_MSAA', };
-declare type EEarlyZPass = 'None' | 'OpaqueOnly' | 'OpaqueAndMasked' | 'Auto';
-declare var EEarlyZPass : { None:'None',OpaqueOnly:'OpaqueOnly',OpaqueAndMasked:'OpaqueAndMasked',Auto:'Auto', };
-declare type EClearSceneOptions = 'NoClear' | 'HardwareClear' | 'QuadAtMaxZ';
-declare var EClearSceneOptions : { NoClear:'NoClear',HardwareClear:'HardwareClear',QuadAtMaxZ:'QuadAtMaxZ', };
-declare type EGBufferFormat = 'Force8BitsPerChannel' | 'Default' | 'HighPrecisionNormals' | 'Force16BitsPerChannel' | 'EGBufferFormat_MAX' | '';
-declare var EGBufferFormat : { Force8BitsPerChannel:'Force8BitsPerChannel',Default:'Default',HighPrecisionNormals:'HighPrecisionNormals',Force16BitsPerChannel:'Force16BitsPerChannel',EGBufferFormat_MAX:'EGBufferFormat_MAX',:'', };
-declare class RendererSettings extends DeveloperSettings { 
-	bMobileHDR: boolean;
-	bMobileDisableVertexFog: boolean;
-	MaxMobileCascades: number;
-	MobileMSAASampleCount: EMobileMSAASampleCount;
-	bDiscardUnusedQualityLevels: boolean;
-	bOcclusionCulling: boolean;
-	MinScreenRadiusForLights: number;
-	MinScreenRadiusForEarlyZPass: number;
-	MinScreenRadiusForCSMdepth: number;
-	bPrecomputedVisibilityWarning: boolean;
-	bTextureStreaming: boolean;
-	bUseDXT5NormalMaps: boolean;
-	bClearCoatEnableSecondNormal: boolean;
-	ReflectionCaptureResolution: number;
-	ReflectionEnvironmentLightmapMixBasedOnRoughness: boolean;
-	bForwardShading: boolean;
-	bVertexFoggingForOpaque: boolean;
-	bAllowStaticLighting: boolean;
-	bUseNormalMapsForStaticLighting: boolean;
-	bGenerateMeshDistanceFields: boolean;
-	bEightBitMeshDistanceFields: boolean;
-	bGenerateLandscapeGIData: boolean;
-	bCompressMeshDistanceFields: boolean;
-	TessellationAdaptivePixelsPerTriangle: number;
-	bSeparateTranslucency: boolean;
-	TranslucentSortPolicy: ETranslucentSortPolicy;
-	TranslucentSortAxis: Vector;
-	CustomDepthStencil: ECustomDepthStencil;
-	bCustomDepthTaaJitter: boolean;
-	bEnableAlphaChannelInPostProcessing: boolean;
-	bDefaultFeatureBloom: boolean;
-	bDefaultFeatureAmbientOcclusion: boolean;
-	bDefaultFeatureAmbientOcclusionStaticFraction: boolean;
-	bDefaultFeatureAutoExposure: boolean;
-	DefaultFeatureAutoExposure: EAutoExposureMethodUI;
-	bDefaultFeatureMotionBlur: boolean;
-	bDefaultFeatureLensFlare: boolean;
-	DefaultFeatureAntiAliasing: EAntiAliasingMethod;
-	bStencilForLODDither: boolean;
-	EarlyZPass: EEarlyZPass;
-	bEarlyZPassMovable: boolean;
-	bEarlyZPassOnlyMaterialMasking: boolean;
-	bDBuffer: boolean;
-	ClearSceneMethod: EClearSceneOptions;
-	bBasePassOutputsVelocity: boolean;
-	bSelectiveBasePassOutputs: boolean;
-	bDefaultParticleCutouts: boolean;
-	bGlobalClipPlane: boolean;
-	GBufferFormat: EGBufferFormat;
-	bUseGPUMorphTargets: boolean;
-	bNvidiaAftermathEnabled: boolean;
-	bInstancedStereo: boolean;
-	bMultiView: boolean;
-	bMobileMultiView: boolean;
-	bMobileMultiViewDirect: boolean;
-	bMonoscopicFarField: boolean;
-	WireframeCullThreshold: number;
-	bSupportStationarySkylight: boolean;
-	bSupportLowQualityLightmaps: boolean;
-	bSupportPointLightWholeSceneShadows: boolean;
-	bSupportAtmosphericFog: boolean;
-	bSupportSkinCacheShaders: boolean;
-	bMobileEnableStaticAndCSMShadowReceivers: boolean;
-	bMobileAllowDistanceFieldShadows: boolean;
-	bMobileAllowMovableDirectionalLights: boolean;
-	MobileNumDynamicPointLights: any;
-	bMobileDynamicPointLightsUseStaticBranch: boolean;
-	SkinCacheSceneMemoryLimitInMB: number;
-	bGPUSkinLimit2BoneInfluences: boolean;
-	static Load(ResourceName: string): RendererSettings;
-	static Find(Outer: UObject, ResourceName: string): RendererSettings;
-	static GetDefaultObject(): RendererSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RendererSettings;
-	static C(Other: UObject | any): RendererSettings;
-}
-
-declare class RendererOverrideSettings extends DeveloperSettings { 
-	bSupportAllShaderPermutations: boolean;
-	bForceRecomputeTangents: boolean;
-	static Load(ResourceName: string): RendererOverrideSettings;
-	static Find(Outer: UObject, ResourceName: string): RendererOverrideSettings;
-	static GetDefaultObject(): RendererOverrideSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RendererOverrideSettings;
-	static C(Other: UObject | any): RendererOverrideSettings;
-}
-
-declare class RotatingMovementComponent extends MovementComponent { 
-	RotationRate: Rotator;
-	PivotTranslation: Vector;
-	bRotationInLocalSpace: boolean;
-	static Load(ResourceName: string): RotatingMovementComponent;
-	static Find(Outer: UObject, ResourceName: string): RotatingMovementComponent;
-	static GetDefaultObject(): RotatingMovementComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RotatingMovementComponent;
-	static C(Other: UObject | any): RotatingMovementComponent;
-}
-
-declare class RVOAvoidanceInterface extends Interface { 
-	static Load(ResourceName: string): RVOAvoidanceInterface;
-	static Find(Outer: UObject, ResourceName: string): RVOAvoidanceInterface;
-	static GetDefaultObject(): RVOAvoidanceInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RVOAvoidanceInterface;
-	static C(Other: UObject | any): RVOAvoidanceInterface;
-}
-
-declare class Scene extends UObject { 
-	static Load(ResourceName: string): Scene;
-	static Find(Outer: UObject, ResourceName: string): Scene;
-	static GetDefaultObject(): Scene;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Scene;
-	static C(Other: UObject | any): Scene;
-}
-
-declare type ESceneCaptureSource = 'SCS_SceneColorHDR' | 'SCS_SceneColorHDRNoAlpha' | 'SCS_FinalColorLDR' | 'SCS_SceneColorSceneDepth' | 'SCS_SceneDepth' | 'SCS_DeviceDepth' | 'SCS_Normal' | 'SCS_BaseColor';
-declare var ESceneCaptureSource : { SCS_SceneColorHDR:'SCS_SceneColorHDR',SCS_SceneColorHDRNoAlpha:'SCS_SceneColorHDRNoAlpha',SCS_FinalColorLDR:'SCS_FinalColorLDR',SCS_SceneColorSceneDepth:'SCS_SceneColorSceneDepth',SCS_SceneDepth:'SCS_SceneDepth',SCS_DeviceDepth:'SCS_DeviceDepth',SCS_Normal:'SCS_Normal',SCS_BaseColor:'SCS_BaseColor', };
-declare type ESceneCaptureCompositeMode = 'SCCM_Overwrite' | 'SCCM_Additive' | 'SCCM_Composite';
-declare var ESceneCaptureCompositeMode : { SCCM_Overwrite:'SCCM_Overwrite',SCCM_Additive:'SCCM_Additive',SCCM_Composite:'SCCM_Composite', };
-declare class SceneCaptureComponent2D extends SceneCaptureComponent { 
-	ProjectionType: ECameraProjectionMode;
-	FOVAngle: number;
-	OrthoWidth: number;
-	TextureTarget: TextureRenderTarget2D;
-	CaptureSource: ESceneCaptureSource;
-	CompositeMode: ESceneCaptureCompositeMode;
-	PostProcessSettings: PostProcessSettings;
-	PostProcessBlendWeight: number;
-	bUseCustomProjectionMatrix: boolean;
-	CustomProjectionMatrix: Matrix;
-	bEnableClipPlane: boolean;
-	ClipPlaneBase: Vector;
-	ClipPlaneNormal: Vector;
-	bCameraCutThisFrame: boolean;
-	static Load(ResourceName: string): SceneCaptureComponent2D;
-	static Find(Outer: UObject, ResourceName: string): SceneCaptureComponent2D;
-	static GetDefaultObject(): SceneCaptureComponent2D;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCaptureComponent2D;
-	CaptureScene(): void;
-	static C(Other: UObject | any): SceneCaptureComponent2D;
-}
-
-declare class SceneCapture2D extends SceneCapture { 
-	CaptureComponent2D: SceneCaptureComponent2D;
-	DrawFrustum: DrawFrustumComponent;
-	static GetDefaultObject(): SceneCapture2D;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCapture2D;
-	OnInterpToggle(bEnable: boolean): void;
-	static C(Other: UObject | any): SceneCapture2D;
-}
-
-declare class TextureRenderTargetCube extends TextureRenderTarget { 
-	SizeX: number;
-	ClearColor: LinearColor;
-	OverrideFormat: EPixelFormat;
-	bHDR: boolean;
-	bForceLinearGamma: boolean;
-	static Load(ResourceName: string): TextureRenderTargetCube;
-	static Find(Outer: UObject, ResourceName: string): TextureRenderTargetCube;
-	static GetDefaultObject(): TextureRenderTargetCube;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureRenderTargetCube;
-	static C(Other: UObject | any): TextureRenderTargetCube;
-}
-
-declare class SceneCaptureComponentCube extends SceneCaptureComponent { 
-	TextureTarget: TextureRenderTargetCube;
-	static Load(ResourceName: string): SceneCaptureComponentCube;
-	static Find(Outer: UObject, ResourceName: string): SceneCaptureComponentCube;
-	static GetDefaultObject(): SceneCaptureComponentCube;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCaptureComponentCube;
-	CaptureScene(): void;
-	static C(Other: UObject | any): SceneCaptureComponentCube;
-}
-
-declare class SceneCaptureCube extends SceneCapture { 
-	CaptureComponentCube: SceneCaptureComponentCube;
-	DrawFrustum: DrawFrustumComponent;
-	static GetDefaultObject(): SceneCaptureCube;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCaptureCube;
-	OnInterpToggle(bEnable: boolean): void;
-	static C(Other: UObject | any): SceneCaptureCube;
-}
-
-declare type EShadowMapFlags = 'SMF_None' | 'SMF_Streamed';
-declare var EShadowMapFlags : { SMF_None:'SMF_None',SMF_Streamed:'SMF_Streamed', };
-declare class ShadowMapTexture2D extends Texture2D { 
-	ShadowmapFlags: EShadowMapFlags;
-	static Load(ResourceName: string): ShadowMapTexture2D;
-	static Find(Outer: UObject, ResourceName: string): ShadowMapTexture2D;
-	static GetDefaultObject(): ShadowMapTexture2D;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ShadowMapTexture2D;
-	static C(Other: UObject | any): ShadowMapTexture2D;
-}
-
-declare class SkeletalMeshLODGroupSettings { 
-	ScreenSize: number;
-	OptimizationSettings: SkeletalMeshOptimizationSettings;
-	clone() : SkeletalMeshLODGroupSettings;
-	static C(Other: UObject | any): SkeletalMeshLODGroupSettings;
-}
-
-declare class SkeletalMeshReductionSettings extends UObject { 
-	Settings: SkeletalMeshLODGroupSettings[];
-	static Load(ResourceName: string): SkeletalMeshReductionSettings;
-	static Find(Outer: UObject, ResourceName: string): SkeletalMeshReductionSettings;
-	static GetDefaultObject(): SkeletalMeshReductionSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshReductionSettings;
-	static C(Other: UObject | any): SkeletalMeshReductionSettings;
-}
-
-declare type ESkyLightSourceType = 'SLS_CapturedScene' | 'SLS_SpecifiedCubemap';
-declare var ESkyLightSourceType : { SLS_CapturedScene:'SLS_CapturedScene',SLS_SpecifiedCubemap:'SLS_SpecifiedCubemap', };
-declare type EOcclusionCombineMode = 'OCM_Minimum' | 'OCM_Multiply';
-declare var EOcclusionCombineMode : { OCM_Minimum:'OCM_Minimum',OCM_Multiply:'OCM_Multiply', };
-declare class SkyLightComponent extends LightComponentBase { 
-	SourceType: ESkyLightSourceType;
-	Cubemap: TextureCube;
-	SourceCubemapAngle: number;
-	CubemapResolution: number;
-	SkyDistanceThreshold: number;
-	bCaptureEmissiveOnly: boolean;
-	bLowerHemisphereIsBlack: boolean;
-	LowerHemisphereColor: LinearColor;
-	OcclusionMaxDistance: number;
-	Contrast: number;
-	OcclusionExponent: number;
-	MinOcclusion: number;
-	OcclusionTint: Color;
-	OcclusionCombineMode: EOcclusionCombineMode;
-	BlendDestinationCubemap: TextureCube;
-	static Load(ResourceName: string): SkyLightComponent;
-	static Find(Outer: UObject, ResourceName: string): SkyLightComponent;
-	static GetDefaultObject(): SkyLightComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkyLightComponent;
-	SetVolumetricScatteringIntensity(NewIntensity: number): void;
-	SetOcclusionTint(InTint: Color): void;
-	SetOcclusionExponent(InOcclusionExponent: number): void;
-	SetOcclusionContrast(InOcclusionContrast: number): void;
-	SetMinOcclusion(InMinOcclusion: number): void;
-	SetLightColor(NewLightColor: LinearColor): void;
-	SetIntensity(NewIntensity: number): void;
-	SetIndirectLightingIntensity(NewIntensity: number): void;
-	SetCubemapBlend(SourceCubemap: TextureCube,DestinationCubemap: TextureCube,InBlendFraction: number): void;
-	SetCubemap(NewCubemap: TextureCube): void;
-	RecaptureSky(): void;
-	static C(Other: UObject | any): SkyLightComponent;
-}
-
-declare class SkyLight extends Info { 
-	LightComponent: SkyLightComponent;
-	bEnabled: boolean;
-	static GetDefaultObject(): SkyLight;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkyLight;
-	OnRep_bEnabled(): void;
-	static C(Other: UObject | any): SkyLight;
-}
-
-declare class SlateTextureAtlasInterface extends Interface { 
-	static Load(ResourceName: string): SlateTextureAtlasInterface;
-	static Find(Outer: UObject, ResourceName: string): SlateTextureAtlasInterface;
-	static GetDefaultObject(): SlateTextureAtlasInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateTextureAtlasInterface;
-	static C(Other: UObject | any): SlateTextureAtlasInterface;
-}
-
-declare class SmokeTestCommandlet extends Commandlet { 
-	static Load(ResourceName: string): SmokeTestCommandlet;
-	static Find(Outer: UObject, ResourceName: string): SmokeTestCommandlet;
-	static GetDefaultObject(): SmokeTestCommandlet;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SmokeTestCommandlet;
-	static C(Other: UObject | any): SmokeTestCommandlet;
-}
-
-declare class SoundGroup { 
-	SoundGroup: ESoundGroup;
-	DisplayName: string;
-	bAlwaysDecompressOnLoad: boolean;
-	DecompressedDuration: number;
-	clone() : SoundGroup;
-	static C(Other: UObject | any): SoundGroup;
-}
-
-declare class SoundGroups extends UObject { 
-	SoundGroupProfiles: SoundGroup[];
-	static Load(ResourceName: string): SoundGroups;
-	static Find(Outer: UObject, ResourceName: string): SoundGroups;
-	static GetDefaultObject(): SoundGroups;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundGroups;
-	static C(Other: UObject | any): SoundGroups;
-}
-
-declare class SoundNodeAssetReferencer extends SoundNode { 
-	static Load(ResourceName: string): SoundNodeAssetReferencer;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeAssetReferencer;
-	static GetDefaultObject(): SoundNodeAssetReferencer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeAssetReferencer;
-	static C(Other: UObject | any): SoundNodeAssetReferencer;
-}
-
-declare class SoundNodeAttenuation extends SoundNode { 
-	AttenuationSettings: SoundAttenuation;
-	AttenuationOverrides: SoundAttenuationSettings;
-	bOverrideAttenuation: boolean;
-	static Load(ResourceName: string): SoundNodeAttenuation;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeAttenuation;
-	static GetDefaultObject(): SoundNodeAttenuation;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeAttenuation;
-	static C(Other: UObject | any): SoundNodeAttenuation;
-}
-
-declare class SoundNodeBranch extends SoundNode { 
-	BoolParameterName: string;
-	static Load(ResourceName: string): SoundNodeBranch;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeBranch;
-	static GetDefaultObject(): SoundNodeBranch;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeBranch;
-	static C(Other: UObject | any): SoundNodeBranch;
-}
-
-declare class SoundNodeConcatenator extends SoundNode { 
-	InputVolume: number[];
-	static Load(ResourceName: string): SoundNodeConcatenator;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeConcatenator;
-	static GetDefaultObject(): SoundNodeConcatenator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeConcatenator;
-	static C(Other: UObject | any): SoundNodeConcatenator;
-}
-
-declare class SoundNodeDelay extends SoundNode { 
-	DelayMin: number;
-	DelayMax: number;
-	static Load(ResourceName: string): SoundNodeDelay;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeDelay;
-	static GetDefaultObject(): SoundNodeDelay;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeDelay;
-	static C(Other: UObject | any): SoundNodeDelay;
-}
-
-declare class DialogueWaveParameter { 
-	DialogueWave: DialogueWave;
-	Context: DialogueContext;
-	clone() : DialogueWaveParameter;
-	static C(Other: UObject | any): DialogueWaveParameter;
-}
-
-declare class SoundNodeDialoguePlayer extends SoundNode { 
-	DialogueWaveParameter: DialogueWaveParameter;
-	bLooping: boolean;
-	static Load(ResourceName: string): SoundNodeDialoguePlayer;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeDialoguePlayer;
-	static GetDefaultObject(): SoundNodeDialoguePlayer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeDialoguePlayer;
-	static C(Other: UObject | any): SoundNodeDialoguePlayer;
-}
-
-declare class DistanceDatum { 
-	FadeInDistanceStart: number;
-	FadeInDistanceEnd: number;
-	FadeOutDistanceStart: number;
-	FadeOutDistanceEnd: number;
-	Volume: number;
-	clone() : DistanceDatum;
-	static C(Other: UObject | any): DistanceDatum;
-}
-
-declare class SoundNodeDistanceCrossFade extends SoundNode { 
-	CrossFadeInput: DistanceDatum[];
-	static Load(ResourceName: string): SoundNodeDistanceCrossFade;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeDistanceCrossFade;
-	static GetDefaultObject(): SoundNodeDistanceCrossFade;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeDistanceCrossFade;
-	static C(Other: UObject | any): SoundNodeDistanceCrossFade;
-}
-
-declare class SoundNodeDoppler extends SoundNode { 
-	DopplerIntensity: number;
-	static Load(ResourceName: string): SoundNodeDoppler;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeDoppler;
-	static GetDefaultObject(): SoundNodeDoppler;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeDoppler;
-	static C(Other: UObject | any): SoundNodeDoppler;
-}
-
-declare class SoundNodeEnveloper extends SoundNode { 
-	LoopStart: number;
-	LoopEnd: number;
-	DurationAfterLoop: number;
-	LoopCount: number;
-	bLoopIndefinitely: boolean;
-	bLoop: boolean;
-	VolumeInterpCurve: DistributionFloatConstantCurve;
-	PitchInterpCurve: DistributionFloatConstantCurve;
-	VolumeCurve: RuntimeFloatCurve;
-	PitchCurve: RuntimeFloatCurve;
-	PitchMin: number;
-	PitchMax: number;
-	VolumeMin: number;
-	VolumeMax: number;
-	static Load(ResourceName: string): SoundNodeEnveloper;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeEnveloper;
-	static GetDefaultObject(): SoundNodeEnveloper;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeEnveloper;
-	static C(Other: UObject | any): SoundNodeEnveloper;
-}
-
-declare class SoundNodeGroupControl extends SoundNode { 
-	GroupSizes: number[];
-	static Load(ResourceName: string): SoundNodeGroupControl;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeGroupControl;
-	static GetDefaultObject(): SoundNodeGroupControl;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeGroupControl;
-	static C(Other: UObject | any): SoundNodeGroupControl;
-}
-
-declare class SoundNodeLooping extends SoundNode { 
-	LoopCount: number;
-	bLoopIndefinitely: boolean;
-	static Load(ResourceName: string): SoundNodeLooping;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeLooping;
-	static GetDefaultObject(): SoundNodeLooping;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeLooping;
-	static C(Other: UObject | any): SoundNodeLooping;
-}
-
-declare class SoundNodeMature extends SoundNode { 
-	static Load(ResourceName: string): SoundNodeMature;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeMature;
-	static GetDefaultObject(): SoundNodeMature;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeMature;
-	static C(Other: UObject | any): SoundNodeMature;
-}
-
-declare class SoundNodeMixer extends SoundNode { 
-	InputVolume: number[];
-	static Load(ResourceName: string): SoundNodeMixer;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeMixer;
-	static GetDefaultObject(): SoundNodeMixer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeMixer;
-	static C(Other: UObject | any): SoundNodeMixer;
-}
-
-declare class SoundNodeModulator extends SoundNode { 
-	PitchMin: number;
-	PitchMax: number;
-	VolumeMin: number;
-	VolumeMax: number;
-	static Load(ResourceName: string): SoundNodeModulator;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeModulator;
-	static GetDefaultObject(): SoundNodeModulator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeModulator;
-	static C(Other: UObject | any): SoundNodeModulator;
-}
-
-declare type ModulationParamMode = 'MPM_Normal' | 'MPM_Abs' | 'MPM_Direct';
-declare var ModulationParamMode : { MPM_Normal:'MPM_Normal',MPM_Abs:'MPM_Abs',MPM_Direct:'MPM_Direct', };
-declare class ModulatorContinuousParams { 
-	ParameterName: string;
-	Default: number;
-	MinInput: number;
-	MaxInput: number;
-	MinOutput: number;
-	MaxOutput: number;
-	ParamMode: ModulationParamMode;
-	clone() : ModulatorContinuousParams;
-	static C(Other: UObject | any): ModulatorContinuousParams;
-}
-
-declare class SoundNodeModulatorContinuous extends SoundNode { 
-	PitchModulationParams: ModulatorContinuousParams;
-	VolumeModulationParams: ModulatorContinuousParams;
-	static Load(ResourceName: string): SoundNodeModulatorContinuous;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeModulatorContinuous;
-	static GetDefaultObject(): SoundNodeModulatorContinuous;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeModulatorContinuous;
-	static C(Other: UObject | any): SoundNodeModulatorContinuous;
-}
-
-declare class SoundNodeOscillator extends SoundNode { 
-	bModulateVolume: boolean;
-	bModulatePitch: boolean;
-	AmplitudeMin: number;
-	AmplitudeMax: number;
-	FrequencyMin: number;
-	FrequencyMax: number;
-	OffsetMin: number;
-	OffsetMax: number;
-	CenterMin: number;
-	CenterMax: number;
-	static Load(ResourceName: string): SoundNodeOscillator;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeOscillator;
-	static GetDefaultObject(): SoundNodeOscillator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeOscillator;
-	static C(Other: UObject | any): SoundNodeOscillator;
-}
-
-declare class SoundNodeParamCrossFade extends SoundNodeDistanceCrossFade { 
-	ParamName: string;
-	static Load(ResourceName: string): SoundNodeParamCrossFade;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeParamCrossFade;
-	static GetDefaultObject(): SoundNodeParamCrossFade;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeParamCrossFade;
-	static C(Other: UObject | any): SoundNodeParamCrossFade;
-}
-
-declare class SoundNodeQualityLevel extends SoundNode { 
-	static Load(ResourceName: string): SoundNodeQualityLevel;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeQualityLevel;
-	static GetDefaultObject(): SoundNodeQualityLevel;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeQualityLevel;
-	static C(Other: UObject | any): SoundNodeQualityLevel;
-}
-
-declare class SoundNodeRandom extends SoundNode { 
-	Weights: number[];
-	PreselectAtLevelLoad: number;
-	bRandomizeWithoutReplacement: boolean;
-	HasBeenUsed: boolean[];
-	NumRandomUsed: number;
-	PIEHiddenNodes: number[];
-	static Load(ResourceName: string): SoundNodeRandom;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeRandom;
-	static GetDefaultObject(): SoundNodeRandom;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeRandom;
-	static C(Other: UObject | any): SoundNodeRandom;
-}
-
-declare class SoundNodeSoundClass extends SoundNode { 
-	SoundClassOverride: SoundClass;
-	static Load(ResourceName: string): SoundNodeSoundClass;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeSoundClass;
-	static GetDefaultObject(): SoundNodeSoundClass;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeSoundClass;
-	static C(Other: UObject | any): SoundNodeSoundClass;
-}
-
-declare class SoundNodeSwitch extends SoundNode { 
-	IntParameterName: string;
-	static Load(ResourceName: string): SoundNodeSwitch;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeSwitch;
-	static GetDefaultObject(): SoundNodeSwitch;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeSwitch;
-	static C(Other: UObject | any): SoundNodeSwitch;
-}
-
-declare class SoundNodeWaveParam extends SoundNode { 
-	WaveParameterName: string;
-	static Load(ResourceName: string): SoundNodeWaveParam;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeWaveParam;
-	static GetDefaultObject(): SoundNodeWaveParam;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeWaveParam;
-	static C(Other: UObject | any): SoundNodeWaveParam;
-}
-
-declare class SoundNodeWavePlayer extends SoundNodeAssetReferencer { 
-	SoundWaveAssetPtr: any;
-	SoundWave: SoundWave;
-	bLooping: boolean;
-	static Load(ResourceName: string): SoundNodeWavePlayer;
-	static Find(Outer: UObject, ResourceName: string): SoundNodeWavePlayer;
-	static GetDefaultObject(): SoundNodeWavePlayer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeWavePlayer;
-	static C(Other: UObject | any): SoundNodeWavePlayer;
-}
-
-declare class SpectatorPawnMovement extends FloatingPawnMovement { 
-	bIgnoreTimeDilation: boolean;
-	static Load(ResourceName: string): SpectatorPawnMovement;
-	static Find(Outer: UObject, ResourceName: string): SpectatorPawnMovement;
-	static GetDefaultObject(): SpectatorPawnMovement;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpectatorPawnMovement;
-	static C(Other: UObject | any): SpectatorPawnMovement;
-}
-
-declare class SphereReflectionCapture extends ReflectionCapture { 
-	DrawCaptureRadius: DrawSphereComponent;
-	static GetDefaultObject(): SphereReflectionCapture;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SphereReflectionCapture;
-	static C(Other: UObject | any): SphereReflectionCapture;
-}
-
-declare class SphereReflectionCaptureComponent extends ReflectionCaptureComponent { 
-	InfluenceRadius: number;
-	CaptureDistanceScale: number;
-	PreviewInfluenceRadius: DrawSphereComponent;
-	static Load(ResourceName: string): SphereReflectionCaptureComponent;
-	static Find(Outer: UObject, ResourceName: string): SphereReflectionCaptureComponent;
-	static GetDefaultObject(): SphereReflectionCaptureComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SphereReflectionCaptureComponent;
-	static C(Other: UObject | any): SphereReflectionCaptureComponent;
-}
-
-declare class SplineMeshActor extends Actor { 
-	SplineMeshComponent: SplineMeshComponent;
-	static GetDefaultObject(): SplineMeshActor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplineMeshActor;
-	static C(Other: UObject | any): SplineMeshActor;
-}
-
-declare class SpringArmComponent extends SceneComponent { 
-	TargetArmLength: number;
-	SocketOffset: Vector;
-	TargetOffset: Vector;
-	ProbeSize: number;
-	ProbeChannel: ECollisionChannel;
-	bDoCollisionTest: boolean;
-	bUsePawnControlRotation: boolean;
-	bInheritPitch: boolean;
-	bInheritYaw: boolean;
-	bInheritRoll: boolean;
-	bEnableCameraLag: boolean;
-	bEnableCameraRotationLag: boolean;
-	bUseCameraLagSubstepping: boolean;
-	bDrawDebugLagMarkers: boolean;
-	CameraLagSpeed: number;
-	CameraRotationLagSpeed: number;
-	CameraLagMaxTimeStep: number;
-	CameraLagMaxDistance: number;
-	static Load(ResourceName: string): SpringArmComponent;
-	static Find(Outer: UObject, ResourceName: string): SpringArmComponent;
-	static GetDefaultObject(): SpringArmComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpringArmComponent;
-	static C(Other: UObject | any): SpringArmComponent;
-}
-
-declare type EStereoLayerType = 'SLT_WorldLocked' | 'SLT_TrackerLocked' | 'SLT_FaceLocked';
-declare var EStereoLayerType : { SLT_WorldLocked:'SLT_WorldLocked',SLT_TrackerLocked:'SLT_TrackerLocked',SLT_FaceLocked:'SLT_FaceLocked', };
-declare type EStereoLayerShape = 'SLSH_QuadLayer' | 'SLSH_CylinderLayer' | 'SLSH_CubemapLayer';
-declare var EStereoLayerShape : { SLSH_QuadLayer:'SLSH_QuadLayer',SLSH_CylinderLayer:'SLSH_CylinderLayer',SLSH_CubemapLayer:'SLSH_CubemapLayer', };
-declare class StereoLayerComponent extends SceneComponent { 
-	bLiveTexture: boolean;
-	bSupportsDepth: boolean;
-	bNoAlphaChannel: boolean;
-	Texture: Texture;
-	LeftTexture: Texture;
-	bQuadPreserveTextureRatio: boolean;
-	QuadSize: Vector2D;
-	UVRect: Box2D;
-	CylinderRadius: number;
-	CylinderOverlayArc: number;
-	CylinderHeight: number;
-	StereoLayerType: EStereoLayerType;
-	StereoLayerShape: EStereoLayerShape;
-	Priority: number;
-	static Load(ResourceName: string): StereoLayerComponent;
-	static Find(Outer: UObject, ResourceName: string): StereoLayerComponent;
-	static GetDefaultObject(): StereoLayerComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StereoLayerComponent;
-	SetUVRect(InUVRect: Box2D): void;
-	SetTexture(InTexture: Texture): void;
-	SetQuadSize(InQuadSize: Vector2D): void;
-	SetPriority(InPriority: number): void;
-	MarkTextureForUpdate(): void;
-	GetUVRect(): Box2D;
-	GetTexture(): Texture;
-	GetQuadSize(): Vector2D;
-	GetPriority(): number;
-	static C(Other: UObject | any): StereoLayerComponent;
-}
-
-declare class StereoLayerFunctionLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): StereoLayerFunctionLibrary;
-	static Find(Outer: UObject, ResourceName: string): StereoLayerFunctionLibrary;
-	static GetDefaultObject(): StereoLayerFunctionLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StereoLayerFunctionLibrary;
-	static ShowSplashScreen(): void;
-	static SetSplashScreen(Texture: Texture,Scale: Vector2D,Offset: Vector2D,bShowLoadingMovie: boolean,bShowOnSet: boolean): void;
-	static HideSplashScreen(): void;
-	static EnableAutoLoadingSplashScreen(InAutoShowEnabled: boolean): void;
-	static C(Other: UObject | any): StereoLayerFunctionLibrary;
-}
-
-declare class StringTable extends UObject { 
-	static Load(ResourceName: string): StringTable;
-	static Find(Outer: UObject, ResourceName: string): StringTable;
-	static GetDefaultObject(): StringTable;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StringTable;
-	static C(Other: UObject | any): StringTable;
-}
-
-declare class TargetPoint extends Actor { 
-	SpriteComponent: BillboardComponent;
-	ArrowComponent: ArrowComponent;
-	static GetDefaultObject(): TargetPoint;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TargetPoint;
-	static C(Other: UObject | any): TargetPoint;
-}
-
-declare class TextPropertyTestObject extends UObject { 
-	DefaultedText: string;
-	UndefaultedText: string;
-	TransientText: string;
-	static Load(ResourceName: string): TextPropertyTestObject;
-	static Find(Outer: UObject, ResourceName: string): TextPropertyTestObject;
-	static GetDefaultObject(): TextPropertyTestObject;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextPropertyTestObject;
-	static C(Other: UObject | any): TextPropertyTestObject;
-}
-
-declare type EHorizTextAligment = 'EHTA_Left' | 'EHTA_Center' | 'EHTA_Right';
-declare var EHorizTextAligment : { EHTA_Left:'EHTA_Left',EHTA_Center:'EHTA_Center',EHTA_Right:'EHTA_Right', };
-declare type EVerticalTextAligment = 'EVRTA_TextTop' | 'EVRTA_TextCenter' | 'EVRTA_TextBottom' | 'EVRTA_QuadTop';
-declare var EVerticalTextAligment : { EVRTA_TextTop:'EVRTA_TextTop',EVRTA_TextCenter:'EVRTA_TextCenter',EVRTA_TextBottom:'EVRTA_TextBottom',EVRTA_QuadTop:'EVRTA_QuadTop', };
-declare class TextRenderComponent extends PrimitiveComponent { 
-	Text: string;
-	TextMaterial: MaterialInterface;
-	Font: Font;
-	HorizontalAlignment: EHorizTextAligment;
-	VerticalAlignment: EVerticalTextAligment;
-	TextRenderColor: Color;
-	XScale: number;
-	YScale: number;
-	WorldSize: number;
-	InvDefaultSize: number;
-	HorizSpacingAdjust: number;
-	VertSpacingAdjust: number;
-	bAlwaysRenderAsText: boolean;
-	static Load(ResourceName: string): TextRenderComponent;
-	static Find(Outer: UObject, ResourceName: string): TextRenderComponent;
-	static GetDefaultObject(): TextRenderComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextRenderComponent;
-	SetYScale(Value: number): void;
-	SetXScale(Value: number): void;
-	SetWorldSize(Value: number): void;
-	SetVertSpacingAdjust(Value: number): void;
-	SetVerticalAlignment(Value: EVerticalTextAligment): void;
-	SetTextRenderColor(Value: Color): void;
-	SetTextMaterial(Material: MaterialInterface): void;
-	SetText(Value: string): void;
-	SetHorizSpacingAdjust(Value: number): void;
-	SetHorizontalAlignment(Value: EHorizTextAligment): void;
-	SetFont(Value: Font): void;
-	K2_SetText(Value: string): void;
-	GetTextWorldSize(): Vector;
-	GetTextLocalSize(): Vector;
-	static C(Other: UObject | any): TextRenderComponent;
-}
-
-declare class TextRenderActor extends Actor { 
-	TextRender: TextRenderComponent;
-	SpriteComponent: BillboardComponent;
-	static GetDefaultObject(): TextRenderActor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextRenderActor;
-	static C(Other: UObject | any): TextRenderActor;
-}
-
-declare class TimelineEventEntry { 
-	Time: number;
-	EventFunc: UnrealEngineDelegate<() => void>;
-	clone() : TimelineEventEntry;
-	static C(Other: UObject | any): TimelineEventEntry;
-}
-
-declare class TimelineVectorTrack { 
-	VectorCurve: CurveVector;
-	InterpFunc: UnrealEngineDelegate<(Output: Vector) => void>;
-	TrackName: string;
-	VectorPropertyName: string;
-	VectorProperty: StructProperty;
-	clone() : TimelineVectorTrack;
-	static C(Other: UObject | any): TimelineVectorTrack;
-}
-
-declare class TimelineFloatTrack { 
-	FloatCurve: CurveFloat;
-	InterpFunc: UnrealEngineDelegate<(Output: number) => void>;
-	TrackName: string;
-	FloatPropertyName: string;
-	FloatProperty: FloatProperty;
-	clone() : TimelineFloatTrack;
-	static C(Other: UObject | any): TimelineFloatTrack;
-}
-
-declare class TimelineLinearColorTrack { 
-	LinearColorCurve: CurveLinearColor;
-	InterpFunc: UnrealEngineDelegate<(Output: LinearColor) => void>;
-	TrackName: string;
-	LinearColorPropertyName: string;
-	LinearColorProperty: StructProperty;
-	clone() : TimelineLinearColorTrack;
-	static C(Other: UObject | any): TimelineLinearColorTrack;
-}
-
-declare class Timeline { 
-	LengthMode: ETimelineLengthMode;
-	Length: number;
-	bLooping: boolean;
-	bReversePlayback: boolean;
-	bPlaying: boolean;
-	PlayRate: number;
-	Position: number;
-	Events: TimelineEventEntry[];
-	InterpVectors: TimelineVectorTrack[];
-	InterpFloats: TimelineFloatTrack[];
-	InterpLinearColors: TimelineLinearColorTrack[];
-	TimelinePostUpdateFunc: UnrealEngineDelegate<() => void>;
-	TimelineFinishedFunc: UnrealEngineDelegate<() => void>;
-	PropertySetObject: any;
-	DirectionPropertyName: string;
-	DirectionProperty: Property;
-	clone() : Timeline;
-	static C(Other: UObject | any): Timeline;
-}
-
-declare class TimelineComponent extends ActorComponent { 
-	TheTimeline: Timeline;
-	bIgnoreTimeDilation: boolean;
-	static Load(ResourceName: string): TimelineComponent;
-	static Find(Outer: UObject, ResourceName: string): TimelineComponent;
-	static GetDefaultObject(): TimelineComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TimelineComponent;
-	Stop(): void;
-	SetVectorCurve(NewVectorCurve: CurveVector,VectorTrackName: string): void;
-	SetTimelineLengthMode(NewLengthMode: ETimelineLengthMode): void;
-	SetTimelineLength(NewLength: number): void;
-	SetPlayRate(NewRate: number): void;
-	SetPlaybackPosition(NewPosition: number,bFireEvents: boolean,bFireUpdate: boolean): void;
-	SetNewTime(NewTime: number): void;
-	SetLooping(bNewLooping: boolean): void;
-	SetLinearColorCurve(NewLinearColorCurve: CurveLinearColor,LinearColorTrackName: string): void;
-	SetIgnoreTimeDilation(bNewIgnoreTimeDilation: boolean): void;
-	SetFloatCurve(NewFloatCurve: CurveFloat,FloatTrackName: string): void;
-	ReverseFromEnd(): void;
-	Reverse(): void;
-	PlayFromStart(): void;
-	Play(): void;
-	OnRep_Timeline(): void;
-	IsReversing(): boolean;
-	IsPlaying(): boolean;
-	IsLooping(): boolean;
-	GetTimelineLength(): number;
-	GetPlayRate(): number;
-	GetPlaybackPosition(): number;
-	GetIgnoreTimeDilation(): boolean;
-	static C(Other: UObject | any): TimelineComponent;
-}
-
-declare class TriggerBase extends Actor { 
-	CollisionComponent: ShapeComponent;
-	SpriteComponent: BillboardComponent;
-	static GetDefaultObject(): TriggerBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TriggerBase;
-	static C(Other: UObject | any): TriggerBase;
-}
-
-declare class TriggerBox extends TriggerBase { 
-	static GetDefaultObject(): TriggerBox;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TriggerBox;
-	static C(Other: UObject | any): TriggerBox;
-}
-
-declare class TriggerCapsule extends TriggerBase { 
-	static GetDefaultObject(): TriggerCapsule;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TriggerCapsule;
-	static C(Other: UObject | any): TriggerCapsule;
-}
-
-declare class TriggerSphere extends TriggerBase { 
-	static GetDefaultObject(): TriggerSphere;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TriggerSphere;
-	static C(Other: UObject | any): TriggerSphere;
-}
-
-declare class TriggerVolume extends Volume { 
-	static GetDefaultObject(): TriggerVolume;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TriggerVolume;
-	static C(Other: UObject | any): TriggerVolume;
-}
-
-declare type ETwitterRequestMethod = 'TRM_Get' | 'TRM_Post' | 'TRM_Delete';
-declare var ETwitterRequestMethod : { TRM_Get:'TRM_Get',TRM_Post:'TRM_Post',TRM_Delete:'TRM_Delete', };
-declare class TwitterIntegrationBase extends PlatformInterfaceBase { 
-	static Load(ResourceName: string): TwitterIntegrationBase;
-	static Find(Outer: UObject, ResourceName: string): TwitterIntegrationBase;
-	static GetDefaultObject(): TwitterIntegrationBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TwitterIntegrationBase;
-	TwitterRequest(URL: string,ParamKeysAndValues: string[],RequestMethod: ETwitterRequestMethod,AccountIndex: number): boolean;
-	ShowTweetUI(InitialMessage: string,URL: string,Picture: string): boolean;
-	Init(): void;
-	GetNumAccounts(): number;
-	GetAccountName(AccountIndex: number): string;
-	CanShowTweetUI(): boolean;
-	AuthorizeAccounts(): boolean;
-	static C(Other: UObject | any): TwitterIntegrationBase;
-}
-
-declare class UserDefinedEnum extends Enum { 
-	UniqueNameIndex: any;
-	DisplayNameMap: any;
-	static Load(ResourceName: string): UserDefinedEnum;
-	static Find(Outer: UObject, ResourceName: string): UserDefinedEnum;
-	static GetDefaultObject(): UserDefinedEnum;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UserDefinedEnum;
-	static C(Other: UObject | any): UserDefinedEnum;
-}
-
-declare type ERenderFocusRule = 'Always' | 'NonPointer' | 'NavigationOnly' | 'Never';
-declare var ERenderFocusRule : { Always:'Always',NonPointer:'NonPointer',NavigationOnly:'NavigationOnly',Never:'Never', };
-declare type EUIScalingRule = 'ShortestSide' | 'LongestSide' | 'Horizontal' | 'Vertical' | 'Custom';
-declare var EUIScalingRule : { ShortestSide:'ShortestSide',LongestSide:'LongestSide',Horizontal:'Horizontal',Vertical:'Vertical',Custom:'Custom', };
-declare class UserInterfaceSettings extends DeveloperSettings { 
-	RenderFocusRule: RenderFocusRule;
-	HardwareCursors: any;
-	SoftwareCursors: any;
-	DefaultCursor: StringClassReference;
-	TextEditBeamCursor: StringClassReference;
-	CrosshairsCursor: StringClassReference;
-	HandCursor: StringClassReference;
-	GrabHandCursor: StringClassReference;
-	GrabHandClosedCursor: StringClassReference;
-	SlashedCircleCursor: StringClassReference;
-	ApplicationScale: number;
-	UIScaleRule: UIScaleRule;
-	CustomScalingRuleClass: StringClassReference;
-	UIScaleCurve: RuntimeFloatCurve;
-	bLoadWidgetsOnDedicatedServer: boolean;
-	CursorClasses: UObject[];
-	CustomScalingRuleClassInstance: UnrealEngineClass;
-	CustomScalingRule: DPICustomScalingRule;
-	static Load(ResourceName: string): UserInterfaceSettings;
-	static Find(Outer: UObject, ResourceName: string): UserInterfaceSettings;
-	static GetDefaultObject(): UserInterfaceSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UserInterfaceSettings;
-	static C(Other: UObject | any): UserInterfaceSettings;
-}
-
-declare type EVectorFieldConstructionOp = 'VFCO_Extrude' | 'VFCO_Revolve';
-declare var EVectorFieldConstructionOp : { VFCO_Extrude:'VFCO_Extrude',VFCO_Revolve:'VFCO_Revolve', };
-declare class VectorFieldStatic extends VectorField { 
-	SizeX: number;
-	SizeY: number;
-	SizeZ: number;
-	SourceFilePath: string;
-	AssetImportData: AssetImportData;
-	static Load(ResourceName: string): VectorFieldStatic;
-	static Find(Outer: UObject, ResourceName: string): VectorFieldStatic;
-	static GetDefaultObject(): VectorFieldStatic;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorFieldStatic;
-	static C(Other: UObject | any): VectorFieldStatic;
-}
-
-declare class VectorFieldAnimated extends VectorField { 
-	Texture: Texture2D;
-	ConstructionOp: EVectorFieldConstructionOp;
-	VolumeSizeX: number;
-	VolumeSizeY: number;
-	VolumeSizeZ: number;
-	SubImagesX: number;
-	SubImagesY: number;
-	FrameCount: number;
-	FramesPerSecond: number;
-	bLoop: boolean;
-	NoiseField: VectorFieldStatic;
-	NoiseScale: number;
-	NoiseMax: number;
-	static Load(ResourceName: string): VectorFieldAnimated;
-	static Find(Outer: UObject, ResourceName: string): VectorFieldAnimated;
-	static GetDefaultObject(): VectorFieldAnimated;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorFieldAnimated;
-	static C(Other: UObject | any): VectorFieldAnimated;
-}
-
-declare class VectorFieldComponent extends PrimitiveComponent { 
-	VectorField: VectorField;
-	Intensity: number;
-	Tightness: number;
-	bPreviewVectorField: boolean;
-	static Load(ResourceName: string): VectorFieldComponent;
-	static Find(Outer: UObject, ResourceName: string): VectorFieldComponent;
-	static GetDefaultObject(): VectorFieldComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorFieldComponent;
-	SetIntensity(NewIntensity: number): void;
-	static C(Other: UObject | any): VectorFieldComponent;
-}
-
-declare class VectorFieldVolume extends Actor { 
-	VectorFieldComponent: VectorFieldComponent;
-	SpriteComponent: BillboardComponent;
-	static GetDefaultObject(): VectorFieldVolume;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorFieldVolume;
-	static C(Other: UObject | any): VectorFieldVolume;
-}
-
-declare class VisualLoggerAutomationTests extends UObject { 
-	static Load(ResourceName: string): VisualLoggerAutomationTests;
-	static Find(Outer: UObject, ResourceName: string): VisualLoggerAutomationTests;
-	static GetDefaultObject(): VisualLoggerAutomationTests;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisualLoggerAutomationTests;
-	static C(Other: UObject | any): VisualLoggerAutomationTests;
-}
-
-declare class VisualLoggerDebugSnapshotInterface extends Interface { 
-	static Load(ResourceName: string): VisualLoggerDebugSnapshotInterface;
-	static Find(Outer: UObject, ResourceName: string): VisualLoggerDebugSnapshotInterface;
-	static GetDefaultObject(): VisualLoggerDebugSnapshotInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisualLoggerDebugSnapshotInterface;
-	static C(Other: UObject | any): VisualLoggerDebugSnapshotInterface;
-}
-
-declare class VisualLoggerKismetLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): VisualLoggerKismetLibrary;
-	static Find(Outer: UObject, ResourceName: string): VisualLoggerKismetLibrary;
-	static GetDefaultObject(): VisualLoggerKismetLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisualLoggerKismetLibrary;
-	static LogText(WorldContextObject: UObject,Text: string,LogCategory: string): void;
-	static LogLocation(WorldContextObject: UObject,Location: Vector,Text: string,ObjectColor: LinearColor,Radius: number,LogCategory: string): void;
-	static LogBox(WorldContextObject: UObject,BoxShape: Box,Text: string,ObjectColor: LinearColor,LogCategory: string): void;
-	static C(Other: UObject | any): VisualLoggerKismetLibrary;
-}
-
-declare class VoiceChannel extends Channel { 
-	static Load(ResourceName: string): VoiceChannel;
-	static Find(Outer: UObject, ResourceName: string): VoiceChannel;
-	static GetDefaultObject(): VoiceChannel;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoiceChannel;
-	static C(Other: UObject | any): VoiceChannel;
-}
-
-declare type EWindSourceType = 'Directional' | 'Point';
-declare var EWindSourceType : { Directional:'Directional',Point:'Point', };
-declare class WindDirectionalSourceComponent extends SceneComponent { 
-	Strength: number;
-	Speed: number;
-	MinGustAmount: number;
-	MaxGustAmount: number;
-	Radius: number;
-	bPointWind: boolean;
-	static Load(ResourceName: string): WindDirectionalSourceComponent;
-	static Find(Outer: UObject, ResourceName: string): WindDirectionalSourceComponent;
-	static GetDefaultObject(): WindDirectionalSourceComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WindDirectionalSourceComponent;
-	SetWindType(InNewType: InNewType): void;
-	SetStrength(InNewStrength: number): void;
-	SetSpeed(InNewSpeed: number): void;
-	SetRadius(InNewRadius: number): void;
-	SetMinimumGustAmount(InNewMinGust: number): void;
-	SetMaximumGustAmount(InNewMaxGust: number): void;
-	static C(Other: UObject | any): WindDirectionalSourceComponent;
-}
-
-declare class WindDirectionalSource extends Info { 
-	Component: WindDirectionalSourceComponent;
-	ArrowComponent: ArrowComponent;
-	static GetDefaultObject(): WindDirectionalSource;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WindDirectionalSource;
-	static C(Other: UObject | any): WindDirectionalSource;
-}
-
-declare class MoviePlayerSettings extends UObject { 
-	bWaitForMoviesToComplete: boolean;
-	bMoviesAreSkippable: boolean;
-	StartupMovies: string[];
-	static Load(ResourceName: string): MoviePlayerSettings;
-	static Find(Outer: UObject, ResourceName: string): MoviePlayerSettings;
-	static GetDefaultObject(): MoviePlayerSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MoviePlayerSettings;
-	static C(Other: UObject | any): MoviePlayerSettings;
-}
-
-declare class SoundFactory extends Factory { 
-	bAutoCreateCue: boolean;
-	bIncludeAttenuationNode: boolean;
-	bIncludeLoopingNode: boolean;
-	bIncludeModulatorNode: boolean;
-	CueVolume: number;
-	CuePackageSuffix: string;
-	static Load(ResourceName: string): SoundFactory;
-	static Find(Outer: UObject, ResourceName: string): SoundFactory;
-	static GetDefaultObject(): SoundFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundFactory;
-	static C(Other: UObject | any): SoundFactory;
-}
-
-declare class ReimportSoundFactory extends SoundFactory { 
-	static Load(ResourceName: string): ReimportSoundFactory;
-	static Find(Outer: UObject, ResourceName: string): ReimportSoundFactory;
-	static GetDefaultObject(): ReimportSoundFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportSoundFactory;
-	static C(Other: UObject | any): ReimportSoundFactory;
-}
-
-declare class SoundSurroundFactory extends Factory { 
-	CueVolume: number;
-	static Load(ResourceName: string): SoundSurroundFactory;
-	static Find(Outer: UObject, ResourceName: string): SoundSurroundFactory;
-	static GetDefaultObject(): SoundSurroundFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSurroundFactory;
-	static C(Other: UObject | any): SoundSurroundFactory;
-}
-
-declare class ReimportSoundSurroundFactory extends SoundSurroundFactory { 
-	ReimportPaths: string[];
-	static Load(ResourceName: string): ReimportSoundSurroundFactory;
-	static Find(Outer: UObject, ResourceName: string): ReimportSoundSurroundFactory;
-	static GetDefaultObject(): ReimportSoundSurroundFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportSoundSurroundFactory;
-	static C(Other: UObject | any): ReimportSoundSurroundFactory;
-}
-
-declare class DialogueVoiceFactory extends Factory { 
-	static Load(ResourceName: string): DialogueVoiceFactory;
-	static Find(Outer: UObject, ResourceName: string): DialogueVoiceFactory;
-	static GetDefaultObject(): DialogueVoiceFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DialogueVoiceFactory;
-	static C(Other: UObject | any): DialogueVoiceFactory;
-}
-
-declare class DialogueWaveFactory extends Factory { 
-	InitialSoundWave: SoundWave;
-	InitialSpeakerVoice: DialogueVoice;
-	HasSetInitialTargetVoice: boolean;
-	InitialTargetVoices: DialogueVoice[];
-	static Load(ResourceName: string): DialogueWaveFactory;
-	static Find(Outer: UObject, ResourceName: string): DialogueWaveFactory;
-	static GetDefaultObject(): DialogueWaveFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DialogueWaveFactory;
-	static C(Other: UObject | any): DialogueWaveFactory;
-}
-
-declare class ReverbEffectFactory extends Factory { 
-	static Load(ResourceName: string): ReverbEffectFactory;
-	static Find(Outer: UObject, ResourceName: string): ReverbEffectFactory;
-	static GetDefaultObject(): ReverbEffectFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReverbEffectFactory;
-	static C(Other: UObject | any): ReverbEffectFactory;
-}
-
-declare class SoundAttenuationFactory extends Factory { 
-	static Load(ResourceName: string): SoundAttenuationFactory;
-	static Find(Outer: UObject, ResourceName: string): SoundAttenuationFactory;
-	static GetDefaultObject(): SoundAttenuationFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundAttenuationFactory;
-	static C(Other: UObject | any): SoundAttenuationFactory;
-}
-
-declare class SoundClassFactory extends Factory { 
-	static Load(ResourceName: string): SoundClassFactory;
-	static Find(Outer: UObject, ResourceName: string): SoundClassFactory;
-	static GetDefaultObject(): SoundClassFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundClassFactory;
-	static C(Other: UObject | any): SoundClassFactory;
-}
-
-declare class SoundClassGraph extends EdGraph { 
-	static Load(ResourceName: string): SoundClassGraph;
-	static Find(Outer: UObject, ResourceName: string): SoundClassGraph;
-	static GetDefaultObject(): SoundClassGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundClassGraph;
-	static C(Other: UObject | any): SoundClassGraph;
-}
-
-declare class SoundClassGraphNode extends EdGraphNode { 
-	SoundClass: SoundClass;
-	static Load(ResourceName: string): SoundClassGraphNode;
-	static Find(Outer: UObject, ResourceName: string): SoundClassGraphNode;
-	static GetDefaultObject(): SoundClassGraphNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundClassGraphNode;
-	static C(Other: UObject | any): SoundClassGraphNode;
-}
-
-declare class SoundClassGraphSchema extends EdGraphSchema { 
-	static Load(ResourceName: string): SoundClassGraphSchema;
-	static Find(Outer: UObject, ResourceName: string): SoundClassGraphSchema;
-	static GetDefaultObject(): SoundClassGraphSchema;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundClassGraphSchema;
-	static C(Other: UObject | any): SoundClassGraphSchema;
-}
-
-declare class SoundConcurrencyFactory extends Factory { 
-	static Load(ResourceName: string): SoundConcurrencyFactory;
-	static Find(Outer: UObject, ResourceName: string): SoundConcurrencyFactory;
-	static GetDefaultObject(): SoundConcurrencyFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundConcurrencyFactory;
-	static C(Other: UObject | any): SoundConcurrencyFactory;
-}
-
-declare class SoundCueFactoryNew extends Factory { 
-	InitialSoundWave: SoundWave;
-	InitialDialogueWave: DialogueWave;
-	static Load(ResourceName: string): SoundCueFactoryNew;
-	static Find(Outer: UObject, ResourceName: string): SoundCueFactoryNew;
-	static GetDefaultObject(): SoundCueFactoryNew;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueFactoryNew;
-	static C(Other: UObject | any): SoundCueFactoryNew;
-}
-
-declare class SoundCueGraph extends EdGraph { 
-	static Load(ResourceName: string): SoundCueGraph;
-	static Find(Outer: UObject, ResourceName: string): SoundCueGraph;
-	static GetDefaultObject(): SoundCueGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueGraph;
-	static C(Other: UObject | any): SoundCueGraph;
-}
-
-declare class SoundCueGraphNode_Base extends EdGraphNode { 
-	static Load(ResourceName: string): SoundCueGraphNode_Base;
-	static Find(Outer: UObject, ResourceName: string): SoundCueGraphNode_Base;
-	static GetDefaultObject(): SoundCueGraphNode_Base;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueGraphNode_Base;
-	static C(Other: UObject | any): SoundCueGraphNode_Base;
-}
-
-declare class SoundCueGraphNode extends SoundCueGraphNode_Base { 
-	SoundNode: SoundNode;
-	static Load(ResourceName: string): SoundCueGraphNode;
-	static Find(Outer: UObject, ResourceName: string): SoundCueGraphNode;
-	static GetDefaultObject(): SoundCueGraphNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueGraphNode;
-	static C(Other: UObject | any): SoundCueGraphNode;
-}
-
-declare class SoundCueGraphNode_Root extends SoundCueGraphNode_Base { 
-	static Load(ResourceName: string): SoundCueGraphNode_Root;
-	static Find(Outer: UObject, ResourceName: string): SoundCueGraphNode_Root;
-	static GetDefaultObject(): SoundCueGraphNode_Root;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueGraphNode_Root;
-	static C(Other: UObject | any): SoundCueGraphNode_Root;
-}
-
-declare class SoundCueGraphSchema extends EdGraphSchema { 
-	static Load(ResourceName: string): SoundCueGraphSchema;
-	static Find(Outer: UObject, ResourceName: string): SoundCueGraphSchema;
-	static GetDefaultObject(): SoundCueGraphSchema;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueGraphSchema;
-	static C(Other: UObject | any): SoundCueGraphSchema;
-}
-
-declare class SoundMixFactory extends Factory { 
-	static Load(ResourceName: string): SoundMixFactory;
-	static Find(Outer: UObject, ResourceName: string): SoundMixFactory;
-	static GetDefaultObject(): SoundMixFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundMixFactory;
-	static C(Other: UObject | any): SoundMixFactory;
-}
-
-declare class SoundSourceEffectFactory extends Factory { 
-	SoundEffectSourcepresetClass: UnrealEngineClass;
-	static Load(ResourceName: string): SoundSourceEffectFactory;
-	static Find(Outer: UObject, ResourceName: string): SoundSourceEffectFactory;
-	static GetDefaultObject(): SoundSourceEffectFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSourceEffectFactory;
-	static C(Other: UObject | any): SoundSourceEffectFactory;
-}
-
-declare class SoundSourceEffectChainFactory extends Factory { 
-	static Load(ResourceName: string): SoundSourceEffectChainFactory;
-	static Find(Outer: UObject, ResourceName: string): SoundSourceEffectChainFactory;
-	static GetDefaultObject(): SoundSourceEffectChainFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSourceEffectChainFactory;
-	static C(Other: UObject | any): SoundSourceEffectChainFactory;
-}
-
-declare class SoundSubmixEffectFactory extends Factory { 
-	SoundEffectSubmixPresetClass: UnrealEngineClass;
-	static Load(ResourceName: string): SoundSubmixEffectFactory;
-	static Find(Outer: UObject, ResourceName: string): SoundSubmixEffectFactory;
-	static GetDefaultObject(): SoundSubmixEffectFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmixEffectFactory;
-	static C(Other: UObject | any): SoundSubmixEffectFactory;
-}
-
-declare class SoundSubmixFactory extends Factory { 
-	static Load(ResourceName: string): SoundSubmixFactory;
-	static Find(Outer: UObject, ResourceName: string): SoundSubmixFactory;
-	static GetDefaultObject(): SoundSubmixFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmixFactory;
-	static C(Other: UObject | any): SoundSubmixFactory;
-}
-
-declare class SoundSubmixGraph extends EdGraph { 
-	static Load(ResourceName: string): SoundSubmixGraph;
-	static Find(Outer: UObject, ResourceName: string): SoundSubmixGraph;
-	static GetDefaultObject(): SoundSubmixGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmixGraph;
-	static C(Other: UObject | any): SoundSubmixGraph;
-}
-
-declare class SoundSubmixGraphNode extends EdGraphNode { 
-	SoundSubmix: SoundSubmix;
-	static Load(ResourceName: string): SoundSubmixGraphNode;
-	static Find(Outer: UObject, ResourceName: string): SoundSubmixGraphNode;
-	static GetDefaultObject(): SoundSubmixGraphNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmixGraphNode;
-	static C(Other: UObject | any): SoundSubmixGraphNode;
-}
-
-declare class SoundSubmixGraphSchema extends EdGraphSchema { 
-	static Load(ResourceName: string): SoundSubmixGraphSchema;
-	static Find(Outer: UObject, ResourceName: string): SoundSubmixGraphSchema;
-	static GetDefaultObject(): SoundSubmixGraphSchema;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmixGraphSchema;
-	static C(Other: UObject | any): SoundSubmixGraphSchema;
-}
-
-declare class AnimationBlueprintLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): AnimationBlueprintLibrary;
-	static Find(Outer: UObject, ResourceName: string): AnimationBlueprintLibrary;
-	static GetDefaultObject(): AnimationBlueprintLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationBlueprintLibrary;
-	static SetRootMotionLockType(AnimationSequence: AnimSequence,RootMotionLockType: ERootMotionRootLock): void;
-	static SetRootMotionEnabled(AnimationSequence: AnimSequence,bEnabled: boolean): void;
-	static SetRateScale(AnimationSequence: AnimSequence,RateScale: number): void;
-	static SetIsRootMotionLockForced(AnimationSequence: AnimSequence,bForced: boolean): void;
-	static SetCompressionScheme(AnimationSequence: AnimSequence,CompressionScheme: AnimCompress): void;
-	static SetAnimationInterpolationType(AnimationSequence: AnimSequence,InterpolationType: InterpolationType): void;
-	static SetAdditiveBasePoseType(AnimationSequence: AnimSequence,AdditiveBasePoseType: EAdditiveBasePoseType): void;
-	static SetAdditiveAnimationType(AnimationSequence: AnimSequence,AdditiveAnimationType: EAdditiveAnimationType): void;
-	static RemoveVirtualBones(AnimationSequence: AnimSequence,VirtualBoneNames: string[]): void;
-	static RemoveVirtualBone(AnimationSequence: AnimSequence,VirtualBoneName: string): void;
-	static RemoveMetaDataOfClass(AnimationSequence: AnimSequence,MetaDataClass: UnrealEngineClass): void;
-	static RemoveMetaData(AnimationSequence: AnimSequence,MetaDataObject: AnimMetaData): void;
-	static RemoveCurve(AnimationSequence: AnimSequence,CurveName: string,bRemoveNameFromSkeleton: boolean): void;
-	static RemoveAnimationSyncMarkersByTrack(AnimationSequence: AnimSequence,NotifyTrackName: string): number;
-	static RemoveAnimationSyncMarkersByName(AnimationSequence: AnimSequence,MarkerName: string): number;
-	static RemoveAnimationNotifyTrack(AnimationSequence: AnimSequence,NotifyTrackName: string): void;
-	static RemoveAnimationNotifyEventsByTrack(AnimationSequence: AnimSequence,NotifyTrackName: string): number;
-	static RemoveAnimationNotifyEventsByName(AnimationSequence: AnimSequence,NotifyName: string): number;
-	static RemoveAllVirtualBones(AnimationSequence: AnimSequence): void;
-	static RemoveAllMetaData(AnimationSequence: AnimSequence): void;
-	static RemoveAllCurveData(AnimationSequence: AnimSequence,bRemoveNamesFromSkeleton: boolean): void;
-	static RemoveAllAnimationSyncMarkers(AnimationSequence: AnimSequence): void;
-	static RemoveAllAnimationNotifyTracks(AnimationSequence: AnimSequence): void;
-	static IsValidTime(AnimationSequence: AnimSequence,Time: number,IsValid?: boolean): {IsValid: boolean};
-	static IsValidRawAnimationTrackName(AnimationSequence: AnimSequence,TrackName: string): boolean;
-	static IsValidAnimNotifyTrackName(AnimationSequence: AnimSequence,NotifyTrackName: string): boolean;
-	static IsValidAnimationSyncMarkerName(AnimationSequence: AnimSequence,MarkerName: string): boolean;
-	static IsRootMotionLockForced(AnimationSequence: AnimSequence): boolean;
-	static IsRootMotionEnabled(AnimationSequence: AnimSequence): boolean;
-	static GetVectorKeys(AnimationSequence: AnimSequence,CurveName: string,Times?: number[],Values?: Vector[]): {Times: number[], Values: Vector[]};
-	static GetUniqueMarkerNames(AnimationSequence: AnimSequence,MarkerNames?: string[]): {MarkerNames: string[]};
-	static GetTransformationKeys(AnimationSequence: AnimSequence,CurveName: string,Times?: number[],Values?: Transform[]): {Times: number[], Values: Transform[]};
-	static GetTimeAtFrame(AnimationSequence: AnimSequence,Frame: number,Time?: number): {Time: number};
-	static GetSequenceLength(AnimationSequence: AnimSequence,Length?: number): {Length: number};
-	static GetRootMotionLockType(AnimationSequence: AnimSequence,LockType?: ERootMotionRootLock): {LockType: ERootMotionRootLock};
-	static GetRawTrackScaleData(AnimationSequence: AnimSequence,TrackName: string,ScaleData?: Vector[]): {ScaleData: Vector[]};
-	static GetRawTrackRotationData(AnimationSequence: AnimSequence,TrackName: string,RotationData?: Quat[]): {RotationData: Quat[]};
-	static GetRawTrackPositionData(AnimationSequence: AnimSequence,TrackName: string,PositionData?: Vector[]): {PositionData: Vector[]};
-	static GetRawTrackData(AnimationSequence: AnimSequence,TrackName: string,PositionKeys?: Vector[],RotationKeys?: Quat[],ScalingKeys?: Vector[]): {PositionKeys: Vector[], RotationKeys: Quat[], ScalingKeys: Vector[]};
-	static GetRateScale(AnimationSequence: AnimSequence,RateScale?: number): {RateScale: number};
-	static GetNumFrames(AnimationSequence: AnimSequence,NumFrames?: number): {NumFrames: number};
-	static GetMetaDataOfClass(AnimationSequence: AnimSequence,MetaDataClass: UnrealEngineClass,MetaDataOfClass: AnimMetaData[]): void;
-	static GetMetaData(AnimationSequence: AnimSequence,MetaData: AnimMetaData[]): void;
-	static GetFrameAtTime(AnimationSequence: AnimSequence,Time: number,Frame?: number): {Frame: number};
-	static GetFloatKeys(AnimationSequence: AnimSequence,CurveName: string,Times?: number[],Values?: number[]): {Times: number[], Values: number[]};
-	static GetCompressionScheme(AnimationSequence: AnimSequence,CompressionScheme?: AnimCompress): {CompressionScheme: AnimCompress};
-	static GetBonePosesForTime(AnimationSequence: AnimSequence,BoneNames: string[],Time: number,bExtractRootMotion: boolean,Poses?: Transform[]): {Poses: Transform[]};
-	static GetBonePosesForFrame(AnimationSequence: AnimSequence,BoneNames: string[],Frame: number,bExtractRootMotion: boolean,Poses?: Transform[]): {Poses: Transform[]};
-	static GetBonePoseForTime(AnimationSequence: AnimSequence,BoneName: string,Time: number,bExtractRootMotion: boolean,Pose?: Transform): {Pose: Transform};
-	static GetBonePoseForFrame(AnimationSequence: AnimSequence,BoneName: string,Frame: number,bExtractRootMotion: boolean,Pose?: Transform): {Pose: Transform};
-	static GetAnimationTrackNames(AnimationSequence: AnimSequence,TrackNames?: string[]): {TrackNames: string[]};
-	static GetAnimationSyncMarkersForTrack(AnimationSequence: AnimSequence,NotifyTrackName: string,Markers?: AnimSyncMarker[]): {Markers: AnimSyncMarker[]};
-	static GetAnimationSyncMarkers(AnimationSequence: AnimSequence,Markers?: AnimSyncMarker[]): {Markers: AnimSyncMarker[]};
-	static GetAnimationNotifyTrackNames(AnimationSequence: AnimSequence,TrackNames?: string[]): {TrackNames: string[]};
-	static GetAnimationNotifyEventsForTrack(AnimationSequence: AnimSequence,NotifyTrackName: string,Events?: AnimNotifyEvent[]): {Events: AnimNotifyEvent[]};
-	static GetAnimationNotifyEvents(AnimationSequence: AnimSequence,NotifyEvents?: AnimNotifyEvent[]): {NotifyEvents: AnimNotifyEvent[]};
-	static GetAnimationNotifyEventNames(AnimationSequence: AnimSequence,EventNames?: string[]): {EventNames: string[]};
-	static GetAnimationInterpolationType(AnimationSequence: AnimSequence,InterpolationType?: InterpolationType): {InterpolationType: InterpolationType};
-	static GetAdditiveBasePoseType(AnimationSequence: AnimSequence,AdditiveBasePoseType?: EAdditiveBasePoseType): {AdditiveBasePoseType: EAdditiveBasePoseType};
-	static GetAdditiveAnimationType(AnimationSequence: AnimSequence,AdditiveAnimationType?: EAdditiveAnimationType): {AdditiveAnimationType: EAdditiveAnimationType};
-	static FindBonePathToRoot(AnimationSequence: AnimSequence,BoneName: string,BonePath?: string[]): {BonePath: string[]};
-	static DoesCurveExist(AnimationSequence: AnimSequence,CurveName: string,CurveType: CurveType): boolean;
-	static DoesBoneNameExist(AnimationSequence: AnimSequence,BoneName: string,bExists?: boolean): {bExists: boolean};
-	static ContainsMetaDataOfClass(AnimationSequence: AnimSequence,MetaDataClass: UnrealEngineClass): boolean;
-	static AddVirtualBone(AnimationSequence: AnimSequence,SourceBoneName: string,TargetBoneName: string,VirtualBoneName?: string): {VirtualBoneName: string};
-	static AddVectorCurveKeys(AnimationSequence: AnimSequence,CurveName: string,Times: number[],Vectors: Vector[]): void;
-	static AddVectorCurveKey(AnimationSequence: AnimSequence,CurveName: string,Time: number,Vector: Vector): void;
-	static AddTransformationCurveKeys(AnimationSequence: AnimSequence,CurveName: string,Times: number[],Transforms: Transform[]): void;
-	static AddTransformationCurveKey(AnimationSequence: AnimSequence,CurveName: string,Time: number,Transform: Transform): void;
-	static AddMetaDataObject(AnimationSequence: AnimSequence,MetaDataObject: AnimMetaData): void;
-	static AddMetaData(AnimationSequence: AnimSequence,MetaDataClass: UnrealEngineClass,MetaDataInstance: AnimMetaData): void;
-	static AddFloatCurveKeys(AnimationSequence: AnimSequence,CurveName: string,Times: number[],Values: number[]): void;
-	static AddFloatCurveKey(AnimationSequence: AnimSequence,CurveName: string,Time: number,Value: number): void;
-	static AddCurve(AnimationSequence: AnimSequence,CurveName: string,CurveType: CurveType,bMetaDataCurve: boolean): void;
-	static AddAnimationSyncMarker(AnimationSequence: AnimSequence,MarkerName: string,Time: number,NotifyTrackName: string): void;
-	static AddAnimationNotifyTrack(AnimationSequence: AnimSequence,NotifyTrackName: string,TrackColor: LinearColor): void;
-	static AddAnimationNotifyEventObject(AnimationSequence: AnimSequence,StartTime: number,Notify: AnimNotify,NotifyTrackName: string): void;
-	static AddAnimationNotifyEvent(AnimationSequence: AnimSequence,NotifyTrackName: string,StartTime: number,Duration: number,NotifyClass: UnrealEngineClass): AnimNotify;
-	static C(Other: UObject | any): AnimationBlueprintLibrary;
-}
-
-declare class AnimationModifier extends UObject { 
-	RevisionGuid: Guid;
-	AppliedGuid: Guid;
-	StoredNativeRevision: number;
-	static Load(ResourceName: string): AnimationModifier;
-	static Find(Outer: UObject, ResourceName: string): AnimationModifier;
-	static GetDefaultObject(): AnimationModifier;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationModifier;
-	OnRevert(AnimationSequence: AnimSequence): void;
-	OnApply(AnimationSequence: AnimSequence): void;
-	static C(Other: UObject | any): AnimationModifier;
-}
-
-declare class AnimationModifiersAssetUserData extends AssetUserData { 
-	AnimationModifierInstances: AnimationModifier[];
-	static Load(ResourceName: string): AnimationModifiersAssetUserData;
-	static Find(Outer: UObject, ResourceName: string): AnimationModifiersAssetUserData;
-	static GetDefaultObject(): AnimationModifiersAssetUserData;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationModifiersAssetUserData;
-	static C(Other: UObject | any): AnimationModifiersAssetUserData;
-}
-
-declare class NamedInterface { 
-	InterfaceName: string;
-	InterfaceObject: UObject;
-	clone() : NamedInterface;
-	static C(Other: UObject | any): NamedInterface;
-}
-
-declare class NamedInterfaceDef { 
-	InterfaceName: string;
-	InterfaceClassName: string;
-	clone() : NamedInterfaceDef;
-	static C(Other: UObject | any): NamedInterfaceDef;
-}
-
-declare class NamedInterfaces extends UObject { 
-	NamedInterfaces: NamedInterface[];
-	NamedInterfaceDefs: NamedInterfaceDef[];
-	static Load(ResourceName: string): NamedInterfaces;
-	static Find(Outer: UObject, ResourceName: string): NamedInterfaces;
-	static GetDefaultObject(): NamedInterfaces;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NamedInterfaces;
-	static C(Other: UObject | any): NamedInterfaces;
-}
-
-declare class TurnBasedMatchInterface extends Interface { 
-	static Load(ResourceName: string): TurnBasedMatchInterface;
-	static Find(Outer: UObject, ResourceName: string): TurnBasedMatchInterface;
-	static GetDefaultObject(): TurnBasedMatchInterface;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TurnBasedMatchInterface;
-	OnMatchReceivedTurn(Match: string,bDidBecomeActive: boolean): void;
-	OnMatchEnded(Match: string): void;
-	static C(Other: UObject | any): TurnBasedMatchInterface;
-}
-
-declare class AchievementBlueprintLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): AchievementBlueprintLibrary;
-	static Find(Outer: UObject, ResourceName: string): AchievementBlueprintLibrary;
-	static GetDefaultObject(): AchievementBlueprintLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AchievementBlueprintLibrary;
-	static GetCachedAchievementProgress(WorldContextObject: UObject,PlayerController: PlayerController,AchievementID: string,bFoundID?: boolean,Progress?: number): {bFoundID: boolean, Progress: number};
-	static GetCachedAchievementDescription(WorldContextObject: UObject,PlayerController: PlayerController,AchievementID: string,bFoundID?: boolean,Title?: string,LockedDescription?: string,UnlockedDescription?: string,bHidden?: boolean): {bFoundID: boolean, Title: string, LockedDescription: string, UnlockedDescription: string, bHidden: boolean};
-	static C(Other: UObject | any): AchievementBlueprintLibrary;
-}
-
-declare class AchievementQueryCallbackProxy extends OnlineBlueprintCallProxyBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
-	OnFailure: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): AchievementQueryCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): AchievementQueryCallbackProxy;
-	static GetDefaultObject(): AchievementQueryCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AchievementQueryCallbackProxy;
-	static CacheAchievements(WorldContextObject: UObject,PlayerController: PlayerController): AchievementQueryCallbackProxy;
-	static CacheAchievementDescriptions(WorldContextObject: UObject,PlayerController: PlayerController): AchievementQueryCallbackProxy;
-	static C(Other: UObject | any): AchievementQueryCallbackProxy;
-}
-
-declare class AchievementWriteCallbackProxy extends OnlineBlueprintCallProxyBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<(WrittenAchievementName: string, WrittenProgress: number, WrittenUserTag: number) => void>;
-	OnFailure: UnrealEngineMulticastDelegate<(WrittenAchievementName: string, WrittenProgress: number, WrittenUserTag: number) => void>;
-	static Load(ResourceName: string): AchievementWriteCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): AchievementWriteCallbackProxy;
-	static GetDefaultObject(): AchievementWriteCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AchievementWriteCallbackProxy;
-	static WriteAchievementProgress(WorldContextObject: UObject,PlayerController: PlayerController,AchievementName: string,Progress: number,UserTag: number): AchievementWriteCallbackProxy;
-	static C(Other: UObject | any): AchievementWriteCallbackProxy;
-}
-
-declare class ConnectionCallbackProxy extends OnlineBlueprintCallProxyBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<(ErrorCode: number) => void>;
-	OnFailure: UnrealEngineMulticastDelegate<(ErrorCode: number) => void>;
-	static Load(ResourceName: string): ConnectionCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): ConnectionCallbackProxy;
-	static GetDefaultObject(): ConnectionCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConnectionCallbackProxy;
-	static ConnectToService(WorldContextObject: UObject,PlayerController: PlayerController): ConnectionCallbackProxy;
-	static C(Other: UObject | any): ConnectionCallbackProxy;
-}
-
-declare class CreateSessionCallbackProxy extends OnlineBlueprintCallProxyBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
-	OnFailure: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): CreateSessionCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): CreateSessionCallbackProxy;
-	static GetDefaultObject(): CreateSessionCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CreateSessionCallbackProxy;
-	static CreateSession(WorldContextObject: UObject,PlayerController: PlayerController,PublicConnections: number,bUseLAN: boolean): CreateSessionCallbackProxy;
-	static C(Other: UObject | any): CreateSessionCallbackProxy;
-}
-
-declare class DestroySessionCallbackProxy extends OnlineBlueprintCallProxyBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
-	OnFailure: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): DestroySessionCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): DestroySessionCallbackProxy;
-	static GetDefaultObject(): DestroySessionCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DestroySessionCallbackProxy;
-	static DestroySession(WorldContextObject: UObject,PlayerController: PlayerController): DestroySessionCallbackProxy;
-	static C(Other: UObject | any): DestroySessionCallbackProxy;
-}
-
-declare class EndMatchCallbackProxy extends OnlineBlueprintCallProxyBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
-	OnFailure: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): EndMatchCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): EndMatchCallbackProxy;
-	static GetDefaultObject(): EndMatchCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EndMatchCallbackProxy;
-	static C(Other: UObject | any): EndMatchCallbackProxy;
-}
-
-declare class EndTurnCallbackProxy extends OnlineBlueprintCallProxyBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
-	OnFailure: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): EndTurnCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): EndTurnCallbackProxy;
-	static GetDefaultObject(): EndTurnCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EndTurnCallbackProxy;
-	static C(Other: UObject | any): EndTurnCallbackProxy;
-}
-
-declare class BlueprintSessionResult { 
-	clone() : BlueprintSessionResult;
-	static C(Other: UObject | any): BlueprintSessionResult;
-}
-
-declare class FindSessionsCallbackProxy extends OnlineBlueprintCallProxyBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<(Results: BlueprintSessionResult[]) => void>;
-	OnFailure: UnrealEngineMulticastDelegate<(Results: BlueprintSessionResult[]) => void>;
-	static Load(ResourceName: string): FindSessionsCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): FindSessionsCallbackProxy;
-	static GetDefaultObject(): FindSessionsCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FindSessionsCallbackProxy;
-	static GetServerName(Result: BlueprintSessionResult): string;
-	static GetPingInMs(Result: BlueprintSessionResult): number;
-	static GetMaxPlayers(Result: BlueprintSessionResult): number;
-	static GetCurrentPlayers(Result: BlueprintSessionResult): number;
-	static FindSessions(WorldContextObject: UObject,PlayerController: PlayerController,MaxResults: number,bUseLAN: boolean): FindSessionsCallbackProxy;
-	static C(Other: UObject | any): FindSessionsCallbackProxy;
-}
-
-declare class FindTurnBasedMatchCallbackProxy extends OnlineBlueprintCallProxyBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<(MatchID: string) => void>;
-	OnFailure: UnrealEngineMulticastDelegate<(MatchID: string) => void>;
-	static Load(ResourceName: string): FindTurnBasedMatchCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): FindTurnBasedMatchCallbackProxy;
-	static GetDefaultObject(): FindTurnBasedMatchCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FindTurnBasedMatchCallbackProxy;
-	static C(Other: UObject | any): FindTurnBasedMatchCallbackProxy;
-}
-
-declare type EInAppPurchaseState = 'Unknown' | 'Success' | 'Failed' | 'Cancelled' | 'Invalid' | 'NotAllowed' | 'Restored' | 'AlreadyOwned';
-declare var EInAppPurchaseState : { Unknown:'Unknown',Success:'Success',Failed:'Failed',Cancelled:'Cancelled',Invalid:'Invalid',NotAllowed:'NotAllowed',Restored:'Restored',AlreadyOwned:'AlreadyOwned', };
-declare class InAppPurchaseProductInfo { 
-	Identifier: string;
-	TransactionIdentifier: string;
-	DisplayName: string;
-	DisplayDescription: string;
-	DisplayPrice: string;
-	RawPrice: number;
-	CurrencyCode: string;
-	CurrencySymbol: string;
-	DecimalSeparator: string;
-	GroupingSeparator: string;
-	ReceiptData: string;
-	clone() : InAppPurchaseProductInfo;
-	static C(Other: UObject | any): InAppPurchaseProductInfo;
-}
-
-declare class InAppPurchaseProductRequest { 
-	ProductIdentifier: string;
-	bIsConsumable: boolean;
-	clone() : InAppPurchaseProductRequest;
-	static C(Other: UObject | any): InAppPurchaseProductRequest;
-}
-
-declare class InAppPurchaseCallbackProxy extends UObject { 
-	OnSuccess: UnrealEngineMulticastDelegate<(CompletionStatus: EInAppPurchaseState, InAppPurchaseInformation: InAppPurchaseProductInfo) => void>;
-	OnFailure: UnrealEngineMulticastDelegate<(CompletionStatus: EInAppPurchaseState, InAppPurchaseInformation: InAppPurchaseProductInfo) => void>;
-	static Load(ResourceName: string): InAppPurchaseCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): InAppPurchaseCallbackProxy;
-	static GetDefaultObject(): InAppPurchaseCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InAppPurchaseCallbackProxy;
-	static CreateProxyObjectForInAppPurchase(PlayerController: PlayerController,ProductRequest: InAppPurchaseProductRequest): InAppPurchaseCallbackProxy;
-	static C(Other: UObject | any): InAppPurchaseCallbackProxy;
-}
-
-declare class InAppPurchaseQueryCallbackProxy extends UObject { 
-	OnSuccess: UnrealEngineMulticastDelegate<(InAppPurchaseInformation: InAppPurchaseProductInfo[]) => void>;
-	OnFailure: UnrealEngineMulticastDelegate<(InAppPurchaseInformation: InAppPurchaseProductInfo[]) => void>;
-	static Load(ResourceName: string): InAppPurchaseQueryCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): InAppPurchaseQueryCallbackProxy;
-	static GetDefaultObject(): InAppPurchaseQueryCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InAppPurchaseQueryCallbackProxy;
-	static CreateProxyObjectForInAppPurchaseQuery(PlayerController: PlayerController,ProductIdentifiers: string[]): InAppPurchaseQueryCallbackProxy;
-	static C(Other: UObject | any): InAppPurchaseQueryCallbackProxy;
-}
-
-declare class InAppPurchaseRestoreInfo { 
-	Identifier: string;
-	ReceiptData: string;
-	TransactionIdentifier: string;
-	clone() : InAppPurchaseRestoreInfo;
-	static C(Other: UObject | any): InAppPurchaseRestoreInfo;
-}
-
-declare class InAppPurchaseRestoreCallbackProxy extends UObject { 
-	OnSuccess: UnrealEngineMulticastDelegate<(CompletionStatus: EInAppPurchaseState, InAppRestorePurchaseInformation: InAppPurchaseRestoreInfo[]) => void>;
-	OnFailure: UnrealEngineMulticastDelegate<(CompletionStatus: EInAppPurchaseState, InAppRestorePurchaseInformation: InAppPurchaseRestoreInfo[]) => void>;
-	static Load(ResourceName: string): InAppPurchaseRestoreCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): InAppPurchaseRestoreCallbackProxy;
-	static GetDefaultObject(): InAppPurchaseRestoreCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InAppPurchaseRestoreCallbackProxy;
-	static CreateProxyObjectForInAppPurchaseRestore(ConsumableProductFlags: InAppPurchaseProductRequest[],PlayerController: PlayerController): InAppPurchaseRestoreCallbackProxy;
-	static C(Other: UObject | any): InAppPurchaseRestoreCallbackProxy;
-}
-
-declare class IpConnection extends NetConnection { 
-	static Load(ResourceName: string): IpConnection;
-	static Find(Outer: UObject, ResourceName: string): IpConnection;
-	static GetDefaultObject(): IpConnection;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IpConnection;
-	static C(Other: UObject | any): IpConnection;
-}
-
-declare class IpNetDriver extends NetDriver { 
-	LogPortUnreach: boolean;
-	AllowPlayerPortUnreach: boolean;
-	MaxPortCountToTry: any;
-	static Load(ResourceName: string): IpNetDriver;
-	static Find(Outer: UObject, ResourceName: string): IpNetDriver;
-	static GetDefaultObject(): IpNetDriver;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IpNetDriver;
-	static C(Other: UObject | any): IpNetDriver;
-}
-
-declare class JoinSessionCallbackProxy extends OnlineBlueprintCallProxyBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
-	OnFailure: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): JoinSessionCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): JoinSessionCallbackProxy;
-	static GetDefaultObject(): JoinSessionCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JoinSessionCallbackProxy;
-	static JoinSession(WorldContextObject: UObject,PlayerController: PlayerController,SearchResult: BlueprintSessionResult): JoinSessionCallbackProxy;
-	static C(Other: UObject | any): JoinSessionCallbackProxy;
-}
-
-declare class LeaderboardBlueprintLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): LeaderboardBlueprintLibrary;
-	static Find(Outer: UObject, ResourceName: string): LeaderboardBlueprintLibrary;
-	static GetDefaultObject(): LeaderboardBlueprintLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LeaderboardBlueprintLibrary;
-	static WriteLeaderboardInteger(PlayerController: PlayerController,StatName: string,StatValue: number): boolean;
-	static C(Other: UObject | any): LeaderboardBlueprintLibrary;
-}
-
-declare class LeaderboardFlushCallbackProxy extends UObject { 
-	OnSuccess: UnrealEngineMulticastDelegate<(SessionName: string) => void>;
-	OnFailure: UnrealEngineMulticastDelegate<(SessionName: string) => void>;
-	static Load(ResourceName: string): LeaderboardFlushCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): LeaderboardFlushCallbackProxy;
-	static GetDefaultObject(): LeaderboardFlushCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LeaderboardFlushCallbackProxy;
-	static CreateProxyObjectForFlush(PlayerController: PlayerController,SessionName: string): LeaderboardFlushCallbackProxy;
-	static C(Other: UObject | any): LeaderboardFlushCallbackProxy;
-}
-
-declare class LeaderboardQueryCallbackProxy extends UObject { 
-	OnSuccess: UnrealEngineMulticastDelegate<(LeaderboardValue: number) => void>;
-	OnFailure: UnrealEngineMulticastDelegate<(LeaderboardValue: number) => void>;
-	static Load(ResourceName: string): LeaderboardQueryCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): LeaderboardQueryCallbackProxy;
-	static GetDefaultObject(): LeaderboardQueryCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LeaderboardQueryCallbackProxy;
-	static CreateProxyObjectForIntQuery(PlayerController: PlayerController,StatName: string): LeaderboardQueryCallbackProxy;
-	static C(Other: UObject | any): LeaderboardQueryCallbackProxy;
-}
-
-declare class LogoutCallbackProxy extends BlueprintAsyncActionBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) => void>;
-	OnFailure: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) => void>;
-	static Load(ResourceName: string): LogoutCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): LogoutCallbackProxy;
-	static GetDefaultObject(): LogoutCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LogoutCallbackProxy;
-	static Logout(WorldContextObject: UObject,PlayerController: PlayerController): LogoutCallbackProxy;
-	static C(Other: UObject | any): LogoutCallbackProxy;
-}
-
-declare class OnlineBeacon extends Actor { 
-	BeaconConnectionInitialTimeout: number;
-	BeaconConnectionTimeout: number;
-	NetDriver: NetDriver;
-	static GetDefaultObject(): OnlineBeacon;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineBeacon;
-	static C(Other: UObject | any): OnlineBeacon;
-}
-
-declare class OnlineBeaconHostObject extends Actor { 
-	BeaconTypeName: string;
-	ClientBeaconActorClass: UnrealEngineClass;
-	ClientActors: OnlineBeaconClient[];
-	static GetDefaultObject(): OnlineBeaconHostObject;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineBeaconHostObject;
-	static C(Other: UObject | any): OnlineBeaconHostObject;
-}
-
-declare type EBeaconConnectionState = 'Invalid' | 'Closed' | 'Pending' | 'Open';
-declare var EBeaconConnectionState : { Invalid:'Invalid',Closed:'Closed',Pending:'Pending',Open:'Open', };
-declare class OnlineBeaconClient extends OnlineBeacon { 
-	BeaconOwner: OnlineBeaconHostObject;
-	BeaconConnection: NetConnection;
-	ConnectionState: ConnectionState;
-	static GetDefaultObject(): OnlineBeaconClient;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineBeaconClient;
-	ClientOnConnected(): void;
-	static C(Other: UObject | any): OnlineBeaconClient;
-}
-
-declare class OnlineBeaconHost extends OnlineBeacon { 
-	ListenPort: number;
-	ClientActors: OnlineBeaconClient[];
-	static GetDefaultObject(): OnlineBeaconHost;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineBeaconHost;
-	static C(Other: UObject | any): OnlineBeaconHost;
-}
-
-declare class OnlineEngineInterfaceImpl extends OnlineEngineInterface { 
-	VoiceSubsystemNameOverride: string;
-	static Load(ResourceName: string): OnlineEngineInterfaceImpl;
-	static Find(Outer: UObject, ResourceName: string): OnlineEngineInterfaceImpl;
-	static GetDefaultObject(): OnlineEngineInterfaceImpl;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineEngineInterfaceImpl;
-	static C(Other: UObject | any): OnlineEngineInterfaceImpl;
-}
-
-declare class PIELoginSettingsInternal { 
-	Id: string;
-	Token: string;
-	Type: string;
-	TokenBytes: number[];
-	clone() : PIELoginSettingsInternal;
-	static C(Other: UObject | any): PIELoginSettingsInternal;
-}
-
-declare class OnlinePIESettings extends DeveloperSettings { 
-	bOnlinePIEEnabled: boolean;
-	Logins: PIELoginSettingsInternal[];
-	static Load(ResourceName: string): OnlinePIESettings;
-	static Find(Outer: UObject, ResourceName: string): OnlinePIESettings;
-	static GetDefaultObject(): OnlinePIESettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlinePIESettings;
-	static C(Other: UObject | any): OnlinePIESettings;
-}
-
-declare class OnlineSessionClient extends OnlineSession { 
-	bIsFromInvite: boolean;
-	bHandlingDisconnect: boolean;
-	static Load(ResourceName: string): OnlineSessionClient;
-	static Find(Outer: UObject, ResourceName: string): OnlineSessionClient;
-	static GetDefaultObject(): OnlineSessionClient;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineSessionClient;
-	static C(Other: UObject | any): OnlineSessionClient;
-}
-
-declare class PlayerReservation { 
-	UniqueId: UniqueNetIdRepl;
-	ValidationStr: string;
-	ElapsedTime: number;
-	clone() : PlayerReservation;
-	static C(Other: UObject | any): PlayerReservation;
-}
-
-declare class PartyReservation { 
-	TeamNum: number;
-	PartyLeader: UniqueNetIdRepl;
-	PartyMembers: PlayerReservation[];
-	clone() : PartyReservation;
-	static C(Other: UObject | any): PartyReservation;
-}
-
-declare type EClientRequestType = 'NonePending' | 'ExistingSessionReservation' | 'ReservationUpdate' | 'EmptyServerReservation' | 'Reconnect' | 'Abandon';
-declare var EClientRequestType : { NonePending:'NonePending',ExistingSessionReservation:'ExistingSessionReservation',ReservationUpdate:'ReservationUpdate',EmptyServerReservation:'EmptyServerReservation',Reconnect:'Reconnect',Abandon:'Abandon', };
-declare type EPartyReservationResult = 'NoResult' | 'RequestPending' | 'GeneralError' | 'PartyLimitReached' | 'IncorrectPlayerCount' | 'RequestTimedOut' | 'ReservationDuplicate' | 'ReservationNotFound' | 'ReservationAccepted' | 'ReservationDenied' | 'ReservationDenied_Banned' | 'ReservationRequestCanceled' | 'ReservationInvalid' | 'BadSessionId';
-declare var EPartyReservationResult : { NoResult:'NoResult',RequestPending:'RequestPending',GeneralError:'GeneralError',PartyLimitReached:'PartyLimitReached',IncorrectPlayerCount:'IncorrectPlayerCount',RequestTimedOut:'RequestTimedOut',ReservationDuplicate:'ReservationDuplicate',ReservationNotFound:'ReservationNotFound',ReservationAccepted:'ReservationAccepted',ReservationDenied:'ReservationDenied',ReservationDenied_Banned:'ReservationDenied_Banned',ReservationRequestCanceled:'ReservationRequestCanceled',ReservationInvalid:'ReservationInvalid',BadSessionId:'BadSessionId', };
-declare class PartyBeaconClient extends OnlineBeaconClient { 
-	DestSessionId: string;
-	PendingReservation: PartyReservation;
-	RequestType: RequestType;
-	bPendingReservationSent: boolean;
-	bCancelReservation: boolean;
-	static GetDefaultObject(): PartyBeaconClient;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PartyBeaconClient;
-	ServerUpdateReservationRequest(SessionId: string,ReservationUpdate: PartyReservation): void;
-	ServerReservationRequest(SessionId: string,Reservation: PartyReservation): void;
-	ServerCancelReservationRequest(PartyLeader: UniqueNetIdRepl): void;
-	ClientSendReservationUpdates(NumRemainingReservations: number): void;
-	ClientSendReservationFull(): void;
-	ClientReservationResponse(ReservationResponse: EPartyReservationResult): void;
-	ClientCancelReservationResponse(ReservationResponse: EPartyReservationResult): void;
-	static C(Other: UObject | any): PartyBeaconClient;
-}
-
-declare class PartyBeaconState extends UObject { 
-	SessionName: string;
-	NumConsumedReservations: number;
-	MaxReservations: number;
-	NumTeams: number;
-	NumPlayersPerTeam: number;
-	TeamAssignmentMethod: string;
-	ReservedHostTeamNum: number;
-	ForceTeamNum: number;
-	Reservations: PartyReservation[];
-	static Load(ResourceName: string): PartyBeaconState;
-	static Find(Outer: UObject, ResourceName: string): PartyBeaconState;
-	static GetDefaultObject(): PartyBeaconState;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PartyBeaconState;
-	static C(Other: UObject | any): PartyBeaconState;
-}
-
-declare class PartyBeaconHost extends OnlineBeaconHostObject { 
-	State: PartyBeaconState;
-	bLogoutOnSessionTimeout: boolean;
-	SessionTimeoutSecs: number;
-	TravelSessionTimeoutSecs: number;
-	static GetDefaultObject(): PartyBeaconHost;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PartyBeaconHost;
-	static C(Other: UObject | any): PartyBeaconHost;
-}
-
-declare type EMPMatchOutcome = 'None' | 'Quit' | 'Won' | 'Lost' | 'Tied' | 'TimeExpired' | 'First' | 'Second' | 'Third' | 'Fourth';
-declare var EMPMatchOutcome : { None:'None',Quit:'Quit',Won:'Won',Lost:'Lost',Tied:'Tied',TimeExpired:'TimeExpired',First:'First',Second:'Second',Third:'Third',Fourth:'Fourth', };
-declare class QuitMatchCallbackProxy extends OnlineBlueprintCallProxyBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
-	OnFailure: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): QuitMatchCallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): QuitMatchCallbackProxy;
-	static GetDefaultObject(): QuitMatchCallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): QuitMatchCallbackProxy;
-	static QuitMatch(WorldContextObject: UObject,PlayerController: PlayerController,MatchID: string,Outcome: EMPMatchOutcome,TurnTimeoutInSeconds: number): QuitMatchCallbackProxy;
-	static C(Other: UObject | any): QuitMatchCallbackProxy;
-}
-
-declare class ShowLoginUICallbackProxy extends BlueprintAsyncActionBase { 
-	OnSuccess: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) => void>;
-	OnFailure: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) => void>;
-	static Load(ResourceName: string): ShowLoginUICallbackProxy;
-	static Find(Outer: UObject, ResourceName: string): ShowLoginUICallbackProxy;
-	static GetDefaultObject(): ShowLoginUICallbackProxy;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ShowLoginUICallbackProxy;
-	static ShowExternalLoginUI(WorldContextObject: UObject,InPlayerController: PlayerController): ShowLoginUICallbackProxy;
-	static C(Other: UObject | any): ShowLoginUICallbackProxy;
-}
-
-declare class TestBeaconClient extends OnlineBeaconClient { 
-	static GetDefaultObject(): TestBeaconClient;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestBeaconClient;
-	ServerPong(): void;
-	ClientPing(): void;
-	static C(Other: UObject | any): TestBeaconClient;
-}
-
-declare class TestBeaconHost extends OnlineBeaconHostObject { 
-	static GetDefaultObject(): TestBeaconHost;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestBeaconHost;
-	static C(Other: UObject | any): TestBeaconHost;
-}
-
-declare class TurnBasedBlueprintLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): TurnBasedBlueprintLibrary;
-	static Find(Outer: UObject, ResourceName: string): TurnBasedBlueprintLibrary;
-	static GetDefaultObject(): TurnBasedBlueprintLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TurnBasedBlueprintLibrary;
-	static RegisterTurnBasedMatchInterfaceObject(WorldContextObject: UObject,PlayerController: PlayerController,UObject: UObject): void;
-	static GetPlayerDisplayName(WorldContextObject: UObject,PlayerController: PlayerController,MatchID: string,PlayerIndex: number,PlayerDisplayName?: string): {PlayerDisplayName: string};
-	static GetMyPlayerIndex(WorldContextObject: UObject,PlayerController: PlayerController,MatchID: string,PlayerIndex?: number): {PlayerIndex: number};
-	static GetIsMyTurn(WorldContextObject: UObject,PlayerController: PlayerController,MatchID: string,bIsMyTurn?: boolean): {bIsMyTurn: boolean};
-	static C(Other: UObject | any): TurnBasedBlueprintLibrary;
-}
-
-declare class K2Node_InAppPurchase extends K2Node_BaseAsyncTask { 
-	static Load(ResourceName: string): K2Node_InAppPurchase;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InAppPurchase;
-	static GetDefaultObject(): K2Node_InAppPurchase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InAppPurchase;
-	static C(Other: UObject | any): K2Node_InAppPurchase;
-}
-
-declare class K2Node_InAppPurchaseQuery extends K2Node_BaseAsyncTask { 
-	static Load(ResourceName: string): K2Node_InAppPurchaseQuery;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InAppPurchaseQuery;
-	static GetDefaultObject(): K2Node_InAppPurchaseQuery;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InAppPurchaseQuery;
-	static C(Other: UObject | any): K2Node_InAppPurchaseQuery;
-}
-
-declare class K2Node_InAppPurchaseRestore extends K2Node_BaseAsyncTask { 
-	static Load(ResourceName: string): K2Node_InAppPurchaseRestore;
-	static Find(Outer: UObject, ResourceName: string): K2Node_InAppPurchaseRestore;
-	static GetDefaultObject(): K2Node_InAppPurchaseRestore;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InAppPurchaseRestore;
-	static C(Other: UObject | any): K2Node_InAppPurchaseRestore;
-}
-
-declare class K2Node_LatentOnlineCall extends K2Node_BaseAsyncTask { 
-	static Load(ResourceName: string): K2Node_LatentOnlineCall;
-	static Find(Outer: UObject, ResourceName: string): K2Node_LatentOnlineCall;
-	static GetDefaultObject(): K2Node_LatentOnlineCall;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LatentOnlineCall;
-	static C(Other: UObject | any): K2Node_LatentOnlineCall;
-}
-
-declare class K2Node_LeaderboardFlush extends K2Node_BaseAsyncTask { 
-	static Load(ResourceName: string): K2Node_LeaderboardFlush;
-	static Find(Outer: UObject, ResourceName: string): K2Node_LeaderboardFlush;
-	static GetDefaultObject(): K2Node_LeaderboardFlush;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LeaderboardFlush;
-	static C(Other: UObject | any): K2Node_LeaderboardFlush;
-}
-
-declare class K2Node_LeaderboardQuery extends K2Node_BaseAsyncTask { 
-	static Load(ResourceName: string): K2Node_LeaderboardQuery;
-	static Find(Outer: UObject, ResourceName: string): K2Node_LeaderboardQuery;
-	static GetDefaultObject(): K2Node_LeaderboardQuery;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LeaderboardQuery;
-	static C(Other: UObject | any): K2Node_LeaderboardQuery;
-}
-
-declare class DeprecatedGearVRControllerComponent extends SceneComponent { 
-	ControllerMesh: StaticMesh;
-	static Load(ResourceName: string): DeprecatedGearVRControllerComponent;
-	static Find(Outer: UObject, ResourceName: string): DeprecatedGearVRControllerComponent;
-	static GetDefaultObject(): DeprecatedGearVRControllerComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DeprecatedGearVRControllerComponent;
-	GetMotionController(): MotionControllerComponent;
-	GetControllerMesh(): StaticMeshComponent;
-	static C(Other: UObject | any): DeprecatedGearVRControllerComponent;
-}
-
-declare class BoundaryTestResult { 
-	IsTriggering: boolean;
-	DeviceType: DeviceType;
-	ClosestDistance: number;
-	ClosestPoint: Vector;
-	ClosestPointNormal: Vector;
-	clone() : BoundaryTestResult;
-	static C(Other: UObject | any): BoundaryTestResult;
-}
-
-declare class OculusBoundaryComponent extends ActorComponent { 
-	OnOuterBoundaryTriggered: UnrealEngineMulticastDelegate<(OuterBoundsInteractionList: BoundaryTestResult[]) => void>;
-	OnOuterBoundaryReturned: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): OculusBoundaryComponent;
-	static Find(Outer: UObject, ResourceName: string): OculusBoundaryComponent;
-	static GetDefaultObject(): OculusBoundaryComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OculusBoundaryComponent;
-	SetOuterBoundaryColor(InBoundaryColor: Color): boolean;
-	ResetOuterBoundaryColor(): boolean;
-	RequestOuterBoundaryVisible(BoundaryVisible: boolean): boolean;
-	IsOuterBoundaryTriggered(): boolean;
-	IsOuterBoundaryDisplayed(): boolean;
-	GetTriggeredPlayAreaInfo(DeviceType: DeviceType): BoundaryTestResult;
-	GetTriggeredOuterBoundaryInfo(): BoundaryTestResult[];
-	GetPlayAreaPoints(): Vector[];
-	GetPlayAreaDimensions(): Vector;
-	GetOuterBoundaryPoints(): Vector[];
-	GetOuterBoundaryDimensions(): Vector;
-	CheckIfPointWithinPlayArea(Point: Vector): BoundaryTestResult;
-	CheckIfPointWithinOuterBounds(Point: Vector): BoundaryTestResult;
-	static C(Other: UObject | any): OculusBoundaryComponent;
-}
-
-declare class HmdUserProfileField { 
-	FieldName: string;
-	FieldValue: string;
-	clone() : HmdUserProfileField;
-	static C(Other: UObject | any): HmdUserProfileField;
-}
-
-declare class HmdUserProfile { 
-	Name: string;
-	Gender: string;
-	PlayerHeight: number;
-	EyeHeight: number;
-	IPD: number;
-	NeckToEyeDistance: Vector2D;
-	ExtraFields: HmdUserProfileField[];
-	clone() : HmdUserProfile;
-	static C(Other: UObject | any): HmdUserProfile;
-	GetUserProfile(): {Profile: HmdUserProfile, $: boolean};
-	static GetUserProfile(Profile?: HmdUserProfile): {Profile: HmdUserProfile, $: boolean};
-}
-
-declare type EGearVRControllerHandedness_DEPRECATED = 'RightHanded_DEPRECATED' | 'LeftHanded_DEPRECATED' | 'Unknown_DEPRECATED';
-declare var EGearVRControllerHandedness_DEPRECATED : { RightHanded_DEPRECATED:'RightHanded_DEPRECATED',LeftHanded_DEPRECATED:'LeftHanded_DEPRECATED',Unknown_DEPRECATED:'Unknown_DEPRECATED', };
-declare class OculusFunctionLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): OculusFunctionLibrary;
-	static Find(Outer: UObject, ResourceName: string): OculusFunctionLibrary;
-	static GetDefaultObject(): OculusFunctionLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OculusFunctionLibrary;
-	static ShowLoadingSplashScreen(): void;
-	static ShowLoadingIcon(Texture: Texture2D): void;
-	static SetPositionScale3D(PosScale3D: Vector): void;
-	static SetLoadingSplashParams(TexturePath: string,DistanceInMeters: Vector,SizeInMeters: Vector2D,RotationAxis: Vector,RotationDeltaInDeg: number): void;
-	static SetCPUAndGPULevels(CPULevel: number,GPULevel: number): void;
-	static SetBaseRotationAndPositionOffset(BaseRot: Rotator,PosOffset: Vector,Options: EOrientPositionSelector): void;
-	static SetBaseRotationAndBaseOffsetInMeters(Rotation: Rotator,BaseOffsetInMeters: Vector,Options: EOrientPositionSelector): void;
-	static IsPowerLevelStateThrottled(): boolean;
-	static IsPowerLevelStateMinimum(): boolean;
-	static IsLoadingIconEnabled(): boolean;
-	static IsDeviceTracked(DeviceType: DeviceType): boolean;
-	static IsControllerActive(): boolean;
-	static IsAutoLoadingSplashScreenEnabled(): boolean;
-	static HideLoadingSplashScreen(bClear: boolean): void;
-	static HideLoadingIcon(): void;
-	static GetUserProfile(Profile?: HmdUserProfile): {Profile: HmdUserProfile, $: boolean};
-	static GetTemperatureInCelsius(): number;
-	static GetRawSensorData(AngularAcceleration?: Vector,LinearAcceleration?: Vector,AngularVelocity?: Vector,LinearVelocity?: Vector,TimeInSeconds?: number,DeviceType?: DeviceType): {AngularAcceleration: Vector, LinearAcceleration: Vector, AngularVelocity: Vector, LinearVelocity: Vector, TimeInSeconds: number};
-	static GetPose(DeviceRotation?: Rotator,DevicePosition?: Vector,NeckPosition?: Vector,bUseOrienationForPlayerCamera?: boolean,bUsePositionForPlayerCamera?: boolean,PositionScale?: Vector): {DeviceRotation: Rotator, DevicePosition: Vector, NeckPosition: Vector};
-	static GetLoadingSplashParams(TexturePath?: string,DistanceInMeters?: Vector,SizeInMeters?: Vector2D,RotationAxis?: Vector,RotationDeltaInDeg?: number): {TexturePath: string, DistanceInMeters: Vector, SizeInMeters: Vector2D, RotationAxis: Vector, RotationDeltaInDeg: number};
-	static GetGearVRControllerHandedness(): ReturnValue;
-	static GetBatteryLevel(): number;
-	static GetBaseRotationAndPositionOffset(OutRot?: Rotator,OutPosOffset?: Vector): {OutRot: Rotator, OutPosOffset: Vector};
-	static GetBaseRotationAndBaseOffsetInMeters(OutRotation?: Rotator,OutBaseOffsetInMeters?: Vector): {OutRotation: Rotator, OutBaseOffsetInMeters: Vector};
-	static EnableAutoLoadingSplashScreen(bAutoShowEnabled: boolean): void;
-	static EnableArmModel(bArmModelEnable: boolean): void;
-	static ClearLoadingSplashScreens(): void;
-	static AreHeadPhonesPluggedIn(): boolean;
-	static AddLoadingSplashScreen(Texture: Texture2D,TranslationInMeters: Vector,Rotation: Rotator,SizeInMeters: Vector2D,DeltaRotation: Rotator,bClearBeforeAdd: boolean): void;
-	static C(Other: UObject | any): OculusFunctionLibrary;
-}
-
-declare class OculusSplashDesc { 
-	TexturePath: StringAssetReference;
-	TransformInMeters: Transform;
-	QuadSizeInMeters: Vector2D;
-	DeltaRotation: Quat;
-	TextureOffset: Vector2D;
-	TextureScale: Vector2D;
-	bNoAlphaChannel: boolean;
-	clone() : OculusSplashDesc;
-	static C(Other: UObject | any): OculusSplashDesc;
-}
-
-declare class OculusHMDRuntimeSettings extends UObject { 
-	bAutoEnabled: boolean;
-	SplashDescs: OculusSplashDesc[];
-	static Load(ResourceName: string): OculusHMDRuntimeSettings;
-	static Find(Outer: UObject, ResourceName: string): OculusHMDRuntimeSettings;
-	static GetDefaultObject(): OculusHMDRuntimeSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OculusHMDRuntimeSettings;
-	static C(Other: UObject | any): OculusHMDRuntimeSettings;
-}
-
-declare class OculusSceneCaptureCubemap extends UObject { 
-	CaptureComponents: SceneCaptureComponent2D[];
-	static Load(ResourceName: string): OculusSceneCaptureCubemap;
-	static Find(Outer: UObject, ResourceName: string): OculusSceneCaptureCubemap;
-	static GetDefaultObject(): OculusSceneCaptureCubemap;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OculusSceneCaptureCubemap;
-	static C(Other: UObject | any): OculusSceneCaptureCubemap;
-}
-
-declare class KismetProceduralMeshLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): KismetProceduralMeshLibrary;
-	static Find(Outer: UObject, ResourceName: string): KismetProceduralMeshLibrary;
-	static GetDefaultObject(): KismetProceduralMeshLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KismetProceduralMeshLibrary;
-	static SliceProceduralMesh(InProcMesh: ProceduralMeshComponent,PlanePosition: Vector,PlaneNormal: Vector,bCreateOtherHalf: boolean,OutOtherHalfProcMesh?: ProceduralMeshComponent,CapOption?: CapOption,CapMaterial?: MaterialInterface): {OutOtherHalfProcMesh: ProceduralMeshComponent};
-	static GetSectionFromStaticMesh(InMesh: StaticMesh,LODIndex: number,SectionIndex: number,Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
-	static GenerateBoxMesh(BoxRadius: Vector,Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
-	static CreateGridMeshTriangles(NumX: number,NumY: number,bWinding: boolean,Triangles?: number[]): {Triangles: number[]};
-	static CopyProceduralMeshFromStaticMeshComponent(StaticMeshComponent: StaticMeshComponent,LODIndex: number,ProcMeshComponent: ProceduralMeshComponent,bCreateCollision: boolean): void;
-	static ConvertQuadToTriangles(Triangles?: number[],Vert0?: number,Vert1?: number,Vert2?: number,Vert3?: number): {Triangles: number[]};
-	static CalculateTangentsForMesh(Vertices: Vector[],Triangles: number[],UVs: Vector2D[],Normals?: Vector[],Tangents?: ProcMeshTangent[]): {Normals: Vector[], Tangents: ProcMeshTangent[]};
-	static C(Other: UObject | any): KismetProceduralMeshLibrary;
-}
-
-declare class SteamVRChaperoneComponent extends ActorComponent { 
-	OnLeaveBounds: UnrealEngineMulticastDelegate<() => void>;
-	OnReturnToBounds: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): SteamVRChaperoneComponent;
-	static Find(Outer: UObject, ResourceName: string): SteamVRChaperoneComponent;
-	static GetDefaultObject(): SteamVRChaperoneComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SteamVRChaperoneComponent;
-	GetBounds(): Vector[];
-	static C(Other: UObject | any): SteamVRChaperoneComponent;
-}
-
-declare type ESteamVRTrackedDeviceType = 'Controller' | 'TrackingReference' | 'Other' | 'Invalid';
-declare var ESteamVRTrackedDeviceType : { Controller:'Controller',TrackingReference:'TrackingReference',Other:'Other',Invalid:'Invalid', };
-declare class SteamVRFunctionLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): SteamVRFunctionLibrary;
-	static Find(Outer: UObject, ResourceName: string): SteamVRFunctionLibrary;
-	static GetDefaultObject(): SteamVRFunctionLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SteamVRFunctionLibrary;
-	static GetValidTrackedDeviceIds(DeviceType: DeviceType,OutTrackedDeviceIds?: number[]): {OutTrackedDeviceIds: number[]};
-	static GetTrackedDevicePositionAndOrientation(DeviceId: number,OutPosition?: Vector,OutOrientation?: Rotator): {OutPosition: Vector, OutOrientation: Rotator, $: boolean};
-	static GetHandPositionAndOrientation(ControllerIndex: number,Hand: Hand,OutPosition?: Vector,OutOrientation?: Rotator): {OutPosition: Vector, OutOrientation: Rotator, $: boolean};
-	static C(Other: UObject | any): SteamVRFunctionLibrary;
-}
-
-declare class MacTargetSettings extends UObject { 
-	TargetedRHIs: string[];
-	MaxShaderLanguageVersion: number;
-	AudioSampleRate: number;
-	AudioCallbackBufferFrameSize: number;
-	AudioNumBuffersToEnqueue: number;
-	AudioMaxChannels: number;
-	AudioNumSourceWorkers: number;
-	static Load(ResourceName: string): MacTargetSettings;
-	static Find(Outer: UObject, ResourceName: string): MacTargetSettings;
-	static GetDefaultObject(): MacTargetSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MacTargetSettings;
-	static C(Other: UObject | any): MacTargetSettings;
-}
-
-declare type ECompilerVersion = 'Default' | 'VisualStudio2015' | 'VisualStudio2017';
-declare var ECompilerVersion : { Default:'Default',VisualStudio2015:'VisualStudio2015',VisualStudio2017:'VisualStudio2017', };
-declare type EMinimumSupportedOS = 'MSOS_Vista';
-declare var EMinimumSupportedOS : { MSOS_Vista:'MSOS_Vista', };
-declare class WindowsTargetSettings extends UObject { 
-	Compiler: Compiler;
-	TargetedRHIs: string[];
-	MinimumOSVersion: MinimumOSVersion;
-	AudioDevice: string;
-	AudioSampleRate: number;
-	AudioCallbackBufferFrameSize: number;
-	AudioNumBuffersToEnqueue: number;
-	AudioMaxChannels: number;
-	AudioNumSourceWorkers: number;
-	static Load(ResourceName: string): WindowsTargetSettings;
-	static Find(Outer: UObject, ResourceName: string): WindowsTargetSettings;
-	static GetDefaultObject(): WindowsTargetSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WindowsTargetSettings;
-	static C(Other: UObject | any): WindowsTargetSettings;
-}
-
-declare class NiagaraActor extends Actor { 
-	NiagaraComponent: NiagaraComponent;
-	SpriteComponent: BillboardComponent;
-	ArrowComponent: ArrowComponent;
-	static GetDefaultObject(): NiagaraActor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraActor;
-	static C(Other: UObject | any): NiagaraActor;
-}
-
-declare class NiagaraDataInterfaceCurveBase extends NiagaraDataInterface { 
-	static Load(ResourceName: string): NiagaraDataInterfaceCurveBase;
-	static Find(Outer: UObject, ResourceName: string): NiagaraDataInterfaceCurveBase;
-	static GetDefaultObject(): NiagaraDataInterfaceCurveBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraDataInterfaceCurveBase;
-	static C(Other: UObject | any): NiagaraDataInterfaceCurveBase;
-}
-
-declare class NiagaraDataInterfaceCurve extends NiagaraDataInterfaceCurveBase { 
-	Curve: RichCurve;
-	static Load(ResourceName: string): NiagaraDataInterfaceCurve;
-	static Find(Outer: UObject, ResourceName: string): NiagaraDataInterfaceCurve;
-	static GetDefaultObject(): NiagaraDataInterfaceCurve;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraDataInterfaceCurve;
-	static C(Other: UObject | any): NiagaraDataInterfaceCurve;
-}
-
-declare class NiagaraDataInterfaceVectorCurve extends NiagaraDataInterfaceCurveBase { 
-	XCurve: RichCurve;
-	YCurve: RichCurve;
-	ZCurve: RichCurve;
-	static Load(ResourceName: string): NiagaraDataInterfaceVectorCurve;
-	static Find(Outer: UObject, ResourceName: string): NiagaraDataInterfaceVectorCurve;
-	static GetDefaultObject(): NiagaraDataInterfaceVectorCurve;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraDataInterfaceVectorCurve;
-	static C(Other: UObject | any): NiagaraDataInterfaceVectorCurve;
-}
-
-declare class NiagaraDataInterfaceColorCurve extends NiagaraDataInterfaceCurveBase { 
-	RedCurve: RichCurve;
-	GreenCurve: RichCurve;
-	BlueCurve: RichCurve;
-	AlphaCurve: RichCurve;
-	static Load(ResourceName: string): NiagaraDataInterfaceColorCurve;
-	static Find(Outer: UObject, ResourceName: string): NiagaraDataInterfaceColorCurve;
-	static GetDefaultObject(): NiagaraDataInterfaceColorCurve;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraDataInterfaceColorCurve;
-	static C(Other: UObject | any): NiagaraDataInterfaceColorCurve;
-}
-
-declare class NiagaraDataInterfaceCurlNoise extends NiagaraDataInterface { 
-	static Load(ResourceName: string): NiagaraDataInterfaceCurlNoise;
-	static Find(Outer: UObject, ResourceName: string): NiagaraDataInterfaceCurlNoise;
-	static GetDefaultObject(): NiagaraDataInterfaceCurlNoise;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraDataInterfaceCurlNoise;
-	static C(Other: UObject | any): NiagaraDataInterfaceCurlNoise;
-}
-
-declare class NiagaraDataInterfaceSpline extends NiagaraDataInterface { 
-	Source: Actor;
-	static Load(ResourceName: string): NiagaraDataInterfaceSpline;
-	static Find(Outer: UObject, ResourceName: string): NiagaraDataInterfaceSpline;
-	static GetDefaultObject(): NiagaraDataInterfaceSpline;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraDataInterfaceSpline;
-	static C(Other: UObject | any): NiagaraDataInterfaceSpline;
-}
-
-declare class NDIStaticMeshSectionFilter { 
-	AllowedMaterialSlots: number[];
-	clone() : NDIStaticMeshSectionFilter;
-	static C(Other: UObject | any): NDIStaticMeshSectionFilter;
-}
-
-declare class NiagaraDataInterfaceStaticMesh extends NiagaraDataInterface { 
-	DefaultMesh: StaticMesh;
-	Source: Actor;
-	SectionFilter: NDIStaticMeshSectionFilter;
-	bEnableVertexColorRangeSorting: boolean;
-	static Load(ResourceName: string): NiagaraDataInterfaceStaticMesh;
-	static Find(Outer: UObject, ResourceName: string): NiagaraDataInterfaceStaticMesh;
-	static GetDefaultObject(): NiagaraDataInterfaceStaticMesh;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraDataInterfaceStaticMesh;
-	static C(Other: UObject | any): NiagaraDataInterfaceStaticMesh;
-}
-
-declare class NiagaraEventReceiverEmitterAction_SpawnParticles extends NiagaraEventReceiverEmitterAction { 
-	NumParticles: any;
-	static Load(ResourceName: string): NiagaraEventReceiverEmitterAction_SpawnParticles;
-	static Find(Outer: UObject, ResourceName: string): NiagaraEventReceiverEmitterAction_SpawnParticles;
-	static GetDefaultObject(): NiagaraEventReceiverEmitterAction_SpawnParticles;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraEventReceiverEmitterAction_SpawnParticles;
-	static C(Other: UObject | any): NiagaraEventReceiverEmitterAction_SpawnParticles;
-}
-
-declare class NiagaraFunctionLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): NiagaraFunctionLibrary;
-	static Find(Outer: UObject, ResourceName: string): NiagaraFunctionLibrary;
-	static GetDefaultObject(): NiagaraFunctionLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraFunctionLibrary;
-	static SpawnEffectAttached(EffectTemplate: NiagaraEffect,AttachToComponent: SceneComponent,AttachPointName: string,Location: Vector,Rotation: Rotator,LocationType: EAttachLocation,bAutoDestroy: boolean): NiagaraComponent;
-	static SpawnEffectAtLocation(WorldContextObject: UObject,EffectTemplate: NiagaraEffect,Location: Vector,Rotation: Rotator,bAutoDestroy: boolean): NiagaraComponent;
-	static C(Other: UObject | any): NiagaraFunctionLibrary;
-}
-
-declare class NiagaraLightRendererProperties extends NiagaraEffectRendererProperties { 
-	RadiusScale: number;
-	ColorAdd: Vector;
-	static Load(ResourceName: string): NiagaraLightRendererProperties;
-	static Find(Outer: UObject, ResourceName: string): NiagaraLightRendererProperties;
-	static GetDefaultObject(): NiagaraLightRendererProperties;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraLightRendererProperties;
-	static C(Other: UObject | any): NiagaraLightRendererProperties;
-}
-
-declare class NiagaraMeshRendererProperties extends NiagaraEffectRendererProperties { 
-	ParticleMesh: StaticMesh;
-	static Load(ResourceName: string): NiagaraMeshRendererProperties;
-	static Find(Outer: UObject, ResourceName: string): NiagaraMeshRendererProperties;
-	static GetDefaultObject(): NiagaraMeshRendererProperties;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraMeshRendererProperties;
-	static C(Other: UObject | any): NiagaraMeshRendererProperties;
-}
-
-declare class NiagaraRibbonRendererProperties extends NiagaraEffectRendererProperties { 
-	static Load(ResourceName: string): NiagaraRibbonRendererProperties;
-	static Find(Outer: UObject, ResourceName: string): NiagaraRibbonRendererProperties;
-	static GetDefaultObject(): NiagaraRibbonRendererProperties;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraRibbonRendererProperties;
-	static C(Other: UObject | any): NiagaraRibbonRendererProperties;
-}
-
-declare class NiagaraSettings extends DeveloperSettings { 
-	DefaultEffect: StringAssetReference;
-	DefaultEmitter: StringAssetReference;
-	DefaultScript: StringAssetReference;
-	AdditionalParameterTypes: StringAssetReference[];
-	AdditionalPayloadTypes: StringAssetReference[];
-	static Load(ResourceName: string): NiagaraSettings;
-	static Find(Outer: UObject, ResourceName: string): NiagaraSettings;
-	static GetDefaultObject(): NiagaraSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraSettings;
-	static C(Other: UObject | any): NiagaraSettings;
-}
-
-declare type ENiagaraSpriteAlignment = 'Unaligned' | 'VelocityAligned' | 'CustomAlignment';
-declare var ENiagaraSpriteAlignment : { Unaligned:'Unaligned',VelocityAligned:'VelocityAligned',CustomAlignment:'CustomAlignment', };
-declare type ENiagaraSpriteFacingMode = 'FaceCamera' | 'FaceCameraPlane' | 'CustomFacingVector';
-declare var ENiagaraSpriteFacingMode : { FaceCamera:'FaceCamera',FaceCameraPlane:'FaceCameraPlane',CustomFacingVector:'CustomFacingVector', };
-declare type ENiagaraSortMode = 'SortNone' | 'SortViewDepth' | 'SortViewDistance';
-declare var ENiagaraSortMode : { SortNone:'SortNone',SortViewDepth:'SortViewDepth',SortViewDistance:'SortViewDistance', };
-declare class NiagaraSpriteRendererProperties extends NiagaraEffectRendererProperties { 
-	SubImageSize: Vector2D;
-	Alignment: Alignment;
-	FacingMode: FacingMode;
-	CustomFacingVectorMask: Vector;
-	SortMode: SortMode;
-	static Load(ResourceName: string): NiagaraSpriteRendererProperties;
-	static Find(Outer: UObject, ResourceName: string): NiagaraSpriteRendererProperties;
-	static GetDefaultObject(): NiagaraSpriteRendererProperties;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraSpriteRendererProperties;
-	static C(Other: UObject | any): NiagaraSpriteRendererProperties;
-}
-
-declare class PropertyEntry { 
-	Property: EMaterialProperty;
-	bUseCustomSize: boolean;
-	CustomSize: IntPoint;
-	bUseConstantValue: boolean;
-	ConstantValue: number;
-	clone() : PropertyEntry;
-	static C(Other: UObject | any): PropertyEntry;
-}
-
-declare class MaterialOptions extends UObject { 
-	Properties: PropertyEntry[];
-	TextureSize: IntPoint;
-	LODIndices: number[];
-	bUseMeshData: boolean;
-	bUseSpecificUVIndex: boolean;
-	TextureCoordinateIndex: number;
-	static Load(ResourceName: string): MaterialOptions;
-	static Find(Outer: UObject, ResourceName: string): MaterialOptions;
-	static GetDefaultObject(): MaterialOptions;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialOptions;
-	static C(Other: UObject | any): MaterialOptions;
-}
-
-declare class AssetBakeOptions extends UObject { 
-	static Load(ResourceName: string): AssetBakeOptions;
-	static Find(Outer: UObject, ResourceName: string): AssetBakeOptions;
-	static GetDefaultObject(): AssetBakeOptions;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetBakeOptions;
-	static C(Other: UObject | any): AssetBakeOptions;
-}
-
-declare type EMaterialBakeMethod = 'IndividualMaterial' | 'AtlasMaterial' | 'BinnedMaterial';
-declare var EMaterialBakeMethod : { IndividualMaterial:'IndividualMaterial',AtlasMaterial:'AtlasMaterial',BinnedMaterial:'BinnedMaterial', };
-declare class MaterialMergeOptions extends UObject { 
-	Method: Method;
-	BlendMode: EBlendMode;
-	static Load(ResourceName: string): MaterialMergeOptions;
-	static Find(Outer: UObject, ResourceName: string): MaterialMergeOptions;
-	static GetDefaultObject(): MaterialMergeOptions;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialMergeOptions;
-	static C(Other: UObject | any): MaterialMergeOptions;
-}
-
-declare class SourceCodeAccessSettings extends UObject { 
-	PreferredAccessor: string;
-	static Load(ResourceName: string): SourceCodeAccessSettings;
-	static Find(Outer: UObject, ResourceName: string): SourceCodeAccessSettings;
-	static GetDefaultObject(): SourceCodeAccessSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceCodeAccessSettings;
-	static C(Other: UObject | any): SourceCodeAccessSettings;
-}
-
-declare class MRMeshComponent extends PrimitiveComponent { 
-	Material: MaterialInterface;
-	MeshReconstructor: MeshReconstructorBase;
-	bEnableCollision: boolean;
-	BodySetups: BodySetup[];
-	static Load(ResourceName: string): MRMeshComponent;
-	static Find(Outer: UObject, ResourceName: string): MRMeshComponent;
-	static GetDefaultObject(): MRMeshComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MRMeshComponent;
-	GetReconstructor(): MeshReconstructorBase;
-	ConnectReconstructor(Reconstructor: MeshReconstructorBase): void;
-	static C(Other: UObject | any): MRMeshComponent;
-}
-
-declare class MRMeshConfiguration { 
-	clone() : MRMeshConfiguration;
-	static C(Other: UObject | any): MRMeshConfiguration;
-}
-
-declare class MeshReconstructorBase extends UObject { 
-	static Load(ResourceName: string): MeshReconstructorBase;
-	static Find(Outer: UObject, ResourceName: string): MeshReconstructorBase;
-	static GetDefaultObject(): MeshReconstructorBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshReconstructorBase;
-	StopReconstruction(): void;
-	StartReconstruction(): void;
-	PauseReconstruction(): void;
-	IsReconstructionStarted(): boolean;
-	IsReconstructionPaused(): boolean;
-	DisconnectMRMesh(): void;
-	ConnectMRMesh(Mesh: MRMeshComponent): MRMeshConfiguration;
-	static C(Other: UObject | any): MeshReconstructorBase;
-}
-
-declare class AssetToolsImpl extends UObject { 
-	static Load(ResourceName: string): AssetToolsImpl;
-	static Find(Outer: UObject, ResourceName: string): AssetToolsImpl;
-	static GetDefaultObject(): AssetToolsImpl;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetToolsImpl;
-	static C(Other: UObject | any): AssetToolsImpl;
-}
-
-declare class AssetRenameData { 
-	Asset: any;
-	PackagePath: string;
-	NewName: string;
-	OriginalAssetPath: string;
-	clone() : AssetRenameData;
-	static C(Other: UObject | any): AssetRenameData;
-}
-
-declare class AssetTools extends Interface { 
-	static Load(ResourceName: string): AssetTools;
-	static Find(Outer: UObject, ResourceName: string): AssetTools;
-	static GetDefaultObject(): AssetTools;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetTools;
-	RenameAssets(AssetsAndNames: AssetRenameData[]): void;
-	ImportAssetsWithDialog(DestinationPath: string): UObject[];
-	ImportAssetsAutomated(ImportData: AutomatedAssetImportData): UObject[];
-	ExportAssetsWithDialog(AssetsToExport: string[],bPromptForIndividualFilenames: boolean): void;
-	ExportAssets(AssetsToExport: string[],ExportPath: string): void;
-	DuplicateAssetWithDialog(AssetName: string,PackagePath: string,OriginalObject: UObject): UObject;
-	DuplicateAsset(AssetName: string,PackagePath: string,OriginalObject: UObject): UObject;
-	CreateUniqueAssetName(InBasePackageName: string,InSuffix: string,OutPackageName?: string,OutAssetName?: string): {OutPackageName: string, OutAssetName: string};
-	CreateAssetWithDialog(AssetName: string,PackagePath: string,AssetClass: UnrealEngineClass,Factory: Factory,CallingContext: string): UObject;
-	CreateAsset(AssetName: string,PackagePath: string,AssetClass: UnrealEngineClass,Factory: Factory,CallingContext: string): UObject;
-	static C(Other: UObject | any): AssetTools;
-}
-
-declare class AssetToolsHelpers extends UObject { 
-	static Load(ResourceName: string): AssetToolsHelpers;
-	static Find(Outer: UObject, ResourceName: string): AssetToolsHelpers;
-	static GetDefaultObject(): AssetToolsHelpers;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetToolsHelpers;
-	static C(Other: UObject | any): AssetToolsHelpers;
-}
-
-declare class AutomationBlueprintFunctionLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): AutomationBlueprintFunctionLibrary;
-	static Find(Outer: UObject, ResourceName: string): AutomationBlueprintFunctionLibrary;
-	static GetDefaultObject(): AutomationBlueprintFunctionLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AutomationBlueprintFunctionLibrary;
-	static TakeAutomationScreenshotOfUI(WorldContextObject: UObject,LatentInfo: LatentActionInfo,Name: string,Options: AutomationScreenshotOptions): void;
-	static TakeAutomationScreenshotAtCamera(WorldContextObject: UObject,LatentInfo: LatentActionInfo,Camera: CameraActor,NameOverride: string,Options: AutomationScreenshotOptions): void;
-	static TakeAutomationScreenshot(WorldContextObject: UObject,LatentInfo: LatentActionInfo,Name: string,Options: AutomationScreenshotOptions): void;
-	static GetStatIncMax(StatName: string): number;
-	static GetStatIncAverage(StatName: string): number;
-	static GetStatExcMax(StatName: string): number;
-	static GetStatExcAverage(StatName: string): number;
-	static GetStatCallCount(StatName: string): number;
-	static GetDefaultScreenshotOptionsForRendering(Tolerance: Tolerance,Delay: number): AutomationScreenshotOptions;
-	static GetDefaultScreenshotOptionsForGameplay(Tolerance: Tolerance,Delay: number): AutomationScreenshotOptions;
-	static EnableStatGroup(WorldContextObject: UObject,GroupName: string): void;
-	static DisableStatGroup(WorldContextObject: UObject,GroupName: string): void;
-	static AreAutomatedTestsRunning(): boolean;
-	static C(Other: UObject | any): AutomationBlueprintFunctionLibrary;
-}
-
-declare class FuncTestRenderingComponent extends PrimitiveComponent { 
-	static Load(ResourceName: string): FuncTestRenderingComponent;
-	static Find(Outer: UObject, ResourceName: string): FuncTestRenderingComponent;
-	static GetDefaultObject(): FuncTestRenderingComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FuncTestRenderingComponent;
-	static C(Other: UObject | any): FuncTestRenderingComponent;
-}
-
-declare type EFunctionalTestResult = 'Default' | 'Invalid' | 'Error' | 'Running' | 'Failed' | 'Succeeded';
-declare var EFunctionalTestResult : { Default:'Default',Invalid:'Invalid',Error:'Error',Running:'Running',Failed:'Failed',Succeeded:'Succeeded', };
-declare type EComparisonMethod = 'Equal_To' | 'Not_Equal_To' | 'Greater_Than_Or_Equal_To' | 'Less_Than_Or_Equal_To' | 'Greater_Than' | 'Less_Than';
-declare var EComparisonMethod : { Equal_To:'Equal_To',Not_Equal_To:'Not_Equal_To',Greater_Than_Or_Equal_To:'Greater_Than_Or_Equal_To',Less_Than_Or_Equal_To:'Less_Than_Or_Equal_To',Greater_Than:'Greater_Than',Less_Than:'Less_Than', };
-declare class FunctionalTest extends Actor { 
-	SpriteComponent: BillboardComponent;
-	bIsEnabled: boolean;
-	bWarningsAsErrors: boolean;
-	Author: string;
-	Description: string;
-	ObservationPoint: Actor;
-	RandomNumbersStream: RandomStream;
-	Result: Result;
-	PreparationTimeLimit: number;
-	TimeLimit: number;
-	TimesUpMessage: string;
-	TimesUpResult: TimesUpResult;
-	OnTestPrepare: UnrealEngineMulticastDelegate<() => void>;
-	OnTestStart: UnrealEngineMulticastDelegate<() => void>;
-	OnTestFinished: UnrealEngineMulticastDelegate<() => void>;
-	AutoDestroyActors: Actor[];
-	RenderComp: FuncTestRenderingComponent;
-	TestName: TextRenderComponent;
-	bIsRunning: boolean;
-	static GetDefaultObject(): FunctionalTest;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalTest;
-	SetTimeLimit(NewTimeLimit: number,ResultWhenTimeRunsOut: ResultWhenTimeRunsOut): void;
-	RegisterAutoDestroyActor(ActorToAutoDestroy: Actor): void;
-	ReceiveStartTest(): void;
-	ReceivePrepareTest(): void;
-	OnWantsReRunCheck(): boolean;
-	OnAdditionalTestFinishedMessageRequest(TestResult: TestResult): string;
-	LogMessage(Message: string): void;
-	IsRunning(): boolean;
-	IsReady(): boolean;
-	IsEnabled(): boolean;
-	GetCurrentRerunReason(): string;
-	FinishTest(TestResult: TestResult,Message: string): void;
-	DebugGatherRelevantActors(): Actor[];
-	AssertValue_Int(Actual: number,ShouldBe: ShouldBe,Expected: number,What: string,ContextObject: UObject): boolean;
-	AssertValue_Float(Actual: number,ShouldBe: ShouldBe,Expected: number,What: string,ContextObject: UObject): boolean;
-	AssertValue_DateTime(Actual: DateTime,ShouldBe: ShouldBe,Expected: DateTime,What: string,ContextObject: UObject): boolean;
-	AssertTrue(Condition: boolean,Message: string,ContextObject: UObject): boolean;
-	AssertNotEqual_Vector(Actual: Vector,NotExpected: Vector,What: string,ContextObject: UObject): boolean;
-	AssertNotEqual_Transform(Actual: Transform,NotExpected: Transform,What: string,ContextObject: UObject): boolean;
-	AssertNotEqual_String(Actual: string,NotExpected: string,What: string,ContextObject: UObject): boolean;
-	AssertNotEqual_Rotator(Actual: Rotator,NotExpected: Rotator,What: string,ContextObject: UObject): boolean;
-	AssertIsValid(UObject: UObject,Message: string,ContextObject: UObject): boolean;
-	AssertFalse(Condition: boolean,Message: string,ContextObject: UObject): boolean;
-	AssertEqual_Vector(Actual: Vector,Expected: Vector,What: string,Tolerance: number,ContextObject: UObject): boolean;
-	AssertEqual_Transform(Actual: Transform,Expected: Transform,What: string,ContextObject: UObject): boolean;
-	AssertEqual_TraceQueryResults(Actual: TraceQueryTestResults,Expected: TraceQueryTestResults,What: string,ContextObject: UObject): boolean;
-	AssertEqual_String(Actual: string,Expected: string,What: string,ContextObject: UObject): boolean;
-	AssertEqual_Rotator(Actual: Rotator,Expected: Rotator,What: string,ContextObject: UObject): boolean;
-	AssertEqual_Name(Actual: string,Expected: string,What: string,ContextObject: UObject): boolean;
-	AssertEqual_Int(Actual: number,Expected: number,What: string,ContextObject: UObject): boolean;
-	AssertEqual_Float(Actual: number,Expected: number,What: string,Tolerance: number,ContextObject: UObject): boolean;
-	AssertEqual_Bool(Actual: boolean,Expected: boolean,What: string,ContextObject: UObject): boolean;
-	AddWarning(Message: string): void;
-	AddRerun(Reason: string): void;
-	AddError(Message: string): void;
-	static C(Other: UObject | any): FunctionalTest;
-}
-
-declare class GenericTeamId { 
-	TeamID: number;
-	clone() : GenericTeamId;
-	static C(Other: UObject | any): GenericTeamId;
-}
-
-declare class AITestSpawnInfo { 
-	PawnClass: UnrealEngineClass;
-	ControllerClass: UnrealEngineClass;
-	TeamID: GenericTeamId;
-	BehaviorTree: BehaviorTree;
-	SpawnLocation: Actor;
-	NumberToSpawn: number;
-	SpawnDelay: number;
-	PreSpawnDelay: number;
-	clone() : AITestSpawnInfo;
-	static C(Other: UObject | any): AITestSpawnInfo;
-}
-
-declare class AITestSpawnSet { 
-	SpawnInfoContainer: AITestSpawnInfo[];
-	Name: string;
-	bEnabled: boolean;
-	FallbackSpawnLocation: Actor;
-	clone() : AITestSpawnSet;
-	static C(Other: UObject | any): AITestSpawnSet;
-}
-
-declare class PendingDelayedSpawn extends AITestSpawnInfo { 
-	clone() : PendingDelayedSpawn;
-	static C(Other: UObject | any): PendingDelayedSpawn;
-}
-
-declare class FunctionalAITest extends FunctionalTest { 
-	SpawnSets: AITestSpawnSet[];
-	SpawnLocationRandomizationRange: number;
-	SpawnedPawns: Pawn[];
-	PendingDelayedSpawns: PendingDelayedSpawn[];
-	OnAISpawned: UnrealEngineMulticastDelegate<(Controller: AIController, Pawn: Pawn) => void>;
-	OnAllAISPawned: UnrealEngineMulticastDelegate<() => void>;
-	NavMeshDebugOrigin: Vector;
-	NavMeshDebugExtent: Vector;
-	bWaitForNavMesh: boolean;
-	bDebugNavMeshOnTimeout: boolean;
-	static GetDefaultObject(): FunctionalAITest;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalAITest;
-	IsOneOfSpawnedPawns(Actor: Actor): boolean;
-	static C(Other: UObject | any): FunctionalAITest;
-}
-
-declare class AutomationPerformaceHelper extends UObject { 
-	static Load(ResourceName: string): AutomationPerformaceHelper;
-	static Find(Outer: UObject, ResourceName: string): AutomationPerformaceHelper;
-	static GetDefaultObject(): AutomationPerformaceHelper;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AutomationPerformaceHelper;
-	WriteLogFile(CaptureDir: string,CaptureExtension: string): void;
-	TriggerGPUTraceIfRecordFallsBelowBudget(): void;
-	Tick(DeltaSeconds: number): void;
-	StopCPUProfiling(): void;
-	StartCPUProfiling(): void;
-	Sample(DeltaSeconds: number): void;
-	OnBeginTests(): void;
-	OnAllTestsComplete(): void;
-	IsRecording(): boolean;
-	IsCurrentRecordWithinRenderThreadBudget(): boolean;
-	IsCurrentRecordWithinGPUBudget(): boolean;
-	IsCurrentRecordWithinGameThreadBudget(): boolean;
-	EndStatsFile(): void;
-	EndRecordingBaseline(): void;
-	EndRecording(): void;
-	BeginStatsFile(RecordName: string): void;
-	BeginRecordingBaseline(RecordName: string): void;
-	BeginRecording(RecordName: string,InGPUBudget: number,InRenderThreadBudget: number,InGameThreadBudget: number): void;
-	static C(Other: UObject | any): AutomationPerformaceHelper;
-}
-
-declare class FunctionalTestGameMode extends GameModeBase { 
-	static GetDefaultObject(): FunctionalTestGameMode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalTestGameMode;
-	static C(Other: UObject | any): FunctionalTestGameMode;
-}
-
-declare class FunctionalTestingManager extends BlueprintFunctionLibrary { 
-	TestsLeft: FunctionalTest[];
-	AllTests: FunctionalTest[];
-	OnSetupTests: UnrealEngineMulticastDelegate<() => void>;
-	OnTestsComplete: UnrealEngineMulticastDelegate<() => void>;
-	OnTestsBegin: UnrealEngineMulticastDelegate<() => void>;
-	static Load(ResourceName: string): FunctionalTestingManager;
-	static Find(Outer: UObject, ResourceName: string): FunctionalTestingManager;
-	static GetDefaultObject(): FunctionalTestingManager;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalTestingManager;
-	static RunAllFunctionalTests(WorldContextObject: UObject,bNewLog: boolean,bRunLooped: boolean,bWaitForNavigationBuildFinish: boolean,FailedTestsReproString: string): boolean;
-	static C(Other: UObject | any): FunctionalTestingManager;
-}
-
-declare class PhasedAutomationActorBase extends Actor { 
-	static GetDefaultObject(): PhasedAutomationActorBase;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhasedAutomationActorBase;
-	OnFunctionalTestingComplete(): void;
-	OnFunctionalTestingBegin(): void;
-	static C(Other: UObject | any): PhasedAutomationActorBase;
-}
-
-declare class FunctionalTestLevelScript extends LevelScriptActor { 
-	static GetDefaultObject(): FunctionalTestLevelScript;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalTestLevelScript;
-	static C(Other: UObject | any): FunctionalTestLevelScript;
-}
-
-declare class FunctionalTestUtilityLibrary extends BlueprintFunctionLibrary { 
-	static Load(ResourceName: string): FunctionalTestUtilityLibrary;
-	static Find(Outer: UObject, ResourceName: string): FunctionalTestUtilityLibrary;
-	static GetDefaultObject(): FunctionalTestUtilityLibrary;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalTestUtilityLibrary;
-	static TraceChannelTestUtil(WorldContextObject: UObject,BatchOptions: TraceChannelTestBatchOptions,Start: Vector,End: Vector,SphereCapsuleRadius: number,CapsuleHalfHeight: number,BoxHalfSize: Vector,Orientation: Rotator,TraceChannel: ETraceTypeQuery,ObjectTypes: EObjectTypeQuery[],ProfileName: string,bTraceComplex: boolean,ActorsToIgnore: Actor[],bIgnoreSelf: boolean,DrawDebugType: EDrawDebugTrace,TraceColor: LinearColor,TraceHitColor: LinearColor,DrawTime: number): TraceQueryTestResults;
-	static C(Other: UObject | any): FunctionalTestUtilityLibrary;
-}
-
-declare type EWidgetTestAppearLocation = 'Viewport' | 'PlayerScreen';
-declare var EWidgetTestAppearLocation : { Viewport:'Viewport',PlayerScreen:'PlayerScreen', };
-declare class FunctionalUIScreenshotTest extends FunctionalTest { 
-	WidgetClass: UnrealEngineClass;
-	SpawnedWidget: UserWidget;
-	WidgetLocation: WidgetLocation;
-	ScreenshotCamera: CameraComponent;
-	ScreenshotOptions: AutomationScreenshotOptions;
-	static GetDefaultObject(): FunctionalUIScreenshotTest;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalUIScreenshotTest;
-	static C(Other: UObject | any): FunctionalUIScreenshotTest;
-}
-
-declare class GroundTruthData extends UObject { 
-	bResetGroundTruth: boolean;
-	ObjectData: UObject;
-	static Load(ResourceName: string): GroundTruthData;
-	static Find(Outer: UObject, ResourceName: string): GroundTruthData;
-	static GetDefaultObject(): GroundTruthData;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GroundTruthData;
-	SaveObject(GroundTruth: UObject): void;
-	LoadObject(): UObject;
-	CanModify(): boolean;
-	static C(Other: UObject | any): GroundTruthData;
-}
-
-declare class ScreenshotFunctionalTest extends FunctionalTest { 
-	ScreenshotCamera: CameraComponent;
-	ScreenshotOptions: AutomationScreenshotOptions;
-	static GetDefaultObject(): ScreenshotFunctionalTest;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScreenshotFunctionalTest;
-	static C(Other: UObject | any): ScreenshotFunctionalTest;
-}
-
-declare class TestPhaseComponent extends SceneComponent { 
-	static Load(ResourceName: string): TestPhaseComponent;
-	static Find(Outer: UObject, ResourceName: string): TestPhaseComponent;
-	static GetDefaultObject(): TestPhaseComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestPhaseComponent;
-	static C(Other: UObject | any): TestPhaseComponent;
-}
-
-declare class AIGraph extends EdGraph { 
-	GraphVersion: number;
-	static Load(ResourceName: string): AIGraph;
-	static Find(Outer: UObject, ResourceName: string): AIGraph;
-	static GetDefaultObject(): AIGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AIGraph;
-	static C(Other: UObject | any): AIGraph;
-}
-
-declare class GraphNodeClassData { 
-	AssetName: string;
-	GeneratedClassPackage: string;
-	ClassName: string;
-	Category: string;
-	clone() : GraphNodeClassData;
-	static C(Other: UObject | any): GraphNodeClassData;
-}
-
-declare class AIGraphNode extends EdGraphNode { 
-	ClassData: GraphNodeClassData;
-	NodeInstance: UObject;
-	ParentNode: AIGraphNode;
-	SubNodes: AIGraphNode[];
-	CopySubNodeIndex: number;
-	bIsReadOnly: boolean;
-	bIsSubNode: boolean;
-	ErrorMessage: string;
-	static Load(ResourceName: string): AIGraphNode;
-	static Find(Outer: UObject, ResourceName: string): AIGraphNode;
-	static GetDefaultObject(): AIGraphNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AIGraphNode;
-	static C(Other: UObject | any): AIGraphNode;
-}
-
-declare class AIGraphSchema extends EdGraphSchema { 
-	static Load(ResourceName: string): AIGraphSchema;
-	static Find(Outer: UObject, ResourceName: string): AIGraphSchema;
-	static GetDefaultObject(): AIGraphSchema;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AIGraphSchema;
-	static C(Other: UObject | any): AIGraphSchema;
-}
-
-declare class K2Node_AIMoveTo extends K2Node_BaseAsyncTask { 
-	static Load(ResourceName: string): K2Node_AIMoveTo;
-	static Find(Outer: UObject, ResourceName: string): K2Node_AIMoveTo;
-	static GetDefaultObject(): K2Node_AIMoveTo;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AIMoveTo;
-	static C(Other: UObject | any): K2Node_AIMoveTo;
-}
-
-declare class BehaviorTreeDecoratorGraph extends EdGraph { 
-	static Load(ResourceName: string): BehaviorTreeDecoratorGraph;
-	static Find(Outer: UObject, ResourceName: string): BehaviorTreeDecoratorGraph;
-	static GetDefaultObject(): BehaviorTreeDecoratorGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeDecoratorGraph;
-	static C(Other: UObject | any): BehaviorTreeDecoratorGraph;
-}
-
-declare class BehaviorTreeDecoratorGraphNode extends EdGraphNode { 
-	static Load(ResourceName: string): BehaviorTreeDecoratorGraphNode;
-	static Find(Outer: UObject, ResourceName: string): BehaviorTreeDecoratorGraphNode;
-	static GetDefaultObject(): BehaviorTreeDecoratorGraphNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeDecoratorGraphNode;
-	static C(Other: UObject | any): BehaviorTreeDecoratorGraphNode;
-}
-
-declare class BehaviorTreeDecoratorGraphNode_Decorator extends BehaviorTreeDecoratorGraphNode { 
-	NodeInstance: UObject;
-	ClassData: GraphNodeClassData;
-	static Load(ResourceName: string): BehaviorTreeDecoratorGraphNode_Decorator;
-	static Find(Outer: UObject, ResourceName: string): BehaviorTreeDecoratorGraphNode_Decorator;
-	static GetDefaultObject(): BehaviorTreeDecoratorGraphNode_Decorator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeDecoratorGraphNode_Decorator;
-	static C(Other: UObject | any): BehaviorTreeDecoratorGraphNode_Decorator;
-}
-
-declare type EDecoratorLogicMode = 'Sink' | 'And' | 'Or' | 'Not';
-declare var EDecoratorLogicMode : { Sink:'Sink',And:'And',Or:'Or',Not:'Not', };
-declare class BehaviorTreeDecoratorGraphNode_Logic extends BehaviorTreeDecoratorGraphNode { 
-	LogicMode: EDecoratorLogicMode;
-	static Load(ResourceName: string): BehaviorTreeDecoratorGraphNode_Logic;
-	static Find(Outer: UObject, ResourceName: string): BehaviorTreeDecoratorGraphNode_Logic;
-	static GetDefaultObject(): BehaviorTreeDecoratorGraphNode_Logic;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeDecoratorGraphNode_Logic;
-	static C(Other: UObject | any): BehaviorTreeDecoratorGraphNode_Logic;
-}
-
-declare class BehaviorTreeEditorTypes extends UObject { 
-	static Load(ResourceName: string): BehaviorTreeEditorTypes;
-	static Find(Outer: UObject, ResourceName: string): BehaviorTreeEditorTypes;
-	static GetDefaultObject(): BehaviorTreeEditorTypes;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeEditorTypes;
-	static C(Other: UObject | any): BehaviorTreeEditorTypes;
-}
-
-declare class BehaviorTreeFactory extends Factory { 
-	static Load(ResourceName: string): BehaviorTreeFactory;
-	static Find(Outer: UObject, ResourceName: string): BehaviorTreeFactory;
-	static GetDefaultObject(): BehaviorTreeFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeFactory;
-	static C(Other: UObject | any): BehaviorTreeFactory;
-}
-
-declare class BehaviorTreeGraph extends AIGraph { 
-	ModCounter: number;
-	bIsUsingModCounter: boolean;
-	static Load(ResourceName: string): BehaviorTreeGraph;
-	static Find(Outer: UObject, ResourceName: string): BehaviorTreeGraph;
-	static GetDefaultObject(): BehaviorTreeGraph;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeGraph;
-	static C(Other: UObject | any): BehaviorTreeGraph;
-}
-
-declare class BehaviorTreeGraphNode extends AIGraphNode { 
-	Decorators: BehaviorTreeGraphNode[];
-	Services: BehaviorTreeGraphNode[];
-	bInjectedNode: boolean;
-	static Load(ResourceName: string): BehaviorTreeGraphNode;
-	static Find(Outer: UObject, ResourceName: string): BehaviorTreeGraphNode;
-	static GetDefaultObject(): BehaviorTreeGraphNode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeGraphNode;
-	static C(Other: UObject | any): BehaviorTreeGraphNode;
-}
-
-declare class BehaviorTreeGraphNode_Composite extends BehaviorTreeGraphNode { 
-	static Load(ResourceName: string): BehaviorTreeGraphNode_Composite;
-	static Find(Outer: UObject, ResourceName: string): BehaviorTreeGraphNode_Composite;
-	static GetDefaultObject(): BehaviorTreeGraphNode_Composite;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeGraphNode_Composite;
-	static C(Other: UObject | any): BehaviorTreeGraphNode_Composite;
-}
-
-declare class BehaviorTreeGraphNode_CompositeDecorator extends BehaviorTreeGraphNode { 
-	BoundGraph: EdGraph;
-	CompositeName: string;
-	bShowOperations: boolean;
-	bCanAbortFlow: boolean;
-	ParentNodeInstance: BTCompositeNode;
-	CachedDescription: string;
-	static Load(ResourceName: string): BehaviorTreeGraphNode_CompositeDecorator;
-	static Find(Outer: UObject, ResourceName: string): BehaviorTreeGraphNode_CompositeDecorator;
-	static GetDefaultObject(): BehaviorTreeGraphNode_CompositeDecorator;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeGraphNode_CompositeDecorator;
-	static C(Other: UObject | any): BehaviorTreeGraphNode_CompositeDecorator;
-}
-
diff --git a/Examples/Content/Scripts/typings/ue.d.ts b/Examples/Content/Scripts/typings/ue.d.ts
index 9d1e3f7..7e63f9b 100644
--- a/Examples/Content/Scripts/typings/ue.d.ts
+++ b/Examples/Content/Scripts/typings/ue.d.ts
@@ -1,5 +1,4738 @@
 /// <reference path="_part_0_ue.d.ts">/>
 /// <reference path="_part_1_ue.d.ts">/>
+declare class ParticleModuleSubUVMovie extends ParticleModuleSubUV { 
+	bUseEmitterTime: boolean;
+	FrameRate: RawDistributionFloat;
+	StartingFrame: number;
+	static Load(ResourceName: string): ParticleModuleSubUVMovie;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleSubUVMovie;
+	static GetDefaultObject(): ParticleModuleSubUVMovie;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleSubUVMovie;
+	static C(Other: UObject | any): ParticleModuleSubUVMovie;
+}
+
+declare class ParticleModuleTrailBase extends ParticleModule { 
+	static Load(ResourceName: string): ParticleModuleTrailBase;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleTrailBase;
+	static GetDefaultObject(): ParticleModuleTrailBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTrailBase;
+	static C(Other: UObject | any): ParticleModuleTrailBase;
+}
+
+declare type ETrail2SourceMethod = 'PET2SRCM_Default' | 'PET2SRCM_Particle' | 'PET2SRCM_Actor' | 'PET2SRCM_MAX';
+declare var ETrail2SourceMethod : { PET2SRCM_Default:'PET2SRCM_Default',PET2SRCM_Particle:'PET2SRCM_Particle',PET2SRCM_Actor:'PET2SRCM_Actor',PET2SRCM_MAX:'PET2SRCM_MAX', };
+declare type EParticleSourceSelectionMethod = 'EPSSM_Random' | 'EPSSM_Sequential' | 'EPSSM_MAX';
+declare var EParticleSourceSelectionMethod : { EPSSM_Random:'EPSSM_Random',EPSSM_Sequential:'EPSSM_Sequential',EPSSM_MAX:'EPSSM_MAX', };
+declare class ParticleModuleTrailSource extends ParticleModuleTrailBase { 
+	SourceMethod: ETrail2SourceMethod;
+	SourceName: string;
+	SourceStrength: RawDistributionFloat;
+	bLockSourceStength: boolean;
+	SourceOffsetCount: number;
+	SourceOffsetDefaults: Vector[];
+	SelectionMethod: EParticleSourceSelectionMethod;
+	bInheritRotation: boolean;
+	static Load(ResourceName: string): ParticleModuleTrailSource;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleTrailSource;
+	static GetDefaultObject(): ParticleModuleTrailSource;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTrailSource;
+	static C(Other: UObject | any): ParticleModuleTrailSource;
+}
+
+declare class ParticleModuleTypeDataAnimTrail extends ParticleModuleTypeDataBase { 
+	bDeadTrailsOnDeactivate: boolean;
+	bEnablePreviousTangentRecalculation: boolean;
+	bTangentRecalculationEveryFrame: boolean;
+	TilingDistance: number;
+	DistanceTessellationStepSize: number;
+	TangentTessellationStepSize: number;
+	WidthTessellationStepSize: number;
+	static Load(ResourceName: string): ParticleModuleTypeDataAnimTrail;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleTypeDataAnimTrail;
+	static GetDefaultObject(): ParticleModuleTypeDataAnimTrail;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTypeDataAnimTrail;
+	static C(Other: UObject | any): ParticleModuleTypeDataAnimTrail;
+}
+
+declare type EBeam2Method = 'PEB2M_Distance' | 'PEB2M_Target' | 'PEB2M_Branch' | 'PEB2M_MAX';
+declare var EBeam2Method : { PEB2M_Distance:'PEB2M_Distance',PEB2M_Target:'PEB2M_Target',PEB2M_Branch:'PEB2M_Branch',PEB2M_MAX:'PEB2M_MAX', };
+declare type EBeamTaperMethod = 'PEBTM_None' | 'PEBTM_Full' | 'PEBTM_Partial' | 'PEBTM_MAX';
+declare var EBeamTaperMethod : { PEBTM_None:'PEBTM_None',PEBTM_Full:'PEBTM_Full',PEBTM_Partial:'PEBTM_Partial',PEBTM_MAX:'PEBTM_MAX', };
+declare class ParticleModuleTypeDataBeam2 extends ParticleModuleTypeDataBase { 
+	BeamMethod: EBeam2Method;
+	TextureTile: number;
+	TextureTileDistance: number;
+	Sheets: number;
+	MaxBeamCount: number;
+	Speed: number;
+	InterpolationPoints: number;
+	bAlwaysOn: boolean;
+	UpVectorStepSize: number;
+	BranchParentName: string;
+	Distance: RawDistributionFloat;
+	TaperMethod: EBeamTaperMethod;
+	TaperFactor: RawDistributionFloat;
+	TaperScale: RawDistributionFloat;
+	RenderGeometry: boolean;
+	RenderDirectLine: boolean;
+	RenderLines: boolean;
+	RenderTessellation: boolean;
+	static Load(ResourceName: string): ParticleModuleTypeDataBeam2;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleTypeDataBeam2;
+	static GetDefaultObject(): ParticleModuleTypeDataBeam2;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTypeDataBeam2;
+	static C(Other: UObject | any): ParticleModuleTypeDataBeam2;
+}
+
+declare class VectorField extends UObject { 
+	Bounds: Box;
+	Intensity: number;
+	static Load(ResourceName: string): VectorField;
+	static Find(Outer: UObject, ResourceName: string): VectorField;
+	static GetDefaultObject(): VectorField;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorField;
+	static C(Other: UObject | any): VectorField;
+}
+
+declare class GPUSpriteLocalVectorFieldInfo { 
+	Field: VectorField;
+	Transform: Transform;
+	MinInitialRotation: Rotator;
+	MaxInitialRotation: Rotator;
+	RotationRate: Rotator;
+	Intensity: number;
+	Tightness: number;
+	bIgnoreComponentTransform: boolean;
+	bTileX: boolean;
+	bTileY: boolean;
+	bTileZ: boolean;
+	bUseFixDT: boolean;
+	clone() : GPUSpriteLocalVectorFieldInfo;
+	static C(Other: UObject | any): GPUSpriteLocalVectorFieldInfo;
+}
+
+declare class FloatDistribution { 
+	Table: DistributionLookupTable;
+	clone() : FloatDistribution;
+	static C(Other: UObject | any): FloatDistribution;
+}
+
+declare class GPUSpriteEmitterInfo { 
+	RequiredModule: ParticleModuleRequired;
+	SpawnModule: ParticleModuleSpawn;
+	SpawnPerUnitModule: ParticleModuleSpawnPerUnit;
+	SpawnModules: ParticleModule[];
+	LocalVectorField: GPUSpriteLocalVectorFieldInfo;
+	VectorFieldScale: FloatDistribution;
+	DragCoefficient: FloatDistribution;
+	PointAttractorStrength: FloatDistribution;
+	Resilience: FloatDistribution;
+	ConstantAcceleration: Vector;
+	PointAttractorPosition: Vector;
+	PointAttractorRadiusSq: number;
+	OrbitOffsetBase: Vector;
+	OrbitOffsetRange: Vector;
+	InvMaxSize: Vector2D;
+	InvRotationRateScale: number;
+	MaxLifetime: number;
+	MaxParticleCount: number;
+	ScreenAlignment: EParticleScreenAlignment;
+	LockAxisFlag: EParticleAxisLock;
+	bEnableCollision: boolean;
+	CollisionMode: EParticleCollisionMode;
+	bRemoveHMDRoll: boolean;
+	MinFacingCameraBlendDistance: number;
+	MaxFacingCameraBlendDistance: number;
+	DynamicColor: RawDistributionVector;
+	DynamicAlpha: RawDistributionFloat;
+	DynamicColorScale: RawDistributionVector;
+	DynamicAlphaScale: RawDistributionFloat;
+	clone() : GPUSpriteEmitterInfo;
+	static C(Other: UObject | any): GPUSpriteEmitterInfo;
+}
+
+declare class GPUSpriteResourceData { 
+	QuantizedColorSamples: Color[];
+	QuantizedMiscSamples: Color[];
+	QuantizedSimulationAttrSamples: Color[];
+	ColorScale: Vector4;
+	ColorBias: Vector4;
+	MiscScale: Vector4;
+	MiscBias: Vector4;
+	SimulationAttrCurveScale: Vector4;
+	SimulationAttrCurveBias: Vector4;
+	SubImageSize: Vector4;
+	SizeBySpeed: Vector4;
+	ConstantAcceleration: Vector;
+	OrbitOffsetBase: Vector;
+	OrbitOffsetRange: Vector;
+	OrbitFrequencyBase: Vector;
+	OrbitFrequencyRange: Vector;
+	OrbitPhaseBase: Vector;
+	OrbitPhaseRange: Vector;
+	GlobalVectorFieldScale: number;
+	GlobalVectorFieldTightness: number;
+	PerParticleVectorFieldScale: number;
+	PerParticleVectorFieldBias: number;
+	DragCoefficientScale: number;
+	DragCoefficientBias: number;
+	ResilienceScale: number;
+	ResilienceBias: number;
+	CollisionRadiusScale: number;
+	CollisionRadiusBias: number;
+	CollisionTimeBias: number;
+	CollisionRandomSpread: number;
+	CollisionRandomDistribution: number;
+	OneMinusFriction: number;
+	RotationRateScale: number;
+	CameraMotionBlurAmount: number;
+	ScreenAlignment: EParticleScreenAlignment;
+	LockAxisFlag: EParticleAxisLock;
+	PivotOffset: Vector2D;
+	bRemoveHMDRoll: boolean;
+	MinFacingCameraBlendDistance: number;
+	MaxFacingCameraBlendDistance: number;
+	clone() : GPUSpriteResourceData;
+	static C(Other: UObject | any): GPUSpriteResourceData;
+}
+
+declare class ParticleModuleTypeDataGpu extends ParticleModuleTypeDataBase { 
+	EmitterInfo: GPUSpriteEmitterInfo;
+	ResourceData: GPUSpriteResourceData;
+	CameraMotionBlurAmount: number;
+	bClearExistingParticlesOnInit: boolean;
+	static Load(ResourceName: string): ParticleModuleTypeDataGpu;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleTypeDataGpu;
+	static GetDefaultObject(): ParticleModuleTypeDataGpu;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTypeDataGpu;
+	static C(Other: UObject | any): ParticleModuleTypeDataGpu;
+}
+
+declare type EMeshScreenAlignment = 'PSMA_MeshFaceCameraWithRoll' | 'PSMA_MeshFaceCameraWithSpin' | 'PSMA_MeshFaceCameraWithLockedAxis' | 'PSMA_MAX';
+declare var EMeshScreenAlignment : { PSMA_MeshFaceCameraWithRoll:'PSMA_MeshFaceCameraWithRoll',PSMA_MeshFaceCameraWithSpin:'PSMA_MeshFaceCameraWithSpin',PSMA_MeshFaceCameraWithLockedAxis:'PSMA_MeshFaceCameraWithLockedAxis',PSMA_MAX:'PSMA_MAX', };
+declare type EMeshCameraFacingUpAxis = 'CameraFacing_NoneUP' | 'CameraFacing_ZUp' | 'CameraFacing_NegativeZUp' | 'CameraFacing_YUp' | 'CameraFacing_NegativeYUp' | 'CameraFacing_MAX';
+declare var EMeshCameraFacingUpAxis : { CameraFacing_NoneUP:'CameraFacing_NoneUP',CameraFacing_ZUp:'CameraFacing_ZUp',CameraFacing_NegativeZUp:'CameraFacing_NegativeZUp',CameraFacing_YUp:'CameraFacing_YUp',CameraFacing_NegativeYUp:'CameraFacing_NegativeYUp',CameraFacing_MAX:'CameraFacing_MAX', };
+declare type EMeshCameraFacingOptions = 'XAxisFacing_NoUp' | 'XAxisFacing_ZUp' | 'XAxisFacing_NegativeZUp' | 'XAxisFacing_YUp' | 'XAxisFacing_NegativeYUp' | 'LockedAxis_ZAxisFacing' | 'LockedAxis_NegativeZAxisFacing' | 'LockedAxis_YAxisFacing' | 'LockedAxis_NegativeYAxisFacing' | 'VelocityAligned_ZAxisFacing' | 'VelocityAligned_NegativeZAxisFacing' | 'VelocityAligned_YAxisFacing' | 'VelocityAligned_NegativeYAxisFacing' | 'EMeshCameraFacingOptions_MAX';
+declare var EMeshCameraFacingOptions : { XAxisFacing_NoUp:'XAxisFacing_NoUp',XAxisFacing_ZUp:'XAxisFacing_ZUp',XAxisFacing_NegativeZUp:'XAxisFacing_NegativeZUp',XAxisFacing_YUp:'XAxisFacing_YUp',XAxisFacing_NegativeYUp:'XAxisFacing_NegativeYUp',LockedAxis_ZAxisFacing:'LockedAxis_ZAxisFacing',LockedAxis_NegativeZAxisFacing:'LockedAxis_NegativeZAxisFacing',LockedAxis_YAxisFacing:'LockedAxis_YAxisFacing',LockedAxis_NegativeYAxisFacing:'LockedAxis_NegativeYAxisFacing',VelocityAligned_ZAxisFacing:'VelocityAligned_ZAxisFacing',VelocityAligned_NegativeZAxisFacing:'VelocityAligned_NegativeZAxisFacing',VelocityAligned_YAxisFacing:'VelocityAligned_YAxisFacing',VelocityAligned_NegativeYAxisFacing:'VelocityAligned_NegativeYAxisFacing',EMeshCameraFacingOptions_MAX:'EMeshCameraFacingOptions_MAX', };
+declare class ParticleModuleTypeDataMesh extends ParticleModuleTypeDataBase { 
+	Mesh: StaticMesh;
+	bUseStaticMeshLODs: boolean;
+	LODSizeScale: number;
+	CastShadows: boolean;
+	DoCollisions: boolean;
+	MeshAlignment: EMeshScreenAlignment;
+	bOverrideMaterial: boolean;
+	bOverrideDefaultMotionBlurSettings: boolean;
+	bEnableMotionBlur: boolean;
+	Pitch: number;
+	Roll: number;
+	Yaw: number;
+	RollPitchYawRange: RawDistributionVector;
+	AxisLockOption: EParticleAxisLock;
+	bCameraFacing: boolean;
+	CameraFacingUpAxisOption: EMeshCameraFacingUpAxis;
+	CameraFacingOption: EMeshCameraFacingOptions;
+	bApplyParticleRotationAsSpin: boolean;
+	bFaceCameraDirectionRatherThanPosition: boolean;
+	bCollisionsConsiderPartilceSize: boolean;
+	static Load(ResourceName: string): ParticleModuleTypeDataMesh;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleTypeDataMesh;
+	static GetDefaultObject(): ParticleModuleTypeDataMesh;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTypeDataMesh;
+	static C(Other: UObject | any): ParticleModuleTypeDataMesh;
+}
+
+declare type ETrailsRenderAxisOption = 'Trails_CameraUp' | 'Trails_SourceUp' | 'Trails_WorldUp' | 'Trails_MAX';
+declare var ETrailsRenderAxisOption : { Trails_CameraUp:'Trails_CameraUp',Trails_SourceUp:'Trails_SourceUp',Trails_WorldUp:'Trails_WorldUp',Trails_MAX:'Trails_MAX', };
+declare class ParticleModuleTypeDataRibbon extends ParticleModuleTypeDataBase { 
+	MaxTessellationBetweenParticles: number;
+	SheetsPerTrail: number;
+	MaxTrailCount: number;
+	MaxParticleInTrailCount: number;
+	bDeadTrailsOnDeactivate: boolean;
+	bDeadTrailsOnSourceLoss: boolean;
+	bClipSourceSegement: boolean;
+	bEnablePreviousTangentRecalculation: boolean;
+	bTangentRecalculationEveryFrame: boolean;
+	bSpawnInitialParticle: boolean;
+	RenderAxis: ETrailsRenderAxisOption;
+	TangentSpawningScalar: number;
+	bRenderGeometry: boolean;
+	bRenderSpawnPoints: boolean;
+	bRenderTangents: boolean;
+	bRenderTessellation: boolean;
+	TilingDistance: number;
+	DistanceTessellationStepSize: number;
+	bEnableTangentDiffInterpScale: boolean;
+	TangentTessellationScalar: number;
+	static Load(ResourceName: string): ParticleModuleTypeDataRibbon;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleTypeDataRibbon;
+	static GetDefaultObject(): ParticleModuleTypeDataRibbon;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleTypeDataRibbon;
+	static C(Other: UObject | any): ParticleModuleTypeDataRibbon;
+}
+
+declare class ParticleModuleVectorFieldBase extends ParticleModule { 
+	static Load(ResourceName: string): ParticleModuleVectorFieldBase;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldBase;
+	static GetDefaultObject(): ParticleModuleVectorFieldBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldBase;
+	static C(Other: UObject | any): ParticleModuleVectorFieldBase;
+}
+
+declare class ParticleModuleVectorFieldGlobal extends ParticleModuleVectorFieldBase { 
+	bOverrideGlobalVectorFieldTightness: boolean;
+	GlobalVectorFieldScale: number;
+	GlobalVectorFieldTightness: number;
+	static Load(ResourceName: string): ParticleModuleVectorFieldGlobal;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldGlobal;
+	static GetDefaultObject(): ParticleModuleVectorFieldGlobal;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldGlobal;
+	static C(Other: UObject | any): ParticleModuleVectorFieldGlobal;
+}
+
+declare class ParticleModuleVectorFieldLocal extends ParticleModuleVectorFieldBase { 
+	VectorField: VectorField;
+	RelativeTranslation: Vector;
+	RelativeRotation: Rotator;
+	RelativeScale3D: Vector;
+	Intensity: number;
+	Tightness: number;
+	bIgnoreComponentTransform: boolean;
+	bTileX: boolean;
+	bTileY: boolean;
+	bTileZ: boolean;
+	bUseFixDT: boolean;
+	static Load(ResourceName: string): ParticleModuleVectorFieldLocal;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldLocal;
+	static GetDefaultObject(): ParticleModuleVectorFieldLocal;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldLocal;
+	static C(Other: UObject | any): ParticleModuleVectorFieldLocal;
+}
+
+declare class ParticleModuleVectorFieldRotation extends ParticleModuleVectorFieldBase { 
+	MinInitialRotation: Vector;
+	MaxInitialRotation: Vector;
+	static Load(ResourceName: string): ParticleModuleVectorFieldRotation;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldRotation;
+	static GetDefaultObject(): ParticleModuleVectorFieldRotation;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldRotation;
+	static C(Other: UObject | any): ParticleModuleVectorFieldRotation;
+}
+
+declare class ParticleModuleVectorFieldRotationRate extends ParticleModuleVectorFieldBase { 
+	RotationRate: Vector;
+	static Load(ResourceName: string): ParticleModuleVectorFieldRotationRate;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldRotationRate;
+	static GetDefaultObject(): ParticleModuleVectorFieldRotationRate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldRotationRate;
+	static C(Other: UObject | any): ParticleModuleVectorFieldRotationRate;
+}
+
+declare class ParticleModuleVectorFieldScale extends ParticleModuleVectorFieldBase { 
+	VectorFieldScale: DistributionFloat;
+	VectorFieldScaleRaw: RawDistributionFloat;
+	static Load(ResourceName: string): ParticleModuleVectorFieldScale;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldScale;
+	static GetDefaultObject(): ParticleModuleVectorFieldScale;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldScale;
+	static C(Other: UObject | any): ParticleModuleVectorFieldScale;
+}
+
+declare class ParticleModuleVectorFieldScaleOverLife extends ParticleModuleVectorFieldBase { 
+	VectorFieldScaleOverLife: DistributionFloat;
+	VectorFieldScaleOverLifeRaw: RawDistributionFloat;
+	static Load(ResourceName: string): ParticleModuleVectorFieldScaleOverLife;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVectorFieldScaleOverLife;
+	static GetDefaultObject(): ParticleModuleVectorFieldScaleOverLife;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVectorFieldScaleOverLife;
+	static C(Other: UObject | any): ParticleModuleVectorFieldScaleOverLife;
+}
+
+declare class ParticleModuleVelocityBase extends ParticleModule { 
+	bInWorldSpace: boolean;
+	bApplyOwnerScale: boolean;
+	static Load(ResourceName: string): ParticleModuleVelocityBase;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocityBase;
+	static GetDefaultObject(): ParticleModuleVelocityBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocityBase;
+	static C(Other: UObject | any): ParticleModuleVelocityBase;
+}
+
+declare class ParticleModuleVelocity extends ParticleModuleVelocityBase { 
+	StartVelocity: RawDistributionVector;
+	StartVelocityRadial: RawDistributionFloat;
+	static Load(ResourceName: string): ParticleModuleVelocity;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocity;
+	static GetDefaultObject(): ParticleModuleVelocity;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocity;
+	static C(Other: UObject | any): ParticleModuleVelocity;
+}
+
+declare class ParticleModuleVelocity_Seeded extends ParticleModuleVelocity { 
+	RandomSeedInfo: ParticleRandomSeedInfo;
+	static Load(ResourceName: string): ParticleModuleVelocity_Seeded;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocity_Seeded;
+	static GetDefaultObject(): ParticleModuleVelocity_Seeded;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocity_Seeded;
+	static C(Other: UObject | any): ParticleModuleVelocity_Seeded;
+}
+
+declare class ParticleModuleVelocityCone extends ParticleModuleVelocityBase { 
+	Angle: RawDistributionFloat;
+	Velocity: RawDistributionFloat;
+	Direction: Vector;
+	static Load(ResourceName: string): ParticleModuleVelocityCone;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocityCone;
+	static GetDefaultObject(): ParticleModuleVelocityCone;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocityCone;
+	static C(Other: UObject | any): ParticleModuleVelocityCone;
+}
+
+declare class ParticleModuleVelocityInheritParent extends ParticleModuleVelocityBase { 
+	Scale: RawDistributionVector;
+	static Load(ResourceName: string): ParticleModuleVelocityInheritParent;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocityInheritParent;
+	static GetDefaultObject(): ParticleModuleVelocityInheritParent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocityInheritParent;
+	static C(Other: UObject | any): ParticleModuleVelocityInheritParent;
+}
+
+declare class ParticleModuleVelocityOverLifetime extends ParticleModuleVelocityBase { 
+	VelOverLife: RawDistributionVector;
+	Absolute: boolean;
+	static Load(ResourceName: string): ParticleModuleVelocityOverLifetime;
+	static Find(Outer: UObject, ResourceName: string): ParticleModuleVelocityOverLifetime;
+	static GetDefaultObject(): ParticleModuleVelocityOverLifetime;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleModuleVelocityOverLifetime;
+	static C(Other: UObject | any): ParticleModuleVelocityOverLifetime;
+}
+
+declare class ParticleSpriteEmitter extends ParticleEmitter { 
+	static Load(ResourceName: string): ParticleSpriteEmitter;
+	static Find(Outer: UObject, ResourceName: string): ParticleSpriteEmitter;
+	static GetDefaultObject(): ParticleSpriteEmitter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParticleSpriteEmitter;
+	static C(Other: UObject | any): ParticleSpriteEmitter;
+}
+
+declare class PathFollowingAgentInterface extends Interface { 
+	static Load(ResourceName: string): PathFollowingAgentInterface;
+	static Find(Outer: UObject, ResourceName: string): PathFollowingAgentInterface;
+	static GetDefaultObject(): PathFollowingAgentInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PathFollowingAgentInterface;
+	static C(Other: UObject | any): PathFollowingAgentInterface;
+}
+
+declare class PawnNoiseEmitterComponent extends ActorComponent { 
+	bAIPerceptionSystemCompatibilityMode: boolean;
+	LastRemoteNoisePosition: Vector;
+	NoiseLifetime: number;
+	LastRemoteNoiseVolume: number;
+	LastRemoteNoiseTime: number;
+	LastLocalNoiseVolume: number;
+	LastLocalNoiseTime: number;
+	static Load(ResourceName: string): PawnNoiseEmitterComponent;
+	static Find(Outer: UObject, ResourceName: string): PawnNoiseEmitterComponent;
+	static GetDefaultObject(): PawnNoiseEmitterComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PawnNoiseEmitterComponent;
+	MakeNoise(NoiseMaker: Actor,Loudness: number,NoiseLocation: Vector): void;
+	static C(Other: UObject | any): PawnNoiseEmitterComponent;
+}
+
+declare class PhysicalAnimationComponent extends ActorComponent { 
+	StrengthMultiplyer: number;
+	SkeletalMeshComponent: SkeletalMeshComponent;
+	static Load(ResourceName: string): PhysicalAnimationComponent;
+	static Find(Outer: UObject, ResourceName: string): PhysicalAnimationComponent;
+	static GetDefaultObject(): PhysicalAnimationComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicalAnimationComponent;
+	SetStrengthMultiplyer(InStrengthMultiplyer: number): void;
+	SetSkeletalMeshComponent(InSkeletalMeshComponent: SkeletalMeshComponent): void;
+	GetBodyTargetTransform(BodyName: string): Transform;
+	ApplyPhysicalAnimationSettingsBelow(BodyName: string,PhysicalAnimationData: PhysicalAnimationData,bIncludeSelf: boolean): void;
+	ApplyPhysicalAnimationSettings(BodyName: string,PhysicalAnimationData: PhysicalAnimationData): void;
+	ApplyPhysicalAnimationProfileBelow(BodyName: string,ProfileName: string,bIncludeSelf: boolean,bClearNotFound: boolean): void;
+	static C(Other: UObject | any): PhysicalAnimationComponent;
+}
+
+declare class RigidBodyBase extends Actor { 
+	static GetDefaultObject(): RigidBodyBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RigidBodyBase;
+	static C(Other: UObject | any): RigidBodyBase;
+}
+
+declare class ConstrainComponentPropName { 
+	ComponentName: string;
+	clone() : ConstrainComponentPropName;
+	static C(Other: UObject | any): ConstrainComponentPropName;
+}
+
+declare type EConstraintFrame = 'Frame1' | 'Frame2' | 'EConstraintFrame_MAX';
+declare var EConstraintFrame : { Frame1:'Frame1',Frame2:'Frame2',EConstraintFrame_MAX:'EConstraintFrame_MAX', };
+declare class PhysicsConstraintComponent extends SceneComponent { 
+	ConstraintActor1: Actor;
+	ComponentName1: ConstrainComponentPropName;
+	ConstraintActor2: Actor;
+	ComponentName2: ConstrainComponentPropName;
+	ConstraintSetup: PhysicsConstraintTemplate;
+	OnConstraintBroken: UnrealEngineMulticastDelegate<(ConstraintIndex: number) => void>;
+	ConstraintInstance: ConstraintInstance;
+	static Load(ResourceName: string): PhysicsConstraintComponent;
+	static Find(Outer: UObject, ResourceName: string): PhysicsConstraintComponent;
+	static GetDefaultObject(): PhysicsConstraintComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsConstraintComponent;
+	SetOrientationDriveTwistAndSwing(bEnableTwistDrive: boolean,bEnableSwingDrive: boolean): void;
+	SetOrientationDriveSLERP(bEnableSLERP: boolean): void;
+	SetLinearZLimit(ConstraintType: ELinearConstraintMotion,LimitSize: number): void;
+	SetLinearYLimit(ConstraintType: ELinearConstraintMotion,LimitSize: number): void;
+	SetLinearXLimit(ConstraintType: ELinearConstraintMotion,LimitSize: number): void;
+	SetLinearVelocityTarget(InVelTarget: Vector): void;
+	SetLinearVelocityDrive(bEnableDriveX: boolean,bEnableDriveY: boolean,bEnableDriveZ: boolean): void;
+	SetLinearPositionTarget(InPosTarget: Vector): void;
+	SetLinearPositionDrive(bEnableDriveX: boolean,bEnableDriveY: boolean,bEnableDriveZ: boolean): void;
+	SetLinearDriveParams(PositionStrength: number,VelocityStrength: number,InForceLimit: number): void;
+	SetLinearBreakable(bLinearBreakable: boolean,LinearBreakThreshold: number): void;
+	SetDisableCollision(bDisableCollision: boolean): void;
+	SetConstraintReferencePosition(Frame: EConstraintFrame,RefPosition: Vector): void;
+	SetConstraintReferenceOrientation(Frame: EConstraintFrame,PriAxis: Vector,SecAxis: Vector): void;
+	SetConstraintReferenceFrame(Frame: EConstraintFrame,RefFrame: Transform): void;
+	SetConstrainedComponents(Component1: PrimitiveComponent,BoneName1: string,Component2: PrimitiveComponent,BoneName2: string): void;
+	SetAngularVelocityTarget(InVelTarget: Vector): void;
+	SetAngularVelocityDriveTwistAndSwing(bEnableTwistDrive: boolean,bEnableSwingDrive: boolean): void;
+	SetAngularVelocityDriveSLERP(bEnableSLERP: boolean): void;
+	SetAngularVelocityDrive(bEnableSwingDrive: boolean,bEnableTwistDrive: boolean): void;
+	SetAngularTwistLimit(ConstraintType: EAngularConstraintMotion,TwistLimitAngle: number): void;
+	SetAngularSwing2Limit(MotionType: EAngularConstraintMotion,Swing2LimitAngle: number): void;
+	SetAngularSwing1Limit(MotionType: EAngularConstraintMotion,Swing1LimitAngle: number): void;
+	SetAngularOrientationTarget(InPosTarget: Rotator): void;
+	SetAngularOrientationDrive(bEnableSwingDrive: boolean,bEnableTwistDrive: boolean): void;
+	SetAngularDriveParams(PositionStrength: number,VelocityStrength: number,InForceLimit: number): void;
+	SetAngularDriveMode(DriveMode: EAngularDriveMode): void;
+	SetAngularBreakable(bAngularBreakable: boolean,AngularBreakThreshold: number): void;
+	IsBroken(): boolean;
+	GetCurrentTwist(): number;
+	GetCurrentSwing2(): number;
+	GetCurrentSwing1(): number;
+	GetConstraintForce(OutLinearForce?: Vector,OutAngularForce?: Vector): {OutLinearForce: Vector, OutAngularForce: Vector};
+	BreakConstraint(): void;
+	static C(Other: UObject | any): PhysicsConstraintComponent;
+}
+
+declare class PhysicsConstraintActor extends RigidBodyBase { 
+	ConstraintComp: PhysicsConstraintComponent;
+	ConstraintActor1: Actor;
+	ConstraintActor2: Actor;
+	bDisableCollision: boolean;
+	static GetDefaultObject(): PhysicsConstraintActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsConstraintActor;
+	static C(Other: UObject | any): PhysicsConstraintActor;
+}
+
+declare class PhysicsHandleComponent extends ActorComponent { 
+	GrabbedComponent: PrimitiveComponent;
+	bSoftAngularConstraint: boolean;
+	bSoftLinearConstraint: boolean;
+	bInterpolateTarget: boolean;
+	LinearDamping: number;
+	LinearStiffness: number;
+	AngularDamping: number;
+	AngularStiffness: number;
+	InterpolationSpeed: number;
+	static Load(ResourceName: string): PhysicsHandleComponent;
+	static Find(Outer: UObject, ResourceName: string): PhysicsHandleComponent;
+	static GetDefaultObject(): PhysicsHandleComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsHandleComponent;
+	SetTargetRotation(NewRotation: Rotator): void;
+	SetTargetLocationAndRotation(NewLocation: Vector,NewRotation: Rotator): void;
+	SetTargetLocation(NewLocation: Vector): void;
+	SetLinearStiffness(NewLinearStiffness: number): void;
+	SetLinearDamping(NewLinearDamping: number): void;
+	SetInterpolationSpeed(NewInterpolationSpeed: number): void;
+	SetAngularStiffness(NewAngularStiffness: number): void;
+	SetAngularDamping(NewAngularDamping: number): void;
+	ReleaseComponent(): void;
+	GrabComponentAtLocationWithRotation(Component: PrimitiveComponent,InBoneName: string,Location: Vector,Rotation: Rotator): void;
+	GrabComponentAtLocation(Component: PrimitiveComponent,InBoneName: string,GrabLocation: Vector): void;
+	GrabComponent(Component: PrimitiveComponent,InBoneName: string,GrabLocation: Vector,bConstrainRotation: boolean): void;
+	GetTargetLocationAndRotation(TargetLocation?: Vector,TargetRotation?: Rotator): {TargetLocation: Vector, TargetRotation: Rotator};
+	GetGrabbedComponent(): PrimitiveComponent;
+	static C(Other: UObject | any): PhysicsHandleComponent;
+}
+
+declare class RigidBodyErrorCorrection { 
+	PingExtrapolation: number;
+	PingLimit: number;
+	ErrorPerLinearDifference: number;
+	ErrorPerAngularDifference: number;
+	MaxRestoredStateError: number;
+	MaxLinearHardSnapDistance: number;
+	PositionLerp: number;
+	AngleLerp: number;
+	LinearVelocityCoefficient: number;
+	AngularVelocityCoefficient: number;
+	ErrorAccumulationSeconds: number;
+	ErrorAccumulationDistanceSq: number;
+	ErrorAccumulationSimilarity: number;
+	clone() : RigidBodyErrorCorrection;
+	static C(Other: UObject | any): RigidBodyErrorCorrection;
+}
+
+declare type ESettingsLockedAxis = 'None' | 'X' | 'Y' | 'Z' | 'Invalid' | 'ESettingsLockedAxis_MAX';
+declare var ESettingsLockedAxis : { None:'None',X:'X',Y:'Y',Z:'Z',Invalid:'Invalid',ESettingsLockedAxis_MAX:'ESettingsLockedAxis_MAX', };
+declare type ESettingsDOF = 'Full3D' | 'YZPlane' | 'XZPlane' | 'XYPlane' | 'ESettingsDOF_MAX';
+declare var ESettingsDOF : { Full3D:'Full3D',YZPlane:'YZPlane',XZPlane:'XZPlane',XYPlane:'XYPlane',ESettingsDOF_MAX:'ESettingsDOF_MAX', };
+declare class PhysicalSurfaceName { 
+	Type: EPhysicalSurface;
+	Name: string;
+	clone() : PhysicalSurfaceName;
+	static C(Other: UObject | any): PhysicalSurfaceName;
+}
+
+declare class PhysicsSettings extends DeveloperSettings { 
+	DefaultGravityZ: number;
+	DefaultTerminalVelocity: number;
+	DefaultFluidFriction: number;
+	SimulateScratchMemorySize: number;
+	RagdollAggregateThreshold: number;
+	TriangleMeshTriangleMinAreaThreshold: number;
+	bEnableAsyncScene: boolean;
+	bEnableShapeSharing: boolean;
+	bEnablePCM: boolean;
+	bEnableStabilization: boolean;
+	bWarnMissingLocks: boolean;
+	bEnable2DPhysics: boolean;
+	PhysicErrorCorrection: RigidBodyErrorCorrection;
+	LockedAxis: ESettingsLockedAxis;
+	DefaultDegreesOfFreedom: ESettingsDOF;
+	BounceThresholdVelocity: number;
+	FrictionCombineMode: EFrictionCombineMode;
+	RestitutionCombineMode: EFrictionCombineMode;
+	MaxAngularVelocity: number;
+	MaxDepenetrationVelocity: number;
+	ContactOffsetMultiplier: number;
+	MinContactOffset: number;
+	MaxContactOffset: number;
+	bSimulateSkeletalMeshOnDedicatedServer: boolean;
+	DefaultShapeComplexity: ECollisionTraceFlag;
+	bDefaultHasComplexCollision: boolean;
+	bSuppressFaceRemapTable: boolean;
+	bSupportUVFromHitResults: boolean;
+	bDisableActiveActors: boolean;
+	bDisableKinematicStaticPairs: boolean;
+	bDisableKinematicKinematicPairs: boolean;
+	bDisableCCD: boolean;
+	bEnableEnhancedDeterminism: boolean;
+	MaxPhysicsDeltaTime: number;
+	bSubstepping: boolean;
+	bSubsteppingAsync: boolean;
+	MaxSubstepDeltaTime: number;
+	MaxSubsteps: number;
+	SyncSceneSmoothingFactor: number;
+	AsyncSceneSmoothingFactor: number;
+	InitialAverageFrameRate: number;
+	PhysXTreeRebuildRate: number;
+	PhysicalSurfaces: PhysicalSurfaceName[];
+	DefaultBroadphaseSettings: BroadphaseSettings;
+	static Load(ResourceName: string): PhysicsSettings;
+	static Find(Outer: UObject, ResourceName: string): PhysicsSettings;
+	static GetDefaultObject(): PhysicsSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsSettings;
+	static C(Other: UObject | any): PhysicsSettings;
+}
+
+declare class PhysicsSpringComponent extends SceneComponent { 
+	SpringStiffness: number;
+	SpringDamping: number;
+	SpringLengthAtRest: number;
+	SpringRadius: number;
+	SpringChannel: ECollisionChannel;
+	bIgnoreSelf: boolean;
+	SpringCompression: number;
+	static Load(ResourceName: string): PhysicsSpringComponent;
+	static Find(Outer: UObject, ResourceName: string): PhysicsSpringComponent;
+	static GetDefaultObject(): PhysicsSpringComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsSpringComponent;
+	GetSpringRestingPoint(): Vector;
+	GetSpringDirection(): Vector;
+	GetSpringCurrentEndPoint(): Vector;
+	GetNormalizedCompressionScalar(): number;
+	static C(Other: UObject | any): PhysicsSpringComponent;
+}
+
+declare class PhysicsThrusterComponent extends SceneComponent { 
+	ThrustStrength: number;
+	static Load(ResourceName: string): PhysicsThrusterComponent;
+	static Find(Outer: UObject, ResourceName: string): PhysicsThrusterComponent;
+	static GetDefaultObject(): PhysicsThrusterComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsThrusterComponent;
+	static C(Other: UObject | any): PhysicsThrusterComponent;
+}
+
+declare class PhysicsThruster extends RigidBodyBase { 
+	ThrusterComponent: PhysicsThrusterComponent;
+	ArrowComponent: ArrowComponent;
+	static GetDefaultObject(): PhysicsThruster;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsThruster;
+	static C(Other: UObject | any): PhysicsThruster;
+}
+
+declare class SceneCapture extends Actor { 
+	MeshComp: StaticMeshComponent;
+	static GetDefaultObject(): SceneCapture;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCapture;
+	static C(Other: UObject | any): SceneCapture;
+}
+
+declare type ESceneCapturePrimitiveRenderMode = 'PRM_LegacySceneCapture' | 'PRM_RenderScenePrimitives' | 'PRM_UseShowOnlyList' | 'PRM_MAX';
+declare var ESceneCapturePrimitiveRenderMode : { PRM_LegacySceneCapture:'PRM_LegacySceneCapture',PRM_RenderScenePrimitives:'PRM_RenderScenePrimitives',PRM_UseShowOnlyList:'PRM_UseShowOnlyList',PRM_MAX:'PRM_MAX', };
+declare class EngineShowFlagsSetting { 
+	ShowFlagName: string;
+	Enabled: boolean;
+	clone() : EngineShowFlagsSetting;
+	static C(Other: UObject | any): EngineShowFlagsSetting;
+}
+
+declare class SceneCaptureComponent extends SceneComponent { 
+	PrimitiveRenderMode: ESceneCapturePrimitiveRenderMode;
+	HiddenComponents: any[];
+	HiddenActors: Actor[];
+	ShowOnlyComponents: any[];
+	ShowOnlyActors: Actor[];
+	bCaptureEveryFrame: boolean;
+	bCaptureOnMovement: boolean;
+	bAlwaysPersistRenderingState: boolean;
+	LODDistanceFactor: number;
+	MaxViewDistanceOverride: number;
+	CaptureSortPriority: number;
+	ShowFlagSettings: EngineShowFlagsSetting[];
+	ProfilingEventName: string;
+	static Load(ResourceName: string): SceneCaptureComponent;
+	static Find(Outer: UObject, ResourceName: string): SceneCaptureComponent;
+	static GetDefaultObject(): SceneCaptureComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCaptureComponent;
+	ShowOnlyComponent(InComponent: PrimitiveComponent): void;
+	ShowOnlyActorComponents(InActor: Actor): void;
+	SetCaptureSortPriority(NewCaptureSortPriority: number): void;
+	RemoveShowOnlyComponent(InComponent: PrimitiveComponent): void;
+	RemoveShowOnlyActorComponents(InActor: Actor): void;
+	HideComponent(InComponent: PrimitiveComponent): void;
+	HideActorComponents(InActor: Actor): void;
+	ClearShowOnlyComponents(InComponent: PrimitiveComponent): void;
+	ClearHiddenComponents(): void;
+	static C(Other: UObject | any): SceneCaptureComponent;
+}
+
+declare class PlanarReflectionComponent extends SceneCaptureComponent { 
+	PreviewBox: BoxComponent;
+	NormalDistortionStrength: number;
+	PrefilterRoughness: number;
+	PrefilterRoughnessDistance: number;
+	ScreenPercentage: number;
+	ExtraFOV: number;
+	DistanceFromPlaneFadeStart: number;
+	DistanceFromPlaneFadeEnd: number;
+	DistanceFromPlaneFadeoutStart: number;
+	DistanceFromPlaneFadeoutEnd: number;
+	AngleFromPlaneFadeStart: number;
+	AngleFromPlaneFadeEnd: number;
+	bRenderSceneTwoSided: boolean;
+	static Load(ResourceName: string): PlanarReflectionComponent;
+	static Find(Outer: UObject, ResourceName: string): PlanarReflectionComponent;
+	static GetDefaultObject(): PlanarReflectionComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlanarReflectionComponent;
+	static C(Other: UObject | any): PlanarReflectionComponent;
+}
+
+declare class PlanarReflection extends SceneCapture { 
+	PlanarReflectionComponent: PlanarReflectionComponent;
+	SpriteComponent: BillboardComponent;
+	bShowPreviewPlane: boolean;
+	static GetDefaultObject(): PlanarReflection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlanarReflection;
+	OnInterpToggle(bEnable: boolean): void;
+	static C(Other: UObject | any): PlanarReflection;
+}
+
+declare class PlaneReflectionCapture extends ReflectionCapture { 
+	static GetDefaultObject(): PlaneReflectionCapture;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlaneReflectionCapture;
+	static C(Other: UObject | any): PlaneReflectionCapture;
+}
+
+declare class PlaneReflectionCaptureComponent extends ReflectionCaptureComponent { 
+	InfluenceRadiusScale: number;
+	PreviewInfluenceRadius: DrawSphereComponent;
+	PreviewCaptureBox: BoxComponent;
+	static Load(ResourceName: string): PlaneReflectionCaptureComponent;
+	static Find(Outer: UObject, ResourceName: string): PlaneReflectionCaptureComponent;
+	static GetDefaultObject(): PlaneReflectionCaptureComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlaneReflectionCaptureComponent;
+	static C(Other: UObject | any): PlaneReflectionCaptureComponent;
+}
+
+declare class PlatformEventsComponent extends ActorComponent { 
+	PlatformChangedToLaptopModeDelegate: UnrealEngineMulticastDelegate<() => void>;
+	PlatformChangedToTabletModeDelegate: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): PlatformEventsComponent;
+	static Find(Outer: UObject, ResourceName: string): PlatformEventsComponent;
+	static GetDefaultObject(): PlatformEventsComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlatformEventsComponent;
+	SupportsConvertibleLaptops(): boolean;
+	IsInTabletMode(): boolean;
+	IsInLaptopMode(): boolean;
+	static C(Other: UObject | any): PlatformEventsComponent;
+}
+
+declare class PlatformInterfaceWebResponse extends UObject { 
+	OriginalURL: string;
+	ResponseCode: number;
+	Tag: number;
+	StringResponse: string;
+	BinaryResponse: number[];
+	static Load(ResourceName: string): PlatformInterfaceWebResponse;
+	static Find(Outer: UObject, ResourceName: string): PlatformInterfaceWebResponse;
+	static GetDefaultObject(): PlatformInterfaceWebResponse;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlatformInterfaceWebResponse;
+	GetNumHeaders(): number;
+	GetHeaderValue(HeaderName: string): string;
+	GetHeader(HeaderIndex: number,Header?: string,Value?: string): {Header: string, Value: string};
+	static C(Other: UObject | any): PlatformInterfaceWebResponse;
+}
+
+declare class PlayerStart extends NavigationObjectBase { 
+	PlayerStartTag: string;
+	ArrowComponent: ArrowComponent;
+	static GetDefaultObject(): PlayerStart;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlayerStart;
+	static C(Other: UObject | any): PlayerStart;
+}
+
+declare class PlayerStartPIE extends PlayerStart { 
+	static GetDefaultObject(): PlayerStartPIE;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlayerStartPIE;
+	static C(Other: UObject | any): PlayerStartPIE;
+}
+
+declare class PluginCommandlet extends Commandlet { 
+	static Load(ResourceName: string): PluginCommandlet;
+	static Find(Outer: UObject, ResourceName: string): PluginCommandlet;
+	static GetDefaultObject(): PluginCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PluginCommandlet;
+	static C(Other: UObject | any): PluginCommandlet;
+}
+
+declare class PointLight extends Light { 
+	PointLightComponent: PointLightComponent;
+	static GetDefaultObject(): PointLight;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PointLight;
+	SetRadius(NewRadius: number): void;
+	SetLightFalloffExponent(NewLightFalloffExponent: number): void;
+	static C(Other: UObject | any): PointLight;
+}
+
+declare class Polys extends UObject { 
+	static Load(ResourceName: string): Polys;
+	static Find(Outer: UObject, ResourceName: string): Polys;
+	static GetDefaultObject(): Polys;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Polys;
+	static C(Other: UObject | any): Polys;
+}
+
+declare type EBoneSpaces = 'WorldSpace' | 'ComponentSpace' | 'EBoneSpaces_MAX';
+declare var EBoneSpaces : { WorldSpace:'WorldSpace',ComponentSpace:'ComponentSpace',EBoneSpaces_MAX:'EBoneSpaces_MAX', };
+declare class PoseableMeshComponent extends SkinnedMeshComponent { 
+	static Load(ResourceName: string): PoseableMeshComponent;
+	static Find(Outer: UObject, ResourceName: string): PoseableMeshComponent;
+	static GetDefaultObject(): PoseableMeshComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PoseableMeshComponent;
+	SetBoneTransformByName(BoneName: string,InTransform: Transform,BoneSpace: EBoneSpaces): void;
+	SetBoneScaleByName(BoneName: string,InScale3D: Vector,BoneSpace: EBoneSpaces): void;
+	SetBoneRotationByName(BoneName: string,InRotation: Rotator,BoneSpace: EBoneSpaces): void;
+	SetBoneLocationByName(BoneName: string,InLocation: Vector,BoneSpace: EBoneSpaces): void;
+	ResetBoneTransformByName(BoneName: string): void;
+	GetBoneTransformByName(BoneName: string,BoneSpace: EBoneSpaces): Transform;
+	GetBoneScaleByName(BoneName: string,BoneSpace: EBoneSpaces): Vector;
+	GetBoneRotationByName(BoneName: string,BoneSpace: EBoneSpaces): Rotator;
+	GetBoneLocationByName(BoneName: string,BoneSpace: EBoneSpaces): Vector;
+	CopyPoseFromSkeletalComponent(InComponentToCopy: SkeletalMeshComponent): void;
+	static C(Other: UObject | any): PoseableMeshComponent;
+}
+
+declare class PostProcessVolume extends Volume { 
+	Settings: PostProcessSettings;
+	Priority: number;
+	BlendRadius: number;
+	BlendWeight: number;
+	bEnabled: boolean;
+	bUnbound: boolean;
+	static GetDefaultObject(): PostProcessVolume;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PostProcessVolume;
+	static C(Other: UObject | any): PostProcessVolume;
+}
+
+declare class PrecomputedVisibilityOverrideVolume extends Volume { 
+	OverrideVisibleActors: Actor[];
+	OverrideInvisibleActors: Actor[];
+	OverrideInvisibleLevels: string[];
+	static GetDefaultObject(): PrecomputedVisibilityOverrideVolume;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PrecomputedVisibilityOverrideVolume;
+	static C(Other: UObject | any): PrecomputedVisibilityOverrideVolume;
+}
+
+declare class PrecomputedVisibilityVolume extends Volume { 
+	static GetDefaultObject(): PrecomputedVisibilityVolume;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PrecomputedVisibilityVolume;
+	static C(Other: UObject | any): PrecomputedVisibilityVolume;
+}
+
+declare class PreviewCollectionInterface extends Interface { 
+	static Load(ResourceName: string): PreviewCollectionInterface;
+	static Find(Outer: UObject, ResourceName: string): PreviewCollectionInterface;
+	static GetDefaultObject(): PreviewCollectionInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PreviewCollectionInterface;
+	static C(Other: UObject | any): PreviewCollectionInterface;
+}
+
+declare class PreviewMeshCollectionEntry { 
+	SkeletalMesh: SkeletalMesh;
+	clone() : PreviewMeshCollectionEntry;
+	static C(Other: UObject | any): PreviewMeshCollectionEntry;
+}
+
+declare class PreviewMeshCollection extends DataAsset { 
+	Skeleton: Skeleton;
+	SkeletalMeshes: PreviewMeshCollectionEntry[];
+	static Load(ResourceName: string): PreviewMeshCollection;
+	static Find(Outer: UObject, ResourceName: string): PreviewMeshCollection;
+	static GetDefaultObject(): PreviewMeshCollection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PreviewMeshCollection;
+	static C(Other: UObject | any): PreviewMeshCollection;
+}
+
+declare class CollectionReference { 
+	CollectionName: string;
+	clone() : CollectionReference;
+	static C(Other: UObject | any): CollectionReference;
+}
+
+declare class PrimaryAssetLabel extends PrimaryDataAsset { 
+	Rules: PrimaryAssetRules;
+	bLabelAssetsInMyDirectory: boolean;
+	bIsRuntimeLabel: boolean;
+	ExplicitAssets: UObject[];
+	ExplicitBlueprints: Class[];
+	AssetCollection: CollectionReference;
+	static Load(ResourceName: string): PrimaryAssetLabel;
+	static Find(Outer: UObject, ResourceName: string): PrimaryAssetLabel;
+	static GetDefaultObject(): PrimaryAssetLabel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PrimaryAssetLabel;
+	static C(Other: UObject | any): PrimaryAssetLabel;
+}
+
+declare class ProjectileMovementComponent extends MovementComponent { 
+	InitialSpeed: number;
+	MaxSpeed: number;
+	bRotationFollowsVelocity: boolean;
+	bShouldBounce: boolean;
+	bInitialVelocityInLocalSpace: boolean;
+	bForceSubStepping: boolean;
+	bSimulationEnabled: boolean;
+	bSweepCollision: boolean;
+	bIsHomingProjectile: boolean;
+	bBounceAngleAffectsFriction: boolean;
+	bIsSliding: boolean;
+	bInterpMovement: boolean;
+	bInterpRotation: boolean;
+	PreviousHitTime: number;
+	PreviousHitNormal: Vector;
+	ProjectileGravityScale: number;
+	Buoyancy: number;
+	Bounciness: number;
+	Friction: number;
+	BounceVelocityStopSimulatingThreshold: number;
+	MinFrictionFraction: number;
+	OnProjectileBounce: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, ImpactVelocity: Vector) => void>;
+	OnProjectileStop: UnrealEngineMulticastDelegate<(ImpactResult: HitResult) => void>;
+	HomingAccelerationMagnitude: number;
+	HomingTargetComponent: any;
+	MaxSimulationTimeStep: number;
+	MaxSimulationIterations: number;
+	BounceAdditionalIterations: number;
+	InterpLocationTime: number;
+	InterpRotationTime: number;
+	InterpLocationMaxLagDistance: number;
+	InterpLocationSnapToTargetDistance: number;
+	static Load(ResourceName: string): ProjectileMovementComponent;
+	static Find(Outer: UObject, ResourceName: string): ProjectileMovementComponent;
+	static GetDefaultObject(): ProjectileMovementComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProjectileMovementComponent;
+	StopSimulating(HitResult: HitResult): void;
+	SetVelocityInLocalSpace(NewVelocity: Vector): void;
+	SetInterpolatedComponent(Component: SceneComponent): void;
+	ResetInterpolation(): void;
+	MoveInterpolationTarget(NewLocation: Vector,NewRotation: Rotator): void;
+	LimitVelocity(NewVelocity: Vector): Vector;
+	IsVelocityUnderSimulationThreshold(): boolean;
+	IsInterpolationComplete(): boolean;
+	static C(Other: UObject | any): ProjectileMovementComponent;
+}
+
+declare class ProxyLODMeshSimplificationSettings extends DeveloperSettings { 
+	ProxyLODMeshReductionModuleName: string;
+	static Load(ResourceName: string): ProxyLODMeshSimplificationSettings;
+	static Find(Outer: UObject, ResourceName: string): ProxyLODMeshSimplificationSettings;
+	static GetDefaultObject(): ProxyLODMeshSimplificationSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProxyLODMeshSimplificationSettings;
+	static C(Other: UObject | any): ProxyLODMeshSimplificationSettings;
+}
+
+declare class RadialForceComponent extends SceneComponent { 
+	Radius: number;
+	Falloff: ERadialImpulseFalloff;
+	ImpulseStrength: number;
+	bImpulseVelChange: boolean;
+	bIgnoreOwningActor: boolean;
+	ForceStrength: number;
+	DestructibleDamage: number;
+	ObjectTypesToAffect: EObjectTypeQuery[];
+	static Load(ResourceName: string): RadialForceComponent;
+	static Find(Outer: UObject, ResourceName: string): RadialForceComponent;
+	static GetDefaultObject(): RadialForceComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RadialForceComponent;
+	RemoveObjectTypeToAffect(ObjectType: EObjectTypeQuery): void;
+	FireImpulse(): void;
+	AddObjectTypeToAffect(ObjectType: EObjectTypeQuery): void;
+	static C(Other: UObject | any): RadialForceComponent;
+}
+
+declare class RadialForceActor extends RigidBodyBase { 
+	ForceComponent: RadialForceComponent;
+	SpriteComponent: BillboardComponent;
+	static GetDefaultObject(): RadialForceActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RadialForceActor;
+	ToggleForce(): void;
+	FireImpulse(): void;
+	EnableForce(): void;
+	DisableForce(): void;
+	static C(Other: UObject | any): RadialForceActor;
+}
+
+declare class RectLightComponent extends LocalLightComponent { 
+	SourceWidth: number;
+	SourceHeight: number;
+	SourceTexture: Texture;
+	static Load(ResourceName: string): RectLightComponent;
+	static Find(Outer: UObject, ResourceName: string): RectLightComponent;
+	static GetDefaultObject(): RectLightComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RectLightComponent;
+	SetSourceWidth(bNewValue: number): void;
+	SetSourceHeight(NewValue: number): void;
+	static C(Other: UObject | any): RectLightComponent;
+}
+
+declare class RectLight extends Light { 
+	RectLightComponent: RectLightComponent;
+	static GetDefaultObject(): RectLight;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RectLight;
+	static C(Other: UObject | any): RectLight;
+}
+
+declare type EMobileMSAASampleCount = 'One' | 'Two' | 'Four' | 'Eight' | 'EMobileMSAASampleCount_MAX';
+declare var EMobileMSAASampleCount : { One:'One',Two:'Two',Four:'Four',Eight:'Eight',EMobileMSAASampleCount_MAX:'EMobileMSAASampleCount_MAX', };
+declare type ETranslucentSortPolicy = 'SortByDistance' | 'SortByProjectedZ' | 'SortAlongAxis' | 'ETranslucentSortPolicy_MAX';
+declare var ETranslucentSortPolicy : { SortByDistance:'SortByDistance',SortByProjectedZ:'SortByProjectedZ',SortAlongAxis:'SortAlongAxis',ETranslucentSortPolicy_MAX:'ETranslucentSortPolicy_MAX', };
+declare type ECustomDepthStencil = 'Disabled' | 'Enabled' | 'EnabledOnDemand' | 'EnabledWithStencil' | 'ECustomDepthStencil_MAX';
+declare var ECustomDepthStencil : { Disabled:'Disabled',Enabled:'Enabled',EnabledOnDemand:'EnabledOnDemand',EnabledWithStencil:'EnabledWithStencil',ECustomDepthStencil_MAX:'ECustomDepthStencil_MAX', };
+declare type EAlphaChannelMode = 'Disabled' | 'LinearColorSpaceOnly' | 'AllowThroughTonemapper' | 'EAlphaChannelMode_MAX';
+declare var EAlphaChannelMode : { Disabled:'Disabled',LinearColorSpaceOnly:'LinearColorSpaceOnly',AllowThroughTonemapper:'AllowThroughTonemapper',EAlphaChannelMode_MAX:'EAlphaChannelMode_MAX', };
+declare type EAutoExposureMethodUI = 'AEM_Histogram' | 'AEM_Basic' | 'AEM_Manual' | 'AEM_MAX';
+declare var EAutoExposureMethodUI : { AEM_Histogram:'AEM_Histogram',AEM_Basic:'AEM_Basic',AEM_Manual:'AEM_Manual',AEM_MAX:'AEM_MAX', };
+declare type EAntiAliasingMethod = 'AAM_None' | 'AAM_FXAA' | 'AAM_TemporalAA' | 'AAM_MSAA' | 'AAM_MAX';
+declare var EAntiAliasingMethod : { AAM_None:'AAM_None',AAM_FXAA:'AAM_FXAA',AAM_TemporalAA:'AAM_TemporalAA',AAM_MSAA:'AAM_MSAA',AAM_MAX:'AAM_MAX', };
+declare type EDefaultBackBufferPixelFormat = 'DBBPF_B8G8R8A8' | 'DBBPF_A16B16G16R16_DEPRECATED' | 'DBBPF_FloatRGB_DEPRECATED' | 'DBBPF_FloatRGBA' | 'DBBPF_A2B10G10R10' | 'DBBPF_MAX';
+declare var EDefaultBackBufferPixelFormat : { DBBPF_B8G8R8A8:'DBBPF_B8G8R8A8',DBBPF_A16B16G16R16_DEPRECATED:'DBBPF_A16B16G16R16_DEPRECATED',DBBPF_FloatRGB_DEPRECATED:'DBBPF_FloatRGB_DEPRECATED',DBBPF_FloatRGBA:'DBBPF_FloatRGBA',DBBPF_A2B10G10R10:'DBBPF_A2B10G10R10',DBBPF_MAX:'DBBPF_MAX', };
+declare type EEarlyZPass = 'None' | 'OpaqueOnly' | 'OpaqueAndMasked' | 'Auto' | 'EEarlyZPass_MAX';
+declare var EEarlyZPass : { None:'None',OpaqueOnly:'OpaqueOnly',OpaqueAndMasked:'OpaqueAndMasked',Auto:'Auto',EEarlyZPass_MAX:'EEarlyZPass_MAX', };
+declare type EClearSceneOptions = 'NoClear' | 'HardwareClear' | 'QuadAtMaxZ' | 'EClearSceneOptions_MAX';
+declare var EClearSceneOptions : { NoClear:'NoClear',HardwareClear:'HardwareClear',QuadAtMaxZ:'QuadAtMaxZ',EClearSceneOptions_MAX:'EClearSceneOptions_MAX', };
+declare type EGBufferFormat = 'Force8BitsPerChannel' | 'Default' | 'HighPrecisionNormals' | 'Force16BitsPerChannel' | 'EGBufferFormat_MAX';
+declare var EGBufferFormat : { Force8BitsPerChannel:'Force8BitsPerChannel',Default:'Default',HighPrecisionNormals:'HighPrecisionNormals',Force16BitsPerChannel:'Force16BitsPerChannel',EGBufferFormat_MAX:'EGBufferFormat_MAX', };
+declare class RendererSettings extends DeveloperSettings { 
+	bMobileHDR: boolean;
+	bMobileDisableVertexFog: boolean;
+	MaxMobileCascades: number;
+	MobileMSAASampleCount: EMobileMSAASampleCount;
+	bMobileUseLegacyShadingModel: boolean;
+	bMobileAllowDitheredLODTransition: boolean;
+	bMobileAllowSoftwareOcclusionCulling: boolean;
+	bDiscardUnusedQualityLevels: boolean;
+	bOcclusionCulling: boolean;
+	MinScreenRadiusForLights: number;
+	MinScreenRadiusForEarlyZPass: number;
+	MinScreenRadiusForCSMdepth: number;
+	bPrecomputedVisibilityWarning: boolean;
+	bTextureStreaming: boolean;
+	bUseDXT5NormalMaps: boolean;
+	bClearCoatEnableSecondNormal: boolean;
+	ReflectionCaptureResolution: number;
+	ReflectionEnvironmentLightmapMixBasedOnRoughness: boolean;
+	bForwardShading: boolean;
+	bVertexFoggingForOpaque: boolean;
+	bAllowStaticLighting: boolean;
+	bUseNormalMapsForStaticLighting: boolean;
+	bGenerateMeshDistanceFields: boolean;
+	bEightBitMeshDistanceFields: boolean;
+	bGenerateLandscapeGIData: boolean;
+	bCompressMeshDistanceFields: boolean;
+	TessellationAdaptivePixelsPerTriangle: number;
+	bSeparateTranslucency: boolean;
+	TranslucentSortPolicy: ETranslucentSortPolicy;
+	TranslucentSortAxis: Vector;
+	CustomDepthStencil: ECustomDepthStencil;
+	bCustomDepthTaaJitter: boolean;
+	bEnableAlphaChannelInPostProcessing: EAlphaChannelMode;
+	bUseNewAlgorithm: boolean;
+	bDefaultFeatureBloom: boolean;
+	bDefaultFeatureAmbientOcclusion: boolean;
+	bDefaultFeatureAmbientOcclusionStaticFraction: boolean;
+	bDefaultFeatureAutoExposure: boolean;
+	DefaultFeatureAutoExposure: EAutoExposureMethodUI;
+	bExtendDefaultLuminanceRangeInAutoExposureSettings: boolean;
+	bUsePreExposure: boolean;
+	bDefaultFeatureMotionBlur: boolean;
+	bDefaultFeatureLensFlare: boolean;
+	bTemporalUpsampling: boolean;
+	DefaultFeatureAntiAliasing: EAntiAliasingMethod;
+	DefaultLightUnits: ELightUnits;
+	DefaultBackBufferPixelFormat: EDefaultBackBufferPixelFormat;
+	bRenderUnbuiltPreviewShadowsInGame: boolean;
+	bStencilForLODDither: boolean;
+	EarlyZPass: EEarlyZPass;
+	bEarlyZPassMovable: boolean;
+	bEarlyZPassOnlyMaterialMasking: boolean;
+	bDBuffer: boolean;
+	ClearSceneMethod: EClearSceneOptions;
+	bBasePassOutputsVelocity: boolean;
+	bSelectiveBasePassOutputs: boolean;
+	bDefaultParticleCutouts: boolean;
+	GPUSimulationTextureSizeX: number;
+	GPUSimulationTextureSizeY: number;
+	bGlobalClipPlane: boolean;
+	GBufferFormat: EGBufferFormat;
+	bUseGPUMorphTargets: boolean;
+	bNvidiaAftermathEnabled: boolean;
+	bInstancedStereo: boolean;
+	bMultiView: boolean;
+	bMobileMultiView: boolean;
+	bMobileMultiViewDirect: boolean;
+	bMonoscopicFarField: boolean;
+	bRoundRobinOcclusion: boolean;
+	bODSCapture: boolean;
+	WireframeCullThreshold: number;
+	bSupportStationarySkylight: boolean;
+	bSupportLowQualityLightmaps: boolean;
+	bSupportPointLightWholeSceneShadows: boolean;
+	bSupportAtmosphericFog: boolean;
+	bSupportSkinCacheShaders: boolean;
+	bMobileEnableStaticAndCSMShadowReceivers: boolean;
+	bMobileEnableMovableLightCSMShaderCulling: boolean;
+	bMobileAllowDistanceFieldShadows: boolean;
+	bMobileAllowMovableDirectionalLights: boolean;
+	MobileNumDynamicPointLights: any;
+	bMobileDynamicPointLightsUseStaticBranch: boolean;
+	SkinCacheSceneMemoryLimitInMB: number;
+	bGPUSkinLimit2BoneInfluences: boolean;
+	bSupportDepthOnlyIndexBuffers: boolean;
+	bSupportReversedIndexBuffers: boolean;
+	bSupportMaterialLayers: boolean;
+	static Load(ResourceName: string): RendererSettings;
+	static Find(Outer: UObject, ResourceName: string): RendererSettings;
+	static GetDefaultObject(): RendererSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RendererSettings;
+	static C(Other: UObject | any): RendererSettings;
+}
+
+declare class RendererOverrideSettings extends DeveloperSettings { 
+	bSupportAllShaderPermutations: boolean;
+	bForceRecomputeTangents: boolean;
+	static Load(ResourceName: string): RendererOverrideSettings;
+	static Find(Outer: UObject, ResourceName: string): RendererOverrideSettings;
+	static GetDefaultObject(): RendererOverrideSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RendererOverrideSettings;
+	static C(Other: UObject | any): RendererOverrideSettings;
+}
+
+declare class ReplicationConnectionDriver extends UObject { 
+	static Load(ResourceName: string): ReplicationConnectionDriver;
+	static Find(Outer: UObject, ResourceName: string): ReplicationConnectionDriver;
+	static GetDefaultObject(): ReplicationConnectionDriver;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReplicationConnectionDriver;
+	static C(Other: UObject | any): ReplicationConnectionDriver;
+}
+
+declare class RotatingMovementComponent extends MovementComponent { 
+	RotationRate: Rotator;
+	PivotTranslation: Vector;
+	bRotationInLocalSpace: boolean;
+	static Load(ResourceName: string): RotatingMovementComponent;
+	static Find(Outer: UObject, ResourceName: string): RotatingMovementComponent;
+	static GetDefaultObject(): RotatingMovementComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RotatingMovementComponent;
+	static C(Other: UObject | any): RotatingMovementComponent;
+}
+
+declare class RVOAvoidanceInterface extends Interface { 
+	static Load(ResourceName: string): RVOAvoidanceInterface;
+	static Find(Outer: UObject, ResourceName: string): RVOAvoidanceInterface;
+	static GetDefaultObject(): RVOAvoidanceInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RVOAvoidanceInterface;
+	static C(Other: UObject | any): RVOAvoidanceInterface;
+}
+
+declare class Scene extends UObject { 
+	static Load(ResourceName: string): Scene;
+	static Find(Outer: UObject, ResourceName: string): Scene;
+	static GetDefaultObject(): Scene;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Scene;
+	static C(Other: UObject | any): Scene;
+}
+
+declare type ESceneCaptureSource = 'SCS_SceneColorHDR' | 'SCS_SceneColorHDRNoAlpha' | 'SCS_FinalColorLDR' | 'SCS_SceneColorSceneDepth' | 'SCS_SceneDepth' | 'SCS_DeviceDepth' | 'SCS_Normal' | 'SCS_BaseColor' | 'SCS_MAX';
+declare var ESceneCaptureSource : { SCS_SceneColorHDR:'SCS_SceneColorHDR',SCS_SceneColorHDRNoAlpha:'SCS_SceneColorHDRNoAlpha',SCS_FinalColorLDR:'SCS_FinalColorLDR',SCS_SceneColorSceneDepth:'SCS_SceneColorSceneDepth',SCS_SceneDepth:'SCS_SceneDepth',SCS_DeviceDepth:'SCS_DeviceDepth',SCS_Normal:'SCS_Normal',SCS_BaseColor:'SCS_BaseColor',SCS_MAX:'SCS_MAX', };
+declare type ESceneCaptureCompositeMode = 'SCCM_Overwrite' | 'SCCM_Additive' | 'SCCM_Composite' | 'SCCM_MAX';
+declare var ESceneCaptureCompositeMode : { SCCM_Overwrite:'SCCM_Overwrite',SCCM_Additive:'SCCM_Additive',SCCM_Composite:'SCCM_Composite',SCCM_MAX:'SCCM_MAX', };
+declare class SceneCaptureComponent2D extends SceneCaptureComponent { 
+	ProjectionType: ECameraProjectionMode;
+	FOVAngle: number;
+	OrthoWidth: number;
+	TextureTarget: TextureRenderTarget2D;
+	CaptureSource: ESceneCaptureSource;
+	CompositeMode: ESceneCaptureCompositeMode;
+	PostProcessSettings: PostProcessSettings;
+	PostProcessBlendWeight: number;
+	bUseCustomProjectionMatrix: boolean;
+	CustomProjectionMatrix: Matrix;
+	bEnableClipPlane: boolean;
+	ClipPlaneBase: Vector;
+	ClipPlaneNormal: Vector;
+	bCameraCutThisFrame: boolean;
+	static Load(ResourceName: string): SceneCaptureComponent2D;
+	static Find(Outer: UObject, ResourceName: string): SceneCaptureComponent2D;
+	static GetDefaultObject(): SceneCaptureComponent2D;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCaptureComponent2D;
+	CaptureScene(): void;
+	static C(Other: UObject | any): SceneCaptureComponent2D;
+}
+
+declare class SceneCapture2D extends SceneCapture { 
+	CaptureComponent2D: SceneCaptureComponent2D;
+	DrawFrustum: DrawFrustumComponent;
+	static GetDefaultObject(): SceneCapture2D;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCapture2D;
+	OnInterpToggle(bEnable: boolean): void;
+	static C(Other: UObject | any): SceneCapture2D;
+}
+
+declare class TextureRenderTargetCube extends TextureRenderTarget { 
+	SizeX: number;
+	ClearColor: LinearColor;
+	OverrideFormat: EPixelFormat;
+	bHDR: boolean;
+	bForceLinearGamma: boolean;
+	static Load(ResourceName: string): TextureRenderTargetCube;
+	static Find(Outer: UObject, ResourceName: string): TextureRenderTargetCube;
+	static GetDefaultObject(): TextureRenderTargetCube;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureRenderTargetCube;
+	static C(Other: UObject | any): TextureRenderTargetCube;
+}
+
+declare class SceneCaptureComponentCube extends SceneCaptureComponent { 
+	TextureTarget: TextureRenderTargetCube;
+	TextureTargetLeft: TextureRenderTargetCube;
+	TextureTargetRight: TextureRenderTargetCube;
+	TextureTargetODS: TextureRenderTarget2D;
+	IPD: number;
+	static Load(ResourceName: string): SceneCaptureComponentCube;
+	static Find(Outer: UObject, ResourceName: string): SceneCaptureComponentCube;
+	static GetDefaultObject(): SceneCaptureComponentCube;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCaptureComponentCube;
+	CaptureScene(): void;
+	static C(Other: UObject | any): SceneCaptureComponentCube;
+}
+
+declare class SceneCaptureCube extends SceneCapture { 
+	CaptureComponentCube: SceneCaptureComponentCube;
+	DrawFrustum: DrawFrustumComponent;
+	static GetDefaultObject(): SceneCaptureCube;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SceneCaptureCube;
+	OnInterpToggle(bEnable: boolean): void;
+	static C(Other: UObject | any): SceneCaptureCube;
+}
+
+declare type EShadowMapFlags = 'SMF_None' | 'SMF_Streamed' | 'SMF_MAX';
+declare var EShadowMapFlags : { SMF_None:'SMF_None',SMF_Streamed:'SMF_Streamed',SMF_MAX:'SMF_MAX', };
+declare class ShadowMapTexture2D extends Texture2D { 
+	ShadowmapFlags: EShadowMapFlags;
+	static Load(ResourceName: string): ShadowMapTexture2D;
+	static Find(Outer: UObject, ResourceName: string): ShadowMapTexture2D;
+	static GetDefaultObject(): ShadowMapTexture2D;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ShadowMapTexture2D;
+	static C(Other: UObject | any): ShadowMapTexture2D;
+}
+
+declare type ESkyLightSourceType = 'SLS_CapturedScene' | 'SLS_SpecifiedCubemap' | 'SLS_MAX';
+declare var ESkyLightSourceType : { SLS_CapturedScene:'SLS_CapturedScene',SLS_SpecifiedCubemap:'SLS_SpecifiedCubemap',SLS_MAX:'SLS_MAX', };
+declare type EOcclusionCombineMode = 'OCM_Minimum' | 'OCM_Multiply' | 'OCM_MAX';
+declare var EOcclusionCombineMode : { OCM_Minimum:'OCM_Minimum',OCM_Multiply:'OCM_Multiply',OCM_MAX:'OCM_MAX', };
+declare class SkyLightComponent extends LightComponentBase { 
+	SourceType: ESkyLightSourceType;
+	Cubemap: TextureCube;
+	SourceCubemapAngle: number;
+	CubemapResolution: number;
+	SkyDistanceThreshold: number;
+	bCaptureEmissiveOnly: boolean;
+	bLowerHemisphereIsBlack: boolean;
+	LowerHemisphereColor: LinearColor;
+	OcclusionMaxDistance: number;
+	Contrast: number;
+	OcclusionExponent: number;
+	MinOcclusion: number;
+	OcclusionTint: Color;
+	OcclusionCombineMode: EOcclusionCombineMode;
+	BlendDestinationCubemap: TextureCube;
+	static Load(ResourceName: string): SkyLightComponent;
+	static Find(Outer: UObject, ResourceName: string): SkyLightComponent;
+	static GetDefaultObject(): SkyLightComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkyLightComponent;
+	SetVolumetricScatteringIntensity(NewIntensity: number): void;
+	SetOcclusionTint(InTint: Color): void;
+	SetOcclusionExponent(InOcclusionExponent: number): void;
+	SetOcclusionContrast(InOcclusionContrast: number): void;
+	SetMinOcclusion(InMinOcclusion: number): void;
+	SetLowerHemisphereColor(InLowerHemisphereColor: LinearColor): void;
+	SetLightColor(NewLightColor: LinearColor): void;
+	SetIntensity(NewIntensity: number): void;
+	SetIndirectLightingIntensity(NewIntensity: number): void;
+	SetCubemapBlend(SourceCubemap: TextureCube,DestinationCubemap: TextureCube,InBlendFraction: number): void;
+	SetCubemap(NewCubemap: TextureCube): void;
+	RecaptureSky(): void;
+	static C(Other: UObject | any): SkyLightComponent;
+}
+
+declare class SkyLight extends Info { 
+	LightComponent: SkyLightComponent;
+	bEnabled: boolean;
+	static GetDefaultObject(): SkyLight;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkyLight;
+	OnRep_bEnabled(): void;
+	static C(Other: UObject | any): SkyLight;
+}
+
+declare class SlateTextureAtlasInterface extends Interface { 
+	static Load(ResourceName: string): SlateTextureAtlasInterface;
+	static Find(Outer: UObject, ResourceName: string): SlateTextureAtlasInterface;
+	static GetDefaultObject(): SlateTextureAtlasInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SlateTextureAtlasInterface;
+	static C(Other: UObject | any): SlateTextureAtlasInterface;
+}
+
+declare class SmokeTestCommandlet extends Commandlet { 
+	static Load(ResourceName: string): SmokeTestCommandlet;
+	static Find(Outer: UObject, ResourceName: string): SmokeTestCommandlet;
+	static GetDefaultObject(): SmokeTestCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SmokeTestCommandlet;
+	static C(Other: UObject | any): SmokeTestCommandlet;
+}
+
+declare class SoundGroup { 
+	SoundGroup: ESoundGroup;
+	DisplayName: string;
+	bAlwaysDecompressOnLoad: boolean;
+	DecompressedDuration: number;
+	clone() : SoundGroup;
+	static C(Other: UObject | any): SoundGroup;
+}
+
+declare class SoundGroups extends UObject { 
+	SoundGroupProfiles: SoundGroup[];
+	static Load(ResourceName: string): SoundGroups;
+	static Find(Outer: UObject, ResourceName: string): SoundGroups;
+	static GetDefaultObject(): SoundGroups;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundGroups;
+	static C(Other: UObject | any): SoundGroups;
+}
+
+declare class SoundNodeAssetReferencer extends SoundNode { 
+	static Load(ResourceName: string): SoundNodeAssetReferencer;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeAssetReferencer;
+	static GetDefaultObject(): SoundNodeAssetReferencer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeAssetReferencer;
+	static C(Other: UObject | any): SoundNodeAssetReferencer;
+}
+
+declare class SoundNodeAttenuation extends SoundNode { 
+	AttenuationSettings: SoundAttenuation;
+	AttenuationOverrides: SoundAttenuationSettings;
+	bOverrideAttenuation: boolean;
+	static Load(ResourceName: string): SoundNodeAttenuation;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeAttenuation;
+	static GetDefaultObject(): SoundNodeAttenuation;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeAttenuation;
+	static C(Other: UObject | any): SoundNodeAttenuation;
+}
+
+declare class SoundNodeBranch extends SoundNode { 
+	BoolParameterName: string;
+	static Load(ResourceName: string): SoundNodeBranch;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeBranch;
+	static GetDefaultObject(): SoundNodeBranch;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeBranch;
+	static C(Other: UObject | any): SoundNodeBranch;
+}
+
+declare class SoundNodeConcatenator extends SoundNode { 
+	InputVolume: number[];
+	static Load(ResourceName: string): SoundNodeConcatenator;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeConcatenator;
+	static GetDefaultObject(): SoundNodeConcatenator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeConcatenator;
+	static C(Other: UObject | any): SoundNodeConcatenator;
+}
+
+declare class SoundNodeDelay extends SoundNode { 
+	DelayMin: number;
+	DelayMax: number;
+	static Load(ResourceName: string): SoundNodeDelay;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeDelay;
+	static GetDefaultObject(): SoundNodeDelay;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeDelay;
+	static C(Other: UObject | any): SoundNodeDelay;
+}
+
+declare class DialogueWaveParameter { 
+	DialogueWave: DialogueWave;
+	Context: DialogueContext;
+	clone() : DialogueWaveParameter;
+	static C(Other: UObject | any): DialogueWaveParameter;
+}
+
+declare class SoundNodeDialoguePlayer extends SoundNode { 
+	DialogueWaveParameter: DialogueWaveParameter;
+	bLooping: boolean;
+	static Load(ResourceName: string): SoundNodeDialoguePlayer;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeDialoguePlayer;
+	static GetDefaultObject(): SoundNodeDialoguePlayer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeDialoguePlayer;
+	static C(Other: UObject | any): SoundNodeDialoguePlayer;
+}
+
+declare class DistanceDatum { 
+	FadeInDistanceStart: number;
+	FadeInDistanceEnd: number;
+	FadeOutDistanceStart: number;
+	FadeOutDistanceEnd: number;
+	Volume: number;
+	clone() : DistanceDatum;
+	static C(Other: UObject | any): DistanceDatum;
+}
+
+declare class SoundNodeDistanceCrossFade extends SoundNode { 
+	CrossFadeInput: DistanceDatum[];
+	static Load(ResourceName: string): SoundNodeDistanceCrossFade;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeDistanceCrossFade;
+	static GetDefaultObject(): SoundNodeDistanceCrossFade;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeDistanceCrossFade;
+	static C(Other: UObject | any): SoundNodeDistanceCrossFade;
+}
+
+declare class SoundNodeDoppler extends SoundNode { 
+	DopplerIntensity: number;
+	static Load(ResourceName: string): SoundNodeDoppler;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeDoppler;
+	static GetDefaultObject(): SoundNodeDoppler;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeDoppler;
+	static C(Other: UObject | any): SoundNodeDoppler;
+}
+
+declare class SoundNodeEnveloper extends SoundNode { 
+	LoopStart: number;
+	LoopEnd: number;
+	DurationAfterLoop: number;
+	LoopCount: number;
+	bLoopIndefinitely: boolean;
+	bLoop: boolean;
+	VolumeInterpCurve: DistributionFloatConstantCurve;
+	PitchInterpCurve: DistributionFloatConstantCurve;
+	VolumeCurve: RuntimeFloatCurve;
+	PitchCurve: RuntimeFloatCurve;
+	PitchMin: number;
+	PitchMax: number;
+	VolumeMin: number;
+	VolumeMax: number;
+	static Load(ResourceName: string): SoundNodeEnveloper;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeEnveloper;
+	static GetDefaultObject(): SoundNodeEnveloper;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeEnveloper;
+	static C(Other: UObject | any): SoundNodeEnveloper;
+}
+
+declare class SoundNodeGroupControl extends SoundNode { 
+	GroupSizes: number[];
+	static Load(ResourceName: string): SoundNodeGroupControl;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeGroupControl;
+	static GetDefaultObject(): SoundNodeGroupControl;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeGroupControl;
+	static C(Other: UObject | any): SoundNodeGroupControl;
+}
+
+declare class SoundNodeLooping extends SoundNode { 
+	LoopCount: number;
+	bLoopIndefinitely: boolean;
+	static Load(ResourceName: string): SoundNodeLooping;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeLooping;
+	static GetDefaultObject(): SoundNodeLooping;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeLooping;
+	static C(Other: UObject | any): SoundNodeLooping;
+}
+
+declare class SoundNodeMature extends SoundNode { 
+	static Load(ResourceName: string): SoundNodeMature;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeMature;
+	static GetDefaultObject(): SoundNodeMature;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeMature;
+	static C(Other: UObject | any): SoundNodeMature;
+}
+
+declare class SoundNodeMixer extends SoundNode { 
+	InputVolume: number[];
+	static Load(ResourceName: string): SoundNodeMixer;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeMixer;
+	static GetDefaultObject(): SoundNodeMixer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeMixer;
+	static C(Other: UObject | any): SoundNodeMixer;
+}
+
+declare class SoundNodeModulator extends SoundNode { 
+	PitchMin: number;
+	PitchMax: number;
+	VolumeMin: number;
+	VolumeMax: number;
+	static Load(ResourceName: string): SoundNodeModulator;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeModulator;
+	static GetDefaultObject(): SoundNodeModulator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeModulator;
+	static C(Other: UObject | any): SoundNodeModulator;
+}
+
+declare type ModulationParamMode = 'MPM_Normal' | 'MPM_Abs' | 'MPM_Direct' | 'MPM_MAX';
+declare var ModulationParamMode : { MPM_Normal:'MPM_Normal',MPM_Abs:'MPM_Abs',MPM_Direct:'MPM_Direct',MPM_MAX:'MPM_MAX', };
+declare class ModulatorContinuousParams { 
+	ParameterName: string;
+	Default: number;
+	MinInput: number;
+	MaxInput: number;
+	MinOutput: number;
+	MaxOutput: number;
+	ParamMode: ModulationParamMode;
+	clone() : ModulatorContinuousParams;
+	static C(Other: UObject | any): ModulatorContinuousParams;
+}
+
+declare class SoundNodeModulatorContinuous extends SoundNode { 
+	PitchModulationParams: ModulatorContinuousParams;
+	VolumeModulationParams: ModulatorContinuousParams;
+	static Load(ResourceName: string): SoundNodeModulatorContinuous;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeModulatorContinuous;
+	static GetDefaultObject(): SoundNodeModulatorContinuous;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeModulatorContinuous;
+	static C(Other: UObject | any): SoundNodeModulatorContinuous;
+}
+
+declare class SoundNodeOscillator extends SoundNode { 
+	bModulateVolume: boolean;
+	bModulatePitch: boolean;
+	AmplitudeMin: number;
+	AmplitudeMax: number;
+	FrequencyMin: number;
+	FrequencyMax: number;
+	OffsetMin: number;
+	OffsetMax: number;
+	CenterMin: number;
+	CenterMax: number;
+	static Load(ResourceName: string): SoundNodeOscillator;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeOscillator;
+	static GetDefaultObject(): SoundNodeOscillator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeOscillator;
+	static C(Other: UObject | any): SoundNodeOscillator;
+}
+
+declare class SoundNodeParamCrossFade extends SoundNodeDistanceCrossFade { 
+	ParamName: string;
+	static Load(ResourceName: string): SoundNodeParamCrossFade;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeParamCrossFade;
+	static GetDefaultObject(): SoundNodeParamCrossFade;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeParamCrossFade;
+	static C(Other: UObject | any): SoundNodeParamCrossFade;
+}
+
+declare class SoundNodeQualityLevel extends SoundNode { 
+	static Load(ResourceName: string): SoundNodeQualityLevel;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeQualityLevel;
+	static GetDefaultObject(): SoundNodeQualityLevel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeQualityLevel;
+	static C(Other: UObject | any): SoundNodeQualityLevel;
+}
+
+declare class SoundNodeRandom extends SoundNode { 
+	Weights: number[];
+	PreselectAtLevelLoad: number;
+	bShouldExcludeFromBranchCulling: boolean;
+	bSoundCueExcludedFromBranchCulling: boolean;
+	bRandomizeWithoutReplacement: boolean;
+	HasBeenUsed: boolean[];
+	NumRandomUsed: number;
+	PIEHiddenNodes: number[];
+	static Load(ResourceName: string): SoundNodeRandom;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeRandom;
+	static GetDefaultObject(): SoundNodeRandom;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeRandom;
+	static C(Other: UObject | any): SoundNodeRandom;
+}
+
+declare class SoundNodeSoundClass extends SoundNode { 
+	SoundClassOverride: SoundClass;
+	static Load(ResourceName: string): SoundNodeSoundClass;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeSoundClass;
+	static GetDefaultObject(): SoundNodeSoundClass;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeSoundClass;
+	static C(Other: UObject | any): SoundNodeSoundClass;
+}
+
+declare class SoundNodeSwitch extends SoundNode { 
+	IntParameterName: string;
+	static Load(ResourceName: string): SoundNodeSwitch;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeSwitch;
+	static GetDefaultObject(): SoundNodeSwitch;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeSwitch;
+	static C(Other: UObject | any): SoundNodeSwitch;
+}
+
+declare class SoundNodeWaveParam extends SoundNode { 
+	WaveParameterName: string;
+	static Load(ResourceName: string): SoundNodeWaveParam;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeWaveParam;
+	static GetDefaultObject(): SoundNodeWaveParam;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeWaveParam;
+	static C(Other: UObject | any): SoundNodeWaveParam;
+}
+
+declare class SoundNodeWavePlayer extends SoundNodeAssetReferencer { 
+	SoundWaveAssetPtr: SoundWave;
+	SoundWave: SoundWave;
+	bLooping: boolean;
+	static Load(ResourceName: string): SoundNodeWavePlayer;
+	static Find(Outer: UObject, ResourceName: string): SoundNodeWavePlayer;
+	static GetDefaultObject(): SoundNodeWavePlayer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundNodeWavePlayer;
+	static C(Other: UObject | any): SoundNodeWavePlayer;
+}
+
+declare class SpectatorPawnMovement extends FloatingPawnMovement { 
+	bIgnoreTimeDilation: boolean;
+	static Load(ResourceName: string): SpectatorPawnMovement;
+	static Find(Outer: UObject, ResourceName: string): SpectatorPawnMovement;
+	static GetDefaultObject(): SpectatorPawnMovement;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpectatorPawnMovement;
+	static C(Other: UObject | any): SpectatorPawnMovement;
+}
+
+declare class SphereReflectionCapture extends ReflectionCapture { 
+	DrawCaptureRadius: DrawSphereComponent;
+	static GetDefaultObject(): SphereReflectionCapture;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SphereReflectionCapture;
+	static C(Other: UObject | any): SphereReflectionCapture;
+}
+
+declare class SphereReflectionCaptureComponent extends ReflectionCaptureComponent { 
+	InfluenceRadius: number;
+	CaptureDistanceScale: number;
+	PreviewInfluenceRadius: DrawSphereComponent;
+	static Load(ResourceName: string): SphereReflectionCaptureComponent;
+	static Find(Outer: UObject, ResourceName: string): SphereReflectionCaptureComponent;
+	static GetDefaultObject(): SphereReflectionCaptureComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SphereReflectionCaptureComponent;
+	static C(Other: UObject | any): SphereReflectionCaptureComponent;
+}
+
+declare class SplineMeshActor extends Actor { 
+	SplineMeshComponent: SplineMeshComponent;
+	static GetDefaultObject(): SplineMeshActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplineMeshActor;
+	static C(Other: UObject | any): SplineMeshActor;
+}
+
+declare class SpringArmComponent extends SceneComponent { 
+	TargetArmLength: number;
+	SocketOffset: Vector;
+	TargetOffset: Vector;
+	ProbeSize: number;
+	ProbeChannel: ECollisionChannel;
+	bDoCollisionTest: boolean;
+	bUsePawnControlRotation: boolean;
+	bInheritPitch: boolean;
+	bInheritYaw: boolean;
+	bInheritRoll: boolean;
+	bEnableCameraLag: boolean;
+	bEnableCameraRotationLag: boolean;
+	bUseCameraLagSubstepping: boolean;
+	bDrawDebugLagMarkers: boolean;
+	CameraLagSpeed: number;
+	CameraRotationLagSpeed: number;
+	CameraLagMaxTimeStep: number;
+	CameraLagMaxDistance: number;
+	static Load(ResourceName: string): SpringArmComponent;
+	static Find(Outer: UObject, ResourceName: string): SpringArmComponent;
+	static GetDefaultObject(): SpringArmComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpringArmComponent;
+	IsCollisionFixApplied(): boolean;
+	GetUnfixedCameraPosition(): Vector;
+	GetTargetRotation(): Rotator;
+	static C(Other: UObject | any): SpringArmComponent;
+}
+
+declare type EStereoLayerType = 'SLT_WorldLocked' | 'SLT_TrackerLocked' | 'SLT_FaceLocked' | 'SLT_MAX';
+declare var EStereoLayerType : { SLT_WorldLocked:'SLT_WorldLocked',SLT_TrackerLocked:'SLT_TrackerLocked',SLT_FaceLocked:'SLT_FaceLocked',SLT_MAX:'SLT_MAX', };
+declare type EStereoLayerShape = 'SLSH_QuadLayer' | 'SLSH_CylinderLayer' | 'SLSH_CubemapLayer' | 'SLSH_MAX';
+declare var EStereoLayerShape : { SLSH_QuadLayer:'SLSH_QuadLayer',SLSH_CylinderLayer:'SLSH_CylinderLayer',SLSH_CubemapLayer:'SLSH_CubemapLayer',SLSH_MAX:'SLSH_MAX', };
+declare class StereoLayerComponent extends SceneComponent { 
+	bLiveTexture: boolean;
+	bSupportsDepth: boolean;
+	bNoAlphaChannel: boolean;
+	Texture: Texture;
+	LeftTexture: Texture;
+	bQuadPreserveTextureRatio: boolean;
+	QuadSize: Vector2D;
+	UVRect: Box2D;
+	CylinderRadius: number;
+	CylinderOverlayArc: number;
+	CylinderHeight: number;
+	StereoLayerType: EStereoLayerType;
+	StereoLayerShape: EStereoLayerShape;
+	Priority: number;
+	static Load(ResourceName: string): StereoLayerComponent;
+	static Find(Outer: UObject, ResourceName: string): StereoLayerComponent;
+	static GetDefaultObject(): StereoLayerComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StereoLayerComponent;
+	SetUVRect(InUVRect: Box2D): void;
+	SetTexture(InTexture: Texture): void;
+	SetQuadSize(InQuadSize: Vector2D): void;
+	SetPriority(InPriority: number): void;
+	MarkTextureForUpdate(): void;
+	GetUVRect(): Box2D;
+	GetTexture(): Texture;
+	GetQuadSize(): Vector2D;
+	GetPriority(): number;
+	static C(Other: UObject | any): StereoLayerComponent;
+}
+
+declare class StereoLayerFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): StereoLayerFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): StereoLayerFunctionLibrary;
+	static GetDefaultObject(): StereoLayerFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StereoLayerFunctionLibrary;
+	static ShowSplashScreen(): void;
+	static SetSplashScreen(Texture: Texture,Scale: Vector2D,Offset: Vector2D,bShowLoadingMovie: boolean,bShowOnSet: boolean): void;
+	static HideSplashScreen(): void;
+	static EnableAutoLoadingSplashScreen(InAutoShowEnabled: boolean): void;
+	static C(Other: UObject | any): StereoLayerFunctionLibrary;
+}
+
+declare class StringTable extends UObject { 
+	static Load(ResourceName: string): StringTable;
+	static Find(Outer: UObject, ResourceName: string): StringTable;
+	static GetDefaultObject(): StringTable;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StringTable;
+	static C(Other: UObject | any): StringTable;
+}
+
+declare class SystemTimeTimecodeProvider extends TimecodeProvider { 
+	FrameRate: FrameRate;
+	static Load(ResourceName: string): SystemTimeTimecodeProvider;
+	static Find(Outer: UObject, ResourceName: string): SystemTimeTimecodeProvider;
+	static GetDefaultObject(): SystemTimeTimecodeProvider;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SystemTimeTimecodeProvider;
+	SetFrameRate(InFrameRate: FrameRate): void;
+	static C(Other: UObject | any): SystemTimeTimecodeProvider;
+}
+
+declare class TargetPoint extends Actor { 
+	SpriteComponent: BillboardComponent;
+	ArrowComponent: ArrowComponent;
+	static GetDefaultObject(): TargetPoint;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TargetPoint;
+	static C(Other: UObject | any): TargetPoint;
+}
+
+declare class TextPropertyTestObject extends UObject { 
+	DefaultedText: string;
+	UndefaultedText: string;
+	TransientText: string;
+	static Load(ResourceName: string): TextPropertyTestObject;
+	static Find(Outer: UObject, ResourceName: string): TextPropertyTestObject;
+	static GetDefaultObject(): TextPropertyTestObject;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextPropertyTestObject;
+	static C(Other: UObject | any): TextPropertyTestObject;
+}
+
+declare class TextRenderActor extends Actor { 
+	TextRender: TextRenderComponent;
+	SpriteComponent: BillboardComponent;
+	static GetDefaultObject(): TextRenderActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextRenderActor;
+	static C(Other: UObject | any): TextRenderActor;
+}
+
+declare class TimelineEventEntry { 
+	Time: number;
+	EventFunc: UnrealEngineDelegate<() => void>;
+	clone() : TimelineEventEntry;
+	static C(Other: UObject | any): TimelineEventEntry;
+}
+
+declare class TimelineVectorTrack { 
+	VectorCurve: CurveVector;
+	InterpFunc: UnrealEngineDelegate<(Output: Vector) => void>;
+	TrackName: string;
+	VectorPropertyName: string;
+	VectorProperty: StructProperty;
+	clone() : TimelineVectorTrack;
+	static C(Other: UObject | any): TimelineVectorTrack;
+}
+
+declare class TimelineFloatTrack { 
+	FloatCurve: CurveFloat;
+	InterpFunc: UnrealEngineDelegate<(Output: number) => void>;
+	TrackName: string;
+	FloatPropertyName: string;
+	FloatProperty: FloatProperty;
+	clone() : TimelineFloatTrack;
+	static C(Other: UObject | any): TimelineFloatTrack;
+}
+
+declare class TimelineLinearColorTrack { 
+	LinearColorCurve: CurveLinearColor;
+	InterpFunc: UnrealEngineDelegate<(Output: LinearColor) => void>;
+	TrackName: string;
+	LinearColorPropertyName: string;
+	LinearColorProperty: StructProperty;
+	clone() : TimelineLinearColorTrack;
+	static C(Other: UObject | any): TimelineLinearColorTrack;
+}
+
+declare class Timeline { 
+	LengthMode: ETimelineLengthMode;
+	bLooping: boolean;
+	bReversePlayback: boolean;
+	bPlaying: boolean;
+	Length: number;
+	PlayRate: number;
+	Position: number;
+	Events: TimelineEventEntry[];
+	InterpVectors: TimelineVectorTrack[];
+	InterpFloats: TimelineFloatTrack[];
+	InterpLinearColors: TimelineLinearColorTrack[];
+	TimelinePostUpdateFunc: UnrealEngineDelegate<() => void>;
+	TimelineFinishedFunc: UnrealEngineDelegate<() => void>;
+	PropertySetObject: any;
+	DirectionPropertyName: string;
+	DirectionProperty: Property;
+	clone() : Timeline;
+	static C(Other: UObject | any): Timeline;
+}
+
+declare class TimelineComponent extends ActorComponent { 
+	TheTimeline: Timeline;
+	bIgnoreTimeDilation: boolean;
+	static Load(ResourceName: string): TimelineComponent;
+	static Find(Outer: UObject, ResourceName: string): TimelineComponent;
+	static GetDefaultObject(): TimelineComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TimelineComponent;
+	Stop(): void;
+	SetVectorCurve(NewVectorCurve: CurveVector,VectorTrackName: string): void;
+	SetTimelineLengthMode(NewLengthMode: ETimelineLengthMode): void;
+	SetTimelineLength(NewLength: number): void;
+	SetPlayRate(NewRate: number): void;
+	SetPlaybackPosition(NewPosition: number,bFireEvents: boolean,bFireUpdate: boolean): void;
+	SetNewTime(NewTime: number): void;
+	SetLooping(bNewLooping: boolean): void;
+	SetLinearColorCurve(NewLinearColorCurve: CurveLinearColor,LinearColorTrackName: string): void;
+	SetIgnoreTimeDilation(bNewIgnoreTimeDilation: boolean): void;
+	SetFloatCurve(NewFloatCurve: CurveFloat,FloatTrackName: string): void;
+	ReverseFromEnd(): void;
+	Reverse(): void;
+	PlayFromStart(): void;
+	Play(): void;
+	OnRep_Timeline(): void;
+	IsReversing(): boolean;
+	IsPlaying(): boolean;
+	IsLooping(): boolean;
+	GetTimelineLength(): number;
+	GetPlayRate(): number;
+	GetPlaybackPosition(): number;
+	GetIgnoreTimeDilation(): boolean;
+	static C(Other: UObject | any): TimelineComponent;
+}
+
+declare class TriggerBase extends Actor { 
+	CollisionComponent: ShapeComponent;
+	SpriteComponent: BillboardComponent;
+	static GetDefaultObject(): TriggerBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TriggerBase;
+	static C(Other: UObject | any): TriggerBase;
+}
+
+declare class TriggerBox extends TriggerBase { 
+	static GetDefaultObject(): TriggerBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TriggerBox;
+	static C(Other: UObject | any): TriggerBox;
+}
+
+declare class TriggerCapsule extends TriggerBase { 
+	static GetDefaultObject(): TriggerCapsule;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TriggerCapsule;
+	static C(Other: UObject | any): TriggerCapsule;
+}
+
+declare class TriggerSphere extends TriggerBase { 
+	static GetDefaultObject(): TriggerSphere;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TriggerSphere;
+	static C(Other: UObject | any): TriggerSphere;
+}
+
+declare class TriggerVolume extends Volume { 
+	static GetDefaultObject(): TriggerVolume;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TriggerVolume;
+	static C(Other: UObject | any): TriggerVolume;
+}
+
+declare type ETwitterRequestMethod = 'TRM_Get' | 'TRM_Post' | 'TRM_Delete' | 'TRM_MAX';
+declare var ETwitterRequestMethod : { TRM_Get:'TRM_Get',TRM_Post:'TRM_Post',TRM_Delete:'TRM_Delete',TRM_MAX:'TRM_MAX', };
+declare class TwitterIntegrationBase extends PlatformInterfaceBase { 
+	static Load(ResourceName: string): TwitterIntegrationBase;
+	static Find(Outer: UObject, ResourceName: string): TwitterIntegrationBase;
+	static GetDefaultObject(): TwitterIntegrationBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TwitterIntegrationBase;
+	TwitterRequest(URL: string,ParamKeysAndValues: string[],RequestMethod: ETwitterRequestMethod,AccountIndex: number): boolean;
+	ShowTweetUI(InitialMessage: string,URL: string,Picture: string): boolean;
+	Init(): void;
+	GetNumAccounts(): number;
+	GetAccountName(AccountIndex: number): string;
+	CanShowTweetUI(): boolean;
+	AuthorizeAccounts(): boolean;
+	static C(Other: UObject | any): TwitterIntegrationBase;
+}
+
+declare class UserDefinedEnum extends Enum { 
+	UniqueNameIndex: any;
+	EnumDescription: string;
+	DisplayNameMap: any;
+	static Load(ResourceName: string): UserDefinedEnum;
+	static Find(Outer: UObject, ResourceName: string): UserDefinedEnum;
+	static GetDefaultObject(): UserDefinedEnum;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UserDefinedEnum;
+	static C(Other: UObject | any): UserDefinedEnum;
+}
+
+declare type ERenderFocusRule = 'Always' | 'NonPointer' | 'NavigationOnly' | 'Never' | 'ERenderFocusRule_MAX';
+declare var ERenderFocusRule : { Always:'Always',NonPointer:'NonPointer',NavigationOnly:'NavigationOnly',Never:'Never',ERenderFocusRule_MAX:'ERenderFocusRule_MAX', };
+declare type EUIScalingRule = 'ShortestSide' | 'LongestSide' | 'Horizontal' | 'Vertical' | 'Custom' | 'EUIScalingRule_MAX';
+declare var EUIScalingRule : { ShortestSide:'ShortestSide',LongestSide:'LongestSide',Horizontal:'Horizontal',Vertical:'Vertical',Custom:'Custom',EUIScalingRule_MAX:'EUIScalingRule_MAX', };
+declare class UserInterfaceSettings extends DeveloperSettings { 
+	RenderFocusRule: ERenderFocusRule;
+	HardwareCursors: any;
+	SoftwareCursors: any;
+	DefaultCursor: SoftClassPath;
+	TextEditBeamCursor: SoftClassPath;
+	CrosshairsCursor: SoftClassPath;
+	HandCursor: SoftClassPath;
+	GrabHandCursor: SoftClassPath;
+	GrabHandClosedCursor: SoftClassPath;
+	SlashedCircleCursor: SoftClassPath;
+	ApplicationScale: number;
+	UIScaleRule: EUIScalingRule;
+	CustomScalingRuleClass: SoftClassPath;
+	UIScaleCurve: RuntimeFloatCurve;
+	bAllowHighDPIInGameMode: boolean;
+	bLoadWidgetsOnDedicatedServer: boolean;
+	CursorClasses: UObject[];
+	CustomScalingRuleClassInstance: UnrealEngineClass;
+	CustomScalingRule: DPICustomScalingRule;
+	static Load(ResourceName: string): UserInterfaceSettings;
+	static Find(Outer: UObject, ResourceName: string): UserInterfaceSettings;
+	static GetDefaultObject(): UserInterfaceSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UserInterfaceSettings;
+	static C(Other: UObject | any): UserInterfaceSettings;
+}
+
+declare type EVectorFieldConstructionOp = 'VFCO_Extrude' | 'VFCO_Revolve' | 'VFCO_MAX';
+declare var EVectorFieldConstructionOp : { VFCO_Extrude:'VFCO_Extrude',VFCO_Revolve:'VFCO_Revolve',VFCO_MAX:'VFCO_MAX', };
+declare class VectorFieldStatic extends VectorField { 
+	SizeX: number;
+	SizeY: number;
+	SizeZ: number;
+	SourceFilePath: string;
+	AssetImportData: AssetImportData;
+	static Load(ResourceName: string): VectorFieldStatic;
+	static Find(Outer: UObject, ResourceName: string): VectorFieldStatic;
+	static GetDefaultObject(): VectorFieldStatic;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorFieldStatic;
+	static C(Other: UObject | any): VectorFieldStatic;
+}
+
+declare class VectorFieldAnimated extends VectorField { 
+	Texture: Texture2D;
+	ConstructionOp: EVectorFieldConstructionOp;
+	VolumeSizeX: number;
+	VolumeSizeY: number;
+	VolumeSizeZ: number;
+	SubImagesX: number;
+	SubImagesY: number;
+	FrameCount: number;
+	FramesPerSecond: number;
+	bLoop: boolean;
+	NoiseField: VectorFieldStatic;
+	NoiseScale: number;
+	NoiseMax: number;
+	static Load(ResourceName: string): VectorFieldAnimated;
+	static Find(Outer: UObject, ResourceName: string): VectorFieldAnimated;
+	static GetDefaultObject(): VectorFieldAnimated;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorFieldAnimated;
+	static C(Other: UObject | any): VectorFieldAnimated;
+}
+
+declare class VectorFieldComponent extends PrimitiveComponent { 
+	VectorField: VectorField;
+	Intensity: number;
+	Tightness: number;
+	bPreviewVectorField: boolean;
+	static Load(ResourceName: string): VectorFieldComponent;
+	static Find(Outer: UObject, ResourceName: string): VectorFieldComponent;
+	static GetDefaultObject(): VectorFieldComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorFieldComponent;
+	SetIntensity(NewIntensity: number): void;
+	static C(Other: UObject | any): VectorFieldComponent;
+}
+
+declare class VectorFieldVolume extends Actor { 
+	VectorFieldComponent: VectorFieldComponent;
+	SpriteComponent: BillboardComponent;
+	static GetDefaultObject(): VectorFieldVolume;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VectorFieldVolume;
+	static C(Other: UObject | any): VectorFieldVolume;
+}
+
+declare class VirtualTextureLayer { 
+	Format: ETextureSourceFormat;
+	bCompressed: boolean;
+	bHasAlpha: boolean;
+	CompressionSettings: TextureCompressionSettings;
+	clone() : VirtualTextureLayer;
+	static C(Other: UObject | any): VirtualTextureLayer;
+}
+
+declare type PageTableFormat = 'PTF_16' | 'PTF_32' | 'PTF_MAX';
+declare var PageTableFormat : { PTF_16:'PTF_16',PTF_32:'PTF_32',PTF_MAX:'PTF_MAX', };
+declare class VirtualTextureSpace extends UObject { 
+	Layers: VirtualTextureLayer[];
+	TileSize: number;
+	BorderWidth: number;
+	Size: number;
+	Dimensions: number;
+	Format: PageTableFormat;
+	PoolSize: number;
+	static Load(ResourceName: string): VirtualTextureSpace;
+	static Find(Outer: UObject, ResourceName: string): VirtualTextureSpace;
+	static GetDefaultObject(): VirtualTextureSpace;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VirtualTextureSpace;
+	static C(Other: UObject | any): VirtualTextureSpace;
+}
+
+declare class VirtualTexture extends UObject { 
+	Layers: Texture[];
+	Space: VirtualTextureSpace;
+	Rebuild: boolean;
+	static Load(ResourceName: string): VirtualTexture;
+	static Find(Outer: UObject, ResourceName: string): VirtualTexture;
+	static GetDefaultObject(): VirtualTexture;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VirtualTexture;
+	static C(Other: UObject | any): VirtualTexture;
+}
+
+declare class LightMapVirtualTexture extends VirtualTexture { 
+	LayerFlags: number;
+	static Load(ResourceName: string): LightMapVirtualTexture;
+	static Find(Outer: UObject, ResourceName: string): LightMapVirtualTexture;
+	static GetDefaultObject(): LightMapVirtualTexture;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightMapVirtualTexture;
+	static C(Other: UObject | any): LightMapVirtualTexture;
+}
+
+declare class LightMapVirtualTextureSpace extends VirtualTextureSpace { 
+	static Load(ResourceName: string): LightMapVirtualTextureSpace;
+	static Find(Outer: UObject, ResourceName: string): LightMapVirtualTextureSpace;
+	static GetDefaultObject(): LightMapVirtualTextureSpace;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightMapVirtualTextureSpace;
+	static C(Other: UObject | any): LightMapVirtualTextureSpace;
+}
+
+declare class VisualLoggerAutomationTests extends UObject { 
+	static Load(ResourceName: string): VisualLoggerAutomationTests;
+	static Find(Outer: UObject, ResourceName: string): VisualLoggerAutomationTests;
+	static GetDefaultObject(): VisualLoggerAutomationTests;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisualLoggerAutomationTests;
+	static C(Other: UObject | any): VisualLoggerAutomationTests;
+}
+
+declare class VisualLoggerDebugSnapshotInterface extends Interface { 
+	static Load(ResourceName: string): VisualLoggerDebugSnapshotInterface;
+	static Find(Outer: UObject, ResourceName: string): VisualLoggerDebugSnapshotInterface;
+	static GetDefaultObject(): VisualLoggerDebugSnapshotInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisualLoggerDebugSnapshotInterface;
+	static C(Other: UObject | any): VisualLoggerDebugSnapshotInterface;
+}
+
+declare class VisualLoggerKismetLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): VisualLoggerKismetLibrary;
+	static Find(Outer: UObject, ResourceName: string): VisualLoggerKismetLibrary;
+	static GetDefaultObject(): VisualLoggerKismetLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisualLoggerKismetLibrary;
+	static RedirectVislog(SourceOwner: UObject,DestinationOwner: UObject): void;
+	static LogText(WorldContextObject: UObject,text: string,LogCategory: string,bAddToMessageLog: boolean): void;
+	static LogSegment(WorldContextObject: UObject,SegmentStart: Vector,SegmentEnd: Vector,text: string,ObjectColor: LinearColor,Thickness: number,CategoryName: string,bAddToMessageLog: boolean): void;
+	static LogLocation(WorldContextObject: UObject,Location: Vector,text: string,ObjectColor: LinearColor,Radius: number,LogCategory: string,bAddToMessageLog: boolean): void;
+	static LogBox(WorldContextObject: UObject,BoxShape: Box,text: string,ObjectColor: LinearColor,LogCategory: string,bAddToMessageLog: boolean): void;
+	static EnableRecording(bEnabled: boolean): void;
+	static C(Other: UObject | any): VisualLoggerKismetLibrary;
+}
+
+declare class VoiceChannel extends Channel { 
+	static Load(ResourceName: string): VoiceChannel;
+	static Find(Outer: UObject, ResourceName: string): VoiceChannel;
+	static GetDefaultObject(): VoiceChannel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoiceChannel;
+	static C(Other: UObject | any): VoiceChannel;
+}
+
+declare class VoiceSettings { 
+	ComponentToAttachTo: SceneComponent;
+	AttenuationSettings: SoundAttenuation;
+	SourceEffectChain: SoundEffectSourcePresetChain;
+	clone() : VoiceSettings;
+	static C(Other: UObject | any): VoiceSettings;
+}
+
+declare class VOIPTalker extends ActorComponent { 
+	Settings: VoiceSettings;
+	static Load(ResourceName: string): VOIPTalker;
+	static Find(Outer: UObject, ResourceName: string): VOIPTalker;
+	static GetDefaultObject(): VOIPTalker;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VOIPTalker;
+	RegisterWithPlayerState(OwningState: PlayerState): void;
+	GetVoiceLevel(): number;
+	static CreateTalkerForPlayer(OwningState: PlayerState): VOIPTalker;
+	BPOnTalkingEnd(): void;
+	BPOnTalkingBegin(AudioComponent: AudioComponent): void;
+	static C(Other: UObject | any): VOIPTalker;
+}
+
+declare class VOIPStatics extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): VOIPStatics;
+	static Find(Outer: UObject, ResourceName: string): VOIPStatics;
+	static GetDefaultObject(): VOIPStatics;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VOIPStatics;
+	static SetMicThreshold(InThreshold: number): void;
+	static C(Other: UObject | any): VOIPStatics;
+}
+
+declare class VolumeTexture extends Texture { 
+	Source2DTexture: Texture2D;
+	SourceLightingGuid: Guid;
+	Source2DTileSizeX: number;
+	Source2DTileSizeY: number;
+	static Load(ResourceName: string): VolumeTexture;
+	static Find(Outer: UObject, ResourceName: string): VolumeTexture;
+	static GetDefaultObject(): VolumeTexture;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumeTexture;
+	static C(Other: UObject | any): VolumeTexture;
+}
+
+declare class VolumetricLightmapDensityVolume extends Volume { 
+	AllowedMipLevelRange: Int32Interval;
+	static GetDefaultObject(): VolumetricLightmapDensityVolume;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumetricLightmapDensityVolume;
+	static C(Other: UObject | any): VolumetricLightmapDensityVolume;
+}
+
+declare type EWindSourceType = 'Directional' | 'Point' | 'EWindSourceType_MAX';
+declare var EWindSourceType : { Directional:'Directional',Point:'Point',EWindSourceType_MAX:'EWindSourceType_MAX', };
+declare class WindDirectionalSourceComponent extends SceneComponent { 
+	Strength: number;
+	Speed: number;
+	MinGustAmount: number;
+	MaxGustAmount: number;
+	Radius: number;
+	bPointWind: boolean;
+	static Load(ResourceName: string): WindDirectionalSourceComponent;
+	static Find(Outer: UObject, ResourceName: string): WindDirectionalSourceComponent;
+	static GetDefaultObject(): WindDirectionalSourceComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WindDirectionalSourceComponent;
+	SetWindType(InNewType: EWindSourceType): void;
+	SetStrength(InNewStrength: number): void;
+	SetSpeed(InNewSpeed: number): void;
+	SetRadius(InNewRadius: number): void;
+	SetMinimumGustAmount(InNewMinGust: number): void;
+	SetMaximumGustAmount(InNewMaxGust: number): void;
+	static C(Other: UObject | any): WindDirectionalSourceComponent;
+}
+
+declare class WindDirectionalSource extends Info { 
+	Component: WindDirectionalSourceComponent;
+	ArrowComponent: ArrowComponent;
+	static GetDefaultObject(): WindDirectionalSource;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WindDirectionalSource;
+	static C(Other: UObject | any): WindDirectionalSource;
+}
+
+declare class HierarchicalLODSetup extends UObject { 
+	HierarchicalLODSetup: HierarchicalSimplification[];
+	OverrideBaseMaterial: MaterialInterface;
+	static Load(ResourceName: string): HierarchicalLODSetup;
+	static Find(Outer: UObject, ResourceName: string): HierarchicalLODSetup;
+	static GetDefaultObject(): HierarchicalLODSetup;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HierarchicalLODSetup;
+	static C(Other: UObject | any): HierarchicalLODSetup;
+}
+
+declare class MoviePlayerSettings extends UObject { 
+	bWaitForMoviesToComplete: boolean;
+	bMoviesAreSkippable: boolean;
+	StartupMovies: string[];
+	static Load(ResourceName: string): MoviePlayerSettings;
+	static Find(Outer: UObject, ResourceName: string): MoviePlayerSettings;
+	static GetDefaultObject(): MoviePlayerSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MoviePlayerSettings;
+	static C(Other: UObject | any): MoviePlayerSettings;
+}
+
+declare class SoundFactory extends Factory { 
+	bAutoCreateCue: boolean;
+	bIncludeAttenuationNode: boolean;
+	bIncludeLoopingNode: boolean;
+	bIncludeModulatorNode: boolean;
+	CueVolume: number;
+	CuePackageSuffix: string;
+	static Load(ResourceName: string): SoundFactory;
+	static Find(Outer: UObject, ResourceName: string): SoundFactory;
+	static GetDefaultObject(): SoundFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundFactory;
+	static C(Other: UObject | any): SoundFactory;
+}
+
+declare class ReimportSoundFactory extends SoundFactory { 
+	static Load(ResourceName: string): ReimportSoundFactory;
+	static Find(Outer: UObject, ResourceName: string): ReimportSoundFactory;
+	static GetDefaultObject(): ReimportSoundFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportSoundFactory;
+	static C(Other: UObject | any): ReimportSoundFactory;
+}
+
+declare class SoundSurroundFactory extends Factory { 
+	CueVolume: number;
+	static Load(ResourceName: string): SoundSurroundFactory;
+	static Find(Outer: UObject, ResourceName: string): SoundSurroundFactory;
+	static GetDefaultObject(): SoundSurroundFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSurroundFactory;
+	static C(Other: UObject | any): SoundSurroundFactory;
+}
+
+declare class ReimportSoundSurroundFactory extends SoundSurroundFactory { 
+	ReimportPaths: string[];
+	static Load(ResourceName: string): ReimportSoundSurroundFactory;
+	static Find(Outer: UObject, ResourceName: string): ReimportSoundSurroundFactory;
+	static GetDefaultObject(): ReimportSoundSurroundFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportSoundSurroundFactory;
+	static C(Other: UObject | any): ReimportSoundSurroundFactory;
+}
+
+declare class MacTargetSettings extends UObject { 
+	TargetedRHIs: string[];
+	MaxShaderLanguageVersion: number;
+	UseFastIntrinsics: boolean;
+	EnableMathOptimisations: boolean;
+	AudioSampleRate: number;
+	AudioCallbackBufferFrameSize: number;
+	AudioNumBuffersToEnqueue: number;
+	AudioMaxChannels: number;
+	AudioNumSourceWorkers: number;
+	SpatializationPlugin: string;
+	ReverbPlugin: string;
+	OcclusionPlugin: string;
+	static Load(ResourceName: string): MacTargetSettings;
+	static Find(Outer: UObject, ResourceName: string): MacTargetSettings;
+	static GetDefaultObject(): MacTargetSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MacTargetSettings;
+	static C(Other: UObject | any): MacTargetSettings;
+}
+
+declare class LinuxTargetSettings extends UObject { 
+	SpatializationPlugin: string;
+	ReverbPlugin: string;
+	OcclusionPlugin: string;
+	TargetedRHIs: string[];
+	static Load(ResourceName: string): LinuxTargetSettings;
+	static Find(Outer: UObject, ResourceName: string): LinuxTargetSettings;
+	static GetDefaultObject(): LinuxTargetSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LinuxTargetSettings;
+	static C(Other: UObject | any): LinuxTargetSettings;
+}
+
+declare class DialogueVoiceFactory extends Factory { 
+	static Load(ResourceName: string): DialogueVoiceFactory;
+	static Find(Outer: UObject, ResourceName: string): DialogueVoiceFactory;
+	static GetDefaultObject(): DialogueVoiceFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DialogueVoiceFactory;
+	static C(Other: UObject | any): DialogueVoiceFactory;
+}
+
+declare class DialogueWaveFactory extends Factory { 
+	InitialSoundWave: SoundWave;
+	InitialSpeakerVoice: DialogueVoice;
+	HasSetInitialTargetVoice: boolean;
+	InitialTargetVoices: DialogueVoice[];
+	static Load(ResourceName: string): DialogueWaveFactory;
+	static Find(Outer: UObject, ResourceName: string): DialogueWaveFactory;
+	static GetDefaultObject(): DialogueWaveFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DialogueWaveFactory;
+	static C(Other: UObject | any): DialogueWaveFactory;
+}
+
+declare class ReverbEffectFactory extends Factory { 
+	static Load(ResourceName: string): ReverbEffectFactory;
+	static Find(Outer: UObject, ResourceName: string): ReverbEffectFactory;
+	static GetDefaultObject(): ReverbEffectFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReverbEffectFactory;
+	static C(Other: UObject | any): ReverbEffectFactory;
+}
+
+declare class SoundAttenuationFactory extends Factory { 
+	static Load(ResourceName: string): SoundAttenuationFactory;
+	static Find(Outer: UObject, ResourceName: string): SoundAttenuationFactory;
+	static GetDefaultObject(): SoundAttenuationFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundAttenuationFactory;
+	static C(Other: UObject | any): SoundAttenuationFactory;
+}
+
+declare class SoundClassFactory extends Factory { 
+	static Load(ResourceName: string): SoundClassFactory;
+	static Find(Outer: UObject, ResourceName: string): SoundClassFactory;
+	static GetDefaultObject(): SoundClassFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundClassFactory;
+	static C(Other: UObject | any): SoundClassFactory;
+}
+
+declare class SoundClassGraph extends EdGraph { 
+	static Load(ResourceName: string): SoundClassGraph;
+	static Find(Outer: UObject, ResourceName: string): SoundClassGraph;
+	static GetDefaultObject(): SoundClassGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundClassGraph;
+	static C(Other: UObject | any): SoundClassGraph;
+}
+
+declare class SoundClassGraphNode extends EdGraphNode { 
+	SoundClass: SoundClass;
+	static Load(ResourceName: string): SoundClassGraphNode;
+	static Find(Outer: UObject, ResourceName: string): SoundClassGraphNode;
+	static GetDefaultObject(): SoundClassGraphNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundClassGraphNode;
+	static C(Other: UObject | any): SoundClassGraphNode;
+}
+
+declare class SoundClassGraphSchema extends EdGraphSchema { 
+	static Load(ResourceName: string): SoundClassGraphSchema;
+	static Find(Outer: UObject, ResourceName: string): SoundClassGraphSchema;
+	static GetDefaultObject(): SoundClassGraphSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundClassGraphSchema;
+	static C(Other: UObject | any): SoundClassGraphSchema;
+}
+
+declare class SoundConcurrencyFactory extends Factory { 
+	static Load(ResourceName: string): SoundConcurrencyFactory;
+	static Find(Outer: UObject, ResourceName: string): SoundConcurrencyFactory;
+	static GetDefaultObject(): SoundConcurrencyFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundConcurrencyFactory;
+	static C(Other: UObject | any): SoundConcurrencyFactory;
+}
+
+declare class SoundCueFactoryNew extends Factory { 
+	InitialSoundWave: SoundWave;
+	InitialDialogueWave: DialogueWave;
+	static Load(ResourceName: string): SoundCueFactoryNew;
+	static Find(Outer: UObject, ResourceName: string): SoundCueFactoryNew;
+	static GetDefaultObject(): SoundCueFactoryNew;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueFactoryNew;
+	static C(Other: UObject | any): SoundCueFactoryNew;
+}
+
+declare class SoundCueGraph extends EdGraph { 
+	static Load(ResourceName: string): SoundCueGraph;
+	static Find(Outer: UObject, ResourceName: string): SoundCueGraph;
+	static GetDefaultObject(): SoundCueGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueGraph;
+	static C(Other: UObject | any): SoundCueGraph;
+}
+
+declare class SoundCueGraphNode_Base extends EdGraphNode { 
+	static Load(ResourceName: string): SoundCueGraphNode_Base;
+	static Find(Outer: UObject, ResourceName: string): SoundCueGraphNode_Base;
+	static GetDefaultObject(): SoundCueGraphNode_Base;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueGraphNode_Base;
+	static C(Other: UObject | any): SoundCueGraphNode_Base;
+}
+
+declare class SoundCueGraphNode extends SoundCueGraphNode_Base { 
+	SoundNode: SoundNode;
+	static Load(ResourceName: string): SoundCueGraphNode;
+	static Find(Outer: UObject, ResourceName: string): SoundCueGraphNode;
+	static GetDefaultObject(): SoundCueGraphNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueGraphNode;
+	static C(Other: UObject | any): SoundCueGraphNode;
+}
+
+declare class SoundCueGraphNode_Root extends SoundCueGraphNode_Base { 
+	static Load(ResourceName: string): SoundCueGraphNode_Root;
+	static Find(Outer: UObject, ResourceName: string): SoundCueGraphNode_Root;
+	static GetDefaultObject(): SoundCueGraphNode_Root;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueGraphNode_Root;
+	static C(Other: UObject | any): SoundCueGraphNode_Root;
+}
+
+declare class SoundCueGraphSchema extends EdGraphSchema { 
+	static Load(ResourceName: string): SoundCueGraphSchema;
+	static Find(Outer: UObject, ResourceName: string): SoundCueGraphSchema;
+	static GetDefaultObject(): SoundCueGraphSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundCueGraphSchema;
+	static C(Other: UObject | any): SoundCueGraphSchema;
+}
+
+declare class SoundMixFactory extends Factory { 
+	static Load(ResourceName: string): SoundMixFactory;
+	static Find(Outer: UObject, ResourceName: string): SoundMixFactory;
+	static GetDefaultObject(): SoundMixFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundMixFactory;
+	static C(Other: UObject | any): SoundMixFactory;
+}
+
+declare class SoundSourceBusFactory extends Factory { 
+	static Load(ResourceName: string): SoundSourceBusFactory;
+	static Find(Outer: UObject, ResourceName: string): SoundSourceBusFactory;
+	static GetDefaultObject(): SoundSourceBusFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSourceBusFactory;
+	static C(Other: UObject | any): SoundSourceBusFactory;
+}
+
+declare class SoundSourceEffectFactory extends Factory { 
+	SoundEffectSourcepresetClass: UnrealEngineClass;
+	static Load(ResourceName: string): SoundSourceEffectFactory;
+	static Find(Outer: UObject, ResourceName: string): SoundSourceEffectFactory;
+	static GetDefaultObject(): SoundSourceEffectFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSourceEffectFactory;
+	static C(Other: UObject | any): SoundSourceEffectFactory;
+}
+
+declare class SoundSourceEffectChainFactory extends Factory { 
+	static Load(ResourceName: string): SoundSourceEffectChainFactory;
+	static Find(Outer: UObject, ResourceName: string): SoundSourceEffectChainFactory;
+	static GetDefaultObject(): SoundSourceEffectChainFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSourceEffectChainFactory;
+	static C(Other: UObject | any): SoundSourceEffectChainFactory;
+}
+
+declare class SoundSubmixEffectFactory extends Factory { 
+	SoundEffectSubmixPresetClass: UnrealEngineClass;
+	static Load(ResourceName: string): SoundSubmixEffectFactory;
+	static Find(Outer: UObject, ResourceName: string): SoundSubmixEffectFactory;
+	static GetDefaultObject(): SoundSubmixEffectFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmixEffectFactory;
+	static C(Other: UObject | any): SoundSubmixEffectFactory;
+}
+
+declare class SoundSubmixFactory extends Factory { 
+	static Load(ResourceName: string): SoundSubmixFactory;
+	static Find(Outer: UObject, ResourceName: string): SoundSubmixFactory;
+	static GetDefaultObject(): SoundSubmixFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmixFactory;
+	static C(Other: UObject | any): SoundSubmixFactory;
+}
+
+declare class SoundSubmixGraph extends EdGraph { 
+	static Load(ResourceName: string): SoundSubmixGraph;
+	static Find(Outer: UObject, ResourceName: string): SoundSubmixGraph;
+	static GetDefaultObject(): SoundSubmixGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmixGraph;
+	static C(Other: UObject | any): SoundSubmixGraph;
+}
+
+declare class SoundSubmixGraphNode extends EdGraphNode { 
+	SoundSubmix: SoundSubmix;
+	static Load(ResourceName: string): SoundSubmixGraphNode;
+	static Find(Outer: UObject, ResourceName: string): SoundSubmixGraphNode;
+	static GetDefaultObject(): SoundSubmixGraphNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmixGraphNode;
+	static C(Other: UObject | any): SoundSubmixGraphNode;
+}
+
+declare class SoundSubmixGraphSchema extends EdGraphSchema { 
+	static Load(ResourceName: string): SoundSubmixGraphSchema;
+	static Find(Outer: UObject, ResourceName: string): SoundSubmixGraphSchema;
+	static GetDefaultObject(): SoundSubmixGraphSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoundSubmixGraphSchema;
+	static C(Other: UObject | any): SoundSubmixGraphSchema;
+}
+
+declare class AnimationBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): AnimationBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): AnimationBlueprintLibrary;
+	static GetDefaultObject(): AnimationBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationBlueprintLibrary;
+	static SetRootMotionLockType(AnimationSequence: AnimSequence,RootMotionLockType: ERootMotionRootLock): void;
+	static SetRootMotionEnabled(AnimationSequence: AnimSequence,bEnabled: boolean): void;
+	static SetRateScale(AnimationSequence: AnimSequence,RateScale: number): void;
+	static SetIsRootMotionLockForced(AnimationSequence: AnimSequence,bForced: boolean): void;
+	static SetCompressionScheme(AnimationSequence: AnimSequence,CompressionScheme: AnimCompress): void;
+	static SetAnimationInterpolationType(AnimationSequence: AnimSequence,InterpolationType: EAnimInterpolationType): void;
+	static SetAdditiveBasePoseType(AnimationSequence: AnimSequence,AdditiveBasePoseType: EAdditiveBasePoseType): void;
+	static SetAdditiveAnimationType(AnimationSequence: AnimSequence,AdditiveAnimationType: EAdditiveAnimationType): void;
+	static RemoveVirtualBones(AnimationSequence: AnimSequence,VirtualBoneNames: string[]): void;
+	static RemoveVirtualBone(AnimationSequence: AnimSequence,VirtualBoneName: string): void;
+	static RemoveMetaDataOfClass(AnimationSequence: AnimSequence,MetaDataClass: UnrealEngineClass): void;
+	static RemoveMetaData(AnimationSequence: AnimSequence,MetaDataObject: AnimMetaData): void;
+	static RemoveCurve(AnimationSequence: AnimSequence,CurveName: string,bRemoveNameFromSkeleton: boolean): void;
+	static RemoveBoneAnimation(AnimationSequence: AnimSequence,BoneName: string,bIncludeChildren: boolean,bFinalize: boolean): void;
+	static RemoveAnimationSyncMarkersByTrack(AnimationSequence: AnimSequence,NotifyTrackName: string): number;
+	static RemoveAnimationSyncMarkersByName(AnimationSequence: AnimSequence,MarkerName: string): number;
+	static RemoveAnimationNotifyTrack(AnimationSequence: AnimSequence,NotifyTrackName: string): void;
+	static RemoveAnimationNotifyEventsByTrack(AnimationSequence: AnimSequence,NotifyTrackName: string): number;
+	static RemoveAnimationNotifyEventsByName(AnimationSequence: AnimSequence,NotifyName: string): number;
+	static RemoveAllVirtualBones(AnimationSequence: AnimSequence): void;
+	static RemoveAllMetaData(AnimationSequence: AnimSequence): void;
+	static RemoveAllCurveData(AnimationSequence: AnimSequence): void;
+	static RemoveAllBoneAnimation(AnimationSequence: AnimSequence): void;
+	static RemoveAllAnimationSyncMarkers(AnimationSequence: AnimSequence): void;
+	static RemoveAllAnimationNotifyTracks(AnimationSequence: AnimSequence): void;
+	static IsValidTime(AnimationSequence: AnimSequence,Time: number,IsValid?: boolean): {IsValid: boolean};
+	static IsValidRawAnimationTrackName(AnimationSequence: AnimSequence,TrackName: string): boolean;
+	static IsValidAnimNotifyTrackName(AnimationSequence: AnimSequence,NotifyTrackName: string): boolean;
+	static IsValidAnimationSyncMarkerName(AnimationSequence: AnimSequence,MarkerName: string): boolean;
+	static IsRootMotionLockForced(AnimationSequence: AnimSequence): boolean;
+	static IsRootMotionEnabled(AnimationSequence: AnimSequence): boolean;
+	static GetVectorKeys(AnimationSequence: AnimSequence,CurveName: string,Times?: number[],Values?: Vector[]): {Times: number[], Values: Vector[]};
+	static GetUniqueMarkerNames(AnimationSequence: AnimSequence,MarkerNames?: string[]): {MarkerNames: string[]};
+	static GetTransformationKeys(AnimationSequence: AnimSequence,CurveName: string,Times?: number[],Values?: Transform[]): {Times: number[], Values: Transform[]};
+	static GetTimeAtFrame(AnimationSequence: AnimSequence,Frame: number,Time?: number): {Time: number};
+	static GetSequenceLength(AnimationSequence: AnimSequence,Length?: number): {Length: number};
+	static GetRootMotionLockType(AnimationSequence: AnimSequence,LockType?: ERootMotionRootLock): {LockType: ERootMotionRootLock};
+	static GetRawTrackScaleData(AnimationSequence: AnimSequence,TrackName: string,ScaleData?: Vector[]): {ScaleData: Vector[]};
+	static GetRawTrackRotationData(AnimationSequence: AnimSequence,TrackName: string,RotationData?: Quat[]): {RotationData: Quat[]};
+	static GetRawTrackPositionData(AnimationSequence: AnimSequence,TrackName: string,PositionData?: Vector[]): {PositionData: Vector[]};
+	static GetRawTrackData(AnimationSequence: AnimSequence,TrackName: string,PositionKeys?: Vector[],RotationKeys?: Quat[],ScalingKeys?: Vector[]): {PositionKeys: Vector[], RotationKeys: Quat[], ScalingKeys: Vector[]};
+	static GetRateScale(AnimationSequence: AnimSequence,RateScale?: number): {RateScale: number};
+	static GetNumFrames(AnimationSequence: AnimSequence,NumFrames?: number): {NumFrames: number};
+	static GetMetaDataOfClass(AnimationSequence: AnimSequence,MetaDataClass: UnrealEngineClass,MetaDataOfClass: AnimMetaData[]): void;
+	static GetMetaData(AnimationSequence: AnimSequence,MetaData: AnimMetaData[]): void;
+	static GetFrameAtTime(AnimationSequence: AnimSequence,Time: number,Frame?: number): {Frame: number};
+	static GetFloatKeys(AnimationSequence: AnimSequence,CurveName: string,Times?: number[],Values?: number[]): {Times: number[], Values: number[]};
+	static GetCompressionScheme(AnimationSequence: AnimSequence,CompressionScheme?: AnimCompress): {CompressionScheme: AnimCompress};
+	static GetBonePosesForTime(AnimationSequence: AnimSequence,BoneNames: string[],Time: number,bExtractRootMotion: boolean,Poses?: Transform[],PreviewMesh?: SkeletalMesh): {Poses: Transform[]};
+	static GetBonePosesForFrame(AnimationSequence: AnimSequence,BoneNames: string[],Frame: number,bExtractRootMotion: boolean,Poses?: Transform[],PreviewMesh?: SkeletalMesh): {Poses: Transform[]};
+	static GetBonePoseForTime(AnimationSequence: AnimSequence,BoneName: string,Time: number,bExtractRootMotion: boolean,Pose?: Transform): {Pose: Transform};
+	static GetBonePoseForFrame(AnimationSequence: AnimSequence,BoneName: string,Frame: number,bExtractRootMotion: boolean,Pose?: Transform): {Pose: Transform};
+	static GetAnimNotifyEventTriggerTime(NotifyEvent: AnimNotifyEvent): number;
+	static GetAnimationTrackNames(AnimationSequence: AnimSequence,TrackNames?: string[]): {TrackNames: string[]};
+	static GetAnimationSyncMarkersForTrack(AnimationSequence: AnimSequence,NotifyTrackName: string,Markers?: AnimSyncMarker[]): {Markers: AnimSyncMarker[]};
+	static GetAnimationSyncMarkers(AnimationSequence: AnimSequence,Markers?: AnimSyncMarker[]): {Markers: AnimSyncMarker[]};
+	static GetAnimationNotifyTrackNames(AnimationSequence: AnimSequence,TrackNames?: string[]): {TrackNames: string[]};
+	static GetAnimationNotifyEventsForTrack(AnimationSequence: AnimSequence,NotifyTrackName: string,Events?: AnimNotifyEvent[]): {Events: AnimNotifyEvent[]};
+	static GetAnimationNotifyEvents(AnimationSequence: AnimSequence,NotifyEvents?: AnimNotifyEvent[]): {NotifyEvents: AnimNotifyEvent[]};
+	static GetAnimationNotifyEventNames(AnimationSequence: AnimSequence,EventNames?: string[]): {EventNames: string[]};
+	static GetAnimationInterpolationType(AnimationSequence: AnimSequence,InterpolationType?: EAnimInterpolationType): {InterpolationType: EAnimInterpolationType};
+	static GetAdditiveBasePoseType(AnimationSequence: AnimSequence,AdditiveBasePoseType?: EAdditiveBasePoseType): {AdditiveBasePoseType: EAdditiveBasePoseType};
+	static GetAdditiveAnimationType(AnimationSequence: AnimSequence,AdditiveAnimationType?: EAdditiveAnimationType): {AdditiveAnimationType: EAdditiveAnimationType};
+	static FindBonePathToRoot(AnimationSequence: AnimSequence,BoneName: string,BonePath?: string[]): {BonePath: string[]};
+	static FinalizeBoneAnimation(AnimationSequence: AnimSequence): void;
+	static DoesCurveExist(AnimationSequence: AnimSequence,CurveName: string,CurveType: ERawCurveTrackTypes): boolean;
+	static DoesBoneNameExist(AnimationSequence: AnimSequence,BoneName: string,bExists?: boolean): {bExists: boolean};
+	static ContainsMetaDataOfClass(AnimationSequence: AnimSequence,MetaDataClass: UnrealEngineClass): boolean;
+	static AddVirtualBone(AnimationSequence: AnimSequence,SourceBoneName: string,TargetBoneName: string,VirtualBoneName?: string): {VirtualBoneName: string};
+	static AddVectorCurveKeys(AnimationSequence: AnimSequence,CurveName: string,Times: number[],Vectors: Vector[]): void;
+	static AddVectorCurveKey(AnimationSequence: AnimSequence,CurveName: string,Time: number,Vector: Vector): void;
+	static AddTransformationCurveKeys(AnimationSequence: AnimSequence,CurveName: string,Times: number[],Transforms: Transform[]): void;
+	static AddTransformationCurveKey(AnimationSequence: AnimSequence,CurveName: string,Time: number,Transform: Transform): void;
+	static AddMetaDataObject(AnimationSequence: AnimSequence,MetaDataObject: AnimMetaData): void;
+	static AddMetaData(AnimationSequence: AnimSequence,MetaDataClass: UnrealEngineClass,MetaDataInstance: AnimMetaData): void;
+	static AddFloatCurveKeys(AnimationSequence: AnimSequence,CurveName: string,Times: number[],Values: number[]): void;
+	static AddFloatCurveKey(AnimationSequence: AnimSequence,CurveName: string,Time: number,Value: number): void;
+	static AddCurve(AnimationSequence: AnimSequence,CurveName: string,CurveType: ERawCurveTrackTypes,bMetaDataCurve: boolean): void;
+	static AddAnimationSyncMarker(AnimationSequence: AnimSequence,MarkerName: string,Time: number,NotifyTrackName: string): void;
+	static AddAnimationNotifyTrack(AnimationSequence: AnimSequence,NotifyTrackName: string,TrackColor: LinearColor): void;
+	static AddAnimationNotifyEventObject(AnimationSequence: AnimSequence,StartTime: number,Notify: AnimNotify,NotifyTrackName: string): void;
+	static AddAnimationNotifyEvent(AnimationSequence: AnimSequence,NotifyTrackName: string,StartTime: number,Duration: number,NotifyClass: UnrealEngineClass): AnimNotify;
+	static C(Other: UObject | any): AnimationBlueprintLibrary;
+}
+
+declare class AnimationModifier extends UObject { 
+	RevisionGuid: Guid;
+	AppliedGuid: Guid;
+	StoredNativeRevision: number;
+	static Load(ResourceName: string): AnimationModifier;
+	static Find(Outer: UObject, ResourceName: string): AnimationModifier;
+	static GetDefaultObject(): AnimationModifier;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationModifier;
+	OnRevert(AnimationSequence: AnimSequence): void;
+	OnApply(AnimationSequence: AnimSequence): void;
+	static C(Other: UObject | any): AnimationModifier;
+}
+
+declare class AnimationModifiersAssetUserData extends AssetUserData { 
+	AnimationModifierInstances: AnimationModifier[];
+	static Load(ResourceName: string): AnimationModifiersAssetUserData;
+	static Find(Outer: UObject, ResourceName: string): AnimationModifiersAssetUserData;
+	static GetDefaultObject(): AnimationModifiersAssetUserData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationModifiersAssetUserData;
+	static C(Other: UObject | any): AnimationModifiersAssetUserData;
+}
+
+declare class DatasmithObjectTemplate extends UObject { 
+	static Load(ResourceName: string): DatasmithObjectTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithObjectTemplate;
+	static GetDefaultObject(): DatasmithObjectTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithObjectTemplate;
+	static C(Other: UObject | any): DatasmithObjectTemplate;
+}
+
+declare class DatasmithActorTemplate extends DatasmithObjectTemplate { 
+	Layers: any;
+	Tags: any;
+	static Load(ResourceName: string): DatasmithActorTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithActorTemplate;
+	static GetDefaultObject(): DatasmithActorTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithActorTemplate;
+	static C(Other: UObject | any): DatasmithActorTemplate;
+}
+
+declare type EDatasmithAreaLightActorShape = 'Rectangle' | 'Disc' | 'Sphere' | 'Cylinder' | 'EDatasmithAreaLightActorShape_MAX';
+declare var EDatasmithAreaLightActorShape : { Rectangle:'Rectangle',Disc:'Disc',Sphere:'Sphere',Cylinder:'Cylinder',EDatasmithAreaLightActorShape_MAX:'EDatasmithAreaLightActorShape_MAX', };
+declare class DatasmithAreaLightActor extends Actor { 
+	LightShape: EDatasmithAreaLightActorShape;
+	Dimensions: Vector2D;
+	Color: LinearColor;
+	Intensity: number;
+	static GetDefaultObject(): DatasmithAreaLightActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithAreaLightActor;
+	static C(Other: UObject | any): DatasmithAreaLightActor;
+}
+
+declare class DatasmithAreaLightActorTemplate extends DatasmithObjectTemplate { 
+	LightShape: EDatasmithAreaLightActorShape;
+	Dimensions: Vector2D;
+	Color: LinearColor;
+	Intensity: number;
+	bHidden: boolean;
+	static Load(ResourceName: string): DatasmithAreaLightActorTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithAreaLightActorTemplate;
+	static GetDefaultObject(): DatasmithAreaLightActorTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithAreaLightActorTemplate;
+	static C(Other: UObject | any): DatasmithAreaLightActorTemplate;
+}
+
+declare class DatasmithAssetImportOptions { 
+	PackagePath: string;
+	clone() : DatasmithAssetImportOptions;
+	static C(Other: UObject | any): DatasmithAssetImportOptions;
+}
+
+declare class DatasmithAssetImportData extends AssetImportData { 
+	AssetImportOptions: DatasmithAssetImportOptions;
+	static Load(ResourceName: string): DatasmithAssetImportData;
+	static Find(Outer: UObject, ResourceName: string): DatasmithAssetImportData;
+	static GetDefaultObject(): DatasmithAssetImportData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithAssetImportData;
+	static C(Other: UObject | any): DatasmithAssetImportData;
+}
+
+declare type EDatasmithImportLightmapMin = 'LIGHTMAP_16' | 'LIGHTMAP_32' | 'LIGHTMAP_64' | 'LIGHTMAP_128' | 'LIGHTMAP_256' | 'LIGHTMAP_512' | 'LIGHTMAP_MAX';
+declare var EDatasmithImportLightmapMin : { LIGHTMAP_16:'LIGHTMAP_16',LIGHTMAP_32:'LIGHTMAP_32',LIGHTMAP_64:'LIGHTMAP_64',LIGHTMAP_128:'LIGHTMAP_128',LIGHTMAP_256:'LIGHTMAP_256',LIGHTMAP_512:'LIGHTMAP_512',LIGHTMAP_MAX:'LIGHTMAP_MAX', };
+declare type EDatasmithImportLightmapMax = 'LIGHTMAP_64' | 'LIGHTMAP_128' | 'LIGHTMAP_256' | 'LIGHTMAP_512' | 'LIGHTMAP_1024' | 'LIGHTMAP_2048' | 'LIGHTMAP_4096' | 'LIGHTMAP_MAX';
+declare var EDatasmithImportLightmapMax : { LIGHTMAP_64:'LIGHTMAP_64',LIGHTMAP_128:'LIGHTMAP_128',LIGHTMAP_256:'LIGHTMAP_256',LIGHTMAP_512:'LIGHTMAP_512',LIGHTMAP_1024:'LIGHTMAP_1024',LIGHTMAP_2048:'LIGHTMAP_2048',LIGHTMAP_4096:'LIGHTMAP_4096',LIGHTMAP_MAX:'LIGHTMAP_MAX', };
+declare class DatasmithStaticMeshImportOptions { 
+	MinLightmapResolution: EDatasmithImportLightmapMin;
+	MaxLightmapResolution: EDatasmithImportLightmapMax;
+	bGenerateLightmapUVs: boolean;
+	bRemoveDegenerates: boolean;
+	clone() : DatasmithStaticMeshImportOptions;
+	static C(Other: UObject | any): DatasmithStaticMeshImportOptions;
+}
+
+declare class DatasmithStaticMeshImportData extends DatasmithAssetImportData { 
+	ImportOptions: DatasmithStaticMeshImportOptions;
+	static Load(ResourceName: string): DatasmithStaticMeshImportData;
+	static Find(Outer: UObject, ResourceName: string): DatasmithStaticMeshImportData;
+	static GetDefaultObject(): DatasmithStaticMeshImportData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithStaticMeshImportData;
+	static C(Other: UObject | any): DatasmithStaticMeshImportData;
+}
+
+declare class DatasmithTessellationOptions { 
+	ChordTolerance: number;
+	MaxEdgeLength: number;
+	NormalTolerance: number;
+	clone() : DatasmithTessellationOptions;
+	static C(Other: UObject | any): DatasmithTessellationOptions;
+}
+
+declare class DatasmithStaticMeshCADImportData extends DatasmithStaticMeshImportData { 
+	TessellationOptions: DatasmithTessellationOptions;
+	ModelUnit: any;
+	ModelTolerance: any;
+	ResourcePath: string;
+	ResourceFilename: string;
+	AuxiliaryFilenames: string[];
+	static Load(ResourceName: string): DatasmithStaticMeshCADImportData;
+	static Find(Outer: UObject, ResourceName: string): DatasmithStaticMeshCADImportData;
+	static GetDefaultObject(): DatasmithStaticMeshCADImportData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithStaticMeshCADImportData;
+	static C(Other: UObject | any): DatasmithStaticMeshCADImportData;
+}
+
+declare type EDatasmithImportScene = 'NewLevel' | 'CurrentLevel' | 'AssetsOnly' | 'EDatasmithImportScene_MAX';
+declare var EDatasmithImportScene : { NewLevel:'NewLevel',CurrentLevel:'CurrentLevel',AssetsOnly:'AssetsOnly',EDatasmithImportScene_MAX:'EDatasmithImportScene_MAX', };
+declare class DatasmithImportBaseOptions { 
+	SceneHandling: EDatasmithImportScene;
+	bIncludeGeometry: boolean;
+	bIncludeMaterial: boolean;
+	bIncludeLight: boolean;
+	bIncludeCamera: boolean;
+	AssetOptions: DatasmithAssetImportOptions;
+	StaticMeshOptions: DatasmithStaticMeshImportOptions;
+	clone() : DatasmithImportBaseOptions;
+	static C(Other: UObject | any): DatasmithImportBaseOptions;
+}
+
+declare class DatasmithSceneImportData extends AssetImportData { 
+	BaseOptions: DatasmithImportBaseOptions;
+	static Load(ResourceName: string): DatasmithSceneImportData;
+	static Find(Outer: UObject, ResourceName: string): DatasmithSceneImportData;
+	static GetDefaultObject(): DatasmithSceneImportData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithSceneImportData;
+	static C(Other: UObject | any): DatasmithSceneImportData;
+}
+
+declare class DatasmithCADImportSceneData extends DatasmithSceneImportData { 
+	TessellationOptions: DatasmithTessellationOptions;
+	static Load(ResourceName: string): DatasmithCADImportSceneData;
+	static Find(Outer: UObject, ResourceName: string): DatasmithCADImportSceneData;
+	static GetDefaultObject(): DatasmithCADImportSceneData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithCADImportSceneData;
+	static C(Other: UObject | any): DatasmithCADImportSceneData;
+}
+
+declare class DatasmithMDLSceneImportData extends DatasmithSceneImportData { 
+	static Load(ResourceName: string): DatasmithMDLSceneImportData;
+	static Find(Outer: UObject, ResourceName: string): DatasmithMDLSceneImportData;
+	static GetDefaultObject(): DatasmithMDLSceneImportData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithMDLSceneImportData;
+	static C(Other: UObject | any): DatasmithMDLSceneImportData;
+}
+
+declare class DatasmithDeltaGenAssetImportData extends DatasmithAssetImportData { 
+	static Load(ResourceName: string): DatasmithDeltaGenAssetImportData;
+	static Find(Outer: UObject, ResourceName: string): DatasmithDeltaGenAssetImportData;
+	static GetDefaultObject(): DatasmithDeltaGenAssetImportData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithDeltaGenAssetImportData;
+	static C(Other: UObject | any): DatasmithDeltaGenAssetImportData;
+}
+
+declare class DatasmithDeltaGenSceneImportData extends DatasmithSceneImportData { 
+	static Load(ResourceName: string): DatasmithDeltaGenSceneImportData;
+	static Find(Outer: UObject, ResourceName: string): DatasmithDeltaGenSceneImportData;
+	static GetDefaultObject(): DatasmithDeltaGenSceneImportData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithDeltaGenSceneImportData;
+	static C(Other: UObject | any): DatasmithDeltaGenSceneImportData;
+}
+
+declare class DatasmithVREDAssetImportData extends DatasmithAssetImportData { 
+	static Load(ResourceName: string): DatasmithVREDAssetImportData;
+	static Find(Outer: UObject, ResourceName: string): DatasmithVREDAssetImportData;
+	static GetDefaultObject(): DatasmithVREDAssetImportData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithVREDAssetImportData;
+	static C(Other: UObject | any): DatasmithVREDAssetImportData;
+}
+
+declare class DatasmithVREDSceneImportData extends DatasmithSceneImportData { 
+	static Load(ResourceName: string): DatasmithVREDSceneImportData;
+	static Find(Outer: UObject, ResourceName: string): DatasmithVREDSceneImportData;
+	static GetDefaultObject(): DatasmithVREDSceneImportData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithVREDSceneImportData;
+	static C(Other: UObject | any): DatasmithVREDSceneImportData;
+}
+
+declare class DatasmithCameraFilmbackSettingsTemplate { 
+	SensorWidth: number;
+	SensorHeight: number;
+	clone() : DatasmithCameraFilmbackSettingsTemplate;
+	static C(Other: UObject | any): DatasmithCameraFilmbackSettingsTemplate;
+}
+
+declare class DatasmithCameraLensSettingsTemplate { 
+	MaxFStop: number;
+	clone() : DatasmithCameraLensSettingsTemplate;
+	static C(Other: UObject | any): DatasmithCameraLensSettingsTemplate;
+}
+
+declare class DatasmithCameraFocusSettingsTemplate { 
+	FocusMethod: ECameraFocusMethod;
+	ManualFocusDistance: number;
+	clone() : DatasmithCameraFocusSettingsTemplate;
+	static C(Other: UObject | any): DatasmithCameraFocusSettingsTemplate;
+}
+
+declare class DatasmithPostProcessSettingsTemplate { 
+	bOverride_WhiteTemp: boolean;
+	bOverride_ColorSaturation: boolean;
+	bOverride_VignetteIntensity: boolean;
+	bOverride_FilmWhitePoint: boolean;
+	bOverride_AutoExposureMethod: boolean;
+	bOverride_CameraISO: boolean;
+	WhiteTemp: number;
+	VignetteIntensity: number;
+	FilmWhitePoint: LinearColor;
+	ColorSaturation: Vector4;
+	AutoExposureMethod: EAutoExposureMethod;
+	CameraISO: number;
+	clone() : DatasmithPostProcessSettingsTemplate;
+	static C(Other: UObject | any): DatasmithPostProcessSettingsTemplate;
+}
+
+declare class DatasmithCineCameraComponentTemplate extends DatasmithObjectTemplate { 
+	FilmbackSettings: DatasmithCameraFilmbackSettingsTemplate;
+	LensSettings: DatasmithCameraLensSettingsTemplate;
+	FocusSettings: DatasmithCameraFocusSettingsTemplate;
+	CurrentFocalLength: number;
+	CurrentAperture: number;
+	PostProcessSettings: DatasmithPostProcessSettingsTemplate;
+	static Load(ResourceName: string): DatasmithCineCameraComponentTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithCineCameraComponentTemplate;
+	static GetDefaultObject(): DatasmithCineCameraComponentTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithCineCameraComponentTemplate;
+	static C(Other: UObject | any): DatasmithCineCameraComponentTemplate;
+}
+
+declare class DatasmithContentBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): DatasmithContentBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): DatasmithContentBlueprintLibrary;
+	static GetDefaultObject(): DatasmithContentBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithContentBlueprintLibrary;
+	static GetDatasmithUserDataValueForKey(UObject: UObject,Key: string): string;
+	static GetDatasmithUserDataKeysAndValuesForValue(UObject: UObject,StringToMatch: string,OutKeys?: string[],OutValues?: string[]): {OutKeys: string[], OutValues: string[]};
+	static GetDatasmithUserData(UObject: UObject): DatasmithAssetUserData;
+	static GetAllObjectsAndValuesForKey(Key: string,ObjectClass: UnrealEngineClass,OutObjects?: UObject[],OutValues?: string[]): {OutObjects: UObject[], OutValues: string[]};
+	static GetAllDatasmithUserData(ObjectClass: UnrealEngineClass,OutUserData?: DatasmithAssetUserData[]): {OutUserData: DatasmithAssetUserData[]};
+	static C(Other: UObject | any): DatasmithContentBlueprintLibrary;
+}
+
+declare type EDatasmithImportSearchPackagePolicy = 'Current' | 'All' | 'EDatasmithImportSearchPackagePolicy_MAX';
+declare var EDatasmithImportSearchPackagePolicy : { Current:'Current',All:'All',EDatasmithImportSearchPackagePolicy_MAX:'EDatasmithImportSearchPackagePolicy_MAX', };
+declare type EDatasmithImportAssetConflictPolicy = 'Replace' | 'Update' | 'Use' | 'Ignore' | 'EDatasmithImportAssetConflictPolicy_MAX';
+declare var EDatasmithImportAssetConflictPolicy : { Replace:'Replace',Update:'Update',Use:'Use',Ignore:'Ignore',EDatasmithImportAssetConflictPolicy_MAX:'EDatasmithImportAssetConflictPolicy_MAX', };
+declare type EDatasmithImportActorPolicy = 'Update' | 'Full' | 'Ignore' | 'EDatasmithImportActorPolicy_MAX';
+declare var EDatasmithImportActorPolicy : { Update:'Update',Full:'Full',Ignore:'Ignore',EDatasmithImportActorPolicy_MAX:'EDatasmithImportActorPolicy_MAX', };
+declare type EDatasmithImportMaterialQuality = 'UseNoFresnelCurves' | 'UseSimplifierFresnelCurves' | 'UseRealFresnelCurves' | 'EDatasmithImportMaterialQuality_MAX';
+declare var EDatasmithImportMaterialQuality : { UseNoFresnelCurves:'UseNoFresnelCurves',UseSimplifierFresnelCurves:'UseSimplifierFresnelCurves',UseRealFresnelCurves:'UseRealFresnelCurves',EDatasmithImportMaterialQuality_MAX:'EDatasmithImportMaterialQuality_MAX', };
+declare class DatasmithReimportOptions { 
+	bUpdateActors: boolean;
+	bRespawnDeletedActors: boolean;
+	clone() : DatasmithReimportOptions;
+	static C(Other: UObject | any): DatasmithReimportOptions;
+}
+
+declare class DatasmithImportOptions extends UObject { 
+	SearchPackagePolicy: EDatasmithImportSearchPackagePolicy;
+	MaterialConflictPolicy: EDatasmithImportAssetConflictPolicy;
+	TextureConflictPolicy: EDatasmithImportAssetConflictPolicy;
+	StaticMeshActorImportPolicy: EDatasmithImportActorPolicy;
+	LightImportPolicy: EDatasmithImportActorPolicy;
+	CameraImportPolicy: EDatasmithImportActorPolicy;
+	OtherActorImportPolicy: EDatasmithImportActorPolicy;
+	MaterialQuality: EDatasmithImportMaterialQuality;
+	BaseOptions: DatasmithImportBaseOptions;
+	TessellationOptions: DatasmithTessellationOptions;
+	ReimportOptions: DatasmithReimportOptions;
+	static Load(ResourceName: string): DatasmithImportOptions;
+	static Find(Outer: UObject, ResourceName: string): DatasmithImportOptions;
+	static GetDefaultObject(): DatasmithImportOptions;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithImportOptions;
+	static C(Other: UObject | any): DatasmithImportOptions;
+}
+
+declare class DatasmithLandscapeTemplate extends DatasmithObjectTemplate { 
+	LandscapeMaterial: MaterialInterface;
+	StaticLightingLOD: number;
+	static Load(ResourceName: string): DatasmithLandscapeTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithLandscapeTemplate;
+	static GetDefaultObject(): DatasmithLandscapeTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithLandscapeTemplate;
+	static C(Other: UObject | any): DatasmithLandscapeTemplate;
+}
+
+declare class DatasmithLightComponentTemplate extends DatasmithObjectTemplate { 
+	bVisible: boolean;
+	CastShadows: boolean;
+	bUseTemperature: boolean;
+	bUseIESBrightness: boolean;
+	Intensity: number;
+	Temperature: number;
+	IESBrightnessScale: number;
+	LightColor: LinearColor;
+	LightFunctionMaterial: MaterialInterface;
+	IESTexture: TextureLightProfile;
+	static Load(ResourceName: string): DatasmithLightComponentTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithLightComponentTemplate;
+	static GetDefaultObject(): DatasmithLightComponentTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithLightComponentTemplate;
+	static C(Other: UObject | any): DatasmithLightComponentTemplate;
+}
+
+declare class DatasmithPointLightComponentTemplate extends DatasmithObjectTemplate { 
+	IntensityUnits: ELightUnits;
+	SourceRadius: number;
+	SourceLength: number;
+	AttenuationRadius: number;
+	static Load(ResourceName: string): DatasmithPointLightComponentTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithPointLightComponentTemplate;
+	static GetDefaultObject(): DatasmithPointLightComponentTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithPointLightComponentTemplate;
+	static C(Other: UObject | any): DatasmithPointLightComponentTemplate;
+}
+
+declare class DatasmithScene extends UObject { 
+	AssetImportData: DatasmithSceneImportData;
+	BulkDataVersion: number;
+	static Load(ResourceName: string): DatasmithScene;
+	static Find(Outer: UObject, ResourceName: string): DatasmithScene;
+	static GetDefaultObject(): DatasmithScene;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithScene;
+	static C(Other: UObject | any): DatasmithScene;
+}
+
+declare class DatasmithSceneActor extends Actor { 
+	Scene: DatasmithScene;
+	RelatedActors: any;
+	static GetDefaultObject(): DatasmithSceneActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithSceneActor;
+	static C(Other: UObject | any): DatasmithSceneActor;
+}
+
+declare class DatasmithSceneComponentTemplate extends DatasmithObjectTemplate { 
+	RelativeTransform: Transform;
+	Mobility: EComponentMobility;
+	AttachParent: SceneComponent;
+	Tags: any;
+	static Load(ResourceName: string): DatasmithSceneComponentTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithSceneComponentTemplate;
+	static GetDefaultObject(): DatasmithSceneComponentTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithSceneComponentTemplate;
+	static C(Other: UObject | any): DatasmithSceneComponentTemplate;
+}
+
+declare class DatasmithSkyLightComponentTemplate extends DatasmithObjectTemplate { 
+	SourceType: ESkyLightSourceType;
+	CubemapResolution: number;
+	Cubemap: TextureCube;
+	static Load(ResourceName: string): DatasmithSkyLightComponentTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithSkyLightComponentTemplate;
+	static GetDefaultObject(): DatasmithSkyLightComponentTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithSkyLightComponentTemplate;
+	static C(Other: UObject | any): DatasmithSkyLightComponentTemplate;
+}
+
+declare class DatasmithSpotLightComponentTemplate extends DatasmithObjectTemplate { 
+	InnerConeAngle: number;
+	OuterConeAngle: number;
+	static Load(ResourceName: string): DatasmithSpotLightComponentTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithSpotLightComponentTemplate;
+	static GetDefaultObject(): DatasmithSpotLightComponentTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithSpotLightComponentTemplate;
+	static C(Other: UObject | any): DatasmithSpotLightComponentTemplate;
+}
+
+declare class DatasmithStaticMeshComponentTemplate extends DatasmithSceneComponentTemplate { 
+	StaticMesh: StaticMesh;
+	OverrideMaterials: MaterialInterface[];
+	static Load(ResourceName: string): DatasmithStaticMeshComponentTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithStaticMeshComponentTemplate;
+	static GetDefaultObject(): DatasmithStaticMeshComponentTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithStaticMeshComponentTemplate;
+	static C(Other: UObject | any): DatasmithStaticMeshComponentTemplate;
+}
+
+declare class DatasmithMeshSectionInfoMapTemplate { 
+	Map: any;
+	clone() : DatasmithMeshSectionInfoMapTemplate;
+	static C(Other: UObject | any): DatasmithMeshSectionInfoMapTemplate;
+}
+
+declare class DatasmithMeshBuildSettingsTemplate { 
+	bUseMikkTSpace: boolean;
+	bRecomputeNormals: boolean;
+	bRecomputeTangents: boolean;
+	bRemoveDegenerates: boolean;
+	bBuildAdjacencyBuffer: boolean;
+	bUseHighPrecisionTangentBasis: boolean;
+	bUseFullPrecisionUVs: boolean;
+	bGenerateLightmapUVs: boolean;
+	MinLightmapResolution: number;
+	SrcLightmapIndex: number;
+	DstLightmapIndex: number;
+	clone() : DatasmithMeshBuildSettingsTemplate;
+	static C(Other: UObject | any): DatasmithMeshBuildSettingsTemplate;
+}
+
+declare class DatasmithStaticMaterialTemplate { 
+	MaterialSlotName: string;
+	MaterialInterface: MaterialInterface;
+	clone() : DatasmithStaticMaterialTemplate;
+	static C(Other: UObject | any): DatasmithStaticMaterialTemplate;
+}
+
+declare class DatasmithStaticMeshTemplate extends DatasmithObjectTemplate { 
+	SectionInfoMap: DatasmithMeshSectionInfoMapTemplate;
+	LightMapCoordinateIndex: number;
+	LightMapResolution: number;
+	BuildSettings: DatasmithMeshBuildSettingsTemplate[];
+	StaticMaterials: DatasmithStaticMaterialTemplate[];
+	static Load(ResourceName: string): DatasmithStaticMeshTemplate;
+	static Find(Outer: UObject, ResourceName: string): DatasmithStaticMeshTemplate;
+	static GetDefaultObject(): DatasmithStaticMeshTemplate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DatasmithStaticMeshTemplate;
+	static C(Other: UObject | any): DatasmithStaticMeshTemplate;
+}
+
+declare class MRMeshComponent extends PrimitiveComponent { 
+	Material: MaterialInterface;
+	bCreateMeshProxySections: boolean;
+	bUpdateNavMeshOnMeshUpdate: boolean;
+	BodySetups: BodySetup[];
+	static Load(ResourceName: string): MRMeshComponent;
+	static Find(Outer: UObject, ResourceName: string): MRMeshComponent;
+	static GetDefaultObject(): MRMeshComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MRMeshComponent;
+	IsConnected(): boolean;
+	ForceNavMeshUpdate(): void;
+	Clear(): void;
+	static C(Other: UObject | any): MRMeshComponent;
+}
+
+declare class MeshReconstructorBase extends UObject { 
+	static Load(ResourceName: string): MeshReconstructorBase;
+	static Find(Outer: UObject, ResourceName: string): MeshReconstructorBase;
+	static GetDefaultObject(): MeshReconstructorBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshReconstructorBase;
+	StopReconstruction(): void;
+	StartReconstruction(): void;
+	PauseReconstruction(): void;
+	IsReconstructionStarted(): boolean;
+	IsReconstructionPaused(): boolean;
+	DisconnectMRMesh(): void;
+	ConnectMRMesh(Mesh: MRMeshComponent): void;
+	static C(Other: UObject | any): MeshReconstructorBase;
+}
+
+declare class MagicLeapSecureStorage extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): MagicLeapSecureStorage;
+	static Find(Outer: UObject, ResourceName: string): MagicLeapSecureStorage;
+	static GetDefaultObject(): MagicLeapSecureStorage;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MagicLeapSecureStorage;
+	static PutSecureVector(Key: string,DataToStore: Vector): boolean;
+	static PutSecureTransform(Key: string,DataToStore: Transform): boolean;
+	static PutSecureString(Key: string,DataToStore: string): boolean;
+	static PutSecureRotator(Key: string,DataToStore: Rotator): boolean;
+	static PutSecureInt(Key: string,DataToStore: number): boolean;
+	static PutSecureFloat(Key: string,DataToStore: number): boolean;
+	static PutSecureByte(Key: string,DataToStore: number): boolean;
+	static PutSecureBool(Key: string,DataToStore: boolean): boolean;
+	static GetSecureVector(Key: string,DataToRetrieve?: Vector): {DataToRetrieve: Vector, $: boolean};
+	static GetSecureTransform(Key: string,DataToRetrieve?: Transform): {DataToRetrieve: Transform, $: boolean};
+	static GetSecureString(Key: string,DataToRetrieve?: string): {DataToRetrieve: string, $: boolean};
+	static GetSecureRotator(Key: string,DataToRetrieve?: Rotator): {DataToRetrieve: Rotator, $: boolean};
+	static GetSecureInt(Key: string,DataToRetrieve?: number): {DataToRetrieve: number, $: boolean};
+	static GetSecureFloat(Key: string,DataToRetrieve?: number): {DataToRetrieve: number, $: boolean};
+	static GetSecureByte(Key: string,DataToRetrieve?: number): {DataToRetrieve: number, $: boolean};
+	static GetSecureBool(Key: string,DataToRetrieve?: boolean): {DataToRetrieve: boolean, $: boolean};
+	static DeleteSecureData(Key: string): boolean;
+	static C(Other: UObject | any): MagicLeapSecureStorage;
+}
+
+declare class CameraCaptureComponent extends ActorComponent { 
+	CaptureLogMessage: UnrealEngineMulticastDelegate<(LogMessage: string) => void>;
+	CaptureImgToFileSuccess: UnrealEngineMulticastDelegate<(FilePath: string) => void>;
+	CaptureImgToFileFailure: UnrealEngineMulticastDelegate<() => void>;
+	CaptureImgToTextureSuccess: UnrealEngineMulticastDelegate<(CaptureTexture: Texture2D) => void>;
+	CaptureImgToTextureFailure: UnrealEngineMulticastDelegate<() => void>;
+	CaptureVidToFileSuccess: UnrealEngineMulticastDelegate<(FilePath: string) => void>;
+	CaptureVidToFileFailure: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): CameraCaptureComponent;
+	static Find(Outer: UObject, ResourceName: string): CameraCaptureComponent;
+	static GetDefaultObject(): CameraCaptureComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CameraCaptureComponent;
+	CaptureVideoToFileAsync(VideoLength: number): boolean;
+	CaptureImageToTextureAsync(): boolean;
+	CaptureImageToFileAsync(): boolean;
+	static C(Other: UObject | any): CameraCaptureComponent;
+}
+
+declare class ImageTrackerComponent extends SceneComponent { 
+	OnSetImageTargetSucceeded: UnrealEngineMulticastDelegate<() => void>;
+	OnSetImageTargetFailed: UnrealEngineMulticastDelegate<() => void>;
+	OnImageTargetFound: UnrealEngineMulticastDelegate<() => void>;
+	OnImageTargetLost: UnrealEngineMulticastDelegate<() => void>;
+	OnImageTargetUnreliableTracking: UnrealEngineMulticastDelegate<(LastTrackedLocation: Vector, LastTrackedRotation: Rotator, NewUnreliableLocation: Vector, NewUnreliableRotation: Rotator) => void>;
+	TargetImageTexture: Texture2D;
+	Name: string;
+	LongerDimension: number;
+	bIsStationary: boolean;
+	bUseUnreliablePose: boolean;
+	static Load(ResourceName: string): ImageTrackerComponent;
+	static Find(Outer: UObject, ResourceName: string): ImageTrackerComponent;
+	static GetDefaultObject(): ImageTrackerComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImageTrackerComponent;
+	SetTargetAsync(ImageTarget: Texture2D): void;
+	static C(Other: UObject | any): ImageTrackerComponent;
+}
+
+declare class ImageTrackerFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): ImageTrackerFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): ImageTrackerFunctionLibrary;
+	static GetDefaultObject(): ImageTrackerFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImageTrackerFunctionLibrary;
+	static SetMaxSimultaneousTargets(MaxSimultaneousTargets: number): void;
+	static IsImageTrackingEnabled(): boolean;
+	static GetMaxSimultaneousTargets(): number;
+	static EnableImageTracking(bEnable: boolean): void;
+	static C(Other: UObject | any): ImageTrackerFunctionLibrary;
+}
+
+declare type PurchaseType = 'Consumable' | 'Nonconsumable' | 'Undefined' | 'PurchaseType_MAX';
+declare var PurchaseType : { Consumable:'Consumable',Nonconsumable:'Nonconsumable',Undefined:'Undefined',PurchaseType_MAX:'PurchaseType_MAX', };
+declare class PurchaseItemDetails { 
+	Price: string;
+	Name: string;
+	Type: PurchaseType;
+	clone() : PurchaseItemDetails;
+	static C(Other: UObject | any): PurchaseItemDetails;
+}
+
+declare class PurchaseConfirmation { 
+	PackageName: string;
+	Type: PurchaseType;
+	clone() : PurchaseConfirmation;
+	static C(Other: UObject | any): PurchaseConfirmation;
+}
+
+declare class InAppPurchaseComponent extends ActorComponent { 
+	InAppPurchaseLogMessage: UnrealEngineMulticastDelegate<(LogMessage: string) => void>;
+	GetItemsDetailsSuccess: UnrealEngineMulticastDelegate<(ItemsDetails: PurchaseItemDetails[]) => void>;
+	GetItemsDetailsFailure: UnrealEngineMulticastDelegate<() => void>;
+	PurchaseConfirmationSuccess: UnrealEngineMulticastDelegate<(PurchaseConfirmations: PurchaseConfirmation) => void>;
+	PurchaseConfirmationFailure: UnrealEngineMulticastDelegate<() => void>;
+	GetPurchaseHistorySuccess: UnrealEngineMulticastDelegate<(PurchaseHistory: PurchaseConfirmation[]) => void>;
+	GetPurchaseHistoryFailure: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): InAppPurchaseComponent;
+	static Find(Outer: UObject, ResourceName: string): InAppPurchaseComponent;
+	static GetDefaultObject(): InAppPurchaseComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InAppPurchaseComponent;
+	TryPurchaseItemAsync(ItemDetails: PurchaseItemDetails): boolean;
+	TryGetPurchaseHistoryAsync(InNumPages: number): boolean;
+	TryGetItemsDetailsAsync(ItemIDs: string[]): boolean;
+	static C(Other: UObject | any): InAppPurchaseComponent;
+}
+
+declare class LightingTrackingComponent extends ActorComponent { 
+	UseGlobalAmbience: boolean;
+	UseColorTemp: boolean;
+	static Load(ResourceName: string): LightingTrackingComponent;
+	static Find(Outer: UObject, ResourceName: string): LightingTrackingComponent;
+	static GetDefaultObject(): LightingTrackingComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightingTrackingComponent;
+	static C(Other: UObject | any): LightingTrackingComponent;
+}
+
+declare class MagicLeapARPinFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): MagicLeapARPinFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): MagicLeapARPinFunctionLibrary;
+	static GetDefaultObject(): MagicLeapARPinFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MagicLeapARPinFunctionLibrary;
+	static GetNumAvailableARPins(Count?: number): {Count: number, $: EPassableWorldError};
+	static GetClosestARPin(SearchPoint: Vector,PinID?: Guid): {PinID: Guid, $: EPassableWorldError};
+	static GetAvailableARPins(NumRequested: number,Pins?: Guid[]): {Pins: Guid[], $: EPassableWorldError};
+	static GetARPinPositionAndOrientation(PinID: Guid,Position?: Vector,Orientation?: Rotator,PinFoundInEnvironment?: boolean): {Position: Vector, Orientation: Rotator, PinFoundInEnvironment: boolean, $: boolean};
+	static C(Other: UObject | any): MagicLeapARPinFunctionLibrary;
+}
+
+declare type EAutoPinType = 'OnlyOnDataRestoration' | 'Always' | 'Never' | 'EAutoPinType_MAX';
+declare var EAutoPinType : { OnlyOnDataRestoration:'OnlyOnDataRestoration',Always:'Always',Never:'Never',EAutoPinType_MAX:'EAutoPinType_MAX', };
+declare class MagicLeapARPinComponent extends SceneComponent { 
+	ObjectUID: string;
+	AutoPinType: EAutoPinType;
+	bShouldPinActor: boolean;
+	OnPersistentEntityPinned: UnrealEngineMulticastDelegate<(bRestoredOrSynced: boolean) => void>;
+	PinnedCFUID: Guid;
+	PinnedSceneComponent: SceneComponent;
+	static Load(ResourceName: string): MagicLeapARPinComponent;
+	static Find(Outer: UObject, ResourceName: string): MagicLeapARPinComponent;
+	static GetDefaultObject(): MagicLeapARPinComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MagicLeapARPinComponent;
+	UnPin(): void;
+	PinSceneComponent(ComponentToPin: SceneComponent): boolean;
+	PinRestoredOrSynced(): boolean;
+	PinActor(ActorToPin: Actor): boolean;
+	IsPinned(): boolean;
+	GetPinnedPinID(PinID?: Guid): {PinID: Guid, $: boolean};
+	static C(Other: UObject | any): MagicLeapARPinComponent;
+}
+
+declare type EHeadTrackingMode = 'PositionAndOrientation' | 'OrientationOnly' | 'Unknown' | 'EHeadTrackingMode_MAX';
+declare var EHeadTrackingMode : { PositionAndOrientation:'PositionAndOrientation',OrientationOnly:'OrientationOnly',Unknown:'Unknown',EHeadTrackingMode_MAX:'EHeadTrackingMode_MAX', };
+declare type EHeadTrackingError = 'None' | 'NotEnoughFeatures' | 'LowLight' | 'Unknown' | 'EHeadTrackingError_MAX';
+declare var EHeadTrackingError : { None:'None',NotEnoughFeatures:'NotEnoughFeatures',LowLight:'LowLight',Unknown:'Unknown',EHeadTrackingError_MAX:'EHeadTrackingError_MAX', };
+declare class HeadTrackingState { 
+	Mode: EHeadTrackingMode;
+	Error: EHeadTrackingError;
+	Confidence: number;
+	clone() : HeadTrackingState;
+	static C(Other: UObject | any): HeadTrackingState;
+	GetHeadTrackingState(): {State: HeadTrackingState, $: boolean};
+	static GetHeadTrackingState(State?: HeadTrackingState): {State: HeadTrackingState, $: boolean};
+}
+
+declare class MagicLeapHMDFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): MagicLeapHMDFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): MagicLeapHMDFunctionLibrary;
+	static GetDefaultObject(): MagicLeapHMDFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MagicLeapHMDFunctionLibrary;
+	static SetFocusActor(InFocusActor: Actor): void;
+	static SetBaseRotation(InBaseRotation: Rotator): void;
+	static SetBasePosition(InBasePosition: Vector): void;
+	static SetBaseOrientation(InBaseOrientation: Quat): void;
+	static IsRunningOnMagicLeapHMD(): boolean;
+	static GetMLSDKVersionRevision(): number;
+	static GetMLSDKVersionMinor(): number;
+	static GetMLSDKVersionMajor(): number;
+	static GetMLSDKVersion(): string;
+	static GetHeadTrackingState(State?: HeadTrackingState): {State: HeadTrackingState, $: boolean};
+	static C(Other: UObject | any): MagicLeapHMDFunctionLibrary;
+}
+
+declare type EMagicLeapPrivilege = 'Invalid' | 'AudioRecognizer' | 'BatteryInfo' | 'CameraCapture' | 'WorldReconstruction' | 'InAppPurchase' | 'AudioCaptureMic' | 'DrmCertificates' | 'Occlusion' | 'LowLatencyLightwear' | 'Internet' | 'IdentityRead' | 'BackgroundDownload' | 'BackgroundUpload' | 'MediaDrm' | 'Media' | 'MediaMetadata' | 'PowerInfo' | 'LocalAreaNetwork' | 'VoiceInput' | 'Documents' | 'ConnectBackgroundMusicService' | 'RegisterBackgroundMusicService' | 'PwFoundObjRead' | 'NormalNotificationsUsage' | 'MusicService' | 'ControllerPose' | 'ScreensProvider' | 'GesturesSubscribe' | 'GesturesConfig' | 'EMagicLeapPrivilege_MAX';
+declare var EMagicLeapPrivilege : { Invalid:'Invalid',AudioRecognizer:'AudioRecognizer',BatteryInfo:'BatteryInfo',CameraCapture:'CameraCapture',WorldReconstruction:'WorldReconstruction',InAppPurchase:'InAppPurchase',AudioCaptureMic:'AudioCaptureMic',DrmCertificates:'DrmCertificates',Occlusion:'Occlusion',LowLatencyLightwear:'LowLatencyLightwear',Internet:'Internet',IdentityRead:'IdentityRead',BackgroundDownload:'BackgroundDownload',BackgroundUpload:'BackgroundUpload',MediaDrm:'MediaDrm',Media:'Media',MediaMetadata:'MediaMetadata',PowerInfo:'PowerInfo',LocalAreaNetwork:'LocalAreaNetwork',VoiceInput:'VoiceInput',Documents:'Documents',ConnectBackgroundMusicService:'ConnectBackgroundMusicService',RegisterBackgroundMusicService:'RegisterBackgroundMusicService',PwFoundObjRead:'PwFoundObjRead',NormalNotificationsUsage:'NormalNotificationsUsage',MusicService:'MusicService',ControllerPose:'ControllerPose',ScreensProvider:'ScreensProvider',GesturesSubscribe:'GesturesSubscribe',GesturesConfig:'GesturesConfig',EMagicLeapPrivilege_MAX:'EMagicLeapPrivilege_MAX', };
+declare class MagicLeapPrivileges extends ActorComponent { 
+	static Load(ResourceName: string): MagicLeapPrivileges;
+	static Find(Outer: UObject, ResourceName: string): MagicLeapPrivileges;
+	static GetDefaultObject(): MagicLeapPrivileges;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MagicLeapPrivileges;
+	RequestPrivilege(Privilege: EMagicLeapPrivilege): boolean;
+	CheckPrivilege(Privilege: EMagicLeapPrivilege): boolean;
+	static C(Other: UObject | any): MagicLeapPrivileges;
+}
+
+declare class MagicLeapSettings extends UObject { 
+	bEnableZI: boolean;
+	static Load(ResourceName: string): MagicLeapSettings;
+	static Find(Outer: UObject, ResourceName: string): MagicLeapSettings;
+	static GetDefaultObject(): MagicLeapSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MagicLeapSettings;
+	static C(Other: UObject | any): MagicLeapSettings;
+}
+
+declare type EMeshType = 'Triangles' | 'PointCloud' | 'EMeshType_MAX';
+declare var EMeshType : { Triangles:'Triangles',PointCloud:'PointCloud',EMeshType_MAX:'EMeshType_MAX', };
+declare type EMeshLOD = 'Minimum' | 'Medium' | 'Maximum' | 'EMeshLOD_MAX';
+declare var EMeshLOD : { Minimum:'Minimum',Medium:'Medium',Maximum:'Maximum',EMeshLOD_MAX:'EMeshLOD_MAX', };
+declare type EMLMeshVertexColorMode = 'None' | 'Confidence' | 'Block' | 'EMLMeshVertexColorMode_MAX';
+declare var EMLMeshVertexColorMode : { None:'None',Confidence:'Confidence',Block:'Block',EMLMeshVertexColorMode_MAX:'EMLMeshVertexColorMode_MAX', };
+declare class MeshTrackerComponent extends SceneComponent { 
+	OnMeshTrackerUpdated: UnrealEngineMulticastDelegate<(index: number, Vertices: Vector[], Triangles: number[], Normals: Vector[], Confidence: number[]) => void>;
+	ScanWorld: boolean;
+	MeshType: EMeshType;
+	BoundingVolume: BoxComponent;
+	LevelOfDetail: EMeshLOD;
+	PerimeterOfGapsToFill: number;
+	Planarize: boolean;
+	DisconnectedSectionArea: number;
+	RequestNormals: boolean;
+	RequestVertexConfidence: boolean;
+	VertexColorMode: EMLMeshVertexColorMode;
+	BlockVertexColors: Color[];
+	VertexColorFromConfidenceZero: LinearColor;
+	VertexColorFromConfidenceOne: LinearColor;
+	RemoveOverlappingTriangles: boolean;
+	MRMesh: MRMeshComponent;
+	static Load(ResourceName: string): MeshTrackerComponent;
+	static Find(Outer: UObject, ResourceName: string): MeshTrackerComponent;
+	static GetDefaultObject(): MeshTrackerComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshTrackerComponent;
+	DisconnectMRMesh(InMRMeshPtr: MRMeshComponent): void;
+	ConnectMRMesh(InMRMeshPtr: MRMeshComponent): void;
+	static C(Other: UObject | any): MeshTrackerComponent;
+}
+
+declare type EPlaneQueryFlags = 'Vertical' | 'Horizontal' | 'Arbitrary' | 'OrientToGravity' | 'PreferInner' | 'IgnoreHoles' | 'Ceiling' | 'Floor' | 'Wall' | 'EPlaneQueryFlags_MAX';
+declare var EPlaneQueryFlags : { Vertical:'Vertical',Horizontal:'Horizontal',Arbitrary:'Arbitrary',OrientToGravity:'OrientToGravity',PreferInner:'PreferInner',IgnoreHoles:'IgnoreHoles',Ceiling:'Ceiling',Floor:'Floor',Wall:'Wall',EPlaneQueryFlags_MAX:'EPlaneQueryFlags_MAX', };
+declare class PlanesComponent extends SceneComponent { 
+	QueryFlags: EPlaneQueryFlags[];
+	SearchVolume: BoxComponent;
+	MaxResults: number;
+	MinHolePerimeter: number;
+	MinPlaneArea: number;
+	IgnoreBoundingVolume: boolean;
+	static Load(ResourceName: string): PlanesComponent;
+	static Find(Outer: UObject, ResourceName: string): PlanesComponent;
+	static GetDefaultObject(): PlanesComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlanesComponent;
+	static C(Other: UObject | any): PlanesComponent;
+}
+
+declare class RaycastComponent extends ActorComponent { 
+	static Load(ResourceName: string): RaycastComponent;
+	static Find(Outer: UObject, ResourceName: string): RaycastComponent;
+	static GetDefaultObject(): RaycastComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RaycastComponent;
+	static C(Other: UObject | any): RaycastComponent;
+}
+
+declare type EMLControllerTrackingMode = 'InputService' | 'CoordinateFrameUID' | 'EMLControllerTrackingMode_MAX';
+declare var EMLControllerTrackingMode : { InputService:'InputService',CoordinateFrameUID:'CoordinateFrameUID',EMLControllerTrackingMode_MAX:'EMLControllerTrackingMode_MAX', };
+declare type EMLControllerLEDEffect = 'RotateCW' | 'RotateCCW' | 'Pulse' | 'PaintCW' | 'PaintCCW' | 'Blink' | 'EMLControllerLEDEffect_MAX';
+declare var EMLControllerLEDEffect : { RotateCW:'RotateCW',RotateCCW:'RotateCCW',Pulse:'Pulse',PaintCW:'PaintCW',PaintCCW:'PaintCCW',Blink:'Blink',EMLControllerLEDEffect_MAX:'EMLControllerLEDEffect_MAX', };
+declare type EMLControllerLEDSpeed = 'Slow' | 'Medium' | 'Fast' | 'EMLControllerLEDSpeed_MAX';
+declare var EMLControllerLEDSpeed : { Slow:'Slow',Medium:'Medium',Fast:'Fast',EMLControllerLEDSpeed_MAX:'EMLControllerLEDSpeed_MAX', };
+declare type EMLControllerLEDPattern = 'None' | 'Clock01' | 'Clock02' | 'Clock03' | 'Clock04' | 'Clock05' | 'Clock06' | 'Clock07' | 'Clock08' | 'Clock09' | 'Clock10' | 'Clock11' | 'Clock12' | 'Clock01_07' | 'Clock02_08' | 'Clock03_09' | 'Clock04_10' | 'Clock05_11' | 'Clock06_12' | 'EMLControllerLEDPattern_MAX';
+declare var EMLControllerLEDPattern : { None:'None',Clock01:'Clock01',Clock02:'Clock02',Clock03:'Clock03',Clock04:'Clock04',Clock05:'Clock05',Clock06:'Clock06',Clock07:'Clock07',Clock08:'Clock08',Clock09:'Clock09',Clock10:'Clock10',Clock11:'Clock11',Clock12:'Clock12',Clock01_07:'Clock01_07',Clock02_08:'Clock02_08',Clock03_09:'Clock03_09',Clock04_10:'Clock04_10',Clock05_11:'Clock05_11',Clock06_12:'Clock06_12',EMLControllerLEDPattern_MAX:'EMLControllerLEDPattern_MAX', };
+declare type EMLControllerLEDColor = 'BrightMissionRed' | 'PastelMissionRed' | 'BrightFloridaOrange' | 'PastelFloridaOrange' | 'BrightLunaYellow' | 'PastelLunaYellow' | 'BrightNebulaPink' | 'PastelNebulaPink' | 'BrightCosmicPurple' | 'PastelCosmicPurple' | 'BrightMysticBlue' | 'PastelMysticBlue' | 'BrightCelestialBlue' | 'PastelCelestialBlue' | 'BrightShaggleGreen' | 'PastelShaggleGreen' | 'EMLControllerLEDColor_MAX';
+declare var EMLControllerLEDColor : { BrightMissionRed:'BrightMissionRed',PastelMissionRed:'PastelMissionRed',BrightFloridaOrange:'BrightFloridaOrange',PastelFloridaOrange:'PastelFloridaOrange',BrightLunaYellow:'BrightLunaYellow',PastelLunaYellow:'PastelLunaYellow',BrightNebulaPink:'BrightNebulaPink',PastelNebulaPink:'PastelNebulaPink',BrightCosmicPurple:'BrightCosmicPurple',PastelCosmicPurple:'PastelCosmicPurple',BrightMysticBlue:'BrightMysticBlue',PastelMysticBlue:'PastelMysticBlue',BrightCelestialBlue:'BrightCelestialBlue',PastelCelestialBlue:'PastelCelestialBlue',BrightShaggleGreen:'BrightShaggleGreen',PastelShaggleGreen:'PastelShaggleGreen',EMLControllerLEDColor_MAX:'EMLControllerLEDColor_MAX', };
+declare type EMLControllerHapticPattern = 'None' | 'Click' | 'Bump' | 'DoubleClick' | 'Buzz' | 'Tick' | 'ForceDown' | 'ForceUp' | 'ForceDwell' | 'SecondForceDown' | 'EMLControllerHapticPattern_MAX';
+declare var EMLControllerHapticPattern : { None:'None',Click:'Click',Bump:'Bump',DoubleClick:'DoubleClick',Buzz:'Buzz',Tick:'Tick',ForceDown:'ForceDown',ForceUp:'ForceUp',ForceDwell:'ForceDwell',SecondForceDown:'SecondForceDown',EMLControllerHapticPattern_MAX:'EMLControllerHapticPattern_MAX', };
+declare type EMLControllerHapticIntensity = 'Low' | 'Medium' | 'High' | 'EMLControllerHapticIntensity_MAX';
+declare var EMLControllerHapticIntensity : { Low:'Low',Medium:'Medium',High:'High',EMLControllerHapticIntensity_MAX:'EMLControllerHapticIntensity_MAX', };
+declare type EMLControllerType = 'None' | 'Device' | 'MobileApp' | 'EMLControllerType_MAX';
+declare var EMLControllerType : { None:'None',Device:'Device',MobileApp:'MobileApp',EMLControllerType_MAX:'EMLControllerType_MAX', };
+declare class MagicLeapControllerFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): MagicLeapControllerFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): MagicLeapControllerFunctionLibrary;
+	static GetDefaultObject(): MagicLeapControllerFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MagicLeapControllerFunctionLibrary;
+	static SetControllerTrackingMode(TrackingMode: EMLControllerTrackingMode): boolean;
+	static PlayControllerLEDEffect(Hand: EControllerHand,LEDEffect: EMLControllerLEDEffect,LEDSpeed: EMLControllerLEDSpeed,LEDPattern: EMLControllerLEDPattern,LEDColor: EMLControllerLEDColor,DurationInSec: number): boolean;
+	static PlayControllerLED(Hand: EControllerHand,LEDPattern: EMLControllerLEDPattern,LEDColor: EMLControllerLEDColor,DurationInSec: number): boolean;
+	static PlayControllerHapticFeedback(Hand: EControllerHand,HapticPattern: EMLControllerHapticPattern,Intensity: EMLControllerHapticIntensity): boolean;
+	static MaxSupportedMagicLeapControllers(): number;
+	static InvertControllerMapping(): void;
+	static GetMLControllerType(Hand: EControllerHand): EMLControllerType;
+	static GetControllerTrackingMode(): EMLControllerTrackingMode;
+	static GetControllerMapping(ControllerIndex: number,Hand?: EControllerHand): {Hand: EControllerHand, $: boolean};
+	static C(Other: UObject | any): MagicLeapControllerFunctionLibrary;
+}
+
+declare type EMagicLeapTouchpadGestureType = 'None' | 'Tap' | 'ForceTapDown' | 'ForceTapUp' | 'ForceDwell' | 'SecondForceDown' | 'LongHold' | 'RadialScroll' | 'Swipe' | 'Scroll' | 'Pinch' | 'EMagicLeapTouchpadGestureType_MAX';
+declare var EMagicLeapTouchpadGestureType : { None:'None',Tap:'Tap',ForceTapDown:'ForceTapDown',ForceTapUp:'ForceTapUp',ForceDwell:'ForceDwell',SecondForceDown:'SecondForceDown',LongHold:'LongHold',RadialScroll:'RadialScroll',Swipe:'Swipe',Scroll:'Scroll',Pinch:'Pinch',EMagicLeapTouchpadGestureType_MAX:'EMagicLeapTouchpadGestureType_MAX', };
+declare type EMagicLeapTouchpadGestureDirection = 'None' | 'Up' | 'Down' | 'Left' | 'Right' | 'In' | 'Out' | 'Clockwise' | 'CounterClockwise' | 'EMagicLeapTouchpadGestureDirection_MAX';
+declare var EMagicLeapTouchpadGestureDirection : { None:'None',Up:'Up',Down:'Down',Left:'Left',Right:'Right',In:'In',Out:'Out',Clockwise:'Clockwise',CounterClockwise:'CounterClockwise',EMagicLeapTouchpadGestureDirection_MAX:'EMagicLeapTouchpadGestureDirection_MAX', };
+declare class MagicLeapTouchpadGesture { 
+	Hand: EControllerHand;
+	Type: EMagicLeapTouchpadGestureType;
+	Direction: EMagicLeapTouchpadGestureDirection;
+	PositionAndForce: Vector;
+	Speed: number;
+	Distance: number;
+	FingerGap: number;
+	Radius: number;
+	Angle: number;
+	clone() : MagicLeapTouchpadGesture;
+	static C(Other: UObject | any): MagicLeapTouchpadGesture;
+}
+
+declare class TouchpadGesturesComponent extends ActorComponent { 
+	OnTouchpadGestureStart: UnrealEngineMulticastDelegate<(GestureData: MagicLeapTouchpadGesture) => void>;
+	OnTouchpadGestureContinue: UnrealEngineMulticastDelegate<(GestureData: MagicLeapTouchpadGesture) => void>;
+	OnTouchpadGestureEnd: UnrealEngineMulticastDelegate<(GestureData: MagicLeapTouchpadGesture) => void>;
+	static Load(ResourceName: string): TouchpadGesturesComponent;
+	static Find(Outer: UObject, ResourceName: string): TouchpadGesturesComponent;
+	static GetDefaultObject(): TouchpadGesturesComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TouchpadGesturesComponent;
+	static C(Other: UObject | any): TouchpadGesturesComponent;
+}
+
+declare class EyeTrackerStereoGazeData { 
+	LeftEyeOrigin: Vector;
+	LeftEyeDirection: Vector;
+	RightEyeOrigin: Vector;
+	RightEyeDirection: Vector;
+	FixationPoint: Vector;
+	ConfidenceValue: number;
+	clone() : EyeTrackerStereoGazeData;
+	static C(Other: UObject | any): EyeTrackerStereoGazeData;
+	GetStereoGazeData(): {OutGazeData: EyeTrackerStereoGazeData, $: boolean};
+	static GetStereoGazeData(OutGazeData?: EyeTrackerStereoGazeData): {OutGazeData: EyeTrackerStereoGazeData, $: boolean};
+}
+
+declare class EyeTrackerGazeData { 
+	GazeOrigin: Vector;
+	GazeDirection: Vector;
+	FixationPoint: Vector;
+	ConfidenceValue: number;
+	clone() : EyeTrackerGazeData;
+	static C(Other: UObject | any): EyeTrackerGazeData;
+	GetGazeData(): {OutGazeData: EyeTrackerGazeData, $: boolean};
+	static GetGazeData(OutGazeData?: EyeTrackerGazeData): {OutGazeData: EyeTrackerGazeData, $: boolean};
+}
+
+declare class EyeTrackerFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): EyeTrackerFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): EyeTrackerFunctionLibrary;
+	static GetDefaultObject(): EyeTrackerFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EyeTrackerFunctionLibrary;
+	static SetEyeTrackedPlayer(PlayerController: PlayerController): void;
+	static IsStereoGazeDataAvailable(): boolean;
+	static IsEyeTrackerConnected(): boolean;
+	static GetStereoGazeData(OutGazeData?: EyeTrackerStereoGazeData): {OutGazeData: EyeTrackerStereoGazeData, $: boolean};
+	static GetGazeData(OutGazeData?: EyeTrackerGazeData): {OutGazeData: EyeTrackerGazeData, $: boolean};
+	static C(Other: UObject | any): EyeTrackerFunctionLibrary;
+}
+
+declare class MagicLeapFixationComfort { 
+	FixationDepthIsUncomfortable: boolean;
+	FixationDepthViolationHasOccurred: boolean;
+	RemainingTimeAtUncomfortableDepth: number;
+	clone() : MagicLeapFixationComfort;
+	static C(Other: UObject | any): MagicLeapFixationComfort;
+	GetFixationComfort(): {FixationComfort: MagicLeapFixationComfort, $: boolean};
+	static GetFixationComfort(FixationComfort?: MagicLeapFixationComfort): {FixationComfort: MagicLeapFixationComfort, $: boolean};
+}
+
+declare class MagicLeapEyeBlinkState { 
+	LeftEyeBlinked: boolean;
+	RightEyeBlinked: boolean;
+	clone() : MagicLeapEyeBlinkState;
+	static C(Other: UObject | any): MagicLeapEyeBlinkState;
+	GetEyeBlinkState(): {BlinkState: MagicLeapEyeBlinkState, $: boolean};
+	static GetEyeBlinkState(BlinkState?: MagicLeapEyeBlinkState): {BlinkState: MagicLeapEyeBlinkState, $: boolean};
+}
+
+declare type EMagicLeapEyeTrackingCalibrationStatus = 'None' | 'Bad' | 'Good' | 'EMagicLeapEyeTrackingCalibrationStatus_MAX';
+declare var EMagicLeapEyeTrackingCalibrationStatus : { None:'None',Bad:'Bad',Good:'Good',EMagicLeapEyeTrackingCalibrationStatus_MAX:'EMagicLeapEyeTrackingCalibrationStatus_MAX', };
+declare class MagicLeapEyeTrackerFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): MagicLeapEyeTrackerFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): MagicLeapEyeTrackerFunctionLibrary;
+	static GetDefaultObject(): MagicLeapEyeTrackerFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MagicLeapEyeTrackerFunctionLibrary;
+	static IsEyeTrackerCalibrated(): boolean;
+	static GetFixationComfort(FixationComfort?: MagicLeapFixationComfort): {FixationComfort: MagicLeapFixationComfort, $: boolean};
+	static GetEyeBlinkState(BlinkState?: MagicLeapEyeBlinkState): {BlinkState: MagicLeapEyeBlinkState, $: boolean};
+	static GetCalibrationStatus(): EMagicLeapEyeTrackingCalibrationStatus;
+	static C(Other: UObject | any): MagicLeapEyeTrackerFunctionLibrary;
+}
+
+declare class LiveLinkSourceFactory extends UObject { 
+	static Load(ResourceName: string): LiveLinkSourceFactory;
+	static Find(Outer: UObject, ResourceName: string): LiveLinkSourceFactory;
+	static GetDefaultObject(): LiveLinkSourceFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LiveLinkSourceFactory;
+	static C(Other: UObject | any): LiveLinkSourceFactory;
+}
+
+declare type ELiveLinkSourceMode = 'Default' | 'Interpolated' | 'TimeSynchronized' | 'ELiveLinkSourceMode_MAX';
+declare var ELiveLinkSourceMode : { Default:'Default',Interpolated:'Interpolated',TimeSynchronized:'TimeSynchronized',ELiveLinkSourceMode_MAX:'ELiveLinkSourceMode_MAX', };
+declare class LiveLinkInterpolationSettings { 
+	bUseInterpolation: boolean;
+	InterpolationOffset: number;
+	clone() : LiveLinkInterpolationSettings;
+	static C(Other: UObject | any): LiveLinkInterpolationSettings;
+}
+
+declare class LiveLinkTimeSynchronizationSettings { 
+	FrameRate: FrameRate;
+	clone() : LiveLinkTimeSynchronizationSettings;
+	static C(Other: UObject | any): LiveLinkTimeSynchronizationSettings;
+}
+
+declare class LiveLinkSourceSettings extends UObject { 
+	Mode: ELiveLinkSourceMode;
+	InterpolationSettings: LiveLinkInterpolationSettings;
+	TimeSynchronizationSettings: LiveLinkTimeSynchronizationSettings;
+	static Load(ResourceName: string): LiveLinkSourceSettings;
+	static Find(Outer: UObject, ResourceName: string): LiveLinkSourceSettings;
+	static GetDefaultObject(): LiveLinkSourceSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LiveLinkSourceSettings;
+	static C(Other: UObject | any): LiveLinkSourceSettings;
+}
+
+declare class LiveLinkMagicLeapHandTrackingSourceFactory extends LiveLinkSourceFactory { 
+	static Load(ResourceName: string): LiveLinkMagicLeapHandTrackingSourceFactory;
+	static Find(Outer: UObject, ResourceName: string): LiveLinkMagicLeapHandTrackingSourceFactory;
+	static GetDefaultObject(): LiveLinkMagicLeapHandTrackingSourceFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LiveLinkMagicLeapHandTrackingSourceFactory;
+	static C(Other: UObject | any): LiveLinkMagicLeapHandTrackingSourceFactory;
+}
+
+declare type EHandTrackingGesture = 'Finger' | 'Fist' | 'Pinch' | 'Thumb' | 'L' | 'OpenHandBack' | 'Ok' | 'C' | 'NoPose' | 'NoHand' | 'EHandTrackingGesture_MAX';
+declare var EHandTrackingGesture : { Finger:'Finger',Fist:'Fist',Pinch:'Pinch',Thumb:'Thumb',L:'L',OpenHandBack:'OpenHandBack',Ok:'Ok',C:'C',NoPose:'NoPose',NoHand:'NoHand',EHandTrackingGesture_MAX:'EHandTrackingGesture_MAX', };
+declare type EHandTrackingKeypointFilterLevel = 'NoFilter' | 'SimpleSmoothing' | 'PredictiveSmoothing' | 'EHandTrackingKeypointFilterLevel_MAX';
+declare var EHandTrackingKeypointFilterLevel : { NoFilter:'NoFilter',SimpleSmoothing:'SimpleSmoothing',PredictiveSmoothing:'PredictiveSmoothing',EHandTrackingKeypointFilterLevel_MAX:'EHandTrackingKeypointFilterLevel_MAX', };
+declare type EHandTrackingGestureFilterLevel = 'NoFilter' | 'SlightRobustnessToFlicker' | 'MoreRobustnessToFlicker' | 'EHandTrackingGestureFilterLevel_MAX';
+declare var EHandTrackingGestureFilterLevel : { NoFilter:'NoFilter',SlightRobustnessToFlicker:'SlightRobustnessToFlicker',MoreRobustnessToFlicker:'MoreRobustnessToFlicker',EHandTrackingGestureFilterLevel_MAX:'EHandTrackingGestureFilterLevel_MAX', };
+declare class LiveLinkSourceHandle { 
+	clone() : LiveLinkSourceHandle;
+	static C(Other: UObject | any): LiveLinkSourceHandle;
+	GetMagicLeapHandTrackingLiveLinkSource(): {SourceHandle: LiveLinkSourceHandle, $: boolean};
+	static GetMagicLeapHandTrackingLiveLinkSource(SourceHandle?: LiveLinkSourceHandle): {SourceHandle: LiveLinkSourceHandle, $: boolean};
+}
+
+declare type EGestureTransformSpace = 'World' | 'Hand' | 'Tracking' | 'EGestureTransformSpace_MAX';
+declare var EGestureTransformSpace : { World:'World',Hand:'Hand',Tracking:'Tracking',EGestureTransformSpace_MAX:'EGestureTransformSpace_MAX', };
+declare type EHandTrackingKeypoint = 'Thumb_Tip' | 'Thumb_IP' | 'Thumb_MCP' | 'Thumb_CMC' | 'Index_Tip' | 'Index_DIP' | 'Index_PIP' | 'Index_MCP' | 'Middle_Tip' | 'Middle_DIP' | 'Middle_PIP' | 'Middle_MCP' | 'Ring_Tip' | 'Ring_DIP' | 'Ring_PIP' | 'Ring_MCP' | 'Pinky_Tip' | 'Pinky_DIP' | 'Pinky_PIP' | 'Pinky_MCP' | 'Wrist_Center' | 'Wrist_Ulnar' | 'Wrist_Radial' | 'Hand_Center' | 'EHandTrackingKeypoint_MAX';
+declare var EHandTrackingKeypoint : { Thumb_Tip:'Thumb_Tip',Thumb_IP:'Thumb_IP',Thumb_MCP:'Thumb_MCP',Thumb_CMC:'Thumb_CMC',Index_Tip:'Index_Tip',Index_DIP:'Index_DIP',Index_PIP:'Index_PIP',Index_MCP:'Index_MCP',Middle_Tip:'Middle_Tip',Middle_DIP:'Middle_DIP',Middle_PIP:'Middle_PIP',Middle_MCP:'Middle_MCP',Ring_Tip:'Ring_Tip',Ring_DIP:'Ring_DIP',Ring_PIP:'Ring_PIP',Ring_MCP:'Ring_MCP',Pinky_Tip:'Pinky_Tip',Pinky_DIP:'Pinky_DIP',Pinky_PIP:'Pinky_PIP',Pinky_MCP:'Pinky_MCP',Wrist_Center:'Wrist_Center',Wrist_Ulnar:'Wrist_Ulnar',Wrist_Radial:'Wrist_Radial',Hand_Center:'Hand_Center',EHandTrackingKeypoint_MAX:'EHandTrackingKeypoint_MAX', };
+declare class MagicLeapHandTrackingFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): MagicLeapHandTrackingFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): MagicLeapHandTrackingFunctionLibrary;
+	static GetDefaultObject(): MagicLeapHandTrackingFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MagicLeapHandTrackingFunctionLibrary;
+	static SetStaticGestureConfidenceThreshold(Gesture: EHandTrackingGesture,Confidence: number): void;
+	static SetConfiguration(StaticGesturesToActivate: EHandTrackingGesture[],KeypointsFilterLevel: EHandTrackingKeypointFilterLevel,GestureFilterLevel: EHandTrackingGestureFilterLevel,HandSwitchingFilterLevel: EHandTrackingGestureFilterLevel,bTrackingEnabled: boolean): boolean;
+	static GetStaticGestureConfidenceThreshold(Gesture: EHandTrackingGesture): number;
+	static GetMagicLeapHandTrackingLiveLinkSource(SourceHandle?: LiveLinkSourceHandle): {SourceHandle: LiveLinkSourceHandle, $: boolean};
+	static GetHandThumbTip(Hand: EControllerHand,TransformSpace: EGestureTransformSpace,Secondary?: Transform): {Secondary: Transform, $: boolean};
+	static GetHandIndexFingerTip(Hand: EControllerHand,TransformSpace: EGestureTransformSpace,Pointer?: Transform): {Pointer: Transform, $: boolean};
+	static GetHandCenterNormalized(Hand: EControllerHand,HandCenterNormalized?: Vector): {HandCenterNormalized: Vector, $: boolean};
+	static GetHandCenter(Hand: EControllerHand,HandCenter?: Transform): {HandCenter: Transform, $: boolean};
+	static GetGestureKeypointTransform(Hand: EControllerHand,Keypoint: EHandTrackingKeypoint,TransformSpace: EGestureTransformSpace,Transform?: Transform): {Transform: Transform, $: boolean};
+	static GetGestureKeypoints(Hand: EControllerHand,Keypoints?: Transform[]): {Keypoints: Transform[], $: boolean};
+	static GetCurrentGestureConfidence(Hand: EControllerHand,Confidence?: number): {Confidence: number, $: boolean};
+	static GetCurrentGesture(Hand: EControllerHand,Gesture?: EHandTrackingGesture): {Gesture: EHandTrackingGesture, $: boolean};
+	static GetConfiguration(ActiveStaticGestures?: EHandTrackingGesture[],KeypointsFilterLevel?: EHandTrackingKeypointFilterLevel,GestureFilterLevel?: EHandTrackingGestureFilterLevel,HandSwitchingFilterLevel?: EHandTrackingGestureFilterLevel,bTrackingEnabled?: boolean): {ActiveStaticGestures: EHandTrackingGesture[], KeypointsFilterLevel: EHandTrackingKeypointFilterLevel, GestureFilterLevel: EHandTrackingGestureFilterLevel, HandSwitchingFilterLevel: EHandTrackingGestureFilterLevel, bTrackingEnabled: boolean, $: boolean};
+	static C(Other: UObject | any): MagicLeapHandTrackingFunctionLibrary;
+}
+
+declare type EMagicLeapIdentityKey = 'GivenName' | 'FamilyName' | 'Email' | 'Bio' | 'PhoneNumber' | 'Avatar2D' | 'Avatar3D' | 'Unknown' | 'EMagicLeapIdentityKey_MAX';
+declare var EMagicLeapIdentityKey : { GivenName:'GivenName',FamilyName:'FamilyName',Email:'Email',Bio:'Bio',PhoneNumber:'PhoneNumber',Avatar2D:'Avatar2D',Avatar3D:'Avatar3D',Unknown:'Unknown',EMagicLeapIdentityKey_MAX:'EMagicLeapIdentityKey_MAX', };
+declare class MagicLeapIdentityAttribute { 
+	Attribute: EMagicLeapIdentityKey;
+	Value: string;
+	clone() : MagicLeapIdentityAttribute;
+	static C(Other: UObject | any): MagicLeapIdentityAttribute;
+}
+
+declare type EMagicLeapIdentityError = 'Ok' | 'InvalidParam' | 'AllocFailed' | 'PrivilegeDenied' | 'FailedToConnectToLocalService' | 'FailedToConnectToCloudService' | 'CloudAuthentication' | 'InvalidInformationFromCloud' | 'NotLoggedIn' | 'ExpiredCredentials' | 'FailedToGetUserProfile' | 'Unauthorized' | 'CertificateError' | 'RejectedByCloud' | 'AlreadyLoggedIn' | 'ModifyIsNotSupported' | 'NetworkError' | 'UnspecifiedFailure' | 'EMagicLeapIdentityError_MAX';
+declare var EMagicLeapIdentityError : { Ok:'Ok',InvalidParam:'InvalidParam',AllocFailed:'AllocFailed',PrivilegeDenied:'PrivilegeDenied',FailedToConnectToLocalService:'FailedToConnectToLocalService',FailedToConnectToCloudService:'FailedToConnectToCloudService',CloudAuthentication:'CloudAuthentication',InvalidInformationFromCloud:'InvalidInformationFromCloud',NotLoggedIn:'NotLoggedIn',ExpiredCredentials:'ExpiredCredentials',FailedToGetUserProfile:'FailedToGetUserProfile',Unauthorized:'Unauthorized',CertificateError:'CertificateError',RejectedByCloud:'RejectedByCloud',AlreadyLoggedIn:'AlreadyLoggedIn',ModifyIsNotSupported:'ModifyIsNotSupported',NetworkError:'NetworkError',UnspecifiedFailure:'UnspecifiedFailure',EMagicLeapIdentityError_MAX:'EMagicLeapIdentityError_MAX', };
+declare class MagicLeapIdentity extends UObject { 
+	static Load(ResourceName: string): MagicLeapIdentity;
+	static Find(Outer: UObject, ResourceName: string): MagicLeapIdentity;
+	static GetDefaultObject(): MagicLeapIdentity;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MagicLeapIdentity;
+	RequestAttributeValue(RequestedAttributeList: EMagicLeapIdentityKey[],RequestedAttributeValues?: MagicLeapIdentityAttribute[]): {RequestedAttributeValues: MagicLeapIdentityAttribute[], $: EMagicLeapIdentityError};
+	GetAllAvailableAttributes(AvailableAttributes?: EMagicLeapIdentityKey[]): {AvailableAttributes: EMagicLeapIdentityKey[], $: EMagicLeapIdentityError};
+	static C(Other: UObject | any): MagicLeapIdentity;
+}
+
+declare class NamedInterface { 
+	InterfaceName: string;
+	InterfaceObject: UObject;
+	clone() : NamedInterface;
+	static C(Other: UObject | any): NamedInterface;
+}
+
+declare class NamedInterfaceDef { 
+	InterfaceName: string;
+	InterfaceClassName: string;
+	clone() : NamedInterfaceDef;
+	static C(Other: UObject | any): NamedInterfaceDef;
+}
+
+declare class NamedInterfaces extends UObject { 
+	NamedInterfaces: NamedInterface[];
+	NamedInterfaceDefs: NamedInterfaceDef[];
+	static Load(ResourceName: string): NamedInterfaces;
+	static Find(Outer: UObject, ResourceName: string): NamedInterfaces;
+	static GetDefaultObject(): NamedInterfaces;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NamedInterfaces;
+	static C(Other: UObject | any): NamedInterfaces;
+}
+
+declare class TurnBasedMatchInterface extends Interface { 
+	static Load(ResourceName: string): TurnBasedMatchInterface;
+	static Find(Outer: UObject, ResourceName: string): TurnBasedMatchInterface;
+	static GetDefaultObject(): TurnBasedMatchInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TurnBasedMatchInterface;
+	OnMatchReceivedTurn(Match: string,bDidBecomeActive: boolean): void;
+	OnMatchEnded(Match: string): void;
+	static C(Other: UObject | any): TurnBasedMatchInterface;
+}
+
+declare class AchievementBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): AchievementBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): AchievementBlueprintLibrary;
+	static GetDefaultObject(): AchievementBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AchievementBlueprintLibrary;
+	static GetCachedAchievementProgress(WorldContextObject: UObject,PlayerController: PlayerController,AchievementID: string,bFoundID?: boolean,Progress?: number): {bFoundID: boolean, Progress: number};
+	static GetCachedAchievementDescription(WorldContextObject: UObject,PlayerController: PlayerController,AchievementID: string,bFoundID?: boolean,Title?: string,LockedDescription?: string,UnlockedDescription?: string,bHidden?: boolean): {bFoundID: boolean, Title: string, LockedDescription: string, UnlockedDescription: string, bHidden: boolean};
+	static C(Other: UObject | any): AchievementBlueprintLibrary;
+}
+
+declare class AchievementQueryCallbackProxy extends OnlineBlueprintCallProxyBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
+	OnFailure: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): AchievementQueryCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): AchievementQueryCallbackProxy;
+	static GetDefaultObject(): AchievementQueryCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AchievementQueryCallbackProxy;
+	static CacheAchievements(WorldContextObject: UObject,PlayerController: PlayerController): AchievementQueryCallbackProxy;
+	static CacheAchievementDescriptions(WorldContextObject: UObject,PlayerController: PlayerController): AchievementQueryCallbackProxy;
+	static C(Other: UObject | any): AchievementQueryCallbackProxy;
+}
+
+declare class AchievementWriteCallbackProxy extends OnlineBlueprintCallProxyBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<(WrittenAchievementName: string, WrittenProgress: number, WrittenUserTag: number) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(WrittenAchievementName: string, WrittenProgress: number, WrittenUserTag: number) => void>;
+	static Load(ResourceName: string): AchievementWriteCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): AchievementWriteCallbackProxy;
+	static GetDefaultObject(): AchievementWriteCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AchievementWriteCallbackProxy;
+	static WriteAchievementProgress(WorldContextObject: UObject,PlayerController: PlayerController,AchievementName: string,Progress: number,UserTag: number): AchievementWriteCallbackProxy;
+	static C(Other: UObject | any): AchievementWriteCallbackProxy;
+}
+
+declare class ConnectionCallbackProxy extends OnlineBlueprintCallProxyBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<(ErrorCode: number) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(ErrorCode: number) => void>;
+	static Load(ResourceName: string): ConnectionCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): ConnectionCallbackProxy;
+	static GetDefaultObject(): ConnectionCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConnectionCallbackProxy;
+	static ConnectToService(WorldContextObject: UObject,PlayerController: PlayerController): ConnectionCallbackProxy;
+	static C(Other: UObject | any): ConnectionCallbackProxy;
+}
+
+declare class CreateSessionCallbackProxy extends OnlineBlueprintCallProxyBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
+	OnFailure: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): CreateSessionCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): CreateSessionCallbackProxy;
+	static GetDefaultObject(): CreateSessionCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CreateSessionCallbackProxy;
+	static CreateSession(WorldContextObject: UObject,PlayerController: PlayerController,PublicConnections: number,bUseLAN: boolean): CreateSessionCallbackProxy;
+	static C(Other: UObject | any): CreateSessionCallbackProxy;
+}
+
+declare class DestroySessionCallbackProxy extends OnlineBlueprintCallProxyBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
+	OnFailure: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): DestroySessionCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): DestroySessionCallbackProxy;
+	static GetDefaultObject(): DestroySessionCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DestroySessionCallbackProxy;
+	static DestroySession(WorldContextObject: UObject,PlayerController: PlayerController): DestroySessionCallbackProxy;
+	static C(Other: UObject | any): DestroySessionCallbackProxy;
+}
+
+declare class EndMatchCallbackProxy extends OnlineBlueprintCallProxyBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
+	OnFailure: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): EndMatchCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): EndMatchCallbackProxy;
+	static GetDefaultObject(): EndMatchCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EndMatchCallbackProxy;
+	static C(Other: UObject | any): EndMatchCallbackProxy;
+}
+
+declare class EndTurnCallbackProxy extends OnlineBlueprintCallProxyBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
+	OnFailure: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): EndTurnCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): EndTurnCallbackProxy;
+	static GetDefaultObject(): EndTurnCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EndTurnCallbackProxy;
+	static C(Other: UObject | any): EndTurnCallbackProxy;
+}
+
+declare class BlueprintSessionResult { 
+	clone() : BlueprintSessionResult;
+	static C(Other: UObject | any): BlueprintSessionResult;
+}
+
+declare class FindSessionsCallbackProxy extends OnlineBlueprintCallProxyBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<(Results: BlueprintSessionResult[]) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(Results: BlueprintSessionResult[]) => void>;
+	static Load(ResourceName: string): FindSessionsCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): FindSessionsCallbackProxy;
+	static GetDefaultObject(): FindSessionsCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FindSessionsCallbackProxy;
+	static GetServerName(Result: BlueprintSessionResult): string;
+	static GetPingInMs(Result: BlueprintSessionResult): number;
+	static GetMaxPlayers(Result: BlueprintSessionResult): number;
+	static GetCurrentPlayers(Result: BlueprintSessionResult): number;
+	static FindSessions(WorldContextObject: UObject,PlayerController: PlayerController,MaxResults: number,bUseLAN: boolean): FindSessionsCallbackProxy;
+	static C(Other: UObject | any): FindSessionsCallbackProxy;
+}
+
+declare class FindTurnBasedMatchCallbackProxy extends OnlineBlueprintCallProxyBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<(MatchID: string) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(MatchID: string) => void>;
+	static Load(ResourceName: string): FindTurnBasedMatchCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): FindTurnBasedMatchCallbackProxy;
+	static GetDefaultObject(): FindTurnBasedMatchCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FindTurnBasedMatchCallbackProxy;
+	static C(Other: UObject | any): FindTurnBasedMatchCallbackProxy;
+}
+
+declare type EInAppPurchaseState = 'Unknown' | 'Success' | 'Failed' | 'Cancelled' | 'Invalid' | 'NotAllowed' | 'Restored' | 'AlreadyOwned' | 'EInAppPurchaseState_MAX';
+declare var EInAppPurchaseState : { Unknown:'Unknown',Success:'Success',Failed:'Failed',Cancelled:'Cancelled',Invalid:'Invalid',NotAllowed:'NotAllowed',Restored:'Restored',AlreadyOwned:'AlreadyOwned',EInAppPurchaseState_MAX:'EInAppPurchaseState_MAX', };
+declare class InAppPurchaseProductInfo { 
+	Identifier: string;
+	TransactionIdentifier: string;
+	DisplayName: string;
+	DisplayDescription: string;
+	DisplayPrice: string;
+	RawPrice: number;
+	CurrencyCode: string;
+	CurrencySymbol: string;
+	DecimalSeparator: string;
+	GroupingSeparator: string;
+	ReceiptData: string;
+	clone() : InAppPurchaseProductInfo;
+	static C(Other: UObject | any): InAppPurchaseProductInfo;
+}
+
+declare class InAppPurchaseProductRequest { 
+	ProductIdentifier: string;
+	bIsConsumable: boolean;
+	clone() : InAppPurchaseProductRequest;
+	static C(Other: UObject | any): InAppPurchaseProductRequest;
+}
+
+declare class InAppPurchaseCallbackProxy extends UObject { 
+	OnSuccess: UnrealEngineMulticastDelegate<(CompletionStatus: EInAppPurchaseState, InAppPurchaseInformation: InAppPurchaseProductInfo) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(CompletionStatus: EInAppPurchaseState, InAppPurchaseInformation: InAppPurchaseProductInfo) => void>;
+	static Load(ResourceName: string): InAppPurchaseCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): InAppPurchaseCallbackProxy;
+	static GetDefaultObject(): InAppPurchaseCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InAppPurchaseCallbackProxy;
+	static CreateProxyObjectForInAppPurchase(PlayerController: PlayerController,ProductRequest: InAppPurchaseProductRequest): InAppPurchaseCallbackProxy;
+	static C(Other: UObject | any): InAppPurchaseCallbackProxy;
+}
+
+declare class InAppPurchaseQueryCallbackProxy extends UObject { 
+	OnSuccess: UnrealEngineMulticastDelegate<(InAppPurchaseInformation: InAppPurchaseProductInfo[]) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(InAppPurchaseInformation: InAppPurchaseProductInfo[]) => void>;
+	static Load(ResourceName: string): InAppPurchaseQueryCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): InAppPurchaseQueryCallbackProxy;
+	static GetDefaultObject(): InAppPurchaseQueryCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InAppPurchaseQueryCallbackProxy;
+	static CreateProxyObjectForInAppPurchaseQuery(PlayerController: PlayerController,ProductIdentifiers: string[]): InAppPurchaseQueryCallbackProxy;
+	static C(Other: UObject | any): InAppPurchaseQueryCallbackProxy;
+}
+
+declare class InAppPurchaseRestoreInfo { 
+	Identifier: string;
+	ReceiptData: string;
+	TransactionIdentifier: string;
+	clone() : InAppPurchaseRestoreInfo;
+	static C(Other: UObject | any): InAppPurchaseRestoreInfo;
+}
+
+declare class InAppPurchaseRestoreCallbackProxy extends UObject { 
+	OnSuccess: UnrealEngineMulticastDelegate<(CompletionStatus: EInAppPurchaseState, InAppRestorePurchaseInformation: InAppPurchaseRestoreInfo[]) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(CompletionStatus: EInAppPurchaseState, InAppRestorePurchaseInformation: InAppPurchaseRestoreInfo[]) => void>;
+	static Load(ResourceName: string): InAppPurchaseRestoreCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): InAppPurchaseRestoreCallbackProxy;
+	static GetDefaultObject(): InAppPurchaseRestoreCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InAppPurchaseRestoreCallbackProxy;
+	static CreateProxyObjectForInAppPurchaseRestore(ConsumableProductFlags: InAppPurchaseProductRequest[],PlayerController: PlayerController): InAppPurchaseRestoreCallbackProxy;
+	static C(Other: UObject | any): InAppPurchaseRestoreCallbackProxy;
+}
+
+declare class IpConnection extends NetConnection { 
+	static Load(ResourceName: string): IpConnection;
+	static Find(Outer: UObject, ResourceName: string): IpConnection;
+	static GetDefaultObject(): IpConnection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IpConnection;
+	static C(Other: UObject | any): IpConnection;
+}
+
+declare class IpNetDriver extends NetDriver { 
+	LogPortUnreach: boolean;
+	AllowPlayerPortUnreach: boolean;
+	MaxPortCountToTry: any;
+	ServerDesiredSocketReceiveBufferBytes: any;
+	ServerDesiredSocketSendBufferBytes: any;
+	ClientDesiredSocketReceiveBufferBytes: any;
+	ClientDesiredSocketSendBufferBytes: any;
+	static Load(ResourceName: string): IpNetDriver;
+	static Find(Outer: UObject, ResourceName: string): IpNetDriver;
+	static GetDefaultObject(): IpNetDriver;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IpNetDriver;
+	static C(Other: UObject | any): IpNetDriver;
+}
+
+declare class JoinSessionCallbackProxy extends OnlineBlueprintCallProxyBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
+	OnFailure: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): JoinSessionCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): JoinSessionCallbackProxy;
+	static GetDefaultObject(): JoinSessionCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JoinSessionCallbackProxy;
+	static JoinSession(WorldContextObject: UObject,PlayerController: PlayerController,SearchResult: BlueprintSessionResult): JoinSessionCallbackProxy;
+	static C(Other: UObject | any): JoinSessionCallbackProxy;
+}
+
+declare class LeaderboardBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): LeaderboardBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): LeaderboardBlueprintLibrary;
+	static GetDefaultObject(): LeaderboardBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LeaderboardBlueprintLibrary;
+	static WriteLeaderboardInteger(PlayerController: PlayerController,StatName: string,StatValue: number): boolean;
+	static C(Other: UObject | any): LeaderboardBlueprintLibrary;
+}
+
+declare class LeaderboardFlushCallbackProxy extends UObject { 
+	OnSuccess: UnrealEngineMulticastDelegate<(SessionName: string) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(SessionName: string) => void>;
+	static Load(ResourceName: string): LeaderboardFlushCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): LeaderboardFlushCallbackProxy;
+	static GetDefaultObject(): LeaderboardFlushCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LeaderboardFlushCallbackProxy;
+	static CreateProxyObjectForFlush(PlayerController: PlayerController,SessionName: string): LeaderboardFlushCallbackProxy;
+	static C(Other: UObject | any): LeaderboardFlushCallbackProxy;
+}
+
+declare class LeaderboardQueryCallbackProxy extends UObject { 
+	OnSuccess: UnrealEngineMulticastDelegate<(LeaderboardValue: number) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(LeaderboardValue: number) => void>;
+	static Load(ResourceName: string): LeaderboardQueryCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): LeaderboardQueryCallbackProxy;
+	static GetDefaultObject(): LeaderboardQueryCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LeaderboardQueryCallbackProxy;
+	static CreateProxyObjectForIntQuery(PlayerController: PlayerController,StatName: string): LeaderboardQueryCallbackProxy;
+	static C(Other: UObject | any): LeaderboardQueryCallbackProxy;
+}
+
+declare class LogoutCallbackProxy extends BlueprintAsyncActionBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) => void>;
+	static Load(ResourceName: string): LogoutCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): LogoutCallbackProxy;
+	static GetDefaultObject(): LogoutCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LogoutCallbackProxy;
+	static Logout(WorldContextObject: UObject,PlayerController: PlayerController): LogoutCallbackProxy;
+	static C(Other: UObject | any): LogoutCallbackProxy;
+}
+
+declare class OnlineBeacon extends Actor { 
+	BeaconConnectionInitialTimeout: number;
+	BeaconConnectionTimeout: number;
+	NetDriver: NetDriver;
+	static GetDefaultObject(): OnlineBeacon;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineBeacon;
+	static C(Other: UObject | any): OnlineBeacon;
+}
+
+declare class OnlineBeaconHostObject extends Actor { 
+	BeaconTypeName: string;
+	ClientBeaconActorClass: UnrealEngineClass;
+	ClientActors: OnlineBeaconClient[];
+	static GetDefaultObject(): OnlineBeaconHostObject;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineBeaconHostObject;
+	static C(Other: UObject | any): OnlineBeaconHostObject;
+}
+
+declare type EBeaconConnectionState = 'Invalid' | 'Closed' | 'Pending' | 'Open' | 'EBeaconConnectionState_MAX';
+declare var EBeaconConnectionState : { Invalid:'Invalid',Closed:'Closed',Pending:'Pending',Open:'Open',EBeaconConnectionState_MAX:'EBeaconConnectionState_MAX', };
+declare class OnlineBeaconClient extends OnlineBeacon { 
+	BeaconOwner: OnlineBeaconHostObject;
+	BeaconConnection: NetConnection;
+	ConnectionState: EBeaconConnectionState;
+	static GetDefaultObject(): OnlineBeaconClient;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineBeaconClient;
+	ClientOnConnected(): void;
+	static C(Other: UObject | any): OnlineBeaconClient;
+}
+
+declare class OnlineBeaconHost extends OnlineBeacon { 
+	ListenPort: number;
+	ClientActors: OnlineBeaconClient[];
+	static GetDefaultObject(): OnlineBeaconHost;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineBeaconHost;
+	static C(Other: UObject | any): OnlineBeaconHost;
+}
+
+declare class OnlineEngineInterfaceImpl extends OnlineEngineInterface { 
+	VoiceSubsystemNameOverride: string;
+	static Load(ResourceName: string): OnlineEngineInterfaceImpl;
+	static Find(Outer: UObject, ResourceName: string): OnlineEngineInterfaceImpl;
+	static GetDefaultObject(): OnlineEngineInterfaceImpl;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineEngineInterfaceImpl;
+	static C(Other: UObject | any): OnlineEngineInterfaceImpl;
+}
+
+declare class PIELoginSettingsInternal { 
+	ID: string;
+	Token: string;
+	Type: string;
+	TokenBytes: number[];
+	clone() : PIELoginSettingsInternal;
+	static C(Other: UObject | any): PIELoginSettingsInternal;
+}
+
+declare class OnlinePIESettings extends DeveloperSettings { 
+	bOnlinePIEEnabled: boolean;
+	Logins: PIELoginSettingsInternal[];
+	static Load(ResourceName: string): OnlinePIESettings;
+	static Find(Outer: UObject, ResourceName: string): OnlinePIESettings;
+	static GetDefaultObject(): OnlinePIESettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlinePIESettings;
+	static C(Other: UObject | any): OnlinePIESettings;
+}
+
+declare class OnlineSessionClient extends OnlineSession { 
+	bIsFromInvite: boolean;
+	bHandlingDisconnect: boolean;
+	static Load(ResourceName: string): OnlineSessionClient;
+	static Find(Outer: UObject, ResourceName: string): OnlineSessionClient;
+	static GetDefaultObject(): OnlineSessionClient;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnlineSessionClient;
+	static C(Other: UObject | any): OnlineSessionClient;
+}
+
+declare class PlayerReservation { 
+	UniqueId: UniqueNetIdRepl;
+	ValidationStr: string;
+	Platform: string;
+	bAllowCrossplay: boolean;
+	ElapsedTime: number;
+	clone() : PlayerReservation;
+	static C(Other: UObject | any): PlayerReservation;
+}
+
+declare class PartyReservation { 
+	TeamNum: number;
+	PartyLeader: UniqueNetIdRepl;
+	PartyMembers: PlayerReservation[];
+	clone() : PartyReservation;
+	static C(Other: UObject | any): PartyReservation;
+}
+
+declare type EClientRequestType = 'NonePending' | 'ExistingSessionReservation' | 'ReservationUpdate' | 'EmptyServerReservation' | 'Reconnect' | 'Abandon' | 'EClientRequestType_MAX';
+declare var EClientRequestType : { NonePending:'NonePending',ExistingSessionReservation:'ExistingSessionReservation',ReservationUpdate:'ReservationUpdate',EmptyServerReservation:'EmptyServerReservation',Reconnect:'Reconnect',Abandon:'Abandon',EClientRequestType_MAX:'EClientRequestType_MAX', };
+declare type EPartyReservationResult = 'NoResult' | 'RequestPending' | 'GeneralError' | 'PartyLimitReached' | 'IncorrectPlayerCount' | 'RequestTimedOut' | 'ReservationDuplicate' | 'ReservationNotFound' | 'ReservationAccepted' | 'ReservationDenied' | 'ReservationDenied_CrossPlayRestriction' | 'ReservationDenied_Banned' | 'ReservationRequestCanceled' | 'ReservationInvalid' | 'BadSessionId' | 'ReservationDenied_ContainsExistingPlayers' | 'EPartyReservationResult_MAX';
+declare var EPartyReservationResult : { NoResult:'NoResult',RequestPending:'RequestPending',GeneralError:'GeneralError',PartyLimitReached:'PartyLimitReached',IncorrectPlayerCount:'IncorrectPlayerCount',RequestTimedOut:'RequestTimedOut',ReservationDuplicate:'ReservationDuplicate',ReservationNotFound:'ReservationNotFound',ReservationAccepted:'ReservationAccepted',ReservationDenied:'ReservationDenied',ReservationDenied_CrossPlayRestriction:'ReservationDenied_CrossPlayRestriction',ReservationDenied_Banned:'ReservationDenied_Banned',ReservationRequestCanceled:'ReservationRequestCanceled',ReservationInvalid:'ReservationInvalid',BadSessionId:'BadSessionId',ReservationDenied_ContainsExistingPlayers:'ReservationDenied_ContainsExistingPlayers',EPartyReservationResult_MAX:'EPartyReservationResult_MAX', };
+declare class PartyBeaconClient extends OnlineBeaconClient { 
+	DestSessionId: string;
+	PendingReservation: PartyReservation;
+	RequestType: EClientRequestType;
+	bPendingReservationSent: boolean;
+	bCancelReservation: boolean;
+	static GetDefaultObject(): PartyBeaconClient;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PartyBeaconClient;
+	ServerUpdateReservationRequest(SessionId: string,ReservationUpdate: PartyReservation): void;
+	ServerReservationRequest(SessionId: string,Reservation: PartyReservation): void;
+	ServerCancelReservationRequest(PartyLeader: UniqueNetIdRepl): void;
+	ClientSendReservationUpdates(NumRemainingReservations: number): void;
+	ClientSendReservationFull(): void;
+	ClientReservationResponse(ReservationResponse: EPartyReservationResult): void;
+	ClientCancelReservationResponse(ReservationResponse: EPartyReservationResult): void;
+	static C(Other: UObject | any): PartyBeaconClient;
+}
+
+declare class PartyBeaconState extends UObject { 
+	SessionName: string;
+	NumConsumedReservations: number;
+	MaxReservations: number;
+	NumTeams: number;
+	NumPlayersPerTeam: number;
+	TeamAssignmentMethod: string;
+	ReservedHostTeamNum: number;
+	ForceTeamNum: number;
+	bRestrictCrossConsole: boolean;
+	Reservations: PartyReservation[];
+	static Load(ResourceName: string): PartyBeaconState;
+	static Find(Outer: UObject, ResourceName: string): PartyBeaconState;
+	static GetDefaultObject(): PartyBeaconState;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PartyBeaconState;
+	static C(Other: UObject | any): PartyBeaconState;
+}
+
+declare class PartyBeaconHost extends OnlineBeaconHostObject { 
+	State: PartyBeaconState;
+	bLogoutOnSessionTimeout: boolean;
+	SessionTimeoutSecs: number;
+	TravelSessionTimeoutSecs: number;
+	static GetDefaultObject(): PartyBeaconHost;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PartyBeaconHost;
+	static C(Other: UObject | any): PartyBeaconHost;
+}
+
+declare type EMPMatchOutcome = 'None' | 'Quit' | 'Won' | 'Lost' | 'Tied' | 'TimeExpired' | 'First' | 'Second' | 'Third' | 'Fourth' | 'EMPMatchOutcome_MAX';
+declare var EMPMatchOutcome : { None:'None',Quit:'Quit',Won:'Won',Lost:'Lost',Tied:'Tied',TimeExpired:'TimeExpired',First:'First',Second:'Second',Third:'Third',Fourth:'Fourth',EMPMatchOutcome_MAX:'EMPMatchOutcome_MAX', };
+declare class QuitMatchCallbackProxy extends OnlineBlueprintCallProxyBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<() => void>;
+	OnFailure: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): QuitMatchCallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): QuitMatchCallbackProxy;
+	static GetDefaultObject(): QuitMatchCallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): QuitMatchCallbackProxy;
+	static QuitMatch(WorldContextObject: UObject,PlayerController: PlayerController,MatchID: string,Outcome: EMPMatchOutcome,TurnTimeoutInSeconds: number): QuitMatchCallbackProxy;
+	static C(Other: UObject | any): QuitMatchCallbackProxy;
+}
+
+declare class ShowLoginUICallbackProxy extends BlueprintAsyncActionBase { 
+	OnSuccess: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) => void>;
+	static Load(ResourceName: string): ShowLoginUICallbackProxy;
+	static Find(Outer: UObject, ResourceName: string): ShowLoginUICallbackProxy;
+	static GetDefaultObject(): ShowLoginUICallbackProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ShowLoginUICallbackProxy;
+	static ShowExternalLoginUI(WorldContextObject: UObject,InPlayerController: PlayerController): ShowLoginUICallbackProxy;
+	static C(Other: UObject | any): ShowLoginUICallbackProxy;
+}
+
+declare class TestBeaconClient extends OnlineBeaconClient { 
+	static GetDefaultObject(): TestBeaconClient;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestBeaconClient;
+	ServerPong(): void;
+	ClientPing(): void;
+	static C(Other: UObject | any): TestBeaconClient;
+}
+
+declare class TestBeaconHost extends OnlineBeaconHostObject { 
+	static GetDefaultObject(): TestBeaconHost;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestBeaconHost;
+	static C(Other: UObject | any): TestBeaconHost;
+}
+
+declare class TurnBasedBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): TurnBasedBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): TurnBasedBlueprintLibrary;
+	static GetDefaultObject(): TurnBasedBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TurnBasedBlueprintLibrary;
+	static RegisterTurnBasedMatchInterfaceObject(WorldContextObject: UObject,PlayerController: PlayerController,UObject: UObject): void;
+	static GetPlayerDisplayName(WorldContextObject: UObject,PlayerController: PlayerController,MatchID: string,PlayerIndex: number,PlayerDisplayName?: string): {PlayerDisplayName: string};
+	static GetMyPlayerIndex(WorldContextObject: UObject,PlayerController: PlayerController,MatchID: string,PlayerIndex?: number): {PlayerIndex: number};
+	static GetIsMyTurn(WorldContextObject: UObject,PlayerController: PlayerController,MatchID: string,bIsMyTurn?: boolean): {bIsMyTurn: boolean};
+	static C(Other: UObject | any): TurnBasedBlueprintLibrary;
+}
+
+declare class VoipListenerSynthComponent extends SynthComponent { 
+	static Load(ResourceName: string): VoipListenerSynthComponent;
+	static Find(Outer: UObject, ResourceName: string): VoipListenerSynthComponent;
+	static GetDefaultObject(): VoipListenerSynthComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoipListenerSynthComponent;
+	IsIdling(): boolean;
+	static C(Other: UObject | any): VoipListenerSynthComponent;
+}
+
+declare class K2Node_InAppPurchase extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_InAppPurchase;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InAppPurchase;
+	static GetDefaultObject(): K2Node_InAppPurchase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InAppPurchase;
+	static C(Other: UObject | any): K2Node_InAppPurchase;
+}
+
+declare class K2Node_InAppPurchaseQuery extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_InAppPurchaseQuery;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InAppPurchaseQuery;
+	static GetDefaultObject(): K2Node_InAppPurchaseQuery;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InAppPurchaseQuery;
+	static C(Other: UObject | any): K2Node_InAppPurchaseQuery;
+}
+
+declare class K2Node_InAppPurchaseRestore extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_InAppPurchaseRestore;
+	static Find(Outer: UObject, ResourceName: string): K2Node_InAppPurchaseRestore;
+	static GetDefaultObject(): K2Node_InAppPurchaseRestore;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_InAppPurchaseRestore;
+	static C(Other: UObject | any): K2Node_InAppPurchaseRestore;
+}
+
+declare class K2Node_LatentOnlineCall extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_LatentOnlineCall;
+	static Find(Outer: UObject, ResourceName: string): K2Node_LatentOnlineCall;
+	static GetDefaultObject(): K2Node_LatentOnlineCall;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LatentOnlineCall;
+	static C(Other: UObject | any): K2Node_LatentOnlineCall;
+}
+
+declare class K2Node_LeaderboardFlush extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_LeaderboardFlush;
+	static Find(Outer: UObject, ResourceName: string): K2Node_LeaderboardFlush;
+	static GetDefaultObject(): K2Node_LeaderboardFlush;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LeaderboardFlush;
+	static C(Other: UObject | any): K2Node_LeaderboardFlush;
+}
+
+declare class K2Node_LeaderboardQuery extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_LeaderboardQuery;
+	static Find(Outer: UObject, ResourceName: string): K2Node_LeaderboardQuery;
+	static GetDefaultObject(): K2Node_LeaderboardQuery;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_LeaderboardQuery;
+	static C(Other: UObject | any): K2Node_LeaderboardQuery;
+}
+
+declare type ETiledMultiResLevel = 'ETiledMultiResLevel_Off' | 'ETiledMultiResLevel_LMSLow' | 'ETiledMultiResLevel_LMSMedium' | 'ETiledMultiResLevel_LMSHigh' | 'ETiledMultiResLevel_MAX';
+declare var ETiledMultiResLevel : { ETiledMultiResLevel_Off:'ETiledMultiResLevel_Off',ETiledMultiResLevel_LMSLow:'ETiledMultiResLevel_LMSLow',ETiledMultiResLevel_LMSMedium:'ETiledMultiResLevel_LMSMedium',ETiledMultiResLevel_LMSHigh:'ETiledMultiResLevel_LMSHigh',ETiledMultiResLevel_MAX:'ETiledMultiResLevel_MAX', };
+declare class HmdUserProfileField { 
+	FieldName: string;
+	FieldValue: string;
+	clone() : HmdUserProfileField;
+	static C(Other: UObject | any): HmdUserProfileField;
+}
+
+declare class HmdUserProfile { 
+	Name: string;
+	Gender: string;
+	PlayerHeight: number;
+	EyeHeight: number;
+	IPD: number;
+	NeckToEyeDistance: Vector2D;
+	ExtraFields: HmdUserProfileField[];
+	clone() : HmdUserProfile;
+	static C(Other: UObject | any): HmdUserProfile;
+	GetUserProfile(): {Profile: HmdUserProfile, $: boolean};
+	static GetUserProfile(Profile?: HmdUserProfile): {Profile: HmdUserProfile, $: boolean};
+}
+
+declare class OculusFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): OculusFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): OculusFunctionLibrary;
+	static GetDefaultObject(): OculusFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OculusFunctionLibrary;
+	static ShowLoadingSplashScreen(): void;
+	static ShowLoadingIcon(Texture: Texture2D): void;
+	static SetTiledMultiresLevel(Level: ETiledMultiResLevel): void;
+	static SetReorientHMDOnControllerRecenter(recenterMode: boolean): void;
+	static SetPositionScale3D(PosScale3D: Vector): void;
+	static SetLoadingSplashParams(TexturePath: string,DistanceInMeters: Vector,SizeInMeters: Vector2D,RotationAxis: Vector,RotationDeltaInDeg: number): void;
+	static SetGuardianVisibility(GuardianVisible: boolean): void;
+	static SetDisplayFrequency(RequestedFrequency: number): void;
+	static SetCPUAndGPULevels(CPULevel: number,GPULevel: number): void;
+	static SetBaseRotationAndPositionOffset(BaseRot: Rotator,PosOffset: Vector,Options: EOrientPositionSelector): void;
+	static SetBaseRotationAndBaseOffsetInMeters(Rotation: Rotator,BaseOffsetInMeters: Vector,Options: EOrientPositionSelector): void;
+	static IsLoadingIconEnabled(): boolean;
+	static IsGuardianDisplayed(): boolean;
+	static IsDeviceTracked(DeviceType: ETrackedDeviceType): boolean;
+	static IsAutoLoadingSplashScreenEnabled(): boolean;
+	static HideLoadingSplashScreen(bClear: boolean): void;
+	static HideLoadingIcon(): void;
+	static HasSystemOverlayPresent(): boolean;
+	static HasInputFocus(): boolean;
+	static GetUserProfile(Profile?: HmdUserProfile): {Profile: HmdUserProfile, $: boolean};
+	static GetTiledMultiresLevel(): ETiledMultiResLevel;
+	static GetRawSensorData(AngularAcceleration?: Vector,LinearAcceleration?: Vector,AngularVelocity?: Vector,LinearVelocity?: Vector,TimeInSeconds?: number,DeviceType?: ETrackedDeviceType): {AngularAcceleration: Vector, LinearAcceleration: Vector, AngularVelocity: Vector, LinearVelocity: Vector, TimeInSeconds: number};
+	static GetPose(DeviceRotation?: Rotator,DevicePosition?: Vector,NeckPosition?: Vector,bUseOrienationForPlayerCamera?: boolean,bUsePositionForPlayerCamera?: boolean,PositionScale?: Vector): {DeviceRotation: Rotator, DevicePosition: Vector, NeckPosition: Vector};
+	static GetPointGuardianIntersection(Point: Vector,BoundaryType: EBoundaryType): GuardianTestResult;
+	static GetPlayAreaTransform(): Transform;
+	static GetNodeGuardianIntersection(DeviceType: ETrackedDeviceType,BoundaryType: EBoundaryType): GuardianTestResult;
+	static GetLoadingSplashParams(TexturePath?: string,DistanceInMeters?: Vector,SizeInMeters?: Vector2D,RotationAxis?: Vector,RotationDeltaInDeg?: number): {TexturePath: string, DistanceInMeters: Vector, SizeInMeters: Vector2D, RotationAxis: Vector, RotationDeltaInDeg: number};
+	static GetGuardianPoints(BoundaryType: EBoundaryType): Vector[];
+	static GetGuardianDimensions(BoundaryType: EBoundaryType): Vector;
+	static GetGPUUtilization(IsGPUAvailable?: boolean,GPUUtilization?: number): {IsGPUAvailable: boolean, GPUUtilization: number};
+	static GetGPUFrameTime(): number;
+	static GetDeviceName(): string;
+	static GetCurrentDisplayFrequency(): number;
+	static GetBaseRotationAndPositionOffset(OutRot?: Rotator,OutPosOffset?: Vector): {OutRot: Rotator, OutPosOffset: Vector};
+	static GetBaseRotationAndBaseOffsetInMeters(OutRotation?: Rotator,OutBaseOffsetInMeters?: Vector): {OutRotation: Rotator, OutBaseOffsetInMeters: Vector};
+	static GetAvailableDisplayFrequencies(): number[];
+	static EnablePositionTracking(bPositionTracking: boolean): void;
+	static EnableOrientationTracking(bOrientationTracking: boolean): void;
+	static EnableAutoLoadingSplashScreen(bAutoShowEnabled: boolean): void;
+	static ClearLoadingSplashScreens(): void;
+	static AddLoadingSplashScreen(Texture: Texture2D,TranslationInMeters: Vector,Rotation: Rotator,SizeInMeters: Vector2D,DeltaRotation: Rotator,bClearBeforeAdd: boolean): void;
+	static C(Other: UObject | any): OculusFunctionLibrary;
+}
+
+declare class OculusSplashDesc { 
+	TexturePath: SoftObjectPath;
+	TransformInMeters: Transform;
+	QuadSizeInMeters: Vector2D;
+	DeltaRotation: Quat;
+	TextureOffset: Vector2D;
+	TextureScale: Vector2D;
+	bNoAlphaChannel: boolean;
+	clone() : OculusSplashDesc;
+	static C(Other: UObject | any): OculusSplashDesc;
+}
+
+declare class OculusHMDRuntimeSettings extends UObject { 
+	bAutoEnabled: boolean;
+	SplashDescs: OculusSplashDesc[];
+	static Load(ResourceName: string): OculusHMDRuntimeSettings;
+	static Find(Outer: UObject, ResourceName: string): OculusHMDRuntimeSettings;
+	static GetDefaultObject(): OculusHMDRuntimeSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OculusHMDRuntimeSettings;
+	static C(Other: UObject | any): OculusHMDRuntimeSettings;
+}
+
+declare class OculusSceneCaptureCubemap extends UObject { 
+	CaptureComponents: SceneCaptureComponent2D[];
+	static Load(ResourceName: string): OculusSceneCaptureCubemap;
+	static Find(Outer: UObject, ResourceName: string): OculusSceneCaptureCubemap;
+	static GetDefaultObject(): OculusSceneCaptureCubemap;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OculusSceneCaptureCubemap;
+	static C(Other: UObject | any): OculusSceneCaptureCubemap;
+}
+
+declare class KismetProceduralMeshLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): KismetProceduralMeshLibrary;
+	static Find(Outer: UObject, ResourceName: string): KismetProceduralMeshLibrary;
+	static GetDefaultObject(): KismetProceduralMeshLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KismetProceduralMeshLibrary;
+	static SliceProceduralMesh(InProcMesh: ProceduralMeshComponent,PlanePosition: Vector,PlaneNormal: Vector,bCreateOtherHalf: boolean,OutOtherHalfProcMesh?: ProceduralMeshComponent,CapOption?: EProcMeshSliceCapOption,CapMaterial?: MaterialInterface): {OutOtherHalfProcMesh: ProceduralMeshComponent};
+	static GetSectionFromStaticMesh(InMesh: StaticMesh,LODIndex: number,SectionIndex: number,Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
+	static GetSectionFromProceduralMesh(InProcMesh: ProceduralMeshComponent,SectionIndex: number,Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
+	static GenerateBoxMesh(BoxRadius: Vector,Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
+	static CreateGridMeshTriangles(NumX: number,NumY: number,bWinding: boolean,Triangles?: number[]): {Triangles: number[]};
+	static CopyProceduralMeshFromStaticMeshComponent(StaticMeshComponent: StaticMeshComponent,LODIndex: number,ProcMeshComponent: ProceduralMeshComponent,bCreateCollision: boolean): void;
+	static ConvertQuadToTriangles(Triangles?: number[],Vert0?: number,Vert1?: number,Vert2?: number,Vert3?: number): {Triangles: number[]};
+	static CalculateTangentsForMesh(Vertices: Vector[],Triangles: number[],UVs: Vector2D[],Normals?: Vector[],Tangents?: ProcMeshTangent[]): {Normals: Vector[], Tangents: ProcMeshTangent[]};
+	static C(Other: UObject | any): KismetProceduralMeshLibrary;
+}
+
+declare class SteamVRChaperoneComponent extends ActorComponent { 
+	OnLeaveBounds: UnrealEngineMulticastDelegate<() => void>;
+	OnReturnToBounds: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): SteamVRChaperoneComponent;
+	static Find(Outer: UObject, ResourceName: string): SteamVRChaperoneComponent;
+	static GetDefaultObject(): SteamVRChaperoneComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SteamVRChaperoneComponent;
+	GetBounds(): Vector[];
+	static C(Other: UObject | any): SteamVRChaperoneComponent;
+}
+
+declare type ESteamVRTrackedDeviceType = 'Controller' | 'TrackingReference' | 'Other' | 'Invalid' | 'ESteamVRTrackedDeviceType_MAX';
+declare var ESteamVRTrackedDeviceType : { Controller:'Controller',TrackingReference:'TrackingReference',Other:'Other',Invalid:'Invalid',ESteamVRTrackedDeviceType_MAX:'ESteamVRTrackedDeviceType_MAX', };
+declare class SteamVRFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): SteamVRFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): SteamVRFunctionLibrary;
+	static GetDefaultObject(): SteamVRFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SteamVRFunctionLibrary;
+	static GetValidTrackedDeviceIds(DeviceType: ESteamVRTrackedDeviceType,OutTrackedDeviceIds?: number[]): {OutTrackedDeviceIds: number[]};
+	static GetTrackedDevicePositionAndOrientation(DeviceID: number,OutPosition?: Vector,OutOrientation?: Rotator): {OutPosition: Vector, OutOrientation: Rotator, $: boolean};
+	static GetHandPositionAndOrientation(ControllerIndex: number,Hand: EControllerHand,OutPosition?: Vector,OutOrientation?: Rotator): {OutPosition: Vector, OutOrientation: Rotator, $: boolean};
+	static C(Other: UObject | any): SteamVRFunctionLibrary;
+}
+
+declare type ECompilerVersion = 'Default' | 'VisualStudio2015' | 'VisualStudio2017' | 'ECompilerVersion_MAX';
+declare var ECompilerVersion : { Default:'Default',VisualStudio2015:'VisualStudio2015',VisualStudio2017:'VisualStudio2017',ECompilerVersion_MAX:'ECompilerVersion_MAX', };
+declare type EMinimumSupportedOS = 'MSOS_Vista' | 'MSOS_MAX';
+declare var EMinimumSupportedOS : { MSOS_Vista:'MSOS_Vista',MSOS_MAX:'MSOS_MAX', };
+declare class WindowsTargetSettings extends UObject { 
+	Compiler: ECompilerVersion;
+	TargetedRHIs: string[];
+	MinimumOSVersion: EMinimumSupportedOS;
+	AudioDevice: string;
+	AudioSampleRate: number;
+	AudioCallbackBufferFrameSize: number;
+	AudioNumBuffersToEnqueue: number;
+	AudioMaxChannels: number;
+	AudioNumSourceWorkers: number;
+	SpatializationPlugin: string;
+	ReverbPlugin: string;
+	OcclusionPlugin: string;
+	static Load(ResourceName: string): WindowsTargetSettings;
+	static Find(Outer: UObject, ResourceName: string): WindowsTargetSettings;
+	static GetDefaultObject(): WindowsTargetSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WindowsTargetSettings;
+	static C(Other: UObject | any): WindowsTargetSettings;
+}
+
+declare class SourceCodeAccessSettings extends UObject { 
+	PreferredAccessor: string;
+	static Load(ResourceName: string): SourceCodeAccessSettings;
+	static Find(Outer: UObject, ResourceName: string): SourceCodeAccessSettings;
+	static GetDefaultObject(): SourceCodeAccessSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceCodeAccessSettings;
+	static C(Other: UObject | any): SourceCodeAccessSettings;
+}
+
+declare class AssetToolsImpl extends UObject { 
+	static Load(ResourceName: string): AssetToolsImpl;
+	static Find(Outer: UObject, ResourceName: string): AssetToolsImpl;
+	static GetDefaultObject(): AssetToolsImpl;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetToolsImpl;
+	static C(Other: UObject | any): AssetToolsImpl;
+}
+
+declare class AssetRenameData { 
+	Asset: any;
+	NewPackagePath: string;
+	NewName: string;
+	OldObjectPath: SoftObjectPath;
+	NewObjectPath: SoftObjectPath;
+	bOnlyFixSoftReferences: boolean;
+	clone() : AssetRenameData;
+	static C(Other: UObject | any): AssetRenameData;
+}
+
+declare class AssetTools extends Interface { 
+	static Load(ResourceName: string): AssetTools;
+	static Find(Outer: UObject, ResourceName: string): AssetTools;
+	static GetDefaultObject(): AssetTools;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetTools;
+	RenameAssetsWithDialog(AssetsAndNames: AssetRenameData[],bAutoCheckout: boolean): void;
+	RenameAssets(AssetsAndNames: AssetRenameData[]): boolean;
+	OpenEditorForAssets(Assets: UObject[]): void;
+	ImportAssetTasks(ImportTasks: AssetImportTask[]): void;
+	ImportAssetsWithDialog(DestinationPath: string): UObject[];
+	ImportAssetsAutomated(ImportData: AutomatedAssetImportData): UObject[];
+	FindSoftReferencesToObject(TargetObject: SoftObjectPath,ReferencingObjects?: UObject[]): {ReferencingObjects: UObject[]};
+	ExportAssetsWithDialog(AssetsToExport: string[],bPromptForIndividualFilenames: boolean): void;
+	ExportAssets(AssetsToExport: string[],ExportPath: string): void;
+	DuplicateAssetWithDialog(AssetName: string,PackagePath: string,OriginalObject: UObject): UObject;
+	DuplicateAsset(AssetName: string,PackagePath: string,OriginalObject: UObject): UObject;
+	CreateUniqueAssetName(InBasePackageName: string,InSuffix: string,OutPackageName?: string,OutAssetName?: string): {OutPackageName: string, OutAssetName: string};
+	CreateAssetWithDialog(AssetName: string,PackagePath: string,AssetClass: UnrealEngineClass,Factory: Factory,CallingContext: string): UObject;
+	CreateAsset(AssetName: string,PackagePath: string,AssetClass: UnrealEngineClass,Factory: Factory,CallingContext: string): UObject;
+	static C(Other: UObject | any): AssetTools;
+}
+
+declare class AssetToolsHelpers extends UObject { 
+	static Load(ResourceName: string): AssetToolsHelpers;
+	static Find(Outer: UObject, ResourceName: string): AssetToolsHelpers;
+	static GetDefaultObject(): AssetToolsHelpers;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetToolsHelpers;
+	static C(Other: UObject | any): AssetToolsHelpers;
+}
+
+declare class AutomationBlueprintFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): AutomationBlueprintFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): AutomationBlueprintFunctionLibrary;
+	static GetDefaultObject(): AutomationBlueprintFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AutomationBlueprintFunctionLibrary;
+	static TakeAutomationScreenshotOfUI(WorldContextObject: UObject,LatentInfo: LatentActionInfo,Name: string,Options: AutomationScreenshotOptions): void;
+	static TakeAutomationScreenshotAtCamera(WorldContextObject: UObject,LatentInfo: LatentActionInfo,Camera: CameraActor,NameOverride: string,Notes: string,Options: AutomationScreenshotOptions): void;
+	static TakeAutomationScreenshot(WorldContextObject: UObject,LatentInfo: LatentActionInfo,Name: string,Notes: string,Options: AutomationScreenshotOptions): void;
+	static SetScalabilityQualityToLow(WorldContextObject: UObject): void;
+	static SetScalabilityQualityToEpic(WorldContextObject: UObject): void;
+	static SetScalabilityQualityLevelRelativeToMax(WorldContextObject: UObject,Value: number): void;
+	static GetStatIncMax(StatName: string): number;
+	static GetStatIncAverage(StatName: string): number;
+	static GetStatExcMax(StatName: string): number;
+	static GetStatExcAverage(StatName: string): number;
+	static GetStatCallCount(StatName: string): number;
+	static GetDefaultScreenshotOptionsForRendering(Tolerance: EComparisonTolerance,Delay: number): AutomationScreenshotOptions;
+	static GetDefaultScreenshotOptionsForGameplay(Tolerance: EComparisonTolerance,Delay: number): AutomationScreenshotOptions;
+	static EnableStatGroup(WorldContextObject: UObject,GroupName: string): void;
+	static DisableStatGroup(WorldContextObject: UObject,GroupName: string): void;
+	static AreAutomatedTestsRunning(): boolean;
+	static C(Other: UObject | any): AutomationBlueprintFunctionLibrary;
+}
+
+declare class FuncTestRenderingComponent extends PrimitiveComponent { 
+	static Load(ResourceName: string): FuncTestRenderingComponent;
+	static Find(Outer: UObject, ResourceName: string): FuncTestRenderingComponent;
+	static GetDefaultObject(): FuncTestRenderingComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FuncTestRenderingComponent;
+	static C(Other: UObject | any): FuncTestRenderingComponent;
+}
+
+declare type EFunctionalTestResult = 'Default' | 'Invalid' | 'Error' | 'Running' | 'Failed' | 'Succeeded' | 'EFunctionalTestResult_MAX';
+declare var EFunctionalTestResult : { Default:'Default',Invalid:'Invalid',Error:'Error',Running:'Running',Failed:'Failed',Succeeded:'Succeeded',EFunctionalTestResult_MAX:'EFunctionalTestResult_MAX', };
+declare type EComparisonMethod = 'Equal_To' | 'Not_Equal_To' | 'Greater_Than_Or_Equal_To' | 'Less_Than_Or_Equal_To' | 'Greater_Than' | 'Less_Than' | 'EComparisonMethod_MAX';
+declare var EComparisonMethod : { Equal_To:'Equal_To',Not_Equal_To:'Not_Equal_To',Greater_Than_Or_Equal_To:'Greater_Than_Or_Equal_To',Less_Than_Or_Equal_To:'Less_Than_Or_Equal_To',Greater_Than:'Greater_Than',Less_Than:'Less_Than',EComparisonMethod_MAX:'EComparisonMethod_MAX', };
+declare class FunctionalTest extends Actor { 
+	SpriteComponent: BillboardComponent;
+	bIsEnabled: boolean;
+	bWarningsAsErrors: boolean;
+	Author: string;
+	Description: string;
+	ObservationPoint: Actor;
+	RandomNumbersStream: RandomStream;
+	Result: EFunctionalTestResult;
+	PreparationTimeLimit: number;
+	TimeLimit: number;
+	TimesUpMessage: string;
+	TimesUpResult: EFunctionalTestResult;
+	OnTestPrepare: UnrealEngineMulticastDelegate<() => void>;
+	OnTestStart: UnrealEngineMulticastDelegate<() => void>;
+	OnTestFinished: UnrealEngineMulticastDelegate<() => void>;
+	AutoDestroyActors: Actor[];
+	RenderComp: FuncTestRenderingComponent;
+	TestName: TextRenderComponent;
+	bIsRunning: boolean;
+	TotalTime: number;
+	static GetDefaultObject(): FunctionalTest;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalTest;
+	SetTimeLimit(NewTimeLimit: number,ResultWhenTimeRunsOut: EFunctionalTestResult): void;
+	RegisterAutoDestroyActor(ActorToAutoDestroy: Actor): void;
+	ReceiveStartTest(): void;
+	ReceivePrepareTest(): void;
+	OnWantsReRunCheck(): boolean;
+	OnAdditionalTestFinishedMessageRequest(TestResult: EFunctionalTestResult): string;
+	LogMessage(Message: string): void;
+	IsRunning(): boolean;
+	IsReady(): boolean;
+	IsEnabled(): boolean;
+	GetCurrentRerunReason(): string;
+	FinishTest(TestResult: EFunctionalTestResult,Message: string): void;
+	DebugGatherRelevantActors(): Actor[];
+	AssertValue_Int(Actual: number,ShouldBe: EComparisonMethod,Expected: number,What: string,ContextObject: UObject): boolean;
+	AssertValue_Float(Actual: number,ShouldBe: EComparisonMethod,Expected: number,What: string,ContextObject: UObject): boolean;
+	AssertValue_DateTime(Actual: DateTime,ShouldBe: EComparisonMethod,Expected: DateTime,What: string,ContextObject: UObject): boolean;
+	AssertTrue(Condition: boolean,Message: string,ContextObject: UObject): boolean;
+	AssertNotEqual_Vector(Actual: Vector,NotExpected: Vector,What: string,ContextObject: UObject): boolean;
+	AssertNotEqual_Transform(Actual: Transform,NotExpected: Transform,What: string,ContextObject: UObject): boolean;
+	AssertNotEqual_String(Actual: string,NotExpected: string,What: string,ContextObject: UObject): boolean;
+	AssertNotEqual_Rotator(Actual: Rotator,NotExpected: Rotator,What: string,ContextObject: UObject): boolean;
+	AssertIsValid(UObject: UObject,Message: string,ContextObject: UObject): boolean;
+	AssertFalse(Condition: boolean,Message: string,ContextObject: UObject): boolean;
+	AssertEqual_Vector(Actual: Vector,Expected: Vector,What: string,Tolerance: number,ContextObject: UObject): boolean;
+	AssertEqual_Transform(Actual: Transform,Expected: Transform,What: string,Tolerance: number,ContextObject: UObject): boolean;
+	AssertEqual_TraceQueryResults(Actual: TraceQueryTestResults,Expected: TraceQueryTestResults,What: string,ContextObject: UObject): boolean;
+	AssertEqual_String(Actual: string,Expected: string,What: string,ContextObject: UObject): boolean;
+	AssertEqual_Rotator(Actual: Rotator,Expected: Rotator,What: string,Tolerance: number,ContextObject: UObject): boolean;
+	AssertEqual_Name(Actual: string,Expected: string,What: string,ContextObject: UObject): boolean;
+	AssertEqual_Int(Actual: number,Expected: number,What: string,ContextObject: UObject): boolean;
+	AssertEqual_Float(Actual: number,Expected: number,What: string,Tolerance: number,ContextObject: UObject): boolean;
+	AssertEqual_Bool(Actual: boolean,Expected: boolean,What: string,ContextObject: UObject): boolean;
+	AddWarning(Message: string): void;
+	AddRerun(Reason: string): void;
+	AddError(Message: string): void;
+	static C(Other: UObject | any): FunctionalTest;
+}
+
+declare class GenericTeamId { 
+	TeamID: number;
+	clone() : GenericTeamId;
+	static C(Other: UObject | any): GenericTeamId;
+}
+
+declare class AITestSpawnInfo { 
+	PawnClass: UnrealEngineClass;
+	ControllerClass: UnrealEngineClass;
+	TeamID: GenericTeamId;
+	BehaviorTree: BehaviorTree;
+	SpawnLocation: Actor;
+	NumberToSpawn: number;
+	SpawnDelay: number;
+	PreSpawnDelay: number;
+	clone() : AITestSpawnInfo;
+	static C(Other: UObject | any): AITestSpawnInfo;
+}
+
+declare class AITestSpawnSet { 
+	SpawnInfoContainer: AITestSpawnInfo[];
+	Name: string;
+	bEnabled: boolean;
+	FallbackSpawnLocation: Actor;
+	clone() : AITestSpawnSet;
+	static C(Other: UObject | any): AITestSpawnSet;
+}
+
+declare class PendingDelayedSpawn extends AITestSpawnInfo { 
+	clone() : PendingDelayedSpawn;
+	static C(Other: UObject | any): PendingDelayedSpawn;
+}
+
+declare class FunctionalAITest extends FunctionalTest { 
+	SpawnSets: AITestSpawnSet[];
+	SpawnLocationRandomizationRange: number;
+	SpawnedPawns: Pawn[];
+	PendingDelayedSpawns: PendingDelayedSpawn[];
+	CurrentSpawnSetIndex: number;
+	CurrentSpawnSetName: string;
+	OnAISpawned: UnrealEngineMulticastDelegate<(Controller: AIController, Pawn: Pawn) => void>;
+	OnAllAISPawned: UnrealEngineMulticastDelegate<() => void>;
+	NavMeshDebugOrigin: Vector;
+	NavMeshDebugExtent: Vector;
+	bWaitForNavMesh: boolean;
+	bDebugNavMeshOnTimeout: boolean;
+	static GetDefaultObject(): FunctionalAITest;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalAITest;
+	IsOneOfSpawnedPawns(Actor: Actor): boolean;
+	static C(Other: UObject | any): FunctionalAITest;
+}
+
+declare class AutomationPerformaceHelper extends UObject { 
+	static Load(ResourceName: string): AutomationPerformaceHelper;
+	static Find(Outer: UObject, ResourceName: string): AutomationPerformaceHelper;
+	static GetDefaultObject(): AutomationPerformaceHelper;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AutomationPerformaceHelper;
+	WriteLogFile(CaptureDir: string,CaptureExtension: string): void;
+	TriggerGPUTraceIfRecordFallsBelowBudget(): void;
+	Tick(DeltaSeconds: number): void;
+	StopCPUProfiling(): void;
+	StartCPUProfiling(): void;
+	Sample(DeltaSeconds: number): void;
+	OnBeginTests(): void;
+	OnAllTestsComplete(): void;
+	IsRecording(): boolean;
+	IsCurrentRecordWithinRenderThreadBudget(): boolean;
+	IsCurrentRecordWithinGPUBudget(): boolean;
+	IsCurrentRecordWithinGameThreadBudget(): boolean;
+	EndStatsFile(): void;
+	EndRecordingBaseline(): void;
+	EndRecording(): void;
+	BeginStatsFile(RecordName: string): void;
+	BeginRecordingBaseline(RecordName: string): void;
+	BeginRecording(RecordName: string,InGPUBudget: number,InRenderThreadBudget: number,InGameThreadBudget: number): void;
+	static C(Other: UObject | any): AutomationPerformaceHelper;
+}
+
+declare class FunctionalTestGameMode extends GameModeBase { 
+	static GetDefaultObject(): FunctionalTestGameMode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalTestGameMode;
+	static C(Other: UObject | any): FunctionalTestGameMode;
+}
+
+declare class FunctionalTestingManager extends BlueprintFunctionLibrary { 
+	TestsLeft: FunctionalTest[];
+	AllTests: FunctionalTest[];
+	OnSetupTests: UnrealEngineMulticastDelegate<() => void>;
+	OnTestsComplete: UnrealEngineMulticastDelegate<() => void>;
+	OnTestsBegin: UnrealEngineMulticastDelegate<() => void>;
+	static Load(ResourceName: string): FunctionalTestingManager;
+	static Find(Outer: UObject, ResourceName: string): FunctionalTestingManager;
+	static GetDefaultObject(): FunctionalTestingManager;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalTestingManager;
+	static RunAllFunctionalTests(WorldContextObject: UObject,bNewLog: boolean,bRunLooped: boolean,FailedTestsReproString: string): boolean;
+	static C(Other: UObject | any): FunctionalTestingManager;
+}
+
+declare class PhasedAutomationActorBase extends Actor { 
+	static GetDefaultObject(): PhasedAutomationActorBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhasedAutomationActorBase;
+	OnFunctionalTestingComplete(): void;
+	OnFunctionalTestingBegin(): void;
+	static C(Other: UObject | any): PhasedAutomationActorBase;
+}
+
+declare class FunctionalTestLevelScript extends LevelScriptActor { 
+	static GetDefaultObject(): FunctionalTestLevelScript;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalTestLevelScript;
+	static C(Other: UObject | any): FunctionalTestLevelScript;
+}
+
+declare class FunctionalTestUtilityLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): FunctionalTestUtilityLibrary;
+	static Find(Outer: UObject, ResourceName: string): FunctionalTestUtilityLibrary;
+	static GetDefaultObject(): FunctionalTestUtilityLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalTestUtilityLibrary;
+	static TraceChannelTestUtil(WorldContextObject: UObject,BatchOptions: TraceChannelTestBatchOptions,Start: Vector,End: Vector,SphereCapsuleRadius: number,CapsuleHalfHeight: number,BoxHalfSize: Vector,Orientation: Rotator,TraceChannel: ETraceTypeQuery,ObjectTypes: EObjectTypeQuery[],ProfileName: string,bTraceComplex: boolean,ActorsToIgnore: Actor[],bIgnoreSelf: boolean,DrawDebugType: EDrawDebugTrace,TraceColor: LinearColor,TraceHitColor: LinearColor,DrawTime: number): TraceQueryTestResults;
+	static C(Other: UObject | any): FunctionalTestUtilityLibrary;
+}
+
+declare class ScreenshotFunctionalTestBase extends FunctionalTest { 
+	Notes: string;
+	ScreenshotCamera: CameraComponent;
+	ScreenshotOptions: AutomationScreenshotOptions;
+	static GetDefaultObject(): ScreenshotFunctionalTestBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScreenshotFunctionalTestBase;
+	static C(Other: UObject | any): ScreenshotFunctionalTestBase;
+}
+
+declare type EWidgetTestAppearLocation = 'Viewport' | 'PlayerScreen' | 'EWidgetTestAppearLocation_MAX';
+declare var EWidgetTestAppearLocation : { Viewport:'Viewport',PlayerScreen:'PlayerScreen',EWidgetTestAppearLocation_MAX:'EWidgetTestAppearLocation_MAX', };
+declare class FunctionalUIScreenshotTest extends ScreenshotFunctionalTestBase { 
+	WidgetClass: UnrealEngineClass;
+	SpawnedWidget: UserWidget;
+	WidgetLocation: EWidgetTestAppearLocation;
+	ScreenshotRT: TextureRenderTarget2D;
+	static GetDefaultObject(): FunctionalUIScreenshotTest;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FunctionalUIScreenshotTest;
+	static C(Other: UObject | any): FunctionalUIScreenshotTest;
+}
+
+declare class GroundTruthData extends UObject { 
+	bResetGroundTruth: boolean;
+	ObjectData: UObject;
+	static Load(ResourceName: string): GroundTruthData;
+	static Find(Outer: UObject, ResourceName: string): GroundTruthData;
+	static GetDefaultObject(): GroundTruthData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GroundTruthData;
+	SaveObject(GroundTruth: UObject): void;
+	LoadObject(): UObject;
+	CanModify(): boolean;
+	static C(Other: UObject | any): GroundTruthData;
+}
+
+declare class ScreenshotFunctionalTest extends ScreenshotFunctionalTestBase { 
+	bCameraCutOnScreenshotPrep: boolean;
+	static GetDefaultObject(): ScreenshotFunctionalTest;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScreenshotFunctionalTest;
+	static C(Other: UObject | any): ScreenshotFunctionalTest;
+}
+
+declare class TestPhaseComponent extends SceneComponent { 
+	static Load(ResourceName: string): TestPhaseComponent;
+	static Find(Outer: UObject, ResourceName: string): TestPhaseComponent;
+	static GetDefaultObject(): TestPhaseComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestPhaseComponent;
+	static C(Other: UObject | any): TestPhaseComponent;
+}
+
+declare class AIGraph extends EdGraph { 
+	GraphVersion: number;
+	static Load(ResourceName: string): AIGraph;
+	static Find(Outer: UObject, ResourceName: string): AIGraph;
+	static GetDefaultObject(): AIGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AIGraph;
+	static C(Other: UObject | any): AIGraph;
+}
+
+declare class GraphNodeClassData { 
+	AssetName: string;
+	GeneratedClassPackage: string;
+	ClassName: string;
+	Category: string;
+	clone() : GraphNodeClassData;
+	static C(Other: UObject | any): GraphNodeClassData;
+}
+
+declare class AIGraphNode extends EdGraphNode { 
+	ClassData: GraphNodeClassData;
+	NodeInstance: UObject;
+	ParentNode: AIGraphNode;
+	SubNodes: AIGraphNode[];
+	CopySubNodeIndex: number;
+	bIsReadOnly: boolean;
+	bIsSubNode: boolean;
+	ErrorMessage: string;
+	static Load(ResourceName: string): AIGraphNode;
+	static Find(Outer: UObject, ResourceName: string): AIGraphNode;
+	static GetDefaultObject(): AIGraphNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AIGraphNode;
+	static C(Other: UObject | any): AIGraphNode;
+}
+
+declare class AIGraphSchema extends EdGraphSchema { 
+	static Load(ResourceName: string): AIGraphSchema;
+	static Find(Outer: UObject, ResourceName: string): AIGraphSchema;
+	static GetDefaultObject(): AIGraphSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AIGraphSchema;
+	static C(Other: UObject | any): AIGraphSchema;
+}
+
+declare class K2Node_AIMoveTo extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_AIMoveTo;
+	static Find(Outer: UObject, ResourceName: string): K2Node_AIMoveTo;
+	static GetDefaultObject(): K2Node_AIMoveTo;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_AIMoveTo;
+	static C(Other: UObject | any): K2Node_AIMoveTo;
+}
+
+declare class BehaviorTreeDecoratorGraph extends EdGraph { 
+	static Load(ResourceName: string): BehaviorTreeDecoratorGraph;
+	static Find(Outer: UObject, ResourceName: string): BehaviorTreeDecoratorGraph;
+	static GetDefaultObject(): BehaviorTreeDecoratorGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeDecoratorGraph;
+	static C(Other: UObject | any): BehaviorTreeDecoratorGraph;
+}
+
+declare class BehaviorTreeDecoratorGraphNode extends EdGraphNode { 
+	static Load(ResourceName: string): BehaviorTreeDecoratorGraphNode;
+	static Find(Outer: UObject, ResourceName: string): BehaviorTreeDecoratorGraphNode;
+	static GetDefaultObject(): BehaviorTreeDecoratorGraphNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeDecoratorGraphNode;
+	static C(Other: UObject | any): BehaviorTreeDecoratorGraphNode;
+}
+
+declare class BehaviorTreeDecoratorGraphNode_Decorator extends BehaviorTreeDecoratorGraphNode { 
+	NodeInstance: UObject;
+	ClassData: GraphNodeClassData;
+	static Load(ResourceName: string): BehaviorTreeDecoratorGraphNode_Decorator;
+	static Find(Outer: UObject, ResourceName: string): BehaviorTreeDecoratorGraphNode_Decorator;
+	static GetDefaultObject(): BehaviorTreeDecoratorGraphNode_Decorator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeDecoratorGraphNode_Decorator;
+	static C(Other: UObject | any): BehaviorTreeDecoratorGraphNode_Decorator;
+}
+
+declare type EDecoratorLogicMode = 'Sink' | 'And' | 'Or' | 'Not' | 'EDecoratorLogicMode_MAX';
+declare var EDecoratorLogicMode : { Sink:'Sink',And:'And',Or:'Or',Not:'Not',EDecoratorLogicMode_MAX:'EDecoratorLogicMode_MAX', };
+declare class BehaviorTreeDecoratorGraphNode_Logic extends BehaviorTreeDecoratorGraphNode { 
+	LogicMode: EDecoratorLogicMode;
+	static Load(ResourceName: string): BehaviorTreeDecoratorGraphNode_Logic;
+	static Find(Outer: UObject, ResourceName: string): BehaviorTreeDecoratorGraphNode_Logic;
+	static GetDefaultObject(): BehaviorTreeDecoratorGraphNode_Logic;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeDecoratorGraphNode_Logic;
+	static C(Other: UObject | any): BehaviorTreeDecoratorGraphNode_Logic;
+}
+
+declare class BehaviorTreeEditorTypes extends UObject { 
+	static Load(ResourceName: string): BehaviorTreeEditorTypes;
+	static Find(Outer: UObject, ResourceName: string): BehaviorTreeEditorTypes;
+	static GetDefaultObject(): BehaviorTreeEditorTypes;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeEditorTypes;
+	static C(Other: UObject | any): BehaviorTreeEditorTypes;
+}
+
+declare class BehaviorTreeFactory extends Factory { 
+	static Load(ResourceName: string): BehaviorTreeFactory;
+	static Find(Outer: UObject, ResourceName: string): BehaviorTreeFactory;
+	static GetDefaultObject(): BehaviorTreeFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeFactory;
+	static C(Other: UObject | any): BehaviorTreeFactory;
+}
+
+declare class BehaviorTreeGraph extends AIGraph { 
+	ModCounter: number;
+	bIsUsingModCounter: boolean;
+	static Load(ResourceName: string): BehaviorTreeGraph;
+	static Find(Outer: UObject, ResourceName: string): BehaviorTreeGraph;
+	static GetDefaultObject(): BehaviorTreeGraph;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeGraph;
+	static C(Other: UObject | any): BehaviorTreeGraph;
+}
+
+declare class BehaviorTreeGraphNode extends AIGraphNode { 
+	Decorators: BehaviorTreeGraphNode[];
+	Services: BehaviorTreeGraphNode[];
+	bInjectedNode: boolean;
+	static Load(ResourceName: string): BehaviorTreeGraphNode;
+	static Find(Outer: UObject, ResourceName: string): BehaviorTreeGraphNode;
+	static GetDefaultObject(): BehaviorTreeGraphNode;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeGraphNode;
+	static C(Other: UObject | any): BehaviorTreeGraphNode;
+}
+
+declare class BehaviorTreeGraphNode_Composite extends BehaviorTreeGraphNode { 
+	static Load(ResourceName: string): BehaviorTreeGraphNode_Composite;
+	static Find(Outer: UObject, ResourceName: string): BehaviorTreeGraphNode_Composite;
+	static GetDefaultObject(): BehaviorTreeGraphNode_Composite;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeGraphNode_Composite;
+	static C(Other: UObject | any): BehaviorTreeGraphNode_Composite;
+}
+
+declare class BehaviorTreeGraphNode_CompositeDecorator extends BehaviorTreeGraphNode { 
+	BoundGraph: EdGraph;
+	CompositeName: string;
+	bShowOperations: boolean;
+	bCanAbortFlow: boolean;
+	ParentNodeInstance: BTCompositeNode;
+	CachedDescription: string;
+	static Load(ResourceName: string): BehaviorTreeGraphNode_CompositeDecorator;
+	static Find(Outer: UObject, ResourceName: string): BehaviorTreeGraphNode_CompositeDecorator;
+	static GetDefaultObject(): BehaviorTreeGraphNode_CompositeDecorator;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BehaviorTreeGraphNode_CompositeDecorator;
+	static C(Other: UObject | any): BehaviorTreeGraphNode_CompositeDecorator;
+}
+
 declare class BehaviorTreeGraphNode_Decorator extends BehaviorTreeGraphNode { 
 	static Load(ResourceName: string): BehaviorTreeGraphNode_Decorator;
 	static Find(Outer: UObject, ResourceName: string): BehaviorTreeGraphNode_Decorator;
@@ -83,284 +4816,74 @@ declare class K2Node_LatentGameplayTaskCall extends K2Node_BaseAsyncTask {
 	static C(Other: UObject | any): K2Node_LatentGameplayTaskCall;
 }
 
-declare class VREditorAssetContainer extends DataAsset { 
-	DockableWindowCloseSound: SoundBase;
-	DockableWindowOpenSound: SoundBase;
-	DockableWindowDropSound: SoundBase;
-	DockableWindowDragSound: SoundBase;
-	DropFromContentBrowserSound: SoundBase;
-	RadialMenuOpenSound: SoundBase;
-	RadialMenuCloseSound: SoundBase;
-	TeleportSound: SoundBase;
-	ButtonPressSound: SoundCue;
-	AutoScaleSound: SoundBase;
-	GenericHMDMesh: StaticMesh;
-	PlaneMesh: StaticMesh;
-	CylinderMesh: StaticMesh;
-	LaserPointerStartMesh: StaticMesh;
-	LaserPointerMesh: StaticMesh;
-	LaserPointerEndMesh: StaticMesh;
-	LaserPointerHoverMesh: StaticMesh;
-	VivePreControllerMesh: StaticMesh;
-	OculusControllerMesh: StaticMesh;
-	GenericControllerMesh: StaticMesh;
-	TeleportRootMesh: StaticMesh;
-	WindowMesh: StaticMesh;
-	WindowSelectionBarMesh: StaticMesh;
-	WindowCloseButtonMesh: StaticMesh;
-	RadialMenuMainMesh: StaticMesh;
-	RadialMenuPointerMesh: StaticMesh;
-	PointerCursorMesh: StaticMesh;
-	GridMaterial: MaterialInterface;
-	LaserPointerMaterial: MaterialInterface;
-	LaserPointerTranslucentMaterial: MaterialInterface;
-	WorldMovementPostProcessMaterial: Material;
-	TextMaterial: MaterialInterface;
-	VivePreControllerMaterial: MaterialInterface;
-	OculusControllerMaterial: MaterialInterface;
-	TeleportMaterial: MaterialInterface;
-	WindowMaterial: MaterialInterface;
-	WindowTranslucentMaterial: MaterialInterface;
-	TextFont: Font;
-	static Load(ResourceName: string): VREditorAssetContainer;
-	static Find(Outer: UObject, ResourceName: string): VREditorAssetContainer;
-	static GetDefaultObject(): VREditorAssetContainer;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorAssetContainer;
-	static C(Other: UObject | any): VREditorAssetContainer;
-}
-
-declare class VREditorBaseActor extends Actor { 
-	VRMode: VREditorMode;
-	static GetDefaultObject(): VREditorBaseActor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorBaseActor;
-	static C(Other: UObject | any): VREditorBaseActor;
-}
-
-declare class VREditorBaseUserWidget extends UserWidget { 
-	Owner: any;
-	static Load(ResourceName: string): VREditorBaseUserWidget;
-	static Find(Outer: UObject, ResourceName: string): VREditorBaseUserWidget;
-	static GetDefaultObject(): VREditorBaseUserWidget;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorBaseUserWidget;
-	static C(Other: UObject | any): VREditorBaseUserWidget;
-}
-
-declare type EVREditorWidgetDrawingPolicy = 'Always' | 'Hovering';
-declare var EVREditorWidgetDrawingPolicy : { Always:'Always',Hovering:'Hovering', };
-declare class VREditorWidgetComponent extends WidgetComponent { 
-	DrawingPolicy: DrawingPolicy;
-	bIsHovering: boolean;
-	bHasEverDrawn: boolean;
-	static Load(ResourceName: string): VREditorWidgetComponent;
-	static Find(Outer: UObject, ResourceName: string): VREditorWidgetComponent;
-	static GetDefaultObject(): VREditorWidgetComponent;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorWidgetComponent;
-	static C(Other: UObject | any): VREditorWidgetComponent;
-}
-
-declare class VREditorFloatingUI extends VREditorBaseActor { 
-	UserWidget: VREditorBaseUserWidget;
-	WidgetComponent: VREditorWidgetComponent;
-	WindowMeshComponent: StaticMeshComponent;
-	UserWidgetClass: UnrealEngineClass;
-	static GetDefaultObject(): VREditorFloatingUI;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorFloatingUI;
-	static C(Other: UObject | any): VREditorFloatingUI;
-}
-
-declare class VREditorRadialFloatingUI extends VREditorBaseActor { 
-	WidgetComponents: VREditorWidgetComponent[];
-	WindowMeshComponent: StaticMeshComponent;
-	ArrowMeshComponent: StaticMeshComponent;
-	CentralWidgetComponent: VREditorWidgetComponent;
-	static GetDefaultObject(): VREditorRadialFloatingUI;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorRadialFloatingUI;
-	static C(Other: UObject | any): VREditorRadialFloatingUI;
-}
-
-declare class VREditorDockableWindow extends VREditorFloatingUI { 
-	SelectionBarMeshComponent: StaticMeshComponent;
-	CloseButtonMeshComponent: StaticMeshComponent;
-	SelectionBarMID: MaterialInstanceDynamic;
-	SelectionBarTranslucentMID: MaterialInstanceDynamic;
-	CloseButtonMID: MaterialInstanceDynamic;
-	CloseButtonTranslucentMID: MaterialInstanceDynamic;
-	DragOperationComponent: ViewportDragOperationComponent;
-	static GetDefaultObject(): VREditorDockableWindow;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorDockableWindow;
-	static C(Other: UObject | any): VREditorDockableWindow;
-}
-
-declare class VREditorInteractor extends ViewportInteractor { 
-	VRMode: VREditorMode;
-	static Load(ResourceName: string): VREditorInteractor;
-	static Find(Outer: UObject, ResourceName: string): VREditorInteractor;
-	static GetDefaultObject(): VREditorInteractor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorInteractor;
-	static C(Other: UObject | any): VREditorInteractor;
-}
-
-declare class VREditorMotionControllerInteractor extends VREditorInteractor { 
-	MotionControllerComponent: MotionControllerComponent;
-	HandMeshComponent: StaticMeshComponent;
-	LaserSplineComponent: SplineComponent;
-	LaserSplineMeshComponents: SplineMeshComponent[];
-	LaserPointerMID: MaterialInstanceDynamic;
-	TranslucentLaserPointerMID: MaterialInstanceDynamic;
-	HoverMeshComponent: StaticMeshComponent;
-	HoverPointLightComponent: PointLightComponent;
-	HandMeshMID: MaterialInstanceDynamic;
-	static Load(ResourceName: string): VREditorMotionControllerInteractor;
-	static Find(Outer: UObject, ResourceName: string): VREditorMotionControllerInteractor;
-	static GetDefaultObject(): VREditorMotionControllerInteractor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorMotionControllerInteractor;
-	static C(Other: UObject | any): VREditorMotionControllerInteractor;
-}
-
-declare class VRButton { 
-	ButtonWidget: VREditorWidgetComponent;
-	clone() : VRButton;
-	static C(Other: UObject | any): VRButton;
-}
-
-declare class VRRadialMenuHandler extends UObject { 
-	static Load(ResourceName: string): VRRadialMenuHandler;
-	static Find(Outer: UObject, ResourceName: string): VRRadialMenuHandler;
-	static GetDefaultObject(): VRRadialMenuHandler;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VRRadialMenuHandler;
-	static C(Other: UObject | any): VRRadialMenuHandler;
-}
-
-declare class VREditorUISystem extends UObject { 
-	VRMode: VREditorMode;
-	FloatingUIs: any;
-	InfoDisplayPanel: VREditorFloatingUI;
-	QuickRadialMenu: VREditorRadialFloatingUI;
-	DraggingUI: VREditorDockableWindow;
-	ColorPickerUI: VREditorDockableWindow;
-	LaserInteractor: VREditorMotionControllerInteractor;
-	UIInteractor: VREditorMotionControllerInteractor;
-	VRButtons: VRButton[];
-	RadialMenuHandler: VRRadialMenuHandler;
-	static Load(ResourceName: string): VREditorUISystem;
-	static Find(Outer: UObject, ResourceName: string): VREditorUISystem;
-	static GetDefaultObject(): VREditorUISystem;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorUISystem;
-	static C(Other: UObject | any): VREditorUISystem;
-}
-
-declare class VREditorTeleporter extends Actor { 
-	VRMode: VREditorMode;
-	TeleportDirectionMeshComponent: StaticMeshComponent;
-	HMDMeshComponent: StaticMeshComponent;
-	LeftMotionControllerMeshComponent: StaticMeshComponent;
-	RightMotionControllerMeshComponent: StaticMeshComponent;
-	TeleportMID: MaterialInstanceDynamic;
-	InteractorTryingTeleport: ViewportInteractor;
-	static GetDefaultObject(): VREditorTeleporter;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorTeleporter;
-	static C(Other: UObject | any): VREditorTeleporter;
-}
-
-declare class VREditorPlacement extends UObject { 
-	VRMode: VREditorMode;
-	ViewportWorldInteraction: ViewportWorldInteraction;
-	FloatingUIAssetDraggedFrom: WidgetComponent;
-	PlacingMaterialOrTextureAsset: UObject;
-	static Load(ResourceName: string): VREditorPlacement;
-	static Find(Outer: UObject, ResourceName: string): VREditorPlacement;
-	static GetDefaultObject(): VREditorPlacement;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorPlacement;
-	static C(Other: UObject | any): VREditorPlacement;
-}
-
-declare class VREditorMode extends EditorWorldExtension { 
-	UISystem: VREditorUISystem;
-	TeleportActor: VREditorTeleporter;
-	AutoScalerSystem: VREditorAutoScaler;
-	WorldInteraction: ViewportWorldInteraction;
-	PlacementSystem: VREditorPlacement;
-	LeftHandInteractor: VREditorMotionControllerInteractor;
-	RightHandInteractor: VREditorMotionControllerInteractor;
-	AssetContainer: VREditorAssetContainer;
-	static Load(ResourceName: string): VREditorMode;
-	static Find(Outer: UObject, ResourceName: string): VREditorMode;
-	static GetDefaultObject(): VREditorMode;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorMode;
-	static C(Other: UObject | any): VREditorMode;
-}
-
-declare class VREditorAutoScaler extends UObject { 
-	VRMode: VREditorMode;
-	static Load(ResourceName: string): VREditorAutoScaler;
-	static Find(Outer: UObject, ResourceName: string): VREditorAutoScaler;
-	static GetDefaultObject(): VREditorAutoScaler;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorAutoScaler;
-	static C(Other: UObject | any): VREditorAutoScaler;
-}
-
-declare class VREditorAvatarActor extends Actor { 
-	HeadMeshComponent: StaticMeshComponent;
-	WorldMovementGridMeshComponent: StaticMeshComponent;
-	WorldMovementGridMID: MaterialInstanceDynamic;
-	WorldMovementGridOpacity: number;
-	bIsDrawingWorldMovementPostProcess: boolean;
-	WorldMovementPostProcessMaterial: MaterialInstanceDynamic;
-	ScaleProgressMeshComponent: StaticMeshComponent;
-	CurrentScaleProgressMeshComponent: StaticMeshComponent;
-	UserScaleIndicatorText: TextRenderComponent;
-	FixedUserScaleMID: MaterialInstanceDynamic;
-	TranslucentFixedUserScaleMID: MaterialInstanceDynamic;
-	CurrentUserScaleMID: MaterialInstanceDynamic;
-	TranslucentCurrentUserScaleMID: MaterialInstanceDynamic;
-	PostProcessComponent: PostProcessComponent;
-	VRMode: VREditorMode;
-	static GetDefaultObject(): VREditorAvatarActor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VREditorAvatarActor;
-	static C(Other: UObject | any): VREditorAvatarActor;
-}
-
-declare class DockableWindowDragOperation extends ViewportDragOperation { 
-	static Load(ResourceName: string): DockableWindowDragOperation;
-	static Find(Outer: UObject, ResourceName: string): DockableWindowDragOperation;
-	static GetDefaultObject(): DockableWindowDragOperation;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DockableWindowDragOperation;
-	static C(Other: UObject | any): DockableWindowDragOperation;
-}
-
-declare class FloatingText extends Actor { 
-	SceneComponent: SceneComponent;
-	FirstLineComponent: StaticMeshComponent;
-	JointSphereComponent: StaticMeshComponent;
-	SecondLineComponent: StaticMeshComponent;
-	TextComponent: TextRenderComponent;
-	MaskedTextMaterial: MaterialInterface;
-	TranslucentTextMaterial: MaterialInterface;
-	LineMaterial: MaterialInterface;
-	LineMaterialMID: MaterialInstanceDynamic;
-	static GetDefaultObject(): FloatingText;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FloatingText;
-	static C(Other: UObject | any): FloatingText;
-}
-
-declare type EInteractorHand = 'Right' | 'Left';
-declare var EInteractorHand : { Right:'Right',Left:'Left', };
-declare class VRModeSettings extends UObject { 
-	bEnableAutoVREditMode: boolean;
-	InteractorHand: InteractorHand;
-	bShowWorldMovementGrid: boolean;
-	bShowWorldMovementPostProcess: boolean;
-	bShowWorldScaleProgressBar: boolean;
-	UIBrightness: number;
-	GizmoScale: number;
-	DoubleClickTime: number;
-	TriggerPressedThreshold_Vive: number;
-	TriggerPressedThreshold_Rift: number;
-	static Load(ResourceName: string): VRModeSettings;
-	static Find(Outer: UObject, ResourceName: string): VRModeSettings;
-	static GetDefaultObject(): VRModeSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VRModeSettings;
-	static C(Other: UObject | any): VRModeSettings;
+declare class Overlays extends UObject { 
+	static Load(ResourceName: string): Overlays;
+	static Find(Outer: UObject, ResourceName: string): Overlays;
+	static GetDefaultObject(): Overlays;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Overlays;
+	static C(Other: UObject | any): Overlays;
+}
+
+declare class OverlayItem { 
+	StartTime: Timespan;
+	EndTime: Timespan;
+	text: string;
+	Position: Vector2D;
+	clone() : OverlayItem;
+	static C(Other: UObject | any): OverlayItem;
+}
+
+declare class BasicOverlays extends Overlays { 
+	Overlays: OverlayItem[];
+	AssetImportData: AssetImportData;
+	static Load(ResourceName: string): BasicOverlays;
+	static Find(Outer: UObject, ResourceName: string): BasicOverlays;
+	static GetDefaultObject(): BasicOverlays;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BasicOverlays;
+	static C(Other: UObject | any): BasicOverlays;
+}
+
+declare class LocalizedOverlays extends Overlays { 
+	DefaultOverlays: BasicOverlays;
+	LocaleToOverlaysMap: any;
+	AssetImportData: AssetImportData;
+	static Load(ResourceName: string): LocalizedOverlays;
+	static Find(Outer: UObject, ResourceName: string): LocalizedOverlays;
+	static GetDefaultObject(): LocalizedOverlays;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalizedOverlays;
+	static C(Other: UObject | any): LocalizedOverlays;
+}
+
+declare class BasicOverlaysFactory extends Factory { 
+	static Load(ResourceName: string): BasicOverlaysFactory;
+	static Find(Outer: UObject, ResourceName: string): BasicOverlaysFactory;
+	static GetDefaultObject(): BasicOverlaysFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BasicOverlaysFactory;
+	static C(Other: UObject | any): BasicOverlaysFactory;
+}
+
+declare class BasicOverlaysFactoryNew extends Factory { 
+	static Load(ResourceName: string): BasicOverlaysFactoryNew;
+	static Find(Outer: UObject, ResourceName: string): BasicOverlaysFactoryNew;
+	static GetDefaultObject(): BasicOverlaysFactoryNew;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BasicOverlaysFactoryNew;
+	static C(Other: UObject | any): BasicOverlaysFactoryNew;
+}
+
+declare class LocalizedOverlaysFactoryNew extends Factory { 
+	static Load(ResourceName: string): LocalizedOverlaysFactoryNew;
+	static Find(Outer: UObject, ResourceName: string): LocalizedOverlaysFactoryNew;
+	static GetDefaultObject(): LocalizedOverlaysFactoryNew;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalizedOverlaysFactoryNew;
+	static C(Other: UObject | any): LocalizedOverlaysFactoryNew;
+}
+
+declare class ReimportBasicOverlaysFactory extends BasicOverlaysFactory { 
+	static Load(ResourceName: string): ReimportBasicOverlaysFactory;
+	static Find(Outer: UObject, ResourceName: string): ReimportBasicOverlaysFactory;
+	static GetDefaultObject(): ReimportBasicOverlaysFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportBasicOverlaysFactory;
+	static C(Other: UObject | any): ReimportBasicOverlaysFactory;
 }
 
 declare class MediaSource extends UObject { 
@@ -368,6 +4891,8 @@ declare class MediaSource extends UObject {
 	static Find(Outer: UObject, ResourceName: string): MediaSource;
 	static GetDefaultObject(): MediaSource;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaSource;
+	Validate(): boolean;
+	GetUrl(): string;
 	static C(Other: UObject | any): MediaSource;
 }
 
@@ -392,23 +4917,22 @@ declare class FileMediaSource extends BaseMediaSource {
 	static C(Other: UObject | any): FileMediaSource;
 }
 
-declare class MediaPlayerOverlay { 
-	HasPosition: boolean;
-	Position: Vector2D;
-	Text: string;
-	clone() : MediaPlayerOverlay;
-	static C(Other: UObject | any): MediaPlayerOverlay;
+declare class MediaCaptureDevice { 
+	DisplayName: string;
+	URL: string;
+	clone() : MediaCaptureDevice;
+	static C(Other: UObject | any): MediaCaptureDevice;
 }
 
-declare class MediaOverlays extends UObject { 
-	static Load(ResourceName: string): MediaOverlays;
-	static Find(Outer: UObject, ResourceName: string): MediaOverlays;
-	static GetDefaultObject(): MediaOverlays;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaOverlays;
-	GetTexts(OutTexts?: MediaPlayerOverlay[],Time?: Timespan): {OutTexts: MediaPlayerOverlay[]};
-	GetSubtitles(OutSubtitles?: MediaPlayerOverlay[],Time?: Timespan): {OutSubtitles: MediaPlayerOverlay[]};
-	GetCaptions(OutCaptions?: MediaPlayerOverlay[],Time?: Timespan): {OutCaptions: MediaPlayerOverlay[]};
-	static C(Other: UObject | any): MediaOverlays;
+declare class MediaBlueprintFunctionLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): MediaBlueprintFunctionLibrary;
+	static Find(Outer: UObject, ResourceName: string): MediaBlueprintFunctionLibrary;
+	static GetDefaultObject(): MediaBlueprintFunctionLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaBlueprintFunctionLibrary;
+	static EnumerateWebcamCaptureDevices(OutDevices?: MediaCaptureDevice[],Filter?: number): {OutDevices: MediaCaptureDevice[]};
+	static EnumerateVideoCaptureDevices(OutDevices?: MediaCaptureDevice[],Filter?: number): {OutDevices: MediaCaptureDevice[]};
+	static EnumerateAudioCaptureDevices(OutDevices?: MediaCaptureDevice[],Filter?: number): {OutDevices: MediaCaptureDevice[]};
+	static C(Other: UObject | any): MediaBlueprintFunctionLibrary;
 }
 
 declare class MediaPlaylist extends UObject { 
@@ -417,46 +4941,41 @@ declare class MediaPlaylist extends UObject {
 	static Find(Outer: UObject, ResourceName: string): MediaPlaylist;
 	static GetDefaultObject(): MediaPlaylist;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaPlaylist;
-	RemoveAt(Index: number): void;
-	Remove(MediaSource: MediaSource): void;
+	Replace(index: number,Replacement: MediaSource): boolean;
+	RemoveAt(index: number): boolean;
+	Remove(MediaSource: MediaSource): boolean;
 	Num(): number;
-	Insert(MediaSource: MediaSource,Index: number): void;
-	GetRandom(InOutIndex?: number): {InOutIndex: number, $: MediaSource};
+	Insert(MediaSource: MediaSource,index: number): void;
+	GetRandom(OutIndex?: number): {OutIndex: number, $: MediaSource};
 	GetPrevious(InOutIndex?: number): {InOutIndex: number, $: MediaSource};
 	GetNext(InOutIndex?: number): {InOutIndex: number, $: MediaSource};
-	Get(Index: number): MediaSource;
-	Add(MediaSource: MediaSource): void;
+	Get(index: number): MediaSource;
+	AddUrl(URL: string): boolean;
+	AddFile(FilePath: string): boolean;
+	Add(MediaSource: MediaSource): boolean;
 	static C(Other: UObject | any): MediaPlaylist;
 }
 
-declare class MediaSoundWave extends SoundWave { 
-	AudioTrackIndex: number;
-	MediaPlayer: MediaPlayer;
-	static Load(ResourceName: string): MediaSoundWave;
-	static Find(Outer: UObject, ResourceName: string): MediaSoundWave;
-	static GetDefaultObject(): MediaSoundWave;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaSoundWave;
-	static C(Other: UObject | any): MediaSoundWave;
+declare type EMediaPlayerTrack = 'Audio' | 'Caption' | 'Metadata' | 'Script' | 'Subtitle' | 'Text' | 'Video' | 'EMediaPlayerTrack_MAX';
+declare var EMediaPlayerTrack : { Audio:'Audio',Caption:'Caption',Metadata:'Metadata',Script:'Script',Subtitle:'Subtitle',Text:'Text',Video:'Video',EMediaPlayerTrack_MAX:'EMediaPlayerTrack_MAX', };
+declare class MediaPlayerTrackOptions { 
+	Audio: number;
+	Caption: number;
+	MetaData: number;
+	Script: number;
+	Subtitle: number;
+	text: number;
+	Video: number;
+	clone() : MediaPlayerTrackOptions;
+	static C(Other: UObject | any): MediaPlayerTrackOptions;
 }
 
-declare class MediaTexture extends Texture { 
-	AddressX: TextureAddress;
-	AddressY: TextureAddress;
-	ClearColor: LinearColor;
-	MediaPlayer: MediaPlayer;
-	VideoTrackIndex: number;
-	static Load(ResourceName: string): MediaTexture;
-	static Find(Outer: UObject, ResourceName: string): MediaTexture;
-	static GetDefaultObject(): MediaTexture;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaTexture;
-	GetWidth(): number;
-	GetHeight(): number;
-	GetAspectRatio(): number;
-	static C(Other: UObject | any): MediaTexture;
+declare class MediaPlayerOptions { 
+	Tracks: MediaPlayerTrackOptions;
+	clone() : MediaPlayerOptions;
+	static C(Other: UObject | any): MediaPlayerOptions;
 }
 
-declare type EMediaPlayerTrack = 'Audio' | 'Binary' | 'Caption' | 'Script' | 'Subtitle' | 'Text' | 'Video';
-declare var EMediaPlayerTrack : { Audio:'Audio',Binary:'Binary',Caption:'Caption',Script:'Script',Subtitle:'Subtitle',Text:'Text',Video:'Video', };
 declare class MediaPlayer extends UObject { 
 	OnEndReached: UnrealEngineMulticastDelegate<() => void>;
 	OnMediaClosed: UnrealEngineMulticastDelegate<() => void>;
@@ -464,14 +4983,23 @@ declare class MediaPlayer extends UObject {
 	OnMediaOpenFailed: UnrealEngineMulticastDelegate<(FailedUrl: string) => void>;
 	OnPlaybackResumed: UnrealEngineMulticastDelegate<() => void>;
 	OnPlaybackSuspended: UnrealEngineMulticastDelegate<() => void>;
+	OnSeekCompleted: UnrealEngineMulticastDelegate<() => void>;
+	OnTracksChanged: UnrealEngineMulticastDelegate<() => void>;
+	CacheAhead: Timespan;
+	CacheBehind: Timespan;
+	CacheBehindGame: Timespan;
+	NativeAudioOut: boolean;
 	PlayOnOpen: boolean;
 	Shuffle: boolean;
-	Loop: boolean;
-	Overlays: MediaOverlays;
+	loop: boolean;
 	Playlist: MediaPlaylist;
 	PlaylistIndex: number;
-	SoundWave: MediaSoundWave;
-	VideoTexture: MediaTexture;
+	TimeDelay: Timespan;
+	HorizontalFieldOfView: number;
+	VerticalFieldOfView: number;
+	ViewRotation: Rotator;
+	PlayerGuid: Guid;
+	AffectedByPIEHandling: boolean;
 	static Load(ResourceName: string): MediaPlayer;
 	static Find(Outer: UObject, ResourceName: string): MediaPlayer;
 	static GetDefaultObject(): MediaPlayer;
@@ -479,22 +5007,27 @@ declare class MediaPlayer extends UObject {
 	SupportsSeeking(): boolean;
 	SupportsScrubbing(): boolean;
 	SupportsRate(Rate: number,Unthinned: boolean): boolean;
-	SetVideoTexture(NewTexture: MediaTexture): void;
-	SetSoundWave(NewSoundWave: MediaSoundWave): void;
+	SetViewRotation(Rotation: Rotator,Absolute: boolean): boolean;
+	SetViewField(Horizontal: number,Vertical: number,Absolute: boolean): boolean;
+	SetVideoTrackFrameRate(TrackIndex: number,FormatIndex: number,FrameRate: number): boolean;
+	SetTrackFormat(TrackType: EMediaPlayerTrack,TrackIndex: number,FormatIndex: number): boolean;
+	SetTimeDelay(TimeDelay: Timespan): void;
 	SetRate(Rate: number): boolean;
-	SetOverlays(NewOverlays: MediaOverlays): void;
+	SetNativeVolume(Volume: number): boolean;
 	SetLooping(Looping: boolean): boolean;
 	SetDesiredPlayerName(PlayerName: string): void;
-	SelectTrack(TrackType: TrackType,TrackIndex: number): boolean;
+	SetBlockOnTime(Time: Timespan): void;
+	SelectTrack(TrackType: EMediaPlayerTrack,TrackIndex: number): boolean;
 	Seek(Time: Timespan): boolean;
 	Rewind(): boolean;
 	Reopen(): boolean;
 	Previous(): boolean;
 	Play(): boolean;
 	Pause(): boolean;
-	OpenUrl(Url: string): boolean;
+	OpenUrl(URL: string): boolean;
+	OpenSourceWithOptions(MediaSource: MediaSource,Options: MediaPlayerOptions): boolean;
 	OpenSource(MediaSource: MediaSource): boolean;
-	OpenPlaylistIndex(InPlaylist: MediaPlaylist,Index: number): boolean;
+	OpenPlaylistIndex(InPlaylist: MediaPlaylist,index: number): boolean;
 	OpenPlaylist(InPlaylist: MediaPlaylist): boolean;
 	OpenFile(FilePath: string): boolean;
 	Next(): boolean;
@@ -503,25 +5036,80 @@ declare class MediaPlayer extends UObject {
 	IsPlaying(): boolean;
 	IsPaused(): boolean;
 	IsLooping(): boolean;
+	IsConnecting(): boolean;
+	IsBuffering(): boolean;
+	HasError(): boolean;
+	GetViewRotation(): Rotator;
+	GetVideoTrackType(TrackIndex: number,FormatIndex: number): string;
+	GetVideoTrackFrameRates(TrackIndex: number,FormatIndex: number): FloatRange;
+	GetVideoTrackFrameRate(TrackIndex: number,FormatIndex: number): number;
+	GetVideoTrackDimensions(TrackIndex: number,FormatIndex: number): IntPoint;
+	GetVideoTrackAspectRatio(TrackIndex: number,FormatIndex: number): number;
+	GetVerticalFieldOfView(): number;
 	GetUrl(): string;
-	GetTrackLanguage(TrackType: TrackType,TrackIndex: number): string;
-	GetTrackDisplayName(TrackType: TrackType,TrackIndex: number): string;
+	GetTrackLanguage(TrackType: EMediaPlayerTrack,TrackIndex: number): string;
+	GetTrackFormat(TrackType: EMediaPlayerTrack,TrackIndex: number): number;
+	GetTrackDisplayName(TrackType: EMediaPlayerTrack,TrackIndex: number): string;
+	GetTimeDelay(): Timespan;
 	GetTime(): Timespan;
-	GetSelectedTrack(TrackType: TrackType): number;
-	GetReverseRates(Unthinned: boolean): FloatRange;
+	GetSupportedRates(OutRates?: FloatRange[],Unthinned?: boolean): {OutRates: FloatRange[]};
+	GetSelectedTrack(TrackType: EMediaPlayerTrack): number;
 	GetRate(): number;
+	GetPlaylistIndex(): number;
+	GetPlaylist(): MediaPlaylist;
 	GetPlayerName(): string;
-	GetNumTracks(TrackType: TrackType): number;
-	GetForwardRates(Unthinned: boolean): FloatRange;
+	GetNumTracks(TrackType: EMediaPlayerTrack): number;
+	GetNumTrackFormats(TrackType: EMediaPlayerTrack,TrackIndex: number): number;
+	GetMediaName(): string;
+	GetHorizontalFieldOfView(): number;
 	GetDuration(): Timespan;
 	GetDesiredPlayerName(): string;
+	GetAudioTrackType(TrackIndex: number,FormatIndex: number): string;
+	GetAudioTrackSampleRate(TrackIndex: number,FormatIndex: number): number;
+	GetAudioTrackChannels(TrackIndex: number,FormatIndex: number): number;
 	Close(): void;
-	CanPlayUrl(Url: string): boolean;
+	CanPlayUrl(URL: string): boolean;
 	CanPlaySource(MediaSource: MediaSource): boolean;
 	CanPause(): boolean;
 	static C(Other: UObject | any): MediaPlayer;
 }
 
+declare type EMediaSoundChannels = 'Mono' | 'Stereo' | 'Surround' | 'EMediaSoundChannels_MAX';
+declare var EMediaSoundChannels : { Mono:'Mono',Stereo:'Stereo',Surround:'Surround',EMediaSoundChannels_MAX:'EMediaSoundChannels_MAX', };
+declare class MediaSoundComponent extends SynthComponent { 
+	Channels: EMediaSoundChannels;
+	DynamicRateAdjustment: boolean;
+	RateAdjustmentFactor: number;
+	RateAdjustmentRange: FloatRange;
+	MediaPlayer: MediaPlayer;
+	static Load(ResourceName: string): MediaSoundComponent;
+	static Find(Outer: UObject, ResourceName: string): MediaSoundComponent;
+	static GetDefaultObject(): MediaSoundComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaSoundComponent;
+	SetMediaPlayer(NewMediaPlayer: MediaPlayer): void;
+	GetMediaPlayer(): MediaPlayer;
+	BP_GetAttenuationSettingsToApply(OutAttenuationSettings?: SoundAttenuationSettings): {OutAttenuationSettings: SoundAttenuationSettings, $: boolean};
+	static C(Other: UObject | any): MediaSoundComponent;
+}
+
+declare class MediaTexture extends Texture { 
+	AddressX: TextureAddress;
+	AddressY: TextureAddress;
+	AutoClear: boolean;
+	ClearColor: LinearColor;
+	MediaPlayer: MediaPlayer;
+	static Load(ResourceName: string): MediaTexture;
+	static Find(Outer: UObject, ResourceName: string): MediaTexture;
+	static GetDefaultObject(): MediaTexture;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaTexture;
+	SetMediaPlayer(NewMediaPlayer: MediaPlayer): void;
+	GetWidth(): number;
+	GetMediaPlayer(): MediaPlayer;
+	GetHeight(): number;
+	GetAspectRatio(): number;
+	static C(Other: UObject | any): MediaTexture;
+}
+
 declare class PlatformMediaSource extends MediaSource { 
 	PlatformMediaSources: any;
 	MediaSource: MediaSource;
@@ -541,78 +5129,18 @@ declare class StreamMediaSource extends BaseMediaSource {
 	static C(Other: UObject | any): StreamMediaSource;
 }
 
-declare class Overlays extends UObject { 
-	static Load(ResourceName: string): Overlays;
-	static Find(Outer: UObject, ResourceName: string): Overlays;
-	static GetDefaultObject(): Overlays;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Overlays;
-	static C(Other: UObject | any): Overlays;
-}
-
-declare class OverlayItem { 
-	StartTime: Timespan;
-	EndTime: Timespan;
-	Text: string;
-	Position: Vector2D;
-	clone() : OverlayItem;
-	static C(Other: UObject | any): OverlayItem;
-}
-
-declare class BasicOverlays extends Overlays { 
-	Overlays: OverlayItem[];
-	AssetImportData: AssetImportData;
-	static Load(ResourceName: string): BasicOverlays;
-	static Find(Outer: UObject, ResourceName: string): BasicOverlays;
-	static GetDefaultObject(): BasicOverlays;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BasicOverlays;
-	static C(Other: UObject | any): BasicOverlays;
-}
-
-declare class LocalizedOverlays extends Overlays { 
-	DefaultOverlays: BasicOverlays;
-	LocaleToOverlaysMap: any;
-	AssetImportData: AssetImportData;
-	static Load(ResourceName: string): LocalizedOverlays;
-	static Find(Outer: UObject, ResourceName: string): LocalizedOverlays;
-	static GetDefaultObject(): LocalizedOverlays;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalizedOverlays;
-	static C(Other: UObject | any): LocalizedOverlays;
-}
-
-declare class BasicOverlaysFactory extends Factory { 
-	static Load(ResourceName: string): BasicOverlaysFactory;
-	static Find(Outer: UObject, ResourceName: string): BasicOverlaysFactory;
-	static GetDefaultObject(): BasicOverlaysFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BasicOverlaysFactory;
-	static C(Other: UObject | any): BasicOverlaysFactory;
-}
-
-declare class BasicOverlaysFactoryNew extends Factory { 
-	static Load(ResourceName: string): BasicOverlaysFactoryNew;
-	static Find(Outer: UObject, ResourceName: string): BasicOverlaysFactoryNew;
-	static GetDefaultObject(): BasicOverlaysFactoryNew;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BasicOverlaysFactoryNew;
-	static C(Other: UObject | any): BasicOverlaysFactoryNew;
-}
-
-declare class LocalizedOverlaysFactoryNew extends Factory { 
-	static Load(ResourceName: string): LocalizedOverlaysFactoryNew;
-	static Find(Outer: UObject, ResourceName: string): LocalizedOverlaysFactoryNew;
-	static GetDefaultObject(): LocalizedOverlaysFactoryNew;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalizedOverlaysFactoryNew;
-	static C(Other: UObject | any): LocalizedOverlaysFactoryNew;
-}
-
-declare class ReimportBasicOverlaysFactory extends BasicOverlaysFactory { 
-	static Load(ResourceName: string): ReimportBasicOverlaysFactory;
-	static Find(Outer: UObject, ResourceName: string): ReimportBasicOverlaysFactory;
-	static GetDefaultObject(): ReimportBasicOverlaysFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportBasicOverlaysFactory;
-	static C(Other: UObject | any): ReimportBasicOverlaysFactory;
+declare class TimeSynchronizableMediaSource extends BaseMediaSource { 
+	bUseTimeSynchronization: boolean;
+	static Load(ResourceName: string): TimeSynchronizableMediaSource;
+	static Find(Outer: UObject, ResourceName: string): TimeSynchronizableMediaSource;
+	static GetDefaultObject(): TimeSynchronizableMediaSource;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TimeSynchronizableMediaSource;
+	static C(Other: UObject | any): TimeSynchronizableMediaSource;
 }
 
 declare class WmfMediaSettings extends UObject { 
 	AllowNonStandardCodecs: boolean;
+	LowLatency: boolean;
 	NativeAudioOut: boolean;
 	static Load(ResourceName: string): WmfMediaSettings;
 	static Find(Outer: UObject, ResourceName: string): WmfMediaSettings;
@@ -639,14 +5167,14 @@ declare class PaperSpriteSocket {
 	static C(Other: UObject | any): PaperSpriteSocket;
 }
 
-declare type ESpriteCollisionMode = 'None' | 'Use2DPhysics' | 'Use3DPhysics';
-declare var ESpriteCollisionMode : { None:'None',Use2DPhysics:'Use2DPhysics',Use3DPhysics:'Use3DPhysics', };
-declare type ESpritePivotMode = 'Top_Left' | 'Top_Center' | 'Top_Right' | 'Center_Left' | 'Center_Center' | 'Center_Right' | 'Bottom_Left' | 'Bottom_Center' | 'Bottom_Right' | 'Custom';
-declare var ESpritePivotMode : { Top_Left:'Top_Left',Top_Center:'Top_Center',Top_Right:'Top_Right',Center_Left:'Center_Left',Center_Center:'Center_Center',Center_Right:'Center_Right',Bottom_Left:'Bottom_Left',Bottom_Center:'Bottom_Center',Bottom_Right:'Bottom_Right',Custom:'Custom', };
-declare type ESpriteShapeType = 'Box' | 'Circle' | 'Polygon';
-declare var ESpriteShapeType : { Box:'Box',Circle:'Circle',Polygon:'Polygon', };
+declare type ESpriteCollisionMode = 'None' | 'Use2DPhysics' | 'Use3DPhysics' | 'ESpriteCollisionMode_MAX';
+declare var ESpriteCollisionMode : { None:'None',Use2DPhysics:'Use2DPhysics',Use3DPhysics:'Use3DPhysics',ESpriteCollisionMode_MAX:'ESpriteCollisionMode_MAX', };
+declare type ESpritePivotMode = 'Top_Left' | 'Top_Center' | 'Top_Right' | 'Center_Left' | 'Center_Center' | 'Center_Right' | 'Bottom_Left' | 'Bottom_Center' | 'Bottom_Right' | 'Custom' | 'ESpritePivotMode_MAX';
+declare var ESpritePivotMode : { Top_Left:'Top_Left',Top_Center:'Top_Center',Top_Right:'Top_Right',Center_Left:'Center_Left',Center_Center:'Center_Center',Center_Right:'Center_Right',Bottom_Left:'Bottom_Left',Bottom_Center:'Bottom_Center',Bottom_Right:'Bottom_Right',Custom:'Custom',ESpritePivotMode_MAX:'ESpritePivotMode_MAX', };
+declare type ESpriteShapeType = 'Box' | 'Circle' | 'Polygon' | 'ESpriteShapeType_MAX';
+declare var ESpriteShapeType : { Box:'Box',Circle:'Circle',Polygon:'Polygon',ESpriteShapeType_MAX:'ESpriteShapeType_MAX', };
 declare class SpriteGeometryShape { 
-	ShapeType: ShapeType;
+	ShapeType: ESpriteShapeType;
 	Vertices: Vector2D[];
 	BoxSize: Vector2D;
 	BoxPosition: Vector2D;
@@ -656,8 +5184,8 @@ declare class SpriteGeometryShape {
 	static C(Other: UObject | any): SpriteGeometryShape;
 }
 
-declare type ESpritePolygonMode = 'SourceBoundingBox' | 'TightBoundingBox' | 'ShrinkWrapped' | 'FullyCustom' | 'Diced';
-declare var ESpritePolygonMode : { SourceBoundingBox:'SourceBoundingBox',TightBoundingBox:'TightBoundingBox',ShrinkWrapped:'ShrinkWrapped',FullyCustom:'FullyCustom',Diced:'Diced', };
+declare type ESpritePolygonMode = 'SourceBoundingBox' | 'TightBoundingBox' | 'ShrinkWrapped' | 'FullyCustom' | 'Diced' | 'ESpritePolygonMode_MAX';
+declare var ESpritePolygonMode : { SourceBoundingBox:'SourceBoundingBox',TightBoundingBox:'TightBoundingBox',ShrinkWrapped:'ShrinkWrapped',FullyCustom:'FullyCustom',Diced:'Diced',ESpritePolygonMode_MAX:'ESpritePolygonMode_MAX', };
 declare class SpriteGeometryCollection { 
 	Shapes: SpriteGeometryShape[];
 	GeometryType: ESpritePolygonMode;
@@ -671,10 +5199,10 @@ declare class SpriteGeometryCollection {
 	static C(Other: UObject | any): SpriteGeometryCollection;
 }
 
-declare type EPaperSpriteAtlasPadding = 'DilateBorder' | 'PadWithZero';
-declare var EPaperSpriteAtlasPadding : { DilateBorder:'DilateBorder',PadWithZero:'PadWithZero', };
+declare type EPaperSpriteAtlasPadding = 'DilateBorder' | 'PadWithZero' | 'EPaperSpriteAtlasPadding_MAX';
+declare var EPaperSpriteAtlasPadding : { DilateBorder:'DilateBorder',PadWithZero:'PadWithZero',EPaperSpriteAtlasPadding_MAX:'EPaperSpriteAtlasPadding_MAX', };
 declare class PaperSpriteAtlasSlot { 
-	SpriteRef: any;
+	SpriteRef: PaperSprite;
 	AtlasIndex: number;
 	X: number;
 	Y: number;
@@ -689,7 +5217,7 @@ declare class PaperSpriteAtlas extends UObject {
 	MaxWidth: number;
 	MaxHeight: number;
 	MipCount: number;
-	PaddingType: PaddingType;
+	PaddingType: EPaperSpriteAtlasPadding;
 	Padding: number;
 	CompressionSettings: TextureCompressionSettings;
 	Filter: TextureFilter;
@@ -752,8 +5280,8 @@ declare class PaperFlipbookKeyFrame {
 	static C(Other: UObject | any): PaperFlipbookKeyFrame;
 }
 
-declare type EFlipbookCollisionMode = 'NoCollision' | 'FirstFrameCollision' | 'EachFrameCollision';
-declare var EFlipbookCollisionMode : { NoCollision:'NoCollision',FirstFrameCollision:'FirstFrameCollision',EachFrameCollision:'EachFrameCollision', };
+declare type EFlipbookCollisionMode = 'NoCollision' | 'FirstFrameCollision' | 'EachFrameCollision' | 'EFlipbookCollisionMode_MAX';
+declare var EFlipbookCollisionMode : { NoCollision:'NoCollision',FirstFrameCollision:'FirstFrameCollision',EachFrameCollision:'EachFrameCollision',EFlipbookCollisionMode_MAX:'EFlipbookCollisionMode_MAX', };
 declare class PaperFlipbook extends UObject { 
 	FramesPerSecond: number;
 	KeyFrames: PaperFlipbookKeyFrame[];
@@ -763,7 +5291,7 @@ declare class PaperFlipbook extends UObject {
 	static Find(Outer: UObject, ResourceName: string): PaperFlipbook;
 	static GetDefaultObject(): PaperFlipbook;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperFlipbook;
-	IsValidKeyFrameIndex(Index: number): boolean;
+	IsValidKeyFrameIndex(index: number): boolean;
 	GetTotalDuration(): number;
 	GetSpriteAtTime(Time: number,bClampToEnds: boolean): PaperSprite;
 	GetSpriteAtFrame(FrameIndex: number): PaperSprite;
@@ -805,7 +5333,6 @@ declare class PaperFlipbookComponent extends MeshComponent {
 	IsReversing(): boolean;
 	IsPlaying(): boolean;
 	IsLooping(): boolean;
-	GetSpriteMaterial(): MaterialInterface;
 	GetPlayRate(): number;
 	GetPlaybackPositionInFrames(): number;
 	GetPlaybackPosition(): number;
@@ -1053,8 +5580,8 @@ declare class PaperTileLayer extends UObject {
 	static C(Other: UObject | any): PaperTileLayer;
 }
 
-declare type ETileMapProjectionMode = 'Orthogonal' | 'IsometricDiamond' | 'IsometricStaggered' | 'HexagonalStaggered';
-declare var ETileMapProjectionMode : { Orthogonal:'Orthogonal',IsometricDiamond:'IsometricDiamond',IsometricStaggered:'IsometricStaggered',HexagonalStaggered:'HexagonalStaggered', };
+declare type ETileMapProjectionMode = 'Orthogonal' | 'IsometricDiamond' | 'IsometricStaggered' | 'HexagonalStaggered' | 'ETileMapProjectionMode_MAX';
+declare var ETileMapProjectionMode : { Orthogonal:'Orthogonal',IsometricDiamond:'IsometricDiamond',IsometricStaggered:'IsometricStaggered',HexagonalStaggered:'HexagonalStaggered',ETileMapProjectionMode_MAX:'ETileMapProjectionMode_MAX', };
 declare class PaperTileMap extends UObject { 
 	MapWidth: number;
 	MapHeight: number;
@@ -1064,7 +5591,7 @@ declare class PaperTileMap extends UObject {
 	SeparationPerTileX: number;
 	SeparationPerTileY: number;
 	SeparationPerLayer: number;
-	SelectedTileSet: any;
+	SelectedTileSet: PaperTileSet;
 	Material: MaterialInterface;
 	TileLayers: PaperTileLayer[];
 	CollisionThickness: number;
@@ -1075,6 +5602,13 @@ declare class PaperTileMap extends UObject {
 	AssetImportData: AssetImportData;
 	SelectedLayerIndex: number;
 	BackgroundColor: LinearColor;
+	TileGridColor: LinearColor;
+	MultiTileGridColor: LinearColor;
+	MultiTileGridWidth: number;
+	MultiTileGridHeight: number;
+	MultiTileGridOffsetX: number;
+	MultiTileGridOffsetY: number;
+	LayerGridColor: LinearColor;
 	LayerNameIndex: number;
 	static Load(ResourceName: string): PaperTileMap;
 	static Find(Outer: UObject, ResourceName: string): PaperTileMap;
@@ -1098,6 +5632,8 @@ declare class PaperTileMapComponent extends MeshComponent {
 	bShowPerTileGridWhenSelected: boolean;
 	bShowPerLayerGridWhenSelected: boolean;
 	bShowOutlineWhenUnselected: boolean;
+	bShowPerTileGridWhenUnselected: boolean;
+	bShowPerLayerGridWhenUnselected: boolean;
 	static Load(ResourceName: string): PaperTileMapComponent;
 	static Find(Outer: UObject, ResourceName: string): PaperTileMapComponent;
 	static GetDefaultObject(): PaperTileMapComponent;
@@ -1176,22 +5712,159 @@ declare class LightPropagationVolumeSettings {
 	static C(Other: UObject | any): LightPropagationVolumeSettings;
 }
 
-declare class LightPropagationVolumeBlendable extends UObject { 
-	Settings: LightPropagationVolumeSettings;
-	BlendWeight: number;
-	static Load(ResourceName: string): LightPropagationVolumeBlendable;
-	static Find(Outer: UObject, ResourceName: string): LightPropagationVolumeBlendable;
-	static GetDefaultObject(): LightPropagationVolumeBlendable;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightPropagationVolumeBlendable;
-	static C(Other: UObject | any): LightPropagationVolumeBlendable;
+declare class LightPropagationVolumeBlendable extends UObject { 
+	Settings: LightPropagationVolumeSettings;
+	BlendWeight: number;
+	static Load(ResourceName: string): LightPropagationVolumeBlendable;
+	static Find(Outer: UObject, ResourceName: string): LightPropagationVolumeBlendable;
+	static GetDefaultObject(): LightPropagationVolumeBlendable;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LightPropagationVolumeBlendable;
+	static C(Other: UObject | any): LightPropagationVolumeBlendable;
+}
+
+declare class EdGraph_ReferenceViewer extends EdGraph { 
+	static Load(ResourceName: string): EdGraph_ReferenceViewer;
+	static Find(Outer: UObject, ResourceName: string): EdGraph_ReferenceViewer;
+	static GetDefaultObject(): EdGraph_ReferenceViewer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EdGraph_ReferenceViewer;
+	static C(Other: UObject | any): EdGraph_ReferenceViewer;
+}
+
+declare class EdGraphNode_Reference extends EdGraphNode { 
+	static Load(ResourceName: string): EdGraphNode_Reference;
+	static Find(Outer: UObject, ResourceName: string): EdGraphNode_Reference;
+	static GetDefaultObject(): EdGraphNode_Reference;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EdGraphNode_Reference;
+	static C(Other: UObject | any): EdGraphNode_Reference;
+}
+
+declare class ReferenceViewerSchema extends EdGraphSchema { 
+	static Load(ResourceName: string): ReferenceViewerSchema;
+	static Find(Outer: UObject, ResourceName: string): ReferenceViewerSchema;
+	static GetDefaultObject(): ReferenceViewerSchema;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReferenceViewerSchema;
+	static C(Other: UObject | any): ReferenceViewerSchema;
+}
+
+declare class ContentBrowserFrontEndFilterExtension extends UObject { 
+	static Load(ResourceName: string): ContentBrowserFrontEndFilterExtension;
+	static Find(Outer: UObject, ResourceName: string): ContentBrowserFrontEndFilterExtension;
+	static GetDefaultObject(): ContentBrowserFrontEndFilterExtension;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserFrontEndFilterExtension;
+	static C(Other: UObject | any): ContentBrowserFrontEndFilterExtension;
+}
+
+declare class InternationalizationExportSettings extends UObject { 
+	CulturesToGenerate: string[];
+	CommandletClass: string;
+	SourcePath: string;
+	DestinationPath: string;
+	PortableObjectName: string;
+	ManifestName: string;
+	ArchiveName: string;
+	bExportLoc: boolean;
+	bImportLoc: boolean;
+	bUseCultureDirectory: boolean;
+	static Load(ResourceName: string): InternationalizationExportSettings;
+	static Find(Outer: UObject, ResourceName: string): InternationalizationExportSettings;
+	static GetDefaultObject(): InternationalizationExportSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InternationalizationExportSettings;
+	static C(Other: UObject | any): InternationalizationExportSettings;
+}
+
+declare class TranslationPickerSettings extends UObject { 
+	bSubmitTranslationPickerChangesToLocalizationService: boolean;
+	static Load(ResourceName: string): TranslationPickerSettings;
+	static Find(Outer: UObject, ResourceName: string): TranslationPickerSettings;
+	static GetDefaultObject(): TranslationPickerSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TranslationPickerSettings;
+	static C(Other: UObject | any): TranslationPickerSettings;
+}
+
+declare class TranslationChange { 
+	Version: string;
+	DateAndTime: DateTime;
+	Source: string;
+	Translation: string;
+	clone() : TranslationChange;
+	static C(Other: UObject | any): TranslationChange;
+}
+
+declare class TranslationContextInfo { 
+	Key: string;
+	Context: string;
+	Changes: TranslationChange[];
+	clone() : TranslationContextInfo;
+	static C(Other: UObject | any): TranslationContextInfo;
+}
+
+declare class TranslationUnit extends UObject { 
+	Namespace: string;
+	Key: string;
+	Source: string;
+	Translation: string;
+	Contexts: TranslationContextInfo[];
+	HasBeenReviewed: boolean;
+	TranslationBeforeImport: string;
+	LocresPath: string;
+	static Load(ResourceName: string): TranslationUnit;
+	static Find(Outer: UObject, ResourceName: string): TranslationUnit;
+	static GetDefaultObject(): TranslationUnit;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TranslationUnit;
+	static C(Other: UObject | any): TranslationUnit;
+}
+
+declare class PixelInspectorView extends UObject { 
+	FinalColor: LinearColor;
+	SceneColor: LinearColor;
+	PreExposure: number;
+	Luminance: number;
+	HdrColor: LinearColor;
+	Normal: Vector;
+	PerObjectGBufferData: number;
+	Metallic: number;
+	Specular: number;
+	Roughness: number;
+	MaterialShadingModel: EMaterialShadingModel;
+	SelectiveOutputMask: number;
+	BaseColor: LinearColor;
+	IndirectIrradiance: number;
+	AmbientOcclusion: number;
+	SubsurfaceColor: LinearColor;
+	SubsurfaceProfile: Vector;
+	Opacity: number;
+	Clearcoat: number;
+	ClearCoatRoughness: number;
+	WorldNormal: Vector;
+	BackLit: number;
+	Cloth: number;
+	EyeTangent: Vector;
+	IrisMask: number;
+	IrisDistance: number;
+	static Load(ResourceName: string): PixelInspectorView;
+	static Find(Outer: UObject, ResourceName: string): PixelInspectorView;
+	static GetDefaultObject(): PixelInspectorView;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PixelInspectorView;
+	static C(Other: UObject | any): PixelInspectorView;
 }
 
-declare class ContentBrowserFrontEndFilterExtension extends UObject { 
-	static Load(ResourceName: string): ContentBrowserFrontEndFilterExtension;
-	static Find(Outer: UObject, ResourceName: string): ContentBrowserFrontEndFilterExtension;
-	static GetDefaultObject(): ContentBrowserFrontEndFilterExtension;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserFrontEndFilterExtension;
-	static C(Other: UObject | any): ContentBrowserFrontEndFilterExtension;
+declare class DataValidationCommandlet extends Commandlet { 
+	static Load(ResourceName: string): DataValidationCommandlet;
+	static Find(Outer: UObject, ResourceName: string): DataValidationCommandlet;
+	static GetDefaultObject(): DataValidationCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataValidationCommandlet;
+	static C(Other: UObject | any): DataValidationCommandlet;
+}
+
+declare class DataValidationManager extends UObject { 
+	ExcludedDirectories: DirectoryPath[];
+	bValidateOnSave: boolean;
+	DataValidationManagerClassName: SoftClassPath;
+	static Load(ResourceName: string): DataValidationManager;
+	static Find(Outer: UObject, ResourceName: string): DataValidationManager;
+	static GetDefaultObject(): DataValidationManager;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DataValidationManager;
+	static C(Other: UObject | any): DataValidationManager;
 }
 
 declare class AudioCurveSourceComponent extends AudioComponent { 
@@ -1322,29 +5995,62 @@ declare class UdpMessagingSettings extends UObject {
 	static C(Other: UObject | any): UdpMessagingSettings;
 }
 
-declare class AnimNode_RigidBody extends AnimNode_SkeletalControlBase { 
-	OverridePhysicsAsset: PhysicsAsset;
-	OverrideWorldGravity: Vector;
-	OverlapChannel: ECollisionChannel;
-	bEnableWorldGeometry: boolean;
-	bComponentSpaceSimulation: boolean;
-	bOverrideWorldGravity: boolean;
-	CachedBoundsScale: number;
-	clone() : AnimNode_RigidBody;
-	static C(Other: UObject | any): AnimNode_RigidBody;
+declare type EActorSequenceObjectReferenceType = 'ContextActor' | 'ExternalActor' | 'Component' | 'EActorSequenceObjectReferenceType_MAX';
+declare var EActorSequenceObjectReferenceType : { ContextActor:'ContextActor',ExternalActor:'ExternalActor',Component:'Component',EActorSequenceObjectReferenceType_MAX:'EActorSequenceObjectReferenceType_MAX', };
+declare class ActorSequenceObjectReference { 
+	Type: EActorSequenceObjectReferenceType;
+	ActorId: Guid;
+	PathToComponent: string;
+	clone() : ActorSequenceObjectReference;
+	static C(Other: UObject | any): ActorSequenceObjectReference;
+}
+
+declare class ActorSequenceObjectReferences { 
+	Array: ActorSequenceObjectReference[];
+	clone() : ActorSequenceObjectReferences;
+	static C(Other: UObject | any): ActorSequenceObjectReferences;
 }
 
-declare class AnimGraphNode_RigidBody extends AnimGraphNode_SkeletalControlBase { 
-	UNode: AnimNode_RigidBody;
-	static Load(ResourceName: string): AnimGraphNode_RigidBody;
-	static Find(Outer: UObject, ResourceName: string): AnimGraphNode_RigidBody;
-	static GetDefaultObject(): AnimGraphNode_RigidBody;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimGraphNode_RigidBody;
-	static C(Other: UObject | any): AnimGraphNode_RigidBody;
+declare class ActorSequenceObjectReferenceMap { 
+	BindingIds: Guid[];
+	References: ActorSequenceObjectReferences[];
+	clone() : ActorSequenceObjectReferenceMap;
+	static C(Other: UObject | any): ActorSequenceObjectReferenceMap;
 }
 
-declare type ELocationAccuracy = 'LA_ThreeKilometers' | 'LA_OneKilometer' | 'LA_HundredMeters' | 'LA_TenMeters' | 'LA_Best' | 'LA_Navigation';
-declare var ELocationAccuracy : { LA_ThreeKilometers:'LA_ThreeKilometers',LA_OneKilometer:'LA_OneKilometer',LA_HundredMeters:'LA_HundredMeters',LA_TenMeters:'LA_TenMeters',LA_Best:'LA_Best',LA_Navigation:'LA_Navigation', };
+declare class ActorSequence extends MovieSceneSequence { 
+	MovieScene: MovieScene;
+	ObjectReferences: ActorSequenceObjectReferenceMap;
+	bHasBeenInitialized: boolean;
+	static Load(ResourceName: string): ActorSequence;
+	static Find(Outer: UObject, ResourceName: string): ActorSequence;
+	static GetDefaultObject(): ActorSequence;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorSequence;
+	static C(Other: UObject | any): ActorSequence;
+}
+
+declare class ActorSequencePlayer extends MovieSceneSequencePlayer { 
+	static Load(ResourceName: string): ActorSequencePlayer;
+	static Find(Outer: UObject, ResourceName: string): ActorSequencePlayer;
+	static GetDefaultObject(): ActorSequencePlayer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorSequencePlayer;
+	static C(Other: UObject | any): ActorSequencePlayer;
+}
+
+declare class ActorSequenceComponent extends ActorComponent { 
+	bAutoPlay: boolean;
+	PlaybackSettings: MovieSceneSequencePlaybackSettings;
+	Sequence: ActorSequence;
+	SequencePlayer: ActorSequencePlayer;
+	static Load(ResourceName: string): ActorSequenceComponent;
+	static Find(Outer: UObject, ResourceName: string): ActorSequenceComponent;
+	static GetDefaultObject(): ActorSequenceComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorSequenceComponent;
+	static C(Other: UObject | any): ActorSequenceComponent;
+}
+
+declare type ELocationAccuracy = 'LA_ThreeKilometers' | 'LA_OneKilometer' | 'LA_HundredMeters' | 'LA_TenMeters' | 'LA_Best' | 'LA_Navigation' | 'LA_MAX';
+declare var ELocationAccuracy : { LA_ThreeKilometers:'LA_ThreeKilometers',LA_OneKilometer:'LA_OneKilometer',LA_HundredMeters:'LA_HundredMeters',LA_TenMeters:'LA_TenMeters',LA_Best:'LA_Best',LA_Navigation:'LA_Navigation',LA_MAX:'LA_MAX', };
 declare class LocationServicesData { 
 	Timestamp: number;
 	Longitude: number;
@@ -1373,14 +6079,26 @@ declare class LocationServices extends BlueprintFunctionLibrary {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocationServices;
 	static StopLocationServices(): boolean;
 	static StartLocationServices(): boolean;
-	static IsLocationAccuracyAvailable(Accuracy: Accuracy): boolean;
-	static InitLocationServices(Accuracy: Accuracy,UpdateFrequency: number,MinDistanceFilter: number): boolean;
+	static IsLocationAccuracyAvailable(Accuracy: ELocationAccuracy): boolean;
+	static InitLocationServices(Accuracy: ELocationAccuracy,UpdateFrequency: number,MinDistanceFilter: number): boolean;
 	static GetLocationServicesImpl(): LocationServicesImpl;
 	static GetLastKnownLocation(): LocationServicesData;
 	static AreLocationServicesEnabled(): boolean;
 	static C(Other: UObject | any): LocationServices;
 }
 
+declare type EOculusPlatform = 'PC' | 'Mobile' | 'Length' | 'EOculusPlatform_MAX';
+declare var EOculusPlatform : { PC:'PC',Mobile:'Mobile',Length:'Length',EOculusPlatform_MAX:'EOculusPlatform_MAX', };
+declare class OculusEditorSettings extends UObject { 
+	PerfToolIgnoreList: any;
+	PerfToolTargetPlatform: EOculusPlatform;
+	static Load(ResourceName: string): OculusEditorSettings;
+	static Find(Outer: UObject, ResourceName: string): OculusEditorSettings;
+	static GetDefaultObject(): OculusEditorSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OculusEditorSettings;
+	static C(Other: UObject | any): OculusEditorSettings;
+}
+
 declare class TireConfigMaterialFriction { 
 	PhysicalMaterial: PhysicalMaterial;
 	FrictionScale: number;
@@ -1398,8 +6116,8 @@ declare class TireConfig extends DataAsset {
 	static C(Other: UObject | any): TireConfig;
 }
 
-declare type EWheelSweepType = 'SimpleAndComplex' | 'Simple' | 'Complex';
-declare var EWheelSweepType : { SimpleAndComplex:'SimpleAndComplex',Simple:'Simple',Complex:'Complex', };
+declare type EWheelSweepType = 'SimpleAndComplex' | 'Simple' | 'Complex' | 'EWheelSweepType_MAX';
+declare var EWheelSweepType : { SimpleAndComplex:'SimpleAndComplex',Simple:'Simple',Complex:'Complex',EWheelSweepType_MAX:'EWheelSweepType_MAX', };
 declare class VehicleWheel extends UObject { 
 	CollisionMesh: StaticMesh;
 	bDontCreateShape: boolean;
@@ -1450,6 +6168,7 @@ declare class WheelSetup {
 	WheelClass: UnrealEngineClass;
 	BoneName: string;
 	AdditionalOffset: Vector;
+	bDisableSteering: boolean;
 	clone() : WheelSetup;
 	static C(Other: UObject | any): WheelSetup;
 }
@@ -1473,12 +6192,17 @@ declare class VehicleInputRate {
 
 declare class WheeledVehicleMovementComponent extends PawnMovementComponent { 
 	bDeprecatedSpringOffsetMode: boolean;
-	WheelSetups: WheelSetup[];
+	bReverseAsBrake: boolean;
+	bUseRVOAvoidance: boolean;
+	bRawHandbrakeInput: boolean;
+	bRawGearUpInput: boolean;
+	bRawGearDownInput: boolean;
+	bWasAvoidanceUpdated: boolean;
 	Mass: number;
+	WheelSetups: WheelSetup[];
 	DragCoefficient: number;
 	ChassisWidth: number;
 	ChassisHeight: number;
-	bReverseAsBrake: boolean;
 	DragArea: number;
 	EstimatedMaxEngineSpeed: number;
 	MaxEngineRPM: number;
@@ -1492,7 +6216,6 @@ declare class WheeledVehicleMovementComponent extends PawnMovementComponent {
 	LowForwardSpeedSubStepCount: number;
 	HighForwardSpeedSubStepCount: number;
 	Wheels: VehicleWheel[];
-	bUseRVOAvoidance: boolean;
 	RVOAvoidanceRadius: number;
 	RVOAvoidanceHeight: number;
 	AvoidanceConsiderationRadius: number;
@@ -1508,9 +6231,6 @@ declare class WheeledVehicleMovementComponent extends PawnMovementComponent {
 	RawSteeringInput: number;
 	RawThrottleInput: number;
 	RawBrakeInput: number;
-	bRawHandbrakeInput: boolean;
-	bRawGearUpInput: boolean;
-	bRawGearDownInput: boolean;
 	SteeringInput: number;
 	ThrottleInput: number;
 	BrakeInput: number;
@@ -1522,7 +6242,7 @@ declare class WheeledVehicleMovementComponent extends PawnMovementComponent {
 	BrakeInputRate: VehicleInputRate;
 	HandbrakeInputRate: VehicleInputRate;
 	SteeringInputRate: VehicleInputRate;
-	bWasAvoidanceUpdated: boolean;
+	OverrideController: Controller;
 	static Load(ResourceName: string): WheeledVehicleMovementComponent;
 	static Find(Outer: UObject, ResourceName: string): WheeledVehicleMovementComponent;
 	static GetDefaultObject(): WheeledVehicleMovementComponent;
@@ -1592,8 +6312,8 @@ declare class VehicleEngineData {
 	static C(Other: UObject | any): VehicleEngineData;
 }
 
-declare type EVehicleDifferential4W = 'LimitedSlip_4W' | 'LimitedSlip_FrontDrive' | 'LimitedSlip_RearDrive' | 'Open_4W' | 'Open_FrontDrive' | 'Open_RearDrive';
-declare var EVehicleDifferential4W : { LimitedSlip_4W:'LimitedSlip_4W',LimitedSlip_FrontDrive:'LimitedSlip_FrontDrive',LimitedSlip_RearDrive:'LimitedSlip_RearDrive',Open_4W:'Open_4W',Open_FrontDrive:'Open_FrontDrive',Open_RearDrive:'Open_RearDrive', };
+declare type EVehicleDifferential4W = 'LimitedSlip_4W' | 'LimitedSlip_FrontDrive' | 'LimitedSlip_RearDrive' | 'Open_4W' | 'Open_FrontDrive' | 'Open_RearDrive' | 'EVehicleDifferential4W_MAX';
+declare var EVehicleDifferential4W : { LimitedSlip_4W:'LimitedSlip_4W',LimitedSlip_FrontDrive:'LimitedSlip_FrontDrive',LimitedSlip_RearDrive:'LimitedSlip_RearDrive',Open_4W:'Open_4W',Open_FrontDrive:'Open_FrontDrive',Open_RearDrive:'Open_RearDrive',EVehicleDifferential4W_MAX:'EVehicleDifferential4W_MAX', };
 declare class VehicleDifferential4WData { 
 	DifferentialType: EVehicleDifferential4W;
 	FrontRearSplit: number;
@@ -1630,9 +6350,9 @@ declare class VehicleTransmissionData {
 declare class WheeledVehicleMovementComponent4W extends WheeledVehicleMovementComponent { 
 	EngineSetup: VehicleEngineData;
 	DifferentialSetup: VehicleDifferential4WData;
+	AckermannAccuracy: number;
 	TransmissionSetup: VehicleTransmissionData;
 	SteeringCurve: RuntimeFloatCurve;
-	AckermannAccuracy: number;
 	static Load(ResourceName: string): WheeledVehicleMovementComponent4W;
 	static Find(Outer: UObject, ResourceName: string): WheeledVehicleMovementComponent4W;
 	static GetDefaultObject(): WheeledVehicleMovementComponent4W;
@@ -1693,9 +6413,33 @@ declare class JavascriptContext extends UObject {
 	static C(Other: UObject | any): JavascriptContext;
 }
 
+declare class JavascriptHeapStatistics { 
+	TotalHeapSize: number;
+	TotalHeapSizeExecutable: number;
+	TotalPhysicalSize: number;
+	TotalAvailableSize: number;
+	UsedHeapSize: number;
+	HeapSizeLimit: number;
+	MallocedMemory: number;
+	bDoesZapGarbage: boolean;
+	clone() : JavascriptHeapStatistics;
+	static C(Other: UObject | any): JavascriptHeapStatistics;
+}
+
+declare class JavascriptIsolate extends UObject { 
+	static Load(ResourceName: string): JavascriptIsolate;
+	static Find(Outer: UObject, ResourceName: string): JavascriptIsolate;
+	static GetDefaultObject(): JavascriptIsolate;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptIsolate;
+	Init(bIsEditor: boolean): void;
+	GetHeapStatistics(Statistics?: JavascriptHeapStatistics): {Statistics: JavascriptHeapStatistics};
+	CreateContext(): JavascriptContext;
+	static C(Other: UObject | any): JavascriptIsolate;
+}
+
 declare class JavascriptAsset { 
 	Name: string;
-	Asset: StringAssetReference;
+	Asset: SoftObjectPath;
 	clone() : JavascriptAsset;
 	static C(Other: UObject | any): JavascriptAsset;
 }
@@ -1711,6 +6455,7 @@ declare class JavascriptComponent extends ActorComponent {
 	ScriptSourceFile: string;
 	bActiveWithinEditor: boolean;
 	JavascriptContext: JavascriptContext;
+	JavascriptIsolate: JavascriptIsolate;
 	OnTick: UnrealEngineDelegate<(DeltaSeconds: number) => void>;
 	OnBeginPlay: UnrealEngineDelegate<() => void>;
 	OnEndPlay: UnrealEngineDelegate<() => void>;
@@ -1771,7 +6516,7 @@ declare class JavascriptGlobalDelegates extends UObject {
 	Unbind(Key: string): void;
 	RedirectorFollowed(PackageName: string,Redirector: UObject): void;
 	PreLoadMap(MapName: string): void;
-	PreGarbageCollect(): void;
+	PreGarbageCollectDelegate(): void;
 	PostLoadMapWithWorld(World: World): void;
 	PostGarbageCollect(): void;
 	PostDemoPlay(): void;
@@ -1794,27 +6539,13 @@ declare class JavascriptGlobalDelegates extends UObject {
 	static C(Other: UObject | any): JavascriptGlobalDelegates;
 }
 
-declare class JavascriptHeapStatistics { 
-	TotalHeapSize: number;
-	TotalHeapSizeExecutable: number;
-	TotalPhysicalSize: number;
-	TotalAvailableSize: number;
-	UsedHeapSize: number;
-	HeapSizeLimit: number;
-	MallocedMemory: number;
-	bDoesZapGarbage: boolean;
-	clone() : JavascriptHeapStatistics;
-	static C(Other: UObject | any): JavascriptHeapStatistics;
-}
-
-declare class JavascriptIsolate extends UObject { 
-	static Load(ResourceName: string): JavascriptIsolate;
-	static Find(Outer: UObject, ResourceName: string): JavascriptIsolate;
-	static GetDefaultObject(): JavascriptIsolate;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptIsolate;
-	GetHeapStatistics(Statistics?: JavascriptHeapStatistics): {Statistics: JavascriptHeapStatistics};
-	CreateContext(): JavascriptContext;
-	static C(Other: UObject | any): JavascriptIsolate;
+declare class JavascriptStaticCache extends UObject { 
+	Isolates: JavascriptIsolate[];
+	static Load(ResourceName: string): JavascriptStaticCache;
+	static Find(Outer: UObject, ResourceName: string): JavascriptStaticCache;
+	static GetDefaultObject(): JavascriptStaticCache;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptStaticCache;
+	static C(Other: UObject | any): JavascriptStaticCache;
 }
 
 declare class JavascriptStubStruct { 
@@ -1832,14 +6563,14 @@ declare class JavascriptFunction {
 declare class JavascriptStreamableManager { 
 	clone() : JavascriptStreamableManager;
 	static C(Other: UObject | any): JavascriptStreamableManager;
-	IsAsyncLoadComplete(Target: StringAssetReference): boolean;
-	RequestAsyncLoad(TargetsToStream: StringAssetReference[],DelegateToCall: JavascriptFunction,Priority: number): void;
-	SimpleAsyncLoad(Target: StringAssetReference,Priority: number): void;
-	Unload(Target: StringAssetReference): void;
-	static IsAsyncLoadComplete(Manager: JavascriptStreamableManager,Target: StringAssetReference): boolean;
-	static RequestAsyncLoad(Manager: JavascriptStreamableManager,TargetsToStream: StringAssetReference[],DelegateToCall: JavascriptFunction,Priority: number): void;
-	static SimpleAsyncLoad(Manager: JavascriptStreamableManager,Target: StringAssetReference,Priority: number): void;
-	static Unload(Manager: JavascriptStreamableManager,Target: StringAssetReference): void;
+	IsAsyncLoadComplete(Target: SoftObjectPath): boolean;
+	RequestAsyncLoad(TargetsToStream: SoftObjectPath[],DelegateToCall: JavascriptFunction,Priority: number): void;
+	SimpleAsyncLoad(Target: SoftObjectPath,Priority: number): void;
+	Unload(Target: SoftObjectPath): void;
+	static IsAsyncLoadComplete(Manager: JavascriptStreamableManager,Target: SoftObjectPath): boolean;
+	static RequestAsyncLoad(Manager: JavascriptStreamableManager,TargetsToStream: SoftObjectPath[],DelegateToCall: JavascriptFunction,Priority: number): void;
+	static SimpleAsyncLoad(Manager: JavascriptStreamableManager,Target: SoftObjectPath,Priority: number): void;
+	static Unload(Manager: JavascriptStreamableManager,Target: SoftObjectPath): void;
 	static CreateStreamableManager(): JavascriptStreamableManager;
 }
 
@@ -1861,34 +6592,34 @@ declare class JavascriptSocket {
 	static CreateSocket(SocketType: string,Description: string,bForceUDP: boolean): JavascriptSocket;
 }
 
-declare type EJavascriptStatDataType = 'Invalid' | 'ST_None' | 'ST_int64' | 'ST_double' | 'ST_FName' | 'ST_Ptr';
-declare var EJavascriptStatDataType : { Invalid:'Invalid',ST_None:'ST_None',ST_int64:'ST_int64',ST_double:'ST_double',ST_FName:'ST_FName',ST_Ptr:'ST_Ptr', };
-declare type EJavascriptStatOperation = 'Invalid' | 'SetLongName' | 'AdvanceFrameEventGameThread' | 'AdvanceFrameEventRenderThread' | 'CycleScopeStart' | 'CycleScopeEnd' | 'SpecialMessageMarker' | 'Set' | 'Clear' | 'Add' | 'Subtract' | 'ChildrenStart' | 'ChildrenEnd' | 'Leaf' | 'MaxVal' | 'Memory';
-declare var EJavascriptStatOperation : { Invalid:'Invalid',SetLongName:'SetLongName',AdvanceFrameEventGameThread:'AdvanceFrameEventGameThread',AdvanceFrameEventRenderThread:'AdvanceFrameEventRenderThread',CycleScopeStart:'CycleScopeStart',CycleScopeEnd:'CycleScopeEnd',SpecialMessageMarker:'SpecialMessageMarker',Set:'Set',Clear:'Clear',Add:'Add',Subtract:'Subtract',ChildrenStart:'ChildrenStart',ChildrenEnd:'ChildrenEnd',Leaf:'Leaf',MaxVal:'MaxVal',Memory:'Memory', };
+declare type EJavascriptStatDataType = 'Invalid' | 'ST_None' | 'ST_int64' | 'ST_double' | 'ST_FName' | 'ST_Ptr' | 'EJavascriptStatDataType_MAX';
+declare var EJavascriptStatDataType : { Invalid:'Invalid',ST_None:'ST_None',ST_int64:'ST_int64',ST_double:'ST_double',ST_FName:'ST_FName',ST_Ptr:'ST_Ptr',EJavascriptStatDataType_MAX:'EJavascriptStatDataType_MAX', };
+declare type EJavascriptStatOperation = 'Invalid' | 'SetLongName' | 'AdvanceFrameEventGameThread' | 'AdvanceFrameEventRenderThread' | 'CycleScopeStart' | 'CycleScopeEnd' | 'SpecialMessageMarker' | 'Set' | 'Clear' | 'Add' | 'Subtract' | 'ChildrenStart' | 'ChildrenEnd' | 'Leaf' | 'MaxVal' | 'Memory' | 'EJavascriptStatOperation_MAX';
+declare var EJavascriptStatOperation : { Invalid:'Invalid',SetLongName:'SetLongName',AdvanceFrameEventGameThread:'AdvanceFrameEventGameThread',AdvanceFrameEventRenderThread:'AdvanceFrameEventRenderThread',CycleScopeStart:'CycleScopeStart',CycleScopeEnd:'CycleScopeEnd',SpecialMessageMarker:'SpecialMessageMarker',Set:'Set',Clear:'Clear',Add:'Add',Subtract:'Subtract',ChildrenStart:'ChildrenStart',ChildrenEnd:'ChildrenEnd',Leaf:'Leaf',MaxVal:'MaxVal',Memory:'Memory',EJavascriptStatOperation_MAX:'EJavascriptStatOperation_MAX', };
 declare class JavascriptStat { 
 	clone() : JavascriptStat;
 	static C(Other: UObject | any): JavascriptStat;
-	AddMessage(InStatOperation: InStatOperation): void;
-	AddMessage_float(InStatOperation: InStatOperation,Value: number,bIsCycle: boolean): void;
-	AddMessage_int(InStatOperation: InStatOperation,Value: number,bIsCycle: boolean): void;
-	static AddMessage(Stat: JavascriptStat,InStatOperation: InStatOperation): void;
-	static AddMessage_float(Stat: JavascriptStat,InStatOperation: InStatOperation,Value: number,bIsCycle: boolean): void;
-	static AddMessage_int(Stat: JavascriptStat,InStatOperation: InStatOperation,Value: number,bIsCycle: boolean): void;
-	static NewStat(InStatName: string,InStatDesc: string,InGroupName: string,InGroupCategory: string,InGroupDesc: string,bDefaultEnable: boolean,bShouldClearEveryFrame: boolean,InStatType: InStatType,bCycleStat: boolean): JavascriptStat;
+	AddMessage(InStatOperation: EJavascriptStatOperation): void;
+	AddMessage_float(InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
+	AddMessage_int(InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
+	static AddMessage(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation): void;
+	static AddMessage_float(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
+	static AddMessage_int(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
+	static NewStat(InStatName: string,InStatDesc: string,InGroupName: string,InGroupCategory: string,InGroupDesc: string,bDefaultEnable: boolean,bShouldClearEveryFrame: boolean,InStatType: EJavascriptStatDataType,bCycleStat: boolean,bSortByName: boolean): JavascriptStat;
 }
 
-declare type ELogVerbosity_JS = 'NoLogging' | 'Fatal' | 'Error' | 'Warning' | 'Display' | 'Log' | 'Verbose' | 'VeryVerbose';
-declare var ELogVerbosity_JS : { NoLogging:'NoLogging',Fatal:'Fatal',Error:'Error',Warning:'Warning',Display:'Display',Log:'Log',Verbose:'Verbose',VeryVerbose:'VeryVerbose', };
+declare type ELogVerbosity_JS = 'NoLogging' | 'Fatal' | 'Error' | 'Warning' | 'Display' | 'Log' | 'Verbose' | 'VeryVerbose' | 'ELogVerbosity_MAX';
+declare var ELogVerbosity_JS : { NoLogging:'NoLogging',Fatal:'Fatal',Error:'Error',Warning:'Warning',Display:'Display',Log:'Log',Verbose:'Verbose',VeryVerbose:'VeryVerbose',ELogVerbosity_MAX:'ELogVerbosity_MAX', };
 declare class JavascriptLogCategory { 
 	clone() : JavascriptLogCategory;
 	static C(Other: UObject | any): JavascriptLogCategory;
 	GetCategoryName(): string;
-	IsSuppressed(Verbosity: Verbosity): boolean;
-	Log(Verbosity: Verbosity,Message: string,FileName: string,LineNumber: number): void;
+	IsSuppressed(Verbosity: ELogVerbosity_JS): boolean;
+	Log(Verbosity: ELogVerbosity_JS,Message: string,Filename: string,LineNumber: number): void;
 	static GetCategoryName(Category: JavascriptLogCategory): string;
-	static IsSuppressed(Category: JavascriptLogCategory,Verbosity: Verbosity): boolean;
-	static Log(Category: JavascriptLogCategory,Verbosity: Verbosity,Message: string,FileName: string,LineNumber: number): void;
-	static CreateLogCategory(CategoryName: string,InDefaultVerbosity: InDefaultVerbosity): JavascriptLogCategory;
+	static IsSuppressed(Category: JavascriptLogCategory,Verbosity: ELogVerbosity_JS): boolean;
+	static Log(Category: JavascriptLogCategory,Verbosity: ELogVerbosity_JS,Message: string,Filename: string,LineNumber: number): void;
+	static CreateLogCategory(CategoryName: string,InDefaultVerbosity: ELogVerbosity_JS): JavascriptLogCategory;
 }
 
 declare class JavscriptProperty { 
@@ -1938,14 +6669,14 @@ declare class JavascriptLibrary extends BlueprintFunctionLibrary {
 	static Find(Outer: UObject, ResourceName: string): JavascriptLibrary;
 	static GetDefaultObject(): JavascriptLibrary;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptLibrary;
-	static WriteStringToFile(UObject: UObject,Filename: string,Data: string): boolean;
+	static WriteStringToFile(UObject: UObject,Filename: string,Data: string,EncodingOptions: EJavascriptEncodingOptions): boolean;
 	static WriteFile(UObject: UObject,Filename: string): boolean;
 	static V8_SetIdleTaskBudget(BudgetInSeconds: number): void;
 	static V8_SetFlagsFromString(V8Flags: string): void;
 	static UnregisterComponent(ActorComponent: ActorComponent): void;
-	static Unload(Manager: JavascriptStreamableManager,Target: StringAssetReference): void;
+	static Unload(Manager: JavascriptStreamableManager,Target: SoftObjectPath): void;
 	static TryLoadByPath(Path: string): UObject;
-	static SimpleAsyncLoad(Manager: JavascriptStreamableManager,Target: StringAssetReference,Priority: number): void;
+	static SimpleAsyncLoad(Manager: JavascriptStreamableManager,Target: SoftObjectPath,Priority: number): void;
 	static SetRootComponent(Actor: Actor,Component: SceneComponent): void;
 	static SetPort(Addr?: JavascriptInternetAddr,Port?: number): {Addr: JavascriptInternetAddr};
 	static SetObjectFlags(Obj: UObject,Flags: number): void;
@@ -1959,28 +6690,29 @@ declare class JavascriptLibrary extends BlueprintFunctionLibrary {
 	static ResolveIp(HostName: string,OutIp?: string): {OutIp: string, $: boolean};
 	static ReregisterComponent(ActorComponent: ActorComponent): void;
 	static ReregisterAllComponents(Actor: Actor): void;
-	static RequestAsyncLoad(Manager: JavascriptStreamableManager,TargetsToStream: StringAssetReference[],DelegateToCall: JavascriptFunction,Priority: number): void;
+	static RequestAsyncLoad(Manager: JavascriptStreamableManager,TargetsToStream: SoftObjectPath[],DelegateToCall: JavascriptFunction,Priority: number): void;
 	static RegisterComponent(ActorComponent: ActorComponent): void;
 	static ReadStringFromFile(UObject: UObject,Filename: string): string;
 	static ReadFile(UObject: UObject,Filename: string): boolean;
 	static ReadDirectory(UObject: UObject,Directory: string,OutItems?: DirectoryItem[]): {OutItems: DirectoryItem[], $: boolean};
-	static NewStat(InStatName: string,InStatDesc: string,InGroupName: string,InGroupCategory: string,InGroupDesc: string,bDefaultEnable: boolean,bShouldClearEveryFrame: boolean,InStatType: InStatType,bCycleStat: boolean): JavascriptStat;
+	static NewStat(InStatName: string,InStatDesc: string,InGroupName: string,InGroupCategory: string,InGroupDesc: string,bDefaultEnable: boolean,bShouldClearEveryFrame: boolean,InStatType: EJavascriptStatDataType,bCycleStat: boolean,bSortByName: boolean): JavascriptStat;
 	static MarkRenderStateDirty(Component: ActorComponent): void;
 	static MakeDirectory(Path: string,Tree: boolean): boolean;
-	static Log(Category: JavascriptLogCategory,Verbosity: Verbosity,Message: string,FileName: string,LineNumber: number): void;
+	static Log(Category: JavascriptLogCategory,Verbosity: ELogVerbosity_JS,Message: string,Filename: string,LineNumber: number): void;
 	static LoadPackage(InOuter: Package,PackageName: string): Package;
-	static IsSuppressed(Category: JavascriptLogCategory,Verbosity: Verbosity): boolean;
+	static IsSuppressed(Category: JavascriptLogCategory,Verbosity: ELogVerbosity_JS): boolean;
 	static IsRegistered(ActorComponent: ActorComponent): boolean;
 	static IsPlayInPreview(World: World): boolean;
 	static IsPlayInEditor(World: World): boolean;
 	static IsPendingKill(InActor: Actor): boolean;
 	static IsGeneratedByBlueprint(InClass: UnrealEngineClass): boolean;
 	static IsGameWorld(World: World): boolean;
-	static IsAsyncLoadComplete(Manager: JavascriptStreamableManager,Target: StringAssetReference): boolean;
+	static IsAsyncLoadComplete(Manager: JavascriptStreamableManager,Target: SoftObjectPath): boolean;
 	static HasUndo(Engine: Engine): boolean;
 	static HasAnyPackageFlags(Package: Package,Flags: number): boolean;
 	static HasAnyFlags(UObject: UObject,Flags: number): boolean;
 	static HandleSeamlessTravelPlayer(GameMode: GameModeBase,C?: Controller): {C: Controller};
+	static GetWorldBounds(InWorld: World): Box;
 	static GetSuperClasses(InClass: UnrealEngineClass): UnrealEngineClass[];
 	static GetStructProperties(StructName: string,bIncludeSuper: boolean): JavscriptProperty[];
 	static GetScriptResourceName(UNode: JavascriptProfileNode): string;
@@ -2022,7 +6754,7 @@ declare class JavascriptLibrary extends BlueprintFunctionLibrary {
 	static GetBailoutReason(UNode: JavascriptProfileNode): string;
 	static GetArchetypePathName(UObject: UObject): string;
 	static GetAllActorsOfClassAndTags(WorldContextObject: UObject,ActorClass: UnrealEngineClass,Tags_Accept: string[],Tags_Deny: string[],OutActors?: Actor[]): {OutActors: Actor[]};
-	static GenerateNavigation(world: World,NavData: RecastNavMesh): void;
+	static GenerateNavigation(InWorld: World,NavData: RecastNavMesh): void;
 	static FindPackage(InOuter: UObject,PackageName: string): Package;
 	static FindObjectWithOuter(Outer: UObject,ClassToLookFor: UnrealEngineClass,NameToLookFor: string): UObject;
 	static FileExists(Filename: string): boolean;
@@ -2033,15 +6765,15 @@ declare class JavascriptLibrary extends BlueprintFunctionLibrary {
 	static CreateStreamableManager(): JavascriptStreamableManager;
 	static CreateSocket(SocketType: string,Description: string,bForceUDP: boolean): JavascriptSocket;
 	static CreatePackage(Outer: UObject,PackageName: string): Package;
-	static CreateLogCategory(CategoryName: string,InDefaultVerbosity: InDefaultVerbosity): JavascriptLogCategory;
+	static CreateLogCategory(CategoryName: string,InDefaultVerbosity: ELogVerbosity_JS): JavascriptLogCategory;
 	static CreateInternetAddr(): JavascriptInternetAddr;
 	static CreateEnum(Outer: UObject,Name: string,DisplayNames: string[]): Enum;
 	static ClipboardPaste(): string;
-	static ClipboardCopy(String: string): void;
+	static ClipboardCopy(string: string): void;
 	static CallJS(UFunction: JavascriptFunction,CustomStruct: JavascriptStubStruct): void;
-	static AddMessage_int(Stat: JavascriptStat,InStatOperation: InStatOperation,Value: number,bIsCycle: boolean): void;
-	static AddMessage_float(Stat: JavascriptStat,InStatOperation: InStatOperation,Value: number,bIsCycle: boolean): void;
-	static AddMessage(Stat: JavascriptStat,InStatOperation: InStatOperation): void;
+	static AddMessage_int(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
+	static AddMessage_float(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
+	static AddMessage(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation): void;
 	static AddDynamicBinding(Outer: UnrealEngineClass,BindingObject: DynamicBlueprintBinding): void;
 	static Actor_GetWorld(Actor: Actor): World;
 	static C(Other: UObject | any): JavascriptLibrary;
@@ -2075,8 +6807,8 @@ declare class JavascriptOutputDevice extends UObject {
 	static Find(Outer: UObject, ResourceName: string): JavascriptOutputDevice;
 	static GetDefaultObject(): JavascriptOutputDevice;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptOutputDevice;
-	OnMessage(Message: string,Verbosity: Verbosity,Category: string): void;
-	static Log(Category: string,Verbosity: Verbosity,Filename: string,LineNumber: number,Message: string): void;
+	OnMessage(Message: string,Verbosity: ELogVerbosity_JS,Category: string): void;
+	static Log(Category: string,Verbosity: ELogVerbosity_JS,Filename: string,LineNumber: number,Message: string): void;
 	Kill(): void;
 	static C(Other: UObject | any): JavascriptOutputDevice;
 }
@@ -2090,6 +6822,7 @@ declare class JavascriptProcess extends UObject {
 	Wait(): void;
 	Terminate(KillTree: boolean): void;
 	static Sleep(Seconds: number): void;
+	static SimulateKeypress(KeyEvent: number): void;
 	static SetEnvironmentVar(VarName: string,VarValue: string): void;
 	ReadFromPipe(): string;
 	ReadArrayFromPipe(Array?: number[]): {Array: number[], $: boolean};
@@ -2200,6 +6933,7 @@ declare class JavascriptTestLibrary extends BlueprintFunctionLibrary {
 	static NewWorld(): World;
 	static InitializeActorsForPlay(World: World,URL: URL): void;
 	static DestroyWorld(World: World): void;
+	static DestroyUObject(UObject: UObject): void;
 	static Destroy(Test?: JavascriptAutomatedTestInstance): {Test: JavascriptAutomatedTestInstance};
 	static Create(Test: JavascriptAutomatedTest): JavascriptAutomatedTestInstance;
 	static ClearExecutionInfo(Test: JavascriptAutomatedTestInstance): void;
@@ -2211,19 +6945,6 @@ declare class JavascriptTestLibrary extends BlueprintFunctionLibrary {
 	static C(Other: UObject | any): JavascriptTestLibrary;
 }
 
-declare class InGameSceneAccessor extends UObject { 
-	static Load(ResourceName: string): InGameSceneAccessor;
-	static Find(Outer: UObject, ResourceName: string): InGameSceneAccessor;
-	static GetDefaultObject(): InGameSceneAccessor;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InGameSceneAccessor;
-	Tick(DeltaTime: number): void;
-	isBegunPlay(): boolean;
-	Initialize(): InGameSceneAccessor;
-	GetSceneWorld(): World;
-	Destroy(): void;
-	static C(Other: UObject | any): InGameSceneAccessor;
-}
-
 declare class JavascriptComboButton extends ContentWidget { 
 	ComboButtonStyle: ComboButtonStyle;
 	ButtonStyle: ButtonStyle;
@@ -2314,15 +7035,15 @@ declare class HeaderRowStyle extends SlateWidgetStyle {
 }
 
 declare class JavascriptColumn { 
-	Id: string;
+	ID: string;
 	Width: number;
 	Widget: Widget;
 	clone() : JavascriptColumn;
 	static C(Other: UObject | any): JavascriptColumn;
 }
 
-declare class JavascriptTreeView extends TableViewBase { 
-	OnGenerateRowEvent: UnrealEngineDelegate<(UObject: UObject, Id: string, Instance: JavascriptTreeView) => Widget>;
+declare class JavascriptTreeView extends ListViewBase { 
+	OnGenerateRowEvent: UnrealEngineDelegate<(UObject: UObject, ID: string, Instance: JavascriptTreeView) => Widget>;
 	OnExpansionChanged: UnrealEngineDelegate<(Item: UObject, bExpanded: boolean, Instance: JavascriptTreeView) => void>;
 	OnContextMenuOpening: UnrealEngineDelegate<(Instance: JavascriptTreeView) => Widget>;
 	OnGetChildren: UnrealEngineDelegate<(Item: UObject, Instance: JavascriptTreeView) => void>;
@@ -2342,11 +7063,15 @@ declare class JavascriptTreeView extends TableViewBase {
 	SetSingleExpandedItem(InItem: UObject): void;
 	SetSelection(SoleSelectedItem: UObject): void;
 	SetItemExpansion(InItem: UObject,InShouldExpandItem: boolean): void;
+	SetDoubleClickSelection(SelectedItem: UObject): void;
 	RequestTreeRefresh(): void;
 	OnSelectionChanged(UObject: UObject,Type: ESelectInfo): void;
 	OnDoubleClick(UObject: UObject): void;
 	IsItemExpanded(InItem: UObject): boolean;
-	GetSelectedItems(OutItems?: UObject[]): {OutItems: UObject[]};
+	IsDoubleClickSelection(SelectedItem: UObject): boolean;
+	GetSelectedItems(OutItems?: UObject[]): {OutItems: UObject[], $: boolean};
+	GetDoubleClickedItems(OutItems?: UObject[]): {OutItems: UObject[]};
+	ClearDoubleClickSelection(): void;
 	static C(Other: UObject | any): JavascriptTreeView;
 }
 
@@ -2356,16 +7081,14 @@ declare class JavascriptListView extends JavascriptTreeView {
 	static Find(Outer: UObject, ResourceName: string): JavascriptListView;
 	static GetDefaultObject(): JavascriptListView;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptListView;
-	SetSelection(SoleSelectedItem: UObject): void;
 	RequestListRefresh(): void;
 	OnClick(UObject: UObject): void;
-	GetSelectedItems(OutItems?: UObject[]): {OutItems: UObject[]};
 	static C(Other: UObject | any): JavascriptListView;
 }
 
 declare class JavascriptMenuContext extends UObject { 
 	Description: string;
-	ToolTip: string;
+	Tooltip: string;
 	Icon: JavascriptSlateIcon;
 	OnCanExecute: UnrealEngineDelegate<() => boolean>;
 	OnExecute: UnrealEngineDelegate<() => void>;
@@ -2376,8 +7099,8 @@ declare class JavascriptMenuContext extends UObject {
 	static C(Other: UObject | any): JavascriptMenuContext;
 }
 
-declare type EJavasrciptUserInterfaceActionType = 'None' | 'Button' | 'ToggleButton' | 'RadioButton' | 'Check' | 'CollapsedButton';
-declare var EJavasrciptUserInterfaceActionType : { None:'None',Button:'Button',ToggleButton:'ToggleButton',RadioButton:'RadioButton',Check:'Check',CollapsedButton:'CollapsedButton', };
+declare type EJavasrciptUserInterfaceActionType = 'None' | 'Button' | 'ToggleButton' | 'RadioButton' | 'Check' | 'CollapsedButton' | 'EJavasrciptUserInterfaceActionType_MAX';
+declare var EJavasrciptUserInterfaceActionType : { None:'None',Button:'Button',ToggleButton:'ToggleButton',RadioButton:'RadioButton',Check:'Check',CollapsedButton:'CollapsedButton',EJavasrciptUserInterfaceActionType_MAX:'EJavasrciptUserInterfaceActionType_MAX', };
 declare class JavascriptUICommandInfo { 
 	clone() : JavascriptUICommandInfo;
 	static C(Other: UObject | any): JavascriptUICommandInfo;
@@ -2385,7 +7108,7 @@ declare class JavascriptUICommandInfo {
 }
 
 declare class JavascriptUICommand { 
-	Id: string;
+	ID: string;
 	FriendlyName: string;
 	Description: string;
 	DefaultChord: InputChord;
@@ -2399,14 +7122,14 @@ declare class JavascriptBindingContext {
 	clone() : JavascriptBindingContext;
 	static C(Other: UObject | any): JavascriptBindingContext;
 	Destroy(): void;
-	UI_COMMAND_Function(Command: JavascriptUICommand): JavascriptUICommandInfo;
+	UI_COMMAND_Function(Command: JavascriptUICommand,InTextSubNamespace: string): JavascriptUICommandInfo;
 	static Destroy(Context: JavascriptBindingContext): void;
-	static UI_COMMAND_Function(This: JavascriptBindingContext,Command: JavascriptUICommand): JavascriptUICommandInfo;
+	static UI_COMMAND_Function(This: JavascriptBindingContext,Command: JavascriptUICommand,InTextSubNamespace: string): JavascriptUICommandInfo;
 	static NewBindingContext(InContextName: string,InContextDesc: string,InContextParent: string,InStyleSetName: string): JavascriptBindingContext;
 }
 
-declare type EJavascriptExtensionHook = 'Before' | 'After' | 'First';
-declare var EJavascriptExtensionHook : { Before:'Before',After:'After',First:'First', };
+declare type EJavascriptExtensionHook = 'Before' | 'After' | 'First' | 'EJavascriptExtensionHook_MAX';
+declare var EJavascriptExtensionHook : { Before:'Before',After:'After',First:'First',EJavascriptExtensionHook_MAX:'EJavascriptExtensionHook_MAX', };
 declare class JavascriptUICommandList { 
 	clone() : JavascriptUICommandList;
 	static C(Other: UObject | any): JavascriptUICommandList;
@@ -2429,6 +7152,23 @@ declare class JavascriptExtensionBase {
 	static C(Other: UObject | any): JavascriptExtensionBase;
 }
 
+declare class JavascriptToolbarButtonContext extends UObject { 
+	OnGetLabel: UnrealEngineDelegate<() => string>;
+	OnGetTooltip: UnrealEngineDelegate<() => string>;
+	OnGetIcon: UnrealEngineDelegate<() => JavascriptSlateIcon>;
+	OnExecuteAction: UnrealEngineDelegate<(EditingObject: UObject) => void>;
+	OnCanExecuteAction: UnrealEngineDelegate<(EditingObject: UObject) => boolean>;
+	OnIsActionChecked: UnrealEngineDelegate<(EditingObject: UObject) => boolean>;
+	OnIsActionButtonVisible: UnrealEngineDelegate<(EditingObject: UObject) => boolean>;
+	static Load(ResourceName: string): JavascriptToolbarButtonContext;
+	static Find(Outer: UObject, ResourceName: string): JavascriptToolbarButtonContext;
+	static GetDefaultObject(): JavascriptToolbarButtonContext;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptToolbarButtonContext;
+	UnmarkReferencedObject(): void;
+	MarkReferencedObject(): void;
+	static C(Other: UObject | any): JavascriptToolbarButtonContext;
+}
+
 declare class JavascriptMenuBuilder { 
 	clone() : JavascriptMenuBuilder;
 	static C(Other: UObject | any): JavascriptMenuBuilder;
@@ -2437,6 +7177,7 @@ declare class JavascriptMenuBuilder {
 	AddPullDownMenu(InMenuLabel?: string,InToolTip?: string,InPullDownMenu?: JavascriptFunction,InExtensionHook?: string,InTutorialHighlightName?: string): {MenuBuilder: JavascriptMenuBuilder};
 	AddSeparator(): {Builder: JavascriptMenuBuilder};
 	AddToolBarButton(CommandInfo?: JavascriptUICommandInfo): {Builder: JavascriptMenuBuilder};
+	AddToolBarButtonByContext(Context?: JavascriptToolbarButtonContext,EditingObject?: UObject): {Builder: JavascriptMenuBuilder};
 	AddWidget(Widget?: Widget,Label?: string,bNoIndent?: boolean,InTutorialHighlightName?: string,bSearchable?: boolean): {Builder: JavascriptMenuBuilder};
 	BeginSection(InExtensionHook?: string): {Builder: JavascriptMenuBuilder};
 	EndSection(): {Builder: JavascriptMenuBuilder};
@@ -2447,6 +7188,7 @@ declare class JavascriptMenuBuilder {
 	static AddPullDownMenu(MenuBuilder?: JavascriptMenuBuilder,InMenuLabel?: string,InToolTip?: string,InPullDownMenu?: JavascriptFunction,InExtensionHook?: string,InTutorialHighlightName?: string): {MenuBuilder: JavascriptMenuBuilder};
 	static AddSeparator(Builder?: JavascriptMenuBuilder): {Builder: JavascriptMenuBuilder};
 	static AddToolBarButton(Builder?: JavascriptMenuBuilder,CommandInfo?: JavascriptUICommandInfo): {Builder: JavascriptMenuBuilder};
+	static AddToolBarButtonByContext(Builder?: JavascriptMenuBuilder,Context?: JavascriptToolbarButtonContext,EditingObject?: UObject): {Builder: JavascriptMenuBuilder};
 	static AddWidget(Builder?: JavascriptMenuBuilder,Widget?: Widget,Label?: string,bNoIndent?: boolean,InTutorialHighlightName?: string,bSearchable?: boolean): {Builder: JavascriptMenuBuilder};
 	static BeginSection(Builder?: JavascriptMenuBuilder,InExtensionHook?: string): {Builder: JavascriptMenuBuilder};
 	static EndSection(Builder?: JavascriptMenuBuilder): {Builder: JavascriptMenuBuilder};
@@ -2475,7 +7217,7 @@ declare class JavascriptMenuLibrary extends BlueprintFunctionLibrary {
 	static Find(Outer: UObject, ResourceName: string): JavascriptMenuLibrary;
 	static GetDefaultObject(): JavascriptMenuLibrary;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptMenuLibrary;
-	static UI_COMMAND_Function(This: JavascriptBindingContext,Command: JavascriptUICommand): JavascriptUICommandInfo;
+	static UI_COMMAND_Function(This: JavascriptBindingContext,Command: JavascriptUICommand,InTextSubNamespace: string): JavascriptUICommandInfo;
 	static RemoveExtension(Extender: JavascriptExtender,Extension: JavascriptExtensionBase): void;
 	static PushCommandList(Builder?: JavascriptMenuBuilder,List?: JavascriptUICommandList): {Builder: JavascriptMenuBuilder};
 	static ProcessCommandBindings_PointerEvent(CommandList: JavascriptUICommandList,InMouseEvent: UPointerEvent): boolean;
@@ -2494,6 +7236,7 @@ declare class JavascriptMenuLibrary extends BlueprintFunctionLibrary {
 	static Apply(Extender: JavascriptExtender,ExtensionHook: string,HookPosition: EJavascriptExtensionHook,MenuBuilder?: JavascriptMenuBuilder): {MenuBuilder: JavascriptMenuBuilder};
 	static AddWidget(Builder?: JavascriptMenuBuilder,Widget?: Widget,Label?: string,bNoIndent?: boolean,InTutorialHighlightName?: string,bSearchable?: boolean): {Builder: JavascriptMenuBuilder};
 	static AddToolBarExtension(Extender: JavascriptExtender,ExtensionHook: string,HookPosition: EJavascriptExtensionHook,CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): JavascriptExtensionBase;
+	static AddToolBarButtonByContext(Builder?: JavascriptMenuBuilder,Context?: JavascriptToolbarButtonContext,EditingObject?: UObject): {Builder: JavascriptMenuBuilder};
 	static AddToolBarButton(Builder?: JavascriptMenuBuilder,CommandInfo?: JavascriptUICommandInfo): {Builder: JavascriptMenuBuilder};
 	static AddSeparator(Builder?: JavascriptMenuBuilder): {Builder: JavascriptMenuBuilder};
 	static AddPullDownMenu(MenuBuilder?: JavascriptMenuBuilder,InMenuLabel?: string,InToolTip?: string,InPullDownMenu?: JavascriptFunction,InExtensionHook?: string,InTutorialHighlightName?: string): {MenuBuilder: JavascriptMenuBuilder};
@@ -2505,14 +7248,14 @@ declare class JavascriptMenuLibrary extends BlueprintFunctionLibrary {
 }
 
 declare class JavascriptMultiBox extends Widget { 
-	OnHook: UnrealEngineDelegate<(Id: string, Self: JavascriptMultiBox, CurrentBuilder: JavascriptMenuBuilder) => void>;
+	OnHook: UnrealEngineDelegate<(ID: string, Self: JavascriptMultiBox, CurrentBuilder: JavascriptMenuBuilder) => void>;
 	static Load(ResourceName: string): JavascriptMultiBox;
 	static Find(Outer: UObject, ResourceName: string): JavascriptMultiBox;
 	static GetDefaultObject(): JavascriptMultiBox;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptMultiBox;
 	static Bind(Builder: JavascriptMenuBuilder): void;
-	AddSubMenu(Builder?: JavascriptMenuBuilder,Id?: string,Label?: string,ToolTip?: string,bInOpenSubMenuOnClick?: boolean): {Builder: JavascriptMenuBuilder};
-	AddPullDownMenu(Builder?: JavascriptMenuBuilder,Id?: string,Label?: string,ToolTip?: string): {Builder: JavascriptMenuBuilder};
+	AddSubMenu(Builder?: JavascriptMenuBuilder,ID?: string,Label?: string,Tooltip?: string,bInOpenSubMenuOnClick?: boolean): {Builder: JavascriptMenuBuilder};
+	AddPullDownMenu(Builder?: JavascriptMenuBuilder,ID?: string,Label?: string,Tooltip?: string): {Builder: JavascriptMenuBuilder};
 	static C(Other: UObject | any): JavascriptMultiBox;
 }
 
@@ -2526,7 +7269,7 @@ declare class JavascriptTextModel extends UObject {
 	static Find(Outer: UObject, ResourceName: string): JavascriptTextModel;
 	static GetDefaultObject(): JavascriptTextModel;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptTextModel;
-	SetString(String: string): void;
+	SetString(string: string): void;
 	GetString(): string;
 	CreateRun(MessageTextStyle: TextBlockStyle,BeginIndex: number,EndIndex: number): JavascriptSlateTextRun;
 	static C(Other: UObject | any): JavascriptTextModel;
@@ -2572,9 +7315,9 @@ declare class JavascriptRichTextBlockHyperlinkDecorator extends RichTextBlockDec
 }
 
 declare class JavascriptSearchBox extends Widget { 
-	OnTextChanged: UnrealEngineMulticastDelegate<(Text: string) => void>;
-	OnTextCommitted: UnrealEngineMulticastDelegate<(Text: string, CommitMethod: ETextCommit) => void>;
-	Text: string;
+	OnTextChanged: UnrealEngineMulticastDelegate<(text: string) => void>;
+	OnTextCommitted: UnrealEngineMulticastDelegate<(text: string, CommitMethod: ETextCommit) => void>;
+	text: string;
 	TextDelegate: UnrealEngineDelegate<() => string>;
 	HintText: string;
 	HintTextDelegate: UnrealEngineDelegate<() => string>;
@@ -2602,6 +7345,7 @@ declare class JavascriptStyleSet {
 	GetFloat(StyleName: string): number;
 	GetFontStyle(StyleName: string): SlateFontInfo;
 	GetMargin(StyleName: string): Margin;
+	GetProgressBarStyle(StyleName: string): ProgressBarStyle;
 	GetSlateColor(StyleName: string): SlateColor;
 	GetSound(StyleName: string): SlateSound;
 	GetTextBlockStyle(StyleName: string): TextBlockStyle;
@@ -2617,6 +7361,7 @@ declare class JavascriptStyleSet {
 	static GetFloat(Handle: JavascriptStyleSet,StyleName: string): number;
 	static GetFontStyle(Handle: JavascriptStyleSet,StyleName: string): SlateFontInfo;
 	static GetMargin(Handle: JavascriptStyleSet,StyleName: string): Margin;
+	static GetProgressBarStyle(Handle: JavascriptStyleSet,StyleName: string): ProgressBarStyle;
 	static GetSlateColor(Handle: JavascriptStyleSet,StyleName: string): SlateColor;
 	static GetSound(Handle: JavascriptStyleSet,StyleName: string): SlateSound;
 	static GetTextBlockStyle(Handle: JavascriptStyleSet,StyleName: string): TextBlockStyle;
@@ -2633,6 +7378,7 @@ declare class JavascriptStyleSetLibrary extends BlueprintFunctionLibrary {
 	CheckBoxStyle: CheckBoxStyle;
 	ComboBoxStyle: ComboBoxStyle;
 	ComboButtonStyle: ComboButtonStyle;
+	ProgressBarStyle: ProgressBarStyle;
 	static Load(ResourceName: string): JavascriptStyleSetLibrary;
 	static Find(Outer: UObject, ResourceName: string): JavascriptStyleSetLibrary;
 	static GetDefaultObject(): JavascriptStyleSetLibrary;
@@ -2641,6 +7387,7 @@ declare class JavascriptStyleSetLibrary extends BlueprintFunctionLibrary {
 	static GetTextBlockStyle(Handle: JavascriptStyleSet,StyleName: string): TextBlockStyle;
 	static GetSound(Handle: JavascriptStyleSet,StyleName: string): SlateSound;
 	static GetSlateColor(Handle: JavascriptStyleSet,StyleName: string): SlateColor;
+	static GetProgressBarStyle(Handle: JavascriptStyleSet,StyleName: string): ProgressBarStyle;
 	static GetMargin(Handle: JavascriptStyleSet,StyleName: string): Margin;
 	static GetFontStyle(Handle: JavascriptStyleSet,StyleName: string): SlateFontInfo;
 	static GetFloat(Handle: JavascriptStyleSet,StyleName: string): number;
@@ -2679,15 +7426,16 @@ declare class JavascriptTileView extends TileView {
 }
 
 declare class JavascriptUICommands extends UObject { 
-	OnExecuteAction: UnrealEngineDelegate<(Id: string) => void>;
-	OnCanExecuteAction: UnrealEngineDelegate<(Id: string) => boolean>;
-	OnIsActionChecked: UnrealEngineDelegate<(Id: string) => boolean>;
-	OnIsActionButtonVisible: UnrealEngineDelegate<(Id: string) => boolean>;
+	OnExecuteAction: UnrealEngineDelegate<(ID: string) => void>;
+	OnCanExecuteAction: UnrealEngineDelegate<(ID: string) => boolean>;
+	OnIsActionChecked: UnrealEngineDelegate<(ID: string) => boolean>;
+	OnIsActionButtonVisible: UnrealEngineDelegate<(ID: string) => boolean>;
 	Commands: JavascriptUICommand[];
 	ContextName: string;
 	ContextDesc: string;
 	ContextNameParent: string;
 	StyleSetName: string;
+	TextSubNamespace: string;
 	CommandInfos: JavascriptUICommandInfo[];
 	BindingContext: JavascriptBindingContext;
 	static Load(ResourceName: string): JavascriptUICommands;
@@ -2698,7 +7446,7 @@ declare class JavascriptUICommands extends UObject {
 	Unbind(List: JavascriptUICommandList): void;
 	Refresh(): void;
 	Initialize(): void;
-	GetAction(Id: string): JavascriptUICommandInfo;
+	GetAction(ID: string): JavascriptUICommandInfo;
 	Discard(): void;
 	Commit(): void;
 	static BroadcastCommandsChanged(InContextName: string): void;
@@ -2756,6 +7504,7 @@ declare class JavascriptUMGLibrary extends BlueprintFunctionLibrary {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptUMGLibrary;
 	static Unregister(StyleSet: JavascriptSlateStyle): void;
 	static TakeWidget(Widget: Widget): JavascriptSlateWidget;
+	static ShowWindow(NewWindow: JavascriptSlateWidget): void;
 	static SetCoreContentRoot(StyleSet: JavascriptSlateStyle,InCoreContentRootDir: string): void;
 	static SetContentRoot(StyleSet: JavascriptSlateStyle,InContentRootDir: string): void;
 	static SetContent(TargetWidget: NativeWidgetHost,SlateWidget: JavascriptSlateWidget): Widget;
@@ -2774,9 +7523,19 @@ declare class JavascriptUMGLibrary extends BlueprintFunctionLibrary {
 	static C(Other: UObject | any): JavascriptUMGLibrary;
 }
 
+declare class JavascriptUserObjectListEntry extends UserWidget { 
+	Item: UObject;
+	static Load(ResourceName: string): JavascriptUserObjectListEntry;
+	static Find(Outer: UObject, ResourceName: string): JavascriptUserObjectListEntry;
+	static GetDefaultObject(): JavascriptUserObjectListEntry;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptUserObjectListEntry;
+	static C(Other: UObject | any): JavascriptUserObjectListEntry;
+}
+
 declare class JavascriptWidget extends UserWidget { 
 	JavascriptContext: JavascriptContext;
 	OnInputActionEvent: UnrealEngineMulticastDelegate<(ActionName: string) => void>;
+	OnReleaseActionEvent: UnrealEngineMulticastDelegate<(ActionName: string) => void>;
 	OnInputAxisEvent: UnrealEngineMulticastDelegate<(Axis: number, AxisName: string) => void>;
 	OnDestroy: UnrealEngineMulticastDelegate<(bReleaseChildren: boolean) => void>;
 	ContentSlot: PanelSlot;
@@ -2786,6 +7545,7 @@ declare class JavascriptWidget extends UserWidget {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptWidget;
 	SetRootWidget(Widget: Widget): void;
 	RemoveChild(): boolean;
+	OnReleaseInputActionByName(ActionName: string): void;
 	OnListenForInputAxis(AxisName: string,EventType: EInputEvent,bConsume: boolean): void;
 	OnListenForInputAction(ActionName: string,EventType: EInputEvent,bConsume: boolean): void;
 	OnInputAxisByName(Axis: number,ActionName: string): void;
@@ -2796,8 +7556,8 @@ declare class JavascriptWidget extends UserWidget {
 	static C(Other: UObject | any): JavascriptWidget;
 }
 
-declare type EJavascriptWindowType = 'Normal' | 'Menu' | 'ToolTip' | 'Notification' | 'CursorDecorator';
-declare var EJavascriptWindowType : { Normal:'Normal',Menu:'Menu',ToolTip:'ToolTip',Notification:'Notification',CursorDecorator:'CursorDecorator', };
+declare type EJavascriptWindowType = 'Normal' | 'Menu' | 'ToolTip' | 'Notification' | 'CursorDecorator' | 'EJavascriptWindowType_MAX';
+declare var EJavascriptWindowType : { Normal:'Normal',Menu:'Menu',ToolTip:'ToolTip',Notification:'Notification',CursorDecorator:'CursorDecorator',EJavascriptWindowType_MAX:'EJavascriptWindowType_MAX', };
 declare class WindowStyle extends SlateWidgetStyle { 
 	MinimizeButtonStyle: ButtonStyle;
 	MaximizeButtonStyle: ButtonStyle;
@@ -2817,24 +7577,24 @@ declare class WindowStyle extends SlateWidgetStyle {
 	static C(Other: UObject | any): WindowStyle;
 }
 
-declare type EJavascriptAutoCenter = 'None' | 'PrimaryWorkArea' | 'PreferredWorkArea';
-declare var EJavascriptAutoCenter : { None:'None',PrimaryWorkArea:'PrimaryWorkArea',PreferredWorkArea:'PreferredWorkArea', };
-declare type EJavascriptWindowTransparency = 'None' | 'PerWindow';
-declare var EJavascriptWindowTransparency : { None:'None',PerWindow:'PerWindow', };
-declare type EJavascriptSizingRule = 'FixedSize' | 'Autosized' | 'UserSized';
-declare var EJavascriptSizingRule : { FixedSize:'FixedSize',Autosized:'Autosized',UserSized:'UserSized', };
+declare type EJavascriptAutoCenter = 'None' | 'PrimaryWorkArea' | 'PreferredWorkArea' | 'EJavascriptAutoCenter_MAX';
+declare var EJavascriptAutoCenter : { None:'None',PrimaryWorkArea:'PrimaryWorkArea',PreferredWorkArea:'PreferredWorkArea',EJavascriptAutoCenter_MAX:'EJavascriptAutoCenter_MAX', };
+declare type EJavascriptWindowTransparency = 'None' | 'PerWindow' | 'EJavascriptWindowTransparency_MAX';
+declare var EJavascriptWindowTransparency : { None:'None',PerWindow:'PerWindow',EJavascriptWindowTransparency_MAX:'EJavascriptWindowTransparency_MAX', };
+declare type EJavascriptSizingRule = 'FixedSize' | 'Autosized' | 'UserSized' | 'EJavascriptSizingRule_MAX';
+declare var EJavascriptSizingRule : { FixedSize:'FixedSize',Autosized:'Autosized',UserSized:'UserSized',EJavascriptSizingRule_MAX:'EJavascriptSizingRule_MAX', };
 declare class JavascriptWindow extends ContentWidget { 
-	Type: Type;
+	Type: EJavascriptWindowType;
 	Style: WindowStyle;
 	Title: string;
 	bDragAnywhere: boolean;
-	AutoCenter: AutoCenter;
+	AutoCenter: EJavascriptAutoCenter;
 	ScreenPosition: Vector2D;
 	ClientSize: Vector2D;
-	SupportsTransparency: SupportsTransparency;
+	SupportsTransparency: EJavascriptWindowTransparency;
 	InitialOpacity: number;
 	IsInitiallyMaximized: boolean;
-	SizingRule: SizingRule;
+	SizingRule: EJavascriptSizingRule;
 	IsPopupWindow: boolean;
 	FocusWhenFirstShown: boolean;
 	ActivateWhenFirstShown: boolean;
@@ -2862,10 +7622,12 @@ declare class JavascriptWindow extends ContentWidget {
 	DestroyWindowImmediately(): void;
 	BringToFront(): void;
 	static C(Other: UObject | any): JavascriptWindow;
+	OpenFileDialog(DialogTitle: string,DefaultPath: string,DefaultFile: string,FileTypes: string,Flags: number,OutFilenames?: string[]): {OutFilenames: string[], $: boolean};
+	static OpenFileDialog(WindowHandle: JavascriptWindow,DialogTitle: string,DefaultPath: string,DefaultFile: string,FileTypes: string,Flags: number,OutFilenames?: string[]): {OutFilenames: string[], $: boolean};
 }
 
-declare type EJavascriptHttpRequestStatus = 'NotStarted' | 'Processing' | 'Failed' | 'Succeeded';
-declare var EJavascriptHttpRequestStatus : { NotStarted:'NotStarted',Processing:'Processing',Failed:'Failed',Succeeded:'Succeeded', };
+declare type EJavascriptHttpRequestStatus = 'NotStarted' | 'Processing' | 'Failed' | 'Succeeded' | 'EJavascriptHttpRequestStatus_MAX';
+declare var EJavascriptHttpRequestStatus : { NotStarted:'NotStarted',Processing:'Processing',Failed:'Failed',Succeeded:'Succeeded',EJavascriptHttpRequestStatus_MAX:'EJavascriptHttpRequestStatus_MAX', };
 declare class JavascriptHttpRequest extends UObject { 
 	OnComplete: UnrealEngineDelegate<(successful: boolean) => void>;
 	OnProgress: UnrealEngineDelegate<(sent: number, recv: number) => void>;
@@ -2876,6 +7638,7 @@ declare class JavascriptHttpRequest extends UObject {
 	SetVerb(Verb: string): void;
 	SetURL(URL: string): void;
 	SetHeader(HeaderName: string,HeaderValue: string): void;
+	SetContentWithFiles(FilePaths: string[],Boundary: string,Content: string): void;
 	SetContentFromMemory(): void;
 	SetContentAsString(ContentString: string): void;
 	ProcessRequest(): boolean;
@@ -2924,15 +7687,15 @@ declare class JavascriptWebSocketServer extends UObject {
 	static C(Other: UObject | any): JavascriptWebSocketServer;
 }
 
-declare type EMeshPaintColorViewMode = 'Normal' | 'RGB' | 'Alpha' | 'Red' | 'Green' | 'Blue';
-declare var EMeshPaintColorViewMode : { Normal:'Normal',RGB:'RGB',Alpha:'Alpha',Red:'Red',Green:'Green',Blue:'Blue', };
+declare type EMeshPaintColorViewMode = 'Normal' | 'RGB' | 'Alpha' | 'Red' | 'Green' | 'Blue' | 'EMeshPaintColorViewMode_MAX';
+declare var EMeshPaintColorViewMode : { Normal:'Normal',RGB:'RGB',Alpha:'Alpha',Red:'Red',Green:'Green',Blue:'Blue',EMeshPaintColorViewMode_MAX:'EMeshPaintColorViewMode_MAX', };
 declare class PaintBrushSettings extends UObject { 
 	BrushRadius: number;
 	BrushStrength: number;
 	BrushFalloffAmount: number;
 	bEnableFlow: boolean;
 	bOnlyFrontFacingTriangles: boolean;
-	ColorViewMode: ColorViewMode;
+	ColorViewMode: EMeshPaintColorViewMode;
 	static Load(ResourceName: string): PaintBrushSettings;
 	static Find(Outer: UObject, ResourceName: string): PaintBrushSettings;
 	static GetDefaultObject(): PaintBrushSettings;
@@ -2941,6 +7704,7 @@ declare class PaintBrushSettings extends UObject {
 }
 
 declare class MeshPaintSettings extends UObject { 
+	VertexPreviewSize: number;
 	static Load(ResourceName: string): MeshPaintSettings;
 	static Find(Outer: UObject, ResourceName: string): MeshPaintSettings;
 	static GetDefaultObject(): MeshPaintSettings;
@@ -2974,10 +7738,10 @@ declare class FlipbookEditorSettings extends UObject {
 	static C(Other: UObject | any): FlipbookEditorSettings;
 }
 
-declare type ESpriteExtractMode = 'Auto' | 'Grid';
-declare var ESpriteExtractMode : { Auto:'Auto',Grid:'Grid', };
+declare type ESpriteExtractMode = 'Auto' | 'Grid' | 'ESpriteExtractMode_MAX';
+declare var ESpriteExtractMode : { Auto:'Auto',Grid:'Grid',ESpriteExtractMode_MAX:'ESpriteExtractMode_MAX', };
 declare class PaperExtractSpritesSettings extends UObject { 
-	SpriteExtractMode: SpriteExtractMode;
+	SpriteExtractMode: ESpriteExtractMode;
 	OutlineColor: LinearColor;
 	ViewportTextureTint: LinearColor;
 	BackgroundColor: LinearColor;
@@ -3048,12 +7812,12 @@ declare class PaperImporterSettings extends UObject {
 	DefaultSpriteTextureGroup: TextureGroup;
 	bOverrideTextureCompression: boolean;
 	DefaultSpriteTextureCompression: TextureCompressionSettings;
-	UnlitDefaultMaskedMaterialName: StringAssetReference;
-	UnlitDefaultTranslucentMaterialName: StringAssetReference;
-	UnlitDefaultOpaqueMaterialName: StringAssetReference;
-	LitDefaultMaskedMaterialName: StringAssetReference;
-	LitDefaultTranslucentMaterialName: StringAssetReference;
-	LitDefaultOpaqueMaterialName: StringAssetReference;
+	UnlitDefaultMaskedMaterialName: SoftObjectPath;
+	UnlitDefaultTranslucentMaterialName: SoftObjectPath;
+	UnlitDefaultOpaqueMaterialName: SoftObjectPath;
+	LitDefaultMaskedMaterialName: SoftObjectPath;
+	LitDefaultTranslucentMaterialName: SoftObjectPath;
+	LitDefaultOpaqueMaterialName: SoftObjectPath;
 	static Load(ResourceName: string): PaperImporterSettings;
 	static Find(Outer: UObject, ResourceName: string): PaperImporterSettings;
 	static GetDefaultObject(): PaperImporterSettings;
@@ -3164,134 +7928,48 @@ declare class TileMapAssetImportData extends AssetImportData {
 declare class TileMapEditorSettings extends UObject { 
 	DefaultBackgroundColor: Color;
 	bShowGridByDefault: boolean;
-	static Load(ResourceName: string): TileMapEditorSettings;
-	static Find(Outer: UObject, ResourceName: string): TileMapEditorSettings;
-	static GetDefaultObject(): TileMapEditorSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileMapEditorSettings;
-	static C(Other: UObject | any): TileMapEditorSettings;
-}
-
-declare class TileSetEditorSettings extends UObject { 
-	DefaultBackgroundColor: Color;
-	bShowGridByDefault: boolean;
-	ExtrusionAmount: number;
-	bPadToPowerOf2: boolean;
-	bFillWithTransparentBlack: boolean;
-	static Load(ResourceName: string): TileSetEditorSettings;
-	static Find(Outer: UObject, ResourceName: string): TileSetEditorSettings;
-	static GetDefaultObject(): TileSetEditorSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileSetEditorSettings;
-	static C(Other: UObject | any): TileSetEditorSettings;
-}
-
-declare class TileSheetPaddingFactory extends Factory { 
-	SourceTileSet: PaperTileSet;
-	ExtrusionAmount: number;
-	bPadToPowerOf2: boolean;
-	bFillWithTransparentBlack: boolean;
-	static Load(ResourceName: string): TileSheetPaddingFactory;
-	static Find(Outer: UObject, ResourceName: string): TileSheetPaddingFactory;
-	static GetDefaultObject(): TileSheetPaddingFactory;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileSheetPaddingFactory;
-	static C(Other: UObject | any): TileSheetPaddingFactory;
-}
-
-declare class InternationalizationExportSettings extends UObject { 
-	CulturesToGenerate: string[];
-	CommandletClass: string;
-	SourcePath: string;
-	DestinationPath: string;
-	PortableObjectName: string;
-	ManifestName: string;
-	ArchiveName: string;
-	bExportLoc: boolean;
-	bImportLoc: boolean;
-	bUseCultureDirectory: boolean;
-	static Load(ResourceName: string): InternationalizationExportSettings;
-	static Find(Outer: UObject, ResourceName: string): InternationalizationExportSettings;
-	static GetDefaultObject(): InternationalizationExportSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InternationalizationExportSettings;
-	static C(Other: UObject | any): InternationalizationExportSettings;
-}
-
-declare class TranslationPickerSettings extends UObject { 
-	bSubmitTranslationPickerChangesToLocalizationService: boolean;
-	static Load(ResourceName: string): TranslationPickerSettings;
-	static Find(Outer: UObject, ResourceName: string): TranslationPickerSettings;
-	static GetDefaultObject(): TranslationPickerSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TranslationPickerSettings;
-	static C(Other: UObject | any): TranslationPickerSettings;
-}
-
-declare class TranslationChange { 
-	Version: string;
-	DateAndTime: DateTime;
-	Source: string;
-	Translation: string;
-	clone() : TranslationChange;
-	static C(Other: UObject | any): TranslationChange;
-}
-
-declare class TranslationContextInfo { 
-	Key: string;
-	Context: string;
-	Changes: TranslationChange[];
-	clone() : TranslationContextInfo;
-	static C(Other: UObject | any): TranslationContextInfo;
-}
-
-declare class TranslationUnit extends UObject { 
-	Namespace: string;
-	Key: string;
-	Source: string;
-	Translation: string;
-	Contexts: TranslationContextInfo[];
-	HasBeenReviewed: boolean;
-	TranslationBeforeImport: string;
-	LocresPath: string;
-	static Load(ResourceName: string): TranslationUnit;
-	static Find(Outer: UObject, ResourceName: string): TranslationUnit;
-	static GetDefaultObject(): TranslationUnit;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TranslationUnit;
-	static C(Other: UObject | any): TranslationUnit;
-}
-
-declare class PixelInspectorView extends UObject { 
-	FinalColor: LinearColor;
-	SceneColor: LinearColor;
-	Luminance: number;
-	HdrColor: LinearColor;
-	Normal: Vector;
-	PerObjectGBufferData: number;
-	Metallic: number;
-	Specular: number;
-	Roughness: number;
-	MaterialShadingModel: EMaterialShadingModel;
-	SelectiveOutputMask: number;
-	BaseColor: LinearColor;
-	IndirectIrradiance: number;
-	AmbientOcclusion: number;
-	SubSurfaceColor: LinearColor;
-	SubsurfaceProfile: Vector;
-	Opacity: number;
-	ClearCoat: number;
-	ClearCoatRoughness: number;
-	WorldNormal: Vector;
-	BackLit: number;
-	Cloth: number;
-	EyeTangent: Vector;
-	IrisMask: number;
-	IrisDistance: number;
-	static Load(ResourceName: string): PixelInspectorView;
-	static Find(Outer: UObject, ResourceName: string): PixelInspectorView;
-	static GetDefaultObject(): PixelInspectorView;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PixelInspectorView;
-	static C(Other: UObject | any): PixelInspectorView;
+	DefaultTileGridColor: Color;
+	DefaultMultiTileGridColor: Color;
+	DefaultMultiTileGridWidth: number;
+	DefaultMultiTileGridHeight: number;
+	DefaultMultiTileGridOffsetX: number;
+	DefaultMultiTileGridOffsetY: number;
+	DefaultLayerGridColor: Color;
+	static Load(ResourceName: string): TileMapEditorSettings;
+	static Find(Outer: UObject, ResourceName: string): TileMapEditorSettings;
+	static GetDefaultObject(): TileMapEditorSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileMapEditorSettings;
+	static C(Other: UObject | any): TileMapEditorSettings;
+}
+
+declare class TileSetEditorSettings extends UObject { 
+	DefaultBackgroundColor: Color;
+	bShowGridByDefault: boolean;
+	ExtrusionAmount: number;
+	bPadToPowerOf2: boolean;
+	bFillWithTransparentBlack: boolean;
+	static Load(ResourceName: string): TileSetEditorSettings;
+	static Find(Outer: UObject, ResourceName: string): TileSetEditorSettings;
+	static GetDefaultObject(): TileSetEditorSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileSetEditorSettings;
+	static C(Other: UObject | any): TileSetEditorSettings;
+}
+
+declare class TileSheetPaddingFactory extends Factory { 
+	SourceTileSet: PaperTileSet;
+	ExtrusionAmount: number;
+	bPadToPowerOf2: boolean;
+	bFillWithTransparentBlack: boolean;
+	static Load(ResourceName: string): TileSheetPaddingFactory;
+	static Find(Outer: UObject, ResourceName: string): TileSheetPaddingFactory;
+	static GetDefaultObject(): TileSheetPaddingFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileSheetPaddingFactory;
+	static C(Other: UObject | any): TileSheetPaddingFactory;
 }
 
 declare class PaperSpriteSheet extends UObject { 
 	SpriteNames: string[];
-	Sprites: any[];
+	Sprites: PaperSprite[];
 	TextureName: string;
 	Texture: Texture2D;
 	NormalMapTextureName: string;
@@ -3336,6 +8014,15 @@ declare class LightPropagationVolumeBlendableFactory extends Factory {
 	static C(Other: UObject | any): LightPropagationVolumeBlendableFactory;
 }
 
+declare class LayersBlueprintLibrary extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): LayersBlueprintLibrary;
+	static Find(Outer: UObject, ResourceName: string): LayersBlueprintLibrary;
+	static GetDefaultObject(): LayersBlueprintLibrary;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LayersBlueprintLibrary;
+	static GetActors(WorldContextObject: UObject,ActorLayer: ActorLayer): Actor[];
+	static C(Other: UObject | any): LayersBlueprintLibrary;
+}
+
 declare class MyPluginStruct { 
 	TestString: string;
 	clone() : MyPluginStruct;
@@ -3351,6 +8038,846 @@ declare class MyPluginObject extends UObject {
 	static C(Other: UObject | any): MyPluginObject;
 }
 
+declare class CryptoKeysCommandlet extends Commandlet { 
+	static Load(ResourceName: string): CryptoKeysCommandlet;
+	static Find(Outer: UObject, ResourceName: string): CryptoKeysCommandlet;
+	static GetDefaultObject(): CryptoKeysCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CryptoKeysCommandlet;
+	static C(Other: UObject | any): CryptoKeysCommandlet;
+}
+
+declare class CryptoEncryptionKey { 
+	Guid: Guid;
+	Name: string;
+	Key: string;
+	clone() : CryptoEncryptionKey;
+	static C(Other: UObject | any): CryptoEncryptionKey;
+}
+
+declare class CryptoKeysSettings extends UObject { 
+	EncryptionKey: string;
+	SecondaryEncryptionKeys: CryptoEncryptionKey[];
+	bEncryptPakIniFiles: boolean;
+	bEncryptPakIndex: boolean;
+	bEncryptUAssetFiles: boolean;
+	bEncryptAllAssetFiles: boolean;
+	SigningPublicExponent: string;
+	SigningModulus: string;
+	SigningPrivateExponent: string;
+	bEnablePakSigning: boolean;
+	static Load(ResourceName: string): CryptoKeysSettings;
+	static Find(Outer: UObject, ResourceName: string): CryptoKeysSettings;
+	static GetDefaultObject(): CryptoKeysSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CryptoKeysSettings;
+	static C(Other: UObject | any): CryptoKeysSettings;
+}
+
+declare class EditableMeshAdapter extends UObject { 
+	static Load(ResourceName: string): EditableMeshAdapter;
+	static Find(Outer: UObject, ResourceName: string): EditableMeshAdapter;
+	static GetDefaultObject(): EditableMeshAdapter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditableMeshAdapter;
+	static C(Other: UObject | any): EditableMeshAdapter;
+}
+
+declare class ElementID { 
+	IDValue: number;
+	clone() : ElementID;
+	static C(Other: UObject | any): ElementID;
+}
+
+declare class VertexID extends ElementID { 
+	clone() : VertexID;
+	static C(Other: UObject | any): VertexID;
+}
+
+declare class EdgeID extends ElementID { 
+	clone() : EdgeID;
+	static C(Other: UObject | any): EdgeID;
+}
+
+declare class PolygonID extends ElementID { 
+	clone() : PolygonID;
+	static C(Other: UObject | any): PolygonID;
+}
+
+declare type ETriangleTessellationMode = 'ThreeTriangles' | 'FourTriangles' | 'ETriangleTessellationMode_MAX';
+declare var ETriangleTessellationMode : { ThreeTriangles:'ThreeTriangles',FourTriangles:'FourTriangles',ETriangleTessellationMode_MAX:'ETriangleTessellationMode_MAX', };
+declare type EMeshModificationType = 'FirstInterim' | 'Interim' | 'Final' | 'EMeshModificationType_MAX';
+declare var EMeshModificationType : { FirstInterim:'FirstInterim',Interim:'Interim',Final:'Final',EMeshModificationType_MAX:'EMeshModificationType_MAX', };
+declare type EMeshTopologyChange = 'NoTopologyChange' | 'TopologyChange' | 'EMeshTopologyChange_MAX';
+declare var EMeshTopologyChange : { NoTopologyChange:'NoTopologyChange',TopologyChange:'TopologyChange',EMeshTopologyChange_MAX:'EMeshTopologyChange_MAX', };
+declare class VertexPair { 
+	VertexID0: VertexID;
+	VertexID1: VertexID;
+	clone() : VertexPair;
+	static C(Other: UObject | any): VertexPair;
+}
+
+declare class PolygonToSplit { 
+	PolygonID: PolygonID;
+	VertexPairsToSplitAt: VertexPair[];
+	clone() : PolygonToSplit;
+	static C(Other: UObject | any): PolygonToSplit;
+}
+
+declare class MeshElementAttributeValue { 
+	clone() : MeshElementAttributeValue;
+	static C(Other: UObject | any): MeshElementAttributeValue;
+}
+
+declare class MeshElementAttributeData { 
+	AttributeName: string;
+	AttributeIndex: number;
+	AttributeValue: MeshElementAttributeValue;
+	clone() : MeshElementAttributeData;
+	static C(Other: UObject | any): MeshElementAttributeData;
+}
+
+declare class MeshElementAttributeList { 
+	Attributes: MeshElementAttributeData[];
+	clone() : MeshElementAttributeList;
+	static C(Other: UObject | any): MeshElementAttributeList;
+}
+
+declare class AttributesForVertex { 
+	VertexID: VertexID;
+	VertexAttributes: MeshElementAttributeList;
+	clone() : AttributesForVertex;
+	static C(Other: UObject | any): AttributesForVertex;
+}
+
+declare class VertexInstanceID extends ElementID { 
+	clone() : VertexInstanceID;
+	static C(Other: UObject | any): VertexInstanceID;
+}
+
+declare class AttributesForVertexInstance { 
+	VertexInstanceID: VertexInstanceID;
+	VertexInstanceAttributes: MeshElementAttributeList;
+	clone() : AttributesForVertexInstance;
+	static C(Other: UObject | any): AttributesForVertexInstance;
+}
+
+declare class VertexAttributesForPolygonHole { 
+	VertexAttributeList: MeshElementAttributeList[];
+	clone() : VertexAttributesForPolygonHole;
+	static C(Other: UObject | any): VertexAttributesForPolygonHole;
+}
+
+declare class VertexAttributesForPolygon { 
+	PolygonID: PolygonID;
+	PerimeterVertexAttributeLists: MeshElementAttributeList[];
+	VertexAttributeListsForEachHole: VertexAttributesForPolygonHole[];
+	clone() : VertexAttributesForPolygon;
+	static C(Other: UObject | any): VertexAttributesForPolygon;
+}
+
+declare class VerticesForEdge { 
+	EdgeID: EdgeID;
+	NewVertexID0: VertexID;
+	NewVertexID1: VertexID;
+	clone() : VerticesForEdge;
+	static C(Other: UObject | any): VerticesForEdge;
+}
+
+declare class AttributesForEdge { 
+	EdgeID: EdgeID;
+	EdgeAttributes: MeshElementAttributeList;
+	clone() : AttributesForEdge;
+	static C(Other: UObject | any): AttributesForEdge;
+}
+
+declare class VertexToMove { 
+	VertexID: VertexID;
+	NewVertexPosition: Vector;
+	clone() : VertexToMove;
+	static C(Other: UObject | any): VertexToMove;
+}
+
+declare class PolygonGroupID extends ElementID { 
+	clone() : PolygonGroupID;
+	static C(Other: UObject | any): PolygonGroupID;
+}
+
+declare type EInsetPolygonsMode = 'All' | 'CenterPolygonOnly' | 'SidePolygonsOnly' | 'EInsetPolygonsMode_MAX';
+declare var EInsetPolygonsMode : { All:'All',CenterPolygonOnly:'CenterPolygonOnly',SidePolygonsOnly:'SidePolygonsOnly',EInsetPolygonsMode_MAX:'EInsetPolygonsMode_MAX', };
+declare class VertexAndAttributes { 
+	VertexInstanceID: VertexInstanceID;
+	VertexID: VertexID;
+	PolygonVertexAttributes: MeshElementAttributeList;
+	clone() : VertexAndAttributes;
+	static C(Other: UObject | any): VertexAndAttributes;
+}
+
+declare class SubdividedQuadVertex { 
+	VertexPositionIndex: number;
+	TextureCoordinate0: Vector2D;
+	TextureCoordinate1: Vector2D;
+	VertexColor: Color;
+	VertexNormal: Vector;
+	VertexTangent: Vector;
+	VertexBinormalSign: number;
+	clone() : SubdividedQuadVertex;
+	static C(Other: UObject | any): SubdividedQuadVertex;
+}
+
+declare class SubdividedQuad { 
+	QuadVertex0: SubdividedQuadVertex;
+	QuadVertex1: SubdividedQuadVertex;
+	QuadVertex2: SubdividedQuadVertex;
+	QuadVertex3: SubdividedQuadVertex;
+	clone() : SubdividedQuad;
+	static C(Other: UObject | any): SubdividedQuad;
+}
+
+declare class SubdivisionLimitSection { 
+	SubdividedQuads: SubdividedQuad[];
+	clone() : SubdivisionLimitSection;
+	static C(Other: UObject | any): SubdivisionLimitSection;
+}
+
+declare class SubdividedWireEdge { 
+	EdgeVertex0PositionIndex: number;
+	EdgeVertex1PositionIndex: number;
+	clone() : SubdividedWireEdge;
+	static C(Other: UObject | any): SubdividedWireEdge;
+}
+
+declare class SubdivisionLimitData { 
+	VertexPositions: Vector[];
+	Sections: SubdivisionLimitSection[];
+	SubdividedWireEdges: SubdividedWireEdge[];
+	clone() : SubdivisionLimitData;
+	static C(Other: UObject | any): SubdivisionLimitData;
+}
+
+declare class MeshTriangle { 
+	VertexInstanceID0: VertexInstanceID;
+	VertexInstanceID1: VertexInstanceID;
+	VertexInstanceID2: VertexInstanceID;
+	clone() : MeshTriangle;
+	static C(Other: UObject | any): MeshTriangle;
+}
+
+declare class VertexToCreate { 
+	VertexAttributes: MeshElementAttributeList;
+	OriginalVertexID: VertexID;
+	clone() : VertexToCreate;
+	static C(Other: UObject | any): VertexToCreate;
+}
+
+declare class VertexInstanceToCreate { 
+	VertexID: VertexID;
+	VertexInstanceAttributes: MeshElementAttributeList;
+	OriginalVertexInstanceID: VertexInstanceID;
+	clone() : VertexInstanceToCreate;
+	static C(Other: UObject | any): VertexInstanceToCreate;
+}
+
+declare class PolygonHoleVertices { 
+	HoleVertices: VertexAndAttributes[];
+	clone() : PolygonHoleVertices;
+	static C(Other: UObject | any): PolygonHoleVertices;
+}
+
+declare type EPolygonEdgeHardness = 'NewEdgesSoft' | 'NewEdgesHard' | 'AllEdgesSoft' | 'AllEdgesHard' | 'EPolygonEdgeHardness_MAX';
+declare var EPolygonEdgeHardness : { NewEdgesSoft:'NewEdgesSoft',NewEdgesHard:'NewEdgesHard',AllEdgesSoft:'AllEdgesSoft',AllEdgesHard:'AllEdgesHard',EPolygonEdgeHardness_MAX:'EPolygonEdgeHardness_MAX', };
+declare class PolygonToCreate { 
+	PolygonGroupID: PolygonGroupID;
+	PerimeterVertices: VertexAndAttributes[];
+	PolygonHoles: PolygonHoleVertices[];
+	OriginalPolygonID: PolygonID;
+	PolygonEdgeHardness: EPolygonEdgeHardness;
+	clone() : PolygonToCreate;
+	static C(Other: UObject | any): PolygonToCreate;
+}
+
+declare class PolygonGroupToCreate { 
+	PolygonGroupAttributes: MeshElementAttributeList;
+	OriginalPolygonGroupID: PolygonGroupID;
+	clone() : PolygonGroupToCreate;
+	static C(Other: UObject | any): PolygonGroupToCreate;
+}
+
+declare class EdgeToCreate { 
+	VertexID0: VertexID;
+	VertexID1: VertexID;
+	ConnectedPolygons: PolygonID[];
+	EdgeAttributes: MeshElementAttributeList;
+	OriginalEdgeID: EdgeID;
+	clone() : EdgeToCreate;
+	static C(Other: UObject | any): EdgeToCreate;
+}
+
+declare class VertexIndexAndInstanceID { 
+	ContourIndex: number;
+	VertexInstanceID: VertexInstanceID;
+	clone() : VertexIndexAndInstanceID;
+	static C(Other: UObject | any): VertexIndexAndInstanceID;
+}
+
+declare class VertexInstancesForPolygonHole { 
+	VertexIndicesAndInstanceIDs: VertexIndexAndInstanceID[];
+	clone() : VertexInstancesForPolygonHole;
+	static C(Other: UObject | any): VertexInstancesForPolygonHole;
+}
+
+declare class ChangeVertexInstancesForPolygon { 
+	PolygonID: PolygonID;
+	PerimeterVertexIndicesAndInstanceIDs: VertexIndexAndInstanceID[];
+	VertexIndicesAndInstanceIDsForEachHole: VertexInstancesForPolygonHole[];
+	clone() : ChangeVertexInstancesForPolygon;
+	static C(Other: UObject | any): ChangeVertexInstancesForPolygon;
+}
+
+declare class PolygonGroupForPolygon { 
+	PolygonID: PolygonID;
+	PolygonGroupID: PolygonGroupID;
+	clone() : PolygonGroupForPolygon;
+	static C(Other: UObject | any): PolygonGroupForPolygon;
+}
+
+declare class EditableMesh extends UObject { 
+	Adapters: EditableMeshAdapter[];
+	TextureCoordinateCount: number;
+	PendingCompactCounter: number;
+	SubdivisionCount: number;
+	static Load(ResourceName: string): EditableMesh;
+	static Find(Outer: UObject, ResourceName: string): EditableMesh;
+	static GetDefaultObject(): EditableMesh;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditableMesh;
+	WeldVertices(VertexIDs: VertexID[],OutNewVertexID?: VertexID): {OutNewVertexID: VertexID};
+	TryToRemoveVertex(VertexID: VertexID,bOutWasVertexRemoved?: boolean,OutNewEdgeID?: EdgeID): {bOutWasVertexRemoved: boolean, OutNewEdgeID: EdgeID};
+	TryToRemovePolygonEdge(EdgeID: EdgeID,bOutWasEdgeRemoved?: boolean,OutNewPolygonID?: PolygonID): {bOutWasEdgeRemoved: boolean, OutNewPolygonID: PolygonID};
+	TriangulatePolygons(PolygonIDs: PolygonID[],OutNewTrianglePolygons?: PolygonID[]): {OutNewTrianglePolygons: PolygonID[]};
+	TessellatePolygons(PolygonIDs: PolygonID[],TriangleTessellationMode: ETriangleTessellationMode,OutNewPolygonIDs?: PolygonID[]): {OutNewPolygonIDs: PolygonID[]};
+	StartModification(MeshModificationType: EMeshModificationType,MeshTopologyChange: EMeshTopologyChange): void;
+	SplitPolygons(PolygonsToSplit: PolygonToSplit[],OutNewEdgeIDs?: EdgeID[]): {OutNewEdgeIDs: EdgeID[]};
+	SplitEdge(EdgeID: EdgeID,Splits: number[],OutNewVertexIDs?: VertexID[]): {OutNewVertexIDs: VertexID[]};
+	SetVerticesCornerSharpness(VertexIDs: VertexID[],VerticesNewCornerSharpness: number[]): void;
+	SetVerticesAttributes(AttributesForVertices: AttributesForVertex[]): void;
+	SetVertexInstancesAttributes(AttributesForVertexInstances: AttributesForVertexInstance[]): void;
+	SetTextureCoordinateCount(NumTexCoords: number): void;
+	SetSubdivisionCount(NewSubdivisionCount: number): void;
+	SetPolygonsVertexAttributes(VertexAttributesForPolygons: VertexAttributesForPolygon[]): void;
+	SetEdgesVertices(VerticesForEdges: VerticesForEdge[]): void;
+	SetEdgesHardnessAutomatically(EdgeIDs: EdgeID[],MaxDotProductForSoftEdge: number): void;
+	SetEdgesHardness(EdgeIDs: EdgeID[],EdgesNewIsHard: boolean[]): void;
+	SetEdgesCreaseSharpness(EdgeIDs: EdgeID[],EdgesNewCreaseSharpness: number[]): void;
+	SetEdgesAttributes(AttributesForEdges: AttributesForEdge[]): void;
+	SetAllowUndo(bInAllowUndo: boolean): void;
+	SetAllowSpatialDatabase(bInAllowSpatialDatabase: boolean): void;
+	SetAllowCompact(bInAllowCompact: boolean): void;
+	SearchSpatialDatabaseForPolygonsPotentiallyIntersectingLineSegment(LineSegmentStart: Vector,LineSegmentEnd: Vector,OutPolygons?: PolygonID[]): {OutPolygons: PolygonID[]};
+	SearchSpatialDatabaseForPolygonsInVolume(planes: Plane[],OutPolygons?: PolygonID[]): {OutPolygons: PolygonID[]};
+	RevertInstance(): EditableMesh;
+	Revert(): void;
+	RemovePolygonPerimeterVertices(PolygonID: PolygonID,FirstVertexNumberToRemove: number,NumVerticesToRemove: number,bDeleteOrphanedVertexInstances: boolean): void;
+	RebuildRenderMesh(): void;
+	QuadrangulateMesh(OutNewPolygonIDs?: PolygonID[]): {OutNewPolygonIDs: PolygonID[]};
+	PropagateInstanceChanges(): void;
+	MoveVertices(VerticesToMove: VertexToMove[]): void;
+	static MakeVertexID(VertexIndex: number): VertexID;
+	static MakePolygonID(PolygonIndex: number): PolygonID;
+	static MakePolygonGroupID(PolygonGroupIndex: number): PolygonGroupID;
+	static MakeEdgeID(EdgeIndex: number): EdgeID;
+	IsValidVertex(VertexID: VertexID): boolean;
+	IsValidPolygonGroup(PolygonGroupID: PolygonGroupID): boolean;
+	IsValidPolygon(PolygonID: PolygonID): boolean;
+	IsValidEdge(EdgeID: EdgeID): boolean;
+	IsUndoAllowed(): boolean;
+	IsSpatialDatabaseAllowed(): boolean;
+	IsPreviewingSubdivisions(): boolean;
+	IsOrphanedVertex(VertexID: VertexID): boolean;
+	IsCompactAllowed(): boolean;
+	IsCommittedAsInstance(): boolean;
+	IsCommitted(): boolean;
+	IsBeingModified(): boolean;
+	static InvalidVertexID(): VertexID;
+	static InvalidPolygonID(): PolygonID;
+	static InvalidPolygonGroupID(): PolygonGroupID;
+	static InvalidEdgeID(): EdgeID;
+	InsetPolygons(PolygonIDs: PolygonID[],InsetFixedDistance: number,InsetProgressTowardCenter: number,Mode: EInsetPolygonsMode,OutNewCenterPolygonIDs?: PolygonID[],OutNewSidePolygonIDs?: PolygonID[]): {OutNewCenterPolygonIDs: PolygonID[], OutNewSidePolygonIDs: PolygonID[]};
+	InsertPolygonPerimeterVertices(PolygonID: PolygonID,InsertBeforeVertexNumber: number,VerticesToInsert: VertexAndAttributes[]): void;
+	InsertEdgeLoop(EdgeID: EdgeID,Splits: number[],OutNewEdgeIDs?: EdgeID[]): {OutNewEdgeIDs: EdgeID[]};
+	InitializeAdapters(): void;
+	GetVertexPairEdge(VertexID: VertexID,NextVertexID: VertexID,bOutEdgeWindingIsReversed?: boolean): {bOutEdgeWindingIsReversed: boolean, $: EdgeID};
+	GetVertexInstanceVertex(VertexInstanceID: VertexInstanceID): VertexID;
+	GetVertexInstanceCount(): number;
+	GetVertexInstanceConnectedPolygons(VertexInstanceID: VertexInstanceID,OutConnectedPolygonIDs?: PolygonID[]): {OutConnectedPolygonIDs: PolygonID[]};
+	GetVertexInstanceConnectedPolygonCount(VertexInstanceID: VertexInstanceID): number;
+	GetVertexInstanceConnectedPolygon(VertexInstanceID: VertexInstanceID,ConnectedPolygonNumber: number): PolygonID;
+	GetVertexCount(): number;
+	GetVertexConnectedPolygons(VertexID: VertexID,OutConnectedPolygonIDs?: PolygonID[]): {OutConnectedPolygonIDs: PolygonID[]};
+	GetVertexConnectedEdges(VertexID: VertexID,OutConnectedEdgeIDs?: EdgeID[]): {OutConnectedEdgeIDs: EdgeID[]};
+	GetVertexConnectedEdgeCount(VertexID: VertexID): number;
+	GetVertexConnectedEdge(VertexID: VertexID,ConnectedEdgeNumber: number): EdgeID;
+	GetVertexAdjacentVertices(VertexID: VertexID,OutAdjacentVertexIDs?: VertexID[]): {OutAdjacentVertexIDs: VertexID[]};
+	GetTextureCoordinateCount(): number;
+	GetSubdivisionLimitData(): SubdivisionLimitData;
+	GetSubdivisionCount(): number;
+	GetPolygonTriangulatedTriangleCount(PolygonID: PolygonID): number;
+	GetPolygonTriangulatedTriangle(PolygonID: PolygonID,PolygonTriangleNumber: number): MeshTriangle;
+	GetPolygonPerimeterVertices(PolygonID: PolygonID,OutPolygonPerimeterVertexIDs?: VertexID[]): {OutPolygonPerimeterVertexIDs: VertexID[]};
+	GetPolygonPerimeterVertexInstances(PolygonID: PolygonID,OutPolygonPerimeterVertexInstanceIDs?: VertexInstanceID[]): {OutPolygonPerimeterVertexInstanceIDs: VertexInstanceID[]};
+	GetPolygonPerimeterVertexInstance(PolygonID: PolygonID,PolygonVertexNumber: number): VertexInstanceID;
+	GetPolygonPerimeterVertexCount(PolygonID: PolygonID): number;
+	GetPolygonPerimeterVertex(PolygonID: PolygonID,PolygonVertexNumber: number): VertexID;
+	GetPolygonPerimeterEdges(PolygonID: PolygonID,OutPolygonPerimeterEdgeIDs?: EdgeID[]): {OutPolygonPerimeterEdgeIDs: EdgeID[]};
+	GetPolygonPerimeterEdgeCount(PolygonID: PolygonID): number;
+	GetPolygonPerimeterEdge(PolygonID: PolygonID,PerimeterEdgeNumber: number,bOutEdgeWindingIsReversedForPolygon?: boolean): {bOutEdgeWindingIsReversedForPolygon: boolean, $: EdgeID};
+	GetPolygonInGroup(PolygonGroupID: PolygonGroupID,PolygonNumber: number): PolygonID;
+	GetPolygonHoleVertices(PolygonID: PolygonID,HoleNumber: number,OutHoleVertexIDs?: VertexID[]): {OutHoleVertexIDs: VertexID[]};
+	GetPolygonHoleVertexInstances(PolygonID: PolygonID,HoleNumber: number,OutHoleVertexInstanceIDs?: VertexInstanceID[]): {OutHoleVertexInstanceIDs: VertexInstanceID[]};
+	GetPolygonHoleVertexInstance(PolygonID: PolygonID,HoleNumber: number,PolygonVertexNumber: number): VertexInstanceID;
+	GetPolygonHoleVertexCount(PolygonID: PolygonID,HoleNumber: number): number;
+	GetPolygonHoleVertex(PolygonID: PolygonID,HoleNumber: number,PolygonVertexNumber: number): VertexID;
+	GetPolygonHoleEdges(PolygonID: PolygonID,HoleNumber: number,OutHoleEdgeIDs?: EdgeID[]): {OutHoleEdgeIDs: EdgeID[]};
+	GetPolygonHoleEdgeCount(PolygonID: PolygonID,HoleNumber: number): number;
+	GetPolygonHoleEdge(PolygonID: PolygonID,HoleNumber: number,HoleEdgeNumber: number): EdgeID;
+	GetPolygonHoleCount(PolygonID: PolygonID): number;
+	GetPolygonGroupCount(): number;
+	GetPolygonCountInGroup(PolygonGroupID: PolygonGroupID): number;
+	GetPolygonCount(): number;
+	GetPolygonAdjacentPolygons(PolygonID: PolygonID,OutAdjacentPolygons?: PolygonID[]): {OutAdjacentPolygons: PolygonID[]};
+	GetGroupForPolygon(PolygonID: PolygonID): PolygonGroupID;
+	GetFirstValidPolygonGroup(): PolygonGroupID;
+	GetEdgeVertices(EdgeID: EdgeID,OutEdgeVertexID0?: VertexID,OutEdgeVertexID1?: VertexID): {OutEdgeVertexID0: VertexID, OutEdgeVertexID1: VertexID};
+	GetEdgeVertex(EdgeID: EdgeID,EdgeVertexNumber: number): VertexID;
+	GetEdgeThatConnectsVertices(VertexID0: VertexID,VertexID1: VertexID): EdgeID;
+	GetEdgeLoopElements(EdgeID: EdgeID,EdgeLoopIDs?: EdgeID[]): {EdgeLoopIDs: EdgeID[]};
+	GetEdgeCount(): number;
+	GetEdgeConnectedPolygons(EdgeID: EdgeID,OutConnectedPolygonIDs?: PolygonID[]): {OutConnectedPolygonIDs: PolygonID[]};
+	GetEdgeConnectedPolygonCount(EdgeID: EdgeID): number;
+	GetEdgeConnectedPolygon(EdgeID: EdgeID,ConnectedPolygonNumber: number): PolygonID;
+	GeneratePolygonTangentsAndNormals(PolygonIDs: PolygonID[]): void;
+	FlipPolygons(PolygonIDs: PolygonID[]): void;
+	FindPolygonPerimeterVertexNumberForVertex(PolygonID: PolygonID,VertexID: VertexID): number;
+	FindPolygonPerimeterEdgeNumberForVertices(PolygonID: PolygonID,EdgeVertexID0: VertexID,EdgeVertexID1: VertexID): number;
+	FindPolygonLoop(EdgeID: EdgeID,OutEdgeLoopEdgeIDs?: EdgeID[],OutFlippedEdgeIDs?: EdgeID[],OutReversedEdgeIDPathToTake?: EdgeID[],OutPolygonIDsToSplit?: PolygonID[]): {OutEdgeLoopEdgeIDs: EdgeID[], OutFlippedEdgeIDs: EdgeID[], OutReversedEdgeIDPathToTake: EdgeID[], OutPolygonIDsToSplit: PolygonID[]};
+	FindPolygonHoleVertexNumberForVertex(PolygonID: PolygonID,HoleNumber: number,VertexID: VertexID): number;
+	FindPolygonHoleEdgeNumberForVertices(PolygonID: PolygonID,HoleNumber: number,EdgeVertexID0: VertexID,EdgeVertexID1: VertexID): number;
+	ExtrudePolygons(Polygons: PolygonID[],ExtrudeDistance: number,bKeepNeighborsTogether: boolean,OutNewExtrudedFrontPolygons?: PolygonID[]): {OutNewExtrudedFrontPolygons: PolygonID[]};
+	ExtendVertices(VertexIDs: VertexID[],bOnlyExtendClosestEdge: boolean,ReferencePosition: Vector,OutNewExtendedVertexIDs?: VertexID[]): {OutNewExtendedVertexIDs: VertexID[]};
+	ExtendEdges(EdgeIDs: EdgeID[],bWeldNeighbors: boolean,OutNewExtendedEdgeIDs?: EdgeID[]): {OutNewExtendedEdgeIDs: EdgeID[]};
+	EndModification(bFromUndo: boolean): void;
+	DeleteVertexInstances(VertexInstanceIDsToDelete: VertexInstanceID[],bDeleteOrphanedVertices: boolean): void;
+	DeleteVertexAndConnectedEdgesAndPolygons(VertexID: VertexID,bDeleteOrphanedEdges: boolean,bDeleteOrphanedVertices: boolean,bDeleteOrphanedVertexInstances: boolean,bDeleteEmptyPolygonGroups: boolean): void;
+	DeletePolygons(PolygonIDsToDelete: PolygonID[],bDeleteOrphanedEdges: boolean,bDeleteOrphanedVertices: boolean,bDeleteOrphanedVertexInstances: boolean,bDeleteEmptyPolygonGroups: boolean): void;
+	DeletePolygonGroups(PolygonGroupIDs: PolygonGroupID[]): void;
+	DeleteOrphanVertices(VertexIDsToDelete: VertexID[]): void;
+	DeleteEdges(EdgeIDsToDelete: EdgeID[],bDeleteOrphanedVertices: boolean): void;
+	DeleteEdgeAndConnectedPolygons(EdgeID: EdgeID,bDeleteOrphanedEdges: boolean,bDeleteOrphanedVertices: boolean,bDeleteOrphanedVertexInstances: boolean,bDeleteEmptyPolygonGroups: boolean): void;
+	CreateVertices(VerticesToCreate: VertexToCreate[],OutNewVertexIDs?: VertexID[]): {OutNewVertexIDs: VertexID[]};
+	CreateVertexInstances(VertexInstancesToCreate: VertexInstanceToCreate[],OutNewVertexInstanceIDs?: VertexInstanceID[]): {OutNewVertexInstanceIDs: VertexInstanceID[]};
+	CreatePolygons(PolygonsToCreate: PolygonToCreate[],OutNewPolygonIDs?: PolygonID[],OutNewEdgeIDs?: EdgeID[]): {OutNewPolygonIDs: PolygonID[], OutNewEdgeIDs: EdgeID[]};
+	CreatePolygonGroups(PolygonGroupsToCreate: PolygonGroupToCreate[],OutNewPolygonGroupIDs?: PolygonGroupID[]): {OutNewPolygonGroupIDs: PolygonGroupID[]};
+	CreateMissingPolygonPerimeterEdges(PolygonID: PolygonID,OutNewEdgeIDs?: EdgeID[]): {OutNewEdgeIDs: EdgeID[]};
+	CreateMissingPolygonHoleEdges(PolygonID: PolygonID,HoleNumber: number,OutNewEdgeIDs?: EdgeID[]): {OutNewEdgeIDs: EdgeID[]};
+	CreateEmptyVertexRange(NumVerticesToCreate: number,OutNewVertexIDs?: VertexID[]): {OutNewVertexIDs: VertexID[]};
+	CreateEdges(EdgesToCreate: EdgeToCreate[],OutNewEdgeIDs?: EdgeID[]): {OutNewEdgeIDs: EdgeID[]};
+	ComputePolygonTriangulation(PolygonID: PolygonID,OutTriangles?: MeshTriangle[]): {OutTriangles: MeshTriangle[]};
+	ComputePolygonsSharedEdges(PolygonIDs: PolygonID[],OutSharedEdgeIDs?: EdgeID[]): {OutSharedEdgeIDs: EdgeID[]};
+	ComputePolygonPlane(PolygonID: PolygonID): Plane;
+	ComputePolygonNormal(PolygonID: PolygonID): Vector;
+	ComputePolygonCenter(PolygonID: PolygonID): Vector;
+	ComputeBoundingBoxAndSphere(): BoxSphereBounds;
+	ComputeBoundingBox(): Box;
+	ComputeBarycentricWeightForPointOnPolygon(PolygonID: PolygonID,PointOnPolygon: Vector,OutTriangle?: MeshTriangle,OutTriangleVertexWeights?: Vector): {OutTriangle: MeshTriangle, OutTriangleVertexWeights: Vector, $: boolean};
+	CommitInstance(ComponentToInstanceTo: PrimitiveComponent): EditableMesh;
+	Commit(): void;
+	ChangePolygonsVertexInstances(VertexInstancesForPolygons: ChangeVertexInstancesForPolygon[]): void;
+	BevelPolygons(PolygonIDs: PolygonID[],BevelFixedDistance: number,BevelProgressTowardCenter: number,OutNewCenterPolygonIDs?: PolygonID[],OutNewSidePolygonIDs?: PolygonID[]): {OutNewCenterPolygonIDs: PolygonID[], OutNewSidePolygonIDs: PolygonID[]};
+	AssignPolygonsToPolygonGroups(PolygonGroupForPolygons: PolygonGroupForPolygon[],bDeleteOrphanedPolygonGroups: boolean): void;
+	AnyChangesToUndo(): boolean;
+	static C(Other: UObject | any): EditableMesh;
+}
+
+declare class EditableMeshFactory extends UObject { 
+	static Load(ResourceName: string): EditableMeshFactory;
+	static Find(Outer: UObject, ResourceName: string): EditableMeshFactory;
+	static GetDefaultObject(): EditableMeshFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditableMeshFactory;
+	static MakeEditableMesh(PrimitiveComponent: PrimitiveComponent,LODIndex: number): EditableMesh;
+	static C(Other: UObject | any): EditableMeshFactory;
+}
+
+declare class EditableStaticMeshAdapter extends EditableMeshAdapter { 
+	StaticMesh: StaticMesh;
+	OriginalStaticMesh: StaticMesh;
+	StaticMeshLODIndex: number;
+	static Load(ResourceName: string): EditableStaticMeshAdapter;
+	static Find(Outer: UObject, ResourceName: string): EditableStaticMeshAdapter;
+	static GetDefaultObject(): EditableStaticMeshAdapter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditableStaticMeshAdapter;
+	static C(Other: UObject | any): EditableStaticMeshAdapter;
+}
+
+declare class MeshEditorAssetContainer extends DataAsset { 
+	HoveredGeometryMaterial: MaterialInterface;
+	HoveredFaceMaterial: MaterialInterface;
+	WireMaterial: MaterialInterface;
+	SubdividedMeshWireMaterial: MaterialInterface;
+	OverlayLineMaterial: MaterialInterface;
+	OverlayPointMaterial: MaterialInterface;
+	DefaultSound: SoundBase;
+	static Load(ResourceName: string): MeshEditorAssetContainer;
+	static Find(Outer: UObject, ResourceName: string): MeshEditorAssetContainer;
+	static GetDefaultObject(): MeshEditorAssetContainer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditorAssetContainer;
+	static C(Other: UObject | any): MeshEditorAssetContainer;
+}
+
+declare class MeshEditorCommand extends UObject { 
+	static Load(ResourceName: string): MeshEditorCommand;
+	static Find(Outer: UObject, ResourceName: string): MeshEditorCommand;
+	static GetDefaultObject(): MeshEditorCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditorCommand;
+	static C(Other: UObject | any): MeshEditorCommand;
+}
+
+declare class MeshEditorInstantCommand extends MeshEditorCommand { 
+	static Load(ResourceName: string): MeshEditorInstantCommand;
+	static Find(Outer: UObject, ResourceName: string): MeshEditorInstantCommand;
+	static GetDefaultObject(): MeshEditorInstantCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditorInstantCommand;
+	static C(Other: UObject | any): MeshEditorInstantCommand;
+}
+
+declare class MeshEditorEditCommand extends MeshEditorCommand { 
+	UndoText: string;
+	bNeedsDraggingInitiated: boolean;
+	bNeedsHoverLocation: boolean;
+	static Load(ResourceName: string): MeshEditorEditCommand;
+	static Find(Outer: UObject, ResourceName: string): MeshEditorEditCommand;
+	static GetDefaultObject(): MeshEditorEditCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditorEditCommand;
+	static C(Other: UObject | any): MeshEditorEditCommand;
+}
+
+declare class MeshEditorCommandList extends UObject { 
+	MeshEditorCommands: MeshEditorCommand[];
+	static Load(ResourceName: string): MeshEditorCommandList;
+	static Find(Outer: UObject, ResourceName: string): MeshEditorCommandList;
+	static GetDefaultObject(): MeshEditorCommandList;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditorCommandList;
+	static C(Other: UObject | any): MeshEditorCommandList;
+}
+
+declare class MeshEditorModeProxyObject extends UObject { 
+	static Load(ResourceName: string): MeshEditorModeProxyObject;
+	static Find(Outer: UObject, ResourceName: string): MeshEditorModeProxyObject;
+	static GetDefaultObject(): MeshEditorModeProxyObject;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditorModeProxyObject;
+	static C(Other: UObject | any): MeshEditorModeProxyObject;
+}
+
+declare class MeshEditorSelectionModifier extends UObject { 
+	static Load(ResourceName: string): MeshEditorSelectionModifier;
+	static Find(Outer: UObject, ResourceName: string): MeshEditorSelectionModifier;
+	static GetDefaultObject(): MeshEditorSelectionModifier;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditorSelectionModifier;
+	static C(Other: UObject | any): MeshEditorSelectionModifier;
+}
+
+declare class SelectSingleMeshElement extends MeshEditorSelectionModifier { 
+	static Load(ResourceName: string): SelectSingleMeshElement;
+	static Find(Outer: UObject, ResourceName: string): SelectSingleMeshElement;
+	static GetDefaultObject(): SelectSingleMeshElement;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SelectSingleMeshElement;
+	static C(Other: UObject | any): SelectSingleMeshElement;
+}
+
+declare class SelectPolygonsByGroup extends MeshEditorSelectionModifier { 
+	static Load(ResourceName: string): SelectPolygonsByGroup;
+	static Find(Outer: UObject, ResourceName: string): SelectPolygonsByGroup;
+	static GetDefaultObject(): SelectPolygonsByGroup;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SelectPolygonsByGroup;
+	static C(Other: UObject | any): SelectPolygonsByGroup;
+}
+
+declare class SelectPolygonsByConnectivity extends MeshEditorSelectionModifier { 
+	static Load(ResourceName: string): SelectPolygonsByConnectivity;
+	static Find(Outer: UObject, ResourceName: string): SelectPolygonsByConnectivity;
+	static GetDefaultObject(): SelectPolygonsByConnectivity;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SelectPolygonsByConnectivity;
+	static C(Other: UObject | any): SelectPolygonsByConnectivity;
+}
+
+declare class SelectPolygonsBySmoothingGroup extends MeshEditorSelectionModifier { 
+	static Load(ResourceName: string): SelectPolygonsBySmoothingGroup;
+	static Find(Outer: UObject, ResourceName: string): SelectPolygonsBySmoothingGroup;
+	static GetDefaultObject(): SelectPolygonsBySmoothingGroup;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SelectPolygonsBySmoothingGroup;
+	static C(Other: UObject | any): SelectPolygonsBySmoothingGroup;
+}
+
+declare class MeshEditorSelectionModifiersList extends UObject { 
+	SelectionModifiers: MeshEditorSelectionModifier[];
+	static Load(ResourceName: string): MeshEditorSelectionModifiersList;
+	static Find(Outer: UObject, ResourceName: string): MeshEditorSelectionModifiersList;
+	static GetDefaultObject(): MeshEditorSelectionModifiersList;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditorSelectionModifiersList;
+	static C(Other: UObject | any): MeshEditorSelectionModifiersList;
+}
+
+declare class MeshEditorSettings extends UObject { 
+	bSeparateSelectionSetPerMode: boolean;
+	bOnlySelectVisibleMeshes: boolean;
+	bOnlySelectVisibleElements: boolean;
+	bAllowGrabberSphere: boolean;
+	bAutoQuadrangulate: boolean;
+	static Load(ResourceName: string): MeshEditorSettings;
+	static Find(Outer: UObject, ResourceName: string): MeshEditorSettings;
+	static GetDefaultObject(): MeshEditorSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditorSettings;
+	static C(Other: UObject | any): MeshEditorSettings;
+}
+
+declare class WireframeMesh extends UObject { 
+	static Load(ResourceName: string): WireframeMesh;
+	static Find(Outer: UObject, ResourceName: string): WireframeMesh;
+	static GetDefaultObject(): WireframeMesh;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WireframeMesh;
+	static C(Other: UObject | any): WireframeMesh;
+}
+
+declare class MeshEditorStaticMeshAdapter extends EditableMeshAdapter { 
+	WireframeMesh: WireframeMesh;
+	StaticMeshLODIndex: number;
+	static Load(ResourceName: string): MeshEditorStaticMeshAdapter;
+	static Find(Outer: UObject, ResourceName: string): MeshEditorStaticMeshAdapter;
+	static GetDefaultObject(): MeshEditorStaticMeshAdapter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditorStaticMeshAdapter;
+	static C(Other: UObject | any): MeshEditorStaticMeshAdapter;
+}
+
+declare class MeshEditorSubdividedStaticMeshAdapter extends EditableMeshAdapter { 
+	WireframeMesh: WireframeMesh;
+	StaticMeshLODIndex: number;
+	static Load(ResourceName: string): MeshEditorSubdividedStaticMeshAdapter;
+	static Find(Outer: UObject, ResourceName: string): MeshEditorSubdividedStaticMeshAdapter;
+	static GetDefaultObject(): MeshEditorSubdividedStaticMeshAdapter;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditorSubdividedStaticMeshAdapter;
+	static C(Other: UObject | any): MeshEditorSubdividedStaticMeshAdapter;
+}
+
+declare class MeshElementTransformer extends ViewportTransformer { 
+	static Load(ResourceName: string): MeshElementTransformer;
+	static Find(Outer: UObject, ResourceName: string): MeshElementTransformer;
+	static GetDefaultObject(): MeshElementTransformer;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshElementTransformer;
+	static C(Other: UObject | any): MeshElementTransformer;
+}
+
+declare class OverlayComponent extends MeshComponent { 
+	LineMaterial: MaterialInterface;
+	PointMaterial: MaterialInterface;
+	Bounds: BoxSphereBounds;
+	bBoundsDirty: boolean;
+	static Load(ResourceName: string): OverlayComponent;
+	static Find(Outer: UObject, ResourceName: string): OverlayComponent;
+	static GetDefaultObject(): OverlayComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OverlayComponent;
+	static C(Other: UObject | any): OverlayComponent;
+}
+
+declare class WireframeMeshComponent extends MeshComponent { 
+	WireframeMesh: WireframeMesh;
+	static Load(ResourceName: string): WireframeMeshComponent;
+	static Find(Outer: UObject, ResourceName: string): WireframeMeshComponent;
+	static GetDefaultObject(): WireframeMeshComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WireframeMeshComponent;
+	static C(Other: UObject | any): WireframeMeshComponent;
+}
+
+declare class AssignMaterialCommand extends MeshEditorInstantCommand { 
+	static Load(ResourceName: string): AssignMaterialCommand;
+	static Find(Outer: UObject, ResourceName: string): AssignMaterialCommand;
+	static GetDefaultObject(): AssignMaterialCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssignMaterialCommand;
+	static C(Other: UObject | any): AssignMaterialCommand;
+}
+
+declare class BevelPolygonCommand extends MeshEditorEditCommand { 
+	static Load(ResourceName: string): BevelPolygonCommand;
+	static Find(Outer: UObject, ResourceName: string): BevelPolygonCommand;
+	static GetDefaultObject(): BevelPolygonCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BevelPolygonCommand;
+	static C(Other: UObject | any): BevelPolygonCommand;
+}
+
+declare class InsetPolygonCommand extends MeshEditorEditCommand { 
+	static Load(ResourceName: string): InsetPolygonCommand;
+	static Find(Outer: UObject, ResourceName: string): InsetPolygonCommand;
+	static GetDefaultObject(): InsetPolygonCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InsetPolygonCommand;
+	static C(Other: UObject | any): InsetPolygonCommand;
+}
+
+declare class DeleteMeshElementCommand extends MeshEditorInstantCommand { 
+	static Load(ResourceName: string): DeleteMeshElementCommand;
+	static Find(Outer: UObject, ResourceName: string): DeleteMeshElementCommand;
+	static GetDefaultObject(): DeleteMeshElementCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DeleteMeshElementCommand;
+	static C(Other: UObject | any): DeleteMeshElementCommand;
+}
+
+declare class EditVertexCornerSharpnessCommand extends MeshEditorEditCommand { 
+	static Load(ResourceName: string): EditVertexCornerSharpnessCommand;
+	static Find(Outer: UObject, ResourceName: string): EditVertexCornerSharpnessCommand;
+	static GetDefaultObject(): EditVertexCornerSharpnessCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditVertexCornerSharpnessCommand;
+	static C(Other: UObject | any): EditVertexCornerSharpnessCommand;
+}
+
+declare class EditEdgeCreaseSharpnessCommand extends MeshEditorEditCommand { 
+	static Load(ResourceName: string): EditEdgeCreaseSharpnessCommand;
+	static Find(Outer: UObject, ResourceName: string): EditEdgeCreaseSharpnessCommand;
+	static GetDefaultObject(): EditEdgeCreaseSharpnessCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditEdgeCreaseSharpnessCommand;
+	static C(Other: UObject | any): EditEdgeCreaseSharpnessCommand;
+}
+
+declare class ExtendEdgeCommand extends MeshEditorEditCommand { 
+	static Load(ResourceName: string): ExtendEdgeCommand;
+	static Find(Outer: UObject, ResourceName: string): ExtendEdgeCommand;
+	static GetDefaultObject(): ExtendEdgeCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExtendEdgeCommand;
+	static C(Other: UObject | any): ExtendEdgeCommand;
+}
+
+declare class ExtendVertexCommand extends MeshEditorEditCommand { 
+	static Load(ResourceName: string): ExtendVertexCommand;
+	static Find(Outer: UObject, ResourceName: string): ExtendVertexCommand;
+	static GetDefaultObject(): ExtendVertexCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExtendVertexCommand;
+	static C(Other: UObject | any): ExtendVertexCommand;
+}
+
+declare class ExtrudePolygonCommand extends MeshEditorEditCommand { 
+	static Load(ResourceName: string): ExtrudePolygonCommand;
+	static Find(Outer: UObject, ResourceName: string): ExtrudePolygonCommand;
+	static GetDefaultObject(): ExtrudePolygonCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExtrudePolygonCommand;
+	static C(Other: UObject | any): ExtrudePolygonCommand;
+}
+
+declare class FlipPolygonCommand extends MeshEditorInstantCommand { 
+	static Load(ResourceName: string): FlipPolygonCommand;
+	static Find(Outer: UObject, ResourceName: string): FlipPolygonCommand;
+	static GetDefaultObject(): FlipPolygonCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FlipPolygonCommand;
+	static C(Other: UObject | any): FlipPolygonCommand;
+}
+
+declare class HardenEdgeCommand extends MeshEditorInstantCommand { 
+	static Load(ResourceName: string): HardenEdgeCommand;
+	static Find(Outer: UObject, ResourceName: string): HardenEdgeCommand;
+	static GetDefaultObject(): HardenEdgeCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HardenEdgeCommand;
+	static C(Other: UObject | any): HardenEdgeCommand;
+}
+
+declare class SoftenEdgeCommand extends MeshEditorInstantCommand { 
+	static Load(ResourceName: string): SoftenEdgeCommand;
+	static Find(Outer: UObject, ResourceName: string): SoftenEdgeCommand;
+	static GetDefaultObject(): SoftenEdgeCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SoftenEdgeCommand;
+	static C(Other: UObject | any): SoftenEdgeCommand;
+}
+
+declare class InsertEdgeLoopCommand extends MeshEditorEditCommand { 
+	static Load(ResourceName: string): InsertEdgeLoopCommand;
+	static Find(Outer: UObject, ResourceName: string): InsertEdgeLoopCommand;
+	static GetDefaultObject(): InsertEdgeLoopCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InsertEdgeLoopCommand;
+	static C(Other: UObject | any): InsertEdgeLoopCommand;
+}
+
+declare class QuadrangulateMeshCommand extends MeshEditorInstantCommand { 
+	static Load(ResourceName: string): QuadrangulateMeshCommand;
+	static Find(Outer: UObject, ResourceName: string): QuadrangulateMeshCommand;
+	static GetDefaultObject(): QuadrangulateMeshCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): QuadrangulateMeshCommand;
+	static C(Other: UObject | any): QuadrangulateMeshCommand;
+}
+
+declare class RemoveEdgeCommand extends MeshEditorInstantCommand { 
+	static Load(ResourceName: string): RemoveEdgeCommand;
+	static Find(Outer: UObject, ResourceName: string): RemoveEdgeCommand;
+	static GetDefaultObject(): RemoveEdgeCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoveEdgeCommand;
+	static C(Other: UObject | any): RemoveEdgeCommand;
+}
+
+declare class RemoveVertexCommand extends MeshEditorInstantCommand { 
+	static Load(ResourceName: string): RemoveVertexCommand;
+	static Find(Outer: UObject, ResourceName: string): RemoveVertexCommand;
+	static GetDefaultObject(): RemoveVertexCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoveVertexCommand;
+	static C(Other: UObject | any): RemoveVertexCommand;
+}
+
+declare class SplitEdgeCommand extends MeshEditorEditCommand { 
+	static Load(ResourceName: string): SplitEdgeCommand;
+	static Find(Outer: UObject, ResourceName: string): SplitEdgeCommand;
+	static GetDefaultObject(): SplitEdgeCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplitEdgeCommand;
+	static C(Other: UObject | any): SplitEdgeCommand;
+}
+
+declare class SplitPolygonCommand extends MeshEditorEditCommand { 
+	Component: PrimitiveComponent;
+	EditableMesh: EditableMesh;
+	static Load(ResourceName: string): SplitPolygonCommand;
+	static Find(Outer: UObject, ResourceName: string): SplitPolygonCommand;
+	static GetDefaultObject(): SplitPolygonCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplitPolygonCommand;
+	static C(Other: UObject | any): SplitPolygonCommand;
+}
+
+declare class SplitPolygonFromVertexCommand extends SplitPolygonCommand { 
+	static Load(ResourceName: string): SplitPolygonFromVertexCommand;
+	static Find(Outer: UObject, ResourceName: string): SplitPolygonFromVertexCommand;
+	static GetDefaultObject(): SplitPolygonFromVertexCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplitPolygonFromVertexCommand;
+	static C(Other: UObject | any): SplitPolygonFromVertexCommand;
+}
+
+declare class SplitPolygonFromEdgeCommand extends SplitPolygonCommand { 
+	static Load(ResourceName: string): SplitPolygonFromEdgeCommand;
+	static Find(Outer: UObject, ResourceName: string): SplitPolygonFromEdgeCommand;
+	static GetDefaultObject(): SplitPolygonFromEdgeCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplitPolygonFromEdgeCommand;
+	static C(Other: UObject | any): SplitPolygonFromEdgeCommand;
+}
+
+declare class SplitPolygonFromPolygonCommand extends SplitPolygonCommand { 
+	static Load(ResourceName: string): SplitPolygonFromPolygonCommand;
+	static Find(Outer: UObject, ResourceName: string): SplitPolygonFromPolygonCommand;
+	static GetDefaultObject(): SplitPolygonFromPolygonCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplitPolygonFromPolygonCommand;
+	static C(Other: UObject | any): SplitPolygonFromPolygonCommand;
+}
+
+declare class TessellatePolygonCommand extends MeshEditorInstantCommand { 
+	static Load(ResourceName: string): TessellatePolygonCommand;
+	static Find(Outer: UObject, ResourceName: string): TessellatePolygonCommand;
+	static GetDefaultObject(): TessellatePolygonCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TessellatePolygonCommand;
+	static C(Other: UObject | any): TessellatePolygonCommand;
+}
+
+declare class UnifyNormalsCommand extends MeshEditorInstantCommand { 
+	static Load(ResourceName: string): UnifyNormalsCommand;
+	static Find(Outer: UObject, ResourceName: string): UnifyNormalsCommand;
+	static GetDefaultObject(): UnifyNormalsCommand;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnifyNormalsCommand;
+	static C(Other: UObject | any): UnifyNormalsCommand;
+}
+
 declare class NewPluginDescriptorData extends UObject { 
 	CreatedBy: string;
 	CreatedByURL: string;
@@ -3399,10 +8926,10 @@ declare class ReimportSpeedTreeFactory extends SpeedTreeImportFactory {
 	static C(Other: UObject | any): ReimportSpeedTreeFactory;
 }
 
-declare type EImportGeometryType = 'IGT_3D' | 'IGT_Billboards' | 'IGT_Both';
-declare var EImportGeometryType : { IGT_3D:'IGT_3D',IGT_Billboards:'IGT_Billboards',IGT_Both:'IGT_Both', };
-declare type EImportLODType = 'ILT_PaintedFoliage' | 'ILT_IndividualActors';
-declare var EImportLODType : { ILT_PaintedFoliage:'ILT_PaintedFoliage',ILT_IndividualActors:'ILT_IndividualActors', };
+declare type EImportGeometryType = 'IGT_3D' | 'IGT_Billboards' | 'IGT_Both' | 'IGT_MAX';
+declare var EImportGeometryType : { IGT_3D:'IGT_3D',IGT_Billboards:'IGT_Billboards',IGT_Both:'IGT_Both',IGT_MAX:'IGT_MAX', };
+declare type EImportLODType = 'ILT_PaintedFoliage' | 'ILT_IndividualActors' | 'ILT_MAX';
+declare var EImportLODType : { ILT_PaintedFoliage:'ILT_PaintedFoliage',ILT_IndividualActors:'ILT_IndividualActors',ILT_MAX:'ILT_MAX', };
 declare class SpeedTreeImportData extends AssetImportData { 
 	TreeScale: number;
 	ImportGeometryType: EImportGeometryType;
@@ -3415,6 +8942,7 @@ declare class SpeedTreeImportData extends AssetImportData {
 	IncludeBranchSeamSmoothing: boolean;
 	IncludeSpeedTreeAO: boolean;
 	IncludeColorAdjustment: boolean;
+	IncludeSubsurface: boolean;
 	IncludeVertexProcessingCheck: boolean;
 	IncludeWindCheck: boolean;
 	IncludeSmoothLODCheck: boolean;
@@ -3425,7 +8953,112 @@ declare class SpeedTreeImportData extends AssetImportData {
 	static C(Other: UObject | any): SpeedTreeImportData;
 }
 
+declare type EPropertyValueCategory = 'Generic' | 'RelativeLocation' | 'RelativeRotation' | 'RelativeScale3D' | 'bVisible' | 'Material' | 'EPropertyValueCategory_MAX';
+declare var EPropertyValueCategory : { Generic:'Generic',RelativeLocation:'RelativeLocation',RelativeRotation:'RelativeRotation',RelativeScale3D:'RelativeScale3D',bVisible:'bVisible',Material:'Material',EPropertyValueCategory_MAX:'EPropertyValueCategory_MAX', };
+declare class PropertyValue extends UObject { 
+	FullDisplayString: string;
+	bHasRecordedData: boolean;
+	bIsObjectProperty: boolean;
+	ValueBytes: number[];
+	PropCategory: EPropertyValueCategory;
+	Properties: Property[];
+	PropertyIndices: number[];
+	static Load(ResourceName: string): PropertyValue;
+	static Find(Outer: UObject, ResourceName: string): PropertyValue;
+	static GetDefaultObject(): PropertyValue;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PropertyValue;
+	static C(Other: UObject | any): PropertyValue;
+}
+
+declare class VariantObjectBinding extends UObject { 
+	ObjectPtr: SoftObjectPath;
+	LazyObjectPtr: any;
+	CapturedProperties: PropertyValue[];
+	static Load(ResourceName: string): VariantObjectBinding;
+	static Find(Outer: UObject, ResourceName: string): VariantObjectBinding;
+	static GetDefaultObject(): VariantObjectBinding;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VariantObjectBinding;
+	static C(Other: UObject | any): VariantObjectBinding;
+}
+
+declare class Variant extends UObject { 
+	DisplayText: string;
+	ObjectBindings: VariantObjectBinding[];
+	static Load(ResourceName: string): Variant;
+	static Find(Outer: UObject, ResourceName: string): Variant;
+	static GetDefaultObject(): Variant;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Variant;
+	SwitchOn(): void;
+	SetDisplayText(NewDisplayText: string): void;
+	GetNumActors(): number;
+	GetDisplayText(): string;
+	GetActor(ActorIndex: number): Actor;
+	static C(Other: UObject | any): Variant;
+}
+
+declare class VariantSet extends UObject { 
+	DisplayText: string;
+	Variants: Variant[];
+	static Load(ResourceName: string): VariantSet;
+	static Find(Outer: UObject, ResourceName: string): VariantSet;
+	static GetDefaultObject(): VariantSet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VariantSet;
+	SetDisplayText(NewDisplayText: string): void;
+	GetVariant(VariantIndex: number): Variant;
+	GetNumVariants(): number;
+	GetDisplayText(): string;
+	static C(Other: UObject | any): VariantSet;
+}
+
+declare class LevelVariantSets extends UObject { 
+	VariantSets: VariantSet[];
+	DisplayNodeExpansionStates: any;
+	static Load(ResourceName: string): LevelVariantSets;
+	static Find(Outer: UObject, ResourceName: string): LevelVariantSets;
+	static GetDefaultObject(): LevelVariantSets;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelVariantSets;
+	GetVariantSet(VariantSetIndex: number): VariantSet;
+	GetNumVariantSets(): number;
+	static C(Other: UObject | any): LevelVariantSets;
+}
+
+declare class LevelVariantSetsActor extends Actor { 
+	LevelVariantSets: SoftObjectPath;
+	static GetDefaultObject(): LevelVariantSetsActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelVariantSetsActor;
+	SwitchOnVariantByName(VariantSetName: string,VariantName: string): boolean;
+	SwitchOnVariantByIndex(VariantSetIndex: number,VariantIndex: number): boolean;
+	SetLevelVariantSets(InVariantSets: LevelVariantSets): void;
+	GetLevelVariantSets(bLoad: boolean): LevelVariantSets;
+	static C(Other: UObject | any): LevelVariantSetsActor;
+}
+
+declare class PropertyValueMaterial extends PropertyValue { 
+	static Load(ResourceName: string): PropertyValueMaterial;
+	static Find(Outer: UObject, ResourceName: string): PropertyValueMaterial;
+	static GetDefaultObject(): PropertyValueMaterial;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PropertyValueMaterial;
+	static C(Other: UObject | any): PropertyValueMaterial;
+}
+
+declare class PropertyValueTransform extends PropertyValue { 
+	static Load(ResourceName: string): PropertyValueTransform;
+	static Find(Outer: UObject, ResourceName: string): PropertyValueTransform;
+	static GetDefaultObject(): PropertyValueTransform;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PropertyValueTransform;
+	static C(Other: UObject | any): PropertyValueTransform;
+}
+
+declare class PropertyValueVisibility extends PropertyValue { 
+	static Load(ResourceName: string): PropertyValueVisibility;
+	static Find(Outer: UObject, ResourceName: string): PropertyValueVisibility;
+	static GetDefaultObject(): PropertyValueVisibility;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PropertyValueVisibility;
+	static C(Other: UObject | any): PropertyValueVisibility;
+}
+
 declare class GeometryCacheTrack extends UObject { 
+	Duration: number;
 	static Load(ResourceName: string): GeometryCacheTrack;
 	static Find(Outer: UObject, ResourceName: string): GeometryCacheTrack;
 	static GetDefaultObject(): GeometryCacheTrack;
@@ -3438,6 +9071,8 @@ declare class GeometryCache extends UObject {
 	ThumbnailInfo: ThumbnailInfo;
 	Materials: MaterialInterface[];
 	Tracks: GeometryCacheTrack[];
+	StartFrame: number;
+	EndFrame: number;
 	static Load(ResourceName: string): GeometryCache;
 	static Find(Outer: UObject, ResourceName: string): GeometryCache;
 	static GetDefaultObject(): GeometryCache;
@@ -3453,10 +9088,13 @@ declare class GeometryCacheComponent extends MeshComponent {
 	PlaybackSpeed: number;
 	NumTracks: number;
 	ElapsedTime: number;
+	Duration: number;
+	bManualTick: boolean;
 	static Load(ResourceName: string): GeometryCacheComponent;
 	static Find(Outer: UObject, ResourceName: string): GeometryCacheComponent;
 	static GetDefaultObject(): GeometryCacheComponent;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCacheComponent;
+	TickAtThisTime(Time: number,bInIsRunning: boolean,bInBackwards: boolean,bInIsLooping: boolean): void;
 	Stop(): void;
 	SetStartTimeOffset(NewStartTimeOffset: number): void;
 	SetPlaybackSpeed(NewPlaybackSpeed: number): void;
@@ -3472,6 +9110,10 @@ declare class GeometryCacheComponent extends MeshComponent {
 	IsLooping(): boolean;
 	GetStartTimeOffset(): number;
 	GetPlaybackSpeed(): number;
+	GetPlaybackDirection(): number;
+	GetNumberOfFrames(): number;
+	GetDuration(): number;
+	GetAnimationTime(): number;
 	static C(Other: UObject | any): GeometryCacheComponent;
 }
 
@@ -3483,6 +9125,32 @@ declare class GeometryCacheActor extends Actor {
 	static C(Other: UObject | any): GeometryCacheActor;
 }
 
+declare class GeometryCacheCodecBase extends UObject { 
+	TopologyRanges: number[];
+	static Load(ResourceName: string): GeometryCacheCodecBase;
+	static Find(Outer: UObject, ResourceName: string): GeometryCacheCodecBase;
+	static GetDefaultObject(): GeometryCacheCodecBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCacheCodecBase;
+	static C(Other: UObject | any): GeometryCacheCodecBase;
+}
+
+declare class GeometryCacheCodecRaw extends GeometryCacheCodecBase { 
+	DummyProperty: number;
+	static Load(ResourceName: string): GeometryCacheCodecRaw;
+	static Find(Outer: UObject, ResourceName: string): GeometryCacheCodecRaw;
+	static GetDefaultObject(): GeometryCacheCodecRaw;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCacheCodecRaw;
+	static C(Other: UObject | any): GeometryCacheCodecRaw;
+}
+
+declare class GeometryCacheCodecV1 extends GeometryCacheCodecBase { 
+	static Load(ResourceName: string): GeometryCacheCodecV1;
+	static Find(Outer: UObject, ResourceName: string): GeometryCacheCodecV1;
+	static GetDefaultObject(): GeometryCacheCodecV1;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCacheCodecV1;
+	static C(Other: UObject | any): GeometryCacheCodecV1;
+}
+
 declare class GeometryCacheMeshData { 
 	clone() : GeometryCacheMeshData;
 	static C(Other: UObject | any): GeometryCacheMeshData;
@@ -3498,6 +9166,16 @@ declare class GeometryCacheTrack_FlipbookAnimation extends GeometryCacheTrack {
 	static C(Other: UObject | any): GeometryCacheTrack_FlipbookAnimation;
 }
 
+declare class GeometryCacheTrackStreamable extends GeometryCacheTrack { 
+	Codec: GeometryCacheCodecBase;
+	StartSampleTime: number;
+	static Load(ResourceName: string): GeometryCacheTrackStreamable;
+	static Find(Outer: UObject, ResourceName: string): GeometryCacheTrackStreamable;
+	static GetDefaultObject(): GeometryCacheTrackStreamable;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCacheTrackStreamable;
+	static C(Other: UObject | any): GeometryCacheTrackStreamable;
+}
+
 declare class GeometryCacheTrack_TransformAnimation extends GeometryCacheTrack { 
 	static Load(ResourceName: string): GeometryCacheTrack_TransformAnimation;
 	static Find(Outer: UObject, ResourceName: string): GeometryCacheTrack_TransformAnimation;
@@ -3516,8 +9194,22 @@ declare class GeometryCacheTrack_TransformGroupAnimation extends GeometryCacheTr
 	static C(Other: UObject | any): GeometryCacheTrack_TransformGroupAnimation;
 }
 
+declare type EAlembicSamplingType = 'PerFrame' | 'PerXFrames' | 'PerTimeStep' | 'EAlembicSamplingType_MAX';
+declare var EAlembicSamplingType : { PerFrame:'PerFrame',PerXFrames:'PerXFrames',PerTimeStep:'PerTimeStep',EAlembicSamplingType_MAX:'EAlembicSamplingType_MAX', };
+declare class AbcSamplingSettings { 
+	SamplingType: EAlembicSamplingType;
+	FrameSteps: number;
+	TimeSteps: number;
+	FrameStart: number;
+	FrameEnd: number;
+	bSkipEmpty: boolean;
+	clone() : AbcSamplingSettings;
+	static C(Other: UObject | any): AbcSamplingSettings;
+}
+
 declare class AbcAssetImportData extends AssetImportData { 
 	TrackNames: string[];
+	SamplingSettings: AbcSamplingSettings;
 	static Load(ResourceName: string): AbcAssetImportData;
 	static Find(Outer: UObject, ResourceName: string): AbcAssetImportData;
 	static GetDefaultObject(): AbcAssetImportData;
@@ -3525,21 +9217,8 @@ declare class AbcAssetImportData extends AssetImportData {
 	static C(Other: UObject | any): AbcAssetImportData;
 }
 
-declare type EAlembicImportType = 'StaticMesh' | 'GeometryCache' | 'Skeletal';
-declare var EAlembicImportType : { StaticMesh:'StaticMesh',GeometryCache:'GeometryCache',Skeletal:'Skeletal', };
-declare type EAlembicSamplingType = 'PerFrame' | 'PerXFrames' | 'PerTimeStep';
-declare var EAlembicSamplingType : { PerFrame:'PerFrame',PerXFrames:'PerXFrames',PerTimeStep:'PerTimeStep', };
-declare class AbcSamplingSettings { 
-	SamplingType: SamplingType;
-	FrameSteps: any;
-	TimeSteps: number;
-	FrameStart: any;
-	FrameEnd: any;
-	bSkipEmpty: boolean;
-	clone() : AbcSamplingSettings;
-	static C(Other: UObject | any): AbcSamplingSettings;
-}
-
+declare type EAlembicImportType = 'StaticMesh' | 'GeometryCache' | 'Skeletal' | 'EAlembicImportType_MAX';
+declare var EAlembicImportType : { StaticMesh:'StaticMesh',GeometryCache:'GeometryCache',Skeletal:'Skeletal',EAlembicImportType_MAX:'EAlembicImportType_MAX', };
 declare class AbcNormalGenerationSettings { 
 	bForceOneSmoothingGroupPerObject: boolean;
 	HardEdgeAngleThreshold: number;
@@ -3549,12 +9228,19 @@ declare class AbcNormalGenerationSettings {
 	static C(Other: UObject | any): AbcNormalGenerationSettings;
 }
 
+declare class AbcMaterialSettings { 
+	bCreateMaterials: boolean;
+	bFindMaterials: boolean;
+	clone() : AbcMaterialSettings;
+	static C(Other: UObject | any): AbcMaterialSettings;
+}
+
 declare type EBaseCalculationType = 'PercentageBased' | 'FixedNumber' | 'EBaseCalculationType_MAX';
 declare var EBaseCalculationType : { PercentageBased:'PercentageBased',FixedNumber:'FixedNumber',EBaseCalculationType_MAX:'EBaseCalculationType_MAX', };
 declare class AbcCompressionSettings { 
 	bMergeMeshes: boolean;
 	bBakeMatrixAnimation: boolean;
-	BaseCalculationType: BaseCalculationType;
+	BaseCalculationType: EBaseCalculationType;
 	PercentageOfTotalBases: number;
 	MaxNumberOfBases: number;
 	MinimumNumberOfVertexInfluencePercentage: number;
@@ -3562,24 +9248,29 @@ declare class AbcCompressionSettings {
 	static C(Other: UObject | any): AbcCompressionSettings;
 }
 
-declare class AbcMaterialSettings { 
-	bCreateMaterials: boolean;
-	bFindMaterials: boolean;
-	clone() : AbcMaterialSettings;
-	static C(Other: UObject | any): AbcMaterialSettings;
-}
-
 declare class AbcStaticMeshSettings { 
 	bMergeMeshes: boolean;
 	bPropagateMatrixTransformations: boolean;
+	bGenerateLightmapUVs: boolean;
 	clone() : AbcStaticMeshSettings;
 	static C(Other: UObject | any): AbcStaticMeshSettings;
 }
 
-declare type EAbcConversionPreset = 'Maya' | 'Max' | 'Custom';
-declare var EAbcConversionPreset : { Maya:'Maya',Max:'Max',Custom:'Custom', };
+declare class AbcGeometryCacheSettings { 
+	bFlattenTracks: boolean;
+	bApplyConstantTopologyOptimizations: boolean;
+	bCalculateMotionVectorsDuringImport: boolean;
+	bOptimizeIndexBuffers: boolean;
+	CompressedPositionPrecision: number;
+	CompressedTextureCoordinatesNumberOfBits: number;
+	clone() : AbcGeometryCacheSettings;
+	static C(Other: UObject | any): AbcGeometryCacheSettings;
+}
+
+declare type EAbcConversionPreset = 'Maya' | 'Max' | 'Custom' | 'EAbcConversionPreset_MAX';
+declare var EAbcConversionPreset : { Maya:'Maya',Max:'Max',Custom:'Custom',EAbcConversionPreset_MAX:'EAbcConversionPreset_MAX', };
 declare class AbcConversionSettings { 
-	Preset: Preset;
+	Preset: EAbcConversionPreset;
 	bFlipU: boolean;
 	bFlipV: boolean;
 	Scale: Vector;
@@ -3589,12 +9280,13 @@ declare class AbcConversionSettings {
 }
 
 declare class AbcImportSettings extends UObject { 
-	ImportType: ImportType;
+	ImportType: EAlembicImportType;
 	SamplingSettings: AbcSamplingSettings;
 	NormalGenerationSettings: AbcNormalGenerationSettings;
-	CompressionSettings: AbcCompressionSettings;
 	MaterialSettings: AbcMaterialSettings;
+	CompressionSettings: AbcCompressionSettings;
 	StaticMeshSettings: AbcStaticMeshSettings;
+	GeometryCacheSettings: AbcGeometryCacheSettings;
 	ConversionSettings: AbcConversionSettings;
 	static Load(ResourceName: string): AbcImportSettings;
 	static Find(Outer: UObject, ResourceName: string): AbcImportSettings;
@@ -3637,90 +9329,520 @@ declare class GeometryCacheThumbnailRenderer extends DefaultSizedThumbnailRender
 	static C(Other: UObject | any): GeometryCacheThumbnailRenderer;
 }
 
-declare class WebSocketConnection extends NetConnection { 
-	static Load(ResourceName: string): WebSocketConnection;
-	static Find(Outer: UObject, ResourceName: string): WebSocketConnection;
-	static GetDefaultObject(): WebSocketConnection;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WebSocketConnection;
-	static C(Other: UObject | any): WebSocketConnection;
+declare class AppleImageUtilsImageConversionResult { 
+	Error: string;
+	ImageData: number[];
+	clone() : AppleImageUtilsImageConversionResult;
+	static C(Other: UObject | any): AppleImageUtilsImageConversionResult;
 }
 
-declare class WebSocketNetDriver extends NetDriver { 
-	WebSocketPort: number;
-	static Load(ResourceName: string): WebSocketNetDriver;
-	static Find(Outer: UObject, ResourceName: string): WebSocketNetDriver;
-	static GetDefaultObject(): WebSocketNetDriver;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WebSocketNetDriver;
-	static C(Other: UObject | any): WebSocketNetDriver;
+declare type ETextureRotationDirection = 'None' | 'Left' | 'Right' | 'Down' | 'ETextureRotationDirection_MAX';
+declare var ETextureRotationDirection : { None:'None',Left:'Left',Right:'Right',Down:'Down',ETextureRotationDirection_MAX:'ETextureRotationDirection_MAX', };
+declare class AppleImageUtilsBaseAsyncTaskBlueprintProxy extends UObject { 
+	OnSuccess: UnrealEngineMulticastDelegate<(ConversionResult: AppleImageUtilsImageConversionResult) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(ConversionResult: AppleImageUtilsImageConversionResult) => void>;
+	ConversionResult: AppleImageUtilsImageConversionResult;
+	static Load(ResourceName: string): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
+	static Find(Outer: UObject, ResourceName: string): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
+	static GetDefaultObject(): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
+	static CreateProxyObjectForConvertToTIFF(SourceImage: Texture,bWantColor: boolean,bUseGpu: boolean,Scale: number,Rotate: ETextureRotationDirection): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
+	static CreateProxyObjectForConvertToPNG(SourceImage: Texture,bWantColor: boolean,bUseGpu: boolean,Scale: number,Rotate: ETextureRotationDirection): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
+	static CreateProxyObjectForConvertToJPEG(SourceImage: Texture,Quality: number,bWantColor: boolean,bUseGpu: boolean,Scale: number,Rotate: ETextureRotationDirection): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
+	static CreateProxyObjectForConvertToHEIF(SourceImage: Texture,Quality: number,bWantColor: boolean,bUseGpu: boolean,Scale: number,Rotate: ETextureRotationDirection): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
+	static C(Other: UObject | any): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
+}
+
+declare class AppleImageInterface extends Interface { 
+	static Load(ResourceName: string): AppleImageInterface;
+	static Find(Outer: UObject, ResourceName: string): AppleImageInterface;
+	static GetDefaultObject(): AppleImageInterface;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AppleImageInterface;
+	static C(Other: UObject | any): AppleImageInterface;
+}
+
+declare class K2Node_ConvertToJPEG extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_ConvertToJPEG;
+	static Find(Outer: UObject, ResourceName: string): K2Node_ConvertToJPEG;
+	static GetDefaultObject(): K2Node_ConvertToJPEG;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConvertToJPEG;
+	static C(Other: UObject | any): K2Node_ConvertToJPEG;
+}
+
+declare class K2Node_ConvertToHEIF extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_ConvertToHEIF;
+	static Find(Outer: UObject, ResourceName: string): K2Node_ConvertToHEIF;
+	static GetDefaultObject(): K2Node_ConvertToHEIF;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConvertToHEIF;
+	static C(Other: UObject | any): K2Node_ConvertToHEIF;
+}
+
+declare class K2Node_ConvertToTIFF extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_ConvertToTIFF;
+	static Find(Outer: UObject, ResourceName: string): K2Node_ConvertToTIFF;
+	static GetDefaultObject(): K2Node_ConvertToTIFF;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConvertToTIFF;
+	static C(Other: UObject | any): K2Node_ConvertToTIFF;
+}
+
+declare class K2Node_ConvertToPNG extends K2Node_BaseAsyncTask { 
+	static Load(ResourceName: string): K2Node_ConvertToPNG;
+	static Find(Outer: UObject, ResourceName: string): K2Node_ConvertToPNG;
+	static GetDefaultObject(): K2Node_ConvertToPNG;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConvertToPNG;
+	static C(Other: UObject | any): K2Node_ConvertToPNG;
+}
+
+declare class DetectedFeature { 
+	Confidence: number;
+	clone() : DetectedFeature;
+	static C(Other: UObject | any): DetectedFeature;
+}
+
+declare class DetectedFeatureRegion extends DetectedFeature { 
+	Points: Vector2D[];
+	clone() : DetectedFeatureRegion;
+	static C(Other: UObject | any): DetectedFeatureRegion;
+}
+
+declare class DetectedFeature2D extends DetectedFeature { 
+	BoundingBox: Box2D;
+	clone() : DetectedFeature2D;
+	static C(Other: UObject | any): DetectedFeature2D;
+}
+
+declare type EDetectedFaceFeatureType = 'Unkown' | 'FaceContour' | 'InnerLips' | 'LeftEye' | 'LeftEyebrow' | 'LeftPupil' | 'MedianLine' | 'Nose' | 'NoseCrest' | 'OuterLips' | 'RightEye' | 'RightEyebrow' | 'RightPupil' | 'EDetectedFaceFeatureType_MAX';
+declare var EDetectedFaceFeatureType : { Unkown:'Unkown',FaceContour:'FaceContour',InnerLips:'InnerLips',LeftEye:'LeftEye',LeftEyebrow:'LeftEyebrow',LeftPupil:'LeftPupil',MedianLine:'MedianLine',Nose:'Nose',NoseCrest:'NoseCrest',OuterLips:'OuterLips',RightEye:'RightEye',RightEyebrow:'RightEyebrow',RightPupil:'RightPupil',EDetectedFaceFeatureType_MAX:'EDetectedFaceFeatureType_MAX', };
+declare class DetectedFaceFeature2D extends DetectedFeature2D { 
+	FeatureType: EDetectedFaceFeatureType;
+	clone() : DetectedFaceFeature2D;
+	static C(Other: UObject | any): DetectedFaceFeature2D;
 }
 
-declare class FileMediaSourceFactoryNew extends Factory { 
-	static Load(ResourceName: string): FileMediaSourceFactoryNew;
-	static Find(Outer: UObject, ResourceName: string): FileMediaSourceFactoryNew;
-	static GetDefaultObject(): FileMediaSourceFactoryNew;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FileMediaSourceFactoryNew;
-	static C(Other: UObject | any): FileMediaSourceFactoryNew;
+declare class DetectedFaceFeatureRegion extends DetectedFeatureRegion { 
+	FeatureType: EDetectedFaceFeatureType;
+	clone() : DetectedFaceFeatureRegion;
+	static C(Other: UObject | any): DetectedFaceFeatureRegion;
+}
+
+declare class DetectedFace extends DetectedFeatureRegion { 
+	BoundingBox: Box2D;
+	Features: DetectedFaceFeature2D[];
+	FeatureRegions: DetectedFaceFeatureRegion[];
+	clone() : DetectedFace;
+	static C(Other: UObject | any): DetectedFace;
 }
 
-declare type EMediaPlayerEditorScale = 'Fill' | 'Fit' | 'Original';
-declare var EMediaPlayerEditorScale : { Fill:'Fill',Fit:'Fit',Original:'Original', };
-declare class MediaPlayerEditorSettings extends UObject { 
-	DesiredPlayerName: string;
-	ShowTextOverlays: boolean;
-	ViewportScale: ViewportScale;
-	static Load(ResourceName: string): MediaPlayerEditorSettings;
-	static Find(Outer: UObject, ResourceName: string): MediaPlayerEditorSettings;
-	static GetDefaultObject(): MediaPlayerEditorSettings;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaPlayerEditorSettings;
-	static C(Other: UObject | any): MediaPlayerEditorSettings;
+declare class FaceDetectionResult { 
+	DetectedFaces: DetectedFace[];
+	clone() : FaceDetectionResult;
+	static C(Other: UObject | any): FaceDetectionResult;
+}
+
+declare class AppleVisionDetectFacesAsyncTaskBlueprintProxy extends UObject { 
+	OnSuccess: UnrealEngineMulticastDelegate<(FaceDetectionResult: FaceDetectionResult) => void>;
+	OnFailure: UnrealEngineMulticastDelegate<(FaceDetectionResult: FaceDetectionResult) => void>;
+	FaceDetectionResult: FaceDetectionResult;
+	static Load(ResourceName: string): AppleVisionDetectFacesAsyncTaskBlueprintProxy;
+	static Find(Outer: UObject, ResourceName: string): AppleVisionDetectFacesAsyncTaskBlueprintProxy;
+	static GetDefaultObject(): AppleVisionDetectFacesAsyncTaskBlueprintProxy;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AppleVisionDetectFacesAsyncTaskBlueprintProxy;
+	static CreateProxyObjectForDetectFaces(SourceImage: Texture): AppleVisionDetectFacesAsyncTaskBlueprintProxy;
+	static C(Other: UObject | any): AppleVisionDetectFacesAsyncTaskBlueprintProxy;
 }
 
-declare class MediaPlayerFactoryNew extends Factory { 
-	static Load(ResourceName: string): MediaPlayerFactoryNew;
-	static Find(Outer: UObject, ResourceName: string): MediaPlayerFactoryNew;
-	static GetDefaultObject(): MediaPlayerFactoryNew;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaPlayerFactoryNew;
-	static C(Other: UObject | any): MediaPlayerFactoryNew;
+declare class MovieSceneGeometryCacheParams { 
+	GeometryCache: SoftObjectPath;
+	StartOffset: number;
+	EndOffset: number;
+	PlayRate: number;
+	bReverse: boolean;
+	clone() : MovieSceneGeometryCacheParams;
+	static C(Other: UObject | any): MovieSceneGeometryCacheParams;
 }
 
-declare class MediaPlaylistFactoryNew extends Factory { 
-	static Load(ResourceName: string): MediaPlaylistFactoryNew;
-	static Find(Outer: UObject, ResourceName: string): MediaPlaylistFactoryNew;
-	static GetDefaultObject(): MediaPlaylistFactoryNew;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaPlaylistFactoryNew;
-	static C(Other: UObject | any): MediaPlaylistFactoryNew;
+declare class MovieSceneGeometryCacheSection extends MovieSceneSection { 
+	Params: MovieSceneGeometryCacheParams;
+	static Load(ResourceName: string): MovieSceneGeometryCacheSection;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneGeometryCacheSection;
+	static GetDefaultObject(): MovieSceneGeometryCacheSection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneGeometryCacheSection;
+	static C(Other: UObject | any): MovieSceneGeometryCacheSection;
 }
 
-declare class MediaSoundWaveFactoryNew extends Factory { 
-	static Load(ResourceName: string): MediaSoundWaveFactoryNew;
-	static Find(Outer: UObject, ResourceName: string): MediaSoundWaveFactoryNew;
-	static GetDefaultObject(): MediaSoundWaveFactoryNew;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaSoundWaveFactoryNew;
-	static C(Other: UObject | any): MediaSoundWaveFactoryNew;
+declare class MovieSceneGeometryCacheTrack extends MovieSceneNameableTrack { 
+	AnimationSections: MovieSceneSection[];
+	static Load(ResourceName: string): MovieSceneGeometryCacheTrack;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneGeometryCacheTrack;
+	static GetDefaultObject(): MovieSceneGeometryCacheTrack;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneGeometryCacheTrack;
+	static C(Other: UObject | any): MovieSceneGeometryCacheTrack;
 }
 
-declare class MediaTextureFactoryNew extends Factory { 
-	static Load(ResourceName: string): MediaTextureFactoryNew;
-	static Find(Outer: UObject, ResourceName: string): MediaTextureFactoryNew;
-	static GetDefaultObject(): MediaTextureFactoryNew;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MediaTextureFactoryNew;
-	static C(Other: UObject | any): MediaTextureFactoryNew;
+declare class WebSocketConnection extends NetConnection { 
+	static Load(ResourceName: string): WebSocketConnection;
+	static Find(Outer: UObject, ResourceName: string): WebSocketConnection;
+	static GetDefaultObject(): WebSocketConnection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WebSocketConnection;
+	static C(Other: UObject | any): WebSocketConnection;
 }
 
-declare class PlatformMediaSourceFactoryNew extends Factory { 
-	static Load(ResourceName: string): PlatformMediaSourceFactoryNew;
-	static Find(Outer: UObject, ResourceName: string): PlatformMediaSourceFactoryNew;
-	static GetDefaultObject(): PlatformMediaSourceFactoryNew;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlatformMediaSourceFactoryNew;
-	static C(Other: UObject | any): PlatformMediaSourceFactoryNew;
+declare class WebSocketNetDriver extends NetDriver { 
+	WebSocketPort: number;
+	static Load(ResourceName: string): WebSocketNetDriver;
+	static Find(Outer: UObject, ResourceName: string): WebSocketNetDriver;
+	static GetDefaultObject(): WebSocketNetDriver;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WebSocketNetDriver;
+	static C(Other: UObject | any): WebSocketNetDriver;
 }
 
-declare class StreamMediaSourceFactoryNew extends Factory { 
-	static Load(ResourceName: string): StreamMediaSourceFactoryNew;
-	static Find(Outer: UObject, ResourceName: string): StreamMediaSourceFactoryNew;
-	static GetDefaultObject(): StreamMediaSourceFactoryNew;
-	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StreamMediaSourceFactoryNew;
-	static C(Other: UObject | any): StreamMediaSourceFactoryNew;
+declare class ImgMediaSettings extends UObject { 
+	DefaultFrameRate: FrameRate;
+	CacheBehindPercentage: number;
+	CacheSizeGB: number;
+	CacheThreads: number;
+	CacheThreadStackSizeKB: number;
+	ExrDecoderThreads: any;
+	DefaultProxy: string;
+	UseDefaultProxy: boolean;
+	static Load(ResourceName: string): ImgMediaSettings;
+	static Find(Outer: UObject, ResourceName: string): ImgMediaSettings;
+	static GetDefaultObject(): ImgMediaSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImgMediaSettings;
+	static C(Other: UObject | any): ImgMediaSettings;
+}
+
+declare class ImgMediaSource extends BaseMediaSource { 
+	FrameRateOverride: FrameRate;
+	ProxyOverride: string;
+	SequencePath: DirectoryPath;
+	static Load(ResourceName: string): ImgMediaSource;
+	static Find(Outer: UObject, ResourceName: string): ImgMediaSource;
+	static GetDefaultObject(): ImgMediaSource;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImgMediaSource;
+	SetSequencePath(Path: string): void;
+	GetSequencePath(): string;
+	GetProxies(OutProxies?: string[]): {OutProxies: string[]};
+	static C(Other: UObject | any): ImgMediaSource;
+}
+
+declare class DropTimecode { 
+	Timecode: Timecode;
+	FrameRate: number;
+	bColorFraming: boolean;
+	bRunningForward: boolean;
+	bNewFrame: boolean;
+	clone() : DropTimecode;
+	static C(Other: UObject | any): DropTimecode;
+	Conv_DropTimecodeToString(): string;
+	static Conv_DropTimecodeToString(InTimecode: DropTimecode): string;
+}
+
+declare class LinearTimecodeComponent extends SceneComponent { 
+	MediaPlayer: MediaPlayer;
+	DropTimecode: DropTimecode;
+	OnTimecodeChange: UnrealEngineMulticastDelegate<(Timecode: DropTimecode) => void>;
+	static Load(ResourceName: string): LinearTimecodeComponent;
+	static Find(Outer: UObject, ResourceName: string): LinearTimecodeComponent;
+	static GetDefaultObject(): LinearTimecodeComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LinearTimecodeComponent;
+	static SetDropTimecodeFrameNumber(Timecode: DropTimecode,FrameNumber: number,OutTimecode?: DropTimecode): {OutTimecode: DropTimecode};
+	static GetDropTimeCodeFrameNumber(Timecode: DropTimecode,FrameNumber?: number): {FrameNumber: number};
+	GetDropFrameNumber(): number;
+	static C(Other: UObject | any): LinearTimecodeComponent;
+}
+
+declare class DropTimecodeToStringConversion extends BlueprintFunctionLibrary { 
+	static Load(ResourceName: string): DropTimecodeToStringConversion;
+	static Find(Outer: UObject, ResourceName: string): DropTimecodeToStringConversion;
+	static GetDefaultObject(): DropTimecodeToStringConversion;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DropTimecodeToStringConversion;
+	static Conv_DropTimecodeToString(InTimecode: DropTimecode): string;
+	static C(Other: UObject | any): DropTimecodeToStringConversion;
+}
+
+declare class MovieSceneMediaSection extends MovieSceneSection { 
+	MediaSource: MediaSource;
+	bLooping: boolean;
+	MediaTexture: MediaTexture;
+	MediaSoundComponent: MediaSoundComponent;
+	bUseExternalMediaPlayer: boolean;
+	ExternalMediaPlayer: MediaPlayer;
+	ThumbnailReferenceOffset: number;
+	static Load(ResourceName: string): MovieSceneMediaSection;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneMediaSection;
+	static GetDefaultObject(): MovieSceneMediaSection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMediaSection;
+	static C(Other: UObject | any): MovieSceneMediaSection;
+}
+
+declare class MovieSceneMediaTrack extends MovieSceneNameableTrack { 
+	MediaSections: MovieSceneSection[];
+	static Load(ResourceName: string): MovieSceneMediaTrack;
+	static Find(Outer: UObject, ResourceName: string): MovieSceneMediaTrack;
+	static GetDefaultObject(): MovieSceneMediaTrack;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMediaTrack;
+	static C(Other: UObject | any): MovieSceneMediaTrack;
+}
+
+declare class NetPropertyHook extends Property { 
+	static Load(ResourceName: string): NetPropertyHook;
+	static Find(Outer: UObject, ResourceName: string): NetPropertyHook;
+	static GetDefaultObject(): NetPropertyHook;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NetPropertyHook;
+	static C(Other: UObject | any): NetPropertyHook;
+}
+
+declare class UnitTestBase extends UObject { 
+	static Load(ResourceName: string): UnitTestBase;
+	static Find(Outer: UObject, ResourceName: string): UnitTestBase;
+	static GetDefaultObject(): UnitTestBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnitTestBase;
+	static C(Other: UObject | any): UnitTestBase;
+}
+
+declare class UnitTask extends UObject { 
+	static Load(ResourceName: string): UnitTask;
+	static Find(Outer: UObject, ResourceName: string): UnitTask;
+	static GetDefaultObject(): UnitTask;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnitTask;
+	static C(Other: UObject | any): UnitTask;
+}
+
+declare type EUnitTestVerification = 'Unverified' | 'VerifiedNotFixed' | 'VerifiedFixed' | 'VerifiedNeedsUpdate' | 'VerifiedUnreliable' | 'EUnitTestVerification_MAX';
+declare var EUnitTestVerification : { Unverified:'Unverified',VerifiedNotFixed:'VerifiedNotFixed',VerifiedFixed:'VerifiedFixed',VerifiedNeedsUpdate:'VerifiedNeedsUpdate',VerifiedUnreliable:'VerifiedUnreliable',EUnitTestVerification_MAX:'EUnitTestVerification_MAX', };
+declare class UnitTest extends UnitTestBase { 
+	PeakMemoryUsage: any;
+	TimeToPeakMem: number;
+	LastExecutionTime: number;
+	UnitTasks: UnitTask[];
+	VerificationState: EUnitTestVerification;
+	static Load(ResourceName: string): UnitTest;
+	static Find(Outer: UObject, ResourceName: string): UnitTest;
+	static GetDefaultObject(): UnitTest;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnitTest;
+	static C(Other: UObject | any): UnitTest;
+}
+
+declare class ProcessUnitTest extends UnitTest { 
+	static Load(ResourceName: string): ProcessUnitTest;
+	static Find(Outer: UObject, ResourceName: string): ProcessUnitTest;
+	static GetDefaultObject(): ProcessUnitTest;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProcessUnitTest;
+	static C(Other: UObject | any): ProcessUnitTest;
+}
+
+declare class MinimalClient extends UObject { 
+	static Load(ResourceName: string): MinimalClient;
+	static Find(Outer: UObject, ResourceName: string): MinimalClient;
+	static GetDefaultObject(): MinimalClient;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MinimalClient;
+	static C(Other: UObject | any): MinimalClient;
+}
+
+declare class ClientUnitTest extends ProcessUnitTest { 
+	MinClient: MinimalClient;
+	static Load(ResourceName: string): ClientUnitTest;
+	static Find(Outer: UObject, ResourceName: string): ClientUnitTest;
+	static GetDefaultObject(): ClientUnitTest;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClientUnitTest;
+	static C(Other: UObject | any): ClientUnitTest;
+}
+
+declare class IPClient extends ClientUnitTest { 
+	static Load(ResourceName: string): IPClient;
+	static Find(Outer: UObject, ResourceName: string): IPClient;
+	static GetDefaultObject(): IPClient;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IPClient;
+	static C(Other: UObject | any): IPClient;
+}
+
+declare class HTML5Client extends IPClient { 
+	static Load(ResourceName: string): HTML5Client;
+	static Find(Outer: UObject, ResourceName: string): HTML5Client;
+	static GetDefaultObject(): HTML5Client;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HTML5Client;
+	static C(Other: UObject | any): HTML5Client;
+}
+
+declare class NUTActor extends Actor { 
+	TempDelegate: UnrealEngineDelegate<(InNUTActor: NUTActor) => void>;
+	static GetDefaultObject(): NUTActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NUTActor;
+	Wait(Seconds: any): void;
+	UnitTravel(Dest: string): void;
+	UnitSeamlessTravel(Dest: string): void;
+	ServerReceiveText(InText: string): void;
+	ServerExecute(InDelegate: string): void;
+	ServerClientStillAlive(): void;
+	ServerClientPing(): void;
+	ServerAdmin(Command: string): void;
+	NetMulticastPing(): void;
+	NetFlush(): void;
+	Admin(Command: string): void;
+	static C(Other: UObject | any): NUTActor;
+}
+
+declare class NUTGlobals extends UObject { 
+	EventWatcher: NetConnection;
+	ServerPortOffset: number;
+	UnitTestNetDriverCount: number;
+	DumpRPCMatches: string[];
+	UnitTestModules: string[];
+	UnloadedModules: string[];
+	static Load(ResourceName: string): NUTGlobals;
+	static Find(Outer: UObject, ResourceName: string): NUTGlobals;
+	static GetDefaultObject(): NUTGlobals;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NUTGlobals;
+	static C(Other: UObject | any): NUTGlobals;
+}
+
+declare class SteamClient extends IPClient { 
+	static Load(ResourceName: string): SteamClient;
+	static Find(Outer: UObject, ResourceName: string): SteamClient;
+	static GetDefaultObject(): SteamClient;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SteamClient;
+	static C(Other: UObject | any): SteamClient;
+}
+
+declare class UnitTestActorChannel extends ActorChannel { 
+	static Load(ResourceName: string): UnitTestActorChannel;
+	static Find(Outer: UObject, ResourceName: string): UnitTestActorChannel;
+	static GetDefaultObject(): UnitTestActorChannel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnitTestActorChannel;
+	static C(Other: UObject | any): UnitTestActorChannel;
+}
+
+declare class UnitTestChannel extends Channel { 
+	static Load(ResourceName: string): UnitTestChannel;
+	static Find(Outer: UObject, ResourceName: string): UnitTestChannel;
+	static GetDefaultObject(): UnitTestChannel;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnitTestChannel;
+	static C(Other: UObject | any): UnitTestChannel;
+}
+
+declare class UnitTestCommandlet extends Commandlet { 
+	static Load(ResourceName: string): UnitTestCommandlet;
+	static Find(Outer: UObject, ResourceName: string): UnitTestCommandlet;
+	static GetDefaultObject(): UnitTestCommandlet;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnitTestCommandlet;
+	static C(Other: UObject | any): UnitTestCommandlet;
+}
+
+declare class UnitTestManager extends UObject { 
+	bCapUnitTestCount: boolean;
+	MaxUnitTestCount: number;
+	bCapUnitTestMemory: boolean;
+	MaxMemoryPercent: number;
+	AutoCloseMemoryPercent: number;
+	MaxAutoCloseCount: number;
+	UnitTestSessionCount: any;
+	PendingUnitTests: UnrealEngineClass[];
+	ActiveUnitTests: UnitTest[];
+	FinishedUnitTests: UnitTest[];
+	static Load(ResourceName: string): UnitTestManager;
+	static Find(Outer: UObject, ResourceName: string): UnitTestManager;
+	static GetDefaultObject(): UnitTestManager;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnitTestManager;
+	static C(Other: UObject | any): UnitTestManager;
+}
+
+declare class UnitTestPackageMap extends PackageMapClient { 
+	static Load(ResourceName: string): UnitTestPackageMap;
+	static Find(Outer: UObject, ResourceName: string): UnitTestPackageMap;
+	static GetDefaultObject(): UnitTestPackageMap;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UnitTestPackageMap;
+	static C(Other: UObject | any): UnitTestPackageMap;
+}
+
+declare class VMReflection extends UnitTest { 
+	static Load(ResourceName: string): VMReflection;
+	static Find(Outer: UObject, ResourceName: string): VMReflection;
+	static GetDefaultObject(): VMReflection;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VMReflection;
+	static C(Other: UObject | any): VMReflection;
+}
+
+declare class VMTestClassA extends UObject { 
+	AObjectRef: UObject;
+	ByteProp: number;
+	UInt16Prop: any;
+	UInt32Prop: any;
+	UInt64Prop: any;
+	Int8Prop: any;
+	Int16Prop: any;
+	Int32Prop: number;
+	Int64Prop: any;
+	FloatProp: number;
+	DoubleProp: any;
+	bBoolPropA: boolean;
+	bBoolPropB: boolean;
+	bBoolPropC: boolean;
+	bBoolPropD: boolean;
+	bBoolPropE: boolean;
+	NameProp: string;
+	StringProp: string;
+	TextProp: string;
+	BytePropArray: number;
+	ObjectPropArray: UObject;
+	DynBytePropArray: number[];
+	DynBoolPropArray: boolean[];
+	DynObjectPropArray: UObject[];
+	DynNamePropArray: string[];
+	DynDoublePropArray: any[];
+	DynFloatPropArray: number[];
+	DynInt16PropArray: any[];
+	DynInt64PropArray: any[];
+	DynInt8PropArray: any[];
+	DynIntPropArray: number[];
+	DynUInt16PropArray: any[];
+	DynUIntPropArray: any[];
+	DynUInt64PropArray: any[];
+	DynStringPropArray: string[];
+	DynTextPropArray: string[];
+	DynClassPropArray: UnrealEngineClass[];
+	DynPawnPropArray: Pawn[];
+	StructProp: Vector;
+	StructPropArray: Vector;
+	DynStructPropArray: Vector[];
+	static Load(ResourceName: string): VMTestClassA;
+	static Find(Outer: UObject, ResourceName: string): VMTestClassA;
+	static GetDefaultObject(): VMTestClassA;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VMTestClassA;
+	static C(Other: UObject | any): VMTestClassA;
+}
+
+declare class VMTestClassB extends UObject { 
+	BObjectRef: UObject;
+	static Load(ResourceName: string): VMTestClassB;
+	static Find(Outer: UObject, ResourceName: string): VMTestClassB;
+	static GetDefaultObject(): VMTestClassB;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VMTestClassB;
+	static C(Other: UObject | any): VMTestClassB;
+}
+
+declare class FTextCrash extends ClientUnitTest { 
+	static Load(ResourceName: string): FTextCrash;
+	static Find(Outer: UObject, ResourceName: string): FTextCrash;
+	static GetDefaultObject(): FTextCrash;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FTextCrash;
+	static C(Other: UObject | any): FTextCrash;
+}
+
+declare class NetBitsTest extends UnitTest { 
+	static Load(ResourceName: string): NetBitsTest;
+	static Find(Outer: UObject, ResourceName: string): NetBitsTest;
+	static GetDefaultObject(): NetBitsTest;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NetBitsTest;
+	static C(Other: UObject | any): NetBitsTest;
+}
+
+declare class UTT61_DebugReplicateData extends ClientUnitTest { 
+	static Load(ResourceName: string): UTT61_DebugReplicateData;
+	static Find(Outer: UObject, ResourceName: string): UTT61_DebugReplicateData;
+	static GetDefaultObject(): UTT61_DebugReplicateData;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UTT61_DebugReplicateData;
+	static C(Other: UObject | any): UTT61_DebugReplicateData;
 }
 
 declare class AndroidPermissionCallbackProxy extends UObject { 
@@ -3738,7 +9860,7 @@ declare class AndroidPermissionFunctionLibrary extends BlueprintFunctionLibrary
 	static GetDefaultObject(): AndroidPermissionFunctionLibrary;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AndroidPermissionFunctionLibrary;
 	static CheckPermission(permission: string): boolean;
-	static AcquirePermissions(permissions: string[]): AndroidPermissionCallbackProxy;
+	static AcquirePermissions(Permissions: string[]): AndroidPermissionCallbackProxy;
 	static C(Other: UObject | any): AndroidPermissionFunctionLibrary;
 }
 
@@ -3772,6 +9894,15 @@ declare class ArchVisCharMovementComponent extends CharacterMovementComponent {
 	static C(Other: UObject | any): ArchVisCharMovementComponent;
 }
 
+declare class AudioCaptureComponent extends SynthComponent { 
+	JitterLatencyFrames: number;
+	static Load(ResourceName: string): AudioCaptureComponent;
+	static Find(Outer: UObject, ResourceName: string): AudioCaptureComponent;
+	static GetDefaultObject(): AudioCaptureComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioCaptureComponent;
+	static C(Other: UObject | any): AudioCaptureComponent;
+}
+
 declare class ComponentReference { 
 	OtherActor: Actor;
 	ComponentProperty: string;
@@ -3871,27 +10002,44 @@ declare class MobilePatchingLibrary extends BlueprintFunctionLibrary {
 	static C(Other: UObject | any): MobilePatchingLibrary;
 }
 
-declare type ESteamVRTouchDPadMapping = 'FaceButtons' | 'ThumbstickDirections' | 'Disabled';
-declare var ESteamVRTouchDPadMapping : { FaceButtons:'FaceButtons',ThumbstickDirections:'ThumbstickDirections',Disabled:'Disabled', };
+declare type ESteamVRTouchDPadMapping = 'FaceButtons' | 'ThumbstickDirections' | 'Disabled' | 'ESteamVRTouchDPadMapping_MAX';
+declare var ESteamVRTouchDPadMapping : { FaceButtons:'FaceButtons',ThumbstickDirections:'ThumbstickDirections',Disabled:'Disabled',ESteamVRTouchDPadMapping_MAX:'ESteamVRTouchDPadMapping_MAX', };
 declare class SteamVRControllerLibrary extends BlueprintFunctionLibrary { 
 	static Load(ResourceName: string): SteamVRControllerLibrary;
 	static Find(Outer: UObject, ResourceName: string): SteamVRControllerLibrary;
 	static GetDefaultObject(): SteamVRControllerLibrary;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SteamVRControllerLibrary;
-	static SetTouchDPadMapping(NewMapping: NewMapping): void;
+	static SetTouchDPadMapping(NewMapping: ESteamVRTouchDPadMapping): void;
 	static C(Other: UObject | any): SteamVRControllerLibrary;
 }
 
+declare class JavascriptPinParams { 
+	ContainerType: EPinContainerType;
+	bIsReference: boolean;
+	bIsConst: boolean;
+	index: number;
+	clone() : JavascriptPinParams;
+	static C(Other: UObject | any): JavascriptPinParams;
+}
+
 declare class JavascriptGraphEdNode extends EdGraphNode { 
 	BackgroundColor: SlateColor;
 	GraphNode: UObject;
+	IsTitleOnly: boolean;
 	Bidirectional: boolean;
 	PriorityOrder: number;
 	static Load(ResourceName: string): JavascriptGraphEdNode;
 	static Find(Outer: UObject, ResourceName: string): JavascriptGraphEdNode;
 	static GetDefaultObject(): JavascriptGraphEdNode;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphEdNode;
-	CreatePin(Dir: EEdGraphPinDirection,PinCategory: string,PinSubCategory: string,PinSubCategoryObject: UObject,bIsArray: boolean,bIsReference: boolean,PinName: string,bIsConst: boolean,PinToolTip: string): JavascriptEdGraphPin;
+	UpdateSlate(): void;
+	SetTitleSelectionMode(TitleHeight: number): void;
+	ResetTitleSelectionMode(): void;
+	RemovePinByName(PinName: string): boolean;
+	RemovePin(Pin: JavascriptEdGraphPin): boolean;
+	GetNumOfPins(Direction: EEdGraphPinDirection): number;
+	GetDesiredSize(): Vector2D;
+	CreatePin(Dir: EEdGraphPinDirection,PinCategory: string,PinSubCategory: string,PinSubCategoryObject: UObject,PinName: string,PinToolTip: string,InPinParams: JavascriptPinParams): JavascriptEdGraphPin;
 	static C(Other: UObject | any): JavascriptGraphEdNode;
 }
 
@@ -3946,8 +10094,8 @@ declare class JavascriptGraphConnectionDrawingPolicyContainer {
 	static MakeRotatedBox(Container: JavascriptGraphConnectionDrawingPolicyContainer,ArrowDrawPos: Vector2D,AngleInRadians: number,WireColor: LinearColor): void;
 }
 
-declare type EGraphSchemaGetStringQuery = 'Description' | 'Title';
-declare var EGraphSchemaGetStringQuery : { Description:'Description',Title:'Title', };
+declare type EGraphSchemaGetStringQuery = 'Description' | 'Title' | 'EGraphSchemaGetStringQuery_MAX';
+declare var EGraphSchemaGetStringQuery : { Description:'Description',Title:'Title',EGraphSchemaGetStringQuery_MAX:'EGraphSchemaGetStringQuery_MAX', };
 declare class JavascriptGraphMenuBuilder extends JavascriptMenuBuilder { 
 	Graph: EdGraph;
 	GraphNode: EdGraphNode;
@@ -3957,8 +10105,8 @@ declare class JavascriptGraphMenuBuilder extends JavascriptMenuBuilder {
 	static C(Other: UObject | any): JavascriptGraphMenuBuilder;
 }
 
-declare type ECanCreateConnectionResponse = 'CONNECT_RESPONSE_MAKE' | 'CONNECT_RESPONSE_DISALLOW' | 'CONNECT_RESPONSE_BREAK_OTHERS_A' | 'CONNECT_RESPONSE_BREAK_OTHERS_B' | 'CONNECT_RESPONSE_BREAK_OTHERS_AB' | 'CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE';
-declare var ECanCreateConnectionResponse : { CONNECT_RESPONSE_MAKE:'CONNECT_RESPONSE_MAKE',CONNECT_RESPONSE_DISALLOW:'CONNECT_RESPONSE_DISALLOW',CONNECT_RESPONSE_BREAK_OTHERS_A:'CONNECT_RESPONSE_BREAK_OTHERS_A',CONNECT_RESPONSE_BREAK_OTHERS_B:'CONNECT_RESPONSE_BREAK_OTHERS_B',CONNECT_RESPONSE_BREAK_OTHERS_AB:'CONNECT_RESPONSE_BREAK_OTHERS_AB',CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE:'CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE', };
+declare type ECanCreateConnectionResponse = 'CONNECT_RESPONSE_MAKE' | 'CONNECT_RESPONSE_DISALLOW' | 'CONNECT_RESPONSE_BREAK_OTHERS_A' | 'CONNECT_RESPONSE_BREAK_OTHERS_B' | 'CONNECT_RESPONSE_BREAK_OTHERS_AB' | 'CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE' | 'CONNECT_RESPONSE_MAX';
+declare var ECanCreateConnectionResponse : { CONNECT_RESPONSE_MAKE:'CONNECT_RESPONSE_MAKE',CONNECT_RESPONSE_DISALLOW:'CONNECT_RESPONSE_DISALLOW',CONNECT_RESPONSE_BREAK_OTHERS_A:'CONNECT_RESPONSE_BREAK_OTHERS_A',CONNECT_RESPONSE_BREAK_OTHERS_B:'CONNECT_RESPONSE_BREAK_OTHERS_B',CONNECT_RESPONSE_BREAK_OTHERS_AB:'CONNECT_RESPONSE_BREAK_OTHERS_AB',CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE:'CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE',CONNECT_RESPONSE_MAX:'CONNECT_RESPONSE_MAX', };
 declare class JavascriptPinConnectionResponse { 
 	Message: string;
 	Response: ECanCreateConnectionResponse;
@@ -4026,25 +10174,31 @@ declare class JavascriptGraphAssetGraphSchema extends EdGraphSchema {
 	OnTryCreateConnection: UnrealEngineDelegate<(PinA: JavascriptEdGraphPin, PinB: JavascriptEdGraphPin) => void>;
 	OnMouseEnter: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, SlateEdNode: JavascriptSlateEdNode) => void>;
 	OnMouseLeave: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, SlateEdNode: JavascriptSlateEdNode) => void>;
+	OnMouseMove: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, Delta: Vector2D, bUserIsDragging: boolean, MouseZone: number) => void>;
+	OnMouseButtonDown: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, MyGeometry: Geometry) => void>;
+	OnMouseButtonUp: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, MyGeometry: Geometry) => void>;
 	OnPerformSecondPassLayout: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => JavascriptPerformSecondPassLayoutContainer>;
 	OnRequiresSecondPassLayout: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => boolean>;
-	OnSkipMoveTo: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => boolean>;
-	OnTakeCustomContentWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, OutUserWidget: JavascriptSlateWidget, OutLeftNodeBoxWidget: JavascriptSlateWidget, OutRightNodeBoxWidget: JavascriptSlateWidget) => JavascriptSlateWidget>;
+	OnMoveTo: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, NewPosition: Vector2D) => boolean>;
+	OnTakeCustomContentWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, OutUserWidget: JavascriptSlateWidget, OutLeftNodeBoxWidget: JavascriptSlateWidget, OutRightNodeBoxWidget: JavascriptSlateWidget, OutAltLeftNodeBoxWidget: JavascriptSlateWidget, OutAltRightNodeBoxWidget: JavascriptSlateWidget) => JavascriptSlateWidget>;
 	OnGetValueWidget: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => JavascriptSlateWidget>;
 	OnGetActualPinWidget: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => JavascriptSlateWidget>;
 	OnGetPinStatusIndicator: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => JavascriptSlateWidget>;
 	OnDisableMakePins: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => boolean>;
 	OnUsingDefaultPin: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => boolean>;
+	OnGetPinLabelVisibility: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => boolean>;
+	OnUsingAlternativeInputPinBox: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => boolean>;
+	OnUsingAlternativeOutputPinBox: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => boolean>;
 	OnUsingNodeWidgetMap: UnrealEngineDelegate<() => boolean>;
 	OnDetermineWiringStyle: UnrealEngineDelegate<(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer) => void>;
 	OnComputeSplineTangent: UnrealEngineDelegate<(A: Vector2D, B: Vector2D) => Vector2D>;
 	OnDrawSplineWithArrow: UnrealEngineDelegate<(A: Vector2D, B: Vector2D, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer, ArrowRadius: Vector2D) => boolean>;
 	OnDrawSplineWithArrow_Geom: UnrealEngineDelegate<(A: Geometry, B: Geometry, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer) => boolean>;
-	OnDrawPreviewConnector: UnrealEngineDelegate<(PinGeometry: Geometry, StartPoint: Vector2D, EndPoint: Vector2D, Pin: JavascriptEdGraphPin, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer) => boolean>;
+	OnDrawPreviewConnector: UnrealEngineDelegate<(PinGeometry: Geometry, StartPoint: Vector2D, Endpoint: Vector2D, Pin: JavascriptEdGraphPin, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer) => boolean>;
 	OnTakeWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => JavascriptSlateWidget>;
 	OnTakeTitleWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => JavascriptSlateWidget>;
 	OnTakeErrorReportingWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => JavascriptSlateWidget>;
-	OnGetString: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, Query: Query) => string>;
+	OnGetString: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, Query: EGraphSchemaGetStringQuery) => string>;
 	OnBuildMenu: UnrealEngineDelegate<(Builder: JavascriptGraphMenuBuilder) => void>;
 	OnAllocateDefaultPins: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) => void>;
 	OnCreatePin: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => JavascriptSlateWidget>;
@@ -4054,6 +10208,13 @@ declare class JavascriptGraphAssetGraphSchema extends EdGraphSchema {
 	OnNodeConnectionListChanged: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) => void>;
 	OnCreateAutomaticConversionNodeAndConnections: UnrealEngineDelegate<(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin) => boolean>;
 	OnDetermineLinkGeometry: UnrealEngineDelegate<(OutPin: JavascriptEdGraphPin, InputPin: JavascriptEdGraphPin, StartWidgetGeometry: JavascriptArrangedWidget, EndWidgetGeometry: JavascriptArrangedWidget, Container: JavascriptDetermineLinkGeometryContainer) => boolean>;
+	OnGetNodeComment: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) => string>;
+	OnSetNodeComment: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode, string: string) => void>;
+	OnIsNodeComment: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => boolean>;
+	OnEndUserInteraction: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) => void>;
+	OnCreateOutputSideAddButton: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => boolean>;
+	OnAddPinByAddButton: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) => void>;
+	OnShouldAlwaysPurgeOnModification: UnrealEngineDelegate<() => boolean>;
 	static Load(ResourceName: string): JavascriptGraphAssetGraphSchema;
 	static Find(Outer: UObject, ResourceName: string): JavascriptGraphAssetGraphSchema;
 	static GetDefaultObject(): JavascriptGraphAssetGraphSchema;
@@ -4079,8 +10240,8 @@ declare class JavascriptGraphEdGraph extends EdGraph {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphEdGraph;
 	RebuildGenericGraph(): void;
 	static C(Other: UObject | any): JavascriptGraphEdGraph;
-	NodeCreator(): JavascriptNodeCreator;
-	static NodeCreator(Graph: JavascriptGraphEdGraph): JavascriptNodeCreator;
+	NodeCreator(bSelectNewNode: boolean): JavascriptNodeCreator;
+	static NodeCreator(Graph: JavascriptGraphEdGraph,bSelectNewNode: boolean): JavascriptNodeCreator;
 }
 
 declare class JavascriptGraphEditorLibrary extends BlueprintFunctionLibrary { 
@@ -4090,9 +10251,11 @@ declare class JavascriptGraphEditorLibrary extends BlueprintFunctionLibrary {
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphEditorLibrary;
 	static TryConnection(Schema: EdGraphSchema,A: JavascriptEdGraphPin,B: JavascriptEdGraphPin): void;
 	static SetPinType(Pin: JavascriptEdGraphPin,PinType: EdGraphPinType): void;
+	static SetPinInfo(A: JavascriptEdGraphPin,InPinName: string,InPinToolTip: string): void;
 	static SetNodeMetaData(Schema: EdGraphSchema,UNode: EdGraphNode,KeyValue: string): boolean;
+	static ResizeNode(UNode: EdGraphNode,NewSize: Vector2D): void;
 	static RemovePinFromHoverSet(InSlateNode: JavascriptSlateEdNode,Pin: JavascriptEdGraphPin): void;
-	static NodeCreator(Graph: JavascriptGraphEdGraph): JavascriptNodeCreator;
+	static NodeCreator(Graph: JavascriptGraphEdGraph,bSelectNewNode: boolean): JavascriptNodeCreator;
 	static MakeRotatedBox(Container: JavascriptGraphConnectionDrawingPolicyContainer,ArrowDrawPos: Vector2D,AngleInRadians: number,WireColor: LinearColor): void;
 	static MakeLinkTo(A: JavascriptEdGraphPin,B: JavascriptEdGraphPin): void;
 	static IsValid(A: JavascriptEdGraphPin): boolean;
@@ -4100,6 +10263,8 @@ declare class JavascriptGraphEditorLibrary extends BlueprintFunctionLibrary {
 	static GetPinType(A: JavascriptEdGraphPin): EdGraphPinType;
 	static GetPins(UNode: EdGraphNode): JavascriptEdGraphPin[];
 	static GetPinName(A: JavascriptEdGraphPin): string;
+	static GetPinGUID(A: JavascriptEdGraphPin): Guid;
+	static GetPinContainerType(A: JavascriptEdGraphPin): EJavascriptPinContainerType;
 	static GetOwningNode(A: JavascriptEdGraphPin): EdGraphNode;
 	static GetOutputPinWidget(Container: JavascriptDetermineLinkGeometryContainer): JavascriptPinWidget;
 	static GetLinkedTo(A: JavascriptEdGraphPin): JavascriptEdGraphPin[];
@@ -4158,6 +10323,7 @@ declare class JavascriptGraphEditorWidget extends Widget {
 	JumpToNode(JumpToMe: EdGraphNode,bRequestRename: boolean,bSelectNode: boolean): void;
 	GetViewLocation(OutLocation?: Vector2D,OutZoomAmount?: number): {OutLocation: Vector2D, OutZoomAmount: number};
 	GetSelectedNodes(): UObject[];
+	GetPasteLocation(): Vector2D;
 	ClearSelectionSet(): void;
 	static C(Other: UObject | any): JavascriptGraphEditorWidget;
 }
@@ -4173,8 +10339,31 @@ declare class JavascriptGraphPinObject extends Widget {
 	static C(Other: UObject | any): JavascriptGraphPinObject;
 }
 
-declare type EJavasriptTabActivationCause = 'UserClickedOnTab' | 'SetDirectly';
-declare var EJavasriptTabActivationCause : { UserClickedOnTab:'UserClickedOnTab',SetDirectly:'SetDirectly', };
+declare class JavascriptTextProperty { 
+	Key: string;
+	Namespace: string;
+	Value: string;
+	TableId: string;
+	clone() : JavascriptTextProperty;
+	static C(Other: UObject | any): JavascriptTextProperty;
+}
+
+declare class JavascriptGraphTextPropertyEditableTextBox extends Widget { 
+	OnGetGraphPin: UnrealEngineDelegate<() => JavascriptEdGraphPin>;
+	OnGetDefaultValue: UnrealEngineDelegate<() => JavascriptTextProperty>;
+	OnTextCommitted: UnrealEngineMulticastDelegate<(TextProperty: JavascriptTextProperty) => void>;
+	WidgetStyle: EditableTextBoxStyle;
+	WrapTextAt: number;
+	AutoWrapText: boolean;
+	static Load(ResourceName: string): JavascriptGraphTextPropertyEditableTextBox;
+	static Find(Outer: UObject, ResourceName: string): JavascriptGraphTextPropertyEditableTextBox;
+	static GetDefaultObject(): JavascriptGraphTextPropertyEditableTextBox;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphTextPropertyEditableTextBox;
+	static C(Other: UObject | any): JavascriptGraphTextPropertyEditableTextBox;
+}
+
+declare type EJavasriptTabActivationCause = 'UserClickedOnTab' | 'SetDirectly' | 'EJavasriptTabActivationCause_MAX';
+declare var EJavasriptTabActivationCause : { UserClickedOnTab:'UserClickedOnTab',SetDirectly:'SetDirectly',EJavasriptTabActivationCause_MAX:'EJavasriptTabActivationCause_MAX', };
 declare class JavascriptWorkspaceItem { 
 	clone() : JavascriptWorkspaceItem;
 	static C(Other: UObject | any): JavascriptWorkspaceItem;
@@ -4183,8 +10372,8 @@ declare class JavascriptWorkspaceItem {
 	static GetGroup(Name: string): JavascriptWorkspaceItem;
 }
 
-declare type EJavascriptTabRole = 'MajorTab' | 'PanelTab' | 'NomadTab' | 'DocumentTab';
-declare var EJavascriptTabRole : { MajorTab:'MajorTab',PanelTab:'PanelTab',NomadTab:'NomadTab',DocumentTab:'DocumentTab', };
+declare type EJavascriptTabRole = 'MajorTab' | 'PanelTab' | 'NomadTab' | 'DocumentTab' | 'EJavascriptTabRole_MAX';
+declare var EJavascriptTabRole : { MajorTab:'MajorTab',PanelTab:'PanelTab',NomadTab:'NomadTab',DocumentTab:'DocumentTab',EJavascriptTabRole_MAX:'EJavascriptTabRole_MAX', };
 declare class JavascriptEditorTab extends UObject { 
 	OnSpawnTab: UnrealEngineDelegate<(Context: UObject) => Widget>;
 	OnCloseTab: UnrealEngineDelegate<(Widget: Widget) => void>;
@@ -4222,10 +10411,10 @@ declare class JavascriptUIExtender extends UObject {
 	static GetTopCommandList(): JavascriptUICommandList;
 	static EndSection(): void;
 	static Bind(Commands: JavascriptUICommands): void;
-	static BeginSection(Name: string,Text: string): void;
-	static AddToolBarButton(Commands: JavascriptUICommands,Id: string): void;
+	static BeginSection(Name: string,text: string): void;
+	static AddToolBarButton(Commands: JavascriptUICommands,ID: string): void;
 	static AddMenuSeparator(): void;
-	static AddMenuEntry(Commands: JavascriptUICommands,Id: string): void;
+	static AddMenuEntry(Commands: JavascriptUICommands,ID: string): void;
 	static C(Other: UObject | any): JavascriptUIExtender;
 }
 
@@ -4417,6 +10606,17 @@ declare class JavascriptEditorInputProcessor extends UObject {
 	static C(Other: UObject | any): JavascriptEditorInputProcessor;
 }
 
+declare class JavascriptLazyExtenderDelegates extends UObject { 
+	GetExtender: UnrealEngineDelegate<(List: JavascriptUICommandList, EditingObjects: UObject[]) => JavascriptExtender>;
+	static Load(ResourceName: string): JavascriptLazyExtenderDelegates;
+	static Find(Outer: UObject, ResourceName: string): JavascriptLazyExtenderDelegates;
+	static GetDefaultObject(): JavascriptLazyExtenderDelegates;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptLazyExtenderDelegates;
+	static C(Other: UObject | any): JavascriptLazyExtenderDelegates;
+}
+
+declare type EJavascriptRHIFeatureLevel = 'ES2' | 'ES3_1' | 'SM4' | 'SM5' | 'Num' | 'EJavascriptRHIFeatureLevel_MAX';
+declare var EJavascriptRHIFeatureLevel : { ES2:'ES2',ES3_1:'ES3_1',SM4:'SM4',SM5:'SM5',Num:'Num',EJavascriptRHIFeatureLevel_MAX:'EJavascriptRHIFeatureLevel_MAX', };
 declare class JavascriptPDI { 
 	clone() : JavascriptPDI;
 	static C(Other: UObject | any): JavascriptPDI;
@@ -4426,7 +10626,7 @@ declare class JavascriptPDI {
 	DrawDashedLine(Start: Vector,End: Vector,Color: LinearColor,DashSize: number,DepthPriority: ESceneDepthPriorityGroup,DepthBias: number): void;
 	DrawDirectionalArrow(ArrowToWorld: Transform,InColor: LinearColor,Length: number,ArrowSize: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number): void;
 	DrawOrientedWireBox(Base: Vector,X: Vector,Y: Vector,Z: Vector,Extent: Vector,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
-	DrawPolygon(Verts: Vector[],InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
+	DrawPolygon(Verts: Vector[],InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup,RHIFeatureLevel: EJavascriptRHIFeatureLevel): void;
 	DrawWireBox(Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
 	DrawWireBox2(Matrix: Transform,Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
 	DrawWireCapsule(Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
@@ -4447,7 +10647,7 @@ declare class JavascriptPDI {
 	static DrawDashedLine(PDI: JavascriptPDI,Start: Vector,End: Vector,Color: LinearColor,DashSize: number,DepthPriority: ESceneDepthPriorityGroup,DepthBias: number): void;
 	static DrawDirectionalArrow(PDI: JavascriptPDI,ArrowToWorld: Transform,InColor: LinearColor,Length: number,ArrowSize: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number): void;
 	static DrawOrientedWireBox(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Extent: Vector,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
-	static DrawPolygon(PDI: JavascriptPDI,Verts: Vector[],InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
+	static DrawPolygon(PDI: JavascriptPDI,Verts: Vector[],InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup,RHIFeatureLevel: EJavascriptRHIFeatureLevel): void;
 	static DrawWireBox(PDI: JavascriptPDI,Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
 	static DrawWireBox2(PDI: JavascriptPDI,Matrix: Transform,Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
 	static DrawWireCapsule(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
@@ -4468,8 +10668,12 @@ declare class JavascriptExtensibilityManager {
 	clone() : JavascriptExtensibilityManager;
 	static C(Other: UObject | any): JavascriptExtensibilityManager;
 	AddExtender(Extender: JavascriptExtender): void;
+	AddLazyExtender(Delegates: JavascriptLazyExtenderDelegates): void;
+	RemoveAllLazyExtender(): void;
 	RemoveExtender(Extender: JavascriptExtender): void;
 	static AddExtender(Manager: JavascriptExtensibilityManager,Extender: JavascriptExtender): void;
+	static AddLazyExtender(Manager: JavascriptExtensibilityManager,Delegates: JavascriptLazyExtenderDelegates): void;
+	static RemoveAllLazyExtender(Manager: JavascriptExtensibilityManager): void;
 	static RemoveExtender(Manager: JavascriptExtensibilityManager,Extender: JavascriptExtender): void;
 	static GetMenuExtensibilityManager(What: string): JavascriptExtensibilityManager;
 	static GetToolBarExtensibilityManager(What: string): JavascriptExtensibilityManager;
@@ -4505,8 +10709,8 @@ declare class JavascriptHitProxy {
 	static GetName(Proxy: JavascriptHitProxy): string;
 }
 
-declare type EJavascriptMessageSeverity = 'CriticalError' | 'Error' | 'PerformanceWarning' | 'Warning' | 'Info';
-declare var EJavascriptMessageSeverity : { CriticalError:'CriticalError',Error:'Error',PerformanceWarning:'PerformanceWarning',Warning:'Warning',Info:'Info', };
+declare type EJavascriptMessageSeverity = 'CriticalError' | 'Error' | 'PerformanceWarning' | 'Warning' | 'Info' | 'EJavascriptMessageSeverity_MAX';
+declare var EJavascriptMessageSeverity : { CriticalError:'CriticalError',Error:'Error',PerformanceWarning:'PerformanceWarning',Warning:'Warning',Info:'Info',EJavascriptMessageSeverity_MAX:'EJavascriptMessageSeverity_MAX', };
 declare class JavascriptEditorLibrary extends BlueprintFunctionLibrary { 
 	static Load(ResourceName: string): JavascriptEditorLibrary;
 	static Find(Outer: UObject, ResourceName: string): JavascriptEditorLibrary;
@@ -4519,17 +10723,26 @@ declare class JavascriptEditorLibrary extends BlueprintFunctionLibrary {
 	static SetHeightmapDataFromMemory(LandscapeInfo: LandscapeInfo,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
 	static SetFolderPath_Recursively(Actor: Actor,NewFolderPath: string): void;
 	static SetFolderPath(Actor: Actor,NewFolderPath: string): void;
-	static SetAlphamapDataFromMemory(LandscapeInfo: LandscapeInfo,LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number,PaintingRestriction: PaintingRestriction): void;
+	static SetAlphamapDataFromMemory(LandscapeInfo: LandscapeInfo,LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number,PaintingRestriction: ELandscapeLayerPaintingRestriction): void;
 	static SetActorLabel(Actor: Actor,NewActorLabel: string,bMarkDirty: boolean): void;
 	static Select(USelection: USelection,InObject: UObject): void;
-	static SavePackage(Package: Package,FileName: string): boolean;
+	static SavePackage(Package: Package,Filename: string): boolean;
 	static RequestEndPlayMapInPIE(): void;
+	static ReplaceAnimNotifyClass(Sequence: AnimSequenceBase,NotifyName: string,NewNotifyName: string,NewNotifyClass: UObject): number;
 	static RemoveLevelInstance(World: World): void;
 	static RemoveExtender(Manager: JavascriptExtensibilityManager,Extender: JavascriptExtender): void;
+	static RemoveComponentFromBlueprint(Blueprint: Blueprint,RemoveComponent: ActorComponent,bPromoteChildren: boolean): void;
+	static RemoveAllLazyExtender(Manager: JavascriptExtensibilityManager): void;
 	static PostEditChange(InObject: UObject): void;
 	static OpenPopupWindow(Widget: Widget,PopupDesiredSize: Vector2D,HeadingText: string): void;
+	static OpenFileDialog(WindowHandle: JavascriptWindow,DialogTitle: string,DefaultPath: string,DefaultFile: string,FileTypes: string,Flags: number,OutFilenames?: string[]): {OutFilenames: string[], $: boolean};
+	static OpenEditorForAssetByPath(AssetPathName: string,ObjectName: string): void;
+	static OpenEditorForAsset(Asset: UObject): boolean;
 	static ModifyObject(UObject: UObject,bAlwaysMarkDirty: boolean): void;
 	static MarkPackageDirty(InObject: UObject): boolean;
+	static LoadImageFromDiskAsync(ImagePath: string,Callback: AsyncTaskDownloadImage): boolean;
+	static LoadFileToString(Path: string,Data?: string): {Data: string, $: boolean};
+	static LoadFileToIntArray(Path: string,FileData?: number[]): {FileData: number[], $: boolean};
 	static IsShiftDown(Click: JavascriptViewportClick): boolean;
 	static IsControlDown(Click: JavascriptViewportClick): boolean;
 	static IsAssetLoaded(AssetData: JavascriptAssetData): boolean;
@@ -4545,6 +10758,7 @@ declare class JavascriptEditorLibrary extends BlueprintFunctionLibrary {
 	static GetRootWindow(): JavascriptSlateWidget;
 	static GetQueueLength(Transactor: Transactor): number;
 	static GetPrimaryObject(Transaction: JavascriptTransaction): UObject;
+	static GetParentClassOfBlueprint(Blueprint: Blueprint): UnrealEngineClass;
 	static GetPackage(AssetData: JavascriptAssetData): Package;
 	static GetOrigin(Click: JavascriptViewportClick): Vector;
 	static GetName(Proxy: JavascriptHitProxy): string;
@@ -4564,6 +10778,7 @@ declare class JavascriptEditorLibrary extends BlueprintFunctionLibrary {
 	static GetContext(Transaction: JavascriptTransaction): string;
 	static GetClickPos(Click: JavascriptViewportClick): IntPoint;
 	static GetClass(AssetData: JavascriptAssetData): UnrealEngineClass;
+	static GetAssetsByType(Types: string[],bRecursiveClasses: boolean): AssetData[];
 	static GetAsset(AssetData: JavascriptAssetData): UObject;
 	static GetAlphamapDataToMemory(LandscapeInfo: LandscapeInfo,LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
 	static GetAllTags(AssetData: JavascriptAssetData,OutArray?: string[]): {OutArray: string[]};
@@ -4586,7 +10801,7 @@ declare class JavascriptEditorLibrary extends BlueprintFunctionLibrary {
 	static DrawWireCapsule(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
 	static DrawWireBox2(PDI: JavascriptPDI,Matrix: Transform,Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
 	static DrawWireBox(PDI: JavascriptPDI,Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
-	static DrawPolygon(PDI: JavascriptPDI,Verts: Vector[],InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
+	static DrawPolygon(PDI: JavascriptPDI,Verts: Vector[],InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup,RHIFeatureLevel: EJavascriptRHIFeatureLevel): void;
 	static DrawOrientedWireBox(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Extent: Vector,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
 	static DrawDirectionalArrow(PDI: JavascriptPDI,ArrowToWorld: Transform,InColor: LinearColor,Length: number,ArrowSize: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number): void;
 	static DrawDashedLine(PDI: JavascriptPDI,Start: Vector,End: Vector,Color: LinearColor,DashSize: number,DepthPriority: ESceneDepthPriorityGroup,DepthBias: number): void;
@@ -4601,14 +10816,17 @@ declare class JavascriptEditorLibrary extends BlueprintFunctionLibrary {
 	static CreateLogListingWidget(InLogName: string): JavascriptSlateWidget;
 	static CreateLogListing(InLogName: string,InLabel: string): void;
 	static CreateBrushForVolumeActor(NewActor: Volume,BrushBuilder: BrushBuilder): void;
+	static CompileBlueprint(Blueprint: Blueprint): void;
 	static ClearActorLabel(Actor: Actor): void;
 	static Build(Builder: BrushBuilder,InWorld: World,InBrush: Brush): boolean;
 	static BroadcastHotReload(): void;
 	static BroadcastAssetCreated(NewAsset: UObject): void;
 	static AddWhitelistedObject(InObject: UObject): void;
 	static AddLogListingMessage(InLogName: string,InSeverity: EJavascriptMessageSeverity,LogText: string): void;
+	static AddLazyExtender(Manager: JavascriptExtensibilityManager,Delegates: JavascriptLazyExtenderDelegates): void;
 	static AddGroup(Parent: JavascriptWorkspaceItem,DisplayName: string): JavascriptWorkspaceItem;
 	static AddExtender(Manager: JavascriptExtensibilityManager,Extender: JavascriptExtender): void;
+	static AddComponentsToBlueprint(Blueprint: Blueprint,Components: ActorComponent[],bHarvesting: boolean,OptionalNewRootComponent: ActorComponent,bKeepMobility: boolean): void;
 	static C(Other: UObject | any): JavascriptEditorLibrary;
 }
 
@@ -4688,8 +10906,8 @@ declare class JavascriptInputEventState {
 	static IsSpaceBarPressed(InputEvent: JavascriptInputEventState): boolean;
 }
 
-declare type EJavascriptWidgetMode = 'WM_Translate' | 'WM_TranslateRotateZ' | 'WM_2D' | 'WM_Rotate' | 'WM_Scale' | 'WM_Max' | 'WM_None' | '';
-declare var EJavascriptWidgetMode : { WM_Translate:'WM_Translate',WM_TranslateRotateZ:'WM_TranslateRotateZ',WM_2D:'WM_2D',WM_Rotate:'WM_Rotate',WM_Scale:'WM_Scale',WM_Max:'WM_Max',WM_None:'WM_None',:'', };
+declare type EJavascriptWidgetMode = 'WM_Translate' | 'WM_TranslateRotateZ' | 'WM_2D' | 'WM_Rotate' | 'WM_Scale' | 'WM_Max' | 'WM_None';
+declare var EJavascriptWidgetMode : { WM_Translate:'WM_Translate',WM_TranslateRotateZ:'WM_TranslateRotateZ',WM_2D:'WM_2D',WM_Rotate:'WM_Rotate',WM_Scale:'WM_Scale',WM_Max:'WM_Max',WM_None:'WM_None', };
 declare class JavascriptEditorViewport extends PanelWidget { 
 	OnClick: UnrealEngineDelegate<(ViewportClick: JavascriptViewportClick, HitProxy: JavascriptHitProxy, Instance: JavascriptEditorViewport) => void>;
 	OnTrackingStarted: UnrealEngineDelegate<(InputState: JavascriptInputEventState, bIsDraggingWidget: boolean, bNudge: boolean, Instance: JavascriptEditorViewport) => void>;
@@ -4697,19 +10915,19 @@ declare class JavascriptEditorViewport extends PanelWidget {
 	OnInputWidgetDelta: UnrealEngineDelegate<(Drag: Vector, Rot: Rotator, Scale: Vector, Instance: JavascriptEditorViewport) => boolean>;
 	OnInputKey: UnrealEngineDelegate<(ControllerId: number, Key: Key, Event: EInputEvent, Instance: JavascriptEditorViewport) => boolean>;
 	OnInputAxis: UnrealEngineDelegate<(ControllerId: number, Key: Key, Delta: number, DeltaTime: number, Instance: JavascriptEditorViewport) => boolean>;
-	OnMouseEnter: UnrealEngineDelegate<(x: number, y: number, Instance: JavascriptEditorViewport) => boolean>;
-	OnMouseMove: UnrealEngineDelegate<(x: number, y: number, Instance: JavascriptEditorViewport) => boolean>;
+	OnMouseEnter: UnrealEngineDelegate<(X: number, Y: number, Instance: JavascriptEditorViewport) => boolean>;
+	OnMouseMove: UnrealEngineDelegate<(X: number, Y: number, Instance: JavascriptEditorViewport) => boolean>;
 	OnMouseLeave: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) => boolean>;
 	OnDraw: UnrealEngineDelegate<(PDI: JavascriptPDI, Instance: JavascriptEditorViewport) => void>;
 	OnDrawCanvas: UnrealEngineDelegate<(Canvas: Canvas, Instance: JavascriptEditorViewport) => void>;
 	OnGetWidgetLocation: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) => Vector>;
 	OnGetWidgetRotation: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) => Rotator>;
-	OnGetWidgetMode: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) => ReturnValue>;
+	OnGetWidgetMode: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) => EJavascriptWidgetMode>;
 	static Load(ResourceName: string): JavascriptEditorViewport;
 	static Find(Outer: UObject, ResourceName: string): JavascriptEditorViewport;
 	static GetDefaultObject(): JavascriptEditorViewport;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorViewport;
-	SetWidgetMode(WidgetMode: WidgetMode): void;
+	SetWidgetMode(WidgetMode: EJavascriptWidgetMode): void;
 	SetViewRotation(ViewRotation: Rotator): void;
 	SetViewportType(InViewportType: ELevelViewportType): void;
 	SetViewMode(InViewModeIndex: EViewModeIndex): void;
@@ -4730,12 +10948,20 @@ declare class JavascriptEditorViewport extends PanelWidget {
 	Redraw(): void;
 	ProjectWorldToScreen(WorldPosition: Vector,OutScreenPosition?: Vector2D): {OutScreenPosition: Vector2D};
 	OverridePostProcessSettings(PostProcessSettings: PostProcessSettings,Weight: number): void;
-	GetWidgetMode(): ReturnValue;
+	GetWidgetMode(): EJavascriptWidgetMode;
+	GetViewRotation(): Rotator;
 	GetViewportWorld(): World;
+	GetViewLocation(): Vector;
 	GetViewFOV(): number;
 	GetSkyComponent(): StaticMeshComponent;
 	GetFloorMeshComponent(): StaticMeshComponent;
 	GetEngineShowFlags(): string;
+	GetDefaultSphereReflectionComponent(): SphereReflectionCaptureComponent;
+	GetDefaultSkySphereComponent(): StaticMeshComponent;
+	GetDefaultSkyLightComponent(): SkyLightComponent;
+	GetDefaultPostProcessComponent(): PostProcessComponent;
+	GetDefaultInstancedSkyMaterial(): MaterialInstanceConstant;
+	GetDefaultDirectionalLightComponent(): DirectionalLightComponent;
 	GetDefaultAssetViewerSettings(): AssetViewerSettings;
 	GetCurrentProfileIndex(): number;
 	GetCameraSpeedSetting(): number;
@@ -4759,7 +10985,7 @@ declare class JavascriptEditorModeTools {
 	DeactivateMode(InID?: string): {Tools: JavascriptEditorModeTools};
 	DestroyMode(InID?: string): {Tools: JavascriptEditorModeTools};
 	EndTracking(Viewport: JavascriptEdViewport): boolean;
-	EnsureNotInMode(ModeID?: string,ErrorMsg?: string,bNotifyUser?: boolean): {Tools: JavascriptEditorModeTools, $: boolean};
+	EnsureNotInMode(ModeId?: string,ErrorMsg?: string,bNotifyUser?: boolean): {Tools: JavascriptEditorModeTools, $: boolean};
 	IsDefaultModeActive(): {Tools: JavascriptEditorModeTools, $: boolean};
 	IsModeActive(InID?: string): {Tools: JavascriptEditorModeTools, $: boolean};
 	IsTracking(): boolean;
@@ -4771,7 +10997,7 @@ declare class JavascriptEditorModeTools {
 	static DeactivateMode(Tools?: JavascriptEditorModeTools,InID?: string): {Tools: JavascriptEditorModeTools};
 	static DestroyMode(Tools?: JavascriptEditorModeTools,InID?: string): {Tools: JavascriptEditorModeTools};
 	static EndTracking(Tools: JavascriptEditorModeTools,Viewport: JavascriptEdViewport): boolean;
-	static EnsureNotInMode(Tools?: JavascriptEditorModeTools,ModeID?: string,ErrorMsg?: string,bNotifyUser?: boolean): {Tools: JavascriptEditorModeTools, $: boolean};
+	static EnsureNotInMode(Tools?: JavascriptEditorModeTools,ModeId?: string,ErrorMsg?: string,bNotifyUser?: boolean): {Tools: JavascriptEditorModeTools, $: boolean};
 	static IsDefaultModeActive(Tools?: JavascriptEditorModeTools): {Tools: JavascriptEditorModeTools, $: boolean};
 	static IsModeActive(Tools?: JavascriptEditorModeTools,InID?: string): {Tools: JavascriptEditorModeTools, $: boolean};
 	static IsTracking(Tools: JavascriptEditorModeTools): boolean;
@@ -4792,8 +11018,8 @@ declare class JavascriptEditorMode {
 	static SetCurrentWidgetAxis(Mode: JavascriptEditorMode,InAxis: number): void;
 }
 
-declare type EJavascriptEditAction = 'Skip' | 'Process' | 'Halt';
-declare var EJavascriptEditAction : { Skip:'Skip',Process:'Process',Halt:'Halt', };
+declare type EJavascriptEditAction = 'Skip' | 'Process' | 'Halt' | 'EJavascriptEditAction_MAX';
+declare var EJavascriptEditAction : { Skip:'Skip',Process:'Process',Halt:'Halt',EJavascriptEditAction_MAX:'EJavascriptEditAction_MAX', };
 declare class JavascriptEdMode extends UObject { 
 	OnGetWidgetLocation: UnrealEngineDelegate<(Instance: JavascriptEditorMode) => Vector>;
 	OnSelect: UnrealEngineDelegate<(Actor: Actor, bSelected: boolean, Instance: JavascriptEditorMode) => boolean>;
@@ -4816,7 +11042,7 @@ declare class JavascriptEdMode extends UObject {
 	OnSelectionChanged: UnrealEngineDelegate<(Tools: JavascriptEditorModeTools, Item: UObject) => void>;
 	OnGetContent: UnrealEngineDelegate<() => Widget>;
 	OnProcess: UnrealEngineDelegate<(Request: string, Instance: JavascriptEditorMode) => boolean>;
-	OnGetAction: UnrealEngineDelegate<(Request: string, Instance: JavascriptEditorMode) => ReturnValue>;
+	OnGetAction: UnrealEngineDelegate<(Request: string, Instance: JavascriptEditorMode) => EJavascriptEditAction>;
 	OnActorMoved: UnrealEngineDelegate<(Instance: JavascriptEditorMode) => void>;
 	OnActorsDuplicated: UnrealEngineDelegate<(PreDuplicateSelection: Actor[], PostDuplicateSelection: Actor[], bOffsetLocations: boolean, Instance: JavascriptEditorMode) => void>;
 	OnActorSelectionChanged: UnrealEngineDelegate<(Instance: JavascriptEditorMode) => void>;
@@ -4851,7 +11077,7 @@ declare class JavascriptEdModeLibrary extends BlueprintFunctionLibrary {
 	static GetModeManager(Mode: JavascriptEditorMode): JavascriptEditorModeTools;
 	static GetHitProxy(Viewport: JavascriptEdViewport): JavascriptHitProxy;
 	static GetCurrentWidgetAxis(Mode: JavascriptEditorMode): number;
-	static EnsureNotInMode(Tools?: JavascriptEditorModeTools,ModeID?: string,ErrorMsg?: string,bNotifyUser?: boolean): {Tools: JavascriptEditorModeTools, $: boolean};
+	static EnsureNotInMode(Tools?: JavascriptEditorModeTools,ModeId?: string,ErrorMsg?: string,bNotifyUser?: boolean): {Tools: JavascriptEditorModeTools, $: boolean};
 	static EndTracking(Tools: JavascriptEditorModeTools,Viewport: JavascriptEdViewport): boolean;
 	static DestroyMode(Tools?: JavascriptEditorModeTools,InID?: string): {Tools: JavascriptEditorModeTools};
 	static DeactivateMode(Tools?: JavascriptEditorModeTools,InID?: string): {Tools: JavascriptEditorModeTools};
@@ -4884,10 +11110,10 @@ declare class JavascriptInputEventStateLibrary extends BlueprintFunctionLibrary
 	static C(Other: UObject | any): JavascriptInputEventStateLibrary;
 }
 
-declare type EJSCheckBoxState = 'Unchecked' | 'Checked' | 'Undetermined';
-declare var EJSCheckBoxState : { Unchecked:'Unchecked',Checked:'Checked',Undetermined:'Undetermined', };
+declare type EJSCheckBoxState = 'Unchecked' | 'Checked' | 'Undetermined' | 'EJSCheckBoxState_MAX';
+declare var EJSCheckBoxState : { Unchecked:'Unchecked',Checked:'Checked',Undetermined:'Undetermined',EJSCheckBoxState_MAX:'EJSCheckBoxState_MAX', };
 declare class JavascriptNotification extends UObject { 
-	Text: string;
+	text: string;
 	bUseImage: boolean;
 	UImage: SlateBrush;
 	FadeInDuration: number;
@@ -4898,7 +11124,7 @@ declare class JavascriptNotification extends UObject {
 	bUseLargeFont: boolean;
 	bFireAndForget: boolean;
 	CheckBoxState: EJSCheckBoxState;
-	CheckBoxStateChanged: UnrealEngineDelegate<(State: State) => void>;
+	CheckBoxStateChanged: UnrealEngineDelegate<(State: ECheckBoxState) => void>;
 	CheckBoxText: string;
 	Hyperlink: UnrealEngineDelegate<() => void>;
 	HyperlinkText: string;
@@ -4917,8 +11143,8 @@ declare class JavascriptNotification extends UObject {
 	static C(Other: UObject | any): JavascriptNotification;
 }
 
-declare type EPropertyAccessResult = 'MultipleValues' | 'Fail' | 'Success';
-declare var EPropertyAccessResult : { MultipleValues:'MultipleValues',Fail:'Fail',Success:'Success', };
+declare type EPropertyAccessResult = 'MultipleValues' | 'Fail' | 'Success' | 'EPropertyAccessResult_MAX';
+declare var EPropertyAccessResult : { MultipleValues:'MultipleValues',Fail:'Fail',Success:'Success',EPropertyAccessResult_MAX:'EPropertyAccessResult_MAX', };
 declare class JavascriptPropertyHandle { 
 	clone() : JavascriptPropertyHandle;
 	static C(Other: UObject | any): JavascriptPropertyHandle;
@@ -4927,17 +11153,17 @@ declare class JavascriptPropertyHandle {
 	GetChildHandle(Name: string): JavascriptPropertyHandle;
 	GetMetaData(Key: string): string;
 	GetProperty(): Property;
-	GetValueAsFormattedString(OutValue?: string): {OutValue: string, $: ReturnValue};
-	SetOnPropertyValueChanged(UFunction: JavascriptFunction): void;
-	SetValueFromFormattedString(InValue: string): ReturnValue;
+	GetValueAsFormattedString(OutValue?: string): {OutValue: string, $: EPropertyAccessResult};
+	SetOnPropertyValueChanged(Custom: JavascriptPropertyCustomization): void;
+	SetValueFromFormattedString(InValue: string): EPropertyAccessResult;
 	static CreatePropertyNameWidget(Handle: JavascriptPropertyHandle,NameOverride: string,ToolTipOverride: string,bDisplayResetToDefault: boolean,bHideText: boolean,bHideThumbnail: boolean): JavascriptSlateWidget;
 	static CreatePropertyValueWidget(Handle: JavascriptPropertyHandle,bHideDefaultPropertyButtons: boolean): JavascriptSlateWidget;
 	static GetChildHandle(Parent: JavascriptPropertyHandle,Name: string): JavascriptPropertyHandle;
 	static GetMetaData(Handle: JavascriptPropertyHandle,Key: string): string;
 	static GetProperty(Handle: JavascriptPropertyHandle): Property;
-	static GetValueAsFormattedString(Handle: JavascriptPropertyHandle,OutValue?: string): {OutValue: string, $: ReturnValue};
-	static SetOnPropertyValueChanged(Handle: JavascriptPropertyHandle,UFunction: JavascriptFunction): void;
-	static SetValueFromFormattedString(Handle: JavascriptPropertyHandle,InValue: string): ReturnValue;
+	static GetValueAsFormattedString(Handle: JavascriptPropertyHandle,OutValue?: string): {OutValue: string, $: EPropertyAccessResult};
+	static SetOnPropertyValueChanged(Handle: JavascriptPropertyHandle,Custom: JavascriptPropertyCustomization): void;
+	static SetValueFromFormattedString(Handle: JavascriptPropertyHandle,InValue: string): EPropertyAccessResult;
 }
 
 declare class JavascriptDetailWidgetDecl { 
@@ -4993,9 +11219,10 @@ declare class JavascriptDetailChildrenBuilder {
 
 declare class JavascriptPropertyCustomization extends UObject { 
 	PropertyTypeName: string;
-	OnDestroy: UnrealEngineDelegate<(Id: number) => void>;
-	OnCustomizeHeader: UnrealEngineDelegate<(Handle: JavascriptPropertyHandle, HeaderRow: JavascriptDetailWidgetRow, Utils: JavascriptPropertyTypeCustomizationUtils, Id: number) => void>;
-	OnCustomizeChildren: UnrealEngineDelegate<(Handle: JavascriptPropertyHandle, ChildBuilder: JavascriptDetailChildrenBuilder, Utils: JavascriptPropertyTypeCustomizationUtils, Id: number) => void>;
+	OnDestroy: UnrealEngineDelegate<(ID: number) => void>;
+	OnCustomizeHeader: UnrealEngineDelegate<(Handle: JavascriptPropertyHandle, HeaderRow: JavascriptDetailWidgetRow, Utils: JavascriptPropertyTypeCustomizationUtils, ID: number) => void>;
+	OnCustomizeChildren: UnrealEngineDelegate<(Handle: JavascriptPropertyHandle, ChildBuilder: JavascriptDetailChildrenBuilder, Utils: JavascriptPropertyTypeCustomizationUtils, ID: number) => void>;
+	OnPropertyValueChanged: UnrealEngineMulticastDelegate<() => void>;
 	static Load(ResourceName: string): JavascriptPropertyCustomization;
 	static Find(Outer: UObject, ResourceName: string): JavascriptPropertyCustomization;
 	static GetDefaultObject(): JavascriptPropertyCustomization;
@@ -5012,16 +11239,16 @@ declare class JavascriptPropertyCustomizationLibrary extends BlueprintFunctionLi
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptPropertyCustomizationLibrary;
 	static WholeRowContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl;
 	static ValueContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl;
-	static SetValueFromFormattedString(Handle: JavascriptPropertyHandle,InValue: string): ReturnValue;
+	static SetValueFromFormattedString(Handle: JavascriptPropertyHandle,InValue: string): EPropertyAccessResult;
 	static SetVAlign(Decl: JavascriptDetailWidgetDecl,InAlignment: EVerticalAlignment): void;
-	static SetOnPropertyValueChanged(Handle: JavascriptPropertyHandle,UFunction: JavascriptFunction): void;
+	static SetOnPropertyValueChanged(Handle: JavascriptPropertyHandle,Custom: JavascriptPropertyCustomization): void;
 	static SetMinDesiredWidth(Decl: JavascriptDetailWidgetDecl,MinWidth: number): void;
 	static SetMaxDesiredWidth(Decl: JavascriptDetailWidgetDecl,MaxWidth: number): void;
 	static SetHAlign(Decl: JavascriptDetailWidgetDecl,InAlignment: EHorizontalAlignment): void;
 	static SetFilterString(Row: JavascriptDetailWidgetRow,InFilterString: string): void;
 	static SetContent(Decl: JavascriptDetailWidgetDecl,Widget: JavascriptSlateWidget): void;
 	static NameContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl;
-	static GetValueAsFormattedString(Handle: JavascriptPropertyHandle,OutValue?: string): {OutValue: string, $: ReturnValue};
+	static GetValueAsFormattedString(Handle: JavascriptPropertyHandle,OutValue?: string): {OutValue: string, $: EPropertyAccessResult};
 	static GetProperty(Handle: JavascriptPropertyHandle): Property;
 	static GetMetaData(Handle: JavascriptPropertyHandle,Key: string): string;
 	static GetChildHandle(Parent: JavascriptPropertyHandle,Name: string): JavascriptPropertyHandle;
@@ -5080,24 +11307,996 @@ declare class JavascriptScrubControlPanel extends Widget {
 	static C(Other: UObject | any): JavascriptScrubControlPanel;
 }
 
-declare type EPropertyEditorNameAreaSettings = 'HideNameArea' | 'ObjectsUseNameArea' | 'ActorsUseNameArea' | 'ComponentsAndActorsUseNameArea';
-declare var EPropertyEditorNameAreaSettings : { HideNameArea:'HideNameArea',ObjectsUseNameArea:'ObjectsUseNameArea',ActorsUseNameArea:'ActorsUseNameArea',ComponentsAndActorsUseNameArea:'ComponentsAndActorsUseNameArea', };
+declare type EPropertyEditorNameAreaSettings = 'HideNameArea' | 'ObjectsUseNameArea' | 'ActorsUseNameArea' | 'ComponentsAndActorsUseNameArea' | 'EPropertyEditorNameAreaSettings_MAX';
+declare var EPropertyEditorNameAreaSettings : { HideNameArea:'HideNameArea',ObjectsUseNameArea:'ObjectsUseNameArea',ActorsUseNameArea:'ActorsUseNameArea',ComponentsAndActorsUseNameArea:'ComponentsAndActorsUseNameArea',EPropertyEditorNameAreaSettings_MAX:'EPropertyEditorNameAreaSettings_MAX', };
 declare class PropertyEditor extends Widget { 
-	OnChange: UnrealEngineMulticastDelegate<(ParameterName: string) => void>;
+	OnChange: UnrealEngineMulticastDelegate<(PropertyName: string, MemberPropertyName: string) => void>;
 	bUpdateFromSelection: boolean;
 	bLockable: boolean;
 	bAllowSearch: boolean;
 	bHideSelectionTip: boolean;
-	NameAreaSettings: NameAreaSettings;
+	bReadOnly: boolean;
+	NameAreaSettings: EPropertyEditorNameAreaSettings;
 	static Load(ResourceName: string): PropertyEditor;
 	static Find(Outer: UObject, ResourceName: string): PropertyEditor;
 	static GetDefaultObject(): PropertyEditor;
 	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PropertyEditor;
 	SetObjects(Objects: UObject[],bForceRefresh: boolean,bOverrideLock: boolean): void;
 	SetObject(UObject: UObject,bForceRefresh: boolean): void;
+	IsPropertyVisible(PropertName: string,ParentPropertyName: string): boolean;
+	IsPropertyReadOnly(PropertyName: string,ParentPropertyName: string): boolean;
+	Destruct(): void;
+	Construct(): void;
 	static C(Other: UObject | any): PropertyEditor;
 }
 
+declare class MockAI extends UObject { 
+	BBComp: BlackboardComponent;
+	BrainComp: BrainComponent;
+	PerceptionComp: AIPerceptionComponent;
+	PawnActionComp: PawnActionsComponent;
+	static Load(ResourceName: string): MockAI;
+	static Find(Outer: UObject, ResourceName: string): MockAI;
+	static GetDefaultObject(): MockAI;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MockAI;
+	static C(Other: UObject | any): MockAI;
+}
+
+declare class MockAI_BT extends MockAI { 
+	BTComp: BehaviorTreeComponent;
+	static Load(ResourceName: string): MockAI_BT;
+	static Find(Outer: UObject, ResourceName: string): MockAI_BT;
+	static GetDefaultObject(): MockAI_BT;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MockAI_BT;
+	static C(Other: UObject | any): MockAI_BT;
+}
+
+declare class MockTask_Log extends GameplayTask { 
+	static Load(ResourceName: string): MockTask_Log;
+	static Find(Outer: UObject, ResourceName: string): MockTask_Log;
+	static GetDefaultObject(): MockTask_Log;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MockTask_Log;
+	static C(Other: UObject | any): MockTask_Log;
+}
+
+declare class MockGameplayTasksComponent extends GameplayTasksComponent { 
+	static Load(ResourceName: string): MockGameplayTasksComponent;
+	static Find(Outer: UObject, ResourceName: string): MockGameplayTasksComponent;
+	static GetDefaultObject(): MockGameplayTasksComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MockGameplayTasksComponent;
+	static C(Other: UObject | any): MockGameplayTasksComponent;
+}
+
+declare class MockGameplayTaskOwner extends UObject { 
+	GTComponent: GameplayTasksComponent;
+	static Load(ResourceName: string): MockGameplayTaskOwner;
+	static Find(Outer: UObject, ResourceName: string): MockGameplayTaskOwner;
+	static GetDefaultObject(): MockGameplayTaskOwner;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MockGameplayTaskOwner;
+	static C(Other: UObject | any): MockGameplayTaskOwner;
+}
+
+declare class TestBTDecorator_CantExecute extends BTDecorator { 
+	static Load(ResourceName: string): TestBTDecorator_CantExecute;
+	static Find(Outer: UObject, ResourceName: string): TestBTDecorator_CantExecute;
+	static GetDefaultObject(): TestBTDecorator_CantExecute;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestBTDecorator_CantExecute;
+	static C(Other: UObject | any): TestBTDecorator_CantExecute;
+}
+
+declare class TestBTDecorator_DelayedAbort extends BTDecorator { 
+	DelayTicks: number;
+	bOnlyOnce: boolean;
+	static Load(ResourceName: string): TestBTDecorator_DelayedAbort;
+	static Find(Outer: UObject, ResourceName: string): TestBTDecorator_DelayedAbort;
+	static GetDefaultObject(): TestBTDecorator_DelayedAbort;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestBTDecorator_DelayedAbort;
+	static C(Other: UObject | any): TestBTDecorator_DelayedAbort;
+}
+
+declare class TestBTService_Log extends BTService { 
+	LogActivation: number;
+	LogDeactivation: number;
+	static Load(ResourceName: string): TestBTService_Log;
+	static Find(Outer: UObject, ResourceName: string): TestBTService_Log;
+	static GetDefaultObject(): TestBTService_Log;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestBTService_Log;
+	static C(Other: UObject | any): TestBTService_Log;
+}
+
+declare class TestBTTask_LatentWithFlags extends BTTaskNode { 
+	LogIndexExecuteStart: number;
+	LogIndexExecuteFinish: number;
+	LogIndexAbortStart: number;
+	LogIndexAbortFinish: number;
+	ExecuteTicks: number;
+	AbortTicks: number;
+	KeyNameExecute: string;
+	KeyNameAbort: string;
+	LogResult: EBTNodeResult;
+	static Load(ResourceName: string): TestBTTask_LatentWithFlags;
+	static Find(Outer: UObject, ResourceName: string): TestBTTask_LatentWithFlags;
+	static GetDefaultObject(): TestBTTask_LatentWithFlags;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestBTTask_LatentWithFlags;
+	static C(Other: UObject | any): TestBTTask_LatentWithFlags;
+}
+
+declare class TestBTTask_Log extends BTTaskNode { 
+	LogIndex: number;
+	LogFinished: number;
+	ExecutionTicks: number;
+	LogResult: EBTNodeResult;
+	static Load(ResourceName: string): TestBTTask_Log;
+	static Find(Outer: UObject, ResourceName: string): TestBTTask_Log;
+	static GetDefaultObject(): TestBTTask_Log;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestBTTask_Log;
+	static C(Other: UObject | any): TestBTTask_Log;
+}
+
+declare class TestBTTask_SetFlag extends BTTaskNode { 
+	KeyName: string;
+	bValue: boolean;
+	TaskResult: EBTNodeResult;
+	static Load(ResourceName: string): TestBTTask_SetFlag;
+	static Find(Outer: UObject, ResourceName: string): TestBTTask_SetFlag;
+	static GetDefaultObject(): TestBTTask_SetFlag;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestBTTask_SetFlag;
+	static C(Other: UObject | any): TestBTTask_SetFlag;
+}
+
+declare class TestBTTask_SetValue extends BTTaskNode { 
+	KeyName: string;
+	Value: number;
+	TaskResult: EBTNodeResult;
+	static Load(ResourceName: string): TestBTTask_SetValue;
+	static Find(Outer: UObject, ResourceName: string): TestBTTask_SetValue;
+	static GetDefaultObject(): TestBTTask_SetValue;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestBTTask_SetValue;
+	static C(Other: UObject | any): TestBTTask_SetValue;
+}
+
+declare class TestPawnAction_Log extends PawnAction { 
+	static Load(ResourceName: string): TestPawnAction_Log;
+	static Find(Outer: UObject, ResourceName: string): TestPawnAction_Log;
+	static GetDefaultObject(): TestPawnAction_Log;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestPawnAction_Log;
+	static C(Other: UObject | any): TestPawnAction_Log;
+}
+
+declare class TestPawnAction_CallFunction extends TestPawnAction_Log { 
+	static Load(ResourceName: string): TestPawnAction_CallFunction;
+	static Find(Outer: UObject, ResourceName: string): TestPawnAction_CallFunction;
+	static GetDefaultObject(): TestPawnAction_CallFunction;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TestPawnAction_CallFunction;
+	static C(Other: UObject | any): TestPawnAction_CallFunction;
+}
+
+declare type EPinnedCommandListType = 'Command' | 'CustomWidget' | 'EPinnedCommandListType_MAX';
+declare var EPinnedCommandListType : { Command:'Command',CustomWidget:'CustomWidget',EPinnedCommandListType_MAX:'EPinnedCommandListType_MAX', };
+declare class PinnedCommandListCommand { 
+	Name: string;
+	Binding: string;
+	Type: EPinnedCommandListType;
+	clone() : PinnedCommandListCommand;
+	static C(Other: UObject | any): PinnedCommandListCommand;
+}
+
+declare class PinnedCommandListContext { 
+	Name: string;
+	Commands: PinnedCommandListCommand[];
+	clone() : PinnedCommandListContext;
+	static C(Other: UObject | any): PinnedCommandListContext;
+}
+
+declare class PinnedCommandListSettings extends UObject { 
+	Contexts: PinnedCommandListContext[];
+	static Load(ResourceName: string): PinnedCommandListSettings;
+	static Find(Outer: UObject, ResourceName: string): PinnedCommandListSettings;
+	static GetDefaultObject(): PinnedCommandListSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PinnedCommandListSettings;
+	static C(Other: UObject | any): PinnedCommandListSettings;
+}
+
+declare class AnimationEditorPreviewActor extends Actor { 
+	static GetDefaultObject(): AnimationEditorPreviewActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationEditorPreviewActor;
+	static C(Other: UObject | any): AnimationEditorPreviewActor;
+}
+
+declare class PersonaPreviewSceneController extends UObject { 
+	static Load(ResourceName: string): PersonaPreviewSceneController;
+	static Find(Outer: UObject, ResourceName: string): PersonaPreviewSceneController;
+	static GetDefaultObject(): PersonaPreviewSceneController;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PersonaPreviewSceneController;
+	static C(Other: UObject | any): PersonaPreviewSceneController;
+}
+
+declare class PersonaPreviewSceneAnimationController extends PersonaPreviewSceneController { 
+	Animation: AnimationAsset;
+	static Load(ResourceName: string): PersonaPreviewSceneAnimationController;
+	static Find(Outer: UObject, ResourceName: string): PersonaPreviewSceneAnimationController;
+	static GetDefaultObject(): PersonaPreviewSceneAnimationController;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PersonaPreviewSceneAnimationController;
+	static C(Other: UObject | any): PersonaPreviewSceneAnimationController;
+}
+
+declare class PersonaPreviewSceneDefaultController extends PersonaPreviewSceneController { 
+	static Load(ResourceName: string): PersonaPreviewSceneDefaultController;
+	static Find(Outer: UObject, ResourceName: string): PersonaPreviewSceneDefaultController;
+	static GetDefaultObject(): PersonaPreviewSceneDefaultController;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PersonaPreviewSceneDefaultController;
+	static C(Other: UObject | any): PersonaPreviewSceneDefaultController;
+}
+
+declare class PersonaPreviewSceneDescription extends UObject { 
+	PreviewController: UnrealEngineClass;
+	PreviewControllerInstance: PersonaPreviewSceneController;
+	PreviewControllerInstances: PersonaPreviewSceneController[];
+	PreviewMesh: SkeletalMesh;
+	AdditionalMeshes: DataAsset;
+	DefaultAdditionalMeshes: PreviewMeshCollection;
+	static Load(ResourceName: string): PersonaPreviewSceneDescription;
+	static Find(Outer: UObject, ResourceName: string): PersonaPreviewSceneDescription;
+	static GetDefaultObject(): PersonaPreviewSceneDescription;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PersonaPreviewSceneDescription;
+	static C(Other: UObject | any): PersonaPreviewSceneDescription;
+}
+
+declare class PersonaPreviewSceneRefPoseController extends PersonaPreviewSceneController { 
+	bResetBoneTransforms: boolean;
+	static Load(ResourceName: string): PersonaPreviewSceneRefPoseController;
+	static Find(Outer: UObject, ResourceName: string): PersonaPreviewSceneRefPoseController;
+	static GetDefaultObject(): PersonaPreviewSceneRefPoseController;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PersonaPreviewSceneRefPoseController;
+	static C(Other: UObject | any): PersonaPreviewSceneRefPoseController;
+}
+
+declare class GlobalEditorUtilityBase extends UObject { 
+	HelpText: string;
+	bDirtiedSelectionSet: boolean;
+	bAutoRunDefaultAction: boolean;
+	OnEachSelectedActor: UnrealEngineMulticastDelegate<(Actor: Actor, index: number) => void>;
+	OnEachSelectedAsset: UnrealEngineMulticastDelegate<(Asset: UObject, index: number) => void>;
+	static Load(ResourceName: string): GlobalEditorUtilityBase;
+	static Find(Outer: UObject, ResourceName: string): GlobalEditorUtilityBase;
+	static GetDefaultObject(): GlobalEditorUtilityBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GlobalEditorUtilityBase;
+	SetActorSelectionState(Actor: Actor,bShouldBeSelected: boolean): void;
+	SelectNothing(): void;
+	RenameAsset(Asset: UObject,NewName: string): void;
+	OnDefaultActionClicked(): void;
+	GetSelectionSet(): Actor[];
+	GetSelectionBounds(Origin?: Vector,BoxExtent?: Vector,SphereRadius?: number): {Origin: Vector, BoxExtent: Vector, SphereRadius: number};
+	GetSelectedAssets(): UObject[];
+	GetEditorUserSettings(): EditorPerProjectUserSettings;
+	GetActorReference(PathToActor: string): Actor;
+	ForEachSelectedAsset(): void;
+	ForEachSelectedActor(): void;
+	ClearActorSelectionSet(): void;
+	static C(Other: UObject | any): GlobalEditorUtilityBase;
+}
+
+declare class ActorActionUtility extends GlobalEditorUtilityBase { 
+	static Load(ResourceName: string): ActorActionUtility;
+	static Find(Outer: UObject, ResourceName: string): ActorActionUtility;
+	static GetDefaultObject(): ActorActionUtility;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorActionUtility;
+	GetSupportedClass(): UnrealEngineClass;
+	static C(Other: UObject | any): ActorActionUtility;
+}
+
+declare class AssetActionUtility extends GlobalEditorUtilityBase { 
+	static Load(ResourceName: string): AssetActionUtility;
+	static Find(Outer: UObject, ResourceName: string): AssetActionUtility;
+	static GetDefaultObject(): AssetActionUtility;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetActionUtility;
+	GetSupportedClass(): UnrealEngineClass;
+	static C(Other: UObject | any): AssetActionUtility;
+}
+
+declare class EditorUtilityBlueprint extends Blueprint { 
+	static Load(ResourceName: string): EditorUtilityBlueprint;
+	static Find(Outer: UObject, ResourceName: string): EditorUtilityBlueprint;
+	static GetDefaultObject(): EditorUtilityBlueprint;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorUtilityBlueprint;
+	static C(Other: UObject | any): EditorUtilityBlueprint;
+}
+
+declare class EditorUtilityBlueprintFactory extends Factory { 
+	ParentClass: UnrealEngineClass;
+	static Load(ResourceName: string): EditorUtilityBlueprintFactory;
+	static Find(Outer: UObject, ResourceName: string): EditorUtilityBlueprintFactory;
+	static GetDefaultObject(): EditorUtilityBlueprintFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorUtilityBlueprintFactory;
+	static C(Other: UObject | any): EditorUtilityBlueprintFactory;
+}
+
+declare class PlacedEditorUtilityBase extends Actor { 
+	HelpText: string;
+	static GetDefaultObject(): PlacedEditorUtilityBase;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlacedEditorUtilityBase;
+	SetLevelViewportCameraInfo(CameraLocation: Vector,CameraRotation: Rotator): void;
+	SetActorSelectionState(Actor: Actor,bShouldBeSelected: boolean): void;
+	SelectNothing(): void;
+	GetSelectionSet(): Actor[];
+	GetLevelViewportCameraInfo(CameraLocation?: Vector,CameraRotation?: Rotator): {CameraLocation: Vector, CameraRotation: Rotator, $: boolean};
+	GetActorReference(PathToActor: string): Actor;
+	ClearActorSelectionSet(): void;
+	static C(Other: UObject | any): PlacedEditorUtilityBase;
+}
+
+declare class LocalizationDashboardSettings extends UObject { 
+	static Load(ResourceName: string): LocalizationDashboardSettings;
+	static Find(Outer: UObject, ResourceName: string): LocalizationDashboardSettings;
+	static GetDefaultObject(): LocalizationDashboardSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocalizationDashboardSettings;
+	static C(Other: UObject | any): LocalizationDashboardSettings;
+}
+
+declare type EMeshInstancingReplacementMethod = 'RemoveOriginalActors' | 'KeepOriginalActorsAsEditorOnly' | 'EMeshInstancingReplacementMethod_MAX';
+declare var EMeshInstancingReplacementMethod : { RemoveOriginalActors:'RemoveOriginalActors',KeepOriginalActorsAsEditorOnly:'KeepOriginalActorsAsEditorOnly',EMeshInstancingReplacementMethod_MAX:'EMeshInstancingReplacementMethod_MAX', };
+declare class MeshInstancingSettings { 
+	ActorClassToUse: UnrealEngineClass;
+	InstanceReplacementThreshold: number;
+	MeshReplacementMethod: EMeshInstancingReplacementMethod;
+	bSkipMeshesWithVertexColors: boolean;
+	bUseHLODVolumes: boolean;
+	clone() : MeshInstancingSettings;
+	static C(Other: UObject | any): MeshInstancingSettings;
+}
+
+declare class MeshInstancingSettingsObject extends UObject { 
+	Settings: MeshInstancingSettings;
+	static Load(ResourceName: string): MeshInstancingSettingsObject;
+	static Find(Outer: UObject, ResourceName: string): MeshInstancingSettingsObject;
+	static GetDefaultObject(): MeshInstancingSettingsObject;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshInstancingSettingsObject;
+	static C(Other: UObject | any): MeshInstancingSettingsObject;
+}
+
+declare class MeshMergingSettingsObject extends UObject { 
+	Settings: MeshMergingSettings;
+	static Load(ResourceName: string): MeshMergingSettingsObject;
+	static Find(Outer: UObject, ResourceName: string): MeshMergingSettingsObject;
+	static GetDefaultObject(): MeshMergingSettingsObject;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshMergingSettingsObject;
+	static C(Other: UObject | any): MeshMergingSettingsObject;
+}
+
+declare class MeshProxySettingsObject extends UObject { 
+	Settings: MeshProxySettings;
+	static Load(ResourceName: string): MeshProxySettingsObject;
+	static Find(Outer: UObject, ResourceName: string): MeshProxySettingsObject;
+	static GetDefaultObject(): MeshProxySettingsObject;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshProxySettingsObject;
+	static C(Other: UObject | any): MeshProxySettingsObject;
+}
+
+declare class EditorKeyboardShortcutSettings extends DeveloperSettings { 
+	static Load(ResourceName: string): EditorKeyboardShortcutSettings;
+	static Find(Outer: UObject, ResourceName: string): EditorKeyboardShortcutSettings;
+	static GetDefaultObject(): EditorKeyboardShortcutSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorKeyboardShortcutSettings;
+	static C(Other: UObject | any): EditorKeyboardShortcutSettings;
+}
+
+declare type EAndroidInstallLocation = 'InternalOnly' | 'PreferExternal' | 'Auto' | 'EAndroidInstallLocation_MAX';
+declare var EAndroidInstallLocation : { InternalOnly:'InternalOnly',PreferExternal:'PreferExternal',Auto:'Auto',EAndroidInstallLocation_MAX:'EAndroidInstallLocation_MAX', };
+declare type EAndroidScreenOrientation = 'Portrait' | 'ReversePortrait' | 'SensorPortrait' | 'Landscape' | 'ReverseLandscape' | 'SensorLandscape' | 'Sensor' | 'FullSensor' | 'EAndroidScreenOrientation_MAX';
+declare var EAndroidScreenOrientation : { Portrait:'Portrait',ReversePortrait:'ReversePortrait',SensorPortrait:'SensorPortrait',Landscape:'Landscape',ReverseLandscape:'ReverseLandscape',SensorLandscape:'SensorLandscape',Sensor:'Sensor',FullSensor:'FullSensor',EAndroidScreenOrientation_MAX:'EAndroidScreenOrientation_MAX', };
+declare type EAndroidAntVerbosity = 'Quiet' | 'Normal' | 'Verbose' | 'EAndroidAntVerbosity_MAX';
+declare var EAndroidAntVerbosity : { Quiet:'Quiet',Normal:'Normal',Verbose:'Verbose',EAndroidAntVerbosity_MAX:'EAndroidAntVerbosity_MAX', };
+declare type EAndroidDepthBufferPreference = 'Default' | 'Bits16' | 'Bits24' | 'Bits32' | 'EAndroidDepthBufferPreference_MAX';
+declare var EAndroidDepthBufferPreference : { Default:'Default',Bits16:'Bits16',Bits24:'Bits24',Bits32:'Bits32',EAndroidDepthBufferPreference_MAX:'EAndroidDepthBufferPreference_MAX', };
+declare type EGoogleVRCaps = 'Cardboard' | 'Daydream33' | 'Daydream63' | 'Daydream66' | 'EGoogleVRCaps_MAX';
+declare var EGoogleVRCaps : { Cardboard:'Cardboard',Daydream33:'Daydream33',Daydream63:'Daydream63',Daydream66:'Daydream66',EGoogleVRCaps_MAX:'EGoogleVRCaps_MAX', };
+declare class GooglePlayAchievementMapping { 
+	Name: string;
+	AchievementID: string;
+	clone() : GooglePlayAchievementMapping;
+	static C(Other: UObject | any): GooglePlayAchievementMapping;
+}
+
+declare class GooglePlayLeaderboardMapping { 
+	Name: string;
+	LeaderboardID: string;
+	clone() : GooglePlayLeaderboardMapping;
+	static C(Other: UObject | any): GooglePlayLeaderboardMapping;
+}
+
+declare type EAndroidAudio = 'Default' | 'OGG' | 'ADPCM' | 'EAndroidAudio_MAX';
+declare var EAndroidAudio : { Default:'Default',OGG:'OGG',ADPCM:'ADPCM',EAndroidAudio_MAX:'EAndroidAudio_MAX', };
+declare class PlatformRuntimeAudioCompressionOverrides { 
+	bOverrideCompressionTimes: boolean;
+	DurationThreshold: number;
+	MaxNumRandomBranches: number;
+	SoundCueQualityIndex: number;
+	clone() : PlatformRuntimeAudioCompressionOverrides;
+	static C(Other: UObject | any): PlatformRuntimeAudioCompressionOverrides;
+}
+
+declare type EAndroidGraphicsDebugger = 'None' | 'Mali' | 'Adreno' | 'EAndroidGraphicsDebugger_MAX';
+declare var EAndroidGraphicsDebugger : { None:'None',Mali:'Mali',Adreno:'Adreno',EAndroidGraphicsDebugger_MAX:'EAndroidGraphicsDebugger_MAX', };
+declare class AndroidRuntimeSettings extends UObject { 
+	PackageName: string;
+	StoreVersion: number;
+	ApplicationDisplayName: string;
+	VersionDisplayName: string;
+	MinSDKVersion: number;
+	TargetSDKVersion: number;
+	InstallLocation: EAndroidInstallLocation;
+	bEnableGradle: boolean;
+	bEnableLint: boolean;
+	bPackageDataInsideApk: boolean;
+	bCreateAllPlatformsInstall: boolean;
+	bDisableVerifyOBBOnStartUp: boolean;
+	bAllowLargeOBBFiles: boolean;
+	bUseExternalFilesDir: boolean;
+	Orientation: EAndroidScreenOrientation;
+	MaxAspectRatio: number;
+	AntVerbosity: EAndroidAntVerbosity;
+	bFullScreen: boolean;
+	bEnableNewKeyboard: boolean;
+	DepthBufferPreference: EAndroidDepthBufferPreference;
+	bValidateTextureFormats: boolean;
+	ExtraManifestNodeTags: string[];
+	ExtraApplicationNodeTags: string[];
+	ExtraApplicationSettings: string;
+	ExtraActivityNodeTags: string[];
+	ExtraActivitySettings: string;
+	ExtraPermissions: string[];
+	bAndroidVoiceEnabled: boolean;
+	bPackageForGearVR: boolean;
+	bRemoveOSIG: boolean;
+	GoogleVRCaps: EGoogleVRCaps[];
+	bGoogleVRSustainedPerformance: boolean;
+	KeyStore: string;
+	KeyAlias: string;
+	KeyStorePassword: string;
+	KeyPassword: string;
+	bBuildForArmV7: boolean;
+	bBuildForArm64: boolean;
+	bBuildForX8664: boolean;
+	bBuildForES2: boolean;
+	bBuildForES31: boolean;
+	bSupportsVulkan: boolean;
+	bDetectVulkanByDefault: boolean;
+	bBuildWithHiddenSymbolVisibility: boolean;
+	bSaveSymbols: boolean;
+	bEnableGooglePlaySupport: boolean;
+	bUseGetAccounts: boolean;
+	GamesAppID: string;
+	AchievementMap: GooglePlayAchievementMapping[];
+	LeaderboardMap: GooglePlayLeaderboardMapping[];
+	bSupportAdMob: boolean;
+	AdMobAdUnitID: string;
+	AdMobAdUnitIDs: string[];
+	GooglePlayLicenseKey: string;
+	GCMClientSenderID: string;
+	bShowLaunchImage: boolean;
+	bAllowIMU: boolean;
+	bAllowControllers: boolean;
+	AndroidAudio: EAndroidAudio;
+	AudioSampleRate: number;
+	AudioCallbackBufferFrameSize: number;
+	AudioNumBuffersToEnqueue: number;
+	AudioMaxChannels: number;
+	AudioNumSourceWorkers: number;
+	SpatializationPlugin: string;
+	ReverbPlugin: string;
+	OcclusionPlugin: string;
+	CompressionOverrides: PlatformRuntimeAudioCompressionOverrides;
+	bResampleForDevice: boolean;
+	MaxSampleRate: number;
+	HighSampleRate: number;
+	MedSampleRate: number;
+	LowSampleRate: number;
+	MinSampleRate: number;
+	CompressionQualityModifier: number;
+	AndroidGraphicsDebugger: EAndroidGraphicsDebugger;
+	MaliGraphicsDebuggerPath: DirectoryPath;
+	bMultiTargetFormat_ETC1: boolean;
+	bMultiTargetFormat_ETC1a: boolean;
+	bMultiTargetFormat_ETC2: boolean;
+	bMultiTargetFormat_DXT: boolean;
+	bMultiTargetFormat_PVRTC: boolean;
+	bMultiTargetFormat_ATC: boolean;
+	bMultiTargetFormat_ASTC: boolean;
+	TextureFormatPriority_ETC1: number;
+	TextureFormatPriority_ETC1a: number;
+	TextureFormatPriority_ETC2: number;
+	TextureFormatPriority_DXT: number;
+	TextureFormatPriority_PVRTC: number;
+	TextureFormatPriority_ATC: number;
+	TextureFormatPriority_ASTC: number;
+	SDKAPILevelOverride: string;
+	NDKAPILevelOverride: string;
+	static Load(ResourceName: string): AndroidRuntimeSettings;
+	static Find(Outer: UObject, ResourceName: string): AndroidRuntimeSettings;
+	static GetDefaultObject(): AndroidRuntimeSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AndroidRuntimeSettings;
+	static C(Other: UObject | any): AndroidRuntimeSettings;
+}
+
+declare class IOSBuildResourceDirectory { 
+	Path: string;
+	clone() : IOSBuildResourceDirectory;
+	static C(Other: UObject | any): IOSBuildResourceDirectory;
+}
+
+declare class IOSBuildResourceFilePath { 
+	FilePath: string;
+	clone() : IOSBuildResourceFilePath;
+	static C(Other: UObject | any): IOSBuildResourceFilePath;
+}
+
+declare type EIOSLandscapeOrientation = 'LandscapeLeft' | 'LandscapeRight' | 'EIOSLandscapeOrientation_MAX';
+declare var EIOSLandscapeOrientation : { LandscapeLeft:'LandscapeLeft',LandscapeRight:'LandscapeRight',EIOSLandscapeOrientation_MAX:'EIOSLandscapeOrientation_MAX', };
+declare type EPowerUsageFrameRateLock = 'PUFRL_None' | 'PUFRL_20' | 'PUFRL_30' | 'PUFRL_60' | 'PUFRL_MAX';
+declare var EPowerUsageFrameRateLock : { PUFRL_None:'PUFRL_None',PUFRL_20:'PUFRL_20',PUFRL_30:'PUFRL_30',PUFRL_60:'PUFRL_60',PUFRL_MAX:'PUFRL_MAX', };
+declare type EIOSVersion = 'IOS_61' | 'IOS_7' | 'IOS_8' | 'IOS_9' | 'IOS_10' | 'IOS_11' | 'IOS_12' | 'IOS_MAX';
+declare var EIOSVersion : { IOS_61:'IOS_61',IOS_7:'IOS_7',IOS_8:'IOS_8',IOS_9:'IOS_9',IOS_10:'IOS_10',IOS_11:'IOS_11',IOS_12:'IOS_12',IOS_MAX:'IOS_MAX', };
+declare class IOSRuntimeSettings extends UObject { 
+	bEnableGameCenterSupport: boolean;
+	bEnableCloudKitSupport: boolean;
+	bEnableRemoteNotificationsSupport: boolean;
+	bEnableBackgroundFetch: boolean;
+	bSupportsMetal: boolean;
+	bSupportsMetalMRT: boolean;
+	bCookPVRTCTextures: boolean;
+	bCookASTCTextures: boolean;
+	bSupportsOpenGLES2: boolean;
+	EnableRemoteShaderCompile: boolean;
+	bGeneratedSYMFile: boolean;
+	bGeneratedSYMBundle: boolean;
+	bGenerateCrashReportSymbols: boolean;
+	bGenerateXCArchive: boolean;
+	bDevForArmV7: boolean;
+	bDevForArm64: boolean;
+	bDevForArmV7S: boolean;
+	bShipForArmV7: boolean;
+	bShipForArm64: boolean;
+	bShipForArmV7S: boolean;
+	bShipForBitcode: boolean;
+	AdditionalLinkerFlags: string;
+	AdditionalShippingLinkerFlags: string;
+	RemoteServerName: string;
+	bUseRSync: boolean;
+	RSyncUsername: string;
+	DeltaCopyInstallPath: IOSBuildResourceDirectory;
+	SSHPrivateKeyLocation: string;
+	SSHPrivateKeyOverridePath: IOSBuildResourceFilePath;
+	bTreatRemoteAsSeparateController: boolean;
+	bAllowRemoteRotation: boolean;
+	bUseRemoteAsVirtualJoystick: boolean;
+	bUseRemoteAbsoluteDpadValues: boolean;
+	bAllowControllers: boolean;
+	bSupportsPortraitOrientation: boolean;
+	bSupportsUpsideDownOrientation: boolean;
+	bSupportsLandscapeLeftOrientation: boolean;
+	bSupportsLandscapeRightOrientation: boolean;
+	PreferredLandscapeOrientation: EIOSLandscapeOrientation;
+	BundleDisplayName: string;
+	BundleName: string;
+	BundleIdentifier: string;
+	VersionInfo: string;
+	FrameRateLock: EPowerUsageFrameRateLock;
+	MinimumiOSVersion: EIOSVersion;
+	bSupportsIPad: boolean;
+	bSupportsIPhone: boolean;
+	AdditionalPlistData: string;
+	bEnableFacebookSupport: boolean;
+	FacebookAppID: string;
+	MobileProvision: string;
+	SigningCertificate: string;
+	bAutomaticSigning: boolean;
+	IOSTeamID: string;
+	bDisableHTTPS: boolean;
+	MaxShaderLanguageVersion: number;
+	UseFastIntrinsics: boolean;
+	EnableMathOptimisations: boolean;
+	bUseIntegratedKeyboard: boolean;
+	AudioSampleRate: number;
+	AudioCallbackBufferFrameSize: number;
+	AudioNumBuffersToEnqueue: number;
+	AudioMaxChannels: number;
+	AudioNumSourceWorkers: number;
+	SpatializationPlugin: string;
+	ReverbPlugin: string;
+	OcclusionPlugin: string;
+	CompressionOverrides: PlatformRuntimeAudioCompressionOverrides;
+	bResampleForDevice: boolean;
+	MaxSampleRate: number;
+	HighSampleRate: number;
+	MedSampleRate: number;
+	LowSampleRate: number;
+	MinSampleRate: number;
+	CompressionQualityModifier: number;
+	static Load(ResourceName: string): IOSRuntimeSettings;
+	static Find(Outer: UObject, ResourceName: string): IOSRuntimeSettings;
+	static GetDefaultObject(): IOSRuntimeSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IOSRuntimeSettings;
+	static C(Other: UObject | any): IOSRuntimeSettings;
+}
+
+declare type ELuminFrameTimingHint = 'Unspecified' | 'Maximum' | 'FPS_60' | 'FPS_120' | 'ELuminFrameTimingHint_MAX';
+declare var ELuminFrameTimingHint : { Unspecified:'Unspecified',Maximum:'Maximum',FPS_60:'FPS_60',FPS_120:'FPS_120',ELuminFrameTimingHint_MAX:'ELuminFrameTimingHint_MAX', };
+declare type ELuminPrivilege = 'Invalid' | 'AudioRecognizer' | 'BatteryInfo' | 'CameraCapture' | 'WorldReconstruction' | 'InAppPurchase' | 'AudioCaptureMic' | 'DrmCertificates' | 'Occlusion' | 'LowLatencyLightwear' | 'Internet' | 'IdentityRead' | 'BackgroundDownload' | 'BackgroundUpload' | 'MediaDrm' | 'Media' | 'MediaMetadata' | 'PowerInfo' | 'LocalAreaNetwork' | 'VoiceInput' | 'Documents' | 'ConnectBackgroundMusicService' | 'RegisterBackgroundMusicService' | 'PwFoundObjRead' | 'NormalNotificationsUsage' | 'MusicService' | 'ControllerPose' | 'ScreensProvider' | 'GesturesSubscribe' | 'GesturesConfig' | 'ELuminPrivilege_MAX';
+declare var ELuminPrivilege : { Invalid:'Invalid',AudioRecognizer:'AudioRecognizer',BatteryInfo:'BatteryInfo',CameraCapture:'CameraCapture',WorldReconstruction:'WorldReconstruction',InAppPurchase:'InAppPurchase',AudioCaptureMic:'AudioCaptureMic',DrmCertificates:'DrmCertificates',Occlusion:'Occlusion',LowLatencyLightwear:'LowLatencyLightwear',Internet:'Internet',IdentityRead:'IdentityRead',BackgroundDownload:'BackgroundDownload',BackgroundUpload:'BackgroundUpload',MediaDrm:'MediaDrm',Media:'Media',MediaMetadata:'MediaMetadata',PowerInfo:'PowerInfo',LocalAreaNetwork:'LocalAreaNetwork',VoiceInput:'VoiceInput',Documents:'Documents',ConnectBackgroundMusicService:'ConnectBackgroundMusicService',RegisterBackgroundMusicService:'RegisterBackgroundMusicService',PwFoundObjRead:'PwFoundObjRead',NormalNotificationsUsage:'NormalNotificationsUsage',MusicService:'MusicService',ControllerPose:'ControllerPose',ScreensProvider:'ScreensProvider',GesturesSubscribe:'GesturesSubscribe',GesturesConfig:'GesturesConfig',ELuminPrivilege_MAX:'ELuminPrivilege_MAX', };
+declare class LuminRuntimeSettings extends UObject { 
+	PackageName: string;
+	ApplicationDisplayName: string;
+	bIsScreensApp: boolean;
+	FrameTimingHint: ELuminFrameTimingHint;
+	bProtectedContent: boolean;
+	bUseMobileRendering: boolean;
+	bUseVulkan: boolean;
+	bBuildWithNvTegraGfxDebugger: boolean;
+	Certificate: FilePath;
+	IconModelPath: DirectoryPath;
+	IconPortalPath: DirectoryPath;
+	VersionCode: number;
+	MinimumOSVersion: string;
+	AppPrivileges: ELuminPrivilege[];
+	ExtraApplicationNodes: string[];
+	ExtraComponentNodes: string[];
+	SpatializationPlugin: string;
+	ReverbPlugin: string;
+	OcclusionPlugin: string;
+	static Load(ResourceName: string): LuminRuntimeSettings;
+	static Find(Outer: UObject, ResourceName: string): LuminRuntimeSettings;
+	static GetDefaultObject(): LuminRuntimeSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LuminRuntimeSettings;
+	static C(Other: UObject | any): LuminRuntimeSettings;
+}
+
+declare class AndroidSDKSettings extends UObject { 
+	SDKPath: DirectoryPath;
+	NDKPath: DirectoryPath;
+	ANTPath: DirectoryPath;
+	JavaPath: DirectoryPath;
+	SDKAPILevel: string;
+	NDKAPILevel: string;
+	static Load(ResourceName: string): AndroidSDKSettings;
+	static Find(Outer: UObject, ResourceName: string): AndroidSDKSettings;
+	static GetDefaultObject(): AndroidSDKSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AndroidSDKSettings;
+	static C(Other: UObject | any): AndroidSDKSettings;
+}
+
+declare class HTML5SDKSettings extends UObject { 
+	static Load(ResourceName: string): HTML5SDKSettings;
+	static Find(Outer: UObject, ResourceName: string): HTML5SDKSettings;
+	static GetDefaultObject(): HTML5SDKSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HTML5SDKSettings;
+	static C(Other: UObject | any): HTML5SDKSettings;
+}
+
+declare type ECanvasScalingMode = 'Stretch' | 'Aspect' | 'Fixed' | 'ECanvasScalingMode_MAX';
+declare var ECanvasScalingMode : { Stretch:'Stretch',Aspect:'Aspect',Fixed:'Fixed',ECanvasScalingMode_MAX:'ECanvasScalingMode_MAX', };
+declare class HTML5TargetSettings extends UObject { 
+	EnableIndexedDB: boolean;
+	UseFixedTimeStep: boolean;
+	EnableTracing: boolean;
+	CanvasScalingMode: ECanvasScalingMode;
+	Compressed: boolean;
+	DeployServerPort: number;
+	UploadToS3: boolean;
+	S3Region: string;
+	S3KeyID: string;
+	S3SecretAccessKey: string;
+	S3BucketName: string;
+	S3FolderName: string;
+	SpatializationPlugin: string;
+	ReverbPlugin: string;
+	OcclusionPlugin: string;
+	static Load(ResourceName: string): HTML5TargetSettings;
+	static Find(Outer: UObject, ResourceName: string): HTML5TargetSettings;
+	static GetDefaultObject(): HTML5TargetSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HTML5TargetSettings;
+	static C(Other: UObject | any): HTML5TargetSettings;
+}
+
+declare class MagicLeapSDKSettings extends UObject { 
+	MLSDKPath: DirectoryPath;
+	static Load(ResourceName: string): MagicLeapSDKSettings;
+	static Find(Outer: UObject, ResourceName: string): MagicLeapSDKSettings;
+	static GetDefaultObject(): MagicLeapSDKSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MagicLeapSDKSettings;
+	static C(Other: UObject | any): MagicLeapSDKSettings;
+}
+
+declare type ETutorialContent = 'None' | 'Text' | 'UDNExcerpt' | 'RichText' | 'ETutorialContent_MAX';
+declare var ETutorialContent : { None:'None',Text:'Text',UDNExcerpt:'UDNExcerpt',RichText:'RichText',ETutorialContent_MAX:'ETutorialContent_MAX', };
+declare class TutorialContent { 
+	Type: ETutorialContent;
+	Content: string;
+	ExcerptName: string;
+	text: string;
+	clone() : TutorialContent;
+	static C(Other: UObject | any): TutorialContent;
+}
+
+declare type ETutorialAnchorIdentifier = 'None' | 'NamedWidget' | 'Asset' | 'ETutorialAnchorIdentifier_MAX';
+declare var ETutorialAnchorIdentifier : { None:'None',NamedWidget:'NamedWidget',Asset:'Asset',ETutorialAnchorIdentifier_MAX:'ETutorialAnchorIdentifier_MAX', };
+declare class TutorialContentAnchor { 
+	Type: ETutorialAnchorIdentifier;
+	WrapperIdentifier: string;
+	Asset: SoftObjectPath;
+	bDrawHighlight: boolean;
+	TabToFocusOrOpen: string;
+	FriendlyName: string;
+	GuidString: string;
+	OuterName: string;
+	clone() : TutorialContentAnchor;
+	static C(Other: UObject | any): TutorialContentAnchor;
+}
+
+declare class TutorialWidgetContent { 
+	Content: TutorialContent;
+	WidgetAnchor: TutorialContentAnchor;
+	HorizontalAlignment: EHorizontalAlignment;
+	VerticalAlignment: EVerticalAlignment;
+	Offset: Vector2D;
+	ContentWidth: number;
+	bAutoFocus: boolean;
+	clone() : TutorialWidgetContent;
+	static C(Other: UObject | any): TutorialWidgetContent;
+}
+
+declare class TutorialStage { 
+	Name: string;
+	Content: TutorialContent;
+	WidgetContent: TutorialWidgetContent[];
+	NextButtonText: string;
+	BackButtonText: string;
+	PlatformsToTest: string[];
+	bInvertPlatformTest: boolean;
+	clone() : TutorialStage;
+	static C(Other: UObject | any): TutorialStage;
+}
+
+declare class EditorTutorial extends UObject { 
+	Title: string;
+	SortOrder: number;
+	Icon: string;
+	Texture: Texture2D;
+	Category: string;
+	SummaryContent: TutorialContent;
+	Stages: TutorialStage[];
+	PreviousTutorial: SoftClassPath;
+	NextTutorial: SoftClassPath;
+	bIsStandalone: boolean;
+	AssetToUse: SoftObjectPath;
+	ImportPath: string;
+	bHideInBrowser: boolean;
+	SearchTags: string;
+	static Load(ResourceName: string): EditorTutorial;
+	static Find(Outer: UObject, ResourceName: string): EditorTutorial;
+	static GetDefaultObject(): EditorTutorial;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorTutorial;
+	static SetEngineFolderVisibilty(bNewVisibility: boolean): void;
+	static OpenAsset(Asset: UObject): void;
+	OnTutorialStageStarted(StageName: string): void;
+	OnTutorialStageEnded(StageName: string): void;
+	OnTutorialLaunched(): void;
+	OnTutorialClosed(): void;
+	static GoToPreviousTutorialStage(): void;
+	static GoToNextTutorialStage(): void;
+	static GetEngineFolderVisibilty(): boolean;
+	GetActorReference(PathToActor: string): Actor;
+	static BeginTutorial(TutorialToStart: EditorTutorial,bRestart: boolean): void;
+	static C(Other: UObject | any): EditorTutorial;
+}
+
+declare class EditorTutorialFactory extends Factory { 
+	static Load(ResourceName: string): EditorTutorialFactory;
+	static Find(Outer: UObject, ResourceName: string): EditorTutorialFactory;
+	static GetDefaultObject(): EditorTutorialFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorTutorialFactory;
+	static C(Other: UObject | any): EditorTutorialFactory;
+}
+
+declare class EditorTutorialImportFactory extends Factory { 
+	static Load(ResourceName: string): EditorTutorialImportFactory;
+	static Find(Outer: UObject, ResourceName: string): EditorTutorialImportFactory;
+	static GetDefaultObject(): EditorTutorialImportFactory;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorTutorialImportFactory;
+	static C(Other: UObject | any): EditorTutorialImportFactory;
+}
+
+declare class TutorialCategory { 
+	Identifier: string;
+	Title: string;
+	SortOrder: number;
+	Description: string;
+	Icon: string;
+	Texture: SoftObjectPath;
+	clone() : TutorialCategory;
+	static C(Other: UObject | any): TutorialCategory;
+}
+
+declare class TutorialContext { 
+	Context: string;
+	BrowserFilter: string;
+	AttractTutorial: SoftClassPath;
+	LaunchTutorial: SoftClassPath;
+	clone() : TutorialContext;
+	static C(Other: UObject | any): TutorialContext;
+}
+
+declare class EditorTutorialSettings extends UObject { 
+	bDisableAllTutorialAlerts: boolean;
+	Categories: TutorialCategory[];
+	StartupTutorial: SoftClassPath;
+	TutorialContexts: TutorialContext[];
+	static Load(ResourceName: string): EditorTutorialSettings;
+	static Find(Outer: UObject, ResourceName: string): EditorTutorialSettings;
+	static GetDefaultObject(): EditorTutorialSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorTutorialSettings;
+	static C(Other: UObject | any): EditorTutorialSettings;
+}
+
+declare class TutorialSettings extends UObject { 
+	Categories: TutorialCategory[];
+	StartupTutorial: SoftClassPath;
+	static Load(ResourceName: string): TutorialSettings;
+	static Find(Outer: UObject, ResourceName: string): TutorialSettings;
+	static GetDefaultObject(): TutorialSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TutorialSettings;
+	static C(Other: UObject | any): TutorialSettings;
+}
+
+declare class TutorialProgress { 
+	Tutorial: SoftClassPath;
+	CurrentStage: number;
+	bUserDismissed: boolean;
+	clone() : TutorialProgress;
+	static C(Other: UObject | any): TutorialProgress;
+}
+
+declare class TutorialStateSettings extends UObject { 
+	TutorialsProgress: TutorialProgress[];
+	bDismissedAllTutorials: boolean;
+	static Load(ResourceName: string): TutorialStateSettings;
+	static Find(Outer: UObject, ResourceName: string): TutorialStateSettings;
+	static GetDefaultObject(): TutorialStateSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TutorialStateSettings;
+	static C(Other: UObject | any): TutorialStateSettings;
+}
+
+declare class LogVisualizerSessionSettings extends UObject { 
+	bEnableGraphsVisualization: boolean;
+	static Load(ResourceName: string): LogVisualizerSessionSettings;
+	static Find(Outer: UObject, ResourceName: string): LogVisualizerSessionSettings;
+	static GetDefaultObject(): LogVisualizerSessionSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LogVisualizerSessionSettings;
+	static C(Other: UObject | any): LogVisualizerSessionSettings;
+}
+
+declare class CategoryFilter { 
+	CategoryName: string;
+	LogVerbosity: number;
+	Enabled: boolean;
+	clone() : CategoryFilter;
+	static C(Other: UObject | any): CategoryFilter;
+}
+
+declare class VisualLoggerFiltersData { 
+	SearchBoxFilter: string;
+	ObjectNameFilter: string;
+	Categories: CategoryFilter[];
+	SelectedClasses: string[];
+	clone() : VisualLoggerFiltersData;
+	static C(Other: UObject | any): VisualLoggerFiltersData;
+}
+
+declare class LogVisualizerSettings extends UObject { 
+	bIgnoreTrivialLogs: boolean;
+	TrivialLogsThreshold: number;
+	bStickToRecentData: boolean;
+	bResetDataWithNewSession: boolean;
+	bShowHistogramLabelsOutside: boolean;
+	DefaultCameraDistance: number;
+	bSearchInsideLogs: boolean;
+	GraphsBackgroundColor: Color;
+	bPresistentFilters: boolean;
+	bDrawExtremesOnGraphs: boolean;
+	bUsePlayersOnlyForPause: boolean;
+	bLogNavOctreeOnStop: boolean;
+	PresistentFilters: VisualLoggerFiltersData;
+	DebugMeshMaterialFakeLight: Material;
+	DebugMeshMaterialFakeLightName: string;
+	static Load(ResourceName: string): LogVisualizerSettings;
+	static Find(Outer: UObject, ResourceName: string): LogVisualizerSettings;
+	static GetDefaultObject(): LogVisualizerSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LogVisualizerSettings;
+	static C(Other: UObject | any): LogVisualizerSettings;
+}
+
+declare class VisualLoggerCameraController extends DebugCameraController { 
+	PickedActor: Actor;
+	static GetDefaultObject(): VisualLoggerCameraController;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisualLoggerCameraController;
+	static C(Other: UObject | any): VisualLoggerCameraController;
+}
+
+declare class VisualLoggerHUD extends DebugCameraHUD { 
+	static GetDefaultObject(): VisualLoggerHUD;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisualLoggerHUD;
+	static C(Other: UObject | any): VisualLoggerHUD;
+}
+
+declare class VisualLoggerRenderingActor extends Actor { 
+	static GetDefaultObject(): VisualLoggerRenderingActor;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisualLoggerRenderingActor;
+	static C(Other: UObject | any): VisualLoggerRenderingActor;
+}
+
+declare class VisualLoggerRenderingComponent extends PrimitiveComponent { 
+	static Load(ResourceName: string): VisualLoggerRenderingComponent;
+	static Find(Outer: UObject, ResourceName: string): VisualLoggerRenderingComponent;
+	static GetDefaultObject(): VisualLoggerRenderingComponent;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VisualLoggerRenderingComponent;
+	static C(Other: UObject | any): VisualLoggerRenderingComponent;
+}
+
+declare class ClothPainterSettings extends MeshPaintSettings { 
+	ViewMin: number;
+	ViewMax: number;
+	bAutoViewRange: boolean;
+	AutoCalculatedViewMin: number;
+	AutoCalculatedViewMax: number;
+	ClothingAssets: ClothingAsset[];
+	bFlipNormal: boolean;
+	bCullBackface: boolean;
+	Opacity: number;
+	static Load(ResourceName: string): ClothPainterSettings;
+	static Find(Outer: UObject, ResourceName: string): ClothPainterSettings;
+	static GetDefaultObject(): ClothPainterSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClothPainterSettings;
+	static C(Other: UObject | any): ClothPainterSettings;
+}
+
+declare class ClothPaintTool_BrushSettings extends UObject { 
+	PaintValue: number;
+	static Load(ResourceName: string): ClothPaintTool_BrushSettings;
+	static Find(Outer: UObject, ResourceName: string): ClothPaintTool_BrushSettings;
+	static GetDefaultObject(): ClothPaintTool_BrushSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClothPaintTool_BrushSettings;
+	static C(Other: UObject | any): ClothPaintTool_BrushSettings;
+}
+
+declare class ClothPaintTool_GradientSettings extends UObject { 
+	GradientStartValue: number;
+	GradientEndValue: number;
+	bUseRegularBrush: boolean;
+	static Load(ResourceName: string): ClothPaintTool_GradientSettings;
+	static Find(Outer: UObject, ResourceName: string): ClothPaintTool_GradientSettings;
+	static GetDefaultObject(): ClothPaintTool_GradientSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClothPaintTool_GradientSettings;
+	static C(Other: UObject | any): ClothPaintTool_GradientSettings;
+}
+
+declare class ClothPaintTool_SmoothSettings extends UObject { 
+	Strength: number;
+	static Load(ResourceName: string): ClothPaintTool_SmoothSettings;
+	static Find(Outer: UObject, ResourceName: string): ClothPaintTool_SmoothSettings;
+	static GetDefaultObject(): ClothPaintTool_SmoothSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClothPaintTool_SmoothSettings;
+	static C(Other: UObject | any): ClothPaintTool_SmoothSettings;
+}
+
+declare class ClothPaintTool_FillSettings extends UObject { 
+	Threshold: number;
+	FillValue: number;
+	static Load(ResourceName: string): ClothPaintTool_FillSettings;
+	static Find(Outer: UObject, ResourceName: string): ClothPaintTool_FillSettings;
+	static GetDefaultObject(): ClothPaintTool_FillSettings;
+	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ClothPaintTool_FillSettings;
+	static C(Other: UObject | any): ClothPaintTool_FillSettings;
+}
+
 declare var Context : JavascriptContext;
 
 declare var Root : JavascriptEditorTick;
diff --git a/Examples/JavascriptPlayground.uproject b/Examples/JavascriptPlayground.uproject
index 07e0fdf..738bf52 100644
--- a/Examples/JavascriptPlayground.uproject
+++ b/Examples/JavascriptPlayground.uproject
@@ -1,6 +1,6 @@
 {
 	"FileVersion": 3,
-	"EngineAssociation": "4.17",
+	"EngineAssociation": "4.21",
 	"Category": "",
 	"Description": "",
 	"Modules": [
